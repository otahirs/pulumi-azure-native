import * as pulumi from "@pulumi/pulumi";
import * as azure_native from "@pulumi/azure-native";

const managedClusterService = new azure_native.servicefabric.ManagedClusterService("managedClusterService", {
    applicationName: "myApp",
    clusterName: "myCluster",
    location: "eastus",
    properties: {
        correlationScheme: [{
            scheme: "AlignedAffinity",
            serviceName: "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/managedclusters/myCluster/applications/myApp/services/myService1",
        }],
        defaultMoveCost: "Medium",
        instanceCount: 5,
        minInstanceCount: 3,
        minInstancePercentage: 30,
        partitionDescription: {
            partitionScheme: "Singleton",
        },
        placementConstraints: "NodeType==frontend",
        scalingPolicies: [{
            scalingMechanism: {
                kind: "ScalePartitionInstanceCount",
                maxInstanceCount: 9,
                minInstanceCount: 3,
                scaleIncrement: 2,
            },
            scalingTrigger: {
                kind: "AveragePartitionLoadTrigger",
                lowerLoadThreshold: 2,
                metricName: "metricName",
                scaleInterval: "00:01:00",
                upperLoadThreshold: 8,
            },
        }],
        serviceDnsName: "myservicednsname.myApp",
        serviceKind: "Stateless",
        serviceLoadMetrics: [{
            defaultLoad: 3,
            name: "metric1",
            weight: "Low",
        }],
        servicePackageActivationMode: "SharedProcess",
        servicePlacementPolicies: [{
            type: "NonPartiallyPlaceService",
        }],
        serviceTypeName: "myServiceType",
    },
    resourceGroupName: "resRg",
    serviceName: "myService",
    tags: {
        a: "b",
    },
});
