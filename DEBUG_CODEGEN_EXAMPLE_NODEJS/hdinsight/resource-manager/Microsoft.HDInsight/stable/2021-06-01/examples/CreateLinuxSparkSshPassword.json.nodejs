import * as pulumi from "@pulumi/pulumi";
import * as azure_native from "@pulumi/azure-native";

const cluster = new azure_native.hdinsight.Cluster("cluster", {
    clusterName: "cluster1",
    properties: {
        clusterDefinition: {
            componentVersion: {
                Spark: "2.0",
            },
            configurations: {
                gateway: {
                    "restAuthCredential.isEnabled": true,
                    "restAuthCredential.password": "**********",
                    "restAuthCredential.username": "admin",
                },
            },
            kind: "Spark",
        },
        clusterVersion: "3.5",
        computeProfile: {
            roles: [
                {
                    hardwareProfile: {
                        vmSize: "Standard_D12_V2",
                    },
                    minInstanceCount: 1,
                    name: "headnode",
                    osProfile: {
                        linuxOperatingSystemProfile: {
                            password: "**********",
                            username: "sshuser",
                        },
                    },
                    targetInstanceCount: 2,
                },
                {
                    hardwareProfile: {
                        vmSize: "Standard_D4_V2",
                    },
                    minInstanceCount: 1,
                    name: "workernode",
                    osProfile: {
                        linuxOperatingSystemProfile: {
                            password: "**********",
                            username: "sshuser",
                        },
                    },
                    targetInstanceCount: 4,
                },
            ],
        },
        osType: "Linux",
        storageProfile: {
            storageaccounts: [{
                container: "containername",
                isDefault: true,
                key: "storageapikey*",
                name: "mystorage.blob.core.windows.net",
            }],
        },
        tier: "Standard",
    },
    resourceGroupName: "rg1",
    tags: {
        key1: "val1",
    },
});
