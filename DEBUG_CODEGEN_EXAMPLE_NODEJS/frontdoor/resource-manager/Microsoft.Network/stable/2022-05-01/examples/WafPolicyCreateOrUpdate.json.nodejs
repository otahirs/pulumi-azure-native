import * as pulumi from "@pulumi/pulumi";
import * as azure_native from "@pulumi/azure-native";

const policy = new azure_native.network.Policy("policy", {
    customRules: {
        rules: [
            {
                action: "Block",
                matchConditions: [{
                    matchValue: [
                        "192.168.1.0/24",
                        "10.0.0.0/24",
                    ],
                    matchVariable: "RemoteAddr",
                    operator: "IPMatch",
                }],
                name: "Rule1",
                priority: 1,
                rateLimitThreshold: 1000,
                ruleType: "RateLimitRule",
            },
            {
                action: "Block",
                matchConditions: [
                    {
                        matchValue: ["CH"],
                        matchVariable: "RemoteAddr",
                        operator: "GeoMatch",
                    },
                    {
                        matchValue: ["windows"],
                        matchVariable: "RequestHeader",
                        operator: "Contains",
                        selector: "UserAgent",
                        transforms: ["Lowercase"],
                    },
                ],
                name: "Rule2",
                priority: 2,
                ruleType: "MatchRule",
            },
        ],
    },
    location: "WestUs",
    managedRules: {
        managedRuleSets: [{
            exclusions: [{
                matchVariable: "RequestHeaderNames",
                selector: "User-Agent",
                selectorMatchOperator: "Equals",
            }],
            ruleGroupOverrides: [{
                exclusions: [{
                    matchVariable: "RequestCookieNames",
                    selector: "token",
                    selectorMatchOperator: "StartsWith",
                }],
                ruleGroupName: "SQLI",
                rules: [
                    {
                        action: "Redirect",
                        enabledState: "Enabled",
                        exclusions: [{
                            matchVariable: "QueryStringArgNames",
                            selector: "query",
                            selectorMatchOperator: "Equals",
                        }],
                        ruleId: "942100",
                    },
                    {
                        enabledState: "Disabled",
                        ruleId: "942110",
                    },
                ],
            }],
            ruleSetAction: "Block",
            ruleSetType: "DefaultRuleSet",
            ruleSetVersion: "1.0",
        }],
    },
    policyName: "Policy1",
    policySettings: {
        customBlockResponseBody: "PGh0bWw+CjxoZWFkZXI+PHRpdGxlPkhlbGxvPC90aXRsZT48L2hlYWRlcj4KPGJvZHk+CkhlbGxvIHdvcmxkCjwvYm9keT4KPC9odG1sPg==",
        customBlockResponseStatusCode: 429,
        enabledState: "Enabled",
        mode: "Prevention",
        redirectUrl: "http://www.bing.com",
        requestBodyCheck: "Disabled",
    },
    resourceGroupName: "rg1",
    sku: {
        name: "Classic_AzureFrontDoor",
    },
});
