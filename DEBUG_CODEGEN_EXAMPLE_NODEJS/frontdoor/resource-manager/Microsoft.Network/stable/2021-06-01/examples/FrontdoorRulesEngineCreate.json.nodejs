import * as pulumi from "@pulumi/pulumi";
import * as azure_native from "@pulumi/azure-native";

const rulesEngine = new azure_native.network.RulesEngine("rulesEngine", {
    frontDoorName: "frontDoor1",
    resourceGroupName: "rg1",
    rules: [
        {
            action: {
                routeConfigurationOverride: {
                    customFragment: "fragment",
                    customHost: "www.bing.com",
                    customPath: "/api",
                    customQueryString: "a=b",
                    odataType: "#Microsoft.Azure.FrontDoor.Models.FrontdoorRedirectConfiguration",
                    redirectProtocol: "HttpsOnly",
                    redirectType: "Moved",
                },
            },
            matchConditions: [{
                rulesEngineMatchValue: ["CH"],
                rulesEngineMatchVariable: "RemoteAddr",
                rulesEngineOperator: "GeoMatch",
            }],
            matchProcessingBehavior: "Stop",
            name: "Rule1",
            priority: 1,
        },
        {
            action: {
                responseHeaderActions: [{
                    headerActionType: "Overwrite",
                    headerName: "Cache-Control",
                    value: "public, max-age=31536000",
                }],
            },
            matchConditions: [{
                rulesEngineMatchValue: ["jpg"],
                rulesEngineMatchVariable: "RequestFilenameExtension",
                rulesEngineOperator: "Equal",
                transforms: ["Lowercase"],
            }],
            name: "Rule2",
            priority: 2,
        },
        {
            action: {
                routeConfigurationOverride: {
                    backendPool: {
                        id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/frontDoors/frontDoor1/backendPools/backendPool1",
                    },
                    cacheConfiguration: {
                        cacheDuration: "P1DT12H20M30S",
                        dynamicCompression: "Disabled",
                        queryParameterStripDirective: "StripOnly",
                        queryParameters: "a=b,p=q",
                    },
                    forwardingProtocol: "HttpsOnly",
                    odataType: "#Microsoft.Azure.FrontDoor.Models.FrontdoorForwardingConfiguration",
                },
            },
            matchConditions: [{
                negateCondition: false,
                rulesEngineMatchValue: ["allowoverride"],
                rulesEngineMatchVariable: "RequestHeader",
                rulesEngineOperator: "Equal",
                selector: "Rules-Engine-Route-Forward",
                transforms: ["Lowercase"],
            }],
            name: "Rule3",
            priority: 3,
        },
    ],
    rulesEngineName: "rulesEngine1",
});
