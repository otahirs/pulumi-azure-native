import * as pulumi from "@pulumi/pulumi";
import * as azure_native from "@pulumi/azure-native";

const sqlManagedInstance = new azure_native.azurearcdata.SqlManagedInstance("sqlManagedInstance", {
    extendedLocation: {
        name: "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.ExtendedLocation/customLocations/arclocation",
        type: "CustomLocation",
    },
    location: "northeurope",
    properties: {
        activeDirectoryInformation: {
            keytabInformation: {
                keytab: "********",
            },
        },
        admin: "Admin user",
        basicLoginInformation: {
            password: "********",
            username: "username",
        },
        clusterId: "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.Kubernetes/connectedClusters/connectedk8s",
        endTime: "Instance end time",
        extensionId: "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.Kubernetes/connectedClusters/connectedk8s/providers/Microsoft.KubernetesConfiguration/extensions/extension",
        k8sRaw: {
            spec: {
                replicas: 1,
                scheduling: {
                    "default": {
                        resources: {
                            limits: {
                                additionalProperty: "additionalValue",
                                cpu: "1",
                                memory: "8Gi",
                            },
                            requests: {
                                additionalProperty: "additionalValue",
                                cpu: "1",
                                memory: "8Gi",
                            },
                        },
                    },
                },
                security: {
                    activeDirectory: {
                        accountName: "Account name",
                        connector: {
                            name: "Name of connector",
                            namespace: "Namespace of connector",
                        },
                        encryptionTypes: ["Encryption type item1, Encryption type item2,..."],
                        keytabSecret: "Key tab secret of account",
                    },
                    adminLoginSecret: "test-sql-login-secret",
                    serviceCertificateSecret: "Service Certificate Secret",
                    transparentDataEncryption: {
                        mode: "SystemManaged",
                    },
                },
                settings: {
                    network: {
                        forceencryption: 0,
                        tlsciphers: "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384",
                        tlsprotocols: "1.2",
                    },
                },
            },
        },
        licenseType: "LicenseIncluded",
        startTime: "Instance start time",
    },
    resourceGroupName: "testrg",
    sku: {
        dev: true,
        name: azure_native.azurearcdata.SqlManagedInstanceSkuName.VCore,
        tier: azure_native.azurearcdata.SqlManagedInstanceSkuTier.GeneralPurpose,
    },
    sqlManagedInstanceName: "testsqlManagedInstance",
    tags: {
        mytag: "myval",
    },
});
