import * as pulumi from "@pulumi/pulumi";
import * as azure_native from "@pulumi/azure-native";

const acssBackupConnection = new azure_native.workloads.ACSSBackupConnection("acssBackupConnection", {
    backupData: {
        backupPolicy: {
            backupManagementType: "AzureWorkload",
            name: "defaultHanaPolicy",
            protectedItemsCount: 0,
            settings: {
                isCompression: false,
                issqlcompression: false,
                timeZone: "UTC",
            },
            subProtectionPolicy: [
                {
                    policyType: "Full",
                    retentionPolicy: {
                        monthlySchedule: {
                            retentionDuration: {
                                count: 60,
                                durationType: "Months",
                            },
                            retentionScheduleFormatType: "Weekly",
                            retentionScheduleWeekly: {
                                daysOfTheWeek: [azure_native.workloads.DayOfWeek.Sunday],
                                weeksOfTheMonth: [azure_native.workloads.WeekOfMonth.First],
                            },
                            retentionTimes: ["2022-11-29T19:30:00.000Z"],
                        },
                        retentionPolicyType: "LongTermRetentionPolicy",
                        weeklySchedule: {
                            daysOfTheWeek: [azure_native.workloads.DayOfWeek.Sunday],
                            retentionDuration: {
                                count: 104,
                                durationType: "Weeks",
                            },
                            retentionTimes: ["2022-11-29T19:30:00.000Z"],
                        },
                        yearlySchedule: {
                            monthsOfYear: [azure_native.workloads.MonthOfYear.January],
                            retentionDuration: {
                                count: 10,
                                durationType: "Years",
                            },
                            retentionScheduleFormatType: "Weekly",
                            retentionScheduleWeekly: {
                                daysOfTheWeek: [azure_native.workloads.DayOfWeek.Sunday],
                                weeksOfTheMonth: [azure_native.workloads.WeekOfMonth.First],
                            },
                            retentionTimes: ["2022-11-29T19:30:00.000Z"],
                        },
                    },
                    schedulePolicy: {
                        schedulePolicyType: "SimpleSchedulePolicy",
                        scheduleRunDays: [azure_native.workloads.DayOfWeek.Sunday],
                        scheduleRunFrequency: "Weekly",
                        scheduleRunTimes: ["2022-11-29T19:30:00.000Z"],
                    },
                    tieringPolicy: {
                        ArchivedRP: {
                            tieringMode: "DoNotTier",
                        },
                    },
                },
                {
                    policyType: "Differential",
                    retentionPolicy: {
                        retentionDuration: {
                            count: 30,
                            durationType: "Days",
                        },
                        retentionPolicyType: "SimpleRetentionPolicy",
                    },
                    schedulePolicy: {
                        schedulePolicyType: "SimpleSchedulePolicy",
                        scheduleRunDays: [azure_native.workloads.DayOfWeek.Monday],
                        scheduleRunFrequency: "Weekly",
                        scheduleRunTimes: ["2022-09-29T02:00:00Z"],
                        scheduleWeeklyFrequency: 0,
                    },
                },
                {
                    policyType: "Log",
                    retentionPolicy: {
                        retentionDuration: {
                            count: 20,
                            durationType: "Days",
                        },
                        retentionPolicyType: "SimpleRetentionPolicy",
                    },
                    schedulePolicy: {
                        scheduleFrequencyInMins: 120,
                        schedulePolicyType: "LogSchedulePolicy",
                    },
                },
            ],
            workLoadType: "SAPHanaDatabase",
        },
        backupType: "HANA",
        dbInstanceSnapshotBackupPolicy: {
            backupManagementType: "AzureWorkload",
            name: "defaultDbInstanceSnapshotPolicy",
            settings: {
                isCompression: false,
                issqlcompression: false,
                timeZone: "UTC",
            },
            subProtectionPolicy: [{
                policyType: "SnapshotFull",
                schedulePolicy: {
                    schedulePolicyType: "SimpleSchedulePolicy",
                    scheduleRunFrequency: "Daily",
                    scheduleRunTimes: ["2023-09-18T06:30:00.000Z"],
                },
                snapshotBackupAdditionalDetails: {
                    instantRPDetails: "test-rg",
                    instantRpRetentionRangeInDays: 1,
                    userAssignedManagedIdentityDetails: {
                        identityArmId: "/subscriptions/6d875e77-e412-4d7d-9af4-8895278b4443/resourcegroups/test-rg/providers/Microsoft.ManagedIdentity/userAssignedIdentities/testMsi",
                        identityName: "testMsi",
                        userAssignedIdentityProperties: {
                            clientId: "c3a877cf-51f8-4031-8f17-ab562d1e7737",
                            principalId: "2f5834bd-4b86-4d85-a8df-6dd829a6418c",
                        },
                    },
                },
            }],
            workLoadType: "SAPHanaDBInstance",
        },
        hdbuserstoreKeyName: "abcd",
        instanceNumber: "00",
        recoveryServicesVault: {
            name: "test-vault",
            resourceGroup: "test-rg",
            vaultType: "New",
        },
        sslConfiguration: {
            sslCryptoProvider: "commoncrypto",
            sslHostNameInCertificate: "hostname",
            sslKeyStore: "sapsrv.pse",
            sslTrustStore: "sapsrv.pse",
        },
    },
    backupName: "dbBackup",
    connectorName: "C1",
    location: "westcentralus",
    resourceGroupName: "test-rg",
    tags: {},
});
