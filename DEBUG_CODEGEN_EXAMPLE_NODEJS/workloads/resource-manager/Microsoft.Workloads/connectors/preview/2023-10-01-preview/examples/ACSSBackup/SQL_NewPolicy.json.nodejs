import * as pulumi from "@pulumi/pulumi";
import * as azure_native from "@pulumi/azure-native";

const acssBackupConnection = new azure_native.workloads.ACSSBackupConnection("acssBackupConnection", {
    backupData: {
        backupPolicy: {
            backupManagementType: "AzureWorkload",
            name: "defaultSqlPolicy",
            protectedItemsCount: 0,
            settings: {
                isCompression: true,
                issqlcompression: true,
                timeZone: "UTC",
            },
            subProtectionPolicy: [
                {
                    policyType: "Full",
                    retentionPolicy: {
                        monthlySchedule: {
                            retentionDuration: {
                                count: 60,
                                durationType: "Months",
                            },
                            retentionScheduleFormatType: "Weekly",
                            retentionScheduleWeekly: {
                                daysOfTheWeek: [azure_native.workloads.DayOfWeek.Sunday],
                                weeksOfTheMonth: [azure_native.workloads.WeekOfMonth.First],
                            },
                            retentionTimes: ["2022-11-29T19:30:00.000Z"],
                        },
                        retentionPolicyType: "LongTermRetentionPolicy",
                        weeklySchedule: {
                            daysOfTheWeek: [azure_native.workloads.DayOfWeek.Sunday],
                            retentionDuration: {
                                count: 104,
                                durationType: "Weeks",
                            },
                            retentionTimes: ["2022-11-29T19:30:00.000Z"],
                        },
                        yearlySchedule: {
                            monthsOfYear: [azure_native.workloads.MonthOfYear.January],
                            retentionDuration: {
                                count: 10,
                                durationType: "Years",
                            },
                            retentionScheduleFormatType: "Weekly",
                            retentionScheduleWeekly: {
                                daysOfTheWeek: [azure_native.workloads.DayOfWeek.Sunday],
                                weeksOfTheMonth: [azure_native.workloads.WeekOfMonth.First],
                            },
                            retentionTimes: ["2022-11-29T19:30:00.000Z"],
                        },
                    },
                    schedulePolicy: {
                        schedulePolicyType: "SimpleSchedulePolicy",
                        scheduleRunDays: [azure_native.workloads.DayOfWeek.Sunday],
                        scheduleRunFrequency: "Weekly",
                        scheduleRunTimes: ["2022-11-29T19:30:00.000Z"],
                    },
                    tieringPolicy: {
                        ArchivedRP: {
                            duration: 45,
                            durationType: "Days",
                            tieringMode: "TierAfter",
                        },
                    },
                },
                {
                    policyType: "Differential",
                    retentionPolicy: {
                        retentionDuration: {
                            count: 30,
                            durationType: "Days",
                        },
                        retentionPolicyType: "SimpleRetentionPolicy",
                    },
                    schedulePolicy: {
                        schedulePolicyType: "SimpleSchedulePolicy",
                        scheduleRunDays: [azure_native.workloads.DayOfWeek.Monday],
                        scheduleRunFrequency: "Weekly",
                        scheduleRunTimes: ["2022-09-29T02:00:00Z"],
                        scheduleWeeklyFrequency: 0,
                    },
                },
                {
                    policyType: "Log",
                    retentionPolicy: {
                        retentionDuration: {
                            count: 20,
                            durationType: "Days",
                        },
                        retentionPolicyType: "SimpleRetentionPolicy",
                    },
                    schedulePolicy: {
                        scheduleFrequencyInMins: 120,
                        schedulePolicyType: "LogSchedulePolicy",
                    },
                },
            ],
            workLoadType: "SQLDataBase",
        },
        backupType: "SQL",
        recoveryServicesVault: {
            name: "test-vault",
            resourceGroup: "test-rg",
            vaultType: "New",
        },
    },
    backupName: "dbBackup",
    connectorName: "C1",
    location: "westcentralus",
    resourceGroupName: "test-rg",
    tags: {},
});
