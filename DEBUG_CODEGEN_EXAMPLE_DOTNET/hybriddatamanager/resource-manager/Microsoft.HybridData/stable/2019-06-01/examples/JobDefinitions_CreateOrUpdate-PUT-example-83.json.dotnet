using System.Collections.Generic;
using System.Linq;
using Pulumi;
using AzureNative = Pulumi.AzureNative;

return await Deployment.RunAsync(() => 
{
    var jobDefinition = new AzureNative.HybridData.JobDefinition("jobDefinition", new()
    {
        DataManagerName = "TestAzureSDKOperations",
        DataServiceInput = 
        {
            { "AzureStorageType", "Blob" },
            { "BackupChoice", "UseExistingLatest" },
            { "ContainerName", "containerfromtest" },
            { "DeviceName", "8600-SHG0997877L71FC" },
            { "FileNameFilter", "*" },
            { "IsDirectoryMode", false },
            { "RootDirectories", new[]
            {
                "\\",
            } },
            { "VolumeNames", new[]
            {
                "TestAutomation",
            } },
        },
        DataServiceName = "DataTransformation",
        DataSinkId = "/subscriptions/6e0219f5-327a-4365-904f-05eed4227ad7/resourceGroups/ResourceGroupForSDKTest/providers/Microsoft.HybridData/dataManagers/TestAzureSDKOperations/dataStores/TestAzureStorage1",
        DataSourceId = "/subscriptions/6e0219f5-327a-4365-904f-05eed4227ad7/resourceGroups/ResourceGroupForSDKTest/providers/Microsoft.HybridData/dataManagers/TestAzureSDKOperations/dataStores/TestStorSimpleSource1",
        JobDefinitionName = "jobdeffromtestcode1",
        ResourceGroupName = "ResourceGroupForSDKTest",
        RunLocation = AzureNative.HybridData.RunLocation.Westus,
        State = AzureNative.HybridData.State.Enabled,
        UserConfirmation = AzureNative.HybridData.UserConfirmation.Required,
    });

});

