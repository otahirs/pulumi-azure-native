using System.Collections.Generic;
using System.Linq;
using Pulumi;
using AzureNative = Pulumi.AzureNative;

return await Deployment.RunAsync(() => 
{
    var policyExemption = new AzureNative.Authorization.PolicyExemption("policyExemption", new()
    {
        AssignmentScopeValidation = "Default",
        Description = "Exempt demo cluster from limit sku",
        DisplayName = "Exempt demo cluster",
        ExemptionCategory = "Waiver",
        Metadata = 
        {
            { "reason", "Temporary exemption for a expensive VM demo" },
        },
        PolicyAssignmentId = "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyAssignments/CostManagement",
        PolicyDefinitionReferenceIds = new[]
        {
            "Limit_Skus",
        },
        PolicyExemptionName = "DemoExpensiveVM",
        ResourceSelectors = new[]
        {
            new AzureNative.Authorization.Inputs.ResourceSelectorArgs
            {
                Name = "SDPRegions",
                Selectors = new[]
                {
                    new AzureNative.Authorization.Inputs.SelectorArgs
                    {
                        In = new[]
                        {
                            "eastus2euap",
                            "centraluseuap",
                        },
                        Kind = "resourceLocation",
                    },
                },
            },
        },
        Scope = "subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/resourceGroups/demoCluster",
    });

});

