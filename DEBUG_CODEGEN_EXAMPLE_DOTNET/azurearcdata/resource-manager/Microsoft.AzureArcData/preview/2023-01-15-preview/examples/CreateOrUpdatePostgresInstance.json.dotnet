using System.Collections.Generic;
using System.Linq;
using Pulumi;
using AzureNative = Pulumi.AzureNative;

return await Deployment.RunAsync(() => 
{
    var postgresInstance = new AzureNative.AzureArcData.PostgresInstance("postgresInstance", new()
    {
        ExtendedLocation = new AzureNative.AzureArcData.Inputs.ExtendedLocationArgs
        {
            Name = "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.ExtendedLocation/customLocations/arclocation",
            Type = "CustomLocation",
        },
        Location = "eastus",
        PostgresInstanceName = "testpostgresInstance",
        Properties = new AzureNative.AzureArcData.Inputs.PostgresInstancePropertiesArgs
        {
            Admin = "admin",
            BasicLoginInformation = new AzureNative.AzureArcData.Inputs.BasicLoginInformationArgs
            {
                Password = "********",
                Username = "username",
            },
            DataControllerId = "dataControllerId",
            K8sRaw = 
            {
                { "apiVersion", "apiVersion" },
                { "kind", "postgresql-12" },
                { "metadata", 
                {
                    { "creationTimestamp", "2020-08-25T14:55:10Z" },
                    { "generation", 1 },
                    { "name", "pg1" },
                    { "namespace", "test" },
                    { "resourceVersion", "527780" },
                    { "selfLink", "/apis/arcdata.microsoft.com/v1alpha1/namespaces/test/postgresql-12s/pg1" },
                    { "uid", "1111aaaa-ffff-ffff-ffff-99999aaaaaaa" },
                } },
                { "spec", 
                {
                    { "backups", 
                    {
                        { "deltaMinutes", 3 },
                        { "fullMinutes", 10 },
                        { "tiers", new[]
                        {
                            
                            {
                                { "retention", 
                                {
                                    { "maximums", new[]
                                    {
                                        "6",
                                        "512MB",
                                    } },
                                    { "minimums", new[]
                                    {
                                        "3",
                                    } },
                                } },
                                { "storage", 
                                {
                                    { "volumeSize", "1Gi" },
                                } },
                            },
                        } },
                    } },
                    { "engine", 
                    {
                        { "extensions", new[]
                        {
                            
                            {
                                { "name", "citus" },
                            },
                        } },
                    } },
                    { "scale", 
                    {
                        { "shards", 3 },
                    } },
                    { "scheduling", 
                    {
                        { "default", 
                        {
                            { "resources", 
                            {
                                { "requests", 
                                {
                                    { "memory", "256Mi" },
                                } },
                            } },
                        } },
                    } },
                    { "service", 
                    {
                        { "type", "NodePort" },
                    } },
                    { "storage", 
                    {
                        { "data", 
                        {
                            { "className", "local-storage" },
                            { "size", "5Gi" },
                        } },
                        { "logs", 
                        {
                            { "className", "local-storage" },
                            { "size", "5Gi" },
                        } },
                    } },
                } },
                { "status", 
                {
                    { "externalEndpoint", null },
                    { "readyPods", "4/4" },
                    { "state", "Ready" },
                } },
            },
        },
        ResourceGroupName = "testrg",
        Sku = new AzureNative.AzureArcData.Inputs.PostgresInstanceSkuArgs
        {
            Dev = true,
            Name = "default",
            Tier = AzureNative.AzureArcData.PostgresInstanceSkuTier.Hyperscale,
        },
    });

});

