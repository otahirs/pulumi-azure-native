using System.Collections.Generic;
using System.Linq;
using Pulumi;
using AzureNative = Pulumi.AzureNative;

return await Deployment.RunAsync(() => 
{
    var automation = new AzureNative.Security.Automation("automation", new()
    {
        Actions = new[]
        {
            new AzureNative.Security.Inputs.AutomationActionLogicAppArgs
            {
                ActionType = "LogicApp",
                LogicAppResourceId = "/subscriptions/e54a4a18-5b94-4f90-9471-bd3decad8a2e/resourceGroups/sample/providers/Microsoft.Logic/workflows/MyTest1",
                Uri = "https://exampleTriggerUri1.com",
            },
        },
        AutomationName = "exampleAutomation",
        Description = "An example of a security automation that triggers one LogicApp resource (myTest1) on any high severity security assessment",
        IsEnabled = true,
        Location = "Central US",
        ResourceGroupName = "exampleResourceGroup",
        Scopes = new[]
        {
            new AzureNative.Security.Inputs.AutomationScopeArgs
            {
                Description = "A description that helps to identify this scope - for example: security assessments that relate to the resource group myResourceGroup within the subscription a5caac9c-5c04-49af-b3d0-e204f40345d5",
                ScopePath = "/subscriptions/a5caac9c-5c04-49af-b3d0-e204f40345d5/resourceGroups/myResourceGroup",
            },
        },
        Sources = new[]
        {
            new AzureNative.Security.Inputs.AutomationSourceArgs
            {
                EventSource = "Assessments",
                RuleSets = new[]
                {
                    new AzureNative.Security.Inputs.AutomationRuleSetArgs
                    {
                        Rules = new[]
                        {
                            new AzureNative.Security.Inputs.AutomationTriggeringRuleArgs
                            {
                                ExpectedValue = "High",
                                Operator = "Equals",
                                PropertyJPath = "properties.metadata.severity",
                                PropertyType = "String",
                            },
                        },
                    },
                },
            },
        },
        Tags = null,
    });

});

