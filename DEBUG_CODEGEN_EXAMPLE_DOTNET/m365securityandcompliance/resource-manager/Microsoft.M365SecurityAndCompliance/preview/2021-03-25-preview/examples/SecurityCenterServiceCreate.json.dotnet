using System.Collections.Generic;
using System.Linq;
using Pulumi;
using AzureNative = Pulumi.AzureNative;

return await Deployment.RunAsync(() => 
{
    var privateLinkServicesForM365SecurityCenter = new AzureNative.M365SecurityAndCompliance.PrivateLinkServicesForM365SecurityCenter("privateLinkServicesForM365SecurityCenter", new()
    {
        Identity = new AzureNative.M365SecurityAndCompliance.Inputs.ServicesResourceIdentityArgs
        {
            Type = "SystemAssigned",
        },
        Kind = AzureNative.M365SecurityAndCompliance.Kind.Fhir_R4,
        Location = "westus2",
        Properties = new AzureNative.M365SecurityAndCompliance.Inputs.ServicesPropertiesArgs
        {
            AccessPolicies = new[]
            {
                new AzureNative.M365SecurityAndCompliance.Inputs.ServiceAccessPolicyEntryArgs
                {
                    ObjectId = "c487e7d1-3210-41a3-8ccc-e9372b78da47",
                },
                new AzureNative.M365SecurityAndCompliance.Inputs.ServiceAccessPolicyEntryArgs
                {
                    ObjectId = "5b307da8-43d4-492b-8b66-b0294ade872f",
                },
            },
            AuthenticationConfiguration = new AzureNative.M365SecurityAndCompliance.Inputs.ServiceAuthenticationConfigurationInfoArgs
            {
                Audience = "https://azurehealthcareapis.com",
                Authority = "https://login.microsoftonline.com/abfde7b2-df0f-47e6-aabf-2462b07508dc",
                SmartProxyEnabled = true,
            },
            CorsConfiguration = new AzureNative.M365SecurityAndCompliance.Inputs.ServiceCorsConfigurationInfoArgs
            {
                AllowCredentials = false,
                Headers = new[]
                {
                    "*",
                },
                MaxAge = 1440,
                Methods = new[]
                {
                    "DELETE",
                    "GET",
                    "OPTIONS",
                    "PATCH",
                    "POST",
                    "PUT",
                },
                Origins = new[]
                {
                    "*",
                },
            },
            CosmosDbConfiguration = new AzureNative.M365SecurityAndCompliance.Inputs.ServiceCosmosDbConfigurationInfoArgs
            {
                KeyVaultKeyUri = "https://my-vault.vault.azure.net/keys/my-key",
                OfferThroughput = 1000,
            },
            ExportConfiguration = new AzureNative.M365SecurityAndCompliance.Inputs.ServiceExportConfigurationInfoArgs
            {
                StorageAccountName = "existingStorageAccount",
            },
            PrivateEndpointConnections = new() { },
            PublicNetworkAccess = "Disabled",
        },
        ResourceGroupName = "rg1",
        ResourceName = "service1",
        Tags = null,
    });

});

