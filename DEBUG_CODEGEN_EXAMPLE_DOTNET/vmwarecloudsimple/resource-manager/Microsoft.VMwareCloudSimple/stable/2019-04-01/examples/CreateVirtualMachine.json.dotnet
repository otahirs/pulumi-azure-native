using System.Collections.Generic;
using System.Linq;
using Pulumi;
using AzureNative = Pulumi.AzureNative;

return await Deployment.RunAsync(() => 
{
    var virtualMachine = new AzureNative.VMwareCloudSimple.VirtualMachine("virtualMachine", new()
    {
        AmountOfRam = 4096,
        Disks = new[]
        {
            new AzureNative.VMwareCloudSimple.Inputs.VirtualDiskArgs
            {
                ControllerId = "1000",
                IndependenceMode = AzureNative.VMwareCloudSimple.DiskIndependenceMode.Persistent,
                TotalSize = 10485760,
                VirtualDiskId = "2000",
            },
        },
        Location = "westus2",
        Nics = new[]
        {
            new AzureNative.VMwareCloudSimple.Inputs.VirtualNicArgs
            {
                Network = new AzureNative.VMwareCloudSimple.Inputs.VirtualNetworkArgs
                {
                    Id = "/subscriptions/{subscription-id}/providers/Microsoft.VMwareCloudSimple/locations/westus2/privateClouds/myPrivateCloud/virtualNetworks/dvportgroup-19",
                },
                NicType = AzureNative.VMwareCloudSimple.NICType.E1000,
                PowerOnBoot = true,
                VirtualNicId = "4000",
            },
        },
        NumberOfCores = 2,
        PrivateCloudId = "/subscriptions/{subscription-id}/providers/Microsoft.VMwareCloudSimple/locations/westus2/privateClouds/myPrivateCloud",
        ResourceGroupName = "myResourceGroup",
        ResourcePool = new AzureNative.VMwareCloudSimple.Inputs.ResourcePoolArgs
        {
            Id = "/subscriptions/{subscription-id}/providers/Microsoft.VMwareCloudSimple/locations/westus2/privateClouds/myPrivateCloud/resourcePools/resgroup-26",
        },
        TemplateId = "/subscriptions/{subscription-id}/providers/Microsoft.VMwareCloudSimple/locations/westus2/privateClouds/myPrivateCloud/virtualMachineTemplates/vm-34",
        VirtualMachineName = "myVirtualMachine",
    });

});

