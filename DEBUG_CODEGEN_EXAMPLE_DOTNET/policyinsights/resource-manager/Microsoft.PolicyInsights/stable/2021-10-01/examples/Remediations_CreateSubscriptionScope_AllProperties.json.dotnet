using System.Collections.Generic;
using System.Linq;
using Pulumi;
using AzureNative = Pulumi.AzureNative;

return await Deployment.RunAsync(() => 
{
    var remediationAtSubscription = new AzureNative.PolicyInsights.RemediationAtSubscription("remediationAtSubscription", new()
    {
        FailureThreshold = new AzureNative.PolicyInsights.Inputs.RemediationPropertiesFailureThresholdArgs
        {
            Percentage = 0.1,
        },
        Filters = new AzureNative.PolicyInsights.Inputs.RemediationFiltersArgs
        {
            Locations = new[]
            {
                "eastus",
                "westus",
            },
        },
        ParallelDeployments = 6,
        PolicyAssignmentId = "/subscriptions/35ee058e-5fa0-414c-8145-3ebb8d09b6e2/providers/microsoft.authorization/policyassignments/b101830944f246d8a14088c5",
        PolicyDefinitionReferenceId = "8c8fa9e4",
        RemediationName = "storageRemediation",
        ResourceCount = 42,
        ResourceDiscoveryMode = "ReEvaluateCompliance",
    });

});

