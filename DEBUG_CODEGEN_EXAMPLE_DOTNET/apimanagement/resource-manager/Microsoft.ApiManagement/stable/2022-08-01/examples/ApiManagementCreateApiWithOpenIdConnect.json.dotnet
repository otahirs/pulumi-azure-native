using System.Collections.Generic;
using System.Linq;
using Pulumi;
using AzureNative = Pulumi.AzureNative;

return await Deployment.RunAsync(() => 
{
    var api = new AzureNative.ApiManagement.Api("api", new()
    {
        ApiId = "tempgroup",
        AuthenticationSettings = new AzureNative.ApiManagement.Inputs.AuthenticationSettingsContractArgs
        {
            Openid = new AzureNative.ApiManagement.Inputs.OpenIdAuthenticationSettingsContractArgs
            {
                BearerTokenSendingMethods = new[]
                {
                    "authorizationHeader",
                },
                OpenidProviderId = "testopenid",
            },
        },
        Description = "This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.",
        DisplayName = "Swagger Petstore",
        Path = "petstore",
        Protocols = new[]
        {
            "https",
        },
        ResourceGroupName = "rg1",
        ServiceName = "apimService1",
        ServiceUrl = "http://petstore.swagger.io/v2",
        SubscriptionKeyParameterNames = new AzureNative.ApiManagement.Inputs.SubscriptionKeyParameterNamesContractArgs
        {
            Header = "Ocp-Apim-Subscription-Key",
            Query = "subscription-key",
        },
    });

});

