using System.Collections.Generic;
using System.Linq;
using Pulumi;
using AzureNative = Pulumi.AzureNative;

return await Deployment.RunAsync(() => 
{
    var workflow = new AzureNative.Logic.Workflow("workflow", new()
    {
        Definition = 
        {
            { "$schema", "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#" },
            { "actions", 
            {
                { "Find_pet_by_ID", 
                {
                    { "inputs", 
                    {
                        { "host", 
                        {
                            { "connection", 
                            {
                                { "name", "@parameters('$connections')['test-custom-connector']['connectionId']" },
                            } },
                        } },
                        { "method", "get" },
                        { "path", "/pet/@{encodeURIComponent('1')}" },
                    } },
                    { "runAfter", null },
                    { "type", "ApiConnection" },
                } },
            } },
            { "contentVersion", "1.0.0.0" },
            { "outputs", null },
            { "parameters", 
            {
                { "$connections", 
                {
                    { "defaultValue", null },
                    { "type", "Object" },
                } },
            } },
            { "triggers", 
            {
                { "manual", 
                {
                    { "inputs", 
                    {
                        { "schema", null },
                    } },
                    { "kind", "Http" },
                    { "type", "Request" },
                } },
            } },
        },
        IntegrationAccount = new AzureNative.Logic.Inputs.ResourceReferenceArgs
        {
            Id = "/subscriptions/34adfa4f-cedf-4dc0-ba29-b6d1a69ab345/resourceGroups/test-resource-group/providers/Microsoft.Logic/integrationAccounts/test-integration-account",
        },
        Location = "brazilsouth",
        Parameters = 
        {
            { "$connections", new AzureNative.Logic.Inputs.WorkflowParameterArgs
            {
                Value = 
                {
                    { "test-custom-connector", 
                    {
                        { "connectionId", "/subscriptions/34adfa4f-cedf-4dc0-ba29-b6d1a69ab345/resourceGroups/test-resource-group/providers/Microsoft.Web/connections/test-custom-connector" },
                        { "connectionName", "test-custom-connector" },
                        { "id", "/subscriptions/34adfa4f-cedf-4dc0-ba29-b6d1a69ab345/providers/Microsoft.Web/locations/brazilsouth/managedApis/test-custom-connector" },
                    } },
                },
            } },
        },
        ResourceGroupName = "test-resource-group",
        Tags = null,
        WorkflowName = "test-workflow",
    });

});

