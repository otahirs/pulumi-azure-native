using System.Collections.Generic;
using System.Linq;
using Pulumi;
using AzureNative = Pulumi.AzureNative;

return await Deployment.RunAsync(() => 
{
    var rosettaNetProcessConfiguration = new AzureNative.Logic.RosettaNetProcessConfiguration("rosettaNetProcessConfiguration", new()
    {
        ActivitySettings = new AzureNative.Logic.Inputs.RosettaNetPipActivitySettingsArgs
        {
            AcknowledgmentOfReceiptSettings = new AzureNative.Logic.Inputs.RosettaNetPipAcknowledgmentOfReceiptSettingsArgs
            {
                IsNonRepudiationRequired = false,
                TimeToAcknowledgeInSeconds = 600,
            },
            ActivityBehavior = new AzureNative.Logic.Inputs.RosettaNetPipActivityBehaviorArgs
            {
                ActionType = AzureNative.Logic.RosettaNetActionType.DoubleAction,
                IsAuthorizationRequired = false,
                IsSecuredTransportRequired = false,
                NonRepudiationOfOriginAndContent = false,
                PersistentConfidentialityScope = AzureNative.Logic.RosettaNetPipConfidentialityScope.None,
                ResponseType = AzureNative.Logic.RosettaNetResponseType.Async,
                RetryCount = 2,
                TimeToPerformInSeconds = 7200,
            },
            ActivityType = AzureNative.Logic.RosettaNetPipActivityType.RequestResponse,
        },
        Description = "Test description",
        InitiatorRoleSettings = new AzureNative.Logic.Inputs.RosettaNetPipRoleSettingsArgs
        {
            Action = "Purchase Order Request",
            BusinessDocument = new AzureNative.Logic.Inputs.RosettaNetPipBusinessDocumentArgs
            {
                Description = "A request to accept a purchase order for fulfillment..",
                Name = "Purchase Order Request",
                Version = "V02.02.00",
            },
            Description = "This partner role creates a demand for a product or service.",
            Role = "Buyer",
            RoleType = AzureNative.Logic.RosettaNetPipRoleType.Functional,
            Service = "Buyer Service",
            ServiceClassification = "Business Service",
        },
        IntegrationAccountName = "testia123",
        ProcessCode = "3A4",
        ProcessName = "Request Purchase Order",
        ProcessVersion = "V02.02.00",
        ResourceGroupName = "testrg123",
        ResponderRoleSettings = new AzureNative.Logic.Inputs.RosettaNetPipRoleSettingsArgs
        {
            Action = "Purchase Order Confirmation Action",
            BusinessDocument = new AzureNative.Logic.Inputs.RosettaNetPipBusinessDocumentArgs
            {
                Description = "Formally confirms the status of line item(s) in a Purchase Order. A Purchase Order line item may have one of the following states: accepted, rejected, or pending.",
                Name = "Purchase Order Confirmation",
                Version = "V02.02.00",
            },
            Description = "An organization that sells products to partners in the supply chain.",
            Role = "Seller",
            RoleType = AzureNative.Logic.RosettaNetPipRoleType.Organizational,
            Service = "Seller Service",
            ServiceClassification = "Business Service",
        },
        RosettaNetProcessConfigurationName = "3A4",
    });

});

