using System.Collections.Generic;
using System.Linq;
using Pulumi;
using AzureNative = Pulumi.AzureNative;

return await Deployment.RunAsync(() => 
{
    var service = new AzureNative.Search.Service("service", new()
    {
        AuthOptions = new AzureNative.Search.Inputs.DataPlaneAuthOptionsArgs
        {
            AadOrApiKey = new AzureNative.Search.Inputs.DataPlaneAadOrApiKeyAuthOptionArgs
            {
                AadAuthFailureMode = AzureNative.Search.AadAuthFailureMode.Http401WithBearerChallenge,
            },
        },
        HostingMode = AzureNative.Search.HostingMode.Default,
        Location = "westus",
        PartitionCount = 1,
        ReplicaCount = 3,
        ResourceGroupName = "rg1",
        SearchServiceName = "mysearchservice",
        Sku = new AzureNative.Search.Inputs.SkuArgs
        {
            Name = AzureNative.Search.SkuName.Standard,
        },
        Tags = 
        {
            { "app-name", "My e-commerce app" },
        },
    });

});

