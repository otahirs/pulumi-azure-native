using System.Collections.Generic;
using System.Linq;
using Pulumi;
using AzureNative = Pulumi.AzureNative;

return await Deployment.RunAsync(() => 
{
    var monitor = new AzureNative.Workloads.Monitor("monitor", new()
    {
        AppLocation = "westus",
        Location = "westus",
        LogAnalyticsWorkspaceArmId = "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/myResourceGroup/providers/microsoft.operationalinsights/workspaces/myWorkspace",
        ManagedResourceGroupConfiguration = new AzureNative.Workloads.Inputs.ManagedRGConfigurationArgs
        {
            Name = "myManagedRg",
        },
        MonitorName = "mySapMonitor",
        MonitorSubnet = "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/myVnet/subnets/mySubnet",
        ResourceGroupName = "myResourceGroup",
        RoutingPreference = "RouteAll",
        Tags = 
        {
            { "key", "value" },
        },
    });

});

