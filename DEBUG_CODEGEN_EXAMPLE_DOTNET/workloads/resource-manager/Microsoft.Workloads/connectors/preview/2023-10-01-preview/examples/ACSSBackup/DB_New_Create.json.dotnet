using System.Collections.Generic;
using System.Linq;
using Pulumi;
using AzureNative = Pulumi.AzureNative;

return await Deployment.RunAsync(() => 
{
    var acssBackupConnection = new AzureNative.Workloads.ACSSBackupConnection("acssBackupConnection", new()
    {
        BackupData = new AzureNative.Workloads.Inputs.SqlBackupDataArgs
        {
            BackupPolicy = new AzureNative.Workloads.Inputs.DBBackupPolicyPropertiesArgs
            {
                BackupManagementType = "AzureWorkload",
                Name = "defaultDbPolicy",
                ProtectedItemsCount = 0,
                Settings = new AzureNative.Workloads.Inputs.SettingsArgs
                {
                    IsCompression = false,
                    Issqlcompression = false,
                    TimeZone = "UTC",
                },
                SubProtectionPolicy = new[]
                {
                    new AzureNative.Workloads.Inputs.SubProtectionPolicyArgs
                    {
                        PolicyType = "Full",
                        RetentionPolicy = new AzureNative.Workloads.Inputs.LongTermRetentionPolicyArgs
                        {
                            DailySchedule = new AzureNative.Workloads.Inputs.DailyRetentionScheduleArgs
                            {
                                RetentionDuration = new AzureNative.Workloads.Inputs.RetentionDurationArgs
                                {
                                    Count = 30,
                                    DurationType = "Days",
                                },
                                RetentionTimes = new[]
                                {
                                    "2018-01-10T18:30:00Z",
                                },
                            },
                            RetentionPolicyType = "LongTermRetentionPolicy",
                        },
                        SchedulePolicy = new AzureNative.Workloads.Inputs.SimpleSchedulePolicyArgs
                        {
                            SchedulePolicyType = "SimpleSchedulePolicy",
                            ScheduleRunFrequency = "Daily",
                            ScheduleRunTimes = new[]
                            {
                                "2018-01-10T18:30:00Z",
                            },
                            ScheduleWeeklyFrequency = 0,
                        },
                    },
                    new AzureNative.Workloads.Inputs.SubProtectionPolicyArgs
                    {
                        PolicyType = "Log",
                        RetentionPolicy = new AzureNative.Workloads.Inputs.SimpleRetentionPolicyArgs
                        {
                            RetentionDuration = new AzureNative.Workloads.Inputs.RetentionDurationArgs
                            {
                                Count = 30,
                                DurationType = "Days",
                            },
                            RetentionPolicyType = "SimpleRetentionPolicy",
                        },
                        SchedulePolicy = new AzureNative.Workloads.Inputs.LogSchedulePolicyArgs
                        {
                            ScheduleFrequencyInMins = 60,
                            SchedulePolicyType = "LogSchedulePolicy",
                        },
                    },
                },
                WorkLoadType = "SQLDataBase",
            },
            BackupType = "SQL",
            RecoveryServicesVault = new AzureNative.Workloads.Inputs.ExistingRecoveryServicesVaultArgs
            {
                Id = "/subscriptions/6d875e77-e412-4d7d-9af4-8895278b4443/resourceGroups/test-rg/providers/Microsoft.RecoveryServices/vaults/test-vault",
                VaultType = "Existing",
            },
        },
        BackupName = "dbBackup",
        ConnectorName = "C1",
        Location = "westcentralus",
        ResourceGroupName = "test-rg",
        Tags = null,
    });

});

