using System.Collections.Generic;
using System.Linq;
using Pulumi;
using AzureNative = Pulumi.AzureNative;

return await Deployment.RunAsync(() => 
{
    var autoscaleSetting = new AzureNative.Insights.AutoscaleSetting("autoscaleSetting", new()
    {
        AutoscaleSettingName = "MySetting",
        Enabled = true,
        Location = "West US",
        Notifications = new[]
        {
            new AzureNative.Insights.Inputs.AutoscaleNotificationArgs
            {
                Email = new AzureNative.Insights.Inputs.EmailNotificationArgs
                {
                    CustomEmails = new[]
                    {
                        "gu@ms.com",
                        "ge@ns.net",
                    },
                    SendToSubscriptionAdministrator = true,
                    SendToSubscriptionCoAdministrators = true,
                },
                Operation = AzureNative.Insights.OperationType.Scale,
                Webhooks = new[]
                {
                    new AzureNative.Insights.Inputs.WebhookNotificationArgs
                    {
                        Properties = null,
                        ServiceUri = "http://myservice.com",
                    },
                },
            },
        },
        PredictiveAutoscalePolicy = new AzureNative.Insights.Inputs.PredictiveAutoscalePolicyArgs
        {
            ScaleMode = AzureNative.Insights.PredictiveAutoscalePolicyScaleMode.Enabled,
        },
        Profiles = new[]
        {
            new AzureNative.Insights.Inputs.AutoscaleProfileArgs
            {
                Capacity = new AzureNative.Insights.Inputs.ScaleCapacityArgs
                {
                    Default = "1",
                    Maximum = "10",
                    Minimum = "1",
                },
                FixedDate = new AzureNative.Insights.Inputs.TimeWindowArgs
                {
                    End = "2015-03-05T14:30:00Z",
                    Start = "2015-03-05T14:00:00Z",
                    TimeZone = "UTC",
                },
                Name = "adios",
                Rules = new[]
                {
                    new AzureNative.Insights.Inputs.ScaleRuleArgs
                    {
                        MetricTrigger = new AzureNative.Insights.Inputs.MetricTriggerArgs
                        {
                            DividePerInstance = false,
                            MetricName = "Percentage CPU",
                            MetricResourceUri = "/subscriptions/b67f7fec-69fc-4974-9099-a26bd6ffeda3/resourceGroups/TestingMetricsScaleSet/providers/Microsoft.Compute/virtualMachineScaleSets/testingsc",
                            Operator = AzureNative.Insights.ComparisonOperationType.GreaterThan,
                            Statistic = AzureNative.Insights.MetricStatisticType.Average,
                            Threshold = 10,
                            TimeAggregation = AzureNative.Insights.TimeAggregationType.Average,
                            TimeGrain = "PT1M",
                            TimeWindow = "PT5M",
                        },
                        ScaleAction = new AzureNative.Insights.Inputs.ScaleActionArgs
                        {
                            Cooldown = "PT5M",
                            Direction = AzureNative.Insights.ScaleDirection.Increase,
                            Type = AzureNative.Insights.ScaleType.ChangeCount,
                            Value = "1",
                        },
                    },
                    new AzureNative.Insights.Inputs.ScaleRuleArgs
                    {
                        MetricTrigger = new AzureNative.Insights.Inputs.MetricTriggerArgs
                        {
                            DividePerInstance = false,
                            MetricName = "Percentage CPU",
                            MetricResourceUri = "/subscriptions/b67f7fec-69fc-4974-9099-a26bd6ffeda3/resourceGroups/TestingMetricsScaleSet/providers/Microsoft.Compute/virtualMachineScaleSets/testingsc",
                            Operator = AzureNative.Insights.ComparisonOperationType.GreaterThan,
                            Statistic = AzureNative.Insights.MetricStatisticType.Average,
                            Threshold = 15,
                            TimeAggregation = AzureNative.Insights.TimeAggregationType.Average,
                            TimeGrain = "PT2M",
                            TimeWindow = "PT5M",
                        },
                        ScaleAction = new AzureNative.Insights.Inputs.ScaleActionArgs
                        {
                            Cooldown = "PT6M",
                            Direction = AzureNative.Insights.ScaleDirection.Decrease,
                            Type = AzureNative.Insights.ScaleType.ChangeCount,
                            Value = "2",
                        },
                    },
                },
            },
            new AzureNative.Insights.Inputs.AutoscaleProfileArgs
            {
                Capacity = new AzureNative.Insights.Inputs.ScaleCapacityArgs
                {
                    Default = "1",
                    Maximum = "10",
                    Minimum = "1",
                },
                Name = "saludos",
                Recurrence = new AzureNative.Insights.Inputs.RecurrenceArgs
                {
                    Frequency = AzureNative.Insights.RecurrenceFrequency.Week,
                    Schedule = new AzureNative.Insights.Inputs.RecurrentScheduleArgs
                    {
                        Days = new[]
                        {
                            "1",
                        },
                        Hours = new[]
                        {
                            5,
                        },
                        Minutes = new[]
                        {
                            15,
                        },
                        TimeZone = "UTC",
                    },
                },
                Rules = new[]
                {
                    new AzureNative.Insights.Inputs.ScaleRuleArgs
                    {
                        MetricTrigger = new AzureNative.Insights.Inputs.MetricTriggerArgs
                        {
                            DividePerInstance = false,
                            MetricName = "Percentage CPU",
                            MetricResourceUri = "/subscriptions/b67f7fec-69fc-4974-9099-a26bd6ffeda3/resourceGroups/TestingMetricsScaleSet/providers/Microsoft.Compute/virtualMachineScaleSets/testingsc",
                            Operator = AzureNative.Insights.ComparisonOperationType.GreaterThan,
                            Statistic = AzureNative.Insights.MetricStatisticType.Average,
                            Threshold = 10,
                            TimeAggregation = AzureNative.Insights.TimeAggregationType.Average,
                            TimeGrain = "PT1M",
                            TimeWindow = "PT5M",
                        },
                        ScaleAction = new AzureNative.Insights.Inputs.ScaleActionArgs
                        {
                            Cooldown = "PT5M",
                            Direction = AzureNative.Insights.ScaleDirection.Increase,
                            Type = AzureNative.Insights.ScaleType.ChangeCount,
                            Value = "1",
                        },
                    },
                    new AzureNative.Insights.Inputs.ScaleRuleArgs
                    {
                        MetricTrigger = new AzureNative.Insights.Inputs.MetricTriggerArgs
                        {
                            DividePerInstance = false,
                            MetricName = "Percentage CPU",
                            MetricResourceUri = "/subscriptions/b67f7fec-69fc-4974-9099-a26bd6ffeda3/resourceGroups/TestingMetricsScaleSet/providers/Microsoft.Compute/virtualMachineScaleSets/testingsc",
                            Operator = AzureNative.Insights.ComparisonOperationType.GreaterThan,
                            Statistic = AzureNative.Insights.MetricStatisticType.Average,
                            Threshold = 15,
                            TimeAggregation = AzureNative.Insights.TimeAggregationType.Average,
                            TimeGrain = "PT2M",
                            TimeWindow = "PT5M",
                        },
                        ScaleAction = new AzureNative.Insights.Inputs.ScaleActionArgs
                        {
                            Cooldown = "PT6M",
                            Direction = AzureNative.Insights.ScaleDirection.Decrease,
                            Type = AzureNative.Insights.ScaleType.ChangeCount,
                            Value = "2",
                        },
                    },
                },
            },
        },
        ResourceGroupName = "TestingMetricsScaleSet",
        Tags = 
        {
            { "key1", "value1" },
            { "key2", "value2" },
        },
        TargetResourceUri = "/subscriptions/b67f7fec-69fc-4974-9099-a26bd6ffeda3/resourceGroups/TestingMetricsScaleSet/providers/Microsoft.Compute/virtualMachineScaleSets/testingsc",
    });

});

