using System.Collections.Generic;
using System.Linq;
using Pulumi;
using AzureNative = Pulumi.AzureNative;

return await Deployment.RunAsync(() => 
{
    var activityLogAlert = new AzureNative.Insights.ActivityLogAlert("activityLogAlert", new()
    {
        Actions = new AzureNative.Insights.Inputs.ActionListArgs
        {
            ActionGroups = new[]
            {
                new AzureNative.Insights.Inputs.ActionGroupArgs
                {
                    ActionGroupId = "/subscriptions/187f412d-1758-44d9-b052-169e2564721d/resourceGroups/MyResourceGroup/providers/Microsoft.Insights/actionGroups/SampleActionGroup",
                    WebhookProperties = 
                    {
                        { "sampleWebhookProperty", "SamplePropertyValue" },
                    },
                },
            },
        },
        ActivityLogAlertName = "SampleActivityLogAlertRuleWithAnyOfCondition",
        Condition = new AzureNative.Insights.Inputs.AlertRuleAllOfConditionArgs
        {
            AllOf = new[]
            {
                new AzureNative.Insights.Inputs.AlertRuleAnyOfOrLeafConditionArgs
                {
                    Equals = "ServiceHealth",
                    Field = "category",
                },
                new AzureNative.Insights.Inputs.AlertRuleAnyOfOrLeafConditionArgs
                {
                    AnyOf = new[]
                    {
                        new AzureNative.Insights.Inputs.AlertRuleLeafConditionArgs
                        {
                            Equals = "Incident",
                            Field = "properties.incidentType",
                        },
                        new AzureNative.Insights.Inputs.AlertRuleLeafConditionArgs
                        {
                            Equals = "Maintenance",
                            Field = "properties.incidentType",
                        },
                    },
                },
            },
        },
        Description = "Description of sample Activity Log Alert rule with 'anyOf' condition.",
        Enabled = true,
        Location = "Global",
        ResourceGroupName = "MyResourceGroup",
        Scopes = new[]
        {
            "subscriptions/187f412d-1758-44d9-b052-169e2564721d",
        },
        Tags = null,
    });

});

