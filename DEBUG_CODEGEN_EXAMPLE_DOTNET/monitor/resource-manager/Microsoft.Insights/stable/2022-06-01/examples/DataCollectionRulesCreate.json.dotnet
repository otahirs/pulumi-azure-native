using System.Collections.Generic;
using System.Linq;
using Pulumi;
using AzureNative = Pulumi.AzureNative;

return await Deployment.RunAsync(() => 
{
    var dataCollectionRule = new AzureNative.Insights.DataCollectionRule("dataCollectionRule", new()
    {
        DataCollectionRuleName = "myCollectionRule",
        DataFlows = new[]
        {
            new AzureNative.Insights.Inputs.DataFlowArgs
            {
                Destinations = new[]
                {
                    "centralWorkspace",
                },
                Streams = new[]
                {
                    "Microsoft-Perf",
                    "Microsoft-Syslog",
                    "Microsoft-WindowsEvent",
                },
            },
        },
        DataSources = new AzureNative.Insights.Inputs.DataCollectionRuleDataSourcesArgs
        {
            PerformanceCounters = new[]
            {
                new AzureNative.Insights.Inputs.PerfCounterDataSourceArgs
                {
                    CounterSpecifiers = new[]
                    {
                        "\\Processor(_Total)\\% Processor Time",
                        "\\Memory\\Committed Bytes",
                        "\\LogicalDisk(_Total)\\Free Megabytes",
                        "\\PhysicalDisk(_Total)\\Avg. Disk Queue Length",
                    },
                    Name = "cloudTeamCoreCounters",
                    SamplingFrequencyInSeconds = 15,
                    Streams = new[]
                    {
                        "Microsoft-Perf",
                    },
                },
                new AzureNative.Insights.Inputs.PerfCounterDataSourceArgs
                {
                    CounterSpecifiers = new[]
                    {
                        "\\Process(_Total)\\Thread Count",
                    },
                    Name = "appTeamExtraCounters",
                    SamplingFrequencyInSeconds = 30,
                    Streams = new[]
                    {
                        "Microsoft-Perf",
                    },
                },
            },
            Syslog = new[]
            {
                new AzureNative.Insights.Inputs.SyslogDataSourceArgs
                {
                    FacilityNames = new[]
                    {
                        "cron",
                    },
                    LogLevels = new[]
                    {
                        "Debug",
                        "Critical",
                        "Emergency",
                    },
                    Name = "cronSyslog",
                    Streams = new[]
                    {
                        "Microsoft-Syslog",
                    },
                },
                new AzureNative.Insights.Inputs.SyslogDataSourceArgs
                {
                    FacilityNames = new[]
                    {
                        "syslog",
                    },
                    LogLevels = new[]
                    {
                        "Alert",
                        "Critical",
                        "Emergency",
                    },
                    Name = "syslogBase",
                    Streams = new[]
                    {
                        "Microsoft-Syslog",
                    },
                },
            },
            WindowsEventLogs = new[]
            {
                new AzureNative.Insights.Inputs.WindowsEventLogDataSourceArgs
                {
                    Name = "cloudSecurityTeamEvents",
                    Streams = new[]
                    {
                        "Microsoft-WindowsEvent",
                    },
                    XPathQueries = new[]
                    {
                        "Security!",
                    },
                },
                new AzureNative.Insights.Inputs.WindowsEventLogDataSourceArgs
                {
                    Name = "appTeam1AppEvents",
                    Streams = new[]
                    {
                        "Microsoft-WindowsEvent",
                    },
                    XPathQueries = new[]
                    {
                        "System![System[(Level = 1 or Level = 2 or Level = 3)]]",
                        "Application!*[System[(Level = 1 or Level = 2 or Level = 3)]]",
                    },
                },
            },
        },
        Destinations = new AzureNative.Insights.Inputs.DataCollectionRuleDestinationsArgs
        {
            LogAnalytics = new[]
            {
                new AzureNative.Insights.Inputs.LogAnalyticsDestinationArgs
                {
                    Name = "centralWorkspace",
                    WorkspaceResourceId = "/subscriptions/703362b3-f278-4e4b-9179-c76eaf41ffc2/resourceGroups/myResourceGroup/providers/Microsoft.OperationalInsights/workspaces/centralTeamWorkspace",
                },
            },
        },
        Location = "eastus",
        ResourceGroupName = "myResourceGroup",
    });

});

