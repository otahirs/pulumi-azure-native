using System.Collections.Generic;
using System.Linq;
using Pulumi;
using AzureNative = Pulumi.AzureNative;

return await Deployment.RunAsync(() => 
{
    var diagnosticSetting = new AzureNative.AadIam.DiagnosticSetting("diagnosticSetting", new()
    {
        EventHubAuthorizationRuleId = "/subscriptions/1a66ce04-b633-4a0b-b2bc-a912ec8986a6/resourceGroups/montest/providers/microsoft.eventhub/namespaces/mynamespace/eventhubs/myeventhub/authorizationrules/myrule",
        EventHubName = "myeventhub",
        Logs = new[]
        {
            new AzureNative.AadIam.Inputs.LogSettingsArgs
            {
                Category = "AuditLogs",
                Enabled = true,
                RetentionPolicy = new AzureNative.AadIam.Inputs.RetentionPolicyArgs
                {
                    Days = 0,
                    Enabled = false,
                },
            },
        },
        Name = "mysetting",
        StorageAccountId = "/subscriptions/df602c9c-7aa0-407d-a6fb-eb20c8bd1192/resourceGroups/apptest/providers/Microsoft.Storage/storageAccounts/appteststorage1",
        WorkspaceId = "",
    });

});

