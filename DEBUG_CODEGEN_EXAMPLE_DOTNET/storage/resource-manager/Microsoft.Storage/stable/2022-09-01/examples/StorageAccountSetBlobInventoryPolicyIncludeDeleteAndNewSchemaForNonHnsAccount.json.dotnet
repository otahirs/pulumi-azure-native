using System.Collections.Generic;
using System.Linq;
using Pulumi;
using AzureNative = Pulumi.AzureNative;

return await Deployment.RunAsync(() => 
{
    var blobInventoryPolicy = new AzureNative.Storage.BlobInventoryPolicy("blobInventoryPolicy", new()
    {
        AccountName = "sto9699",
        BlobInventoryPolicyName = "default",
        Policy = new AzureNative.Storage.Inputs.BlobInventoryPolicySchemaArgs
        {
            Enabled = true,
            Rules = new[]
            {
                new AzureNative.Storage.Inputs.BlobInventoryPolicyRuleArgs
                {
                    Definition = new AzureNative.Storage.Inputs.BlobInventoryPolicyDefinitionArgs
                    {
                        Filters = new AzureNative.Storage.Inputs.BlobInventoryPolicyFilterArgs
                        {
                            BlobTypes = new[]
                            {
                                "blockBlob",
                                "appendBlob",
                                "pageBlob",
                            },
                            ExcludePrefix = new[]
                            {
                                "excludeprefix1",
                                "excludeprefix2",
                            },
                            IncludeBlobVersions = true,
                            IncludeDeleted = true,
                            IncludeSnapshots = true,
                            PrefixMatch = new[]
                            {
                                "inventoryprefix1",
                                "inventoryprefix2",
                            },
                        },
                        Format = "Csv",
                        ObjectType = "Blob",
                        Schedule = "Daily",
                        SchemaFields = new[]
                        {
                            "Name",
                            "Creation-Time",
                            "Last-Modified",
                            "Content-Length",
                            "Content-MD5",
                            "BlobType",
                            "AccessTier",
                            "AccessTierChangeTime",
                            "Snapshot",
                            "VersionId",
                            "IsCurrentVersion",
                            "Tags",
                            "ContentType",
                            "ContentEncoding",
                            "ContentLanguage",
                            "ContentCRC64",
                            "CacheControl",
                            "Metadata",
                            "Deleted",
                            "RemainingRetentionDays",
                        },
                    },
                    Destination = "container1",
                    Enabled = true,
                    Name = "inventoryPolicyRule1",
                },
                new AzureNative.Storage.Inputs.BlobInventoryPolicyRuleArgs
                {
                    Definition = new AzureNative.Storage.Inputs.BlobInventoryPolicyDefinitionArgs
                    {
                        Format = "Parquet",
                        ObjectType = "Container",
                        Schedule = "Weekly",
                        SchemaFields = new[]
                        {
                            "Name",
                            "Last-Modified",
                            "Metadata",
                            "LeaseStatus",
                            "LeaseState",
                            "LeaseDuration",
                            "PublicAccess",
                            "HasImmutabilityPolicy",
                            "HasLegalHold",
                            "Etag",
                            "DefaultEncryptionScope",
                            "DenyEncryptionScopeOverride",
                            "ImmutableStorageWithVersioningEnabled",
                            "Deleted",
                            "Version",
                            "DeletedTime",
                            "RemainingRetentionDays",
                        },
                    },
                    Destination = "container2",
                    Enabled = true,
                    Name = "inventoryPolicyRule2",
                },
            },
            Type = "Inventory",
        },
        ResourceGroupName = "res7687",
    });

});

