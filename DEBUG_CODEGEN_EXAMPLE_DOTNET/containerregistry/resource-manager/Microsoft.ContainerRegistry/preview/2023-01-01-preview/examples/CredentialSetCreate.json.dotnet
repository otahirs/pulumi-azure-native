using System.Collections.Generic;
using System.Linq;
using Pulumi;
using AzureNative = Pulumi.AzureNative;

return await Deployment.RunAsync(() => 
{
    var credentialSet = new AzureNative.ContainerRegistry.CredentialSet("credentialSet", new()
    {
        AuthCredentials = new[]
        {
            new AzureNative.ContainerRegistry.Inputs.AuthCredentialArgs
            {
                Name = "Credential1",
                PasswordSecretIdentifier = "https://myvault.vault.azure.net/secrets/password",
                UsernameSecretIdentifier = "https://myvault.vault.azure.net/secrets/username",
            },
        },
        CredentialSetName = "myCredentialSet",
        Identity = new AzureNative.ContainerRegistry.Inputs.IdentityPropertiesArgs
        {
            Type = AzureNative.ContainerRegistry.ResourceIdentityType.SystemAssigned,
        },
        LoginServer = "docker.io",
        RegistryName = "myRegistry",
        ResourceGroupName = "myResourceGroup",
    });

});

