using System.Collections.Generic;
using System.Linq;
using Pulumi;
using AzureNative = Pulumi.AzureNative;

return await Deployment.RunAsync(() => 
{
    var webPubSub = new AzureNative.WebPubSub.WebPubSub("webPubSub", new()
    {
        DisableAadAuth = false,
        DisableLocalAuth = false,
        Identity = new AzureNative.WebPubSub.Inputs.ManagedIdentityArgs
        {
            Type = "SystemAssigned",
        },
        LiveTraceConfiguration = new AzureNative.WebPubSub.Inputs.LiveTraceConfigurationArgs
        {
            Categories = new[]
            {
                new AzureNative.WebPubSub.Inputs.LiveTraceCategoryArgs
                {
                    Enabled = "true",
                    Name = "ConnectivityLogs",
                },
            },
            Enabled = "false",
        },
        Location = "eastus",
        NetworkACLs = new AzureNative.WebPubSub.Inputs.WebPubSubNetworkACLsArgs
        {
            DefaultAction = "Deny",
            PrivateEndpoints = new[]
            {
                new AzureNative.WebPubSub.Inputs.PrivateEndpointACLArgs
                {
                    Allow = new[]
                    {
                        "ServerConnection",
                    },
                    Name = "mywebpubsubservice.1fa229cd-bf3f-47f0-8c49-afb36723997e",
                },
            },
            PublicNetwork = new AzureNative.WebPubSub.Inputs.NetworkACLArgs
            {
                Allow = new[]
                {
                    "ClientConnection",
                },
            },
        },
        PublicNetworkAccess = "Enabled",
        ResourceGroupName = "myResourceGroup",
        ResourceName = "myWebPubSubService",
        Sku = new AzureNative.WebPubSub.Inputs.ResourceSkuArgs
        {
            Capacity = 1,
            Name = "Premium_P1",
            Tier = "Premium",
        },
        Tags = 
        {
            { "key1", "value1" },
        },
        Tls = new AzureNative.WebPubSub.Inputs.WebPubSubTlsSettingsArgs
        {
            ClientCertEnabled = false,
        },
    });

});

