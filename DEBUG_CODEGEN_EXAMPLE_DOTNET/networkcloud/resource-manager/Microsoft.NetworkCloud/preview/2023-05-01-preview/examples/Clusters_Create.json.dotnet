using System.Collections.Generic;
using System.Linq;
using Pulumi;
using AzureNative = Pulumi.AzureNative;

return await Deployment.RunAsync(() => 
{
    var cluster = new AzureNative.NetworkCloud.Cluster("cluster", new()
    {
        AggregatorOrSingleRackDefinition = new AzureNative.NetworkCloud.Inputs.RackDefinitionArgs
        {
            BareMetalMachineConfigurationData = new[]
            {
                new AzureNative.NetworkCloud.Inputs.BareMetalMachineConfigurationDataArgs
                {
                    BmcCredentials = new AzureNative.NetworkCloud.Inputs.AdministrativeCredentialsArgs
                    {
                        Password = "{password}",
                        Username = "username",
                    },
                    BmcMacAddress = "AA:BB:CC:DD:EE:FF",
                    BootMacAddress = "00:BB:CC:DD:EE:FF",
                    MachineDetails = "extraDetails",
                    MachineName = "bmmName1",
                    RackSlot = 1,
                    SerialNumber = "BM1219XXX",
                },
                new AzureNative.NetworkCloud.Inputs.BareMetalMachineConfigurationDataArgs
                {
                    BmcCredentials = new AzureNative.NetworkCloud.Inputs.AdministrativeCredentialsArgs
                    {
                        Password = "{password}",
                        Username = "username",
                    },
                    BmcMacAddress = "AA:BB:CC:DD:EE:00",
                    BootMacAddress = "00:BB:CC:DD:EE:00",
                    MachineDetails = "extraDetails",
                    MachineName = "bmmName2",
                    RackSlot = 2,
                    SerialNumber = "BM1219YYY",
                },
            },
            NetworkRackId = "/subscriptions/123e4567-e89b-12d3-a456-426655440000/resourceGroups/resourceGroupName/providers/Microsoft.ManagedNetworkFabric/networkRacks/networkRackName",
            RackLocation = "Foo Datacenter, Floor 3, Aisle 9, Rack 2",
            RackSerialNumber = "AA1234",
            RackSkuId = "/subscriptions/123e4567-e89b-12d3-a456-426655440000/providers/Microsoft.NetworkCloud/rackSkus/rackSkuName",
            StorageApplianceConfigurationData = new[]
            {
                new AzureNative.NetworkCloud.Inputs.StorageApplianceConfigurationDataArgs
                {
                    AdminCredentials = new AzureNative.NetworkCloud.Inputs.AdministrativeCredentialsArgs
                    {
                        Password = "{password}",
                        Username = "username",
                    },
                    RackSlot = 1,
                    SerialNumber = "BM1219XXX",
                    StorageApplianceName = "vmName",
                },
            },
        },
        AnalyticsWorkspaceId = "/subscriptions/123e4567-e89b-12d3-a456-426655440000/resourceGroups/resourceGroupName/providers/microsoft.operationalInsights/workspaces/logAnalyticsWorkspaceName",
        ClusterLocation = "Foo Street, 3rd Floor, row 9",
        ClusterName = "clusterName",
        ClusterServicePrincipal = new AzureNative.NetworkCloud.Inputs.ServicePrincipalInformationArgs
        {
            ApplicationId = "12345678-1234-1234-1234-123456789012",
            Password = "{password}",
            PrincipalId = "00000008-0004-0004-0004-000000000012",
            TenantId = "80000000-4000-4000-4000-120000000000",
        },
        ClusterType = "SingleRack",
        ClusterVersion = "1.0.0",
        ComputeDeploymentThreshold = new AzureNative.NetworkCloud.Inputs.ValidationThresholdArgs
        {
            Grouping = "PerCluster",
            Type = "PercentSuccess",
            Value = 90,
        },
        ComputeRackDefinitions = new[]
        {
            new AzureNative.NetworkCloud.Inputs.RackDefinitionArgs
            {
                BareMetalMachineConfigurationData = new[]
                {
                    new AzureNative.NetworkCloud.Inputs.BareMetalMachineConfigurationDataArgs
                    {
                        BmcCredentials = new AzureNative.NetworkCloud.Inputs.AdministrativeCredentialsArgs
                        {
                            Password = "{password}",
                            Username = "username",
                        },
                        BmcMacAddress = "AA:BB:CC:DD:EE:FF",
                        BootMacAddress = "00:BB:CC:DD:EE:FF",
                        MachineDetails = "extraDetails",
                        MachineName = "bmmName1",
                        RackSlot = 1,
                        SerialNumber = "BM1219XXX",
                    },
                    new AzureNative.NetworkCloud.Inputs.BareMetalMachineConfigurationDataArgs
                    {
                        BmcCredentials = new AzureNative.NetworkCloud.Inputs.AdministrativeCredentialsArgs
                        {
                            Password = "{password}",
                            Username = "username",
                        },
                        BmcMacAddress = "AA:BB:CC:DD:EE:00",
                        BootMacAddress = "00:BB:CC:DD:EE:00",
                        MachineDetails = "extraDetails",
                        MachineName = "bmmName2",
                        RackSlot = 2,
                        SerialNumber = "BM1219YYY",
                    },
                },
                NetworkRackId = "/subscriptions/123e4567-e89b-12d3-a456-426655440000/resourceGroups/resourceGroupName/providers/Microsoft.ManagedNetworkFabric/networkRacks/networkRackName",
                RackLocation = "Foo Datacenter, Floor 3, Aisle 9, Rack 2",
                RackSerialNumber = "AA1234",
                RackSkuId = "/subscriptions/123e4567-e89b-12d3-a456-426655440000/providers/Microsoft.NetworkCloud/rackSkus/rackSkuName",
                StorageApplianceConfigurationData = new[]
                {
                    new AzureNative.NetworkCloud.Inputs.StorageApplianceConfigurationDataArgs
                    {
                        AdminCredentials = new AzureNative.NetworkCloud.Inputs.AdministrativeCredentialsArgs
                        {
                            Password = "{password}",
                            Username = "username",
                        },
                        RackSlot = 1,
                        SerialNumber = "BM1219XXX",
                        StorageApplianceName = "vmName",
                    },
                },
            },
        },
        ExtendedLocation = new AzureNative.NetworkCloud.Inputs.ExtendedLocationArgs
        {
            Name = "/subscriptions/123e4567-e89b-12d3-a456-426655440000/resourceGroups/resourceGroupName/providers/Microsoft.ExtendedLocation/customLocations/clusterManagerExtendedLocationName",
            Type = "CustomLocation",
        },
        Location = "location",
        ManagedResourceGroupConfiguration = new AzureNative.NetworkCloud.Inputs.ManagedResourceGroupConfigurationArgs
        {
            Location = "East US",
            Name = "my-managed-rg",
        },
        NetworkFabricId = "/subscriptions/123e4567-e89b-12d3-a456-426655440000/resourceGroups/resourceGroupName/providers/Microsoft.ManagedNetworkFabric/networkFabrics/fabricName",
        ResourceGroupName = "resourceGroupName",
        Tags = 
        {
            { "key1", "myvalue1" },
            { "key2", "myvalue2" },
        },
    });

});

