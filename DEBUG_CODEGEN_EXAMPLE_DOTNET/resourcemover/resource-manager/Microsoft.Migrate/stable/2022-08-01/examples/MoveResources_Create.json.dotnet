using System.Collections.Generic;
using System.Linq;
using Pulumi;
using AzureNative = Pulumi.AzureNative;

return await Deployment.RunAsync(() => 
{
    var moveResource = new AzureNative.Migrate.MoveResource("moveResource", new()
    {
        MoveCollectionName = "movecollection1",
        MoveResourceName = "moveresourcename1",
        Properties = new AzureNative.Migrate.Inputs.MoveResourcePropertiesArgs
        {
            DependsOnOverrides = new[]
            {
                new AzureNative.Migrate.Inputs.MoveResourceDependencyOverrideArgs
                {
                    Id = "/subscriptions/c4488a3f-a7f7-4ad4-aa72-0e1f4d9c0756/resourceGroups/eastusRG/providers/Microsoft.Network/networkInterfaces/eastusvm140",
                    TargetId = "/subscriptions/c4488a3f-a7f7-4ad4-aa72-0e1f4d9c0756/resourceGroups/westusRG/providers/Microsoft.Network/networkInterfaces/eastusvm140",
                },
            },
            ResourceSettings = new AzureNative.Migrate.Inputs.VirtualMachineResourceSettingsArgs
            {
                ResourceType = "Microsoft.Compute/virtualMachines",
                TargetAvailabilitySetId = "/subscriptions/subid/resourceGroups/eastusRG/providers/Microsoft.Compute/availabilitySets/avset1",
                TargetAvailabilityZone = "2",
                TargetResourceName = "westusvm1",
                UserManagedIdentities = new[]
                {
                    "/subscriptions/subid/resourceGroups/eastusRG/providers/Microsoft.ManagedIdentity/userAssignedIdentities/umi1",
                },
            },
            SourceId = "/subscriptions/subid/resourceGroups/eastusRG/providers/Microsoft.Compute/virtualMachines/eastusvm1",
        },
        ResourceGroupName = "rg1",
    });

});

