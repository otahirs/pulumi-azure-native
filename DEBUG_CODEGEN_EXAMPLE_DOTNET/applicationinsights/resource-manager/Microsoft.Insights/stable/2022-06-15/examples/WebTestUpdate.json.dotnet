using System.Collections.Generic;
using System.Linq;
using Pulumi;
using AzureNative = Pulumi.AzureNative;

return await Deployment.RunAsync(() => 
{
    var webTest = new AzureNative.Insights.WebTest("webTest", new()
    {
        Configuration = new AzureNative.Insights.Inputs.WebTestPropertiesConfigurationArgs
        {
            WebTest = "<WebTest Name=\"my-webtest\" Id=\"678ddf96-1ab8-44c8-9274-123456789abc\" Enabled=\"True\" CssProjectStructure=\"\" CssIteration=\"\" Timeout=\"30\" WorkItemIds=\"\" xmlns=\"http://microsoft.com/schemas/VisualStudio/TeamTest/2010\" Description=\"\" CredentialUserName=\"\" CredentialPassword=\"\" PreAuthenticate=\"True\" Proxy=\"default\" StopOnError=\"False\" RecordedResultFile=\"\" ResultsLocale=\"\" ><Items><Request Method=\"GET\" Guid=\"a4162485-9114-fcfc-e086-123456789abc\" Version=\"1.1\" Url=\"http://my-component.azurewebsites.net\" ThinkTime=\"0\" Timeout=\"30\" ParseDependentRequests=\"True\" FollowRedirects=\"True\" RecordResult=\"True\" Cache=\"False\" ResponseTimeGoal=\"0\" Encoding=\"utf-8\" ExpectedHttpStatusCode=\"200\" ExpectedResponseUrl=\"\" ReportingName=\"\" IgnoreHttpStatusCode=\"False\" /></Items></WebTest>",
        },
        Frequency = 600,
        Kind = AzureNative.Insights.WebTestKind.Ping,
        Location = "South Central US",
        Locations = new[]
        {
            new AzureNative.Insights.Inputs.WebTestGeolocationArgs
            {
                Location = "us-fl-mia-edge",
            },
            new AzureNative.Insights.Inputs.WebTestGeolocationArgs
            {
                Location = "apac-hk-hkn-azr",
            },
        },
        ResourceGroupName = "my-resource-group",
        SyntheticMonitorId = "my-webtest-my-component",
        Timeout = 30,
        WebTestKind = AzureNative.Insights.WebTestKind.Ping,
        WebTestName = "my-webtest-my-component",
    });

});

