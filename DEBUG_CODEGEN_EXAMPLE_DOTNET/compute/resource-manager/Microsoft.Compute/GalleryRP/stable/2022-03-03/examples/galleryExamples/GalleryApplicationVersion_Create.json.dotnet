using System.Collections.Generic;
using System.Linq;
using Pulumi;
using AzureNative = Pulumi.AzureNative;

return await Deployment.RunAsync(() => 
{
    var galleryApplicationVersion = new AzureNative.Compute.GalleryApplicationVersion("galleryApplicationVersion", new()
    {
        GalleryApplicationName = "myGalleryApplicationName",
        GalleryApplicationVersionName = "1.0.0",
        GalleryName = "myGalleryName",
        Location = "West US",
        PublishingProfile = new AzureNative.Compute.Inputs.GalleryApplicationVersionPublishingProfileArgs
        {
            CustomActions = new[]
            {
                new AzureNative.Compute.Inputs.GalleryApplicationCustomActionArgs
                {
                    Description = "This is the custom action description.",
                    Name = "myCustomAction",
                    Parameters = new[]
                    {
                        new AzureNative.Compute.Inputs.GalleryApplicationCustomActionParameterArgs
                        {
                            DefaultValue = "default value of parameter.",
                            Description = "This is the description of the parameter",
                            Name = "myCustomActionParameter",
                            Required = false,
                            Type = AzureNative.Compute.GalleryApplicationCustomActionParameterType.String,
                        },
                    },
                    Script = "myCustomActionScript",
                },
            },
            EndOfLifeDate = "2019-07-01T07:00:00Z",
            ManageActions = new AzureNative.Compute.Inputs.UserArtifactManageArgs
            {
                Install = "powershell -command \"Expand-Archive -Path package.zip -DestinationPath C:\\package\"",
                Remove = "del C:\\package ",
            },
            ReplicaCount = 1,
            Source = new AzureNative.Compute.Inputs.UserArtifactSourceArgs
            {
                MediaLink = "https://mystorageaccount.blob.core.windows.net/mycontainer/package.zip?{sasKey}",
            },
            StorageAccountType = "Standard_LRS",
            TargetRegions = new[]
            {
                new AzureNative.Compute.Inputs.TargetRegionArgs
                {
                    ExcludeFromLatest = false,
                    Name = "West US",
                    RegionalReplicaCount = 1,
                    StorageAccountType = "Standard_LRS",
                },
            },
        },
        ResourceGroupName = "myResourceGroup",
        SafetyProfile = new AzureNative.Compute.Inputs.GalleryApplicationVersionSafetyProfileArgs
        {
            AllowDeletionOfReplicatedLocations = false,
        },
    });

});

