using System.Collections.Generic;
using System.Linq;
using Pulumi;
using AzureNative = Pulumi.AzureNative;

return await Deployment.RunAsync(() => 
{
    var vpnSite = new AzureNative.Network.VpnSite("vpnSite", new()
    {
        AddressSpace = new AzureNative.Network.Inputs.AddressSpaceArgs
        {
            AddressPrefixes = new[]
            {
                "10.0.0.0/16",
            },
        },
        IsSecuritySite = false,
        Location = "West US",
        O365Policy = new AzureNative.Network.Inputs.O365PolicyPropertiesArgs
        {
            BreakOutCategories = new AzureNative.Network.Inputs.O365BreakOutCategoryPoliciesArgs
            {
                Allow = true,
                Default = false,
                Optimize = true,
            },
        },
        ResourceGroupName = "rg1",
        Tags = 
        {
            { "key1", "value1" },
        },
        VirtualWan = new AzureNative.Network.Inputs.SubResourceArgs
        {
            Id = "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualWANs/wan1",
        },
        VpnSiteLinks = new[]
        {
            new AzureNative.Network.Inputs.VpnSiteLinkArgs
            {
                BgpProperties = new AzureNative.Network.Inputs.VpnLinkBgpSettingsArgs
                {
                    Asn = 1234,
                    BgpPeeringAddress = "192.168.0.0",
                },
                Fqdn = "link1.vpnsite1.contoso.com",
                IpAddress = "50.50.50.56",
                LinkProperties = new AzureNative.Network.Inputs.VpnLinkProviderPropertiesArgs
                {
                    LinkProviderName = "vendor1",
                    LinkSpeedInMbps = 0,
                },
                Name = "vpnSiteLink1",
            },
        },
        VpnSiteName = "vpnSite1",
    });

});

