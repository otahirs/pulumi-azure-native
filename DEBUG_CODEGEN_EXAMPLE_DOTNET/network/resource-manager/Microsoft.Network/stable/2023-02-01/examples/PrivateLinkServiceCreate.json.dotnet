using System.Collections.Generic;
using System.Linq;
using Pulumi;
using AzureNative = Pulumi.AzureNative;

return await Deployment.RunAsync(() => 
{
    var privateLinkService = new AzureNative.Network.PrivateLinkService("privateLinkService", new()
    {
        AutoApproval = new AzureNative.Network.Inputs.PrivateLinkServicePropertiesAutoApprovalArgs
        {
            Subscriptions = new[]
            {
                "subscription1",
                "subscription2",
            },
        },
        Fqdns = new[]
        {
            "fqdn1",
            "fqdn2",
            "fqdn3",
        },
        IpConfigurations = new[]
        {
            new AzureNative.Network.Inputs.PrivateLinkServiceIpConfigurationArgs
            {
                Name = "fe-lb",
                PrivateIPAddress = "10.0.1.4",
                PrivateIPAddressVersion = "IPv4",
                PrivateIPAllocationMethod = "Static",
                Subnet = new AzureNative.Network.Inputs.SubnetArgs
                {
                    Id = "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/vnetlb/subnets/subnetlb",
                },
            },
        },
        LoadBalancerFrontendIpConfigurations = new[]
        {
            new AzureNative.Network.Inputs.FrontendIPConfigurationArgs
            {
                Id = "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb/frontendIPConfigurations/fe-lb",
            },
        },
        Location = "eastus",
        ResourceGroupName = "rg1",
        ServiceName = "testPls",
        Visibility = new AzureNative.Network.Inputs.PrivateLinkServicePropertiesVisibilityArgs
        {
            Subscriptions = new[]
            {
                "subscription1",
                "subscription2",
                "subscription3",
            },
        },
    });

});

