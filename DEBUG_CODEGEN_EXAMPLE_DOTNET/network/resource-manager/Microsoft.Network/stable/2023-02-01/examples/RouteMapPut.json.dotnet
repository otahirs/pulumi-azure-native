using System.Collections.Generic;
using System.Linq;
using Pulumi;
using AzureNative = Pulumi.AzureNative;

return await Deployment.RunAsync(() => 
{
    var routeMap = new AzureNative.Network.RouteMap("routeMap", new()
    {
        AssociatedInboundConnections = new[]
        {
            "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRouteGateways/exrGateway1/expressRouteConnections/exrConn1",
        },
        AssociatedOutboundConnections = new[] {},
        ResourceGroupName = "rg1",
        RouteMapName = "routeMap1",
        Rules = new[]
        {
            new AzureNative.Network.Inputs.RouteMapRuleArgs
            {
                Actions = new[]
                {
                    new AzureNative.Network.Inputs.ActionArgs
                    {
                        Parameters = new[]
                        {
                            new AzureNative.Network.Inputs.ParameterArgs
                            {
                                AsPath = new[]
                                {
                                    "22334",
                                },
                                Community = new() { },
                                RoutePrefix = new() { },
                            },
                        },
                        Type = "Add",
                    },
                },
                MatchCriteria = new[]
                {
                    new AzureNative.Network.Inputs.CriterionArgs
                    {
                        AsPath = new() { },
                        Community = new() { },
                        MatchCondition = "Contains",
                        RoutePrefix = new[]
                        {
                            "10.0.0.0/8",
                        },
                    },
                },
                Name = "rule1",
                NextStepIfMatched = "Continue",
            },
        },
        VirtualHubName = "virtualHub1",
    });

});

