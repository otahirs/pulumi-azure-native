using System.Collections.Generic;
using System.Linq;
using Pulumi;
using AzureNative = Pulumi.AzureNative;

return await Deployment.RunAsync(() => 
{
    var vpnGateway = new AzureNative.Network.VpnGateway("vpnGateway", new()
    {
        BgpSettings = new AzureNative.Network.Inputs.BgpSettingsArgs
        {
            Asn = 65515,
            BgpPeeringAddresses = new[]
            {
                new AzureNative.Network.Inputs.IPConfigurationBgpPeeringAddressArgs
                {
                    CustomBgpIpAddresses = new[]
                    {
                        "169.254.21.5",
                    },
                    IpconfigurationId = "Instance0",
                },
                new AzureNative.Network.Inputs.IPConfigurationBgpPeeringAddressArgs
                {
                    CustomBgpIpAddresses = new[]
                    {
                        "169.254.21.10",
                    },
                    IpconfigurationId = "Instance1",
                },
            },
            PeerWeight = 0,
        },
        Connections = new[]
        {
            new AzureNative.Network.Inputs.VpnConnectionArgs
            {
                Name = "vpnConnection1",
                RemoteVpnSite = new AzureNative.Network.Inputs.SubResourceArgs
                {
                    Id = "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnSites/vpnSite1",
                },
                VpnLinkConnections = new[]
                {
                    new AzureNative.Network.Inputs.VpnSiteLinkConnectionArgs
                    {
                        ConnectionBandwidth = 200,
                        EgressNatRules = new[]
                        {
                            new AzureNative.Network.Inputs.SubResourceArgs
                            {
                                Id = "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnGateways/gateway1/natRules/nat03",
                            },
                        },
                        Name = "Connection-Link1",
                        SharedKey = "key",
                        VpnConnectionProtocolType = "IKEv2",
                        VpnSiteLink = new AzureNative.Network.Inputs.SubResourceArgs
                        {
                            Id = "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnSites/vpnSite1/vpnSiteLinks/siteLink1",
                        },
                    },
                },
            },
        },
        EnableBgpRouteTranslationForNat = false,
        GatewayName = "gateway1",
        IsRoutingPreferenceInternet = false,
        Location = "westcentralus",
        NatRules = new[]
        {
            new AzureNative.Network.Inputs.VpnGatewayNatRuleArgs
            {
                ExternalMappings = new[]
                {
                    new AzureNative.Network.Inputs.VpnNatRuleMappingArgs
                    {
                        AddressSpace = "192.168.0.0/26",
                    },
                },
                InternalMappings = new[]
                {
                    new AzureNative.Network.Inputs.VpnNatRuleMappingArgs
                    {
                        AddressSpace = "0.0.0.0/26",
                    },
                },
                IpConfigurationId = "",
                Mode = "EgressSnat",
                Name = "nat03",
                Type = "Static",
            },
        },
        ResourceGroupName = "rg1",
        Tags = 
        {
            { "key1", "value1" },
        },
        VirtualHub = new AzureNative.Network.Inputs.SubResourceArgs
        {
            Id = "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1",
        },
    });

});

