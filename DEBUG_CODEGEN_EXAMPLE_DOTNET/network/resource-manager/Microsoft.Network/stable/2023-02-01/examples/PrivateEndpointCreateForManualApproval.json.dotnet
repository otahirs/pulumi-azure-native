using System.Collections.Generic;
using System.Linq;
using Pulumi;
using AzureNative = Pulumi.AzureNative;

return await Deployment.RunAsync(() => 
{
    var privateEndpoint = new AzureNative.Network.PrivateEndpoint("privateEndpoint", new()
    {
        CustomNetworkInterfaceName = "testPeNic",
        IpConfigurations = new[]
        {
            new AzureNative.Network.Inputs.PrivateEndpointIPConfigurationArgs
            {
                GroupId = "file",
                MemberName = "file",
                Name = "pestaticconfig",
                PrivateIPAddress = "192.168.0.5",
            },
        },
        Location = "eastus",
        ManualPrivateLinkServiceConnections = new[]
        {
            new AzureNative.Network.Inputs.PrivateLinkServiceConnectionArgs
            {
                GroupIds = new[]
                {
                    "groupIdFromResource",
                },
                PrivateLinkServiceId = "/subscriptions/subId/resourceGroups/rg1/providers/Microsoft.Network/privateLinkServices/testPls",
                RequestMessage = "Please manually approve my connection.",
            },
        },
        PrivateEndpointName = "testPe",
        ResourceGroupName = "rg1",
        Subnet = new AzureNative.Network.Inputs.SubnetArgs
        {
            Id = "/subscriptions/subId/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/myVnet/subnets/mySubnet",
        },
    });

});

