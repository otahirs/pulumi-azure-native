using System.Collections.Generic;
using System.Linq;
using Pulumi;
using AzureNative = Pulumi.AzureNative;

return await Deployment.RunAsync(() => 
{
    var appServiceCertificateOrder = new AzureNative.CertificateRegistration.AppServiceCertificateOrder("appServiceCertificateOrder", new()
    {
        AutoRenew = true,
        CertificateOrderName = "SampleCertificateOrderName",
        Certificates = 
        {
            { "SampleCertName1", new AzureNative.CertificateRegistration.Inputs.AppServiceCertificateArgs
            {
                KeyVaultId = "/subscriptions/34adfa4f-cedf-4dc0-ba29-b6d1a69ab345/resourcegroups/testrg123/providers/microsoft.keyvault/vaults/SamplevaultName",
                KeyVaultSecretName = "SampleSecretName1",
            } },
            { "SampleCertName2", new AzureNative.CertificateRegistration.Inputs.AppServiceCertificateArgs
            {
                KeyVaultId = "/subscriptions/34adfa4f-cedf-4dc0-ba29-b6d1a69ab345/resourcegroups/testrg123/providers/microsoft.keyvault/vaults/SamplevaultName",
                KeyVaultSecretName = "SampleSecretName2",
            } },
        },
        DistinguishedName = "CN=SampleCustomDomain.com",
        KeySize = 2048,
        Location = "Global",
        ProductType = AzureNative.CertificateRegistration.CertificateProductType.StandardDomainValidatedSsl,
        ResourceGroupName = "testrg123",
        ValidityInYears = 2,
    });

});

