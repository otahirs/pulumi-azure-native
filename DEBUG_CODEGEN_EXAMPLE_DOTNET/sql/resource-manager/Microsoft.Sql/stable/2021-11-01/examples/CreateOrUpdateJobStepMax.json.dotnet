using System.Collections.Generic;
using System.Linq;
using Pulumi;
using AzureNative = Pulumi.AzureNative;

return await Deployment.RunAsync(() => 
{
    var jobStep = new AzureNative.Sql.JobStep("jobStep", new()
    {
        Action = new AzureNative.Sql.Inputs.JobStepActionArgs
        {
            Source = "Inline",
            Type = "TSql",
            Value = "select 2",
        },
        Credential = "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/group1/providers/Microsoft.Sql/servers/server1/jobAgents/agent1/credentials/cred1",
        ExecutionOptions = new AzureNative.Sql.Inputs.JobStepExecutionOptionsArgs
        {
            InitialRetryIntervalSeconds = 11,
            MaximumRetryIntervalSeconds = 222,
            RetryAttempts = 42,
            RetryIntervalBackoffMultiplier = 3,
            TimeoutSeconds = 1234,
        },
        JobAgentName = "agent1",
        JobName = "job1",
        Output = new AzureNative.Sql.Inputs.JobStepOutputArgs
        {
            Credential = "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/group1/providers/Microsoft.Sql/servers/server1/jobAgents/agent1/credentials/cred0",
            DatabaseName = "database3",
            ResourceGroupName = "group3",
            SchemaName = "myschema1234",
            ServerName = "server3",
            SubscriptionId = "3501b905-a848-4b5d-96e8-b253f62d735a",
            TableName = "mytable5678",
            Type = "SqlDatabase",
        },
        ResourceGroupName = "group1",
        ServerName = "server1",
        StepId = 1,
        StepName = "step1",
        TargetGroup = "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/group1/providers/Microsoft.Sql/servers/server1/jobAgents/agent1/targetGroups/targetGroup1",
    });

});

