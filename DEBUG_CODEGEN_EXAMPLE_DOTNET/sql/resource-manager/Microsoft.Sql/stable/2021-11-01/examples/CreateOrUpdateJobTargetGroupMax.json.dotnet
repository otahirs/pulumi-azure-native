using System.Collections.Generic;
using System.Linq;
using Pulumi;
using AzureNative = Pulumi.AzureNative;

return await Deployment.RunAsync(() => 
{
    var jobTargetGroup = new AzureNative.Sql.JobTargetGroup("jobTargetGroup", new()
    {
        JobAgentName = "agent1",
        Members = new[]
        {
            new AzureNative.Sql.Inputs.JobTargetArgs
            {
                DatabaseName = "database1",
                MembershipType = AzureNative.Sql.JobTargetGroupMembershipType.Exclude,
                ServerName = "server1",
                Type = "SqlDatabase",
            },
            new AzureNative.Sql.Inputs.JobTargetArgs
            {
                MembershipType = AzureNative.Sql.JobTargetGroupMembershipType.Include,
                RefreshCredential = "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/group1/providers/Microsoft.Sql/servers/server1/jobAgents/agent1/credentials/testCredential",
                ServerName = "server1",
                Type = "SqlServer",
            },
            new AzureNative.Sql.Inputs.JobTargetArgs
            {
                ElasticPoolName = "pool1",
                MembershipType = AzureNative.Sql.JobTargetGroupMembershipType.Include,
                RefreshCredential = "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/group1/providers/Microsoft.Sql/servers/server1/jobAgents/agent1/credentials/testCredential",
                ServerName = "server2",
                Type = "SqlElasticPool",
            },
            new AzureNative.Sql.Inputs.JobTargetArgs
            {
                MembershipType = AzureNative.Sql.JobTargetGroupMembershipType.Include,
                RefreshCredential = "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/group1/providers/Microsoft.Sql/servers/server1/jobAgents/agent1/credentials/testCredential",
                ServerName = "server3",
                ShardMapName = "shardMap1",
                Type = "SqlShardMap",
            },
        },
        ResourceGroupName = "group1",
        ServerName = "server1",
        TargetGroupName = "targetGroup1",
    });

});

