using System.Collections.Generic;
using System.Linq;
using Pulumi;
using AzureNative = Pulumi.AzureNative;

return await Deployment.RunAsync(() => 
{
    var connectorDryrun = new AzureNative.ServiceLinker.ConnectorDryrun("connectorDryrun", new()
    {
        DryrunName = "dryrunName",
        Location = "westus",
        Parameters = new AzureNative.ServiceLinker.Inputs.CreateOrUpdateDryrunParametersArgs
        {
            ActionName = "createOrUpdate",
            AuthInfo = new AzureNative.ServiceLinker.Inputs.SecretAuthInfoArgs
            {
                AuthType = "secret",
                Name = "name",
                SecretInfo = new AzureNative.ServiceLinker.Inputs.ValueSecretInfoArgs
                {
                    SecretType = "rawValue",
                    Value = "secret",
                },
            },
            TargetService = new AzureNative.ServiceLinker.Inputs.AzureResourceArgs
            {
                Id = "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.DocumentDb/databaseAccounts/test-acc/mongodbDatabases/test-db",
                Type = "AzureResource",
            },
        },
        ResourceGroupName = "test-rg",
    });

});

