using System.Collections.Generic;
using System.Linq;
using Pulumi;
using AzureNative = Pulumi.AzureNative;

return await Deployment.RunAsync(() => 
{
    var streamingEndpoint = new AzureNative.Media.StreamingEndpoint("streamingEndpoint", new()
    {
        AccessControl = new AzureNative.Media.Inputs.StreamingEndpointAccessControlArgs
        {
            Akamai = new AzureNative.Media.Inputs.AkamaiAccessControlArgs
            {
                AkamaiSignatureHeaderAuthenticationKeyList = new[]
                {
                    new AzureNative.Media.Inputs.AkamaiSignatureHeaderAuthenticationKeyArgs
                    {
                        Base64Key = "dGVzdGlkMQ==",
                        Expiration = "2029-12-31T16:00:00-08:00",
                        Identifier = "id1",
                    },
                    new AzureNative.Media.Inputs.AkamaiSignatureHeaderAuthenticationKeyArgs
                    {
                        Base64Key = "dGVzdGlkMQ==",
                        Expiration = "2030-12-31T16:00:00-08:00",
                        Identifier = "id2",
                    },
                },
            },
            Ip = new AzureNative.Media.Inputs.IPAccessControlArgs
            {
                Allow = new[]
                {
                    new AzureNative.Media.Inputs.IPRangeArgs
                    {
                        Address = "192.168.1.1",
                        Name = "AllowedIp",
                    },
                },
            },
        },
        AccountName = "slitestmedia10",
        AvailabilitySetName = "availableset",
        CdnEnabled = false,
        Description = "test event 1",
        Location = "West US",
        ResourceGroupName = "mediaresources",
        ScaleUnits = 1,
        StreamingEndpointName = "myStreamingEndpoint1",
        Tags = 
        {
            { "tag1", "value1" },
            { "tag2", "value2" },
        },
    });

});

