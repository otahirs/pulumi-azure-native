using System.Collections.Generic;
using System.Linq;
using Pulumi;
using AzureNative = Pulumi.AzureNative;

return await Deployment.RunAsync(() => 
{
    var streamingPolicy = new AzureNative.Media.StreamingPolicy("streamingPolicy", new()
    {
        AccountName = "contosomedia",
        CommonEncryptionCenc = new AzureNative.Media.Inputs.CommonEncryptionCencArgs
        {
            ClearKeyEncryptionConfiguration = new AzureNative.Media.Inputs.ClearKeyEncryptionConfigurationArgs
            {
                CustomKeysAcquisitionUrlTemplate = "https://contoso.com/{AlternativeMediaId}/clearkey/",
            },
            ClearTracks = new[]
            {
                new AzureNative.Media.Inputs.TrackSelectionArgs
                {
                    TrackSelections = new[]
                    {
                        new AzureNative.Media.Inputs.TrackPropertyConditionArgs
                        {
                            Operation = "Equal",
                            Property = "FourCC",
                            Value = "hev1",
                        },
                    },
                },
            },
            ContentKeys = new AzureNative.Media.Inputs.StreamingPolicyContentKeysArgs
            {
                DefaultKey = new AzureNative.Media.Inputs.DefaultKeyArgs
                {
                    Label = "cencDefaultKey",
                },
            },
            EnabledProtocols = new AzureNative.Media.Inputs.EnabledProtocolsArgs
            {
                Dash = true,
                Download = false,
                Hls = false,
                SmoothStreaming = true,
            },
        },
        DefaultContentKeyPolicyName = "PolicyWithPlayReadyOptionAndOpenRestriction",
        ResourceGroupName = "contosorg",
        StreamingPolicyName = "UserCreatedSecureStreamingPolicyWithCommonEncryptionCencOnly",
    });

});

