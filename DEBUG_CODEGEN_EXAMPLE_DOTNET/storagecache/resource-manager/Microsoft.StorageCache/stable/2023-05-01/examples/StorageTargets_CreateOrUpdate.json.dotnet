using System.Collections.Generic;
using System.Linq;
using Pulumi;
using AzureNative = Pulumi.AzureNative;

return await Deployment.RunAsync(() => 
{
    var storageTarget = new AzureNative.StorageCache.StorageTarget("storageTarget", new()
    {
        CacheName = "sc1",
        Junctions = new[]
        {
            new AzureNative.StorageCache.Inputs.NamespaceJunctionArgs
            {
                NamespacePath = "/path/on/cache",
                NfsAccessPolicy = "default",
                NfsExport = "exp1",
                TargetPath = "/path/on/exp1",
            },
            new AzureNative.StorageCache.Inputs.NamespaceJunctionArgs
            {
                NamespacePath = "/path2/on/cache",
                NfsAccessPolicy = "rootSquash",
                NfsExport = "exp2",
                TargetPath = "/path2/on/exp2",
            },
        },
        Nfs3 = new AzureNative.StorageCache.Inputs.Nfs3TargetArgs
        {
            Target = "10.0.44.44",
            UsageModel = "READ_ONLY",
            VerificationTimer = 30,
        },
        ResourceGroupName = "scgroup",
        StorageTargetName = "st1",
        TargetType = "nfs3",
    });

});

