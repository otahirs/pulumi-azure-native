using System.Collections.Generic;
using System.Linq;
using Pulumi;
using AzureNative = Pulumi.AzureNative;

return await Deployment.RunAsync(() => 
{
    var pool = new AzureNative.Batch.Pool("pool", new()
    {
        AccountName = "sampleacct",
        DeploymentConfiguration = new AzureNative.Batch.Inputs.DeploymentConfigurationArgs
        {
            VirtualMachineConfiguration = new AzureNative.Batch.Inputs.VirtualMachineConfigurationArgs
            {
                ImageReference = new AzureNative.Batch.Inputs.ImageReferenceArgs
                {
                    Offer = "UbuntuServer",
                    Publisher = "Canonical",
                    Sku = "18.04-LTS",
                    Version = "latest",
                },
                NodeAgentSkuId = "batch.node.ubuntu 18.04",
            },
        },
        PoolName = "testpool",
        ResourceGroupName = "default-azurebatch-japaneast",
        ScaleSettings = new AzureNative.Batch.Inputs.ScaleSettingsArgs
        {
            AutoScale = new AzureNative.Batch.Inputs.AutoScaleSettingsArgs
            {
                EvaluationInterval = "PT5M",
                Formula = "$TargetDedicatedNodes=1",
            },
        },
        VmSize = "STANDARD_D4",
    });

});

