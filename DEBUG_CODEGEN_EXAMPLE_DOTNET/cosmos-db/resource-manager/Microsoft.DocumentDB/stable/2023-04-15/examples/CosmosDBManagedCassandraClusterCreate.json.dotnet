using System.Collections.Generic;
using System.Linq;
using Pulumi;
using AzureNative = Pulumi.AzureNative;

return await Deployment.RunAsync(() => 
{
    var cassandraCluster = new AzureNative.DocumentDB.CassandraCluster("cassandraCluster", new()
    {
        ClusterName = "cassandra-prod",
        Location = "West US",
        Properties = new AzureNative.DocumentDB.Inputs.ClusterResourcePropertiesArgs
        {
            AuthenticationMethod = "Cassandra",
            CassandraVersion = "3.11",
            ClientCertificates = new[]
            {
                new AzureNative.DocumentDB.Inputs.CertificateArgs
                {
                    Pem = @"-----BEGIN CERTIFICATE-----
...Base64 encoded certificate...
-----END CERTIFICATE-----",
                },
            },
            ClusterNameOverride = "ClusterNameIllegalForAzureResource",
            DelegatedManagementSubnetId = "/subscriptions/536e130b-d7d6-4ac7-98a5-de20d69588d2/resourceGroups/customer-vnet-rg/providers/Microsoft.Network/virtualNetworks/customer-vnet/subnets/management",
            ExternalGossipCertificates = new[]
            {
                new AzureNative.DocumentDB.Inputs.CertificateArgs
                {
                    Pem = @"-----BEGIN CERTIFICATE-----
...Base64 encoded certificate...
-----END CERTIFICATE-----",
                },
            },
            ExternalSeedNodes = new[]
            {
                new AzureNative.DocumentDB.Inputs.SeedNodeArgs
                {
                    IpAddress = "10.52.221.2",
                },
                new AzureNative.DocumentDB.Inputs.SeedNodeArgs
                {
                    IpAddress = "10.52.221.3",
                },
                new AzureNative.DocumentDB.Inputs.SeedNodeArgs
                {
                    IpAddress = "10.52.221.4",
                },
            },
            HoursBetweenBackups = 24,
            InitialCassandraAdminPassword = "mypassword",
        },
        ResourceGroupName = "cassandra-prod-rg",
        Tags = null,
    });

});

