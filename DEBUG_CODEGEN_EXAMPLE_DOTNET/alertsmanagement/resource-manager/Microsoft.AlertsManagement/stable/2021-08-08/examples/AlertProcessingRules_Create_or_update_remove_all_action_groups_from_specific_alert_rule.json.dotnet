using System.Collections.Generic;
using System.Linq;
using Pulumi;
using AzureNative = Pulumi.AzureNative;

return await Deployment.RunAsync(() => 
{
    var alertProcessingRuleByName = new AzureNative.AlertsManagement.AlertProcessingRuleByName("alertProcessingRuleByName", new()
    {
        AlertProcessingRuleName = "RemoveActionGroupsSpecificAlertRule",
        Location = "Global",
        Properties = new AzureNative.AlertsManagement.Inputs.AlertProcessingRulePropertiesArgs
        {
            Actions = new[]
            {
                new AzureNative.AlertsManagement.Inputs.RemoveAllActionGroupsArgs
                {
                    ActionType = "RemoveAllActionGroups",
                },
            },
            Conditions = new[]
            {
                new AzureNative.AlertsManagement.Inputs.ConditionArgs
                {
                    Field = "AlertRuleId",
                    Operator = "Equals",
                    Values = new[]
                    {
                        "/subscriptions/suubId1/resourceGroups/Rgid2/providers/microsoft.insights/activityLogAlerts/RuleName",
                    },
                },
            },
            Description = "Removes all ActionGroups from all Alerts that fire on above AlertRule",
            Enabled = true,
            Scopes = new[]
            {
                "/subscriptions/subId1",
            },
        },
        ResourceGroupName = "alertscorrelationrg",
        Tags = null,
    });

});

