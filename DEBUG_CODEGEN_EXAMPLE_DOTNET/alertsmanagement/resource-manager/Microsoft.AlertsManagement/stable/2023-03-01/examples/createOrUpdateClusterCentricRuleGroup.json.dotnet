using System.Collections.Generic;
using System.Linq;
using Pulumi;
using AzureNative = Pulumi.AzureNative;

return await Deployment.RunAsync(() => 
{
    var prometheusRuleGroup = new AzureNative.AlertsManagement.PrometheusRuleGroup("prometheusRuleGroup", new()
    {
        ClusterName = "myClusterName",
        Description = "This is a rule group with culster centric configuration",
        Interval = "PT10M",
        Location = "East US",
        ResourceGroupName = "promResourceGroup",
        RuleGroupName = "myPrometheusRuleGroup",
        Rules = new[]
        {
            new AzureNative.AlertsManagement.Inputs.PrometheusRuleArgs
            {
                Actions = new() { },
                Alert = "Billing_Processing_Very_Slow",
                Annotations = 
                {
                    { "annotationName1", "annotationValue1" },
                },
                Enabled = true,
                Expression = "job_type:billing_jobs_duration_seconds:99p5m > 30",
                For = "PT5M",
                Labels = 
                {
                    { "team", "prod" },
                },
                ResolveConfiguration = new AzureNative.AlertsManagement.Inputs.PrometheusRuleResolveConfigurationArgs
                {
                    AutoResolved = true,
                    TimeToResolve = "PT10M",
                },
                Severity = 2,
            },
        },
        Scopes = new[]
        {
            "/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/myResourceGroup/providers/microsoft.monitor/accounts/myAzureMonitorWorkspace",
            "/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/myResourceGroup/providers/Microsoft.ContainerService/managedClusters/myClusterName",
        },
    });

});

