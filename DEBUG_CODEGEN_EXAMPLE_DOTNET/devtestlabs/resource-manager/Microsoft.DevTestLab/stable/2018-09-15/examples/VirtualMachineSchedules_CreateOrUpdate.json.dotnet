using System.Collections.Generic;
using System.Linq;
using Pulumi;
using AzureNative = Pulumi.AzureNative;

return await Deployment.RunAsync(() => 
{
    var virtualMachineSchedule = new AzureNative.DevTestLab.VirtualMachineSchedule("virtualMachineSchedule", new()
    {
        DailyRecurrence = new AzureNative.DevTestLab.Inputs.DayDetailsArgs
        {
            Time = "1900",
        },
        HourlyRecurrence = new AzureNative.DevTestLab.Inputs.HourDetailsArgs
        {
            Minute = 30,
        },
        LabName = "{labName}",
        Location = "{location}",
        Name = "LabVmsShutdown",
        NotificationSettings = new AzureNative.DevTestLab.Inputs.NotificationSettingsArgs
        {
            EmailRecipient = "{email}",
            NotificationLocale = "EN",
            Status = "Enabled",
            TimeInMinutes = 30,
            WebhookUrl = "{webhookUrl}",
        },
        ResourceGroupName = "resourceGroupName",
        Status = "Enabled",
        Tags = 
        {
            { "tagName1", "tagValue1" },
        },
        TargetResourceId = "/subscriptions/{subscriptionId}/resourcegroups/resourceGroupName/providers/microsoft.devtestlab/labs/{labName}/virtualMachines/{vmName}",
        TaskType = "LabVmsShutdownTask",
        TimeZoneId = "Pacific Standard Time",
        VirtualMachineName = "{vmName}",
        WeeklyRecurrence = new AzureNative.DevTestLab.Inputs.WeekDetailsArgs
        {
            Time = "1700",
            Weekdays = new[]
            {
                "Friday",
                "Saturday",
                "Sunday",
            },
        },
    });

});

