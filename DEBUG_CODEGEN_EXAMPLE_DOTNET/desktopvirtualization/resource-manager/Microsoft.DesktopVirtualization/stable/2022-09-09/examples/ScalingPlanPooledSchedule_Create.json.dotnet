using System.Collections.Generic;
using System.Linq;
using Pulumi;
using AzureNative = Pulumi.AzureNative;

return await Deployment.RunAsync(() => 
{
    var scalingPlanPooledSchedule = new AzureNative.DesktopVirtualization.ScalingPlanPooledSchedule("scalingPlanPooledSchedule", new()
    {
        DaysOfWeek = new[]
        {
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
        },
        OffPeakLoadBalancingAlgorithm = "DepthFirst",
        OffPeakStartTime = new AzureNative.DesktopVirtualization.Inputs.TimeArgs
        {
            Hour = 20,
            Minute = 0,
        },
        PeakLoadBalancingAlgorithm = "BreadthFirst",
        PeakStartTime = new AzureNative.DesktopVirtualization.Inputs.TimeArgs
        {
            Hour = 8,
            Minute = 0,
        },
        RampDownCapacityThresholdPct = 50,
        RampDownForceLogoffUsers = true,
        RampDownLoadBalancingAlgorithm = "DepthFirst",
        RampDownMinimumHostsPct = 20,
        RampDownNotificationMessage = "message",
        RampDownStartTime = new AzureNative.DesktopVirtualization.Inputs.TimeArgs
        {
            Hour = 18,
            Minute = 0,
        },
        RampDownWaitTimeMinutes = 30,
        RampUpCapacityThresholdPct = 80,
        RampUpLoadBalancingAlgorithm = "DepthFirst",
        RampUpMinimumHostsPct = 20,
        RampUpStartTime = new AzureNative.DesktopVirtualization.Inputs.TimeArgs
        {
            Hour = 6,
            Minute = 0,
        },
        ResourceGroupName = "resourceGroup1",
        ScalingPlanName = "scalingPlan1",
        ScalingPlanScheduleName = "scalingPlanScheduleWeekdays1",
    });

});

