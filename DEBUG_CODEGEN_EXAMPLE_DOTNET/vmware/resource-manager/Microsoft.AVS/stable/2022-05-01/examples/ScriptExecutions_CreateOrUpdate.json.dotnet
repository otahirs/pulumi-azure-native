using System.Collections.Generic;
using System.Linq;
using Pulumi;
using AzureNative = Pulumi.AzureNative;

return await Deployment.RunAsync(() => 
{
    var scriptExecution = new AzureNative.AVS.ScriptExecution("scriptExecution", new()
    {
        HiddenParameters = new[]
        {
            new AzureNative.AVS.Inputs.ScriptSecureStringExecutionParameterArgs
            {
                Name = "Password",
                SecureValue = "PlaceholderPassword",
                Type = "SecureValue",
            },
        },
        Parameters = new[]
        {
            new AzureNative.AVS.Inputs.ScriptStringExecutionParameterArgs
            {
                Name = "DomainName",
                Type = "Value",
                Value = "placeholderDomain.local",
            },
            new AzureNative.AVS.Inputs.ScriptStringExecutionParameterArgs
            {
                Name = "BaseUserDN",
                Type = "Value",
                Value = "DC=placeholder, DC=placeholder",
            },
        },
        PrivateCloudName = "cloud1",
        ResourceGroupName = "group1",
        Retention = "P0Y0M60DT0H60M60S",
        ScriptCmdletId = "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.AVS/privateClouds/cloud1/scriptPackages/AVS.PowerCommands@1.0.0/scriptCmdlets/New-SsoExternalIdentitySource",
        ScriptExecutionName = "addSsoServer",
        Timeout = "P0Y0M0DT0H60M60S",
    });

});

