using System.Collections.Generic;
using System.Linq;
using Pulumi;
using AzureNative = Pulumi.AzureNative;

return await Deployment.RunAsync(() => 
{
    var placementPolicy = new AzureNative.AVS.PlacementPolicy("placementPolicy", new()
    {
        ClusterName = "cluster1",
        PlacementPolicyName = "policy1",
        PrivateCloudName = "cloud1",
        Properties = new AzureNative.AVS.Inputs.VmHostPlacementPolicyPropertiesArgs
        {
            AffinityStrength = "Must",
            AffinityType = "AntiAffinity",
            AzureHybridBenefitType = "SqlHost",
            HostMembers = new[]
            {
                "fakehost22.nyc1.kubernetes.center",
                "fakehost23.nyc1.kubernetes.center",
                "fakehost24.nyc1.kubernetes.center",
            },
            Type = "VmHost",
            VmMembers = new[]
            {
                "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.AVS/privateClouds/cloud1/clusters/cluster1/virtualMachines/vm-128",
                "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.AVS/privateClouds/cloud1/clusters/cluster1/virtualMachines/vm-256",
            },
        },
        ResourceGroupName = "group1",
    });

});

