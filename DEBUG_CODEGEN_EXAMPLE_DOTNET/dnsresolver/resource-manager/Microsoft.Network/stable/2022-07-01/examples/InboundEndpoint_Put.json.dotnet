using System.Collections.Generic;
using System.Linq;
using Pulumi;
using AzureNative = Pulumi.AzureNative;

return await Deployment.RunAsync(() => 
{
    var inboundEndpoint = new AzureNative.Network.InboundEndpoint("inboundEndpoint", new()
    {
        DnsResolverName = "sampleDnsResolver",
        InboundEndpointName = "sampleInboundEndpoint",
        IpConfigurations = new[]
        {
            new AzureNative.Network.Inputs.InboundEndpointIPConfigurationArgs
            {
                PrivateIpAllocationMethod = "Dynamic",
                Subnet = new AzureNative.Network.Inputs.SubResourceArgs
                {
                    Id = "/subscriptions/0403cfa9-9659-4f33-9f30-1f191c51d111/resourceGroups/sampleVnetResourceGroupName/providers/Microsoft.Network/virtualNetworks/sampleVirtualNetwork/subnets/sampleSubnet",
                },
            },
        },
        Location = "westus2",
        ResourceGroupName = "sampleResourceGroup",
        Tags = 
        {
            { "key1", "value1" },
        },
    });

});

