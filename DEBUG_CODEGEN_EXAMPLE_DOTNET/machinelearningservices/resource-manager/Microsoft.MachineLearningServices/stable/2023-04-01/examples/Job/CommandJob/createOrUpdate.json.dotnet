using System.Collections.Generic;
using System.Linq;
using Pulumi;
using AzureNative = Pulumi.AzureNative;

return await Deployment.RunAsync(() => 
{
    var job = new AzureNative.MachineLearningServices.Job("job", new()
    {
        Id = "string",
        JobBaseProperties = new AzureNative.MachineLearningServices.Inputs.CommandJobArgs
        {
            CodeId = "string",
            Command = "string",
            ComputeId = "string",
            Description = "string",
            DisplayName = "string",
            Distribution = new AzureNative.MachineLearningServices.Inputs.TensorFlowArgs
            {
                DistributionType = "TensorFlow",
                ParameterServerCount = 1,
                WorkerCount = 1,
            },
            EnvironmentId = "string",
            EnvironmentVariables = 
            {
                { "string", "string" },
            },
            ExperimentName = "string",
            Identity = new AzureNative.MachineLearningServices.Inputs.AmlTokenArgs
            {
                IdentityType = "AMLToken",
            },
            Inputs = 
            {
                { "string", new AzureNative.MachineLearningServices.Inputs.LiteralJobInputArgs
                {
                    Description = "string",
                    JobInputType = "literal",
                    Value = "string",
                } },
            },
            JobType = "Command",
            Limits = new AzureNative.MachineLearningServices.Inputs.CommandJobLimitsArgs
            {
                JobLimitsType = "Command",
                Timeout = "PT5M",
            },
            Outputs = 
            {
                { "string", new AzureNative.MachineLearningServices.Inputs.UriFileJobOutputArgs
                {
                    Description = "string",
                    JobOutputType = "uri_file",
                    Mode = "ReadWriteMount",
                    Uri = "string",
                } },
            },
            Properties = 
            {
                { "string", "string" },
            },
            Resources = new AzureNative.MachineLearningServices.Inputs.JobResourceConfigurationArgs
            {
                InstanceCount = 1,
                InstanceType = "string",
                Properties = 
                {
                    { "string", 
                    {
                        { "e6b6493e-7d5e-4db3-be1e-306ec641327e", null },
                    } },
                },
            },
            Services = 
            {
                { "string", new AzureNative.MachineLearningServices.Inputs.JobServiceArgs
                {
                    Endpoint = "string",
                    JobServiceType = "string",
                    Port = 1,
                    Properties = 
                    {
                        { "string", "string" },
                    },
                } },
            },
            Tags = 
            {
                { "string", "string" },
            },
        },
        ResourceGroupName = "test-rg",
        WorkspaceName = "my-aml-workspace",
    });

});

