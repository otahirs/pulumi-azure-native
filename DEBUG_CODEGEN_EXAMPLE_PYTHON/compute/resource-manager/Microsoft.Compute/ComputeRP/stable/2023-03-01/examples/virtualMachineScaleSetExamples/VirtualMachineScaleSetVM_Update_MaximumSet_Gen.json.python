import pulumi
import pulumi_azure_native as azure_native

virtual_machine_scale_set_vm = azure_native.compute.VirtualMachineScaleSetVM("virtualMachineScaleSetVM",
    additional_capabilities=azure_native.compute.AdditionalCapabilitiesArgs(
        hibernation_enabled=True,
        ultra_ssd_enabled=True,
    ),
    availability_set=azure_native.compute.SubResourceArgs(
        id="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/availabilitySets/{availabilitySetName}",
    ),
    diagnostics_profile=azure_native.compute.DiagnosticsProfileArgs(
        boot_diagnostics=azure_native.compute.BootDiagnosticsArgs(
            enabled=True,
            storage_uri="aaaaaaaaaaaaa",
        ),
    ),
    hardware_profile=azure_native.compute.HardwareProfileArgs(
        vm_size="Basic_A0",
        vm_size_properties=azure_native.compute.VMSizePropertiesArgs(
            v_cpus_available=9,
            v_cpus_per_core=12,
        ),
    ),
    instance_id="aaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
    license_type="aaaaaaaaaa",
    location="westus",
    network_profile=azure_native.compute.NetworkProfileArgs(
        network_api_version="2020-11-01",
        network_interface_configurations=[azure_native.compute.VirtualMachineNetworkInterfaceConfigurationArgs(
            delete_option="Delete",
            dns_settings=azure_native.compute.VirtualMachineNetworkInterfaceDnsSettingsConfigurationArgs(
                dns_servers=["aaaaaa"],
            ),
            dscp_configuration=azure_native.compute.SubResourceArgs(
                id="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/availabilitySets/{availabilitySetName}",
            ),
            enable_accelerated_networking=True,
            enable_fpga=True,
            enable_ip_forwarding=True,
            ip_configurations=[azure_native.compute.VirtualMachineNetworkInterfaceIPConfigurationArgs(
                application_gateway_backend_address_pools=[azure_native.compute.SubResourceArgs(
                    id="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/availabilitySets/{availabilitySetName}",
                )],
                application_security_groups=[azure_native.compute.SubResourceArgs(
                    id="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/availabilitySets/{availabilitySetName}",
                )],
                load_balancer_backend_address_pools=[azure_native.compute.SubResourceArgs(
                    id="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/availabilitySets/{availabilitySetName}",
                )],
                name="aa",
                primary=True,
                private_ip_address_version="IPv4",
                public_ip_address_configuration=azure_native.compute.VirtualMachinePublicIPAddressConfigurationArgs(
                    delete_option="Delete",
                    dns_settings=azure_native.compute.VirtualMachinePublicIPAddressDnsSettingsConfigurationArgs(
                        domain_name_label="aaaaaaaaaaaaaaaaaaaaaaaaa",
                    ),
                    idle_timeout_in_minutes=2,
                    ip_tags=[azure_native.compute.VirtualMachineIpTagArgs(
                        ip_tag_type="aaaaaaaaaaaaaaaaaaaaaaaaa",
                        tag="aaaaaaaaaaaaaaaaaaaa",
                    )],
                    name="aaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                    public_ip_address_version="IPv4",
                    public_ip_allocation_method="Dynamic",
                    public_ip_prefix=azure_native.compute.SubResourceArgs(
                        id="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/availabilitySets/{availabilitySetName}",
                    ),
                    sku=azure_native.compute.PublicIPAddressSkuArgs(
                        name="Basic",
                        tier="Regional",
                    ),
                ),
                subnet=azure_native.compute.SubResourceArgs(
                    id="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/availabilitySets/{availabilitySetName}",
                ),
            )],
            name="aaaaaaaaaaa",
            network_security_group=azure_native.compute.SubResourceArgs(
                id="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/availabilitySets/{availabilitySetName}",
            ),
            primary=True,
        )],
        network_interfaces=[azure_native.compute.NetworkInterfaceReferenceArgs(
            delete_option="Delete",
            id="/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachineScaleSets/{vmss-name}/virtualMachines/0/networkInterfaces/vmsstestnetconfig5415",
            primary=True,
        )],
    ),
    network_profile_configuration=azure_native.compute.VirtualMachineScaleSetVMNetworkProfileConfigurationArgs(
        network_interface_configurations=[azure_native.compute.VirtualMachineScaleSetNetworkConfigurationArgs(
            delete_option="Delete",
            dns_settings=azure_native.compute.VirtualMachineScaleSetNetworkConfigurationDnsSettingsArgs(
                dns_servers=[],
            ),
            enable_accelerated_networking=True,
            enable_fpga=True,
            enable_ip_forwarding=True,
            ip_configurations=[azure_native.compute.VirtualMachineScaleSetIPConfigurationArgs(
                application_gateway_backend_address_pools=[azure_native.compute.SubResourceArgs(
                    id="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/availabilitySets/{availabilitySetName}",
                )],
                application_security_groups=[azure_native.compute.SubResourceArgs(
                    id="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/availabilitySets/{availabilitySetName}",
                )],
                load_balancer_backend_address_pools=[azure_native.compute.SubResourceArgs(
                    id="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/availabilitySets/{availabilitySetName}",
                )],
                load_balancer_inbound_nat_pools=[azure_native.compute.SubResourceArgs(
                    id="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/availabilitySets/{availabilitySetName}",
                )],
                name="vmsstestnetconfig9693",
                primary=True,
                private_ip_address_version="IPv4",
                public_ip_address_configuration=azure_native.compute.VirtualMachineScaleSetPublicIPAddressConfigurationArgs(
                    delete_option="Delete",
                    dns_settings=azure_native.compute.VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettingsArgs(
                        domain_name_label="aaaaaaaaaaaaaaaaaa",
                    ),
                    idle_timeout_in_minutes=18,
                    ip_tags=[azure_native.compute.VirtualMachineScaleSetIpTagArgs(
                        ip_tag_type="aaaaaaa",
                        tag="aaaaaaaaaaaaaaaaaaaaaaaaaaa",
                    )],
                    name="aaaaaaaaaaaaaaaaaa",
                    public_ip_address_version="IPv4",
                    public_ip_prefix=azure_native.compute.SubResourceArgs(
                        id="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/availabilitySets/{availabilitySetName}",
                    ),
                    sku=azure_native.compute.PublicIPAddressSkuArgs(
                        name="Basic",
                        tier="Regional",
                    ),
                ),
                subnet=azure_native.compute.ApiEntityReferenceArgs(
                    id="/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/vn4071/subnets/sn5503",
                ),
            )],
            name="vmsstestnetconfig5415",
            network_security_group=azure_native.compute.SubResourceArgs(
                id="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/availabilitySets/{availabilitySetName}",
            ),
            primary=True,
        )],
    ),
    os_profile=azure_native.compute.OSProfileArgs(
        admin_password="aaaaaaaaaaaaaaaa",
        admin_username="Foo12",
        allow_extension_operations=True,
        computer_name="test000000",
        custom_data="aaaa",
        linux_configuration=azure_native.compute.LinuxConfigurationArgs(
            disable_password_authentication=True,
            patch_settings=azure_native.compute.LinuxPatchSettingsArgs(
                assessment_mode="ImageDefault",
                patch_mode="ImageDefault",
            ),
            provision_vm_agent=True,
            ssh=azure_native.compute.SshConfigurationArgs(
                public_keys=[azure_native.compute.SshPublicKeyArgs(
                    key_data="aaaaaa",
                    path="aaa",
                )],
            ),
        ),
        require_guest_provision_signal=True,
        secrets=[],
        windows_configuration=azure_native.compute.WindowsConfigurationArgs(
            additional_unattend_content=[azure_native.compute.AdditionalUnattendContentArgs(
                component_name=azure_native.compute.ComponentNames.MICROSOFT_WINDOWS_SHELL_SETUP,
                content="aaaaaaaaaaaaaaaaaaaa",
                pass_name=azure_native.compute.PassNames.OOBE_SYSTEM,
                setting_name=azure_native.compute.SettingNames.AUTO_LOGON,
            )],
            enable_automatic_updates=True,
            patch_settings=azure_native.compute.PatchSettingsArgs(
                assessment_mode="ImageDefault",
                enable_hotpatching=True,
                patch_mode="Manual",
            ),
            provision_vm_agent=True,
            time_zone="aaaaaaaaaaaaaaaaaaaaaaaaaaa",
            win_rm=azure_native.compute.WinRMConfigurationArgs(
                listeners=[azure_native.compute.WinRMListenerArgs(
                    certificate_url="aaaaaaaaaaaaaaaaaaaaaa",
                    protocol=azure_native.compute.ProtocolTypes.HTTP,
                )],
            ),
        ),
    ),
    plan=azure_native.compute.PlanArgs(
        name="aaaaaaaaaa",
        product="aaaaaaaaaaaaaaaaaaaa",
        promotion_code="aaaaaaaaaaaaaaaaaaaa",
        publisher="aaaaaaaaaaaaaaaaaaaaaa",
    ),
    protection_policy=azure_native.compute.VirtualMachineScaleSetVMProtectionPolicyArgs(
        protect_from_scale_in=True,
        protect_from_scale_set_actions=True,
    ),
    resource_group_name="rgcompute",
    security_profile=azure_native.compute.SecurityProfileArgs(
        encryption_at_host=True,
        security_type="TrustedLaunch",
        uefi_settings=azure_native.compute.UefiSettingsArgs(
            secure_boot_enabled=True,
            v_tpm_enabled=True,
        ),
    ),
    storage_profile=azure_native.compute.StorageProfileArgs(
        data_disks=[azure_native.compute.DataDiskArgs(
            caching=azure_native.compute.CachingTypes.NONE,
            create_option="Empty",
            delete_option="Delete",
            detach_option="ForceDetach",
            disk_size_gb=128,
            image=azure_native.compute.VirtualHardDiskArgs(
                uri="https://{storageAccountName}.blob.core.windows.net/{containerName}/{vhdName}.vhd",
            ),
            lun=1,
            managed_disk=azure_native.compute.ManagedDiskParametersArgs(
                disk_encryption_set=azure_native.compute.DiskEncryptionSetParametersArgs(
                    id="aaaaaaaaaaaa",
                ),
                id="/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/disks/vmss3176_vmss3176_0_disk2_6c4f554bdafa49baa780eb2d128ff39d",
                storage_account_type="Standard_LRS",
            ),
            name="vmss3176_vmss3176_0_disk2_6c4f554bdafa49baa780eb2d128ff39d",
            to_be_detached=True,
            vhd=azure_native.compute.VirtualHardDiskArgs(
                uri="https://{storageAccountName}.blob.core.windows.net/{containerName}/{vhdName}.vhd",
            ),
            write_accelerator_enabled=True,
        )],
        image_reference=azure_native.compute.ImageReferenceArgs(
            id="a",
            offer="WindowsServer",
            publisher="MicrosoftWindowsServer",
            shared_gallery_image_id="aaaaaaaaaaaaaaaaaaaa",
            sku="2012-R2-Datacenter",
            version="4.127.20180315",
        ),
        os_disk=azure_native.compute.OSDiskArgs(
            caching=azure_native.compute.CachingTypes.NONE,
            create_option="FromImage",
            delete_option="Delete",
            diff_disk_settings=azure_native.compute.DiffDiskSettingsArgs(
                option="Local",
                placement="CacheDisk",
            ),
            disk_size_gb=127,
            encryption_settings=azure_native.compute.DiskEncryptionSettingsArgs(
                disk_encryption_key=azure_native.compute.KeyVaultSecretReferenceArgs(
                    secret_url="aaaaaaaa",
                    source_vault=azure_native.compute.SubResourceArgs(
                        id="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/availabilitySets/{availabilitySetName}",
                    ),
                ),
                enabled=True,
                key_encryption_key=azure_native.compute.KeyVaultKeyReferenceArgs(
                    key_url="aaaaaaaaaaaaaa",
                    source_vault=azure_native.compute.SubResourceArgs(
                        id="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/availabilitySets/{availabilitySetName}",
                    ),
                ),
            ),
            image=azure_native.compute.VirtualHardDiskArgs(
                uri="https://{storageAccountName}.blob.core.windows.net/{containerName}/{vhdName}.vhd",
            ),
            managed_disk=azure_native.compute.ManagedDiskParametersArgs(
                disk_encryption_set=azure_native.compute.DiskEncryptionSetParametersArgs(
                    id="aaaaaaaaaaaa",
                ),
                id="/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/disks/vmss3176_vmss3176_0_OsDisk_1_6d72b805e50e4de6830303c5055077fc",
                storage_account_type="Standard_LRS",
            ),
            name="vmss3176_vmss3176_0_OsDisk_1_6d72b805e50e4de6830303c5055077fc",
            os_type=azure_native.compute.OperatingSystemTypes.WINDOWS,
            vhd=azure_native.compute.VirtualHardDiskArgs(
                uri="https://{storageAccountName}.blob.core.windows.net/{containerName}/{vhdName}.vhd",
            ),
            write_accelerator_enabled=True,
        ),
    ),
    tags={},
    user_data="RXhhbXBsZSBVc2VyRGF0YQ==",
    vm_scale_set_name="aaaaaaaaaaaaaa")
