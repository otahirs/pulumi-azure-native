import pulumi
import pulumi_azure_native as azure_native

virtual_machine_scale_set = azure_native.compute.VirtualMachineScaleSet("virtualMachineScaleSet",
    location="westus",
    overprovision=True,
    resource_group_name="myResourceGroup",
    sku=azure_native.compute.SkuArgs(
        capacity=3,
        name="Standard_D1_v2",
        tier="Standard",
    ),
    upgrade_policy=azure_native.compute.UpgradePolicyArgs(
        mode=azure_native.compute.UpgradeMode.MANUAL,
    ),
    virtual_machine_profile=azure_native.compute.VirtualMachineScaleSetVMProfileResponseArgs(
        network_profile={
            "networkInterfaceConfigurations": [
                {
                    "disableTcpStateTracking": True,
                    "enableAcceleratedNetworking": True,
                    "enableIPForwarding": True,
                    "ipConfigurations": [{
                        "name": "{vmss-name}",
                        "subnet": azure_native.compute.ApiEntityReferenceArgs(
                            id="/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/{existing-virtual-network-name}/subnets/{existing-subnet-name}",
                        ),
                    }],
                    "name": "{nicConfig1-name}",
                    "primary": True,
                },
                {
                    "disableTcpStateTracking": False,
                    "enableAcceleratedNetworking": False,
                    "enableIPForwarding": False,
                    "ipConfigurations": [{
                        "name": "{nicConfig2-name}",
                        "primary": True,
                        "privateIPAddressVersion": "IPv4",
                        "subnet": azure_native.compute.ApiEntityReferenceArgs(
                            id="/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/{existing-virtual-network-name}/subnets/{existing-fpga-subnet-name2}",
                        ),
                    }],
                    "name": "{nicConfig2-name}",
                    "primary": False,
                },
            ],
        },
        os_profile=azure_native.compute.VirtualMachineScaleSetOSProfileArgs(
            admin_password="{your-password}",
            admin_username="{your-username}",
            computer_name_prefix="{vmss-name}",
        ),
        storage_profile={
            "imageReference": azure_native.compute.ImageReferenceArgs(
                id="/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/images/{existing-custom-image-name}",
            ),
            "osDisk": {
                "caching": azure_native.compute.CachingTypes.READ_WRITE,
                "createOption": "FromImage",
                "managedDisk": azure_native.compute.VirtualMachineScaleSetManagedDiskParametersArgs(
                    storage_account_type="Standard_LRS",
                ),
            },
        },
    ),
    vm_scale_set_name="{vmss-name}")
