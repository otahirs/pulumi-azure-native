import pulumi
import pulumi_azure_native as azure_native

rules_engine = azure_native.network.RulesEngine("rulesEngine",
    front_door_name="frontDoor1",
    resource_group_name="rg1",
    rules=[
        azure_native.network.RulesEngineRuleArgs(
            action=azure_native.network.RulesEngineActionArgs(
                route_configuration_override=azure_native.network.RedirectConfigurationArgs(
                    custom_fragment="fragment",
                    custom_host="www.bing.com",
                    custom_path="/api",
                    custom_query_string="a=b",
                    odata_type="#Microsoft.Azure.FrontDoor.Models.FrontdoorRedirectConfiguration",
                    redirect_protocol="HttpsOnly",
                    redirect_type="Moved",
                ),
            ),
            match_conditions=[azure_native.network.RulesEngineMatchConditionArgs(
                rules_engine_match_value=["CH"],
                rules_engine_match_variable="RemoteAddr",
                rules_engine_operator="GeoMatch",
            )],
            match_processing_behavior="Stop",
            name="Rule1",
            priority=1,
        ),
        azure_native.network.RulesEngineRuleArgs(
            action=azure_native.network.RulesEngineActionArgs(
                response_header_actions=[azure_native.network.HeaderActionArgs(
                    header_action_type="Overwrite",
                    header_name="Cache-Control",
                    value="public, max-age=31536000",
                )],
            ),
            match_conditions=[azure_native.network.RulesEngineMatchConditionArgs(
                rules_engine_match_value=["jpg"],
                rules_engine_match_variable="RequestFilenameExtension",
                rules_engine_operator="Equal",
                transforms=["Lowercase"],
            )],
            name="Rule2",
            priority=2,
        ),
        azure_native.network.RulesEngineRuleArgs(
            action=azure_native.network.RulesEngineActionArgs(
                route_configuration_override=azure_native.network.ForwardingConfigurationArgs(
                    backend_pool=azure_native.network.SubResourceArgs(
                        id="/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/frontDoors/frontDoor1/backendPools/backendPool1",
                    ),
                    cache_configuration=azure_native.network.CacheConfigurationArgs(
                        cache_duration="P1DT12H20M30S",
                        dynamic_compression="Disabled",
                        query_parameter_strip_directive="StripOnly",
                        query_parameters="a=b,p=q",
                    ),
                    forwarding_protocol="HttpsOnly",
                    odata_type="#Microsoft.Azure.FrontDoor.Models.FrontdoorForwardingConfiguration",
                ),
            ),
            match_conditions=[azure_native.network.RulesEngineMatchConditionArgs(
                negate_condition=False,
                rules_engine_match_value=["allowoverride"],
                rules_engine_match_variable="RequestHeader",
                rules_engine_operator="Equal",
                selector="Rules-Engine-Route-Forward",
                transforms=["Lowercase"],
            )],
            name="Rule3",
            priority=3,
        ),
    ],
    rules_engine_name="rulesEngine1")
