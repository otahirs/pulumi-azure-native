import pulumi
import pulumi_azure_native as azure_native

front_door = azure_native.network.FrontDoor("frontDoor",
    backend_pools=[azure_native.network.BackendPoolArgs(
        backends=[
            azure_native.network.BackendArgs(
                address="w3.contoso.com",
                http_port=80,
                https_port=443,
                priority=2,
                weight=1,
            ),
            azure_native.network.BackendArgs(
                address="contoso.com.website-us-west-2.othercloud.net",
                http_port=80,
                https_port=443,
                priority=1,
                private_link_approval_message="Please approve the connection request for this Private Link",
                private_link_location="eastus",
                private_link_resource_id="/subscriptions/subid/resourcegroups/rg1/providers/Microsoft.Network/privateLinkServices/pls1",
                weight=2,
            ),
            azure_native.network.BackendArgs(
                address="10.0.1.5",
                http_port=80,
                https_port=443,
                priority=1,
                private_link_alias="APPSERVER.d84e61f0-0870-4d24-9746-7438fa0019d1.westus2.azure.privatelinkservice",
                private_link_approval_message="Please approve this request to connect to the Private Link",
                weight=1,
            ),
        ],
        health_probe_settings=azure_native.network.SubResourceArgs(
            id="/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/frontDoors/frontDoor1/healthProbeSettings/healthProbeSettings1",
        ),
        load_balancing_settings=azure_native.network.SubResourceArgs(
            id="/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/frontDoors/frontDoor1/loadBalancingSettings/loadBalancingSettings1",
        ),
        name="backendPool1",
    )],
    backend_pools_settings=azure_native.network.BackendPoolsSettingsArgs(
        enforce_certificate_name_check="Enabled",
        send_recv_timeout_seconds=60,
    ),
    enabled_state="Enabled",
    front_door_name="frontDoor1",
    frontend_endpoints=[
        azure_native.network.FrontendEndpointArgs(
            host_name="www.contoso.com",
            name="frontendEndpoint1",
            session_affinity_enabled_state="Enabled",
            session_affinity_ttl_seconds=60,
            web_application_firewall_policy_link=azure_native.network.FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkArgs(
                id="/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/frontDoorWebApplicationFirewallPolicies/policy1",
            ),
        ),
        azure_native.network.FrontendEndpointArgs(
            host_name="frontDoor1.azurefd.net",
            name="default",
        ),
    ],
    health_probe_settings=[azure_native.network.HealthProbeSettingsModelArgs(
        enabled_state="Enabled",
        health_probe_method="HEAD",
        interval_in_seconds=120,
        name="healthProbeSettings1",
        path="/",
        protocol="Http",
    )],
    load_balancing_settings=[azure_native.network.LoadBalancingSettingsModelArgs(
        name="loadBalancingSettings1",
        sample_size=4,
        successful_samples_required=2,
    )],
    location="westus",
    resource_group_name="rg1",
    routing_rules=[azure_native.network.RoutingRuleArgs(
        accepted_protocols=["Http"],
        enabled_state="Enabled",
        frontend_endpoints=[
            azure_native.network.SubResourceArgs(
                id="/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/frontDoors/frontDoor1/frontendEndpoints/frontendEndpoint1",
            ),
            azure_native.network.SubResourceArgs(
                id="/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/frontDoors/frontDoor1/frontendEndpoints/default",
            ),
        ],
        name="routingRule1",
        patterns_to_match=["/*"],
        route_configuration=azure_native.network.ForwardingConfigurationArgs(
            backend_pool=azure_native.network.SubResourceArgs(
                id="/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/frontDoors/frontDoor1/backendPools/backendPool1",
            ),
            odata_type="#Microsoft.Azure.FrontDoor.Models.FrontdoorForwardingConfiguration",
        ),
        rules_engine=azure_native.network.SubResourceArgs(
            id="/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/frontDoors/frontDoor1/rulesEngines/rulesEngine1",
        ),
        web_application_firewall_policy_link=azure_native.network.RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkArgs(
            id="/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/frontDoorWebApplicationFirewallPolicies/policy1",
        ),
    )],
    tags={
        "tag1": "value1",
        "tag2": "value2",
    })
