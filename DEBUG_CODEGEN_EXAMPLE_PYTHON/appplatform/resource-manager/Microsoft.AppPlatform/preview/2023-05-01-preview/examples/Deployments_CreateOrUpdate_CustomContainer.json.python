import pulumi
import pulumi_azure_native as azure_native

deployment = azure_native.appplatform.Deployment("deployment",
    app_name="myapp",
    deployment_name="mydeployment",
    properties=azure_native.appplatform.DeploymentResourcePropertiesResponseArgs(
        deployment_settings={
            "environmentVariables": {
                "env": "test",
            },
            "livenessProbe": azure_native.appplatform.ProbeArgs(
                disable_probe=False,
                failure_threshold=3,
                initial_delay_seconds=30,
                period_seconds=10,
                probe_action=azure_native.appplatform.HTTPGetActionArgs(
                    path="/health",
                    scheme="HTTP",
                    type="HTTPGetAction",
                ),
            ),
            "readinessProbe": azure_native.appplatform.ProbeArgs(
                disable_probe=False,
                failure_threshold=3,
                initial_delay_seconds=30,
                period_seconds=10,
                probe_action=azure_native.appplatform.HTTPGetActionArgs(
                    path="/health",
                    scheme="HTTP",
                    type="HTTPGetAction",
                ),
            ),
            "resourceRequests": azure_native.appplatform.ResourceRequestsArgs(
                cpu="1000m",
                memory="3Gi",
            ),
            "terminationGracePeriodSeconds": 30,
        },
        source=azure_native.appplatform.CustomContainerUserSourceInfoArgs(
            custom_container=azure_native.appplatform.CustomContainerArgs(
                args=[
                    "-c",
                    "while true; do echo hello; sleep 10;done",
                ],
                command=["/bin/sh"],
                container_image="myContainerImage:v1",
                image_registry_credential=azure_native.appplatform.ImageRegistryCredentialArgs(
                    password="myPassword",
                    username="myUsername",
                ),
                language_framework="springboot",
                server="myacr.azurecr.io",
            ),
            type="Container",
        ),
    ),
    resource_group_name="myResourceGroup",
    service_name="myservice")
