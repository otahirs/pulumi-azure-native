import pulumi
import pulumi_azure_native as azure_native

iot_hub_resource = azure_native.devices.IotHubResource("iotHubResource",
    location="centraluseuap",
    properties=azure_native.devices.IotHubPropertiesArgs(
        cloud_to_device=azure_native.devices.CloudToDevicePropertiesArgs(
            default_ttl_as_iso8601="PT1H",
            feedback=azure_native.devices.FeedbackPropertiesArgs(
                lock_duration_as_iso8601="PT1M",
                max_delivery_count=10,
                ttl_as_iso8601="PT1H",
            ),
            max_delivery_count=10,
        ),
        enable_data_residency=True,
        enable_file_upload_notifications=False,
        event_hub_endpoints={
            "events": azure_native.devices.EventHubPropertiesArgs(
                partition_count=2,
                retention_time_in_days=1,
            ),
        },
        features="None",
        ip_filter_rules=[],
        messaging_endpoints={
            "fileNotifications": azure_native.devices.MessagingEndpointPropertiesArgs(
                lock_duration_as_iso8601="PT1M",
                max_delivery_count=10,
                ttl_as_iso8601="PT1H",
            ),
        },
        min_tls_version="1.2",
        network_rule_sets=azure_native.devices.NetworkRuleSetPropertiesArgs(
            apply_to_built_in_event_hub_endpoint=True,
            default_action="Deny",
            ip_rules=[
                azure_native.devices.NetworkRuleSetIpRuleArgs(
                    action="Allow",
                    filter_name="rule1",
                    ip_mask="131.117.159.53",
                ),
                azure_native.devices.NetworkRuleSetIpRuleArgs(
                    action="Allow",
                    filter_name="rule2",
                    ip_mask="157.55.59.128/25",
                ),
            ],
        ),
        root_certificate=azure_native.devices.RootCertificatePropertiesArgs(
            enable_root_certificate_v2=True,
        ),
        routing=azure_native.devices.RoutingPropertiesArgs(
            endpoints=azure_native.devices.RoutingEndpointsArgs(
                event_hubs=[],
                service_bus_queues=[],
                service_bus_topics=[],
                storage_containers=[],
            ),
            fallback_route=azure_native.devices.FallbackRoutePropertiesArgs(
                condition="true",
                endpoint_names=["events"],
                is_enabled=True,
                name="$fallback",
                source="DeviceMessages",
            ),
            routes=[],
        ),
        storage_endpoints={
            "$default": azure_native.devices.StorageEndpointPropertiesArgs(
                connection_string="",
                container_name="",
                sas_ttl_as_iso8601="PT1H",
            ),
        },
    ),
    resource_group_name="myResourceGroup",
    resource_name_="testHub",
    sku=azure_native.devices.IotHubSkuInfoArgs(
        capacity=1,
        name="S1",
    ),
    tags={})
