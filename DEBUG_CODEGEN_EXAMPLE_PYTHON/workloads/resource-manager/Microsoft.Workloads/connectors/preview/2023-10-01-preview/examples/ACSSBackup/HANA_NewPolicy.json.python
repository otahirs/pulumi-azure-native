import pulumi
import pulumi_azure_native as azure_native

acss_backup_connection = azure_native.workloads.ACSSBackupConnection("acssBackupConnection",
    backup_data=azure_native.workloads.HanaBackupDataArgs(
        backup_policy=azure_native.workloads.DBBackupPolicyPropertiesArgs(
            backup_management_type="AzureWorkload",
            name="defaultHanaPolicy",
            protected_items_count=0,
            settings=azure_native.workloads.SettingsArgs(
                is_compression=False,
                issqlcompression=False,
                time_zone="UTC",
            ),
            sub_protection_policy=[
                azure_native.workloads.SubProtectionPolicyArgs(
                    policy_type="Full",
                    retention_policy=azure_native.workloads.LongTermRetentionPolicyArgs(
                        monthly_schedule=azure_native.workloads.MonthlyRetentionScheduleArgs(
                            retention_duration=azure_native.workloads.RetentionDurationArgs(
                                count=60,
                                duration_type="Months",
                            ),
                            retention_schedule_format_type="Weekly",
                            retention_schedule_weekly=azure_native.workloads.WeeklyRetentionFormatArgs(
                                days_of_the_week=[azure_native.workloads.DayOfWeek.SUNDAY],
                                weeks_of_the_month=[azure_native.workloads.WeekOfMonth.FIRST],
                            ),
                            retention_times=["2022-11-29T19:30:00.000Z"],
                        ),
                        retention_policy_type="LongTermRetentionPolicy",
                        weekly_schedule=azure_native.workloads.WeeklyRetentionScheduleArgs(
                            days_of_the_week=[azure_native.workloads.DayOfWeek.SUNDAY],
                            retention_duration=azure_native.workloads.RetentionDurationArgs(
                                count=104,
                                duration_type="Weeks",
                            ),
                            retention_times=["2022-11-29T19:30:00.000Z"],
                        ),
                        yearly_schedule=azure_native.workloads.YearlyRetentionScheduleArgs(
                            months_of_year=[azure_native.workloads.MonthOfYear.JANUARY],
                            retention_duration=azure_native.workloads.RetentionDurationArgs(
                                count=10,
                                duration_type="Years",
                            ),
                            retention_schedule_format_type="Weekly",
                            retention_schedule_weekly=azure_native.workloads.WeeklyRetentionFormatArgs(
                                days_of_the_week=[azure_native.workloads.DayOfWeek.SUNDAY],
                                weeks_of_the_month=[azure_native.workloads.WeekOfMonth.FIRST],
                            ),
                            retention_times=["2022-11-29T19:30:00.000Z"],
                        ),
                    ),
                    schedule_policy=azure_native.workloads.SimpleSchedulePolicyArgs(
                        schedule_policy_type="SimpleSchedulePolicy",
                        schedule_run_days=[azure_native.workloads.DayOfWeek.SUNDAY],
                        schedule_run_frequency="Weekly",
                        schedule_run_times=["2022-11-29T19:30:00.000Z"],
                    ),
                    tiering_policy={
                        "ArchivedRP": azure_native.workloads.TieringPolicyArgs(
                            tiering_mode="DoNotTier",
                        ),
                    },
                ),
                azure_native.workloads.SubProtectionPolicyArgs(
                    policy_type="Differential",
                    retention_policy=azure_native.workloads.SimpleRetentionPolicyArgs(
                        retention_duration=azure_native.workloads.RetentionDurationArgs(
                            count=30,
                            duration_type="Days",
                        ),
                        retention_policy_type="SimpleRetentionPolicy",
                    ),
                    schedule_policy=azure_native.workloads.SimpleSchedulePolicyArgs(
                        schedule_policy_type="SimpleSchedulePolicy",
                        schedule_run_days=[azure_native.workloads.DayOfWeek.MONDAY],
                        schedule_run_frequency="Weekly",
                        schedule_run_times=["2022-09-29T02:00:00Z"],
                        schedule_weekly_frequency=0,
                    ),
                ),
                azure_native.workloads.SubProtectionPolicyArgs(
                    policy_type="Log",
                    retention_policy=azure_native.workloads.SimpleRetentionPolicyArgs(
                        retention_duration=azure_native.workloads.RetentionDurationArgs(
                            count=20,
                            duration_type="Days",
                        ),
                        retention_policy_type="SimpleRetentionPolicy",
                    ),
                    schedule_policy=azure_native.workloads.LogSchedulePolicyArgs(
                        schedule_frequency_in_mins=120,
                        schedule_policy_type="LogSchedulePolicy",
                    ),
                ),
            ],
            work_load_type="SAPHanaDatabase",
        ),
        backup_type="HANA",
        db_instance_snapshot_backup_policy=azure_native.workloads.DBBackupPolicyPropertiesArgs(
            backup_management_type="AzureWorkload",
            name="defaultDbInstanceSnapshotPolicy",
            settings=azure_native.workloads.SettingsArgs(
                is_compression=False,
                issqlcompression=False,
                time_zone="UTC",
            ),
            sub_protection_policy=[azure_native.workloads.SubProtectionPolicyArgs(
                policy_type="SnapshotFull",
                schedule_policy=azure_native.workloads.SimpleSchedulePolicyArgs(
                    schedule_policy_type="SimpleSchedulePolicy",
                    schedule_run_frequency="Daily",
                    schedule_run_times=["2023-09-18T06:30:00.000Z"],
                ),
                snapshot_backup_additional_details=azure_native.workloads.SnapshotBackupAdditionalDetailsArgs(
                    instant_rp_details="test-rg",
                    instant_rp_retention_range_in_days=1,
                    user_assigned_managed_identity_details=azure_native.workloads.UserAssignedManagedIdentityDetailsArgs(
                        identity_arm_id="/subscriptions/6d875e77-e412-4d7d-9af4-8895278b4443/resourcegroups/test-rg/providers/Microsoft.ManagedIdentity/userAssignedIdentities/testMsi",
                        identity_name="testMsi",
                        user_assigned_identity_properties=azure_native.workloads.UserAssignedIdentityPropertiesArgs(
                            client_id="c3a877cf-51f8-4031-8f17-ab562d1e7737",
                            principal_id="2f5834bd-4b86-4d85-a8df-6dd829a6418c",
                        ),
                    ),
                ),
            )],
            work_load_type="SAPHanaDBInstance",
        ),
        hdbuserstore_key_name="abcd",
        instance_number="00",
        recovery_services_vault=azure_native.workloads.NewRecoveryServicesVaultArgs(
            name="test-vault",
            resource_group="test-rg",
            vault_type="New",
        ),
        ssl_configuration=azure_native.workloads.SSLConfigurationArgs(
            ssl_crypto_provider="commoncrypto",
            ssl_host_name_in_certificate="hostname",
            ssl_key_store="sapsrv.pse",
            ssl_trust_store="sapsrv.pse",
        ),
    ),
    backup_name="dbBackup",
    connector_name="C1",
    location="westcentralus",
    resource_group_name="test-rg",
    tags={})
