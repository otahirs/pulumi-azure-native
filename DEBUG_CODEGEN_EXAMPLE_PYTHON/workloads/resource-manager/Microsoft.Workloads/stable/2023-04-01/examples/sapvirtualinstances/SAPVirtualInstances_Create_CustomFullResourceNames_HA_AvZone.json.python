import pulumi
import pulumi_azure_native as azure_native

sap_virtual_instance = azure_native.workloads.SAPVirtualInstance("sapVirtualInstance",
    configuration=azure_native.workloads.DeploymentWithOSConfigurationArgs(
        app_location="eastus",
        configuration_type="DeploymentWithOSConfig",
        infrastructure_configuration=azure_native.workloads.ThreeTierConfigurationArgs(
            app_resource_group="X00-RG",
            application_server=azure_native.workloads.ApplicationServerConfigurationArgs(
                instance_count=6,
                subnet_id="/subscriptions/49d64d54-e966-4c46-a868-1999802b762c/resourceGroups/test-rg/providers/Microsoft.Networks/virtualNetworks/test-vnet/subnets/appsubnet",
                virtual_machine_configuration=azure_native.workloads.VirtualMachineConfigurationArgs(
                    image_reference=azure_native.workloads.ImageReferenceArgs(
                        offer="RHEL-SAP",
                        publisher="RedHat",
                        sku="84sapha-gen2",
                        version="latest",
                    ),
                    os_profile=azure_native.workloads.OSProfileArgs(
                        admin_username="{your-username}",
                        os_configuration=azure_native.workloads.LinuxConfigurationArgs(
                            disable_password_authentication=True,
                            os_type="Linux",
                            ssh_key_pair=azure_native.workloads.SshKeyPairArgs(
                                private_key="xyz",
                                public_key="abc",
                            ),
                        ),
                    ),
                    vm_size="Standard_E32ds_v4",
                ),
            ),
            central_server=azure_native.workloads.CentralServerConfigurationArgs(
                instance_count=2,
                subnet_id="/subscriptions/49d64d54-e966-4c46-a868-1999802b762c/resourceGroups/test-rg/providers/Microsoft.Networks/virtualNetworks/test-vnet/subnets/appsubnet",
                virtual_machine_configuration=azure_native.workloads.VirtualMachineConfigurationArgs(
                    image_reference=azure_native.workloads.ImageReferenceArgs(
                        offer="RHEL-SAP",
                        publisher="RedHat",
                        sku="84sapha-gen2",
                        version="latest",
                    ),
                    os_profile=azure_native.workloads.OSProfileArgs(
                        admin_username="{your-username}",
                        os_configuration=azure_native.workloads.LinuxConfigurationArgs(
                            disable_password_authentication=True,
                            os_type="Linux",
                            ssh_key_pair=azure_native.workloads.SshKeyPairArgs(
                                private_key="xyz",
                                public_key="abc",
                            ),
                        ),
                    ),
                    vm_size="Standard_E16ds_v4",
                ),
            ),
            custom_resource_names=azure_native.workloads.ThreeTierFullResourceNamesArgs(
                application_server=azure_native.workloads.ApplicationServerFullResourceNamesArgs(
                    virtual_machines=[
                        azure_native.workloads.VirtualMachineResourceNamesArgs(
                            data_disk_names={
                                "default": ["app0disk0"],
                            },
                            host_name="apphostName0",
                            network_interfaces=[azure_native.workloads.NetworkInterfaceResourceNamesArgs(
                                network_interface_name="appnic0",
                            )],
                            os_disk_name="app0osdisk",
                            vm_name="appvm0",
                        ),
                        azure_native.workloads.VirtualMachineResourceNamesArgs(
                            data_disk_names={
                                "default": ["app1disk0"],
                            },
                            host_name="apphostName1",
                            network_interfaces=[azure_native.workloads.NetworkInterfaceResourceNamesArgs(
                                network_interface_name="appnic1",
                            )],
                            os_disk_name="app1osdisk",
                            vm_name="appvm1",
                        ),
                    ],
                ),
                central_server=azure_native.workloads.CentralServerFullResourceNamesArgs(
                    load_balancer=azure_native.workloads.LoadBalancerResourceNamesArgs(
                        backend_pool_names=["ascsBackendPool"],
                        frontend_ip_configuration_names=[
                            "ascsip0",
                            "ersip0",
                        ],
                        health_probe_names=[
                            "ascsHealthProbe",
                            "ersHealthProbe",
                        ],
                        load_balancer_name="ascslb",
                    ),
                    virtual_machines=[
                        azure_native.workloads.VirtualMachineResourceNamesArgs(
                            host_name="ascshostName",
                            network_interfaces=[azure_native.workloads.NetworkInterfaceResourceNamesArgs(
                                network_interface_name="ascsnic",
                            )],
                            os_disk_name="ascsosdisk",
                            vm_name="ascsvm",
                        ),
                        azure_native.workloads.VirtualMachineResourceNamesArgs(
                            host_name="ershostName",
                            network_interfaces=[azure_native.workloads.NetworkInterfaceResourceNamesArgs(
                                network_interface_name="ersnic",
                            )],
                            os_disk_name="ersosdisk",
                            vm_name="ersvm",
                        ),
                    ],
                ),
                database_server=azure_native.workloads.DatabaseServerFullResourceNamesArgs(
                    load_balancer=azure_native.workloads.LoadBalancerResourceNamesArgs(
                        backend_pool_names=["dbBackendPool"],
                        frontend_ip_configuration_names=["dbip"],
                        health_probe_names=["dbHealthProbe"],
                        load_balancer_name="dblb",
                    ),
                    virtual_machines=[
                        azure_native.workloads.VirtualMachineResourceNamesArgs(
                            data_disk_names={
                                "hanaData": [
                                    "hanadatapr0",
                                    "hanadatapr1",
                                ],
                                "hanaLog": [
                                    "hanalogpr0",
                                    "hanalogpr1",
                                    "hanalogpr2",
                                ],
                                "hanaShared": [
                                    "hanasharedpr0",
                                    "hanasharedpr1",
                                ],
                                "usrSap": ["usrsappr0"],
                            },
                            host_name="dbprhostName",
                            network_interfaces=[azure_native.workloads.NetworkInterfaceResourceNamesArgs(
                                network_interface_name="dbprnic",
                            )],
                            os_disk_name="dbprosdisk",
                            vm_name="dbvmpr",
                        ),
                        azure_native.workloads.VirtualMachineResourceNamesArgs(
                            data_disk_names={
                                "hanaData": [
                                    "hanadatasr0",
                                    "hanadatasr1",
                                ],
                                "hanaLog": [
                                    "hanalogsr0",
                                    "hanalogsr1",
                                    "hanalogsr2",
                                ],
                                "hanaShared": [
                                    "hanasharedsr0",
                                    "hanasharedsr1",
                                ],
                                "usrSap": ["usrsapsr0"],
                            },
                            host_name="dbsrhostName",
                            network_interfaces=[azure_native.workloads.NetworkInterfaceResourceNamesArgs(
                                network_interface_name="dbsrnic",
                            )],
                            os_disk_name="dbsrosdisk",
                            vm_name="dbvmsr",
                        ),
                    ],
                ),
                naming_pattern_type="FullResourceName",
                shared_storage=azure_native.workloads.SharedStorageResourceNamesArgs(
                    shared_storage_account_name="storageacc",
                    shared_storage_account_private_end_point_name="peForxNFS",
                ),
            ),
            database_server=azure_native.workloads.DatabaseConfigurationArgs(
                database_type="HANA",
                instance_count=2,
                subnet_id="/subscriptions/49d64d54-e966-4c46-a868-1999802b762c/resourceGroups/test-rg/providers/Microsoft.Networks/virtualNetworks/test-vnet/subnets/dbsubnet",
                virtual_machine_configuration=azure_native.workloads.VirtualMachineConfigurationArgs(
                    image_reference=azure_native.workloads.ImageReferenceArgs(
                        offer="RHEL-SAP",
                        publisher="RedHat",
                        sku="84sapha-gen2",
                        version="latest",
                    ),
                    os_profile=azure_native.workloads.OSProfileArgs(
                        admin_username="{your-username}",
                        os_configuration=azure_native.workloads.LinuxConfigurationArgs(
                            disable_password_authentication=True,
                            os_type="Linux",
                            ssh_key_pair=azure_native.workloads.SshKeyPairArgs(
                                private_key="xyz",
                                public_key="abc",
                            ),
                        ),
                    ),
                    vm_size="Standard_M32ts",
                ),
            ),
            deployment_type="ThreeTier",
            high_availability_config=azure_native.workloads.HighAvailabilityConfigurationArgs(
                high_availability_type="AvailabilityZone",
            ),
        ),
        os_sap_configuration=azure_native.workloads.OsSapConfigurationArgs(
            sap_fqdn="xyz.test.com",
        ),
    ),
    environment="Prod",
    location="westcentralus",
    resource_group_name="test-rg",
    sap_product="S4HANA",
    sap_virtual_instance_name="X00",
    tags={})
