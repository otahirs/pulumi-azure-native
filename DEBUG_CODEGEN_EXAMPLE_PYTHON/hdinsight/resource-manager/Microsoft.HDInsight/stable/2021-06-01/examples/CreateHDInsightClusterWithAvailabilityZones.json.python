import pulumi
import pulumi_azure_native as azure_native

cluster = azure_native.hdinsight.Cluster("cluster",
    cluster_name="cluster1",
    properties=azure_native.hdinsight.ClusterGetPropertiesResponseArgs(
        cluster_definition=azure_native.hdinsight.ClusterDefinitionArgs(
            configurations={
                "ambari-conf": {
                    "database-name": "{ambari database name}",
                    "database-server": "{sql server name}.database.windows.net",
                    "database-user-name": "**********",
                    "database-user-password": "**********",
                },
                "gateway": {
                    "restAuthCredential.isEnabled": True,
                    "restAuthCredential.password": "**********",
                    "restAuthCredential.username": "admin",
                },
                "hive-env": {
                    "hive_database": "Existing MSSQL Server database with SQL authentication",
                    "hive_database_name": "{hive metastore name}",
                    "hive_database_type": "mssql",
                    "hive_existing_mssql_server_database": "{hive metastore name}",
                    "hive_existing_mssql_server_host": "{sql server name}.database.windows.net",
                    "hive_hostname": "{sql server name}.database.windows.net",
                },
                "hive-site": {
                    "javax.jdo.option.ConnectionDriverName": "com.microsoft.sqlserver.jdbc.SQLServerDriver",
                    "javax.jdo.option.ConnectionPassword": "**********!",
                    "javax.jdo.option.ConnectionURL": "jdbc:sqlserver://{sql server name}.database.windows.net;database={hive metastore name};encrypt=true;trustServerCertificate=true;create=false;loginTimeout=300;sendStringParametersAsUnicode=true;prepareSQL=0",
                    "javax.jdo.option.ConnectionUserName": "**********",
                },
                "oozie-env": {
                    "oozie_database": "Existing MSSQL Server database with SQL authentication",
                    "oozie_database_name": "{oozie metastore name}",
                    "oozie_database_type": "mssql",
                    "oozie_existing_mssql_server_database": "{oozie metastore name}",
                    "oozie_existing_mssql_server_host": "{sql server name}.database.windows.net",
                    "oozie_hostname": "{sql server name}.database.windows.net",
                },
                "oozie-site": {
                    "oozie.db.schema.name": "oozie",
                    "oozie.service.JPAService.jdbc.driver": "com.microsoft.sqlserver.jdbc.SQLServerDriver",
                    "oozie.service.JPAService.jdbc.password": "**********",
                    "oozie.service.JPAService.jdbc.url": "jdbc:sqlserver://{sql server name}.database.windows.net;database={oozie metastore name};encrypt=true;trustServerCertificate=true;create=false;loginTimeout=300;sendStringParametersAsUnicode=true;prepareSQL=0",
                    "oozie.service.JPAService.jdbc.username": "**********",
                },
            },
            kind="hadoop",
        ),
        cluster_version="3.6",
        compute_profile={
            "roles": [
                {
                    "hardwareProfile": azure_native.hdinsight.HardwareProfileArgs(
                        vm_size="standard_d3",
                    ),
                    "name": "headnode",
                    "osProfile": {
                        "linuxOperatingSystemProfile": {
                            "password": "**********",
                            "sshProfile": {
                                "publicKeys": [azure_native.hdinsight.SshPublicKeyArgs(
                                    certificate_data="**********",
                                )],
                            },
                            "username": "sshuser",
                        },
                    },
                    "targetInstanceCount": 2,
                    "virtualNetworkProfile": azure_native.hdinsight.VirtualNetworkProfileArgs(
                        id="/subscriptions/subId/resourceGroups/rg/providers/Microsoft.Network/virtualNetworks/vnetname",
                        subnet="/subscriptions/subId/resourceGroups/rg/providers/Microsoft.Network/virtualNetworks/vnetname/subnets/vnetsubnet",
                    ),
                },
                {
                    "hardwareProfile": azure_native.hdinsight.HardwareProfileArgs(
                        vm_size="standard_d3",
                    ),
                    "name": "workernode",
                    "osProfile": {
                        "linuxOperatingSystemProfile": {
                            "password": "**********",
                            "sshProfile": {
                                "publicKeys": [azure_native.hdinsight.SshPublicKeyArgs(
                                    certificate_data="**********",
                                )],
                            },
                            "username": "sshuser",
                        },
                    },
                    "targetInstanceCount": 2,
                    "virtualNetworkProfile": azure_native.hdinsight.VirtualNetworkProfileArgs(
                        id="/subscriptions/subId/resourceGroups/rg/providers/Microsoft.Network/virtualNetworks/vnetname",
                        subnet="/subscriptions/subId/resourceGroups/rg/providers/Microsoft.Network/virtualNetworks/vnetname/subnets/vnetsubnet",
                    ),
                },
            ],
        },
        os_type="Linux",
        storage_profile={
            "storageaccounts": [azure_native.hdinsight.StorageAccountArgs(
                container="containername",
                is_default=True,
                key="storage account key",
                name="mystorage",
            )],
        },
    ),
    resource_group_name="rg1",
    zones=["1"])
