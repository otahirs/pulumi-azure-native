import pulumi
import pulumi_azure_native as azure_native

vendor_skus = azure_native.hybridnetwork.VendorSkus("vendorSkus",
    deployment_mode="PrivateEdgeZone",
    managed_application_template={},
    network_function_template=azure_native.hybridnetwork.NetworkFunctionTemplateArgs(
        network_function_role_configurations=[azure_native.hybridnetwork.NetworkFunctionRoleConfigurationArgs(
            custom_profile=azure_native.hybridnetwork.CustomProfileArgs(
                metadata_configuration_path="/var/logs/network.cfg",
            ),
            network_interfaces=[
                azure_native.hybridnetwork.NetworkInterfaceArgs(
                    ip_configurations=[azure_native.hybridnetwork.NetworkInterfaceIPConfigurationArgs(
                        gateway="",
                        ip_address="",
                        ip_allocation_method="Dynamic",
                        ip_version="IPv4",
                        subnet="",
                    )],
                    mac_address="",
                    network_interface_name="nic1",
                    vm_switch_type="Wan",
                ),
                azure_native.hybridnetwork.NetworkInterfaceArgs(
                    ip_configurations=[azure_native.hybridnetwork.NetworkInterfaceIPConfigurationArgs(
                        gateway="",
                        ip_address="",
                        ip_allocation_method="Dynamic",
                        ip_version="IPv4",
                        subnet="",
                    )],
                    mac_address="",
                    network_interface_name="nic2",
                    vm_switch_type="Management",
                ),
            ],
            os_profile=azure_native.hybridnetwork.OsProfileArgs(
                admin_username="dummyuser",
                custom_data="base-64 encoded string of custom data",
                linux_configuration=azure_native.hybridnetwork.LinuxConfigurationArgs(
                    ssh=azure_native.hybridnetwork.SshConfigurationArgs(
                        public_keys=[azure_native.hybridnetwork.SshPublicKeyArgs(
                            key_data="ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAgEAwrr66r8n6B8Y0zMF3dOpXEapIQD9DiYQ6D6/zwor9o39jSkHNiMMER/GETBbzP83LOcekm02aRjo55ArO7gPPVvCXbrirJu9pkm4AC4BBre5xSLS= user@constoso-DSH",
                            path="home/user/.ssh/authorized_keys",
                        )],
                    ),
                ),
            ),
            role_name="test",
            role_type="VirtualMachine",
            storage_profile=azure_native.hybridnetwork.StorageProfileArgs(
                data_disks=[azure_native.hybridnetwork.DataDiskArgs(
                    create_option="Empty",
                    disk_size_gb=10,
                    name="DataDisk1",
                )],
                image_reference=azure_native.hybridnetwork.ImageReferenceArgs(
                    offer="UbuntuServer",
                    publisher="Canonical",
                    sku="18.04-LTS",
                    version="18.04.201804262",
                ),
                os_disk=azure_native.hybridnetwork.OsDiskArgs(
                    disk_size_gb=30,
                    name="vhdName",
                    os_type="Linux",
                    vhd=azure_native.hybridnetwork.VirtualHardDiskArgs(
                        uri="https://contoso.net/link/vnd.vhd?sp=rl&st=2020-10-08T20:38:19Z&se=2020-12-09T19:38:00Z&sv=2019-12-12&sr=b&sig=7BM2f4yOw%3D",
                    ),
                ),
            ),
            virtual_machine_size="Standard_D3_v2",
        )],
    ),
    network_function_type="VirtualNetworkFunction",
    preview=True,
    sku_name="TestSku",
    vendor_name="TestVendor")
