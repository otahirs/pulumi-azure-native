import pulumi
import pulumi_azure_native as azure_native

azure_firewall = azure_native.network.AzureFirewall("azureFirewall",
    application_rule_collections=[azure_native.network.AzureFirewallApplicationRuleCollectionArgs(
        action=azure_native.network.AzureFirewallRCActionArgs(
            type="Deny",
        ),
        name="apprulecoll",
        priority=110,
        rules=[azure_native.network.AzureFirewallApplicationRuleArgs(
            description="Deny inbound rule",
            name="rule1",
            protocols=[azure_native.network.AzureFirewallApplicationRuleProtocolArgs(
                port=443,
                protocol_type="Https",
            )],
            source_addresses=[
                "216.58.216.164",
                "10.0.0.0/24",
            ],
            target_fqdns=["www.test.com"],
        )],
    )],
    azure_firewall_name="azurefirewall",
    ip_configurations=[azure_native.network.AzureFirewallIPConfigurationArgs(
        name="azureFirewallIpConfiguration",
        public_ip_address=azure_native.network.SubResourceArgs(
            id="/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/publicIPAddresses/pipName",
        ),
        subnet=azure_native.network.SubResourceArgs(
            id="/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/vnet2/subnets/AzureFirewallSubnet",
        ),
    )],
    location="West US 2",
    nat_rule_collections=[azure_native.network.AzureFirewallNatRuleCollectionArgs(
        action=azure_native.network.AzureFirewallNatRCActionArgs(
            type="Dnat",
        ),
        name="natrulecoll",
        priority=112,
        rules=[
            azure_native.network.AzureFirewallNatRuleArgs(
                description="D-NAT all outbound web traffic for inspection",
                destination_addresses=["1.2.3.4"],
                destination_ports=["443"],
                name="DNAT-HTTPS-traffic",
                protocols=["TCP"],
                source_addresses=["*"],
                translated_address="1.2.3.5",
                translated_port="8443",
            ),
            azure_native.network.AzureFirewallNatRuleArgs(
                description="D-NAT all inbound web traffic for inspection",
                destination_addresses=["1.2.3.4"],
                destination_ports=["80"],
                name="DNAT-HTTP-traffic-With-FQDN",
                protocols=["TCP"],
                source_addresses=["*"],
                translated_fqdn="internalhttpserver",
                translated_port="880",
            ),
        ],
    )],
    network_rule_collections=[azure_native.network.AzureFirewallNetworkRuleCollectionArgs(
        action=azure_native.network.AzureFirewallRCActionArgs(
            type="Deny",
        ),
        name="netrulecoll",
        priority=112,
        rules=[
            azure_native.network.AzureFirewallNetworkRuleArgs(
                description="Block traffic based on source IPs and ports",
                destination_addresses=["*"],
                destination_ports=[
                    "443-444",
                    "8443",
                ],
                name="L4-traffic",
                protocols=["TCP"],
                source_addresses=[
                    "192.168.1.1-192.168.1.12",
                    "10.1.4.12-10.1.4.255",
                ],
            ),
            azure_native.network.AzureFirewallNetworkRuleArgs(
                description="Block traffic based on source IPs and ports to amazon",
                destination_fqdns=["www.amazon.com"],
                destination_ports=[
                    "443-444",
                    "8443",
                ],
                name="L4-traffic-with-FQDN",
                protocols=["TCP"],
                source_addresses=["10.2.4.12-10.2.4.255"],
            ),
        ],
    )],
    resource_group_name="rg1",
    sku=azure_native.network.AzureFirewallSkuArgs(
        name="AZFW_VNet",
        tier="Standard",
    ),
    tags={
        "key1": "value1",
    },
    threat_intel_mode="Alert",
    zones=[
        "1",
        "2",
        "3",
    ])
