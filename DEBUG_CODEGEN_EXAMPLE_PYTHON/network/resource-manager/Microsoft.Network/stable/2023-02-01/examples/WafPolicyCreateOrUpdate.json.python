import pulumi
import pulumi_azure_native as azure_native

web_application_firewall_policy = azure_native.network.WebApplicationFirewallPolicy("webApplicationFirewallPolicy",
    custom_rules=[
        azure_native.network.WebApplicationFirewallCustomRuleArgs(
            action="Block",
            match_conditions=[azure_native.network.MatchConditionArgs(
                match_values=[
                    "192.168.1.0/24",
                    "10.0.0.0/24",
                ],
                match_variables=[azure_native.network.MatchVariableArgs(
                    variable_name="RemoteAddr",
                )],
                operator="IPMatch",
            )],
            name="Rule1",
            priority=1,
            rule_type="MatchRule",
        ),
        azure_native.network.WebApplicationFirewallCustomRuleArgs(
            action="Block",
            match_conditions=[
                azure_native.network.MatchConditionArgs(
                    match_values=["192.168.1.0/24"],
                    match_variables=[azure_native.network.MatchVariableArgs(
                        variable_name="RemoteAddr",
                    )],
                    operator="IPMatch",
                ),
                azure_native.network.MatchConditionArgs(
                    match_values=["Windows"],
                    match_variables=[azure_native.network.MatchVariableArgs(
                        selector="UserAgent",
                        variable_name="RequestHeaders",
                    )],
                    operator="Contains",
                ),
            ],
            name="Rule2",
            priority=2,
            rule_type="MatchRule",
        ),
        azure_native.network.WebApplicationFirewallCustomRuleArgs(
            action="Block",
            group_by_user_session=[azure_native.network.GroupByUserSessionArgs(
                group_by_variables=[azure_native.network.GroupByVariableArgs(
                    variable_name="ClientAddr",
                )],
            )],
            match_conditions=[azure_native.network.MatchConditionArgs(
                match_values=[
                    "192.168.1.0/24",
                    "10.0.0.0/24",
                ],
                match_variables=[azure_native.network.MatchVariableArgs(
                    variable_name="RemoteAddr",
                )],
                negation_conditon=True,
                operator="IPMatch",
            )],
            name="RateLimitRule3",
            priority=3,
            rate_limit_duration="OneMin",
            rate_limit_threshold=10,
            rule_type="RateLimitRule",
        ),
    ],
    location="WestUs",
    managed_rules=azure_native.network.ManagedRulesDefinitionArgs(
        exclusions=[
            azure_native.network.OwaspCrsExclusionEntryArgs(
                exclusion_managed_rule_sets=[azure_native.network.ExclusionManagedRuleSetArgs(
                    rule_groups=[
                        azure_native.network.ExclusionManagedRuleGroupArgs(
                            rule_group_name="REQUEST-930-APPLICATION-ATTACK-LFI",
                            rules=[azure_native.network.ExclusionManagedRuleArgs(
                                rule_id="930120",
                            )],
                        ),
                        azure_native.network.ExclusionManagedRuleGroupArgs(
                            rule_group_name="REQUEST-932-APPLICATION-ATTACK-RCE",
                        ),
                    ],
                    rule_set_type="OWASP",
                    rule_set_version="3.2",
                )],
                match_variable="RequestArgNames",
                selector="hello",
                selector_match_operator="StartsWith",
            ),
            azure_native.network.OwaspCrsExclusionEntryArgs(
                exclusion_managed_rule_sets=[azure_native.network.ExclusionManagedRuleSetArgs(
                    rule_groups=[],
                    rule_set_type="OWASP",
                    rule_set_version="3.1",
                )],
                match_variable="RequestArgNames",
                selector="hello",
                selector_match_operator="EndsWith",
            ),
            azure_native.network.OwaspCrsExclusionEntryArgs(
                match_variable="RequestArgNames",
                selector="test",
                selector_match_operator="StartsWith",
            ),
            azure_native.network.OwaspCrsExclusionEntryArgs(
                match_variable="RequestArgValues",
                selector="test",
                selector_match_operator="StartsWith",
            ),
        ],
        managed_rule_sets=[azure_native.network.ManagedRuleSetArgs(
            rule_group_overrides=[azure_native.network.ManagedRuleGroupOverrideArgs(
                rule_group_name="REQUEST-931-APPLICATION-ATTACK-RFI",
                rules=[
                    azure_native.network.ManagedRuleOverrideArgs(
                        action="Log",
                        rule_id="931120",
                        state="Enabled",
                    ),
                    azure_native.network.ManagedRuleOverrideArgs(
                        action="AnomalyScoring",
                        rule_id="931130",
                        state="Disabled",
                    ),
                ],
            )],
            rule_set_type="OWASP",
            rule_set_version="3.2",
        )],
    ),
    policy_name="Policy1",
    policy_settings=azure_native.network.PolicySettingsArgs(
        log_scrubbing=azure_native.network.PolicySettingsLogScrubbingArgs(
            scrubbing_rules=[
                azure_native.network.WebApplicationFirewallScrubbingRulesArgs(
                    match_variable="RequestArgNames",
                    selector="test",
                    selector_match_operator="Equals",
                    state="Enabled",
                ),
                azure_native.network.WebApplicationFirewallScrubbingRulesArgs(
                    match_variable="RequestIPAddress",
                    selector_match_operator="EqualsAny",
                    state="Enabled",
                ),
            ],
            state="Enabled",
        ),
    ),
    resource_group_name="rg1")
