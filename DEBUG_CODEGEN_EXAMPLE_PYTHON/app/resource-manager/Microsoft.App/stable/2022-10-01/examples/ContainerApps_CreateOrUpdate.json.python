import pulumi
import pulumi_azure_native as azure_native

container_app = azure_native.app.ContainerApp("containerApp",
    configuration=azure_native.app.ConfigurationResponseArgs(
        dapr=azure_native.app.DaprArgs(
            app_port=3000,
            app_protocol="http",
            enable_api_logging=True,
            enabled=True,
            http_max_request_size=10,
            http_read_buffer_size=30,
            log_level="debug",
        ),
        ingress={
            "clientCertificateMode": "accept",
            "corsPolicy": azure_native.app.CorsPolicyArgs(
                allow_credentials=True,
                allowed_headers=[
                    "HEADER1",
                    "HEADER2",
                ],
                allowed_methods=[
                    "GET",
                    "POST",
                ],
                allowed_origins=[
                    "https://a.test.com",
                    "https://b.test.com",
                ],
                expose_headers=[
                    "HEADER3",
                    "HEADER4",
                ],
                max_age=1234,
            ),
            "customDomains": [
                azure_native.app.CustomDomainArgs(
                    binding_type="SniEnabled",
                    certificate_id="/subscriptions/34adfa4f-cedf-4dc0-ba29-b6d1a69ab345/resourceGroups/rg/providers/Microsoft.App/managedEnvironments/demokube/certificates/my-certificate-for-my-name-dot-com",
                    name="www.my-name.com",
                ),
                azure_native.app.CustomDomainArgs(
                    binding_type="SniEnabled",
                    certificate_id="/subscriptions/34adfa4f-cedf-4dc0-ba29-b6d1a69ab345/resourceGroups/rg/providers/Microsoft.App/managedEnvironments/demokube/certificates/my-certificate-for-my-other-name-dot-com",
                    name="www.my-other-name.com",
                ),
            ],
            "external": True,
            "ipSecurityRestrictions": [
                azure_native.app.IpSecurityRestrictionRuleArgs(
                    action="Allow",
                    description="Allowing all IP's within the subnet below to access containerapp",
                    ip_address_range="192.168.1.1/32",
                    name="Allow work IP A subnet",
                ),
                azure_native.app.IpSecurityRestrictionRuleArgs(
                    action="Allow",
                    description="Allowing all IP's within the subnet below to access containerapp",
                    ip_address_range="192.168.1.1/8",
                    name="Allow work IP B subnet",
                ),
            ],
            "targetPort": 3000,
            "traffic": [azure_native.app.TrafficWeightArgs(
                label="production",
                revision_name="testcontainerapp0-ab1234",
                weight=100,
            )],
        },
        max_inactive_revisions=10,
    ),
    container_app_name="testcontainerapp0",
    environment_id="/subscriptions/34adfa4f-cedf-4dc0-ba29-b6d1a69ab345/resourceGroups/rg/providers/Microsoft.App/managedEnvironments/demokube",
    location="East US",
    resource_group_name="rg",
    template=azure_native.app.TemplateResponseArgs(
        containers=[{
            "image": "repo/testcontainerapp0:v1",
            "name": "testcontainerapp0",
            "probes": [{
                "httpGet": {
                    "httpHeaders": [azure_native.app.ContainerAppProbeHttpHeadersArgs(
                        name="Custom-Header",
                        value="Awesome",
                    )],
                    "path": "/health",
                    "port": 8080,
                },
                "initialDelaySeconds": 3,
                "periodSeconds": 3,
                "type": "Liveness",
            }],
        }],
        init_containers=[{
            "args": [
                "-c",
                "while true; do echo hello; sleep 10;done",
            ],
            "command": ["/bin/sh"],
            "image": "repo/testcontainerapp0:v4",
            "name": "testinitcontainerApp0",
            "resources": azure_native.app.ContainerResourcesArgs(
                cpu=0.5,
                memory="1Gi",
            ),
        }],
        scale={
            "maxReplicas": 5,
            "minReplicas": 1,
            "rules": [{
                "custom": azure_native.app.CustomScaleRuleArgs(
                    metadata={
                        "concurrentRequests": "50",
                    },
                    type="http",
                ),
                "name": "httpscalingrule",
            }],
        },
    ),
    workload_profile_type="GeneralPurpose")
