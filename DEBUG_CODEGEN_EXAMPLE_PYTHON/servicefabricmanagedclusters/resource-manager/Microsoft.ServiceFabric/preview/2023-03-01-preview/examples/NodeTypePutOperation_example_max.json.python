import pulumi
import pulumi_azure_native as azure_native

node_type = azure_native.servicefabric.NodeType("nodeType",
    additional_data_disks=[
        azure_native.servicefabric.VmssDataDiskArgs(
            disk_letter="F",
            disk_size_gb=256,
            disk_type="StandardSSD_LRS",
            lun=1,
        ),
        azure_native.servicefabric.VmssDataDiskArgs(
            disk_letter="G",
            disk_size_gb=150,
            disk_type="Premium_LRS",
            lun=2,
        ),
    ],
    capacities={
        "ClientConnections": "65536",
    },
    cluster_name="myCluster",
    data_disk_letter="S",
    data_disk_size_gb=200,
    data_disk_type="Premium_LRS",
    enable_accelerated_networking=True,
    enable_encryption_at_host=True,
    enable_node_public_ip=True,
    enable_over_provisioning=False,
    eviction_policy="Deallocate",
    frontend_configurations=[azure_native.servicefabric.FrontendConfigurationArgs(
        application_gateway_backend_address_pool_id="/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resRg/providers/Microsoft.Network/applicationGateways/appgw-test/backendAddressPools/appgwBepoolTest",
        load_balancer_backend_address_pool_id="/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resRg/providers/Microsoft.Network/loadBalancers/test-LB/backendAddressPools/LoadBalancerBEAddressPool",
        load_balancer_inbound_nat_pool_id="/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resRg/providers/Microsoft.Network/loadBalancers/test-LB/inboundNatPools/LoadBalancerNATPool",
    )],
    is_primary=False,
    is_spot_vm=True,
    is_stateless=True,
    multiple_placement_groups=True,
    nat_gateway_id="/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resRg/providers/Microsoft.Network/natGateways/myNatGateway",
    node_type_name="BE",
    placement_properties={
        "HasSSD": "true",
        "NodeColor": "green",
        "SomeProperty": "5",
    },
    resource_group_name="resRg",
    secure_boot_enabled=True,
    security_type="TrustedLaunch",
    spot_restore_timeout="PT30M",
    subnet_id="/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resRg/providers/Microsoft.Network/virtualNetworks/vnet1/subnets/subnet1",
    use_default_public_load_balancer=True,
    use_ephemeral_os_disk=True,
    vm_extensions=[azure_native.servicefabric.VMSSExtensionArgs(
        auto_upgrade_minor_version=True,
        enable_automatic_upgrade=True,
        force_update_tag="v.1.0",
        name="Microsoft.Azure.Geneva.GenevaMonitoring",
        publisher="Microsoft.Azure.Geneva",
        settings={},
        type="GenevaMonitoring",
        type_handler_version="2.0",
    )],
    vm_image_offer="WindowsServer",
    vm_image_publisher="MicrosoftWindowsServer",
    vm_image_sku="2016-Datacenter-Server-Core",
    vm_image_version="latest",
    vm_instance_count=10,
    vm_managed_identity=azure_native.servicefabric.VmManagedIdentityArgs(
        user_assigned_identities=[
            "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resRg/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myIdentity",
            "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resRg/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myIdentity2",
        ],
    ),
    vm_secrets=[{
        "sourceVault": azure_native.servicefabric.SubResourceArgs(
            id="/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resRg/providers/Microsoft.KeyVault/vaults/myVault",
        ),
        "vaultCertificates": [azure_native.servicefabric.VaultCertificateArgs(
            certificate_store="My",
            certificate_url="https://myVault.vault.azure.net:443/secrets/myCert/ef1a31d39e1f46bca33def54b6cda54c",
        )],
    }],
    vm_setup_actions=[
        "EnableContainers",
        "EnableHyperV",
    ],
    vm_size="Standard_DS3")
