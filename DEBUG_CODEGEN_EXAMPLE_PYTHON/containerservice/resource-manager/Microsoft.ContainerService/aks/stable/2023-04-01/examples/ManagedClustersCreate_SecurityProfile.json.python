import pulumi
import pulumi_azure_native as azure_native

managed_cluster = azure_native.containerservice.ManagedCluster("managedCluster",
    agent_pool_profiles=[azure_native.containerservice.ManagedClusterAgentPoolProfileArgs(
        count=3,
        enable_node_public_ip=True,
        mode="System",
        name="nodepool1",
        os_type="Linux",
        type="VirtualMachineScaleSets",
        vm_size="Standard_DS2_v2",
    )],
    dns_prefix="dnsprefix1",
    kubernetes_version="",
    linux_profile=azure_native.containerservice.ContainerServiceLinuxProfileResponseArgs(
        admin_username="azureuser",
        ssh={
            "publicKeys": [azure_native.containerservice.ContainerServiceSshPublicKeyArgs(
                key_data="keydata",
            )],
        },
    ),
    location="location1",
    network_profile=azure_native.containerservice.ContainerServiceNetworkProfileResponseArgs(
        load_balancer_profile={
            "managedOutboundIPs": azure_native.containerservice.ManagedClusterLoadBalancerProfileManagedOutboundIPsArgs(
                count=2,
            ),
        },
        load_balancer_sku="standard",
        outbound_type="loadBalancer",
    ),
    resource_group_name="rg1",
    resource_name_="clustername1",
    security_profile=azure_native.containerservice.ManagedClusterSecurityProfileResponseArgs(
        defender={
            "logAnalyticsWorkspaceResourceId": "/subscriptions/SUB_ID/resourcegroups/RG_NAME/providers/microsoft.operationalinsights/workspaces/WORKSPACE_NAME",
            "securityMonitoring": azure_native.containerservice.ManagedClusterSecurityProfileDefenderSecurityMonitoringArgs(
                enabled=True,
            ),
        },
        workload_identity=azure_native.containerservice.ManagedClusterSecurityProfileWorkloadIdentityArgs(
            enabled=True,
        ),
    ),
    sku=azure_native.containerservice.ManagedClusterSKUArgs(
        name="Basic",
        tier="Free",
    ),
    tags={
        "archv2": "",
        "tier": "production",
    })
