import pulumi
import pulumi_azure_native as azure_native

signal_r = azure_native.signalrservice.SignalR("signalR",
    cors=azure_native.signalrservice.SignalRCorsSettingsArgs(
        allowed_origins=[
            "https://foo.com",
            "https://bar.com",
        ],
    ),
    disable_aad_auth=False,
    disable_local_auth=False,
    features=[
        azure_native.signalrservice.SignalRFeatureArgs(
            flag="ServiceMode",
            properties={},
            value="Serverless",
        ),
        azure_native.signalrservice.SignalRFeatureArgs(
            flag="EnableConnectivityLogs",
            properties={},
            value="True",
        ),
        azure_native.signalrservice.SignalRFeatureArgs(
            flag="EnableMessagingLogs",
            properties={},
            value="False",
        ),
        azure_native.signalrservice.SignalRFeatureArgs(
            flag="EnableLiveTrace",
            properties={},
            value="False",
        ),
    ],
    identity=azure_native.signalrservice.ManagedIdentityArgs(
        type="SystemAssigned",
    ),
    kind="SignalR",
    live_trace_configuration=azure_native.signalrservice.LiveTraceConfigurationResponseArgs(
        categories=[azure_native.signalrservice.LiveTraceCategoryArgs(
            enabled="true",
            name="ConnectivityLogs",
        )],
        enabled="false",
    ),
    location="eastus",
    network_acls=azure_native.signalrservice.SignalRNetworkACLsResponseArgs(
        default_action="Deny",
        private_endpoints=[azure_native.signalrservice.PrivateEndpointACLArgs(
            allow=["ServerConnection"],
            name="mysignalrservice.1fa229cd-bf3f-47f0-8c49-afb36723997e",
        )],
        public_network=azure_native.signalrservice.NetworkACLArgs(
            allow=["ClientConnection"],
        ),
    ),
    public_network_access="Enabled",
    resource_group_name="myResourceGroup",
    resource_name_="mySignalRService",
    serverless=azure_native.signalrservice.ServerlessSettingsArgs(
        connection_timeout_in_seconds=5,
    ),
    sku=azure_native.signalrservice.ResourceSkuArgs(
        capacity=1,
        name="Premium_P1",
        tier="Premium",
    ),
    tags={
        "key1": "value1",
    },
    tls=azure_native.signalrservice.SignalRTlsSettingsArgs(
        client_cert_enabled=False,
    ),
    upstream=azure_native.signalrservice.ServerlessUpstreamSettingsResponseArgs(
        templates=[{
            "auth": {
                "managedIdentity": azure_native.signalrservice.ManagedIdentitySettingsArgs(
                    resource="api://example",
                ),
                "type": "ManagedIdentity",
            },
            "categoryPattern": "*",
            "eventPattern": "connect,disconnect",
            "hubPattern": "*",
            "urlTemplate": "https://example.com/chat/api/connect",
        }],
    ))
