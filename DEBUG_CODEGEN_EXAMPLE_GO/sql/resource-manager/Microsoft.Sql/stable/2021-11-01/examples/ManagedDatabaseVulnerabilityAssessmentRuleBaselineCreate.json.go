package main

import (
	"github.com/pulumi/pulumi-azure-native-sdk/sql/v2"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		_, err := sql.NewManagedDatabaseVulnerabilityAssessmentRuleBaseline(ctx, "managedDatabaseVulnerabilityAssessmentRuleBaseline", &sql.ManagedDatabaseVulnerabilityAssessmentRuleBaselineArgs{
			BaselineName: pulumi.String("default"),
			BaselineResults: []sql.DatabaseVulnerabilityAssessmentRuleBaselineItemArgs{
				{
					Result: pulumi.StringArray{
						pulumi.String("userA"),
						pulumi.String("SELECT"),
					},
				},
				{
					Result: pulumi.StringArray{
						pulumi.String("userB"),
						pulumi.String("SELECT"),
					},
				},
				{
					Result: pulumi.StringArray{
						pulumi.String("userC"),
						pulumi.String("SELECT"),
						pulumi.String("tableId_4"),
					},
				},
			},
			DatabaseName:                pulumi.String("testdb"),
			ManagedInstanceName:         pulumi.String("vulnerabilityaseessmenttest-6440"),
			ResourceGroupName:           pulumi.String("vulnerabilityaseessmenttest-4799"),
			RuleId:                      pulumi.String("VA1001"),
			VulnerabilityAssessmentName: pulumi.String("default"),
		})
		if err != nil {
			return err
		}
		return nil
	})
}
