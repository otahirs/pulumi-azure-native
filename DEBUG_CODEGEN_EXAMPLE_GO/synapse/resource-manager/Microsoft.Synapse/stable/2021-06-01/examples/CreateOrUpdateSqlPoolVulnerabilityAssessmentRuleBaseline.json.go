package main

import (
	"github.com/pulumi/pulumi-azure-native-sdk/synapse/v2"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		_, err := synapse.NewSqlPoolVulnerabilityAssessmentRuleBaseline(ctx, "sqlPoolVulnerabilityAssessmentRuleBaseline", &synapse.SqlPoolVulnerabilityAssessmentRuleBaselineArgs{
			BaselineName: pulumi.String("default"),
			BaselineResults: synapse.SqlPoolVulnerabilityAssessmentRuleBaselineItemArray{
				&synapse.SqlPoolVulnerabilityAssessmentRuleBaselineItemArgs{
					Result: pulumi.StringArray{
						pulumi.String("userA"),
						pulumi.String("SELECT"),
					},
				},
				&synapse.SqlPoolVulnerabilityAssessmentRuleBaselineItemArgs{
					Result: pulumi.StringArray{
						pulumi.String("userB"),
						pulumi.String("SELECT"),
					},
				},
				&synapse.SqlPoolVulnerabilityAssessmentRuleBaselineItemArgs{
					Result: pulumi.StringArray{
						pulumi.String("userC"),
						pulumi.String("SELECT"),
						pulumi.String("tableId_4"),
					},
				},
			},
			ResourceGroupName:           pulumi.String("vulnerabilityaseessmenttest-4799"),
			RuleId:                      pulumi.String("VA1001"),
			SqlPoolName:                 pulumi.String("testdb"),
			VulnerabilityAssessmentName: pulumi.String("default"),
			WorkspaceName:               pulumi.String("vulnerabilityaseessmenttest-6440"),
		})
		if err != nil {
			return err
		}
		return nil
	})
}
