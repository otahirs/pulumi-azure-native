// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.scvmm.outputs;

import com.pulumi.azurenative.scvmm.outputs.ExtendedLocationResponse;
import com.pulumi.azurenative.scvmm.outputs.SystemDataResponse;
import com.pulumi.azurenative.scvmm.outputs.VMMServerPropertiesResponseCredentials;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetVmmServerResult {
    /**
     * @return Gets or sets the connection status to the vmmServer.
     * 
     */
    private String connectionStatus;
    /**
     * @return Credentials to connect to VMMServer.
     * 
     */
    private @Nullable VMMServerPropertiesResponseCredentials credentials;
    /**
     * @return Gets or sets any error message if connection to vmmServer is having any issue.
     * 
     */
    private String errorMessage;
    /**
     * @return The extended location.
     * 
     */
    private ExtendedLocationResponse extendedLocation;
    /**
     * @return Fqdn is the hostname/ip of the vmmServer.
     * 
     */
    private String fqdn;
    /**
     * @return Resource Id
     * 
     */
    private String id;
    /**
     * @return Gets or sets the location.
     * 
     */
    private String location;
    /**
     * @return Resource Name
     * 
     */
    private String name;
    /**
     * @return Port is the port on which the vmmServer is listening.
     * 
     */
    private @Nullable Integer port;
    /**
     * @return Gets or sets the provisioning state.
     * 
     */
    private String provisioningState;
    /**
     * @return The system data.
     * 
     */
    private SystemDataResponse systemData;
    /**
     * @return Resource tags
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return Resource Type
     * 
     */
    private String type;
    /**
     * @return Unique ID of vmmServer.
     * 
     */
    private String uuid;
    /**
     * @return Version is the version of the vmmSever.
     * 
     */
    private String version;

    private GetVmmServerResult() {}
    /**
     * @return Gets or sets the connection status to the vmmServer.
     * 
     */
    public String connectionStatus() {
        return this.connectionStatus;
    }
    /**
     * @return Credentials to connect to VMMServer.
     * 
     */
    public Optional<VMMServerPropertiesResponseCredentials> credentials() {
        return Optional.ofNullable(this.credentials);
    }
    /**
     * @return Gets or sets any error message if connection to vmmServer is having any issue.
     * 
     */
    public String errorMessage() {
        return this.errorMessage;
    }
    /**
     * @return The extended location.
     * 
     */
    public ExtendedLocationResponse extendedLocation() {
        return this.extendedLocation;
    }
    /**
     * @return Fqdn is the hostname/ip of the vmmServer.
     * 
     */
    public String fqdn() {
        return this.fqdn;
    }
    /**
     * @return Resource Id
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Gets or sets the location.
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return Resource Name
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Port is the port on which the vmmServer is listening.
     * 
     */
    public Optional<Integer> port() {
        return Optional.ofNullable(this.port);
    }
    /**
     * @return Gets or sets the provisioning state.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * @return The system data.
     * 
     */
    public SystemDataResponse systemData() {
        return this.systemData;
    }
    /**
     * @return Resource tags
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return Resource Type
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return Unique ID of vmmServer.
     * 
     */
    public String uuid() {
        return this.uuid;
    }
    /**
     * @return Version is the version of the vmmSever.
     * 
     */
    public String version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVmmServerResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String connectionStatus;
        private @Nullable VMMServerPropertiesResponseCredentials credentials;
        private String errorMessage;
        private ExtendedLocationResponse extendedLocation;
        private String fqdn;
        private String id;
        private String location;
        private String name;
        private @Nullable Integer port;
        private String provisioningState;
        private SystemDataResponse systemData;
        private @Nullable Map<String,String> tags;
        private String type;
        private String uuid;
        private String version;
        public Builder() {}
        public Builder(GetVmmServerResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.connectionStatus = defaults.connectionStatus;
    	      this.credentials = defaults.credentials;
    	      this.errorMessage = defaults.errorMessage;
    	      this.extendedLocation = defaults.extendedLocation;
    	      this.fqdn = defaults.fqdn;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.port = defaults.port;
    	      this.provisioningState = defaults.provisioningState;
    	      this.systemData = defaults.systemData;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
    	      this.uuid = defaults.uuid;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder connectionStatus(String connectionStatus) {
            this.connectionStatus = Objects.requireNonNull(connectionStatus);
            return this;
        }
        @CustomType.Setter
        public Builder credentials(@Nullable VMMServerPropertiesResponseCredentials credentials) {
            this.credentials = credentials;
            return this;
        }
        @CustomType.Setter
        public Builder errorMessage(String errorMessage) {
            this.errorMessage = Objects.requireNonNull(errorMessage);
            return this;
        }
        @CustomType.Setter
        public Builder extendedLocation(ExtendedLocationResponse extendedLocation) {
            this.extendedLocation = Objects.requireNonNull(extendedLocation);
            return this;
        }
        @CustomType.Setter
        public Builder fqdn(String fqdn) {
            this.fqdn = Objects.requireNonNull(fqdn);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder port(@Nullable Integer port) {
            this.port = port;
            return this;
        }
        @CustomType.Setter
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        @CustomType.Setter
        public Builder systemData(SystemDataResponse systemData) {
            this.systemData = Objects.requireNonNull(systemData);
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder uuid(String uuid) {
            this.uuid = Objects.requireNonNull(uuid);
            return this;
        }
        @CustomType.Setter
        public Builder version(String version) {
            this.version = Objects.requireNonNull(version);
            return this;
        }
        public GetVmmServerResult build() {
            final var o = new GetVmmServerResult();
            o.connectionStatus = connectionStatus;
            o.credentials = credentials;
            o.errorMessage = errorMessage;
            o.extendedLocation = extendedLocation;
            o.fqdn = fqdn;
            o.id = id;
            o.location = location;
            o.name = name;
            o.port = port;
            o.provisioningState = provisioningState;
            o.systemData = systemData;
            o.tags = tags;
            o.type = type;
            o.uuid = uuid;
            o.version = version;
            return o;
        }
    }
}
