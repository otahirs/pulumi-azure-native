// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.saas.outputs;

import com.pulumi.azurenative.saas.outputs.SaasPropertiesResponseTerm;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SaasResourceResponseProperties {
    /**
     * @return Whether the SaaS subscription will auto renew upon term end.
     * 
     */
    private @Nullable Boolean autoRenew;
    /**
     * @return The created date of this resource.
     * 
     */
    private String created;
    /**
     * @return Whether the current term is a Free Trial term
     * 
     */
    private @Nullable Boolean isFreeTrial;
    /**
     * @return The last modifier date if this resource.
     * 
     */
    private @Nullable String lastModified;
    /**
     * @return The offer id.
     * 
     */
    private @Nullable String offerId;
    /**
     * @return The metadata about the SaaS subscription such as the AzureSubscriptionId and ResourceUri.
     * 
     */
    private @Nullable Map<String,String> paymentChannelMetadata;
    /**
     * @return The Payment channel for the SaasSubscription.
     * 
     */
    private @Nullable String paymentChannelType;
    /**
     * @return The publisher id.
     * 
     */
    private @Nullable String publisherId;
    /**
     * @return The environment in the publisher side for this resource.
     * 
     */
    private @Nullable String publisherTestEnvironment;
    /**
     * @return The seat count.
     * 
     */
    private @Nullable Double quantity;
    /**
     * @return The SaaS resource name.
     * 
     */
    private @Nullable String saasResourceName;
    /**
     * @return The saas session id used for dev service migration request.
     * 
     */
    private @Nullable String saasSessionId;
    /**
     * @return The saas subscription id used for tenant to subscription level migration request.
     * 
     */
    private @Nullable String saasSubscriptionId;
    /**
     * @return The plan id.
     * 
     */
    private @Nullable String skuId;
    /**
     * @return The SaaS Subscription Status.
     * 
     */
    private @Nullable String status;
    /**
     * @return The current Term object.
     * 
     */
    private @Nullable SaasPropertiesResponseTerm term;
    /**
     * @return The current Term id.
     * 
     */
    private @Nullable String termId;

    private SaasResourceResponseProperties() {}
    /**
     * @return Whether the SaaS subscription will auto renew upon term end.
     * 
     */
    public Optional<Boolean> autoRenew() {
        return Optional.ofNullable(this.autoRenew);
    }
    /**
     * @return The created date of this resource.
     * 
     */
    public String created() {
        return this.created;
    }
    /**
     * @return Whether the current term is a Free Trial term
     * 
     */
    public Optional<Boolean> isFreeTrial() {
        return Optional.ofNullable(this.isFreeTrial);
    }
    /**
     * @return The last modifier date if this resource.
     * 
     */
    public Optional<String> lastModified() {
        return Optional.ofNullable(this.lastModified);
    }
    /**
     * @return The offer id.
     * 
     */
    public Optional<String> offerId() {
        return Optional.ofNullable(this.offerId);
    }
    /**
     * @return The metadata about the SaaS subscription such as the AzureSubscriptionId and ResourceUri.
     * 
     */
    public Map<String,String> paymentChannelMetadata() {
        return this.paymentChannelMetadata == null ? Map.of() : this.paymentChannelMetadata;
    }
    /**
     * @return The Payment channel for the SaasSubscription.
     * 
     */
    public Optional<String> paymentChannelType() {
        return Optional.ofNullable(this.paymentChannelType);
    }
    /**
     * @return The publisher id.
     * 
     */
    public Optional<String> publisherId() {
        return Optional.ofNullable(this.publisherId);
    }
    /**
     * @return The environment in the publisher side for this resource.
     * 
     */
    public Optional<String> publisherTestEnvironment() {
        return Optional.ofNullable(this.publisherTestEnvironment);
    }
    /**
     * @return The seat count.
     * 
     */
    public Optional<Double> quantity() {
        return Optional.ofNullable(this.quantity);
    }
    /**
     * @return The SaaS resource name.
     * 
     */
    public Optional<String> saasResourceName() {
        return Optional.ofNullable(this.saasResourceName);
    }
    /**
     * @return The saas session id used for dev service migration request.
     * 
     */
    public Optional<String> saasSessionId() {
        return Optional.ofNullable(this.saasSessionId);
    }
    /**
     * @return The saas subscription id used for tenant to subscription level migration request.
     * 
     */
    public Optional<String> saasSubscriptionId() {
        return Optional.ofNullable(this.saasSubscriptionId);
    }
    /**
     * @return The plan id.
     * 
     */
    public Optional<String> skuId() {
        return Optional.ofNullable(this.skuId);
    }
    /**
     * @return The SaaS Subscription Status.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }
    /**
     * @return The current Term object.
     * 
     */
    public Optional<SaasPropertiesResponseTerm> term() {
        return Optional.ofNullable(this.term);
    }
    /**
     * @return The current Term id.
     * 
     */
    public Optional<String> termId() {
        return Optional.ofNullable(this.termId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SaasResourceResponseProperties defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean autoRenew;
        private String created;
        private @Nullable Boolean isFreeTrial;
        private @Nullable String lastModified;
        private @Nullable String offerId;
        private @Nullable Map<String,String> paymentChannelMetadata;
        private @Nullable String paymentChannelType;
        private @Nullable String publisherId;
        private @Nullable String publisherTestEnvironment;
        private @Nullable Double quantity;
        private @Nullable String saasResourceName;
        private @Nullable String saasSessionId;
        private @Nullable String saasSubscriptionId;
        private @Nullable String skuId;
        private @Nullable String status;
        private @Nullable SaasPropertiesResponseTerm term;
        private @Nullable String termId;
        public Builder() {}
        public Builder(SaasResourceResponseProperties defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoRenew = defaults.autoRenew;
    	      this.created = defaults.created;
    	      this.isFreeTrial = defaults.isFreeTrial;
    	      this.lastModified = defaults.lastModified;
    	      this.offerId = defaults.offerId;
    	      this.paymentChannelMetadata = defaults.paymentChannelMetadata;
    	      this.paymentChannelType = defaults.paymentChannelType;
    	      this.publisherId = defaults.publisherId;
    	      this.publisherTestEnvironment = defaults.publisherTestEnvironment;
    	      this.quantity = defaults.quantity;
    	      this.saasResourceName = defaults.saasResourceName;
    	      this.saasSessionId = defaults.saasSessionId;
    	      this.saasSubscriptionId = defaults.saasSubscriptionId;
    	      this.skuId = defaults.skuId;
    	      this.status = defaults.status;
    	      this.term = defaults.term;
    	      this.termId = defaults.termId;
        }

        @CustomType.Setter
        public Builder autoRenew(@Nullable Boolean autoRenew) {
            this.autoRenew = autoRenew;
            return this;
        }
        @CustomType.Setter
        public Builder created(String created) {
            this.created = Objects.requireNonNull(created);
            return this;
        }
        @CustomType.Setter
        public Builder isFreeTrial(@Nullable Boolean isFreeTrial) {
            this.isFreeTrial = isFreeTrial;
            return this;
        }
        @CustomType.Setter
        public Builder lastModified(@Nullable String lastModified) {
            this.lastModified = lastModified;
            return this;
        }
        @CustomType.Setter
        public Builder offerId(@Nullable String offerId) {
            this.offerId = offerId;
            return this;
        }
        @CustomType.Setter
        public Builder paymentChannelMetadata(@Nullable Map<String,String> paymentChannelMetadata) {
            this.paymentChannelMetadata = paymentChannelMetadata;
            return this;
        }
        @CustomType.Setter
        public Builder paymentChannelType(@Nullable String paymentChannelType) {
            this.paymentChannelType = paymentChannelType;
            return this;
        }
        @CustomType.Setter
        public Builder publisherId(@Nullable String publisherId) {
            this.publisherId = publisherId;
            return this;
        }
        @CustomType.Setter
        public Builder publisherTestEnvironment(@Nullable String publisherTestEnvironment) {
            this.publisherTestEnvironment = publisherTestEnvironment;
            return this;
        }
        @CustomType.Setter
        public Builder quantity(@Nullable Double quantity) {
            this.quantity = quantity;
            return this;
        }
        @CustomType.Setter
        public Builder saasResourceName(@Nullable String saasResourceName) {
            this.saasResourceName = saasResourceName;
            return this;
        }
        @CustomType.Setter
        public Builder saasSessionId(@Nullable String saasSessionId) {
            this.saasSessionId = saasSessionId;
            return this;
        }
        @CustomType.Setter
        public Builder saasSubscriptionId(@Nullable String saasSubscriptionId) {
            this.saasSubscriptionId = saasSubscriptionId;
            return this;
        }
        @CustomType.Setter
        public Builder skuId(@Nullable String skuId) {
            this.skuId = skuId;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder term(@Nullable SaasPropertiesResponseTerm term) {
            this.term = term;
            return this;
        }
        @CustomType.Setter
        public Builder termId(@Nullable String termId) {
            this.termId = termId;
            return this;
        }
        public SaasResourceResponseProperties build() {
            final var o = new SaasResourceResponseProperties();
            o.autoRenew = autoRenew;
            o.created = created;
            o.isFreeTrial = isFreeTrial;
            o.lastModified = lastModified;
            o.offerId = offerId;
            o.paymentChannelMetadata = paymentChannelMetadata;
            o.paymentChannelType = paymentChannelType;
            o.publisherId = publisherId;
            o.publisherTestEnvironment = publisherTestEnvironment;
            o.quantity = quantity;
            o.saasResourceName = saasResourceName;
            o.saasSessionId = saasSessionId;
            o.saasSubscriptionId = saasSubscriptionId;
            o.skuId = skuId;
            o.status = status;
            o.term = term;
            o.termId = termId;
            return o;
        }
    }
}
