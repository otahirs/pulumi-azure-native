// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.outputs;

import com.pulumi.azurenative.network.outputs.CustomDnsConfigPropertiesFormatResponse;
import com.pulumi.azurenative.network.outputs.ExtendedLocationResponse;
import com.pulumi.azurenative.network.outputs.NetworkInterfaceResponse;
import com.pulumi.azurenative.network.outputs.PrivateLinkServiceConnectionResponse;
import com.pulumi.azurenative.network.outputs.SubnetResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PrivateEndpointResponse {
    /**
     * @return An array of custom dns configurations.
     * 
     */
    private @Nullable List<CustomDnsConfigPropertiesFormatResponse> customDnsConfigs;
    /**
     * @return A unique read-only string that changes whenever the resource is updated.
     * 
     */
    private String etag;
    /**
     * @return The extended location of the load balancer.
     * 
     */
    private @Nullable ExtendedLocationResponse extendedLocation;
    /**
     * @return Resource ID.
     * 
     */
    private @Nullable String id;
    /**
     * @return Resource location.
     * 
     */
    private @Nullable String location;
    /**
     * @return A grouping of information about the connection to the remote resource. Used when the network admin does not have access to approve connections to the remote resource.
     * 
     */
    private @Nullable List<PrivateLinkServiceConnectionResponse> manualPrivateLinkServiceConnections;
    /**
     * @return Resource name.
     * 
     */
    private String name;
    /**
     * @return An array of references to the network interfaces created for this private endpoint.
     * 
     */
    private List<NetworkInterfaceResponse> networkInterfaces;
    /**
     * @return A grouping of information about the connection to the remote resource.
     * 
     */
    private @Nullable List<PrivateLinkServiceConnectionResponse> privateLinkServiceConnections;
    /**
     * @return The provisioning state of the private endpoint resource.
     * 
     */
    private String provisioningState;
    /**
     * @return The ID of the subnet from which the private IP will be allocated.
     * 
     */
    private @Nullable SubnetResponse subnet;
    /**
     * @return Resource tags.
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return Resource type.
     * 
     */
    private String type;

    private PrivateEndpointResponse() {}
    /**
     * @return An array of custom dns configurations.
     * 
     */
    public List<CustomDnsConfigPropertiesFormatResponse> customDnsConfigs() {
        return this.customDnsConfigs == null ? List.of() : this.customDnsConfigs;
    }
    /**
     * @return A unique read-only string that changes whenever the resource is updated.
     * 
     */
    public String etag() {
        return this.etag;
    }
    /**
     * @return The extended location of the load balancer.
     * 
     */
    public Optional<ExtendedLocationResponse> extendedLocation() {
        return Optional.ofNullable(this.extendedLocation);
    }
    /**
     * @return Resource ID.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Resource location.
     * 
     */
    public Optional<String> location() {
        return Optional.ofNullable(this.location);
    }
    /**
     * @return A grouping of information about the connection to the remote resource. Used when the network admin does not have access to approve connections to the remote resource.
     * 
     */
    public List<PrivateLinkServiceConnectionResponse> manualPrivateLinkServiceConnections() {
        return this.manualPrivateLinkServiceConnections == null ? List.of() : this.manualPrivateLinkServiceConnections;
    }
    /**
     * @return Resource name.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return An array of references to the network interfaces created for this private endpoint.
     * 
     */
    public List<NetworkInterfaceResponse> networkInterfaces() {
        return this.networkInterfaces;
    }
    /**
     * @return A grouping of information about the connection to the remote resource.
     * 
     */
    public List<PrivateLinkServiceConnectionResponse> privateLinkServiceConnections() {
        return this.privateLinkServiceConnections == null ? List.of() : this.privateLinkServiceConnections;
    }
    /**
     * @return The provisioning state of the private endpoint resource.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * @return The ID of the subnet from which the private IP will be allocated.
     * 
     */
    public Optional<SubnetResponse> subnet() {
        return Optional.ofNullable(this.subnet);
    }
    /**
     * @return Resource tags.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return Resource type.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PrivateEndpointResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<CustomDnsConfigPropertiesFormatResponse> customDnsConfigs;
        private String etag;
        private @Nullable ExtendedLocationResponse extendedLocation;
        private @Nullable String id;
        private @Nullable String location;
        private @Nullable List<PrivateLinkServiceConnectionResponse> manualPrivateLinkServiceConnections;
        private String name;
        private List<NetworkInterfaceResponse> networkInterfaces;
        private @Nullable List<PrivateLinkServiceConnectionResponse> privateLinkServiceConnections;
        private String provisioningState;
        private @Nullable SubnetResponse subnet;
        private @Nullable Map<String,String> tags;
        private String type;
        public Builder() {}
        public Builder(PrivateEndpointResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.customDnsConfigs = defaults.customDnsConfigs;
    	      this.etag = defaults.etag;
    	      this.extendedLocation = defaults.extendedLocation;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.manualPrivateLinkServiceConnections = defaults.manualPrivateLinkServiceConnections;
    	      this.name = defaults.name;
    	      this.networkInterfaces = defaults.networkInterfaces;
    	      this.privateLinkServiceConnections = defaults.privateLinkServiceConnections;
    	      this.provisioningState = defaults.provisioningState;
    	      this.subnet = defaults.subnet;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder customDnsConfigs(@Nullable List<CustomDnsConfigPropertiesFormatResponse> customDnsConfigs) {
            this.customDnsConfigs = customDnsConfigs;
            return this;
        }
        public Builder customDnsConfigs(CustomDnsConfigPropertiesFormatResponse... customDnsConfigs) {
            return customDnsConfigs(List.of(customDnsConfigs));
        }
        @CustomType.Setter
        public Builder etag(String etag) {
            this.etag = Objects.requireNonNull(etag);
            return this;
        }
        @CustomType.Setter
        public Builder extendedLocation(@Nullable ExtendedLocationResponse extendedLocation) {
            this.extendedLocation = extendedLocation;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder location(@Nullable String location) {
            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder manualPrivateLinkServiceConnections(@Nullable List<PrivateLinkServiceConnectionResponse> manualPrivateLinkServiceConnections) {
            this.manualPrivateLinkServiceConnections = manualPrivateLinkServiceConnections;
            return this;
        }
        public Builder manualPrivateLinkServiceConnections(PrivateLinkServiceConnectionResponse... manualPrivateLinkServiceConnections) {
            return manualPrivateLinkServiceConnections(List.of(manualPrivateLinkServiceConnections));
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder networkInterfaces(List<NetworkInterfaceResponse> networkInterfaces) {
            this.networkInterfaces = Objects.requireNonNull(networkInterfaces);
            return this;
        }
        public Builder networkInterfaces(NetworkInterfaceResponse... networkInterfaces) {
            return networkInterfaces(List.of(networkInterfaces));
        }
        @CustomType.Setter
        public Builder privateLinkServiceConnections(@Nullable List<PrivateLinkServiceConnectionResponse> privateLinkServiceConnections) {
            this.privateLinkServiceConnections = privateLinkServiceConnections;
            return this;
        }
        public Builder privateLinkServiceConnections(PrivateLinkServiceConnectionResponse... privateLinkServiceConnections) {
            return privateLinkServiceConnections(List.of(privateLinkServiceConnections));
        }
        @CustomType.Setter
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        @CustomType.Setter
        public Builder subnet(@Nullable SubnetResponse subnet) {
            this.subnet = subnet;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public PrivateEndpointResponse build() {
            final var o = new PrivateEndpointResponse();
            o.customDnsConfigs = customDnsConfigs;
            o.etag = etag;
            o.extendedLocation = extendedLocation;
            o.id = id;
            o.location = location;
            o.manualPrivateLinkServiceConnections = manualPrivateLinkServiceConnections;
            o.name = name;
            o.networkInterfaces = networkInterfaces;
            o.privateLinkServiceConnections = privateLinkServiceConnections;
            o.provisioningState = provisioningState;
            o.subnet = subnet;
            o.tags = tags;
            o.type = type;
            return o;
        }
    }
}
