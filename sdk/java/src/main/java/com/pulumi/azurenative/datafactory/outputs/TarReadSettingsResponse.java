// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datafactory.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class TarReadSettingsResponse {
    /**
     * @return Preserve the compression file name as folder path. Type: boolean (or Expression with resultType boolean).
     * 
     */
    private @Nullable Object preserveCompressionFileNameAsFolder;
    /**
     * @return The Compression setting type.
     * Expected value is &#39;TarReadSettings&#39;.
     * 
     */
    private String type;

    private TarReadSettingsResponse() {}
    /**
     * @return Preserve the compression file name as folder path. Type: boolean (or Expression with resultType boolean).
     * 
     */
    public Optional<Object> preserveCompressionFileNameAsFolder() {
        return Optional.ofNullable(this.preserveCompressionFileNameAsFolder);
    }
    /**
     * @return The Compression setting type.
     * Expected value is &#39;TarReadSettings&#39;.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TarReadSettingsResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Object preserveCompressionFileNameAsFolder;
        private String type;
        public Builder() {}
        public Builder(TarReadSettingsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.preserveCompressionFileNameAsFolder = defaults.preserveCompressionFileNameAsFolder;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder preserveCompressionFileNameAsFolder(@Nullable Object preserveCompressionFileNameAsFolder) {
            this.preserveCompressionFileNameAsFolder = preserveCompressionFileNameAsFolder;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public TarReadSettingsResponse build() {
            final var o = new TarReadSettingsResponse();
            o.preserveCompressionFileNameAsFolder = preserveCompressionFileNameAsFolder;
            o.type = type;
            return o;
        }
    }
}
