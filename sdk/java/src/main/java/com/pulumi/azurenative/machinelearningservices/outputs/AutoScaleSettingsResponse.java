// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearningservices.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AutoScaleSettingsResponse {
    /**
     * @return Maximum number of instances for this deployment.
     * 
     */
    private @Nullable Integer maxInstances;
    /**
     * @return Minimum number of instances for this deployment.
     * 
     */
    private @Nullable Integer minInstances;
    /**
     * @return The polling interval in ISO 8691 format. Only supports duration with precision as low as Seconds.
     * 
     */
    private @Nullable String pollingInterval;
    /**
     * @return
     * Expected value is &#39;Auto&#39;.
     * 
     */
    private String scaleType;
    /**
     * @return Target CPU usage for the autoscaler.
     * 
     */
    private @Nullable Integer targetUtilizationPercentage;

    private AutoScaleSettingsResponse() {}
    /**
     * @return Maximum number of instances for this deployment.
     * 
     */
    public Optional<Integer> maxInstances() {
        return Optional.ofNullable(this.maxInstances);
    }
    /**
     * @return Minimum number of instances for this deployment.
     * 
     */
    public Optional<Integer> minInstances() {
        return Optional.ofNullable(this.minInstances);
    }
    /**
     * @return The polling interval in ISO 8691 format. Only supports duration with precision as low as Seconds.
     * 
     */
    public Optional<String> pollingInterval() {
        return Optional.ofNullable(this.pollingInterval);
    }
    /**
     * @return
     * Expected value is &#39;Auto&#39;.
     * 
     */
    public String scaleType() {
        return this.scaleType;
    }
    /**
     * @return Target CPU usage for the autoscaler.
     * 
     */
    public Optional<Integer> targetUtilizationPercentage() {
        return Optional.ofNullable(this.targetUtilizationPercentage);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AutoScaleSettingsResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer maxInstances;
        private @Nullable Integer minInstances;
        private @Nullable String pollingInterval;
        private String scaleType;
        private @Nullable Integer targetUtilizationPercentage;
        public Builder() {}
        public Builder(AutoScaleSettingsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.maxInstances = defaults.maxInstances;
    	      this.minInstances = defaults.minInstances;
    	      this.pollingInterval = defaults.pollingInterval;
    	      this.scaleType = defaults.scaleType;
    	      this.targetUtilizationPercentage = defaults.targetUtilizationPercentage;
        }

        @CustomType.Setter
        public Builder maxInstances(@Nullable Integer maxInstances) {
            this.maxInstances = maxInstances;
            return this;
        }
        @CustomType.Setter
        public Builder minInstances(@Nullable Integer minInstances) {
            this.minInstances = minInstances;
            return this;
        }
        @CustomType.Setter
        public Builder pollingInterval(@Nullable String pollingInterval) {
            this.pollingInterval = pollingInterval;
            return this;
        }
        @CustomType.Setter
        public Builder scaleType(String scaleType) {
            this.scaleType = Objects.requireNonNull(scaleType);
            return this;
        }
        @CustomType.Setter
        public Builder targetUtilizationPercentage(@Nullable Integer targetUtilizationPercentage) {
            this.targetUtilizationPercentage = targetUtilizationPercentage;
            return this;
        }
        public AutoScaleSettingsResponse build() {
            final var o = new AutoScaleSettingsResponse();
            o.maxInstances = maxInstances;
            o.minInstances = minInstances;
            o.pollingInterval = pollingInterval;
            o.scaleType = scaleType;
            o.targetUtilizationPercentage = targetUtilizationPercentage;
            return o;
        }
    }
}
