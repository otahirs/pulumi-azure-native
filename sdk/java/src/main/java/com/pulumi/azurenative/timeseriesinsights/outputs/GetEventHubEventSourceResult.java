// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.timeseriesinsights.outputs;

import com.pulumi.azurenative.timeseriesinsights.outputs.LocalTimestampResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetEventHubEventSourceResult {
    /**
     * @return The name of the event hub&#39;s consumer group that holds the partitions from which events will be read.
     * 
     */
    private String consumerGroupName;
    /**
     * @return The time the resource was created.
     * 
     */
    private String creationTime;
    /**
     * @return The name of the event hub.
     * 
     */
    private String eventHubName;
    /**
     * @return The resource id of the event source in Azure Resource Manager.
     * 
     */
    private String eventSourceResourceId;
    /**
     * @return Resource Id
     * 
     */
    private String id;
    /**
     * @return The name of the SAS key that grants the Time Series Insights service access to the event hub. The shared access policies for this key must grant &#39;Listen&#39; permissions to the event hub.
     * 
     */
    private String keyName;
    /**
     * @return The kind of the event source.
     * Expected value is &#39;Microsoft.EventHub&#39;.
     * 
     */
    private String kind;
    /**
     * @return An object that represents the local timestamp property. It contains the format of local timestamp that needs to be used and the corresponding timezone offset information. If a value isn&#39;t specified for localTimestamp, or if null, then the local timestamp will not be ingressed with the events.
     * 
     */
    private @Nullable LocalTimestampResponse localTimestamp;
    /**
     * @return Resource location
     * 
     */
    private String location;
    /**
     * @return Resource name
     * 
     */
    private String name;
    /**
     * @return Provisioning state of the resource.
     * 
     */
    private String provisioningState;
    /**
     * @return The name of the service bus that contains the event hub.
     * 
     */
    private String serviceBusNamespace;
    /**
     * @return Resource tags
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return ISO8601 UTC datetime with seconds precision (milliseconds are optional), specifying the date and time that will be the starting point for Events to be consumed.
     * 
     */
    private @Nullable String time;
    /**
     * @return The event property that will be used as the event source&#39;s timestamp. If a value isn&#39;t specified for timestampPropertyName, or if null or empty-string is specified, the event creation time will be used.
     * 
     */
    private @Nullable String timestampPropertyName;
    /**
     * @return Resource type
     * 
     */
    private String type;

    private GetEventHubEventSourceResult() {}
    /**
     * @return The name of the event hub&#39;s consumer group that holds the partitions from which events will be read.
     * 
     */
    public String consumerGroupName() {
        return this.consumerGroupName;
    }
    /**
     * @return The time the resource was created.
     * 
     */
    public String creationTime() {
        return this.creationTime;
    }
    /**
     * @return The name of the event hub.
     * 
     */
    public String eventHubName() {
        return this.eventHubName;
    }
    /**
     * @return The resource id of the event source in Azure Resource Manager.
     * 
     */
    public String eventSourceResourceId() {
        return this.eventSourceResourceId;
    }
    /**
     * @return Resource Id
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The name of the SAS key that grants the Time Series Insights service access to the event hub. The shared access policies for this key must grant &#39;Listen&#39; permissions to the event hub.
     * 
     */
    public String keyName() {
        return this.keyName;
    }
    /**
     * @return The kind of the event source.
     * Expected value is &#39;Microsoft.EventHub&#39;.
     * 
     */
    public String kind() {
        return this.kind;
    }
    /**
     * @return An object that represents the local timestamp property. It contains the format of local timestamp that needs to be used and the corresponding timezone offset information. If a value isn&#39;t specified for localTimestamp, or if null, then the local timestamp will not be ingressed with the events.
     * 
     */
    public Optional<LocalTimestampResponse> localTimestamp() {
        return Optional.ofNullable(this.localTimestamp);
    }
    /**
     * @return Resource location
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return Resource name
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Provisioning state of the resource.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * @return The name of the service bus that contains the event hub.
     * 
     */
    public String serviceBusNamespace() {
        return this.serviceBusNamespace;
    }
    /**
     * @return Resource tags
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return ISO8601 UTC datetime with seconds precision (milliseconds are optional), specifying the date and time that will be the starting point for Events to be consumed.
     * 
     */
    public Optional<String> time() {
        return Optional.ofNullable(this.time);
    }
    /**
     * @return The event property that will be used as the event source&#39;s timestamp. If a value isn&#39;t specified for timestampPropertyName, or if null or empty-string is specified, the event creation time will be used.
     * 
     */
    public Optional<String> timestampPropertyName() {
        return Optional.ofNullable(this.timestampPropertyName);
    }
    /**
     * @return Resource type
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEventHubEventSourceResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String consumerGroupName;
        private String creationTime;
        private String eventHubName;
        private String eventSourceResourceId;
        private String id;
        private String keyName;
        private String kind;
        private @Nullable LocalTimestampResponse localTimestamp;
        private String location;
        private String name;
        private String provisioningState;
        private String serviceBusNamespace;
        private @Nullable Map<String,String> tags;
        private @Nullable String time;
        private @Nullable String timestampPropertyName;
        private String type;
        public Builder() {}
        public Builder(GetEventHubEventSourceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.consumerGroupName = defaults.consumerGroupName;
    	      this.creationTime = defaults.creationTime;
    	      this.eventHubName = defaults.eventHubName;
    	      this.eventSourceResourceId = defaults.eventSourceResourceId;
    	      this.id = defaults.id;
    	      this.keyName = defaults.keyName;
    	      this.kind = defaults.kind;
    	      this.localTimestamp = defaults.localTimestamp;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.provisioningState = defaults.provisioningState;
    	      this.serviceBusNamespace = defaults.serviceBusNamespace;
    	      this.tags = defaults.tags;
    	      this.time = defaults.time;
    	      this.timestampPropertyName = defaults.timestampPropertyName;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder consumerGroupName(String consumerGroupName) {
            this.consumerGroupName = Objects.requireNonNull(consumerGroupName);
            return this;
        }
        @CustomType.Setter
        public Builder creationTime(String creationTime) {
            this.creationTime = Objects.requireNonNull(creationTime);
            return this;
        }
        @CustomType.Setter
        public Builder eventHubName(String eventHubName) {
            this.eventHubName = Objects.requireNonNull(eventHubName);
            return this;
        }
        @CustomType.Setter
        public Builder eventSourceResourceId(String eventSourceResourceId) {
            this.eventSourceResourceId = Objects.requireNonNull(eventSourceResourceId);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder keyName(String keyName) {
            this.keyName = Objects.requireNonNull(keyName);
            return this;
        }
        @CustomType.Setter
        public Builder kind(String kind) {
            this.kind = Objects.requireNonNull(kind);
            return this;
        }
        @CustomType.Setter
        public Builder localTimestamp(@Nullable LocalTimestampResponse localTimestamp) {
            this.localTimestamp = localTimestamp;
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        @CustomType.Setter
        public Builder serviceBusNamespace(String serviceBusNamespace) {
            this.serviceBusNamespace = Objects.requireNonNull(serviceBusNamespace);
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder time(@Nullable String time) {
            this.time = time;
            return this;
        }
        @CustomType.Setter
        public Builder timestampPropertyName(@Nullable String timestampPropertyName) {
            this.timestampPropertyName = timestampPropertyName;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetEventHubEventSourceResult build() {
            final var o = new GetEventHubEventSourceResult();
            o.consumerGroupName = consumerGroupName;
            o.creationTime = creationTime;
            o.eventHubName = eventHubName;
            o.eventSourceResourceId = eventSourceResourceId;
            o.id = id;
            o.keyName = keyName;
            o.kind = kind;
            o.localTimestamp = localTimestamp;
            o.location = location;
            o.name = name;
            o.provisioningState = provisioningState;
            o.serviceBusNamespace = serviceBusNamespace;
            o.tags = tags;
            o.time = time;
            o.timestampPropertyName = timestampPropertyName;
            o.type = type;
            return o;
        }
    }
}
