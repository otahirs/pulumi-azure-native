// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.recoveryservices.outputs;

import com.pulumi.azurenative.recoveryservices.outputs.HealthErrorResponse;
import com.pulumi.azurenative.recoveryservices.outputs.IdentityProviderDetailsResponse;
import com.pulumi.azurenative.recoveryservices.outputs.VersionDetailsResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class RecoveryServicesProviderPropertiesResponse {
    /**
     * @return The scenarios allowed on this provider.
     * 
     */
    private @Nullable List<String> allowedScenarios;
    /**
     * @return The authentication identity details.
     * 
     */
    private @Nullable IdentityProviderDetailsResponse authenticationIdentityDetails;
    /**
     * @return A value indicating whether DRA is responsive.
     * 
     */
    private @Nullable String connectionStatus;
    /**
     * @return The DRA Id.
     * 
     */
    private @Nullable String draIdentifier;
    /**
     * @return The fabric friendly name.
     * 
     */
    private @Nullable String fabricFriendlyName;
    /**
     * @return Type of the site.
     * 
     */
    private @Nullable String fabricType;
    /**
     * @return Friendly name of the DRA.
     * 
     */
    private @Nullable String friendlyName;
    /**
     * @return The recovery services provider health error details.
     * 
     */
    private @Nullable List<HealthErrorResponse> healthErrorDetails;
    /**
     * @return Time when last heartbeat was sent by the DRA.
     * 
     */
    private @Nullable String lastHeartBeat;
    /**
     * @return Number of protected VMs currently managed by the DRA.
     * 
     */
    private @Nullable Integer protectedItemCount;
    /**
     * @return The provider version.
     * 
     */
    private @Nullable String providerVersion;
    /**
     * @return The provider version details.
     * 
     */
    private @Nullable VersionDetailsResponse providerVersionDetails;
    /**
     * @return Expiry date of the version.
     * 
     */
    private @Nullable String providerVersionExpiryDate;
    /**
     * @return DRA version status.
     * 
     */
    private @Nullable String providerVersionState;
    /**
     * @return The resource access identity details.
     * 
     */
    private @Nullable IdentityProviderDetailsResponse resourceAccessIdentityDetails;
    /**
     * @return The fabric provider.
     * 
     */
    private @Nullable String serverVersion;

    private RecoveryServicesProviderPropertiesResponse() {}
    /**
     * @return The scenarios allowed on this provider.
     * 
     */
    public List<String> allowedScenarios() {
        return this.allowedScenarios == null ? List.of() : this.allowedScenarios;
    }
    /**
     * @return The authentication identity details.
     * 
     */
    public Optional<IdentityProviderDetailsResponse> authenticationIdentityDetails() {
        return Optional.ofNullable(this.authenticationIdentityDetails);
    }
    /**
     * @return A value indicating whether DRA is responsive.
     * 
     */
    public Optional<String> connectionStatus() {
        return Optional.ofNullable(this.connectionStatus);
    }
    /**
     * @return The DRA Id.
     * 
     */
    public Optional<String> draIdentifier() {
        return Optional.ofNullable(this.draIdentifier);
    }
    /**
     * @return The fabric friendly name.
     * 
     */
    public Optional<String> fabricFriendlyName() {
        return Optional.ofNullable(this.fabricFriendlyName);
    }
    /**
     * @return Type of the site.
     * 
     */
    public Optional<String> fabricType() {
        return Optional.ofNullable(this.fabricType);
    }
    /**
     * @return Friendly name of the DRA.
     * 
     */
    public Optional<String> friendlyName() {
        return Optional.ofNullable(this.friendlyName);
    }
    /**
     * @return The recovery services provider health error details.
     * 
     */
    public List<HealthErrorResponse> healthErrorDetails() {
        return this.healthErrorDetails == null ? List.of() : this.healthErrorDetails;
    }
    /**
     * @return Time when last heartbeat was sent by the DRA.
     * 
     */
    public Optional<String> lastHeartBeat() {
        return Optional.ofNullable(this.lastHeartBeat);
    }
    /**
     * @return Number of protected VMs currently managed by the DRA.
     * 
     */
    public Optional<Integer> protectedItemCount() {
        return Optional.ofNullable(this.protectedItemCount);
    }
    /**
     * @return The provider version.
     * 
     */
    public Optional<String> providerVersion() {
        return Optional.ofNullable(this.providerVersion);
    }
    /**
     * @return The provider version details.
     * 
     */
    public Optional<VersionDetailsResponse> providerVersionDetails() {
        return Optional.ofNullable(this.providerVersionDetails);
    }
    /**
     * @return Expiry date of the version.
     * 
     */
    public Optional<String> providerVersionExpiryDate() {
        return Optional.ofNullable(this.providerVersionExpiryDate);
    }
    /**
     * @return DRA version status.
     * 
     */
    public Optional<String> providerVersionState() {
        return Optional.ofNullable(this.providerVersionState);
    }
    /**
     * @return The resource access identity details.
     * 
     */
    public Optional<IdentityProviderDetailsResponse> resourceAccessIdentityDetails() {
        return Optional.ofNullable(this.resourceAccessIdentityDetails);
    }
    /**
     * @return The fabric provider.
     * 
     */
    public Optional<String> serverVersion() {
        return Optional.ofNullable(this.serverVersion);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RecoveryServicesProviderPropertiesResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> allowedScenarios;
        private @Nullable IdentityProviderDetailsResponse authenticationIdentityDetails;
        private @Nullable String connectionStatus;
        private @Nullable String draIdentifier;
        private @Nullable String fabricFriendlyName;
        private @Nullable String fabricType;
        private @Nullable String friendlyName;
        private @Nullable List<HealthErrorResponse> healthErrorDetails;
        private @Nullable String lastHeartBeat;
        private @Nullable Integer protectedItemCount;
        private @Nullable String providerVersion;
        private @Nullable VersionDetailsResponse providerVersionDetails;
        private @Nullable String providerVersionExpiryDate;
        private @Nullable String providerVersionState;
        private @Nullable IdentityProviderDetailsResponse resourceAccessIdentityDetails;
        private @Nullable String serverVersion;
        public Builder() {}
        public Builder(RecoveryServicesProviderPropertiesResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowedScenarios = defaults.allowedScenarios;
    	      this.authenticationIdentityDetails = defaults.authenticationIdentityDetails;
    	      this.connectionStatus = defaults.connectionStatus;
    	      this.draIdentifier = defaults.draIdentifier;
    	      this.fabricFriendlyName = defaults.fabricFriendlyName;
    	      this.fabricType = defaults.fabricType;
    	      this.friendlyName = defaults.friendlyName;
    	      this.healthErrorDetails = defaults.healthErrorDetails;
    	      this.lastHeartBeat = defaults.lastHeartBeat;
    	      this.protectedItemCount = defaults.protectedItemCount;
    	      this.providerVersion = defaults.providerVersion;
    	      this.providerVersionDetails = defaults.providerVersionDetails;
    	      this.providerVersionExpiryDate = defaults.providerVersionExpiryDate;
    	      this.providerVersionState = defaults.providerVersionState;
    	      this.resourceAccessIdentityDetails = defaults.resourceAccessIdentityDetails;
    	      this.serverVersion = defaults.serverVersion;
        }

        @CustomType.Setter
        public Builder allowedScenarios(@Nullable List<String> allowedScenarios) {
            this.allowedScenarios = allowedScenarios;
            return this;
        }
        public Builder allowedScenarios(String... allowedScenarios) {
            return allowedScenarios(List.of(allowedScenarios));
        }
        @CustomType.Setter
        public Builder authenticationIdentityDetails(@Nullable IdentityProviderDetailsResponse authenticationIdentityDetails) {
            this.authenticationIdentityDetails = authenticationIdentityDetails;
            return this;
        }
        @CustomType.Setter
        public Builder connectionStatus(@Nullable String connectionStatus) {
            this.connectionStatus = connectionStatus;
            return this;
        }
        @CustomType.Setter
        public Builder draIdentifier(@Nullable String draIdentifier) {
            this.draIdentifier = draIdentifier;
            return this;
        }
        @CustomType.Setter
        public Builder fabricFriendlyName(@Nullable String fabricFriendlyName) {
            this.fabricFriendlyName = fabricFriendlyName;
            return this;
        }
        @CustomType.Setter
        public Builder fabricType(@Nullable String fabricType) {
            this.fabricType = fabricType;
            return this;
        }
        @CustomType.Setter
        public Builder friendlyName(@Nullable String friendlyName) {
            this.friendlyName = friendlyName;
            return this;
        }
        @CustomType.Setter
        public Builder healthErrorDetails(@Nullable List<HealthErrorResponse> healthErrorDetails) {
            this.healthErrorDetails = healthErrorDetails;
            return this;
        }
        public Builder healthErrorDetails(HealthErrorResponse... healthErrorDetails) {
            return healthErrorDetails(List.of(healthErrorDetails));
        }
        @CustomType.Setter
        public Builder lastHeartBeat(@Nullable String lastHeartBeat) {
            this.lastHeartBeat = lastHeartBeat;
            return this;
        }
        @CustomType.Setter
        public Builder protectedItemCount(@Nullable Integer protectedItemCount) {
            this.protectedItemCount = protectedItemCount;
            return this;
        }
        @CustomType.Setter
        public Builder providerVersion(@Nullable String providerVersion) {
            this.providerVersion = providerVersion;
            return this;
        }
        @CustomType.Setter
        public Builder providerVersionDetails(@Nullable VersionDetailsResponse providerVersionDetails) {
            this.providerVersionDetails = providerVersionDetails;
            return this;
        }
        @CustomType.Setter
        public Builder providerVersionExpiryDate(@Nullable String providerVersionExpiryDate) {
            this.providerVersionExpiryDate = providerVersionExpiryDate;
            return this;
        }
        @CustomType.Setter
        public Builder providerVersionState(@Nullable String providerVersionState) {
            this.providerVersionState = providerVersionState;
            return this;
        }
        @CustomType.Setter
        public Builder resourceAccessIdentityDetails(@Nullable IdentityProviderDetailsResponse resourceAccessIdentityDetails) {
            this.resourceAccessIdentityDetails = resourceAccessIdentityDetails;
            return this;
        }
        @CustomType.Setter
        public Builder serverVersion(@Nullable String serverVersion) {
            this.serverVersion = serverVersion;
            return this;
        }
        public RecoveryServicesProviderPropertiesResponse build() {
            final var o = new RecoveryServicesProviderPropertiesResponse();
            o.allowedScenarios = allowedScenarios;
            o.authenticationIdentityDetails = authenticationIdentityDetails;
            o.connectionStatus = connectionStatus;
            o.draIdentifier = draIdentifier;
            o.fabricFriendlyName = fabricFriendlyName;
            o.fabricType = fabricType;
            o.friendlyName = friendlyName;
            o.healthErrorDetails = healthErrorDetails;
            o.lastHeartBeat = lastHeartBeat;
            o.protectedItemCount = protectedItemCount;
            o.providerVersion = providerVersion;
            o.providerVersionDetails = providerVersionDetails;
            o.providerVersionExpiryDate = providerVersionExpiryDate;
            o.providerVersionState = providerVersionState;
            o.resourceAccessIdentityDetails = resourceAccessIdentityDetails;
            o.serverVersion = serverVersion;
            return o;
        }
    }
}
