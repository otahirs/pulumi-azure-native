// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.devtestlab.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class UserSecretStoreResponse {
    /**
     * @return The ID of the user&#39;s Key vault.
     * 
     */
    private @Nullable String keyVaultId;
    /**
     * @return The URI of the user&#39;s Key vault.
     * 
     */
    private @Nullable String keyVaultUri;

    private UserSecretStoreResponse() {}
    /**
     * @return The ID of the user&#39;s Key vault.
     * 
     */
    public Optional<String> keyVaultId() {
        return Optional.ofNullable(this.keyVaultId);
    }
    /**
     * @return The URI of the user&#39;s Key vault.
     * 
     */
    public Optional<String> keyVaultUri() {
        return Optional.ofNullable(this.keyVaultUri);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(UserSecretStoreResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String keyVaultId;
        private @Nullable String keyVaultUri;
        public Builder() {}
        public Builder(UserSecretStoreResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.keyVaultId = defaults.keyVaultId;
    	      this.keyVaultUri = defaults.keyVaultUri;
        }

        @CustomType.Setter
        public Builder keyVaultId(@Nullable String keyVaultId) {
            this.keyVaultId = keyVaultId;
            return this;
        }
        @CustomType.Setter
        public Builder keyVaultUri(@Nullable String keyVaultUri) {
            this.keyVaultUri = keyVaultUri;
            return this;
        }
        public UserSecretStoreResponse build() {
            final var o = new UserSecretStoreResponse();
            o.keyVaultId = keyVaultId;
            o.keyVaultUri = keyVaultUri;
            return o;
        }
    }
}
