// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.security.outputs;

import com.pulumi.azurenative.security.outputs.ProxyServerPropertiesResponse;
import com.pulumi.azurenative.security.outputs.ServicePrincipalPropertiesResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class HybridComputeSettingsPropertiesResponse {
    /**
     * @return Whether or not to automatically install Azure Arc (hybrid compute) agents on machines
     * 
     */
    private String autoProvision;
    /**
     * @return State of the service principal and its secret
     * 
     */
    private String hybridComputeProvisioningState;
    /**
     * @return For a non-Azure machine that is not connected directly to the internet, specify a proxy server that the non-Azure machine can use.
     * 
     */
    private @Nullable ProxyServerPropertiesResponse proxyServer;
    /**
     * @return The location where the metadata of machines will be stored
     * 
     */
    private @Nullable String region;
    /**
     * @return The name of the resource group where Arc (Hybrid Compute) connectors are connected.
     * 
     */
    private @Nullable String resourceGroupName;
    /**
     * @return An object to access resources that are secured by an Azure AD tenant.
     * 
     */
    private @Nullable ServicePrincipalPropertiesResponse servicePrincipal;

    private HybridComputeSettingsPropertiesResponse() {}
    /**
     * @return Whether or not to automatically install Azure Arc (hybrid compute) agents on machines
     * 
     */
    public String autoProvision() {
        return this.autoProvision;
    }
    /**
     * @return State of the service principal and its secret
     * 
     */
    public String hybridComputeProvisioningState() {
        return this.hybridComputeProvisioningState;
    }
    /**
     * @return For a non-Azure machine that is not connected directly to the internet, specify a proxy server that the non-Azure machine can use.
     * 
     */
    public Optional<ProxyServerPropertiesResponse> proxyServer() {
        return Optional.ofNullable(this.proxyServer);
    }
    /**
     * @return The location where the metadata of machines will be stored
     * 
     */
    public Optional<String> region() {
        return Optional.ofNullable(this.region);
    }
    /**
     * @return The name of the resource group where Arc (Hybrid Compute) connectors are connected.
     * 
     */
    public Optional<String> resourceGroupName() {
        return Optional.ofNullable(this.resourceGroupName);
    }
    /**
     * @return An object to access resources that are secured by an Azure AD tenant.
     * 
     */
    public Optional<ServicePrincipalPropertiesResponse> servicePrincipal() {
        return Optional.ofNullable(this.servicePrincipal);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(HybridComputeSettingsPropertiesResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String autoProvision;
        private String hybridComputeProvisioningState;
        private @Nullable ProxyServerPropertiesResponse proxyServer;
        private @Nullable String region;
        private @Nullable String resourceGroupName;
        private @Nullable ServicePrincipalPropertiesResponse servicePrincipal;
        public Builder() {}
        public Builder(HybridComputeSettingsPropertiesResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoProvision = defaults.autoProvision;
    	      this.hybridComputeProvisioningState = defaults.hybridComputeProvisioningState;
    	      this.proxyServer = defaults.proxyServer;
    	      this.region = defaults.region;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.servicePrincipal = defaults.servicePrincipal;
        }

        @CustomType.Setter
        public Builder autoProvision(String autoProvision) {
            this.autoProvision = Objects.requireNonNull(autoProvision);
            return this;
        }
        @CustomType.Setter
        public Builder hybridComputeProvisioningState(String hybridComputeProvisioningState) {
            this.hybridComputeProvisioningState = Objects.requireNonNull(hybridComputeProvisioningState);
            return this;
        }
        @CustomType.Setter
        public Builder proxyServer(@Nullable ProxyServerPropertiesResponse proxyServer) {
            this.proxyServer = proxyServer;
            return this;
        }
        @CustomType.Setter
        public Builder region(@Nullable String region) {
            this.region = region;
            return this;
        }
        @CustomType.Setter
        public Builder resourceGroupName(@Nullable String resourceGroupName) {
            this.resourceGroupName = resourceGroupName;
            return this;
        }
        @CustomType.Setter
        public Builder servicePrincipal(@Nullable ServicePrincipalPropertiesResponse servicePrincipal) {
            this.servicePrincipal = servicePrincipal;
            return this;
        }
        public HybridComputeSettingsPropertiesResponse build() {
            final var o = new HybridComputeSettingsPropertiesResponse();
            o.autoProvision = autoProvision;
            o.hybridComputeProvisioningState = hybridComputeProvisioningState;
            o.proxyServer = proxyServer;
            o.region = region;
            o.resourceGroupName = resourceGroupName;
            o.servicePrincipal = servicePrincipal;
            return o;
        }
    }
}
