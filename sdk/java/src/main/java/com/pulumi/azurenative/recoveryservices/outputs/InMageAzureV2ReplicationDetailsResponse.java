// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.recoveryservices.outputs;

import com.pulumi.azurenative.recoveryservices.outputs.AzureVmDiskDetailsResponse;
import com.pulumi.azurenative.recoveryservices.outputs.HealthErrorResponse;
import com.pulumi.azurenative.recoveryservices.outputs.InMageAzureV2ManagedDiskDetailsResponse;
import com.pulumi.azurenative.recoveryservices.outputs.InMageAzureV2ProtectedDiskDetailsResponse;
import com.pulumi.azurenative.recoveryservices.outputs.VMNicDetailsResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class InMageAzureV2ReplicationDetailsResponse {
    /**
     * @return Agent expiry date.
     * 
     */
    private @Nullable String agentExpiryDate;
    /**
     * @return The agent version.
     * 
     */
    private @Nullable String agentVersion;
    /**
     * @return Azure VM Disk details.
     * 
     */
    private @Nullable List<AzureVmDiskDetailsResponse> azureVMDiskDetails;
    /**
     * @return The compressed data change rate in MB.
     * 
     */
    private @Nullable Double compressedDataRateInMB;
    /**
     * @return The data stores of the on-premise machine. Value can be list of strings that contain data store names.
     * 
     */
    private @Nullable List<String> datastores;
    /**
     * @return A value indicating the discovery type of the machine. Value can be vCenter or physical.
     * 
     */
    private @Nullable String discoveryType;
    /**
     * @return A value indicating whether any disk is resized for this VM.
     * 
     */
    private @Nullable String diskResized;
    /**
     * @return The selected option to enable RDP\SSH on target vm after failover. String value of {SrsDataContract.EnableRDPOnTargetOption} enum.
     * 
     */
    private @Nullable String enableRdpOnTargetOption;
    /**
     * @return The infrastructure VM Id.
     * 
     */
    private @Nullable String infrastructureVmId;
    /**
     * @return Gets the Instance type.
     * Expected value is &#39;InMageAzureV2&#39;.
     * 
     */
    private String instanceType;
    /**
     * @return The source IP address.
     * 
     */
    private @Nullable String ipAddress;
    /**
     * @return A value indicating whether installed agent needs to be updated.
     * 
     */
    private @Nullable String isAgentUpdateRequired;
    /**
     * @return A value indicating whether the source server requires a restart after update.
     * 
     */
    private @Nullable String isRebootAfterUpdateRequired;
    /**
     * @return The last heartbeat received from the source server.
     * 
     */
    private @Nullable String lastHeartbeat;
    /**
     * @return The last RPO calculated time.
     * 
     */
    private @Nullable String lastRpoCalculatedTime;
    /**
     * @return The last update time received from on-prem components.
     * 
     */
    private @Nullable String lastUpdateReceivedTime;
    /**
     * @return License Type of the VM to be used.
     * 
     */
    private @Nullable String licenseType;
    /**
     * @return The master target Id.
     * 
     */
    private @Nullable String masterTargetId;
    /**
     * @return The multi vm group Id.
     * 
     */
    private @Nullable String multiVmGroupId;
    /**
     * @return The multi vm group name.
     * 
     */
    private @Nullable String multiVmGroupName;
    /**
     * @return A value indicating whether multi vm sync is enabled or disabled.
     * 
     */
    private @Nullable String multiVmSyncStatus;
    /**
     * @return The id of the disk containing the OS.
     * 
     */
    private @Nullable String osDiskId;
    /**
     * @return The type of the OS on the VM.
     * 
     */
    private @Nullable String osType;
    /**
     * @return The OS Version of the protected item.
     * 
     */
    private @Nullable String osVersion;
    /**
     * @return The process server Id.
     * 
     */
    private @Nullable String processServerId;
    /**
     * @return The process server name.
     * 
     */
    private String processServerName;
    /**
     * @return The list of protected disks.
     * 
     */
    private @Nullable List<InMageAzureV2ProtectedDiskDetailsResponse> protectedDisks;
    /**
     * @return The list of protected managed disks.
     * 
     */
    private @Nullable List<InMageAzureV2ManagedDiskDetailsResponse> protectedManagedDisks;
    /**
     * @return The protection stage.
     * 
     */
    private @Nullable String protectionStage;
    /**
     * @return The recovery availability set Id.
     * 
     */
    private @Nullable String recoveryAvailabilitySetId;
    /**
     * @return The ARM id of the log storage account used for replication. This will be set to null if no log storage account was provided during enable protection.
     * 
     */
    private @Nullable String recoveryAzureLogStorageAccountId;
    /**
     * @return The target resource group Id.
     * 
     */
    private @Nullable String recoveryAzureResourceGroupId;
    /**
     * @return The recovery Azure storage account.
     * 
     */
    private @Nullable String recoveryAzureStorageAccount;
    /**
     * @return Recovery Azure given name.
     * 
     */
    private @Nullable String recoveryAzureVMName;
    /**
     * @return The Recovery Azure VM size.
     * 
     */
    private @Nullable String recoveryAzureVMSize;
    /**
     * @return The replica id of the protected item.
     * 
     */
    private @Nullable String replicaId;
    /**
     * @return The resync progress percentage.
     * 
     */
    private @Nullable Integer resyncProgressPercentage;
    /**
     * @return The RPO in seconds.
     * 
     */
    private @Nullable Double rpoInSeconds;
    /**
     * @return The selected recovery azure network Id.
     * 
     */
    private @Nullable String selectedRecoveryAzureNetworkId;
    /**
     * @return The selected source nic Id which will be used as the primary nic during failover.
     * 
     */
    private @Nullable String selectedSourceNicId;
    /**
     * @return The test failover virtual network.
     * 
     */
    private @Nullable String selectedTfoAzureNetworkId;
    /**
     * @return The CPU count of the VM on the primary side.
     * 
     */
    private @Nullable Integer sourceVmCpuCount;
    /**
     * @return The RAM size of the VM on the primary side.
     * 
     */
    private @Nullable Integer sourceVmRamSizeInMB;
    /**
     * @return The target availability zone.
     * 
     */
    private @Nullable String targetAvailabilityZone;
    /**
     * @return The target proximity placement group Id.
     * 
     */
    private @Nullable String targetProximityPlacementGroupId;
    /**
     * @return The ARM Id of the target Azure VM. This value will be null until the VM is failed over. Only after failure it will be populated with the ARM Id of the Azure VM.
     * 
     */
    private @Nullable String targetVmId;
    /**
     * @return The uncompressed data change rate in MB.
     * 
     */
    private @Nullable Double uncompressedDataRateInMB;
    /**
     * @return A value indicating whether managed disks should be used during failover.
     * 
     */
    private @Nullable String useManagedDisks;
    /**
     * @return The vCenter infrastructure Id.
     * 
     */
    private @Nullable String vCenterInfrastructureId;
    /**
     * @return The validation errors of the on-premise machine Value can be list of validation errors.
     * 
     */
    private @Nullable List<HealthErrorResponse> validationErrors;
    /**
     * @return The OS disk VHD name.
     * 
     */
    private @Nullable String vhdName;
    /**
     * @return The virtual machine Id.
     * 
     */
    private @Nullable String vmId;
    /**
     * @return The PE Network details.
     * 
     */
    private @Nullable List<VMNicDetailsResponse> vmNics;
    /**
     * @return The protection state for the vm.
     * 
     */
    private @Nullable String vmProtectionState;
    /**
     * @return The protection state description for the vm.
     * 
     */
    private @Nullable String vmProtectionStateDescription;

    private InMageAzureV2ReplicationDetailsResponse() {}
    /**
     * @return Agent expiry date.
     * 
     */
    public Optional<String> agentExpiryDate() {
        return Optional.ofNullable(this.agentExpiryDate);
    }
    /**
     * @return The agent version.
     * 
     */
    public Optional<String> agentVersion() {
        return Optional.ofNullable(this.agentVersion);
    }
    /**
     * @return Azure VM Disk details.
     * 
     */
    public List<AzureVmDiskDetailsResponse> azureVMDiskDetails() {
        return this.azureVMDiskDetails == null ? List.of() : this.azureVMDiskDetails;
    }
    /**
     * @return The compressed data change rate in MB.
     * 
     */
    public Optional<Double> compressedDataRateInMB() {
        return Optional.ofNullable(this.compressedDataRateInMB);
    }
    /**
     * @return The data stores of the on-premise machine. Value can be list of strings that contain data store names.
     * 
     */
    public List<String> datastores() {
        return this.datastores == null ? List.of() : this.datastores;
    }
    /**
     * @return A value indicating the discovery type of the machine. Value can be vCenter or physical.
     * 
     */
    public Optional<String> discoveryType() {
        return Optional.ofNullable(this.discoveryType);
    }
    /**
     * @return A value indicating whether any disk is resized for this VM.
     * 
     */
    public Optional<String> diskResized() {
        return Optional.ofNullable(this.diskResized);
    }
    /**
     * @return The selected option to enable RDP\SSH on target vm after failover. String value of {SrsDataContract.EnableRDPOnTargetOption} enum.
     * 
     */
    public Optional<String> enableRdpOnTargetOption() {
        return Optional.ofNullable(this.enableRdpOnTargetOption);
    }
    /**
     * @return The infrastructure VM Id.
     * 
     */
    public Optional<String> infrastructureVmId() {
        return Optional.ofNullable(this.infrastructureVmId);
    }
    /**
     * @return Gets the Instance type.
     * Expected value is &#39;InMageAzureV2&#39;.
     * 
     */
    public String instanceType() {
        return this.instanceType;
    }
    /**
     * @return The source IP address.
     * 
     */
    public Optional<String> ipAddress() {
        return Optional.ofNullable(this.ipAddress);
    }
    /**
     * @return A value indicating whether installed agent needs to be updated.
     * 
     */
    public Optional<String> isAgentUpdateRequired() {
        return Optional.ofNullable(this.isAgentUpdateRequired);
    }
    /**
     * @return A value indicating whether the source server requires a restart after update.
     * 
     */
    public Optional<String> isRebootAfterUpdateRequired() {
        return Optional.ofNullable(this.isRebootAfterUpdateRequired);
    }
    /**
     * @return The last heartbeat received from the source server.
     * 
     */
    public Optional<String> lastHeartbeat() {
        return Optional.ofNullable(this.lastHeartbeat);
    }
    /**
     * @return The last RPO calculated time.
     * 
     */
    public Optional<String> lastRpoCalculatedTime() {
        return Optional.ofNullable(this.lastRpoCalculatedTime);
    }
    /**
     * @return The last update time received from on-prem components.
     * 
     */
    public Optional<String> lastUpdateReceivedTime() {
        return Optional.ofNullable(this.lastUpdateReceivedTime);
    }
    /**
     * @return License Type of the VM to be used.
     * 
     */
    public Optional<String> licenseType() {
        return Optional.ofNullable(this.licenseType);
    }
    /**
     * @return The master target Id.
     * 
     */
    public Optional<String> masterTargetId() {
        return Optional.ofNullable(this.masterTargetId);
    }
    /**
     * @return The multi vm group Id.
     * 
     */
    public Optional<String> multiVmGroupId() {
        return Optional.ofNullable(this.multiVmGroupId);
    }
    /**
     * @return The multi vm group name.
     * 
     */
    public Optional<String> multiVmGroupName() {
        return Optional.ofNullable(this.multiVmGroupName);
    }
    /**
     * @return A value indicating whether multi vm sync is enabled or disabled.
     * 
     */
    public Optional<String> multiVmSyncStatus() {
        return Optional.ofNullable(this.multiVmSyncStatus);
    }
    /**
     * @return The id of the disk containing the OS.
     * 
     */
    public Optional<String> osDiskId() {
        return Optional.ofNullable(this.osDiskId);
    }
    /**
     * @return The type of the OS on the VM.
     * 
     */
    public Optional<String> osType() {
        return Optional.ofNullable(this.osType);
    }
    /**
     * @return The OS Version of the protected item.
     * 
     */
    public Optional<String> osVersion() {
        return Optional.ofNullable(this.osVersion);
    }
    /**
     * @return The process server Id.
     * 
     */
    public Optional<String> processServerId() {
        return Optional.ofNullable(this.processServerId);
    }
    /**
     * @return The process server name.
     * 
     */
    public String processServerName() {
        return this.processServerName;
    }
    /**
     * @return The list of protected disks.
     * 
     */
    public List<InMageAzureV2ProtectedDiskDetailsResponse> protectedDisks() {
        return this.protectedDisks == null ? List.of() : this.protectedDisks;
    }
    /**
     * @return The list of protected managed disks.
     * 
     */
    public List<InMageAzureV2ManagedDiskDetailsResponse> protectedManagedDisks() {
        return this.protectedManagedDisks == null ? List.of() : this.protectedManagedDisks;
    }
    /**
     * @return The protection stage.
     * 
     */
    public Optional<String> protectionStage() {
        return Optional.ofNullable(this.protectionStage);
    }
    /**
     * @return The recovery availability set Id.
     * 
     */
    public Optional<String> recoveryAvailabilitySetId() {
        return Optional.ofNullable(this.recoveryAvailabilitySetId);
    }
    /**
     * @return The ARM id of the log storage account used for replication. This will be set to null if no log storage account was provided during enable protection.
     * 
     */
    public Optional<String> recoveryAzureLogStorageAccountId() {
        return Optional.ofNullable(this.recoveryAzureLogStorageAccountId);
    }
    /**
     * @return The target resource group Id.
     * 
     */
    public Optional<String> recoveryAzureResourceGroupId() {
        return Optional.ofNullable(this.recoveryAzureResourceGroupId);
    }
    /**
     * @return The recovery Azure storage account.
     * 
     */
    public Optional<String> recoveryAzureStorageAccount() {
        return Optional.ofNullable(this.recoveryAzureStorageAccount);
    }
    /**
     * @return Recovery Azure given name.
     * 
     */
    public Optional<String> recoveryAzureVMName() {
        return Optional.ofNullable(this.recoveryAzureVMName);
    }
    /**
     * @return The Recovery Azure VM size.
     * 
     */
    public Optional<String> recoveryAzureVMSize() {
        return Optional.ofNullable(this.recoveryAzureVMSize);
    }
    /**
     * @return The replica id of the protected item.
     * 
     */
    public Optional<String> replicaId() {
        return Optional.ofNullable(this.replicaId);
    }
    /**
     * @return The resync progress percentage.
     * 
     */
    public Optional<Integer> resyncProgressPercentage() {
        return Optional.ofNullable(this.resyncProgressPercentage);
    }
    /**
     * @return The RPO in seconds.
     * 
     */
    public Optional<Double> rpoInSeconds() {
        return Optional.ofNullable(this.rpoInSeconds);
    }
    /**
     * @return The selected recovery azure network Id.
     * 
     */
    public Optional<String> selectedRecoveryAzureNetworkId() {
        return Optional.ofNullable(this.selectedRecoveryAzureNetworkId);
    }
    /**
     * @return The selected source nic Id which will be used as the primary nic during failover.
     * 
     */
    public Optional<String> selectedSourceNicId() {
        return Optional.ofNullable(this.selectedSourceNicId);
    }
    /**
     * @return The test failover virtual network.
     * 
     */
    public Optional<String> selectedTfoAzureNetworkId() {
        return Optional.ofNullable(this.selectedTfoAzureNetworkId);
    }
    /**
     * @return The CPU count of the VM on the primary side.
     * 
     */
    public Optional<Integer> sourceVmCpuCount() {
        return Optional.ofNullable(this.sourceVmCpuCount);
    }
    /**
     * @return The RAM size of the VM on the primary side.
     * 
     */
    public Optional<Integer> sourceVmRamSizeInMB() {
        return Optional.ofNullable(this.sourceVmRamSizeInMB);
    }
    /**
     * @return The target availability zone.
     * 
     */
    public Optional<String> targetAvailabilityZone() {
        return Optional.ofNullable(this.targetAvailabilityZone);
    }
    /**
     * @return The target proximity placement group Id.
     * 
     */
    public Optional<String> targetProximityPlacementGroupId() {
        return Optional.ofNullable(this.targetProximityPlacementGroupId);
    }
    /**
     * @return The ARM Id of the target Azure VM. This value will be null until the VM is failed over. Only after failure it will be populated with the ARM Id of the Azure VM.
     * 
     */
    public Optional<String> targetVmId() {
        return Optional.ofNullable(this.targetVmId);
    }
    /**
     * @return The uncompressed data change rate in MB.
     * 
     */
    public Optional<Double> uncompressedDataRateInMB() {
        return Optional.ofNullable(this.uncompressedDataRateInMB);
    }
    /**
     * @return A value indicating whether managed disks should be used during failover.
     * 
     */
    public Optional<String> useManagedDisks() {
        return Optional.ofNullable(this.useManagedDisks);
    }
    /**
     * @return The vCenter infrastructure Id.
     * 
     */
    public Optional<String> vCenterInfrastructureId() {
        return Optional.ofNullable(this.vCenterInfrastructureId);
    }
    /**
     * @return The validation errors of the on-premise machine Value can be list of validation errors.
     * 
     */
    public List<HealthErrorResponse> validationErrors() {
        return this.validationErrors == null ? List.of() : this.validationErrors;
    }
    /**
     * @return The OS disk VHD name.
     * 
     */
    public Optional<String> vhdName() {
        return Optional.ofNullable(this.vhdName);
    }
    /**
     * @return The virtual machine Id.
     * 
     */
    public Optional<String> vmId() {
        return Optional.ofNullable(this.vmId);
    }
    /**
     * @return The PE Network details.
     * 
     */
    public List<VMNicDetailsResponse> vmNics() {
        return this.vmNics == null ? List.of() : this.vmNics;
    }
    /**
     * @return The protection state for the vm.
     * 
     */
    public Optional<String> vmProtectionState() {
        return Optional.ofNullable(this.vmProtectionState);
    }
    /**
     * @return The protection state description for the vm.
     * 
     */
    public Optional<String> vmProtectionStateDescription() {
        return Optional.ofNullable(this.vmProtectionStateDescription);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InMageAzureV2ReplicationDetailsResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String agentExpiryDate;
        private @Nullable String agentVersion;
        private @Nullable List<AzureVmDiskDetailsResponse> azureVMDiskDetails;
        private @Nullable Double compressedDataRateInMB;
        private @Nullable List<String> datastores;
        private @Nullable String discoveryType;
        private @Nullable String diskResized;
        private @Nullable String enableRdpOnTargetOption;
        private @Nullable String infrastructureVmId;
        private String instanceType;
        private @Nullable String ipAddress;
        private @Nullable String isAgentUpdateRequired;
        private @Nullable String isRebootAfterUpdateRequired;
        private @Nullable String lastHeartbeat;
        private @Nullable String lastRpoCalculatedTime;
        private @Nullable String lastUpdateReceivedTime;
        private @Nullable String licenseType;
        private @Nullable String masterTargetId;
        private @Nullable String multiVmGroupId;
        private @Nullable String multiVmGroupName;
        private @Nullable String multiVmSyncStatus;
        private @Nullable String osDiskId;
        private @Nullable String osType;
        private @Nullable String osVersion;
        private @Nullable String processServerId;
        private String processServerName;
        private @Nullable List<InMageAzureV2ProtectedDiskDetailsResponse> protectedDisks;
        private @Nullable List<InMageAzureV2ManagedDiskDetailsResponse> protectedManagedDisks;
        private @Nullable String protectionStage;
        private @Nullable String recoveryAvailabilitySetId;
        private @Nullable String recoveryAzureLogStorageAccountId;
        private @Nullable String recoveryAzureResourceGroupId;
        private @Nullable String recoveryAzureStorageAccount;
        private @Nullable String recoveryAzureVMName;
        private @Nullable String recoveryAzureVMSize;
        private @Nullable String replicaId;
        private @Nullable Integer resyncProgressPercentage;
        private @Nullable Double rpoInSeconds;
        private @Nullable String selectedRecoveryAzureNetworkId;
        private @Nullable String selectedSourceNicId;
        private @Nullable String selectedTfoAzureNetworkId;
        private @Nullable Integer sourceVmCpuCount;
        private @Nullable Integer sourceVmRamSizeInMB;
        private @Nullable String targetAvailabilityZone;
        private @Nullable String targetProximityPlacementGroupId;
        private @Nullable String targetVmId;
        private @Nullable Double uncompressedDataRateInMB;
        private @Nullable String useManagedDisks;
        private @Nullable String vCenterInfrastructureId;
        private @Nullable List<HealthErrorResponse> validationErrors;
        private @Nullable String vhdName;
        private @Nullable String vmId;
        private @Nullable List<VMNicDetailsResponse> vmNics;
        private @Nullable String vmProtectionState;
        private @Nullable String vmProtectionStateDescription;
        public Builder() {}
        public Builder(InMageAzureV2ReplicationDetailsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.agentExpiryDate = defaults.agentExpiryDate;
    	      this.agentVersion = defaults.agentVersion;
    	      this.azureVMDiskDetails = defaults.azureVMDiskDetails;
    	      this.compressedDataRateInMB = defaults.compressedDataRateInMB;
    	      this.datastores = defaults.datastores;
    	      this.discoveryType = defaults.discoveryType;
    	      this.diskResized = defaults.diskResized;
    	      this.enableRdpOnTargetOption = defaults.enableRdpOnTargetOption;
    	      this.infrastructureVmId = defaults.infrastructureVmId;
    	      this.instanceType = defaults.instanceType;
    	      this.ipAddress = defaults.ipAddress;
    	      this.isAgentUpdateRequired = defaults.isAgentUpdateRequired;
    	      this.isRebootAfterUpdateRequired = defaults.isRebootAfterUpdateRequired;
    	      this.lastHeartbeat = defaults.lastHeartbeat;
    	      this.lastRpoCalculatedTime = defaults.lastRpoCalculatedTime;
    	      this.lastUpdateReceivedTime = defaults.lastUpdateReceivedTime;
    	      this.licenseType = defaults.licenseType;
    	      this.masterTargetId = defaults.masterTargetId;
    	      this.multiVmGroupId = defaults.multiVmGroupId;
    	      this.multiVmGroupName = defaults.multiVmGroupName;
    	      this.multiVmSyncStatus = defaults.multiVmSyncStatus;
    	      this.osDiskId = defaults.osDiskId;
    	      this.osType = defaults.osType;
    	      this.osVersion = defaults.osVersion;
    	      this.processServerId = defaults.processServerId;
    	      this.processServerName = defaults.processServerName;
    	      this.protectedDisks = defaults.protectedDisks;
    	      this.protectedManagedDisks = defaults.protectedManagedDisks;
    	      this.protectionStage = defaults.protectionStage;
    	      this.recoveryAvailabilitySetId = defaults.recoveryAvailabilitySetId;
    	      this.recoveryAzureLogStorageAccountId = defaults.recoveryAzureLogStorageAccountId;
    	      this.recoveryAzureResourceGroupId = defaults.recoveryAzureResourceGroupId;
    	      this.recoveryAzureStorageAccount = defaults.recoveryAzureStorageAccount;
    	      this.recoveryAzureVMName = defaults.recoveryAzureVMName;
    	      this.recoveryAzureVMSize = defaults.recoveryAzureVMSize;
    	      this.replicaId = defaults.replicaId;
    	      this.resyncProgressPercentage = defaults.resyncProgressPercentage;
    	      this.rpoInSeconds = defaults.rpoInSeconds;
    	      this.selectedRecoveryAzureNetworkId = defaults.selectedRecoveryAzureNetworkId;
    	      this.selectedSourceNicId = defaults.selectedSourceNicId;
    	      this.selectedTfoAzureNetworkId = defaults.selectedTfoAzureNetworkId;
    	      this.sourceVmCpuCount = defaults.sourceVmCpuCount;
    	      this.sourceVmRamSizeInMB = defaults.sourceVmRamSizeInMB;
    	      this.targetAvailabilityZone = defaults.targetAvailabilityZone;
    	      this.targetProximityPlacementGroupId = defaults.targetProximityPlacementGroupId;
    	      this.targetVmId = defaults.targetVmId;
    	      this.uncompressedDataRateInMB = defaults.uncompressedDataRateInMB;
    	      this.useManagedDisks = defaults.useManagedDisks;
    	      this.vCenterInfrastructureId = defaults.vCenterInfrastructureId;
    	      this.validationErrors = defaults.validationErrors;
    	      this.vhdName = defaults.vhdName;
    	      this.vmId = defaults.vmId;
    	      this.vmNics = defaults.vmNics;
    	      this.vmProtectionState = defaults.vmProtectionState;
    	      this.vmProtectionStateDescription = defaults.vmProtectionStateDescription;
        }

        @CustomType.Setter
        public Builder agentExpiryDate(@Nullable String agentExpiryDate) {
            this.agentExpiryDate = agentExpiryDate;
            return this;
        }
        @CustomType.Setter
        public Builder agentVersion(@Nullable String agentVersion) {
            this.agentVersion = agentVersion;
            return this;
        }
        @CustomType.Setter
        public Builder azureVMDiskDetails(@Nullable List<AzureVmDiskDetailsResponse> azureVMDiskDetails) {
            this.azureVMDiskDetails = azureVMDiskDetails;
            return this;
        }
        public Builder azureVMDiskDetails(AzureVmDiskDetailsResponse... azureVMDiskDetails) {
            return azureVMDiskDetails(List.of(azureVMDiskDetails));
        }
        @CustomType.Setter
        public Builder compressedDataRateInMB(@Nullable Double compressedDataRateInMB) {
            this.compressedDataRateInMB = compressedDataRateInMB;
            return this;
        }
        @CustomType.Setter
        public Builder datastores(@Nullable List<String> datastores) {
            this.datastores = datastores;
            return this;
        }
        public Builder datastores(String... datastores) {
            return datastores(List.of(datastores));
        }
        @CustomType.Setter
        public Builder discoveryType(@Nullable String discoveryType) {
            this.discoveryType = discoveryType;
            return this;
        }
        @CustomType.Setter
        public Builder diskResized(@Nullable String diskResized) {
            this.diskResized = diskResized;
            return this;
        }
        @CustomType.Setter
        public Builder enableRdpOnTargetOption(@Nullable String enableRdpOnTargetOption) {
            this.enableRdpOnTargetOption = enableRdpOnTargetOption;
            return this;
        }
        @CustomType.Setter
        public Builder infrastructureVmId(@Nullable String infrastructureVmId) {
            this.infrastructureVmId = infrastructureVmId;
            return this;
        }
        @CustomType.Setter
        public Builder instanceType(String instanceType) {
            this.instanceType = Objects.requireNonNull(instanceType);
            return this;
        }
        @CustomType.Setter
        public Builder ipAddress(@Nullable String ipAddress) {
            this.ipAddress = ipAddress;
            return this;
        }
        @CustomType.Setter
        public Builder isAgentUpdateRequired(@Nullable String isAgentUpdateRequired) {
            this.isAgentUpdateRequired = isAgentUpdateRequired;
            return this;
        }
        @CustomType.Setter
        public Builder isRebootAfterUpdateRequired(@Nullable String isRebootAfterUpdateRequired) {
            this.isRebootAfterUpdateRequired = isRebootAfterUpdateRequired;
            return this;
        }
        @CustomType.Setter
        public Builder lastHeartbeat(@Nullable String lastHeartbeat) {
            this.lastHeartbeat = lastHeartbeat;
            return this;
        }
        @CustomType.Setter
        public Builder lastRpoCalculatedTime(@Nullable String lastRpoCalculatedTime) {
            this.lastRpoCalculatedTime = lastRpoCalculatedTime;
            return this;
        }
        @CustomType.Setter
        public Builder lastUpdateReceivedTime(@Nullable String lastUpdateReceivedTime) {
            this.lastUpdateReceivedTime = lastUpdateReceivedTime;
            return this;
        }
        @CustomType.Setter
        public Builder licenseType(@Nullable String licenseType) {
            this.licenseType = licenseType;
            return this;
        }
        @CustomType.Setter
        public Builder masterTargetId(@Nullable String masterTargetId) {
            this.masterTargetId = masterTargetId;
            return this;
        }
        @CustomType.Setter
        public Builder multiVmGroupId(@Nullable String multiVmGroupId) {
            this.multiVmGroupId = multiVmGroupId;
            return this;
        }
        @CustomType.Setter
        public Builder multiVmGroupName(@Nullable String multiVmGroupName) {
            this.multiVmGroupName = multiVmGroupName;
            return this;
        }
        @CustomType.Setter
        public Builder multiVmSyncStatus(@Nullable String multiVmSyncStatus) {
            this.multiVmSyncStatus = multiVmSyncStatus;
            return this;
        }
        @CustomType.Setter
        public Builder osDiskId(@Nullable String osDiskId) {
            this.osDiskId = osDiskId;
            return this;
        }
        @CustomType.Setter
        public Builder osType(@Nullable String osType) {
            this.osType = osType;
            return this;
        }
        @CustomType.Setter
        public Builder osVersion(@Nullable String osVersion) {
            this.osVersion = osVersion;
            return this;
        }
        @CustomType.Setter
        public Builder processServerId(@Nullable String processServerId) {
            this.processServerId = processServerId;
            return this;
        }
        @CustomType.Setter
        public Builder processServerName(String processServerName) {
            this.processServerName = Objects.requireNonNull(processServerName);
            return this;
        }
        @CustomType.Setter
        public Builder protectedDisks(@Nullable List<InMageAzureV2ProtectedDiskDetailsResponse> protectedDisks) {
            this.protectedDisks = protectedDisks;
            return this;
        }
        public Builder protectedDisks(InMageAzureV2ProtectedDiskDetailsResponse... protectedDisks) {
            return protectedDisks(List.of(protectedDisks));
        }
        @CustomType.Setter
        public Builder protectedManagedDisks(@Nullable List<InMageAzureV2ManagedDiskDetailsResponse> protectedManagedDisks) {
            this.protectedManagedDisks = protectedManagedDisks;
            return this;
        }
        public Builder protectedManagedDisks(InMageAzureV2ManagedDiskDetailsResponse... protectedManagedDisks) {
            return protectedManagedDisks(List.of(protectedManagedDisks));
        }
        @CustomType.Setter
        public Builder protectionStage(@Nullable String protectionStage) {
            this.protectionStage = protectionStage;
            return this;
        }
        @CustomType.Setter
        public Builder recoveryAvailabilitySetId(@Nullable String recoveryAvailabilitySetId) {
            this.recoveryAvailabilitySetId = recoveryAvailabilitySetId;
            return this;
        }
        @CustomType.Setter
        public Builder recoveryAzureLogStorageAccountId(@Nullable String recoveryAzureLogStorageAccountId) {
            this.recoveryAzureLogStorageAccountId = recoveryAzureLogStorageAccountId;
            return this;
        }
        @CustomType.Setter
        public Builder recoveryAzureResourceGroupId(@Nullable String recoveryAzureResourceGroupId) {
            this.recoveryAzureResourceGroupId = recoveryAzureResourceGroupId;
            return this;
        }
        @CustomType.Setter
        public Builder recoveryAzureStorageAccount(@Nullable String recoveryAzureStorageAccount) {
            this.recoveryAzureStorageAccount = recoveryAzureStorageAccount;
            return this;
        }
        @CustomType.Setter
        public Builder recoveryAzureVMName(@Nullable String recoveryAzureVMName) {
            this.recoveryAzureVMName = recoveryAzureVMName;
            return this;
        }
        @CustomType.Setter
        public Builder recoveryAzureVMSize(@Nullable String recoveryAzureVMSize) {
            this.recoveryAzureVMSize = recoveryAzureVMSize;
            return this;
        }
        @CustomType.Setter
        public Builder replicaId(@Nullable String replicaId) {
            this.replicaId = replicaId;
            return this;
        }
        @CustomType.Setter
        public Builder resyncProgressPercentage(@Nullable Integer resyncProgressPercentage) {
            this.resyncProgressPercentage = resyncProgressPercentage;
            return this;
        }
        @CustomType.Setter
        public Builder rpoInSeconds(@Nullable Double rpoInSeconds) {
            this.rpoInSeconds = rpoInSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder selectedRecoveryAzureNetworkId(@Nullable String selectedRecoveryAzureNetworkId) {
            this.selectedRecoveryAzureNetworkId = selectedRecoveryAzureNetworkId;
            return this;
        }
        @CustomType.Setter
        public Builder selectedSourceNicId(@Nullable String selectedSourceNicId) {
            this.selectedSourceNicId = selectedSourceNicId;
            return this;
        }
        @CustomType.Setter
        public Builder selectedTfoAzureNetworkId(@Nullable String selectedTfoAzureNetworkId) {
            this.selectedTfoAzureNetworkId = selectedTfoAzureNetworkId;
            return this;
        }
        @CustomType.Setter
        public Builder sourceVmCpuCount(@Nullable Integer sourceVmCpuCount) {
            this.sourceVmCpuCount = sourceVmCpuCount;
            return this;
        }
        @CustomType.Setter
        public Builder sourceVmRamSizeInMB(@Nullable Integer sourceVmRamSizeInMB) {
            this.sourceVmRamSizeInMB = sourceVmRamSizeInMB;
            return this;
        }
        @CustomType.Setter
        public Builder targetAvailabilityZone(@Nullable String targetAvailabilityZone) {
            this.targetAvailabilityZone = targetAvailabilityZone;
            return this;
        }
        @CustomType.Setter
        public Builder targetProximityPlacementGroupId(@Nullable String targetProximityPlacementGroupId) {
            this.targetProximityPlacementGroupId = targetProximityPlacementGroupId;
            return this;
        }
        @CustomType.Setter
        public Builder targetVmId(@Nullable String targetVmId) {
            this.targetVmId = targetVmId;
            return this;
        }
        @CustomType.Setter
        public Builder uncompressedDataRateInMB(@Nullable Double uncompressedDataRateInMB) {
            this.uncompressedDataRateInMB = uncompressedDataRateInMB;
            return this;
        }
        @CustomType.Setter
        public Builder useManagedDisks(@Nullable String useManagedDisks) {
            this.useManagedDisks = useManagedDisks;
            return this;
        }
        @CustomType.Setter
        public Builder vCenterInfrastructureId(@Nullable String vCenterInfrastructureId) {
            this.vCenterInfrastructureId = vCenterInfrastructureId;
            return this;
        }
        @CustomType.Setter
        public Builder validationErrors(@Nullable List<HealthErrorResponse> validationErrors) {
            this.validationErrors = validationErrors;
            return this;
        }
        public Builder validationErrors(HealthErrorResponse... validationErrors) {
            return validationErrors(List.of(validationErrors));
        }
        @CustomType.Setter
        public Builder vhdName(@Nullable String vhdName) {
            this.vhdName = vhdName;
            return this;
        }
        @CustomType.Setter
        public Builder vmId(@Nullable String vmId) {
            this.vmId = vmId;
            return this;
        }
        @CustomType.Setter
        public Builder vmNics(@Nullable List<VMNicDetailsResponse> vmNics) {
            this.vmNics = vmNics;
            return this;
        }
        public Builder vmNics(VMNicDetailsResponse... vmNics) {
            return vmNics(List.of(vmNics));
        }
        @CustomType.Setter
        public Builder vmProtectionState(@Nullable String vmProtectionState) {
            this.vmProtectionState = vmProtectionState;
            return this;
        }
        @CustomType.Setter
        public Builder vmProtectionStateDescription(@Nullable String vmProtectionStateDescription) {
            this.vmProtectionStateDescription = vmProtectionStateDescription;
            return this;
        }
        public InMageAzureV2ReplicationDetailsResponse build() {
            final var o = new InMageAzureV2ReplicationDetailsResponse();
            o.agentExpiryDate = agentExpiryDate;
            o.agentVersion = agentVersion;
            o.azureVMDiskDetails = azureVMDiskDetails;
            o.compressedDataRateInMB = compressedDataRateInMB;
            o.datastores = datastores;
            o.discoveryType = discoveryType;
            o.diskResized = diskResized;
            o.enableRdpOnTargetOption = enableRdpOnTargetOption;
            o.infrastructureVmId = infrastructureVmId;
            o.instanceType = instanceType;
            o.ipAddress = ipAddress;
            o.isAgentUpdateRequired = isAgentUpdateRequired;
            o.isRebootAfterUpdateRequired = isRebootAfterUpdateRequired;
            o.lastHeartbeat = lastHeartbeat;
            o.lastRpoCalculatedTime = lastRpoCalculatedTime;
            o.lastUpdateReceivedTime = lastUpdateReceivedTime;
            o.licenseType = licenseType;
            o.masterTargetId = masterTargetId;
            o.multiVmGroupId = multiVmGroupId;
            o.multiVmGroupName = multiVmGroupName;
            o.multiVmSyncStatus = multiVmSyncStatus;
            o.osDiskId = osDiskId;
            o.osType = osType;
            o.osVersion = osVersion;
            o.processServerId = processServerId;
            o.processServerName = processServerName;
            o.protectedDisks = protectedDisks;
            o.protectedManagedDisks = protectedManagedDisks;
            o.protectionStage = protectionStage;
            o.recoveryAvailabilitySetId = recoveryAvailabilitySetId;
            o.recoveryAzureLogStorageAccountId = recoveryAzureLogStorageAccountId;
            o.recoveryAzureResourceGroupId = recoveryAzureResourceGroupId;
            o.recoveryAzureStorageAccount = recoveryAzureStorageAccount;
            o.recoveryAzureVMName = recoveryAzureVMName;
            o.recoveryAzureVMSize = recoveryAzureVMSize;
            o.replicaId = replicaId;
            o.resyncProgressPercentage = resyncProgressPercentage;
            o.rpoInSeconds = rpoInSeconds;
            o.selectedRecoveryAzureNetworkId = selectedRecoveryAzureNetworkId;
            o.selectedSourceNicId = selectedSourceNicId;
            o.selectedTfoAzureNetworkId = selectedTfoAzureNetworkId;
            o.sourceVmCpuCount = sourceVmCpuCount;
            o.sourceVmRamSizeInMB = sourceVmRamSizeInMB;
            o.targetAvailabilityZone = targetAvailabilityZone;
            o.targetProximityPlacementGroupId = targetProximityPlacementGroupId;
            o.targetVmId = targetVmId;
            o.uncompressedDataRateInMB = uncompressedDataRateInMB;
            o.useManagedDisks = useManagedDisks;
            o.vCenterInfrastructureId = vCenterInfrastructureId;
            o.validationErrors = validationErrors;
            o.vhdName = vhdName;
            o.vmId = vmId;
            o.vmNics = vmNics;
            o.vmProtectionState = vmProtectionState;
            o.vmProtectionStateDescription = vmProtectionStateDescription;
            return o;
        }
    }
}
