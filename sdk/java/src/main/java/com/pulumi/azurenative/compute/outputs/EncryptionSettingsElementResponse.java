// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.compute.outputs;

import com.pulumi.azurenative.compute.outputs.KeyVaultAndKeyReferenceResponse;
import com.pulumi.azurenative.compute.outputs.KeyVaultAndSecretReferenceResponse;
import com.pulumi.core.annotations.CustomType;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class EncryptionSettingsElementResponse {
    /**
     * @return Key Vault Secret Url and vault id of the disk encryption key
     * 
     */
    private @Nullable KeyVaultAndSecretReferenceResponse diskEncryptionKey;
    /**
     * @return Key Vault Key Url and vault id of the key encryption key. KeyEncryptionKey is optional and when provided is used to unwrap the disk encryption key.
     * 
     */
    private @Nullable KeyVaultAndKeyReferenceResponse keyEncryptionKey;

    private EncryptionSettingsElementResponse() {}
    /**
     * @return Key Vault Secret Url and vault id of the disk encryption key
     * 
     */
    public Optional<KeyVaultAndSecretReferenceResponse> diskEncryptionKey() {
        return Optional.ofNullable(this.diskEncryptionKey);
    }
    /**
     * @return Key Vault Key Url and vault id of the key encryption key. KeyEncryptionKey is optional and when provided is used to unwrap the disk encryption key.
     * 
     */
    public Optional<KeyVaultAndKeyReferenceResponse> keyEncryptionKey() {
        return Optional.ofNullable(this.keyEncryptionKey);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EncryptionSettingsElementResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable KeyVaultAndSecretReferenceResponse diskEncryptionKey;
        private @Nullable KeyVaultAndKeyReferenceResponse keyEncryptionKey;
        public Builder() {}
        public Builder(EncryptionSettingsElementResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.diskEncryptionKey = defaults.diskEncryptionKey;
    	      this.keyEncryptionKey = defaults.keyEncryptionKey;
        }

        @CustomType.Setter
        public Builder diskEncryptionKey(@Nullable KeyVaultAndSecretReferenceResponse diskEncryptionKey) {
            this.diskEncryptionKey = diskEncryptionKey;
            return this;
        }
        @CustomType.Setter
        public Builder keyEncryptionKey(@Nullable KeyVaultAndKeyReferenceResponse keyEncryptionKey) {
            this.keyEncryptionKey = keyEncryptionKey;
            return this;
        }
        public EncryptionSettingsElementResponse build() {
            final var o = new EncryptionSettingsElementResponse();
            o.diskEncryptionKey = diskEncryptionKey;
            o.keyEncryptionKey = keyEncryptionKey;
            return o;
        }
    }
}
