// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearningservices.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class ListWorkspaceNotebookAccessTokenResult {
    private String accessToken;
    private Integer expiresIn;
    private String hostName;
    private String notebookResourceId;
    private String publicDns;
    private String refreshToken;
    private String scope;
    private String tokenType;

    private ListWorkspaceNotebookAccessTokenResult() {}
    public String accessToken() {
        return this.accessToken;
    }
    public Integer expiresIn() {
        return this.expiresIn;
    }
    public String hostName() {
        return this.hostName;
    }
    public String notebookResourceId() {
        return this.notebookResourceId;
    }
    public String publicDns() {
        return this.publicDns;
    }
    public String refreshToken() {
        return this.refreshToken;
    }
    public String scope() {
        return this.scope;
    }
    public String tokenType() {
        return this.tokenType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ListWorkspaceNotebookAccessTokenResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accessToken;
        private Integer expiresIn;
        private String hostName;
        private String notebookResourceId;
        private String publicDns;
        private String refreshToken;
        private String scope;
        private String tokenType;
        public Builder() {}
        public Builder(ListWorkspaceNotebookAccessTokenResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessToken = defaults.accessToken;
    	      this.expiresIn = defaults.expiresIn;
    	      this.hostName = defaults.hostName;
    	      this.notebookResourceId = defaults.notebookResourceId;
    	      this.publicDns = defaults.publicDns;
    	      this.refreshToken = defaults.refreshToken;
    	      this.scope = defaults.scope;
    	      this.tokenType = defaults.tokenType;
        }

        @CustomType.Setter
        public Builder accessToken(String accessToken) {
            this.accessToken = Objects.requireNonNull(accessToken);
            return this;
        }
        @CustomType.Setter
        public Builder expiresIn(Integer expiresIn) {
            this.expiresIn = Objects.requireNonNull(expiresIn);
            return this;
        }
        @CustomType.Setter
        public Builder hostName(String hostName) {
            this.hostName = Objects.requireNonNull(hostName);
            return this;
        }
        @CustomType.Setter
        public Builder notebookResourceId(String notebookResourceId) {
            this.notebookResourceId = Objects.requireNonNull(notebookResourceId);
            return this;
        }
        @CustomType.Setter
        public Builder publicDns(String publicDns) {
            this.publicDns = Objects.requireNonNull(publicDns);
            return this;
        }
        @CustomType.Setter
        public Builder refreshToken(String refreshToken) {
            this.refreshToken = Objects.requireNonNull(refreshToken);
            return this;
        }
        @CustomType.Setter
        public Builder scope(String scope) {
            this.scope = Objects.requireNonNull(scope);
            return this;
        }
        @CustomType.Setter
        public Builder tokenType(String tokenType) {
            this.tokenType = Objects.requireNonNull(tokenType);
            return this;
        }
        public ListWorkspaceNotebookAccessTokenResult build() {
            final var o = new ListWorkspaceNotebookAccessTokenResult();
            o.accessToken = accessToken;
            o.expiresIn = expiresIn;
            o.hostName = hostName;
            o.notebookResourceId = notebookResourceId;
            o.publicDns = publicDns;
            o.refreshToken = refreshToken;
            o.scope = scope;
            o.tokenType = tokenType;
            return o;
        }
    }
}
