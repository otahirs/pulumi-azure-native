// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.compute.outputs;

import com.pulumi.azurenative.compute.outputs.DisallowedResponse;
import com.pulumi.azurenative.compute.outputs.GalleryImageFeatureResponse;
import com.pulumi.azurenative.compute.outputs.GalleryImageIdentifierResponse;
import com.pulumi.azurenative.compute.outputs.ImagePurchasePlanResponse;
import com.pulumi.azurenative.compute.outputs.RecommendedMachineConfigurationResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetGalleryImageResult {
    /**
     * @return The description of this gallery image definition resource. This property is updatable.
     * 
     */
    private @Nullable String description;
    /**
     * @return Describes the disallowed disk types.
     * 
     */
    private @Nullable DisallowedResponse disallowed;
    /**
     * @return The end of life date of the gallery image definition. This property can be used for decommissioning purposes. This property is updatable.
     * 
     */
    private @Nullable String endOfLifeDate;
    /**
     * @return The Eula agreement for the gallery image definition.
     * 
     */
    private @Nullable String eula;
    /**
     * @return A list of gallery image features.
     * 
     */
    private @Nullable List<GalleryImageFeatureResponse> features;
    /**
     * @return The hypervisor generation of the Virtual Machine. Applicable to OS disks only.
     * 
     */
    private @Nullable String hyperVGeneration;
    /**
     * @return Resource Id
     * 
     */
    private String id;
    /**
     * @return This is the gallery image definition identifier.
     * 
     */
    private GalleryImageIdentifierResponse identifier;
    /**
     * @return Resource location
     * 
     */
    private String location;
    /**
     * @return Resource name
     * 
     */
    private String name;
    /**
     * @return This property allows the user to specify whether the virtual machines created under this image are &#39;Generalized&#39; or &#39;Specialized&#39;.
     * 
     */
    private String osState;
    /**
     * @return This property allows you to specify the type of the OS that is included in the disk when creating a VM from a managed image. &lt;br&gt;&lt;br&gt; Possible values are: &lt;br&gt;&lt;br&gt; **Windows** &lt;br&gt;&lt;br&gt; **Linux**
     * 
     */
    private String osType;
    /**
     * @return The privacy statement uri.
     * 
     */
    private @Nullable String privacyStatementUri;
    /**
     * @return The provisioning state, which only appears in the response.
     * 
     */
    private String provisioningState;
    /**
     * @return Describes the gallery image definition purchase plan. This is used by marketplace images.
     * 
     */
    private @Nullable ImagePurchasePlanResponse purchasePlan;
    /**
     * @return The properties describe the recommended machine configuration for this Image Definition. These properties are updatable.
     * 
     */
    private @Nullable RecommendedMachineConfigurationResponse recommended;
    /**
     * @return The release note uri.
     * 
     */
    private @Nullable String releaseNoteUri;
    /**
     * @return Resource tags
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return Resource type
     * 
     */
    private String type;

    private GetGalleryImageResult() {}
    /**
     * @return The description of this gallery image definition resource. This property is updatable.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return Describes the disallowed disk types.
     * 
     */
    public Optional<DisallowedResponse> disallowed() {
        return Optional.ofNullable(this.disallowed);
    }
    /**
     * @return The end of life date of the gallery image definition. This property can be used for decommissioning purposes. This property is updatable.
     * 
     */
    public Optional<String> endOfLifeDate() {
        return Optional.ofNullable(this.endOfLifeDate);
    }
    /**
     * @return The Eula agreement for the gallery image definition.
     * 
     */
    public Optional<String> eula() {
        return Optional.ofNullable(this.eula);
    }
    /**
     * @return A list of gallery image features.
     * 
     */
    public List<GalleryImageFeatureResponse> features() {
        return this.features == null ? List.of() : this.features;
    }
    /**
     * @return The hypervisor generation of the Virtual Machine. Applicable to OS disks only.
     * 
     */
    public Optional<String> hyperVGeneration() {
        return Optional.ofNullable(this.hyperVGeneration);
    }
    /**
     * @return Resource Id
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return This is the gallery image definition identifier.
     * 
     */
    public GalleryImageIdentifierResponse identifier() {
        return this.identifier;
    }
    /**
     * @return Resource location
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return Resource name
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return This property allows the user to specify whether the virtual machines created under this image are &#39;Generalized&#39; or &#39;Specialized&#39;.
     * 
     */
    public String osState() {
        return this.osState;
    }
    /**
     * @return This property allows you to specify the type of the OS that is included in the disk when creating a VM from a managed image. &lt;br&gt;&lt;br&gt; Possible values are: &lt;br&gt;&lt;br&gt; **Windows** &lt;br&gt;&lt;br&gt; **Linux**
     * 
     */
    public String osType() {
        return this.osType;
    }
    /**
     * @return The privacy statement uri.
     * 
     */
    public Optional<String> privacyStatementUri() {
        return Optional.ofNullable(this.privacyStatementUri);
    }
    /**
     * @return The provisioning state, which only appears in the response.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * @return Describes the gallery image definition purchase plan. This is used by marketplace images.
     * 
     */
    public Optional<ImagePurchasePlanResponse> purchasePlan() {
        return Optional.ofNullable(this.purchasePlan);
    }
    /**
     * @return The properties describe the recommended machine configuration for this Image Definition. These properties are updatable.
     * 
     */
    public Optional<RecommendedMachineConfigurationResponse> recommended() {
        return Optional.ofNullable(this.recommended);
    }
    /**
     * @return The release note uri.
     * 
     */
    public Optional<String> releaseNoteUri() {
        return Optional.ofNullable(this.releaseNoteUri);
    }
    /**
     * @return Resource tags
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return Resource type
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGalleryImageResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String description;
        private @Nullable DisallowedResponse disallowed;
        private @Nullable String endOfLifeDate;
        private @Nullable String eula;
        private @Nullable List<GalleryImageFeatureResponse> features;
        private @Nullable String hyperVGeneration;
        private String id;
        private GalleryImageIdentifierResponse identifier;
        private String location;
        private String name;
        private String osState;
        private String osType;
        private @Nullable String privacyStatementUri;
        private String provisioningState;
        private @Nullable ImagePurchasePlanResponse purchasePlan;
        private @Nullable RecommendedMachineConfigurationResponse recommended;
        private @Nullable String releaseNoteUri;
        private @Nullable Map<String,String> tags;
        private String type;
        public Builder() {}
        public Builder(GetGalleryImageResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.disallowed = defaults.disallowed;
    	      this.endOfLifeDate = defaults.endOfLifeDate;
    	      this.eula = defaults.eula;
    	      this.features = defaults.features;
    	      this.hyperVGeneration = defaults.hyperVGeneration;
    	      this.id = defaults.id;
    	      this.identifier = defaults.identifier;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.osState = defaults.osState;
    	      this.osType = defaults.osType;
    	      this.privacyStatementUri = defaults.privacyStatementUri;
    	      this.provisioningState = defaults.provisioningState;
    	      this.purchasePlan = defaults.purchasePlan;
    	      this.recommended = defaults.recommended;
    	      this.releaseNoteUri = defaults.releaseNoteUri;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder disallowed(@Nullable DisallowedResponse disallowed) {
            this.disallowed = disallowed;
            return this;
        }
        @CustomType.Setter
        public Builder endOfLifeDate(@Nullable String endOfLifeDate) {
            this.endOfLifeDate = endOfLifeDate;
            return this;
        }
        @CustomType.Setter
        public Builder eula(@Nullable String eula) {
            this.eula = eula;
            return this;
        }
        @CustomType.Setter
        public Builder features(@Nullable List<GalleryImageFeatureResponse> features) {
            this.features = features;
            return this;
        }
        public Builder features(GalleryImageFeatureResponse... features) {
            return features(List.of(features));
        }
        @CustomType.Setter
        public Builder hyperVGeneration(@Nullable String hyperVGeneration) {
            this.hyperVGeneration = hyperVGeneration;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder identifier(GalleryImageIdentifierResponse identifier) {
            this.identifier = Objects.requireNonNull(identifier);
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder osState(String osState) {
            this.osState = Objects.requireNonNull(osState);
            return this;
        }
        @CustomType.Setter
        public Builder osType(String osType) {
            this.osType = Objects.requireNonNull(osType);
            return this;
        }
        @CustomType.Setter
        public Builder privacyStatementUri(@Nullable String privacyStatementUri) {
            this.privacyStatementUri = privacyStatementUri;
            return this;
        }
        @CustomType.Setter
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        @CustomType.Setter
        public Builder purchasePlan(@Nullable ImagePurchasePlanResponse purchasePlan) {
            this.purchasePlan = purchasePlan;
            return this;
        }
        @CustomType.Setter
        public Builder recommended(@Nullable RecommendedMachineConfigurationResponse recommended) {
            this.recommended = recommended;
            return this;
        }
        @CustomType.Setter
        public Builder releaseNoteUri(@Nullable String releaseNoteUri) {
            this.releaseNoteUri = releaseNoteUri;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetGalleryImageResult build() {
            final var o = new GetGalleryImageResult();
            o.description = description;
            o.disallowed = disallowed;
            o.endOfLifeDate = endOfLifeDate;
            o.eula = eula;
            o.features = features;
            o.hyperVGeneration = hyperVGeneration;
            o.id = id;
            o.identifier = identifier;
            o.location = location;
            o.name = name;
            o.osState = osState;
            o.osType = osType;
            o.privacyStatementUri = privacyStatementUri;
            o.provisioningState = provisioningState;
            o.purchasePlan = purchasePlan;
            o.recommended = recommended;
            o.releaseNoteUri = releaseNoteUri;
            o.tags = tags;
            o.type = type;
            return o;
        }
    }
}
