// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.outputs;

import com.pulumi.azurenative.network.outputs.ApplicationGatewayIPConfigurationResponse;
import com.pulumi.azurenative.network.outputs.DelegationResponse;
import com.pulumi.azurenative.network.outputs.IPConfigurationProfileResponse;
import com.pulumi.azurenative.network.outputs.IPConfigurationResponse;
import com.pulumi.azurenative.network.outputs.NetworkSecurityGroupResponse;
import com.pulumi.azurenative.network.outputs.PrivateEndpointResponse;
import com.pulumi.azurenative.network.outputs.ResourceNavigationLinkResponse;
import com.pulumi.azurenative.network.outputs.RouteTableResponse;
import com.pulumi.azurenative.network.outputs.ServiceAssociationLinkResponse;
import com.pulumi.azurenative.network.outputs.ServiceEndpointPolicyResponse;
import com.pulumi.azurenative.network.outputs.ServiceEndpointPropertiesFormatResponse;
import com.pulumi.azurenative.network.outputs.SubResourceResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SubnetResponse {
    /**
     * @return The address prefix for the subnet.
     * 
     */
    private @Nullable String addressPrefix;
    /**
     * @return List of address prefixes for the subnet.
     * 
     */
    private @Nullable List<String> addressPrefixes;
    /**
     * @return Application gateway IP configurations of virtual network resource.
     * 
     */
    private @Nullable List<ApplicationGatewayIPConfigurationResponse> applicationGatewayIpConfigurations;
    /**
     * @return An array of references to the delegations on the subnet.
     * 
     */
    private @Nullable List<DelegationResponse> delegations;
    /**
     * @return A unique read-only string that changes whenever the resource is updated.
     * 
     */
    private String etag;
    /**
     * @return Resource ID.
     * 
     */
    private @Nullable String id;
    /**
     * @return Array of IpAllocation which reference this subnet.
     * 
     */
    private @Nullable List<SubResourceResponse> ipAllocations;
    /**
     * @return Array of IP configuration profiles which reference this subnet.
     * 
     */
    private List<IPConfigurationProfileResponse> ipConfigurationProfiles;
    /**
     * @return An array of references to the network interface IP configurations using subnet.
     * 
     */
    private List<IPConfigurationResponse> ipConfigurations;
    /**
     * @return The name of the resource that is unique within a resource group. This name can be used to access the resource.
     * 
     */
    private @Nullable String name;
    /**
     * @return Nat gateway associated with this subnet.
     * 
     */
    private @Nullable SubResourceResponse natGateway;
    /**
     * @return The reference to the NetworkSecurityGroup resource.
     * 
     */
    private @Nullable NetworkSecurityGroupResponse networkSecurityGroup;
    /**
     * @return Enable or Disable apply network policies on private end point in the subnet.
     * 
     */
    private @Nullable String privateEndpointNetworkPolicies;
    /**
     * @return An array of references to private endpoints.
     * 
     */
    private List<PrivateEndpointResponse> privateEndpoints;
    /**
     * @return Enable or Disable apply network policies on private link service in the subnet.
     * 
     */
    private @Nullable String privateLinkServiceNetworkPolicies;
    /**
     * @return The provisioning state of the subnet resource.
     * 
     */
    private String provisioningState;
    /**
     * @return A read-only string identifying the intention of use for this subnet based on delegations and other user-defined properties.
     * 
     */
    private String purpose;
    /**
     * @return An array of references to the external resources using subnet.
     * 
     */
    private List<ResourceNavigationLinkResponse> resourceNavigationLinks;
    /**
     * @return The reference to the RouteTable resource.
     * 
     */
    private @Nullable RouteTableResponse routeTable;
    /**
     * @return An array of references to services injecting into this subnet.
     * 
     */
    private List<ServiceAssociationLinkResponse> serviceAssociationLinks;
    /**
     * @return An array of service endpoint policies.
     * 
     */
    private @Nullable List<ServiceEndpointPolicyResponse> serviceEndpointPolicies;
    /**
     * @return An array of service endpoints.
     * 
     */
    private @Nullable List<ServiceEndpointPropertiesFormatResponse> serviceEndpoints;
    /**
     * @return Resource type.
     * 
     */
    private @Nullable String type;

    private SubnetResponse() {}
    /**
     * @return The address prefix for the subnet.
     * 
     */
    public Optional<String> addressPrefix() {
        return Optional.ofNullable(this.addressPrefix);
    }
    /**
     * @return List of address prefixes for the subnet.
     * 
     */
    public List<String> addressPrefixes() {
        return this.addressPrefixes == null ? List.of() : this.addressPrefixes;
    }
    /**
     * @return Application gateway IP configurations of virtual network resource.
     * 
     */
    public List<ApplicationGatewayIPConfigurationResponse> applicationGatewayIpConfigurations() {
        return this.applicationGatewayIpConfigurations == null ? List.of() : this.applicationGatewayIpConfigurations;
    }
    /**
     * @return An array of references to the delegations on the subnet.
     * 
     */
    public List<DelegationResponse> delegations() {
        return this.delegations == null ? List.of() : this.delegations;
    }
    /**
     * @return A unique read-only string that changes whenever the resource is updated.
     * 
     */
    public String etag() {
        return this.etag;
    }
    /**
     * @return Resource ID.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Array of IpAllocation which reference this subnet.
     * 
     */
    public List<SubResourceResponse> ipAllocations() {
        return this.ipAllocations == null ? List.of() : this.ipAllocations;
    }
    /**
     * @return Array of IP configuration profiles which reference this subnet.
     * 
     */
    public List<IPConfigurationProfileResponse> ipConfigurationProfiles() {
        return this.ipConfigurationProfiles;
    }
    /**
     * @return An array of references to the network interface IP configurations using subnet.
     * 
     */
    public List<IPConfigurationResponse> ipConfigurations() {
        return this.ipConfigurations;
    }
    /**
     * @return The name of the resource that is unique within a resource group. This name can be used to access the resource.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return Nat gateway associated with this subnet.
     * 
     */
    public Optional<SubResourceResponse> natGateway() {
        return Optional.ofNullable(this.natGateway);
    }
    /**
     * @return The reference to the NetworkSecurityGroup resource.
     * 
     */
    public Optional<NetworkSecurityGroupResponse> networkSecurityGroup() {
        return Optional.ofNullable(this.networkSecurityGroup);
    }
    /**
     * @return Enable or Disable apply network policies on private end point in the subnet.
     * 
     */
    public Optional<String> privateEndpointNetworkPolicies() {
        return Optional.ofNullable(this.privateEndpointNetworkPolicies);
    }
    /**
     * @return An array of references to private endpoints.
     * 
     */
    public List<PrivateEndpointResponse> privateEndpoints() {
        return this.privateEndpoints;
    }
    /**
     * @return Enable or Disable apply network policies on private link service in the subnet.
     * 
     */
    public Optional<String> privateLinkServiceNetworkPolicies() {
        return Optional.ofNullable(this.privateLinkServiceNetworkPolicies);
    }
    /**
     * @return The provisioning state of the subnet resource.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * @return A read-only string identifying the intention of use for this subnet based on delegations and other user-defined properties.
     * 
     */
    public String purpose() {
        return this.purpose;
    }
    /**
     * @return An array of references to the external resources using subnet.
     * 
     */
    public List<ResourceNavigationLinkResponse> resourceNavigationLinks() {
        return this.resourceNavigationLinks;
    }
    /**
     * @return The reference to the RouteTable resource.
     * 
     */
    public Optional<RouteTableResponse> routeTable() {
        return Optional.ofNullable(this.routeTable);
    }
    /**
     * @return An array of references to services injecting into this subnet.
     * 
     */
    public List<ServiceAssociationLinkResponse> serviceAssociationLinks() {
        return this.serviceAssociationLinks;
    }
    /**
     * @return An array of service endpoint policies.
     * 
     */
    public List<ServiceEndpointPolicyResponse> serviceEndpointPolicies() {
        return this.serviceEndpointPolicies == null ? List.of() : this.serviceEndpointPolicies;
    }
    /**
     * @return An array of service endpoints.
     * 
     */
    public List<ServiceEndpointPropertiesFormatResponse> serviceEndpoints() {
        return this.serviceEndpoints == null ? List.of() : this.serviceEndpoints;
    }
    /**
     * @return Resource type.
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SubnetResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String addressPrefix;
        private @Nullable List<String> addressPrefixes;
        private @Nullable List<ApplicationGatewayIPConfigurationResponse> applicationGatewayIpConfigurations;
        private @Nullable List<DelegationResponse> delegations;
        private String etag;
        private @Nullable String id;
        private @Nullable List<SubResourceResponse> ipAllocations;
        private List<IPConfigurationProfileResponse> ipConfigurationProfiles;
        private List<IPConfigurationResponse> ipConfigurations;
        private @Nullable String name;
        private @Nullable SubResourceResponse natGateway;
        private @Nullable NetworkSecurityGroupResponse networkSecurityGroup;
        private @Nullable String privateEndpointNetworkPolicies;
        private List<PrivateEndpointResponse> privateEndpoints;
        private @Nullable String privateLinkServiceNetworkPolicies;
        private String provisioningState;
        private String purpose;
        private List<ResourceNavigationLinkResponse> resourceNavigationLinks;
        private @Nullable RouteTableResponse routeTable;
        private List<ServiceAssociationLinkResponse> serviceAssociationLinks;
        private @Nullable List<ServiceEndpointPolicyResponse> serviceEndpointPolicies;
        private @Nullable List<ServiceEndpointPropertiesFormatResponse> serviceEndpoints;
        private @Nullable String type;
        public Builder() {}
        public Builder(SubnetResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.addressPrefix = defaults.addressPrefix;
    	      this.addressPrefixes = defaults.addressPrefixes;
    	      this.applicationGatewayIpConfigurations = defaults.applicationGatewayIpConfigurations;
    	      this.delegations = defaults.delegations;
    	      this.etag = defaults.etag;
    	      this.id = defaults.id;
    	      this.ipAllocations = defaults.ipAllocations;
    	      this.ipConfigurationProfiles = defaults.ipConfigurationProfiles;
    	      this.ipConfigurations = defaults.ipConfigurations;
    	      this.name = defaults.name;
    	      this.natGateway = defaults.natGateway;
    	      this.networkSecurityGroup = defaults.networkSecurityGroup;
    	      this.privateEndpointNetworkPolicies = defaults.privateEndpointNetworkPolicies;
    	      this.privateEndpoints = defaults.privateEndpoints;
    	      this.privateLinkServiceNetworkPolicies = defaults.privateLinkServiceNetworkPolicies;
    	      this.provisioningState = defaults.provisioningState;
    	      this.purpose = defaults.purpose;
    	      this.resourceNavigationLinks = defaults.resourceNavigationLinks;
    	      this.routeTable = defaults.routeTable;
    	      this.serviceAssociationLinks = defaults.serviceAssociationLinks;
    	      this.serviceEndpointPolicies = defaults.serviceEndpointPolicies;
    	      this.serviceEndpoints = defaults.serviceEndpoints;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder addressPrefix(@Nullable String addressPrefix) {
            this.addressPrefix = addressPrefix;
            return this;
        }
        @CustomType.Setter
        public Builder addressPrefixes(@Nullable List<String> addressPrefixes) {
            this.addressPrefixes = addressPrefixes;
            return this;
        }
        public Builder addressPrefixes(String... addressPrefixes) {
            return addressPrefixes(List.of(addressPrefixes));
        }
        @CustomType.Setter
        public Builder applicationGatewayIpConfigurations(@Nullable List<ApplicationGatewayIPConfigurationResponse> applicationGatewayIpConfigurations) {
            this.applicationGatewayIpConfigurations = applicationGatewayIpConfigurations;
            return this;
        }
        public Builder applicationGatewayIpConfigurations(ApplicationGatewayIPConfigurationResponse... applicationGatewayIpConfigurations) {
            return applicationGatewayIpConfigurations(List.of(applicationGatewayIpConfigurations));
        }
        @CustomType.Setter
        public Builder delegations(@Nullable List<DelegationResponse> delegations) {
            this.delegations = delegations;
            return this;
        }
        public Builder delegations(DelegationResponse... delegations) {
            return delegations(List.of(delegations));
        }
        @CustomType.Setter
        public Builder etag(String etag) {
            this.etag = Objects.requireNonNull(etag);
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ipAllocations(@Nullable List<SubResourceResponse> ipAllocations) {
            this.ipAllocations = ipAllocations;
            return this;
        }
        public Builder ipAllocations(SubResourceResponse... ipAllocations) {
            return ipAllocations(List.of(ipAllocations));
        }
        @CustomType.Setter
        public Builder ipConfigurationProfiles(List<IPConfigurationProfileResponse> ipConfigurationProfiles) {
            this.ipConfigurationProfiles = Objects.requireNonNull(ipConfigurationProfiles);
            return this;
        }
        public Builder ipConfigurationProfiles(IPConfigurationProfileResponse... ipConfigurationProfiles) {
            return ipConfigurationProfiles(List.of(ipConfigurationProfiles));
        }
        @CustomType.Setter
        public Builder ipConfigurations(List<IPConfigurationResponse> ipConfigurations) {
            this.ipConfigurations = Objects.requireNonNull(ipConfigurations);
            return this;
        }
        public Builder ipConfigurations(IPConfigurationResponse... ipConfigurations) {
            return ipConfigurations(List.of(ipConfigurations));
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder natGateway(@Nullable SubResourceResponse natGateway) {
            this.natGateway = natGateway;
            return this;
        }
        @CustomType.Setter
        public Builder networkSecurityGroup(@Nullable NetworkSecurityGroupResponse networkSecurityGroup) {
            this.networkSecurityGroup = networkSecurityGroup;
            return this;
        }
        @CustomType.Setter
        public Builder privateEndpointNetworkPolicies(@Nullable String privateEndpointNetworkPolicies) {
            this.privateEndpointNetworkPolicies = privateEndpointNetworkPolicies;
            return this;
        }
        @CustomType.Setter
        public Builder privateEndpoints(List<PrivateEndpointResponse> privateEndpoints) {
            this.privateEndpoints = Objects.requireNonNull(privateEndpoints);
            return this;
        }
        public Builder privateEndpoints(PrivateEndpointResponse... privateEndpoints) {
            return privateEndpoints(List.of(privateEndpoints));
        }
        @CustomType.Setter
        public Builder privateLinkServiceNetworkPolicies(@Nullable String privateLinkServiceNetworkPolicies) {
            this.privateLinkServiceNetworkPolicies = privateLinkServiceNetworkPolicies;
            return this;
        }
        @CustomType.Setter
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        @CustomType.Setter
        public Builder purpose(String purpose) {
            this.purpose = Objects.requireNonNull(purpose);
            return this;
        }
        @CustomType.Setter
        public Builder resourceNavigationLinks(List<ResourceNavigationLinkResponse> resourceNavigationLinks) {
            this.resourceNavigationLinks = Objects.requireNonNull(resourceNavigationLinks);
            return this;
        }
        public Builder resourceNavigationLinks(ResourceNavigationLinkResponse... resourceNavigationLinks) {
            return resourceNavigationLinks(List.of(resourceNavigationLinks));
        }
        @CustomType.Setter
        public Builder routeTable(@Nullable RouteTableResponse routeTable) {
            this.routeTable = routeTable;
            return this;
        }
        @CustomType.Setter
        public Builder serviceAssociationLinks(List<ServiceAssociationLinkResponse> serviceAssociationLinks) {
            this.serviceAssociationLinks = Objects.requireNonNull(serviceAssociationLinks);
            return this;
        }
        public Builder serviceAssociationLinks(ServiceAssociationLinkResponse... serviceAssociationLinks) {
            return serviceAssociationLinks(List.of(serviceAssociationLinks));
        }
        @CustomType.Setter
        public Builder serviceEndpointPolicies(@Nullable List<ServiceEndpointPolicyResponse> serviceEndpointPolicies) {
            this.serviceEndpointPolicies = serviceEndpointPolicies;
            return this;
        }
        public Builder serviceEndpointPolicies(ServiceEndpointPolicyResponse... serviceEndpointPolicies) {
            return serviceEndpointPolicies(List.of(serviceEndpointPolicies));
        }
        @CustomType.Setter
        public Builder serviceEndpoints(@Nullable List<ServiceEndpointPropertiesFormatResponse> serviceEndpoints) {
            this.serviceEndpoints = serviceEndpoints;
            return this;
        }
        public Builder serviceEndpoints(ServiceEndpointPropertiesFormatResponse... serviceEndpoints) {
            return serviceEndpoints(List.of(serviceEndpoints));
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {
            this.type = type;
            return this;
        }
        public SubnetResponse build() {
            final var o = new SubnetResponse();
            o.addressPrefix = addressPrefix;
            o.addressPrefixes = addressPrefixes;
            o.applicationGatewayIpConfigurations = applicationGatewayIpConfigurations;
            o.delegations = delegations;
            o.etag = etag;
            o.id = id;
            o.ipAllocations = ipAllocations;
            o.ipConfigurationProfiles = ipConfigurationProfiles;
            o.ipConfigurations = ipConfigurations;
            o.name = name;
            o.natGateway = natGateway;
            o.networkSecurityGroup = networkSecurityGroup;
            o.privateEndpointNetworkPolicies = privateEndpointNetworkPolicies;
            o.privateEndpoints = privateEndpoints;
            o.privateLinkServiceNetworkPolicies = privateLinkServiceNetworkPolicies;
            o.provisioningState = provisioningState;
            o.purpose = purpose;
            o.resourceNavigationLinks = resourceNavigationLinks;
            o.routeTable = routeTable;
            o.serviceAssociationLinks = serviceAssociationLinks;
            o.serviceEndpointPolicies = serviceEndpointPolicies;
            o.serviceEndpoints = serviceEndpoints;
            o.type = type;
            return o;
        }
    }
}
