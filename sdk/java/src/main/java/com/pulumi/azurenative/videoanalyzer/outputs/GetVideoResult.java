// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.videoanalyzer.outputs;

import com.pulumi.azurenative.videoanalyzer.outputs.SystemDataResponse;
import com.pulumi.azurenative.videoanalyzer.outputs.VideoFlagsResponse;
import com.pulumi.azurenative.videoanalyzer.outputs.VideoMediaInfoResponse;
import com.pulumi.azurenative.videoanalyzer.outputs.VideoStreamingResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetVideoResult {
    /**
     * @return Optional video description provided by the user. Value can be up to 2048 characters long.
     * 
     */
    private @Nullable String description;
    /**
     * @return Video flags contain information about the available video actions and its dynamic properties based on the current video state.
     * 
     */
    private VideoFlagsResponse flags;
    /**
     * @return Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    private String id;
    /**
     * @return Contains information about the video and audio content.
     * 
     */
    private VideoMediaInfoResponse mediaInfo;
    /**
     * @return The name of the resource
     * 
     */
    private String name;
    /**
     * @return Video streaming holds information about video streaming URLs.
     * 
     */
    private VideoStreamingResponse streaming;
    /**
     * @return The system metadata relating to this resource.
     * 
     */
    private SystemDataResponse systemData;
    /**
     * @return Optional video title provided by the user. Value can be up to 256 characters long.
     * 
     */
    private @Nullable String title;
    /**
     * @return The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    private String type;

    private GetVideoResult() {}
    /**
     * @return Optional video description provided by the user. Value can be up to 2048 characters long.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return Video flags contain information about the available video actions and its dynamic properties based on the current video state.
     * 
     */
    public VideoFlagsResponse flags() {
        return this.flags;
    }
    /**
     * @return Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Contains information about the video and audio content.
     * 
     */
    public VideoMediaInfoResponse mediaInfo() {
        return this.mediaInfo;
    }
    /**
     * @return The name of the resource
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Video streaming holds information about video streaming URLs.
     * 
     */
    public VideoStreamingResponse streaming() {
        return this.streaming;
    }
    /**
     * @return The system metadata relating to this resource.
     * 
     */
    public SystemDataResponse systemData() {
        return this.systemData;
    }
    /**
     * @return Optional video title provided by the user. Value can be up to 256 characters long.
     * 
     */
    public Optional<String> title() {
        return Optional.ofNullable(this.title);
    }
    /**
     * @return The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVideoResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String description;
        private VideoFlagsResponse flags;
        private String id;
        private VideoMediaInfoResponse mediaInfo;
        private String name;
        private VideoStreamingResponse streaming;
        private SystemDataResponse systemData;
        private @Nullable String title;
        private String type;
        public Builder() {}
        public Builder(GetVideoResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.flags = defaults.flags;
    	      this.id = defaults.id;
    	      this.mediaInfo = defaults.mediaInfo;
    	      this.name = defaults.name;
    	      this.streaming = defaults.streaming;
    	      this.systemData = defaults.systemData;
    	      this.title = defaults.title;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder flags(VideoFlagsResponse flags) {
            this.flags = Objects.requireNonNull(flags);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder mediaInfo(VideoMediaInfoResponse mediaInfo) {
            this.mediaInfo = Objects.requireNonNull(mediaInfo);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder streaming(VideoStreamingResponse streaming) {
            this.streaming = Objects.requireNonNull(streaming);
            return this;
        }
        @CustomType.Setter
        public Builder systemData(SystemDataResponse systemData) {
            this.systemData = Objects.requireNonNull(systemData);
            return this;
        }
        @CustomType.Setter
        public Builder title(@Nullable String title) {
            this.title = title;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetVideoResult build() {
            final var o = new GetVideoResult();
            o.description = description;
            o.flags = flags;
            o.id = id;
            o.mediaInfo = mediaInfo;
            o.name = name;
            o.streaming = streaming;
            o.systemData = systemData;
            o.title = title;
            o.type = type;
            return o;
        }
    }
}
