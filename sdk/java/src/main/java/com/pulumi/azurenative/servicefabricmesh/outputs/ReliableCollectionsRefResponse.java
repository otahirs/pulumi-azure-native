// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.servicefabricmesh.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ReliableCollectionsRefResponse {
    /**
     * @return False (the default) if ReliableCollections state is persisted to disk as usual. True if you do not want to persist state, in which case replication is still enabled and you can use ReliableCollections as distributed cache.
     * 
     */
    private @Nullable Boolean doNotPersistState;
    /**
     * @return Name of ReliableCollection resource. Right now it&#39;s not used and you can use any string.
     * 
     */
    private String name;

    private ReliableCollectionsRefResponse() {}
    /**
     * @return False (the default) if ReliableCollections state is persisted to disk as usual. True if you do not want to persist state, in which case replication is still enabled and you can use ReliableCollections as distributed cache.
     * 
     */
    public Optional<Boolean> doNotPersistState() {
        return Optional.ofNullable(this.doNotPersistState);
    }
    /**
     * @return Name of ReliableCollection resource. Right now it&#39;s not used and you can use any string.
     * 
     */
    public String name() {
        return this.name;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ReliableCollectionsRefResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean doNotPersistState;
        private String name;
        public Builder() {}
        public Builder(ReliableCollectionsRefResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.doNotPersistState = defaults.doNotPersistState;
    	      this.name = defaults.name;
        }

        @CustomType.Setter
        public Builder doNotPersistState(@Nullable Boolean doNotPersistState) {
            this.doNotPersistState = doNotPersistState;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public ReliableCollectionsRefResponse build() {
            final var o = new ReliableCollectionsRefResponse();
            o.doNotPersistState = doNotPersistState;
            o.name = name;
            return o;
        }
    }
}
