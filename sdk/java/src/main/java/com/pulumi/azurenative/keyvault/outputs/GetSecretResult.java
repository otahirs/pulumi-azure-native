// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.keyvault.outputs;

import com.pulumi.azurenative.keyvault.outputs.SecretPropertiesResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetSecretResult {
    /**
     * @return Fully qualified identifier of the key vault resource.
     * 
     */
    private String id;
    /**
     * @return Azure location of the key vault resource.
     * 
     */
    private String location;
    /**
     * @return Name of the key vault resource.
     * 
     */
    private String name;
    /**
     * @return Properties of the secret
     * 
     */
    private SecretPropertiesResponse properties;
    /**
     * @return Tags assigned to the key vault resource.
     * 
     */
    private Map<String,String> tags;
    /**
     * @return Resource type of the key vault resource.
     * 
     */
    private String type;

    private GetSecretResult() {}
    /**
     * @return Fully qualified identifier of the key vault resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Azure location of the key vault resource.
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return Name of the key vault resource.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Properties of the secret
     * 
     */
    public SecretPropertiesResponse properties() {
        return this.properties;
    }
    /**
     * @return Tags assigned to the key vault resource.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }
    /**
     * @return Resource type of the key vault resource.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSecretResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private String location;
        private String name;
        private SecretPropertiesResponse properties;
        private Map<String,String> tags;
        private String type;
        public Builder() {}
        public Builder(GetSecretResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.properties = defaults.properties;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder properties(SecretPropertiesResponse properties) {
            this.properties = Objects.requireNonNull(properties);
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetSecretResult build() {
            final var o = new GetSecretResult();
            o.id = id;
            o.location = location;
            o.name = name;
            o.properties = properties;
            o.tags = tags;
            o.type = type;
            return o;
        }
    }
}
