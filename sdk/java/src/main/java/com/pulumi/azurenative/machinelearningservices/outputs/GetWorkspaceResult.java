// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearningservices.outputs;

import com.pulumi.azurenative.machinelearningservices.outputs.EncryptionPropertyResponse;
import com.pulumi.azurenative.machinelearningservices.outputs.IdentityResponse;
import com.pulumi.azurenative.machinelearningservices.outputs.NotebookResourceInfoResponse;
import com.pulumi.azurenative.machinelearningservices.outputs.PrivateEndpointConnectionResponse;
import com.pulumi.azurenative.machinelearningservices.outputs.ServiceManagedResourcesSettingsResponse;
import com.pulumi.azurenative.machinelearningservices.outputs.SharedPrivateLinkResourceResponse;
import com.pulumi.azurenative.machinelearningservices.outputs.SkuResponse;
import com.pulumi.azurenative.machinelearningservices.outputs.SystemDataResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetWorkspaceResult {
    /**
     * @return The flag to indicate whether to allow public access when behind VNet.
     * 
     */
    private @Nullable Boolean allowPublicAccessWhenBehindVnet;
    /**
     * @return ARM id of the application insights associated with this workspace. This cannot be changed once the workspace has been created
     * 
     */
    private @Nullable String applicationInsights;
    /**
     * @return ARM id of the container registry associated with this workspace. This cannot be changed once the workspace has been created
     * 
     */
    private @Nullable String containerRegistry;
    /**
     * @return The description of this workspace.
     * 
     */
    private @Nullable String description;
    /**
     * @return Url for the discovery service to identify regional endpoints for machine learning experimentation services
     * 
     */
    private @Nullable String discoveryUrl;
    /**
     * @return The encryption settings of Azure ML workspace.
     * 
     */
    private @Nullable EncryptionPropertyResponse encryption;
    /**
     * @return The friendly name for this workspace. This name in mutable
     * 
     */
    private @Nullable String friendlyName;
    /**
     * @return The flag to signal HBI data in the workspace and reduce diagnostic data collected by the service
     * 
     */
    private @Nullable Boolean hbiWorkspace;
    /**
     * @return Specifies the resource ID.
     * 
     */
    private String id;
    /**
     * @return The identity of the resource.
     * 
     */
    private @Nullable IdentityResponse identity;
    /**
     * @return The compute name for image build
     * 
     */
    private @Nullable String imageBuildCompute;
    /**
     * @return ARM id of the key vault associated with this workspace. This cannot be changed once the workspace has been created
     * 
     */
    private @Nullable String keyVault;
    /**
     * @return Specifies the location of the resource.
     * 
     */
    private @Nullable String location;
    /**
     * @return Specifies the name of the resource.
     * 
     */
    private String name;
    /**
     * @return The notebook info of Azure ML workspace.
     * 
     */
    private NotebookResourceInfoResponse notebookInfo;
    /**
     * @return The user assigned identity resource id that represents the workspace identity.
     * 
     */
    private @Nullable String primaryUserAssignedIdentity;
    /**
     * @return The list of private endpoint connections in the workspace.
     * 
     */
    private List<PrivateEndpointConnectionResponse> privateEndpointConnections;
    /**
     * @return Count of private connections in the workspace
     * 
     */
    private Integer privateLinkCount;
    /**
     * @return The current deployment state of workspace resource. The provisioningState is to indicate states for resource provisioning.
     * 
     */
    private String provisioningState;
    /**
     * @return The service managed resource settings.
     * 
     */
    private @Nullable ServiceManagedResourcesSettingsResponse serviceManagedResourcesSettings;
    /**
     * @return The name of the managed resource group created by workspace RP in customer subscription if the workspace is CMK workspace
     * 
     */
    private String serviceProvisionedResourceGroup;
    /**
     * @return The list of shared private link resources in this workspace.
     * 
     */
    private @Nullable List<SharedPrivateLinkResourceResponse> sharedPrivateLinkResources;
    /**
     * @return The sku of the workspace.
     * 
     */
    private @Nullable SkuResponse sku;
    /**
     * @return ARM id of the storage account associated with this workspace. This cannot be changed once the workspace has been created
     * 
     */
    private @Nullable String storageAccount;
    /**
     * @return Read only system data
     * 
     */
    private SystemDataResponse systemData;
    /**
     * @return Contains resource tags defined as key/value pairs.
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return Specifies the type of the resource.
     * 
     */
    private String type;
    /**
     * @return The immutable id associated with this workspace.
     * 
     */
    private String workspaceId;

    private GetWorkspaceResult() {}
    /**
     * @return The flag to indicate whether to allow public access when behind VNet.
     * 
     */
    public Optional<Boolean> allowPublicAccessWhenBehindVnet() {
        return Optional.ofNullable(this.allowPublicAccessWhenBehindVnet);
    }
    /**
     * @return ARM id of the application insights associated with this workspace. This cannot be changed once the workspace has been created
     * 
     */
    public Optional<String> applicationInsights() {
        return Optional.ofNullable(this.applicationInsights);
    }
    /**
     * @return ARM id of the container registry associated with this workspace. This cannot be changed once the workspace has been created
     * 
     */
    public Optional<String> containerRegistry() {
        return Optional.ofNullable(this.containerRegistry);
    }
    /**
     * @return The description of this workspace.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return Url for the discovery service to identify regional endpoints for machine learning experimentation services
     * 
     */
    public Optional<String> discoveryUrl() {
        return Optional.ofNullable(this.discoveryUrl);
    }
    /**
     * @return The encryption settings of Azure ML workspace.
     * 
     */
    public Optional<EncryptionPropertyResponse> encryption() {
        return Optional.ofNullable(this.encryption);
    }
    /**
     * @return The friendly name for this workspace. This name in mutable
     * 
     */
    public Optional<String> friendlyName() {
        return Optional.ofNullable(this.friendlyName);
    }
    /**
     * @return The flag to signal HBI data in the workspace and reduce diagnostic data collected by the service
     * 
     */
    public Optional<Boolean> hbiWorkspace() {
        return Optional.ofNullable(this.hbiWorkspace);
    }
    /**
     * @return Specifies the resource ID.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The identity of the resource.
     * 
     */
    public Optional<IdentityResponse> identity() {
        return Optional.ofNullable(this.identity);
    }
    /**
     * @return The compute name for image build
     * 
     */
    public Optional<String> imageBuildCompute() {
        return Optional.ofNullable(this.imageBuildCompute);
    }
    /**
     * @return ARM id of the key vault associated with this workspace. This cannot be changed once the workspace has been created
     * 
     */
    public Optional<String> keyVault() {
        return Optional.ofNullable(this.keyVault);
    }
    /**
     * @return Specifies the location of the resource.
     * 
     */
    public Optional<String> location() {
        return Optional.ofNullable(this.location);
    }
    /**
     * @return Specifies the name of the resource.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The notebook info of Azure ML workspace.
     * 
     */
    public NotebookResourceInfoResponse notebookInfo() {
        return this.notebookInfo;
    }
    /**
     * @return The user assigned identity resource id that represents the workspace identity.
     * 
     */
    public Optional<String> primaryUserAssignedIdentity() {
        return Optional.ofNullable(this.primaryUserAssignedIdentity);
    }
    /**
     * @return The list of private endpoint connections in the workspace.
     * 
     */
    public List<PrivateEndpointConnectionResponse> privateEndpointConnections() {
        return this.privateEndpointConnections;
    }
    /**
     * @return Count of private connections in the workspace
     * 
     */
    public Integer privateLinkCount() {
        return this.privateLinkCount;
    }
    /**
     * @return The current deployment state of workspace resource. The provisioningState is to indicate states for resource provisioning.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * @return The service managed resource settings.
     * 
     */
    public Optional<ServiceManagedResourcesSettingsResponse> serviceManagedResourcesSettings() {
        return Optional.ofNullable(this.serviceManagedResourcesSettings);
    }
    /**
     * @return The name of the managed resource group created by workspace RP in customer subscription if the workspace is CMK workspace
     * 
     */
    public String serviceProvisionedResourceGroup() {
        return this.serviceProvisionedResourceGroup;
    }
    /**
     * @return The list of shared private link resources in this workspace.
     * 
     */
    public List<SharedPrivateLinkResourceResponse> sharedPrivateLinkResources() {
        return this.sharedPrivateLinkResources == null ? List.of() : this.sharedPrivateLinkResources;
    }
    /**
     * @return The sku of the workspace.
     * 
     */
    public Optional<SkuResponse> sku() {
        return Optional.ofNullable(this.sku);
    }
    /**
     * @return ARM id of the storage account associated with this workspace. This cannot be changed once the workspace has been created
     * 
     */
    public Optional<String> storageAccount() {
        return Optional.ofNullable(this.storageAccount);
    }
    /**
     * @return Read only system data
     * 
     */
    public SystemDataResponse systemData() {
        return this.systemData;
    }
    /**
     * @return Contains resource tags defined as key/value pairs.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return Specifies the type of the resource.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return The immutable id associated with this workspace.
     * 
     */
    public String workspaceId() {
        return this.workspaceId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWorkspaceResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean allowPublicAccessWhenBehindVnet;
        private @Nullable String applicationInsights;
        private @Nullable String containerRegistry;
        private @Nullable String description;
        private @Nullable String discoveryUrl;
        private @Nullable EncryptionPropertyResponse encryption;
        private @Nullable String friendlyName;
        private @Nullable Boolean hbiWorkspace;
        private String id;
        private @Nullable IdentityResponse identity;
        private @Nullable String imageBuildCompute;
        private @Nullable String keyVault;
        private @Nullable String location;
        private String name;
        private NotebookResourceInfoResponse notebookInfo;
        private @Nullable String primaryUserAssignedIdentity;
        private List<PrivateEndpointConnectionResponse> privateEndpointConnections;
        private Integer privateLinkCount;
        private String provisioningState;
        private @Nullable ServiceManagedResourcesSettingsResponse serviceManagedResourcesSettings;
        private String serviceProvisionedResourceGroup;
        private @Nullable List<SharedPrivateLinkResourceResponse> sharedPrivateLinkResources;
        private @Nullable SkuResponse sku;
        private @Nullable String storageAccount;
        private SystemDataResponse systemData;
        private @Nullable Map<String,String> tags;
        private String type;
        private String workspaceId;
        public Builder() {}
        public Builder(GetWorkspaceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowPublicAccessWhenBehindVnet = defaults.allowPublicAccessWhenBehindVnet;
    	      this.applicationInsights = defaults.applicationInsights;
    	      this.containerRegistry = defaults.containerRegistry;
    	      this.description = defaults.description;
    	      this.discoveryUrl = defaults.discoveryUrl;
    	      this.encryption = defaults.encryption;
    	      this.friendlyName = defaults.friendlyName;
    	      this.hbiWorkspace = defaults.hbiWorkspace;
    	      this.id = defaults.id;
    	      this.identity = defaults.identity;
    	      this.imageBuildCompute = defaults.imageBuildCompute;
    	      this.keyVault = defaults.keyVault;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.notebookInfo = defaults.notebookInfo;
    	      this.primaryUserAssignedIdentity = defaults.primaryUserAssignedIdentity;
    	      this.privateEndpointConnections = defaults.privateEndpointConnections;
    	      this.privateLinkCount = defaults.privateLinkCount;
    	      this.provisioningState = defaults.provisioningState;
    	      this.serviceManagedResourcesSettings = defaults.serviceManagedResourcesSettings;
    	      this.serviceProvisionedResourceGroup = defaults.serviceProvisionedResourceGroup;
    	      this.sharedPrivateLinkResources = defaults.sharedPrivateLinkResources;
    	      this.sku = defaults.sku;
    	      this.storageAccount = defaults.storageAccount;
    	      this.systemData = defaults.systemData;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
    	      this.workspaceId = defaults.workspaceId;
        }

        @CustomType.Setter
        public Builder allowPublicAccessWhenBehindVnet(@Nullable Boolean allowPublicAccessWhenBehindVnet) {
            this.allowPublicAccessWhenBehindVnet = allowPublicAccessWhenBehindVnet;
            return this;
        }
        @CustomType.Setter
        public Builder applicationInsights(@Nullable String applicationInsights) {
            this.applicationInsights = applicationInsights;
            return this;
        }
        @CustomType.Setter
        public Builder containerRegistry(@Nullable String containerRegistry) {
            this.containerRegistry = containerRegistry;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder discoveryUrl(@Nullable String discoveryUrl) {
            this.discoveryUrl = discoveryUrl;
            return this;
        }
        @CustomType.Setter
        public Builder encryption(@Nullable EncryptionPropertyResponse encryption) {
            this.encryption = encryption;
            return this;
        }
        @CustomType.Setter
        public Builder friendlyName(@Nullable String friendlyName) {
            this.friendlyName = friendlyName;
            return this;
        }
        @CustomType.Setter
        public Builder hbiWorkspace(@Nullable Boolean hbiWorkspace) {
            this.hbiWorkspace = hbiWorkspace;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder identity(@Nullable IdentityResponse identity) {
            this.identity = identity;
            return this;
        }
        @CustomType.Setter
        public Builder imageBuildCompute(@Nullable String imageBuildCompute) {
            this.imageBuildCompute = imageBuildCompute;
            return this;
        }
        @CustomType.Setter
        public Builder keyVault(@Nullable String keyVault) {
            this.keyVault = keyVault;
            return this;
        }
        @CustomType.Setter
        public Builder location(@Nullable String location) {
            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder notebookInfo(NotebookResourceInfoResponse notebookInfo) {
            this.notebookInfo = Objects.requireNonNull(notebookInfo);
            return this;
        }
        @CustomType.Setter
        public Builder primaryUserAssignedIdentity(@Nullable String primaryUserAssignedIdentity) {
            this.primaryUserAssignedIdentity = primaryUserAssignedIdentity;
            return this;
        }
        @CustomType.Setter
        public Builder privateEndpointConnections(List<PrivateEndpointConnectionResponse> privateEndpointConnections) {
            this.privateEndpointConnections = Objects.requireNonNull(privateEndpointConnections);
            return this;
        }
        public Builder privateEndpointConnections(PrivateEndpointConnectionResponse... privateEndpointConnections) {
            return privateEndpointConnections(List.of(privateEndpointConnections));
        }
        @CustomType.Setter
        public Builder privateLinkCount(Integer privateLinkCount) {
            this.privateLinkCount = Objects.requireNonNull(privateLinkCount);
            return this;
        }
        @CustomType.Setter
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        @CustomType.Setter
        public Builder serviceManagedResourcesSettings(@Nullable ServiceManagedResourcesSettingsResponse serviceManagedResourcesSettings) {
            this.serviceManagedResourcesSettings = serviceManagedResourcesSettings;
            return this;
        }
        @CustomType.Setter
        public Builder serviceProvisionedResourceGroup(String serviceProvisionedResourceGroup) {
            this.serviceProvisionedResourceGroup = Objects.requireNonNull(serviceProvisionedResourceGroup);
            return this;
        }
        @CustomType.Setter
        public Builder sharedPrivateLinkResources(@Nullable List<SharedPrivateLinkResourceResponse> sharedPrivateLinkResources) {
            this.sharedPrivateLinkResources = sharedPrivateLinkResources;
            return this;
        }
        public Builder sharedPrivateLinkResources(SharedPrivateLinkResourceResponse... sharedPrivateLinkResources) {
            return sharedPrivateLinkResources(List.of(sharedPrivateLinkResources));
        }
        @CustomType.Setter
        public Builder sku(@Nullable SkuResponse sku) {
            this.sku = sku;
            return this;
        }
        @CustomType.Setter
        public Builder storageAccount(@Nullable String storageAccount) {
            this.storageAccount = storageAccount;
            return this;
        }
        @CustomType.Setter
        public Builder systemData(SystemDataResponse systemData) {
            this.systemData = Objects.requireNonNull(systemData);
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder workspaceId(String workspaceId) {
            this.workspaceId = Objects.requireNonNull(workspaceId);
            return this;
        }
        public GetWorkspaceResult build() {
            final var o = new GetWorkspaceResult();
            o.allowPublicAccessWhenBehindVnet = allowPublicAccessWhenBehindVnet;
            o.applicationInsights = applicationInsights;
            o.containerRegistry = containerRegistry;
            o.description = description;
            o.discoveryUrl = discoveryUrl;
            o.encryption = encryption;
            o.friendlyName = friendlyName;
            o.hbiWorkspace = hbiWorkspace;
            o.id = id;
            o.identity = identity;
            o.imageBuildCompute = imageBuildCompute;
            o.keyVault = keyVault;
            o.location = location;
            o.name = name;
            o.notebookInfo = notebookInfo;
            o.primaryUserAssignedIdentity = primaryUserAssignedIdentity;
            o.privateEndpointConnections = privateEndpointConnections;
            o.privateLinkCount = privateLinkCount;
            o.provisioningState = provisioningState;
            o.serviceManagedResourcesSettings = serviceManagedResourcesSettings;
            o.serviceProvisionedResourceGroup = serviceProvisionedResourceGroup;
            o.sharedPrivateLinkResources = sharedPrivateLinkResources;
            o.sku = sku;
            o.storageAccount = storageAccount;
            o.systemData = systemData;
            o.tags = tags;
            o.type = type;
            o.workspaceId = workspaceId;
            return o;
        }
    }
}
