// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.security.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetSecurityConnectorApplicationArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetSecurityConnectorApplicationArgs Empty = new GetSecurityConnectorApplicationArgs();

    /**
     * The security Application key - unique key for the standard application
     * 
     */
    @Import(name="applicationId", required=true)
    private Output<String> applicationId;

    /**
     * @return The security Application key - unique key for the standard application
     * 
     */
    public Output<String> applicationId() {
        return this.applicationId;
    }

    /**
     * The name of the resource group within the user&#39;s subscription. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group within the user&#39;s subscription. The name is case insensitive.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The security connector name.
     * 
     */
    @Import(name="securityConnectorName", required=true)
    private Output<String> securityConnectorName;

    /**
     * @return The security connector name.
     * 
     */
    public Output<String> securityConnectorName() {
        return this.securityConnectorName;
    }

    private GetSecurityConnectorApplicationArgs() {}

    private GetSecurityConnectorApplicationArgs(GetSecurityConnectorApplicationArgs $) {
        this.applicationId = $.applicationId;
        this.resourceGroupName = $.resourceGroupName;
        this.securityConnectorName = $.securityConnectorName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetSecurityConnectorApplicationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetSecurityConnectorApplicationArgs $;

        public Builder() {
            $ = new GetSecurityConnectorApplicationArgs();
        }

        public Builder(GetSecurityConnectorApplicationArgs defaults) {
            $ = new GetSecurityConnectorApplicationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param applicationId The security Application key - unique key for the standard application
         * 
         * @return builder
         * 
         */
        public Builder applicationId(Output<String> applicationId) {
            $.applicationId = applicationId;
            return this;
        }

        /**
         * @param applicationId The security Application key - unique key for the standard application
         * 
         * @return builder
         * 
         */
        public Builder applicationId(String applicationId) {
            return applicationId(Output.of(applicationId));
        }

        /**
         * @param resourceGroupName The name of the resource group within the user&#39;s subscription. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group within the user&#39;s subscription. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param securityConnectorName The security connector name.
         * 
         * @return builder
         * 
         */
        public Builder securityConnectorName(Output<String> securityConnectorName) {
            $.securityConnectorName = securityConnectorName;
            return this;
        }

        /**
         * @param securityConnectorName The security connector name.
         * 
         * @return builder
         * 
         */
        public Builder securityConnectorName(String securityConnectorName) {
            return securityConnectorName(Output.of(securityConnectorName));
        }

        public GetSecurityConnectorApplicationArgs build() {
            $.applicationId = Objects.requireNonNull($.applicationId, "expected parameter 'applicationId' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.securityConnectorName = Objects.requireNonNull($.securityConnectorName, "expected parameter 'securityConnectorName' to be non-null");
            return $;
        }
    }

}
