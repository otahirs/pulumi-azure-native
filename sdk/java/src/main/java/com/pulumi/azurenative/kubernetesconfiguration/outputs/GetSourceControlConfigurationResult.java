// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.kubernetesconfiguration.outputs;

import com.pulumi.azurenative.kubernetesconfiguration.outputs.ComplianceStatusResponse;
import com.pulumi.azurenative.kubernetesconfiguration.outputs.HelmOperatorPropertiesResponse;
import com.pulumi.azurenative.kubernetesconfiguration.outputs.SystemDataResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetSourceControlConfigurationResult {
    /**
     * @return Compliance Status of the Configuration
     * 
     */
    private ComplianceStatusResponse complianceStatus;
    /**
     * @return Name-value pairs of protected configuration settings for the configuration
     * 
     */
    private @Nullable Map<String,String> configurationProtectedSettings;
    /**
     * @return Option to enable Helm Operator for this git configuration.
     * 
     */
    private @Nullable Boolean enableHelmOperator;
    /**
     * @return Properties for Helm operator.
     * 
     */
    private @Nullable HelmOperatorPropertiesResponse helmOperatorProperties;
    /**
     * @return Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    private String id;
    /**
     * @return The name of the resource
     * 
     */
    private String name;
    /**
     * @return Instance name of the operator - identifying the specific configuration.
     * 
     */
    private @Nullable String operatorInstanceName;
    /**
     * @return The namespace to which this operator is installed to. Maximum of 253 lower case alphanumeric characters, hyphen and period only.
     * 
     */
    private @Nullable String operatorNamespace;
    /**
     * @return Any Parameters for the Operator instance in string format.
     * 
     */
    private @Nullable String operatorParams;
    /**
     * @return Scope at which the operator will be installed.
     * 
     */
    private @Nullable String operatorScope;
    /**
     * @return Type of the operator
     * 
     */
    private @Nullable String operatorType;
    /**
     * @return The provisioning state of the resource provider.
     * 
     */
    private String provisioningState;
    /**
     * @return Public Key associated with this SourceControl configuration (either generated within the cluster or provided by the user).
     * 
     */
    private String repositoryPublicKey;
    /**
     * @return Url of the SourceControl Repository.
     * 
     */
    private @Nullable String repositoryUrl;
    /**
     * @return Base64-encoded known_hosts contents containing public SSH keys required to access private Git instances
     * 
     */
    private @Nullable String sshKnownHostsContents;
    /**
     * @return Top level metadata https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/common-api-contracts.md#system-metadata-for-all-azure-resources
     * 
     */
    private SystemDataResponse systemData;
    /**
     * @return The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    private String type;

    private GetSourceControlConfigurationResult() {}
    /**
     * @return Compliance Status of the Configuration
     * 
     */
    public ComplianceStatusResponse complianceStatus() {
        return this.complianceStatus;
    }
    /**
     * @return Name-value pairs of protected configuration settings for the configuration
     * 
     */
    public Map<String,String> configurationProtectedSettings() {
        return this.configurationProtectedSettings == null ? Map.of() : this.configurationProtectedSettings;
    }
    /**
     * @return Option to enable Helm Operator for this git configuration.
     * 
     */
    public Optional<Boolean> enableHelmOperator() {
        return Optional.ofNullable(this.enableHelmOperator);
    }
    /**
     * @return Properties for Helm operator.
     * 
     */
    public Optional<HelmOperatorPropertiesResponse> helmOperatorProperties() {
        return Optional.ofNullable(this.helmOperatorProperties);
    }
    /**
     * @return Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The name of the resource
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Instance name of the operator - identifying the specific configuration.
     * 
     */
    public Optional<String> operatorInstanceName() {
        return Optional.ofNullable(this.operatorInstanceName);
    }
    /**
     * @return The namespace to which this operator is installed to. Maximum of 253 lower case alphanumeric characters, hyphen and period only.
     * 
     */
    public Optional<String> operatorNamespace() {
        return Optional.ofNullable(this.operatorNamespace);
    }
    /**
     * @return Any Parameters for the Operator instance in string format.
     * 
     */
    public Optional<String> operatorParams() {
        return Optional.ofNullable(this.operatorParams);
    }
    /**
     * @return Scope at which the operator will be installed.
     * 
     */
    public Optional<String> operatorScope() {
        return Optional.ofNullable(this.operatorScope);
    }
    /**
     * @return Type of the operator
     * 
     */
    public Optional<String> operatorType() {
        return Optional.ofNullable(this.operatorType);
    }
    /**
     * @return The provisioning state of the resource provider.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * @return Public Key associated with this SourceControl configuration (either generated within the cluster or provided by the user).
     * 
     */
    public String repositoryPublicKey() {
        return this.repositoryPublicKey;
    }
    /**
     * @return Url of the SourceControl Repository.
     * 
     */
    public Optional<String> repositoryUrl() {
        return Optional.ofNullable(this.repositoryUrl);
    }
    /**
     * @return Base64-encoded known_hosts contents containing public SSH keys required to access private Git instances
     * 
     */
    public Optional<String> sshKnownHostsContents() {
        return Optional.ofNullable(this.sshKnownHostsContents);
    }
    /**
     * @return Top level metadata https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/common-api-contracts.md#system-metadata-for-all-azure-resources
     * 
     */
    public SystemDataResponse systemData() {
        return this.systemData;
    }
    /**
     * @return The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSourceControlConfigurationResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private ComplianceStatusResponse complianceStatus;
        private @Nullable Map<String,String> configurationProtectedSettings;
        private @Nullable Boolean enableHelmOperator;
        private @Nullable HelmOperatorPropertiesResponse helmOperatorProperties;
        private String id;
        private String name;
        private @Nullable String operatorInstanceName;
        private @Nullable String operatorNamespace;
        private @Nullable String operatorParams;
        private @Nullable String operatorScope;
        private @Nullable String operatorType;
        private String provisioningState;
        private String repositoryPublicKey;
        private @Nullable String repositoryUrl;
        private @Nullable String sshKnownHostsContents;
        private SystemDataResponse systemData;
        private String type;
        public Builder() {}
        public Builder(GetSourceControlConfigurationResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.complianceStatus = defaults.complianceStatus;
    	      this.configurationProtectedSettings = defaults.configurationProtectedSettings;
    	      this.enableHelmOperator = defaults.enableHelmOperator;
    	      this.helmOperatorProperties = defaults.helmOperatorProperties;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.operatorInstanceName = defaults.operatorInstanceName;
    	      this.operatorNamespace = defaults.operatorNamespace;
    	      this.operatorParams = defaults.operatorParams;
    	      this.operatorScope = defaults.operatorScope;
    	      this.operatorType = defaults.operatorType;
    	      this.provisioningState = defaults.provisioningState;
    	      this.repositoryPublicKey = defaults.repositoryPublicKey;
    	      this.repositoryUrl = defaults.repositoryUrl;
    	      this.sshKnownHostsContents = defaults.sshKnownHostsContents;
    	      this.systemData = defaults.systemData;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder complianceStatus(ComplianceStatusResponse complianceStatus) {
            this.complianceStatus = Objects.requireNonNull(complianceStatus);
            return this;
        }
        @CustomType.Setter
        public Builder configurationProtectedSettings(@Nullable Map<String,String> configurationProtectedSettings) {
            this.configurationProtectedSettings = configurationProtectedSettings;
            return this;
        }
        @CustomType.Setter
        public Builder enableHelmOperator(@Nullable Boolean enableHelmOperator) {
            this.enableHelmOperator = enableHelmOperator;
            return this;
        }
        @CustomType.Setter
        public Builder helmOperatorProperties(@Nullable HelmOperatorPropertiesResponse helmOperatorProperties) {
            this.helmOperatorProperties = helmOperatorProperties;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder operatorInstanceName(@Nullable String operatorInstanceName) {
            this.operatorInstanceName = operatorInstanceName;
            return this;
        }
        @CustomType.Setter
        public Builder operatorNamespace(@Nullable String operatorNamespace) {
            this.operatorNamespace = operatorNamespace;
            return this;
        }
        @CustomType.Setter
        public Builder operatorParams(@Nullable String operatorParams) {
            this.operatorParams = operatorParams;
            return this;
        }
        @CustomType.Setter
        public Builder operatorScope(@Nullable String operatorScope) {
            this.operatorScope = operatorScope;
            return this;
        }
        @CustomType.Setter
        public Builder operatorType(@Nullable String operatorType) {
            this.operatorType = operatorType;
            return this;
        }
        @CustomType.Setter
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        @CustomType.Setter
        public Builder repositoryPublicKey(String repositoryPublicKey) {
            this.repositoryPublicKey = Objects.requireNonNull(repositoryPublicKey);
            return this;
        }
        @CustomType.Setter
        public Builder repositoryUrl(@Nullable String repositoryUrl) {
            this.repositoryUrl = repositoryUrl;
            return this;
        }
        @CustomType.Setter
        public Builder sshKnownHostsContents(@Nullable String sshKnownHostsContents) {
            this.sshKnownHostsContents = sshKnownHostsContents;
            return this;
        }
        @CustomType.Setter
        public Builder systemData(SystemDataResponse systemData) {
            this.systemData = Objects.requireNonNull(systemData);
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetSourceControlConfigurationResult build() {
            final var o = new GetSourceControlConfigurationResult();
            o.complianceStatus = complianceStatus;
            o.configurationProtectedSettings = configurationProtectedSettings;
            o.enableHelmOperator = enableHelmOperator;
            o.helmOperatorProperties = helmOperatorProperties;
            o.id = id;
            o.name = name;
            o.operatorInstanceName = operatorInstanceName;
            o.operatorNamespace = operatorNamespace;
            o.operatorParams = operatorParams;
            o.operatorScope = operatorScope;
            o.operatorType = operatorType;
            o.provisioningState = provisioningState;
            o.repositoryPublicKey = repositoryPublicKey;
            o.repositoryUrl = repositoryUrl;
            o.sshKnownHostsContents = sshKnownHostsContents;
            o.systemData = systemData;
            o.type = type;
            return o;
        }
    }
}
