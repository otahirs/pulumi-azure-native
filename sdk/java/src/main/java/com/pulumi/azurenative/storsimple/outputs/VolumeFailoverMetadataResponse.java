// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.storsimple.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class VolumeFailoverMetadataResponse {
    /**
     * @return The date at which the snapshot was taken.
     * 
     */
    private @Nullable String backupCreatedDate;
    /**
     * @return The path ID of the backup-element for this volume, inside the backup set.
     * 
     */
    private @Nullable String backupElementId;
    /**
     * @return The path ID of the backup set.
     * 
     */
    private @Nullable String backupId;
    /**
     * @return The path ID of the backup policy using which the snapshot was taken.
     * 
     */
    private @Nullable String backupPolicyId;
    /**
     * @return The size of the volume in bytes at the time the snapshot was taken.
     * 
     */
    private @Nullable Double sizeInBytes;
    /**
     * @return The path ID of the volume.
     * 
     */
    private @Nullable String volumeId;
    /**
     * @return The type of the volume.
     * 
     */
    private @Nullable String volumeType;

    private VolumeFailoverMetadataResponse() {}
    /**
     * @return The date at which the snapshot was taken.
     * 
     */
    public Optional<String> backupCreatedDate() {
        return Optional.ofNullable(this.backupCreatedDate);
    }
    /**
     * @return The path ID of the backup-element for this volume, inside the backup set.
     * 
     */
    public Optional<String> backupElementId() {
        return Optional.ofNullable(this.backupElementId);
    }
    /**
     * @return The path ID of the backup set.
     * 
     */
    public Optional<String> backupId() {
        return Optional.ofNullable(this.backupId);
    }
    /**
     * @return The path ID of the backup policy using which the snapshot was taken.
     * 
     */
    public Optional<String> backupPolicyId() {
        return Optional.ofNullable(this.backupPolicyId);
    }
    /**
     * @return The size of the volume in bytes at the time the snapshot was taken.
     * 
     */
    public Optional<Double> sizeInBytes() {
        return Optional.ofNullable(this.sizeInBytes);
    }
    /**
     * @return The path ID of the volume.
     * 
     */
    public Optional<String> volumeId() {
        return Optional.ofNullable(this.volumeId);
    }
    /**
     * @return The type of the volume.
     * 
     */
    public Optional<String> volumeType() {
        return Optional.ofNullable(this.volumeType);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VolumeFailoverMetadataResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String backupCreatedDate;
        private @Nullable String backupElementId;
        private @Nullable String backupId;
        private @Nullable String backupPolicyId;
        private @Nullable Double sizeInBytes;
        private @Nullable String volumeId;
        private @Nullable String volumeType;
        public Builder() {}
        public Builder(VolumeFailoverMetadataResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backupCreatedDate = defaults.backupCreatedDate;
    	      this.backupElementId = defaults.backupElementId;
    	      this.backupId = defaults.backupId;
    	      this.backupPolicyId = defaults.backupPolicyId;
    	      this.sizeInBytes = defaults.sizeInBytes;
    	      this.volumeId = defaults.volumeId;
    	      this.volumeType = defaults.volumeType;
        }

        @CustomType.Setter
        public Builder backupCreatedDate(@Nullable String backupCreatedDate) {
            this.backupCreatedDate = backupCreatedDate;
            return this;
        }
        @CustomType.Setter
        public Builder backupElementId(@Nullable String backupElementId) {
            this.backupElementId = backupElementId;
            return this;
        }
        @CustomType.Setter
        public Builder backupId(@Nullable String backupId) {
            this.backupId = backupId;
            return this;
        }
        @CustomType.Setter
        public Builder backupPolicyId(@Nullable String backupPolicyId) {
            this.backupPolicyId = backupPolicyId;
            return this;
        }
        @CustomType.Setter
        public Builder sizeInBytes(@Nullable Double sizeInBytes) {
            this.sizeInBytes = sizeInBytes;
            return this;
        }
        @CustomType.Setter
        public Builder volumeId(@Nullable String volumeId) {
            this.volumeId = volumeId;
            return this;
        }
        @CustomType.Setter
        public Builder volumeType(@Nullable String volumeType) {
            this.volumeType = volumeType;
            return this;
        }
        public VolumeFailoverMetadataResponse build() {
            final var o = new VolumeFailoverMetadataResponse();
            o.backupCreatedDate = backupCreatedDate;
            o.backupElementId = backupElementId;
            o.backupId = backupId;
            o.backupPolicyId = backupPolicyId;
            o.sizeInBytes = sizeInBytes;
            o.volumeId = volumeId;
            o.volumeType = volumeType;
            return o;
        }
    }
}
