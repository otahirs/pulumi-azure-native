// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.workloads.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class MessageServerPropertiesResponse {
    /**
     * @return Defines the SAP Instance health.
     * 
     */
    private String health;
    /**
     * @return The message server SAP host name.
     * 
     */
    private String hostname;
    /**
     * @return The message server http port.
     * 
     */
    private Double httpPort;
    /**
     * @return The message server https port.
     * 
     */
    private Double httpsPort;
    /**
     * @return The message server internal MS port.
     * 
     */
    private Double internalMsPort;
    /**
     * @return The message server IP Address.
     * 
     */
    private String ipAddress;
    /**
     * @return The message server port.
     * 
     */
    private Double msPort;

    private MessageServerPropertiesResponse() {}
    /**
     * @return Defines the SAP Instance health.
     * 
     */
    public String health() {
        return this.health;
    }
    /**
     * @return The message server SAP host name.
     * 
     */
    public String hostname() {
        return this.hostname;
    }
    /**
     * @return The message server http port.
     * 
     */
    public Double httpPort() {
        return this.httpPort;
    }
    /**
     * @return The message server https port.
     * 
     */
    public Double httpsPort() {
        return this.httpsPort;
    }
    /**
     * @return The message server internal MS port.
     * 
     */
    public Double internalMsPort() {
        return this.internalMsPort;
    }
    /**
     * @return The message server IP Address.
     * 
     */
    public String ipAddress() {
        return this.ipAddress;
    }
    /**
     * @return The message server port.
     * 
     */
    public Double msPort() {
        return this.msPort;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MessageServerPropertiesResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String health;
        private String hostname;
        private Double httpPort;
        private Double httpsPort;
        private Double internalMsPort;
        private String ipAddress;
        private Double msPort;
        public Builder() {}
        public Builder(MessageServerPropertiesResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.health = defaults.health;
    	      this.hostname = defaults.hostname;
    	      this.httpPort = defaults.httpPort;
    	      this.httpsPort = defaults.httpsPort;
    	      this.internalMsPort = defaults.internalMsPort;
    	      this.ipAddress = defaults.ipAddress;
    	      this.msPort = defaults.msPort;
        }

        @CustomType.Setter
        public Builder health(String health) {
            this.health = Objects.requireNonNull(health);
            return this;
        }
        @CustomType.Setter
        public Builder hostname(String hostname) {
            this.hostname = Objects.requireNonNull(hostname);
            return this;
        }
        @CustomType.Setter
        public Builder httpPort(Double httpPort) {
            this.httpPort = Objects.requireNonNull(httpPort);
            return this;
        }
        @CustomType.Setter
        public Builder httpsPort(Double httpsPort) {
            this.httpsPort = Objects.requireNonNull(httpsPort);
            return this;
        }
        @CustomType.Setter
        public Builder internalMsPort(Double internalMsPort) {
            this.internalMsPort = Objects.requireNonNull(internalMsPort);
            return this;
        }
        @CustomType.Setter
        public Builder ipAddress(String ipAddress) {
            this.ipAddress = Objects.requireNonNull(ipAddress);
            return this;
        }
        @CustomType.Setter
        public Builder msPort(Double msPort) {
            this.msPort = Objects.requireNonNull(msPort);
            return this;
        }
        public MessageServerPropertiesResponse build() {
            final var o = new MessageServerPropertiesResponse();
            o.health = health;
            o.hostname = hostname;
            o.httpPort = httpPort;
            o.httpsPort = httpsPort;
            o.internalMsPort = internalMsPort;
            o.ipAddress = ipAddress;
            o.msPort = msPort;
            return o;
        }
    }
}
