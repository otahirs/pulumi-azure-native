// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.devtestlab.outputs;

import com.pulumi.azurenative.devtestlab.outputs.ApplicableScheduleResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetServiceFabricResult {
    /**
     * @return The applicable schedule for the virtual machine.
     * 
     */
    private ApplicableScheduleResponse applicableSchedule;
    /**
     * @return The resource id of the environment under which the service fabric resource is present
     * 
     */
    private @Nullable String environmentId;
    /**
     * @return The backing service fabric resource&#39;s id
     * 
     */
    private @Nullable String externalServiceFabricId;
    /**
     * @return The identifier of the resource.
     * 
     */
    private String id;
    /**
     * @return The location of the resource.
     * 
     */
    private @Nullable String location;
    /**
     * @return The name of the resource.
     * 
     */
    private String name;
    /**
     * @return The provisioning status of the resource.
     * 
     */
    private String provisioningState;
    /**
     * @return The tags of the resource.
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return The type of the resource.
     * 
     */
    private String type;
    /**
     * @return The unique immutable identifier of a resource (Guid).
     * 
     */
    private String uniqueIdentifier;

    private GetServiceFabricResult() {}
    /**
     * @return The applicable schedule for the virtual machine.
     * 
     */
    public ApplicableScheduleResponse applicableSchedule() {
        return this.applicableSchedule;
    }
    /**
     * @return The resource id of the environment under which the service fabric resource is present
     * 
     */
    public Optional<String> environmentId() {
        return Optional.ofNullable(this.environmentId);
    }
    /**
     * @return The backing service fabric resource&#39;s id
     * 
     */
    public Optional<String> externalServiceFabricId() {
        return Optional.ofNullable(this.externalServiceFabricId);
    }
    /**
     * @return The identifier of the resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The location of the resource.
     * 
     */
    public Optional<String> location() {
        return Optional.ofNullable(this.location);
    }
    /**
     * @return The name of the resource.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The provisioning status of the resource.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * @return The tags of the resource.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return The type of the resource.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return The unique immutable identifier of a resource (Guid).
     * 
     */
    public String uniqueIdentifier() {
        return this.uniqueIdentifier;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServiceFabricResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private ApplicableScheduleResponse applicableSchedule;
        private @Nullable String environmentId;
        private @Nullable String externalServiceFabricId;
        private String id;
        private @Nullable String location;
        private String name;
        private String provisioningState;
        private @Nullable Map<String,String> tags;
        private String type;
        private String uniqueIdentifier;
        public Builder() {}
        public Builder(GetServiceFabricResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicableSchedule = defaults.applicableSchedule;
    	      this.environmentId = defaults.environmentId;
    	      this.externalServiceFabricId = defaults.externalServiceFabricId;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.provisioningState = defaults.provisioningState;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
    	      this.uniqueIdentifier = defaults.uniqueIdentifier;
        }

        @CustomType.Setter
        public Builder applicableSchedule(ApplicableScheduleResponse applicableSchedule) {
            this.applicableSchedule = Objects.requireNonNull(applicableSchedule);
            return this;
        }
        @CustomType.Setter
        public Builder environmentId(@Nullable String environmentId) {
            this.environmentId = environmentId;
            return this;
        }
        @CustomType.Setter
        public Builder externalServiceFabricId(@Nullable String externalServiceFabricId) {
            this.externalServiceFabricId = externalServiceFabricId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder location(@Nullable String location) {
            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder uniqueIdentifier(String uniqueIdentifier) {
            this.uniqueIdentifier = Objects.requireNonNull(uniqueIdentifier);
            return this;
        }
        public GetServiceFabricResult build() {
            final var o = new GetServiceFabricResult();
            o.applicableSchedule = applicableSchedule;
            o.environmentId = environmentId;
            o.externalServiceFabricId = externalServiceFabricId;
            o.id = id;
            o.location = location;
            o.name = name;
            o.provisioningState = provisioningState;
            o.tags = tags;
            o.type = type;
            o.uniqueIdentifier = uniqueIdentifier;
            return o;
        }
    }
}
