// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.compute.outputs;

import com.pulumi.azurenative.compute.outputs.UefiSettingsResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SecurityProfileResponse {
    /**
     * @return This property can be used by user in the request to enable or disable the Host Encryption for the virtual machine or virtual machine scale set. This will enable the encryption for all the disks including Resource/Temp disk at host itself. &lt;br&gt;&lt;br&gt; Default: The Encryption at host will be disabled unless this property is set to true for the resource.
     * 
     */
    private @Nullable Boolean encryptionAtHost;
    /**
     * @return Specifies the SecurityType of the virtual machine. It is set as TrustedLaunch to enable UefiSettings. &lt;br&gt;&lt;br&gt; Default: UefiSettings will not be enabled unless this property is set as TrustedLaunch.
     * 
     */
    private @Nullable String securityType;
    /**
     * @return Specifies the security settings like secure boot and vTPM used while creating the virtual machine. &lt;br&gt;&lt;br&gt;Minimum api-version: 2020-12-01
     * 
     */
    private @Nullable UefiSettingsResponse uefiSettings;

    private SecurityProfileResponse() {}
    /**
     * @return This property can be used by user in the request to enable or disable the Host Encryption for the virtual machine or virtual machine scale set. This will enable the encryption for all the disks including Resource/Temp disk at host itself. &lt;br&gt;&lt;br&gt; Default: The Encryption at host will be disabled unless this property is set to true for the resource.
     * 
     */
    public Optional<Boolean> encryptionAtHost() {
        return Optional.ofNullable(this.encryptionAtHost);
    }
    /**
     * @return Specifies the SecurityType of the virtual machine. It is set as TrustedLaunch to enable UefiSettings. &lt;br&gt;&lt;br&gt; Default: UefiSettings will not be enabled unless this property is set as TrustedLaunch.
     * 
     */
    public Optional<String> securityType() {
        return Optional.ofNullable(this.securityType);
    }
    /**
     * @return Specifies the security settings like secure boot and vTPM used while creating the virtual machine. &lt;br&gt;&lt;br&gt;Minimum api-version: 2020-12-01
     * 
     */
    public Optional<UefiSettingsResponse> uefiSettings() {
        return Optional.ofNullable(this.uefiSettings);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SecurityProfileResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean encryptionAtHost;
        private @Nullable String securityType;
        private @Nullable UefiSettingsResponse uefiSettings;
        public Builder() {}
        public Builder(SecurityProfileResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.encryptionAtHost = defaults.encryptionAtHost;
    	      this.securityType = defaults.securityType;
    	      this.uefiSettings = defaults.uefiSettings;
        }

        @CustomType.Setter
        public Builder encryptionAtHost(@Nullable Boolean encryptionAtHost) {
            this.encryptionAtHost = encryptionAtHost;
            return this;
        }
        @CustomType.Setter
        public Builder securityType(@Nullable String securityType) {
            this.securityType = securityType;
            return this;
        }
        @CustomType.Setter
        public Builder uefiSettings(@Nullable UefiSettingsResponse uefiSettings) {
            this.uefiSettings = uefiSettings;
            return this;
        }
        public SecurityProfileResponse build() {
            final var o = new SecurityProfileResponse();
            o.encryptionAtHost = encryptionAtHost;
            o.securityType = securityType;
            o.uefiSettings = uefiSettings;
            return o;
        }
    }
}
