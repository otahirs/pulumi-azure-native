// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.communication.outputs;

import com.pulumi.azurenative.communication.outputs.DomainPropertiesResponseVerificationRecords;
import com.pulumi.azurenative.communication.outputs.DomainPropertiesResponseVerificationStates;
import com.pulumi.azurenative.communication.outputs.SystemDataResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDomainResult {
    /**
     * @return The location where the Domains resource data is stored at rest.
     * 
     */
    private String dataLocation;
    /**
     * @return Describes how a Domains resource is being managed.
     * 
     */
    private String domainManagement;
    /**
     * @return P2 sender domain that is displayed to the email recipients [RFC 5322].
     * 
     */
    private String fromSenderDomain;
    /**
     * @return Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    private String id;
    /**
     * @return The geo-location where the resource lives
     * 
     */
    private String location;
    /**
     * @return P1 sender domain that is present on the email envelope [RFC 5321].
     * 
     */
    private String mailFromSenderDomain;
    /**
     * @return The name of the resource
     * 
     */
    private String name;
    /**
     * @return Provisioning state of the resource.
     * 
     */
    private String provisioningState;
    /**
     * @return Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     */
    private SystemDataResponse systemData;
    /**
     * @return Resource tags.
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    private String type;
    /**
     * @return Describes whether user engagement tracking is enabled or disabled.
     * 
     */
    private @Nullable String userEngagementTracking;
    /**
     * @return Collection of valid sender usernames. This is a key-value pair where key=username and value=display name.
     * 
     */
    private @Nullable Map<String,String> validSenderUsernames;
    /**
     * @return List of DnsRecord
     * 
     */
    private DomainPropertiesResponseVerificationRecords verificationRecords;
    /**
     * @return List of VerificationStatusRecord
     * 
     */
    private DomainPropertiesResponseVerificationStates verificationStates;

    private GetDomainResult() {}
    /**
     * @return The location where the Domains resource data is stored at rest.
     * 
     */
    public String dataLocation() {
        return this.dataLocation;
    }
    /**
     * @return Describes how a Domains resource is being managed.
     * 
     */
    public String domainManagement() {
        return this.domainManagement;
    }
    /**
     * @return P2 sender domain that is displayed to the email recipients [RFC 5322].
     * 
     */
    public String fromSenderDomain() {
        return this.fromSenderDomain;
    }
    /**
     * @return Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The geo-location where the resource lives
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return P1 sender domain that is present on the email envelope [RFC 5321].
     * 
     */
    public String mailFromSenderDomain() {
        return this.mailFromSenderDomain;
    }
    /**
     * @return The name of the resource
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Provisioning state of the resource.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * @return Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     */
    public SystemDataResponse systemData() {
        return this.systemData;
    }
    /**
     * @return Resource tags.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return Describes whether user engagement tracking is enabled or disabled.
     * 
     */
    public Optional<String> userEngagementTracking() {
        return Optional.ofNullable(this.userEngagementTracking);
    }
    /**
     * @return Collection of valid sender usernames. This is a key-value pair where key=username and value=display name.
     * 
     */
    public Map<String,String> validSenderUsernames() {
        return this.validSenderUsernames == null ? Map.of() : this.validSenderUsernames;
    }
    /**
     * @return List of DnsRecord
     * 
     */
    public DomainPropertiesResponseVerificationRecords verificationRecords() {
        return this.verificationRecords;
    }
    /**
     * @return List of VerificationStatusRecord
     * 
     */
    public DomainPropertiesResponseVerificationStates verificationStates() {
        return this.verificationStates;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDomainResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String dataLocation;
        private String domainManagement;
        private String fromSenderDomain;
        private String id;
        private String location;
        private String mailFromSenderDomain;
        private String name;
        private String provisioningState;
        private SystemDataResponse systemData;
        private @Nullable Map<String,String> tags;
        private String type;
        private @Nullable String userEngagementTracking;
        private @Nullable Map<String,String> validSenderUsernames;
        private DomainPropertiesResponseVerificationRecords verificationRecords;
        private DomainPropertiesResponseVerificationStates verificationStates;
        public Builder() {}
        public Builder(GetDomainResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dataLocation = defaults.dataLocation;
    	      this.domainManagement = defaults.domainManagement;
    	      this.fromSenderDomain = defaults.fromSenderDomain;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.mailFromSenderDomain = defaults.mailFromSenderDomain;
    	      this.name = defaults.name;
    	      this.provisioningState = defaults.provisioningState;
    	      this.systemData = defaults.systemData;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
    	      this.userEngagementTracking = defaults.userEngagementTracking;
    	      this.validSenderUsernames = defaults.validSenderUsernames;
    	      this.verificationRecords = defaults.verificationRecords;
    	      this.verificationStates = defaults.verificationStates;
        }

        @CustomType.Setter
        public Builder dataLocation(String dataLocation) {
            this.dataLocation = Objects.requireNonNull(dataLocation);
            return this;
        }
        @CustomType.Setter
        public Builder domainManagement(String domainManagement) {
            this.domainManagement = Objects.requireNonNull(domainManagement);
            return this;
        }
        @CustomType.Setter
        public Builder fromSenderDomain(String fromSenderDomain) {
            this.fromSenderDomain = Objects.requireNonNull(fromSenderDomain);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        @CustomType.Setter
        public Builder mailFromSenderDomain(String mailFromSenderDomain) {
            this.mailFromSenderDomain = Objects.requireNonNull(mailFromSenderDomain);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        @CustomType.Setter
        public Builder systemData(SystemDataResponse systemData) {
            this.systemData = Objects.requireNonNull(systemData);
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder userEngagementTracking(@Nullable String userEngagementTracking) {
            this.userEngagementTracking = userEngagementTracking;
            return this;
        }
        @CustomType.Setter
        public Builder validSenderUsernames(@Nullable Map<String,String> validSenderUsernames) {
            this.validSenderUsernames = validSenderUsernames;
            return this;
        }
        @CustomType.Setter
        public Builder verificationRecords(DomainPropertiesResponseVerificationRecords verificationRecords) {
            this.verificationRecords = Objects.requireNonNull(verificationRecords);
            return this;
        }
        @CustomType.Setter
        public Builder verificationStates(DomainPropertiesResponseVerificationStates verificationStates) {
            this.verificationStates = Objects.requireNonNull(verificationStates);
            return this;
        }
        public GetDomainResult build() {
            final var o = new GetDomainResult();
            o.dataLocation = dataLocation;
            o.domainManagement = domainManagement;
            o.fromSenderDomain = fromSenderDomain;
            o.id = id;
            o.location = location;
            o.mailFromSenderDomain = mailFromSenderDomain;
            o.name = name;
            o.provisioningState = provisioningState;
            o.systemData = systemData;
            o.tags = tags;
            o.type = type;
            o.userEngagementTracking = userEngagementTracking;
            o.validSenderUsernames = validSenderUsernames;
            o.verificationRecords = verificationRecords;
            o.verificationStates = verificationStates;
            return o;
        }
    }
}
