// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.deploymentmanager.outputs;

import com.pulumi.azurenative.deploymentmanager.outputs.ServiceUnitArtifactsResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetServiceUnitResult {
    /**
     * @return The artifacts for the service unit.
     * 
     */
    private @Nullable ServiceUnitArtifactsResponse artifacts;
    /**
     * @return Describes the type of ARM deployment to be performed on the resource.
     * 
     */
    private String deploymentMode;
    /**
     * @return Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    private String id;
    /**
     * @return The geo-location where the resource lives
     * 
     */
    private String location;
    /**
     * @return The name of the resource
     * 
     */
    private String name;
    /**
     * @return Resource tags.
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return The Azure Resource Group to which the resources in the service unit belong to or should be deployed to.
     * 
     */
    private String targetResourceGroup;
    /**
     * @return The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    private String type;

    private GetServiceUnitResult() {}
    /**
     * @return The artifacts for the service unit.
     * 
     */
    public Optional<ServiceUnitArtifactsResponse> artifacts() {
        return Optional.ofNullable(this.artifacts);
    }
    /**
     * @return Describes the type of ARM deployment to be performed on the resource.
     * 
     */
    public String deploymentMode() {
        return this.deploymentMode;
    }
    /**
     * @return Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The geo-location where the resource lives
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return The name of the resource
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Resource tags.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return The Azure Resource Group to which the resources in the service unit belong to or should be deployed to.
     * 
     */
    public String targetResourceGroup() {
        return this.targetResourceGroup;
    }
    /**
     * @return The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServiceUnitResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable ServiceUnitArtifactsResponse artifacts;
        private String deploymentMode;
        private String id;
        private String location;
        private String name;
        private @Nullable Map<String,String> tags;
        private String targetResourceGroup;
        private String type;
        public Builder() {}
        public Builder(GetServiceUnitResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.artifacts = defaults.artifacts;
    	      this.deploymentMode = defaults.deploymentMode;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.tags = defaults.tags;
    	      this.targetResourceGroup = defaults.targetResourceGroup;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder artifacts(@Nullable ServiceUnitArtifactsResponse artifacts) {
            this.artifacts = artifacts;
            return this;
        }
        @CustomType.Setter
        public Builder deploymentMode(String deploymentMode) {
            this.deploymentMode = Objects.requireNonNull(deploymentMode);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder targetResourceGroup(String targetResourceGroup) {
            this.targetResourceGroup = Objects.requireNonNull(targetResourceGroup);
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetServiceUnitResult build() {
            final var o = new GetServiceUnitResult();
            o.artifacts = artifacts;
            o.deploymentMode = deploymentMode;
            o.id = id;
            o.location = location;
            o.name = name;
            o.tags = tags;
            o.targetResourceGroup = targetResourceGroup;
            o.type = type;
            return o;
        }
    }
}
