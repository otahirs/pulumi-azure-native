// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datafactory.outputs;

import com.pulumi.azurenative.datafactory.outputs.LinkedServiceReferenceResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Object;
import java.util.Objects;

@CustomType
public final class RedshiftUnloadSettingsResponse {
    /**
     * @return The bucket of the interim Amazon S3 which will be used to store the unloaded data from Amazon Redshift source. The bucket must be in the same region as the Amazon Redshift source. Type: string (or Expression with resultType string).
     * 
     */
    private Object bucketName;
    /**
     * @return The name of the Amazon S3 linked service which will be used for the unload operation when copying from the Amazon Redshift source.
     * 
     */
    private LinkedServiceReferenceResponse s3LinkedServiceName;

    private RedshiftUnloadSettingsResponse() {}
    /**
     * @return The bucket of the interim Amazon S3 which will be used to store the unloaded data from Amazon Redshift source. The bucket must be in the same region as the Amazon Redshift source. Type: string (or Expression with resultType string).
     * 
     */
    public Object bucketName() {
        return this.bucketName;
    }
    /**
     * @return The name of the Amazon S3 linked service which will be used for the unload operation when copying from the Amazon Redshift source.
     * 
     */
    public LinkedServiceReferenceResponse s3LinkedServiceName() {
        return this.s3LinkedServiceName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RedshiftUnloadSettingsResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Object bucketName;
        private LinkedServiceReferenceResponse s3LinkedServiceName;
        public Builder() {}
        public Builder(RedshiftUnloadSettingsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bucketName = defaults.bucketName;
    	      this.s3LinkedServiceName = defaults.s3LinkedServiceName;
        }

        @CustomType.Setter
        public Builder bucketName(Object bucketName) {
            this.bucketName = Objects.requireNonNull(bucketName);
            return this;
        }
        @CustomType.Setter
        public Builder s3LinkedServiceName(LinkedServiceReferenceResponse s3LinkedServiceName) {
            this.s3LinkedServiceName = Objects.requireNonNull(s3LinkedServiceName);
            return this;
        }
        public RedshiftUnloadSettingsResponse build() {
            final var o = new RedshiftUnloadSettingsResponse();
            o.bucketName = bucketName;
            o.s3LinkedServiceName = s3LinkedServiceName;
            return o;
        }
    }
}
