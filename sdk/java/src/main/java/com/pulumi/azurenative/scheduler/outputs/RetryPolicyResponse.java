// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.scheduler.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class RetryPolicyResponse {
    /**
     * @return Gets or sets the number of times a retry should be attempted.
     * 
     */
    private @Nullable Integer retryCount;
    /**
     * @return Gets or sets the retry interval between retries, specify duration in ISO 8601 format.
     * 
     */
    private @Nullable String retryInterval;
    /**
     * @return Gets or sets the retry strategy to be used.
     * 
     */
    private @Nullable String retryType;

    private RetryPolicyResponse() {}
    /**
     * @return Gets or sets the number of times a retry should be attempted.
     * 
     */
    public Optional<Integer> retryCount() {
        return Optional.ofNullable(this.retryCount);
    }
    /**
     * @return Gets or sets the retry interval between retries, specify duration in ISO 8601 format.
     * 
     */
    public Optional<String> retryInterval() {
        return Optional.ofNullable(this.retryInterval);
    }
    /**
     * @return Gets or sets the retry strategy to be used.
     * 
     */
    public Optional<String> retryType() {
        return Optional.ofNullable(this.retryType);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RetryPolicyResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer retryCount;
        private @Nullable String retryInterval;
        private @Nullable String retryType;
        public Builder() {}
        public Builder(RetryPolicyResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.retryCount = defaults.retryCount;
    	      this.retryInterval = defaults.retryInterval;
    	      this.retryType = defaults.retryType;
        }

        @CustomType.Setter
        public Builder retryCount(@Nullable Integer retryCount) {
            this.retryCount = retryCount;
            return this;
        }
        @CustomType.Setter
        public Builder retryInterval(@Nullable String retryInterval) {
            this.retryInterval = retryInterval;
            return this;
        }
        @CustomType.Setter
        public Builder retryType(@Nullable String retryType) {
            this.retryType = retryType;
            return this;
        }
        public RetryPolicyResponse build() {
            final var o = new RetryPolicyResponse();
            o.retryCount = retryCount;
            o.retryInterval = retryInterval;
            o.retryType = retryType;
            return o;
        }
    }
}
