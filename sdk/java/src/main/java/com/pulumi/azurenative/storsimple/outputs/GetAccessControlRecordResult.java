// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.storsimple.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetAccessControlRecordResult {
    /**
     * @return The path ID that uniquely identifies the object.
     * 
     */
    private String id;
    /**
     * @return The iSCSI initiator name (IQN).
     * 
     */
    private String initiatorName;
    /**
     * @return The Kind of the object. Currently only Series8000 is supported
     * 
     */
    private @Nullable String kind;
    /**
     * @return The name of the object.
     * 
     */
    private String name;
    /**
     * @return The hierarchical type of the object.
     * 
     */
    private String type;
    /**
     * @return The number of volumes using the access control record.
     * 
     */
    private Integer volumeCount;

    private GetAccessControlRecordResult() {}
    /**
     * @return The path ID that uniquely identifies the object.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The iSCSI initiator name (IQN).
     * 
     */
    public String initiatorName() {
        return this.initiatorName;
    }
    /**
     * @return The Kind of the object. Currently only Series8000 is supported
     * 
     */
    public Optional<String> kind() {
        return Optional.ofNullable(this.kind);
    }
    /**
     * @return The name of the object.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The hierarchical type of the object.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return The number of volumes using the access control record.
     * 
     */
    public Integer volumeCount() {
        return this.volumeCount;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAccessControlRecordResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private String initiatorName;
        private @Nullable String kind;
        private String name;
        private String type;
        private Integer volumeCount;
        public Builder() {}
        public Builder(GetAccessControlRecordResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.initiatorName = defaults.initiatorName;
    	      this.kind = defaults.kind;
    	      this.name = defaults.name;
    	      this.type = defaults.type;
    	      this.volumeCount = defaults.volumeCount;
        }

        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder initiatorName(String initiatorName) {
            this.initiatorName = Objects.requireNonNull(initiatorName);
            return this;
        }
        @CustomType.Setter
        public Builder kind(@Nullable String kind) {
            this.kind = kind;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder volumeCount(Integer volumeCount) {
            this.volumeCount = Objects.requireNonNull(volumeCount);
            return this;
        }
        public GetAccessControlRecordResult build() {
            final var o = new GetAccessControlRecordResult();
            o.id = id;
            o.initiatorName = initiatorName;
            o.kind = kind;
            o.name = name;
            o.type = type;
            o.volumeCount = volumeCount;
            return o;
        }
    }
}
