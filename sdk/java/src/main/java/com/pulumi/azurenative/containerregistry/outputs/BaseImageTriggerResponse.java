// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.containerregistry.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class BaseImageTriggerResponse {
    /**
     * @return The type of the auto trigger for base image dependency updates.
     * 
     */
    private String baseImageTriggerType;
    /**
     * @return The name of the trigger.
     * 
     */
    private String name;
    /**
     * @return The current status of trigger.
     * 
     */
    private @Nullable String status;
    /**
     * @return The endpoint URL for receiving update triggers.
     * 
     */
    private @Nullable String updateTriggerEndpoint;
    /**
     * @return Type of Payload body for Base image update triggers.
     * 
     */
    private @Nullable String updateTriggerPayloadType;

    private BaseImageTriggerResponse() {}
    /**
     * @return The type of the auto trigger for base image dependency updates.
     * 
     */
    public String baseImageTriggerType() {
        return this.baseImageTriggerType;
    }
    /**
     * @return The name of the trigger.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The current status of trigger.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }
    /**
     * @return The endpoint URL for receiving update triggers.
     * 
     */
    public Optional<String> updateTriggerEndpoint() {
        return Optional.ofNullable(this.updateTriggerEndpoint);
    }
    /**
     * @return Type of Payload body for Base image update triggers.
     * 
     */
    public Optional<String> updateTriggerPayloadType() {
        return Optional.ofNullable(this.updateTriggerPayloadType);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BaseImageTriggerResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String baseImageTriggerType;
        private String name;
        private @Nullable String status;
        private @Nullable String updateTriggerEndpoint;
        private @Nullable String updateTriggerPayloadType;
        public Builder() {}
        public Builder(BaseImageTriggerResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.baseImageTriggerType = defaults.baseImageTriggerType;
    	      this.name = defaults.name;
    	      this.status = defaults.status;
    	      this.updateTriggerEndpoint = defaults.updateTriggerEndpoint;
    	      this.updateTriggerPayloadType = defaults.updateTriggerPayloadType;
        }

        @CustomType.Setter
        public Builder baseImageTriggerType(String baseImageTriggerType) {
            this.baseImageTriggerType = Objects.requireNonNull(baseImageTriggerType);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder updateTriggerEndpoint(@Nullable String updateTriggerEndpoint) {
            this.updateTriggerEndpoint = updateTriggerEndpoint;
            return this;
        }
        @CustomType.Setter
        public Builder updateTriggerPayloadType(@Nullable String updateTriggerPayloadType) {
            this.updateTriggerPayloadType = updateTriggerPayloadType;
            return this;
        }
        public BaseImageTriggerResponse build() {
            final var o = new BaseImageTriggerResponse();
            o.baseImageTriggerType = baseImageTriggerType;
            o.name = name;
            o.status = status;
            o.updateTriggerEndpoint = updateTriggerEndpoint;
            o.updateTriggerPayloadType = updateTriggerPayloadType;
            return o;
        }
    }
}
