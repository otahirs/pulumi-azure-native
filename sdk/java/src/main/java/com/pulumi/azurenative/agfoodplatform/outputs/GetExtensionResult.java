// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.agfoodplatform.outputs;

import com.pulumi.azurenative.agfoodplatform.outputs.SystemDataResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetExtensionResult {
    /**
     * @return The ETag value to implement optimistic concurrency.
     * 
     */
    private String eTag;
    /**
     * @return Extension api docs link.
     * 
     */
    private String extensionApiDocsLink;
    /**
     * @return Extension auth link.
     * 
     */
    private String extensionAuthLink;
    /**
     * @return Extension category. e.g. weather/sensor/satellite.
     * 
     */
    private String extensionCategory;
    /**
     * @return Extension Id.
     * 
     */
    private String extensionId;
    /**
     * @return Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    private String id;
    /**
     * @return Installed extension version.
     * 
     */
    private String installedExtensionVersion;
    /**
     * @return The name of the resource
     * 
     */
    private String name;
    /**
     * @return Metadata pertaining to creation and last modification of the resource.
     * 
     */
    private SystemDataResponse systemData;
    /**
     * @return The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    private String type;

    private GetExtensionResult() {}
    /**
     * @return The ETag value to implement optimistic concurrency.
     * 
     */
    public String eTag() {
        return this.eTag;
    }
    /**
     * @return Extension api docs link.
     * 
     */
    public String extensionApiDocsLink() {
        return this.extensionApiDocsLink;
    }
    /**
     * @return Extension auth link.
     * 
     */
    public String extensionAuthLink() {
        return this.extensionAuthLink;
    }
    /**
     * @return Extension category. e.g. weather/sensor/satellite.
     * 
     */
    public String extensionCategory() {
        return this.extensionCategory;
    }
    /**
     * @return Extension Id.
     * 
     */
    public String extensionId() {
        return this.extensionId;
    }
    /**
     * @return Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Installed extension version.
     * 
     */
    public String installedExtensionVersion() {
        return this.installedExtensionVersion;
    }
    /**
     * @return The name of the resource
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Metadata pertaining to creation and last modification of the resource.
     * 
     */
    public SystemDataResponse systemData() {
        return this.systemData;
    }
    /**
     * @return The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetExtensionResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String eTag;
        private String extensionApiDocsLink;
        private String extensionAuthLink;
        private String extensionCategory;
        private String extensionId;
        private String id;
        private String installedExtensionVersion;
        private String name;
        private SystemDataResponse systemData;
        private String type;
        public Builder() {}
        public Builder(GetExtensionResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.eTag = defaults.eTag;
    	      this.extensionApiDocsLink = defaults.extensionApiDocsLink;
    	      this.extensionAuthLink = defaults.extensionAuthLink;
    	      this.extensionCategory = defaults.extensionCategory;
    	      this.extensionId = defaults.extensionId;
    	      this.id = defaults.id;
    	      this.installedExtensionVersion = defaults.installedExtensionVersion;
    	      this.name = defaults.name;
    	      this.systemData = defaults.systemData;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder eTag(String eTag) {
            this.eTag = Objects.requireNonNull(eTag);
            return this;
        }
        @CustomType.Setter
        public Builder extensionApiDocsLink(String extensionApiDocsLink) {
            this.extensionApiDocsLink = Objects.requireNonNull(extensionApiDocsLink);
            return this;
        }
        @CustomType.Setter
        public Builder extensionAuthLink(String extensionAuthLink) {
            this.extensionAuthLink = Objects.requireNonNull(extensionAuthLink);
            return this;
        }
        @CustomType.Setter
        public Builder extensionCategory(String extensionCategory) {
            this.extensionCategory = Objects.requireNonNull(extensionCategory);
            return this;
        }
        @CustomType.Setter
        public Builder extensionId(String extensionId) {
            this.extensionId = Objects.requireNonNull(extensionId);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder installedExtensionVersion(String installedExtensionVersion) {
            this.installedExtensionVersion = Objects.requireNonNull(installedExtensionVersion);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder systemData(SystemDataResponse systemData) {
            this.systemData = Objects.requireNonNull(systemData);
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetExtensionResult build() {
            final var o = new GetExtensionResult();
            o.eTag = eTag;
            o.extensionApiDocsLink = extensionApiDocsLink;
            o.extensionAuthLink = extensionAuthLink;
            o.extensionCategory = extensionCategory;
            o.extensionId = extensionId;
            o.id = id;
            o.installedExtensionVersion = installedExtensionVersion;
            o.name = name;
            o.systemData = systemData;
            o.type = type;
            return o;
        }
    }
}
