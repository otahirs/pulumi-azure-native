// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datamigration.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class MigrationValidationOptionsResponse {
    /**
     * @return Allows to perform a checksum based data integrity validation between source and target for the selected database / tables .
     * 
     */
    private @Nullable Boolean enableDataIntegrityValidation;
    /**
     * @return Allows to perform a quick and intelligent query analysis by retrieving queries from the source database and executes them in the target. The result will have execution statistics for executions in source and target databases for the extracted queries.
     * 
     */
    private @Nullable Boolean enableQueryAnalysisValidation;
    /**
     * @return Allows to compare the schema information between source and target.
     * 
     */
    private @Nullable Boolean enableSchemaValidation;

    private MigrationValidationOptionsResponse() {}
    /**
     * @return Allows to perform a checksum based data integrity validation between source and target for the selected database / tables .
     * 
     */
    public Optional<Boolean> enableDataIntegrityValidation() {
        return Optional.ofNullable(this.enableDataIntegrityValidation);
    }
    /**
     * @return Allows to perform a quick and intelligent query analysis by retrieving queries from the source database and executes them in the target. The result will have execution statistics for executions in source and target databases for the extracted queries.
     * 
     */
    public Optional<Boolean> enableQueryAnalysisValidation() {
        return Optional.ofNullable(this.enableQueryAnalysisValidation);
    }
    /**
     * @return Allows to compare the schema information between source and target.
     * 
     */
    public Optional<Boolean> enableSchemaValidation() {
        return Optional.ofNullable(this.enableSchemaValidation);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MigrationValidationOptionsResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean enableDataIntegrityValidation;
        private @Nullable Boolean enableQueryAnalysisValidation;
        private @Nullable Boolean enableSchemaValidation;
        public Builder() {}
        public Builder(MigrationValidationOptionsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enableDataIntegrityValidation = defaults.enableDataIntegrityValidation;
    	      this.enableQueryAnalysisValidation = defaults.enableQueryAnalysisValidation;
    	      this.enableSchemaValidation = defaults.enableSchemaValidation;
        }

        @CustomType.Setter
        public Builder enableDataIntegrityValidation(@Nullable Boolean enableDataIntegrityValidation) {
            this.enableDataIntegrityValidation = enableDataIntegrityValidation;
            return this;
        }
        @CustomType.Setter
        public Builder enableQueryAnalysisValidation(@Nullable Boolean enableQueryAnalysisValidation) {
            this.enableQueryAnalysisValidation = enableQueryAnalysisValidation;
            return this;
        }
        @CustomType.Setter
        public Builder enableSchemaValidation(@Nullable Boolean enableSchemaValidation) {
            this.enableSchemaValidation = enableSchemaValidation;
            return this;
        }
        public MigrationValidationOptionsResponse build() {
            final var o = new MigrationValidationOptionsResponse();
            o.enableDataIntegrityValidation = enableDataIntegrityValidation;
            o.enableQueryAnalysisValidation = enableQueryAnalysisValidation;
            o.enableSchemaValidation = enableSchemaValidation;
            return o;
        }
    }
}
