// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.redhatopenshift.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class WorkerProfileResponse {
    /**
     * @return The number of worker VMs.  Must be between 3 and 20 (immutable).
     * 
     */
    private @Nullable Integer count;
    /**
     * @return The disk size of the worker VMs.  Must be 128 or greater (immutable).
     * 
     */
    private @Nullable Integer diskSizeGB;
    /**
     * @return The worker profile name.  Must be &#34;worker&#34; (immutable).
     * 
     */
    private @Nullable String name;
    /**
     * @return The Azure resource ID of the worker subnet (immutable).
     * 
     */
    private @Nullable String subnetId;
    /**
     * @return The size of the worker VMs (immutable).
     * 
     */
    private @Nullable String vmSize;

    private WorkerProfileResponse() {}
    /**
     * @return The number of worker VMs.  Must be between 3 and 20 (immutable).
     * 
     */
    public Optional<Integer> count() {
        return Optional.ofNullable(this.count);
    }
    /**
     * @return The disk size of the worker VMs.  Must be 128 or greater (immutable).
     * 
     */
    public Optional<Integer> diskSizeGB() {
        return Optional.ofNullable(this.diskSizeGB);
    }
    /**
     * @return The worker profile name.  Must be &#34;worker&#34; (immutable).
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return The Azure resource ID of the worker subnet (immutable).
     * 
     */
    public Optional<String> subnetId() {
        return Optional.ofNullable(this.subnetId);
    }
    /**
     * @return The size of the worker VMs (immutable).
     * 
     */
    public Optional<String> vmSize() {
        return Optional.ofNullable(this.vmSize);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WorkerProfileResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer count;
        private @Nullable Integer diskSizeGB;
        private @Nullable String name;
        private @Nullable String subnetId;
        private @Nullable String vmSize;
        public Builder() {}
        public Builder(WorkerProfileResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.count = defaults.count;
    	      this.diskSizeGB = defaults.diskSizeGB;
    	      this.name = defaults.name;
    	      this.subnetId = defaults.subnetId;
    	      this.vmSize = defaults.vmSize;
        }

        @CustomType.Setter
        public Builder count(@Nullable Integer count) {
            this.count = count;
            return this;
        }
        @CustomType.Setter
        public Builder diskSizeGB(@Nullable Integer diskSizeGB) {
            this.diskSizeGB = diskSizeGB;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder subnetId(@Nullable String subnetId) {
            this.subnetId = subnetId;
            return this;
        }
        @CustomType.Setter
        public Builder vmSize(@Nullable String vmSize) {
            this.vmSize = vmSize;
            return this;
        }
        public WorkerProfileResponse build() {
            final var o = new WorkerProfileResponse();
            o.count = count;
            o.diskSizeGB = diskSizeGB;
            o.name = name;
            o.subnetId = subnetId;
            o.vmSize = vmSize;
            return o;
        }
    }
}
