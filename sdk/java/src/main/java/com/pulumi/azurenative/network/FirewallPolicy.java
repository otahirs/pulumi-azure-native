// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network;

import com.pulumi.azurenative.Utilities;
import com.pulumi.azurenative.network.FirewallPolicyArgs;
import com.pulumi.azurenative.network.outputs.DnsSettingsResponse;
import com.pulumi.azurenative.network.outputs.FirewallPolicyInsightsResponse;
import com.pulumi.azurenative.network.outputs.FirewallPolicyIntrusionDetectionResponse;
import com.pulumi.azurenative.network.outputs.FirewallPolicySNATResponse;
import com.pulumi.azurenative.network.outputs.FirewallPolicySkuResponse;
import com.pulumi.azurenative.network.outputs.FirewallPolicyThreatIntelWhitelistResponse;
import com.pulumi.azurenative.network.outputs.FirewallPolicyTransportSecurityResponse;
import com.pulumi.azurenative.network.outputs.ManagedServiceIdentityResponse;
import com.pulumi.azurenative.network.outputs.SubResourceResponse;
import com.pulumi.core.Alias;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * FirewallPolicy Resource.
 * API Version: 2020-11-01.
 * 
 * ## Example Usage
 * ### Create FirewallPolicy
 * 
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var firewallPolicy = new FirewallPolicy(&#34;firewallPolicy&#34;, FirewallPolicyArgs.builder()        
 *             .dnsSettings(Map.ofEntries(
 *                 Map.entry(&#34;enableProxy&#34;, true),
 *                 Map.entry(&#34;requireProxyForNetworkRules&#34;, false),
 *                 Map.entry(&#34;servers&#34;, &#34;30.3.4.5&#34;)
 *             ))
 *             .firewallPolicyName(&#34;firewallPolicy&#34;)
 *             .insights(Map.ofEntries(
 *                 Map.entry(&#34;isEnabled&#34;, true),
 *                 Map.entry(&#34;logAnalyticsResources&#34;, Map.ofEntries(
 *                     Map.entry(&#34;defaultWorkspaceId&#34;, Map.of(&#34;id&#34;, &#34;/subscriptions/subid/resourcegroups/rg1/providers/microsoft.operationalinsights/workspaces/defaultWorkspace&#34;)),
 *                     Map.entry(&#34;workspaces&#34;,                     
 *                         Map.ofEntries(
 *                             Map.entry(&#34;region&#34;, &#34;westus&#34;),
 *                             Map.entry(&#34;workspaceId&#34;, Map.of(&#34;id&#34;, &#34;/subscriptions/subid/resourcegroups/rg1/providers/microsoft.operationalinsights/workspaces/workspace1&#34;))
 *                         ),
 *                         Map.ofEntries(
 *                             Map.entry(&#34;region&#34;, &#34;eastus&#34;),
 *                             Map.entry(&#34;workspaceId&#34;, Map.of(&#34;id&#34;, &#34;/subscriptions/subid/resourcegroups/rg1/providers/microsoft.operationalinsights/workspaces/workspace2&#34;))
 *                         ))
 *                 )),
 *                 Map.entry(&#34;retentionDays&#34;, 100)
 *             ))
 *             .intrusionDetection(Map.ofEntries(
 *                 Map.entry(&#34;configuration&#34;, Map.ofEntries(
 *                     Map.entry(&#34;bypassTrafficSettings&#34;, Map.ofEntries(
 *                         Map.entry(&#34;description&#34;, &#34;Rule 1&#34;),
 *                         Map.entry(&#34;destinationAddresses&#34;, &#34;5.6.7.8&#34;),
 *                         Map.entry(&#34;destinationPorts&#34;, &#34;*&#34;),
 *                         Map.entry(&#34;name&#34;, &#34;bypassRule1&#34;),
 *                         Map.entry(&#34;protocol&#34;, &#34;TCP&#34;),
 *                         Map.entry(&#34;sourceAddresses&#34;, &#34;1.2.3.4&#34;)
 *                     )),
 *                     Map.entry(&#34;signatureOverrides&#34;, Map.ofEntries(
 *                         Map.entry(&#34;id&#34;, &#34;2525004&#34;),
 *                         Map.entry(&#34;mode&#34;, &#34;Deny&#34;)
 *                     ))
 *                 )),
 *                 Map.entry(&#34;mode&#34;, &#34;Alert&#34;)
 *             ))
 *             .location(&#34;West US&#34;)
 *             .resourceGroupName(&#34;rg1&#34;)
 *             .sku(Map.of(&#34;tier&#34;, &#34;Premium&#34;))
 *             .snat(Map.of(&#34;privateRanges&#34;, &#34;IANAPrivateRanges&#34;))
 *             .tags(Map.of(&#34;key1&#34;, &#34;value1&#34;))
 *             .threatIntelMode(&#34;Alert&#34;)
 *             .threatIntelWhitelist(Map.ofEntries(
 *                 Map.entry(&#34;fqdns&#34;, &#34;*.microsoft.com&#34;),
 *                 Map.entry(&#34;ipAddresses&#34;, &#34;20.3.4.5&#34;)
 *             ))
 *             .transportSecurity(Map.of(&#34;certificateAuthority&#34;, Map.ofEntries(
 *                 Map.entry(&#34;keyVaultSecretId&#34;, &#34;https://kv/secret&#34;),
 *                 Map.entry(&#34;name&#34;, &#34;clientcert&#34;)
 *             )))
 *             .build());
 * 
 *     }
 * }
 * 
 * ```
 * 
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:network:FirewallPolicy firewallPolicy /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/firewallPolicies/firewallPolicy 
 * ```
 * 
 */
@ResourceType(type="azure-native:network:FirewallPolicy")
public class FirewallPolicy extends com.pulumi.resources.CustomResource {
    /**
     * The parent firewall policy from which rules are inherited.
     * 
     */
    @Export(name="basePolicy", type=SubResourceResponse.class, parameters={})
    private Output</* @Nullable */ SubResourceResponse> basePolicy;

    /**
     * @return The parent firewall policy from which rules are inherited.
     * 
     */
    public Output<Optional<SubResourceResponse>> basePolicy() {
        return Codegen.optional(this.basePolicy);
    }
    /**
     * List of references to Child Firewall Policies.
     * 
     */
    @Export(name="childPolicies", type=List.class, parameters={SubResourceResponse.class})
    private Output<List<SubResourceResponse>> childPolicies;

    /**
     * @return List of references to Child Firewall Policies.
     * 
     */
    public Output<List<SubResourceResponse>> childPolicies() {
        return this.childPolicies;
    }
    /**
     * DNS Proxy Settings definition.
     * 
     */
    @Export(name="dnsSettings", type=DnsSettingsResponse.class, parameters={})
    private Output</* @Nullable */ DnsSettingsResponse> dnsSettings;

    /**
     * @return DNS Proxy Settings definition.
     * 
     */
    public Output<Optional<DnsSettingsResponse>> dnsSettings() {
        return Codegen.optional(this.dnsSettings);
    }
    /**
     * A unique read-only string that changes whenever the resource is updated.
     * 
     */
    @Export(name="etag", type=String.class, parameters={})
    private Output<String> etag;

    /**
     * @return A unique read-only string that changes whenever the resource is updated.
     * 
     */
    public Output<String> etag() {
        return this.etag;
    }
    /**
     * List of references to Azure Firewalls that this Firewall Policy is associated with.
     * 
     */
    @Export(name="firewalls", type=List.class, parameters={SubResourceResponse.class})
    private Output<List<SubResourceResponse>> firewalls;

    /**
     * @return List of references to Azure Firewalls that this Firewall Policy is associated with.
     * 
     */
    public Output<List<SubResourceResponse>> firewalls() {
        return this.firewalls;
    }
    /**
     * The identity of the firewall policy.
     * 
     */
    @Export(name="identity", type=ManagedServiceIdentityResponse.class, parameters={})
    private Output</* @Nullable */ ManagedServiceIdentityResponse> identity;

    /**
     * @return The identity of the firewall policy.
     * 
     */
    public Output<Optional<ManagedServiceIdentityResponse>> identity() {
        return Codegen.optional(this.identity);
    }
    /**
     * Insights on Firewall Policy.
     * 
     */
    @Export(name="insights", type=FirewallPolicyInsightsResponse.class, parameters={})
    private Output</* @Nullable */ FirewallPolicyInsightsResponse> insights;

    /**
     * @return Insights on Firewall Policy.
     * 
     */
    public Output<Optional<FirewallPolicyInsightsResponse>> insights() {
        return Codegen.optional(this.insights);
    }
    /**
     * The configuration for Intrusion detection.
     * 
     */
    @Export(name="intrusionDetection", type=FirewallPolicyIntrusionDetectionResponse.class, parameters={})
    private Output</* @Nullable */ FirewallPolicyIntrusionDetectionResponse> intrusionDetection;

    /**
     * @return The configuration for Intrusion detection.
     * 
     */
    public Output<Optional<FirewallPolicyIntrusionDetectionResponse>> intrusionDetection() {
        return Codegen.optional(this.intrusionDetection);
    }
    /**
     * Resource location.
     * 
     */
    @Export(name="location", type=String.class, parameters={})
    private Output</* @Nullable */ String> location;

    /**
     * @return Resource location.
     * 
     */
    public Output<Optional<String>> location() {
        return Codegen.optional(this.location);
    }
    /**
     * Resource name.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Resource name.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The provisioning state of the firewall policy resource.
     * 
     */
    @Export(name="provisioningState", type=String.class, parameters={})
    private Output<String> provisioningState;

    /**
     * @return The provisioning state of the firewall policy resource.
     * 
     */
    public Output<String> provisioningState() {
        return this.provisioningState;
    }
    /**
     * List of references to FirewallPolicyRuleCollectionGroups.
     * 
     */
    @Export(name="ruleCollectionGroups", type=List.class, parameters={SubResourceResponse.class})
    private Output<List<SubResourceResponse>> ruleCollectionGroups;

    /**
     * @return List of references to FirewallPolicyRuleCollectionGroups.
     * 
     */
    public Output<List<SubResourceResponse>> ruleCollectionGroups() {
        return this.ruleCollectionGroups;
    }
    /**
     * The Firewall Policy SKU.
     * 
     */
    @Export(name="sku", type=FirewallPolicySkuResponse.class, parameters={})
    private Output</* @Nullable */ FirewallPolicySkuResponse> sku;

    /**
     * @return The Firewall Policy SKU.
     * 
     */
    public Output<Optional<FirewallPolicySkuResponse>> sku() {
        return Codegen.optional(this.sku);
    }
    /**
     * The private IP addresses/IP ranges to which traffic will not be SNAT.
     * 
     */
    @Export(name="snat", type=FirewallPolicySNATResponse.class, parameters={})
    private Output</* @Nullable */ FirewallPolicySNATResponse> snat;

    /**
     * @return The private IP addresses/IP ranges to which traffic will not be SNAT.
     * 
     */
    public Output<Optional<FirewallPolicySNATResponse>> snat() {
        return Codegen.optional(this.snat);
    }
    /**
     * Resource tags.
     * 
     */
    @Export(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return Resource tags.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * The operation mode for Threat Intelligence.
     * 
     */
    @Export(name="threatIntelMode", type=String.class, parameters={})
    private Output</* @Nullable */ String> threatIntelMode;

    /**
     * @return The operation mode for Threat Intelligence.
     * 
     */
    public Output<Optional<String>> threatIntelMode() {
        return Codegen.optional(this.threatIntelMode);
    }
    /**
     * ThreatIntel Whitelist for Firewall Policy.
     * 
     */
    @Export(name="threatIntelWhitelist", type=FirewallPolicyThreatIntelWhitelistResponse.class, parameters={})
    private Output</* @Nullable */ FirewallPolicyThreatIntelWhitelistResponse> threatIntelWhitelist;

    /**
     * @return ThreatIntel Whitelist for Firewall Policy.
     * 
     */
    public Output<Optional<FirewallPolicyThreatIntelWhitelistResponse>> threatIntelWhitelist() {
        return Codegen.optional(this.threatIntelWhitelist);
    }
    /**
     * TLS Configuration definition.
     * 
     */
    @Export(name="transportSecurity", type=FirewallPolicyTransportSecurityResponse.class, parameters={})
    private Output</* @Nullable */ FirewallPolicyTransportSecurityResponse> transportSecurity;

    /**
     * @return TLS Configuration definition.
     * 
     */
    public Output<Optional<FirewallPolicyTransportSecurityResponse>> transportSecurity() {
        return Codegen.optional(this.transportSecurity);
    }
    /**
     * Resource type.
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return Resource type.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public FirewallPolicy(String name) {
        this(name, FirewallPolicyArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public FirewallPolicy(String name, FirewallPolicyArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public FirewallPolicy(String name, FirewallPolicyArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:network:FirewallPolicy", name, args == null ? FirewallPolicyArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private FirewallPolicy(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:network:FirewallPolicy", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("azure-native:network/v20190601:FirewallPolicy").build()),
                Output.of(Alias.builder().type("azure-native:network/v20190701:FirewallPolicy").build()),
                Output.of(Alias.builder().type("azure-native:network/v20190801:FirewallPolicy").build()),
                Output.of(Alias.builder().type("azure-native:network/v20190901:FirewallPolicy").build()),
                Output.of(Alias.builder().type("azure-native:network/v20191101:FirewallPolicy").build()),
                Output.of(Alias.builder().type("azure-native:network/v20191201:FirewallPolicy").build()),
                Output.of(Alias.builder().type("azure-native:network/v20200301:FirewallPolicy").build()),
                Output.of(Alias.builder().type("azure-native:network/v20200401:FirewallPolicy").build()),
                Output.of(Alias.builder().type("azure-native:network/v20200501:FirewallPolicy").build()),
                Output.of(Alias.builder().type("azure-native:network/v20200601:FirewallPolicy").build()),
                Output.of(Alias.builder().type("azure-native:network/v20200701:FirewallPolicy").build()),
                Output.of(Alias.builder().type("azure-native:network/v20200801:FirewallPolicy").build()),
                Output.of(Alias.builder().type("azure-native:network/v20201101:FirewallPolicy").build()),
                Output.of(Alias.builder().type("azure-native:network/v20210201:FirewallPolicy").build()),
                Output.of(Alias.builder().type("azure-native:network/v20210301:FirewallPolicy").build()),
                Output.of(Alias.builder().type("azure-native:network/v20210501:FirewallPolicy").build()),
                Output.of(Alias.builder().type("azure-native:network/v20210801:FirewallPolicy").build()),
                Output.of(Alias.builder().type("azure-native:network/v20220101:FirewallPolicy").build())
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static FirewallPolicy get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new FirewallPolicy(name, id, options);
    }
}
