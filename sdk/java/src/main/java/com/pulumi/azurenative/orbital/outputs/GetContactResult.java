// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.orbital.outputs;

import com.pulumi.azurenative.orbital.outputs.ResourceReferenceResponse;
import com.pulumi.azurenative.orbital.outputs.SystemDataResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetContactResult {
    /**
     * @return The reference to the contact profile resource.
     * 
     */
    private ResourceReferenceResponse contactProfile;
    /**
     * @return Azimuth of the antenna at the end of the contact in decimal degrees.
     * 
     */
    private Double endAzimuthDegrees;
    /**
     * @return Spacecraft elevation above the horizon at contact end.
     * 
     */
    private Double endElevationDegrees;
    /**
     * @return Any error message while scheduling a contact.
     * 
     */
    private String errorMessage;
    /**
     * @return A unique read-only string that changes whenever the resource is updated.
     * 
     */
    private String etag;
    /**
     * @return Azure Ground Station name.
     * 
     */
    private String groundStationName;
    /**
     * @return Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    private String id;
    /**
     * @return Maximum elevation of the antenna during the contact in decimal degrees.
     * 
     */
    private Double maximumElevationDegrees;
    /**
     * @return The name of the resource
     * 
     */
    private String name;
    /**
     * @return Reservation end time of a contact.
     * 
     */
    private String reservationEndTime;
    /**
     * @return Reservation start time of a contact.
     * 
     */
    private String reservationStartTime;
    /**
     * @return Receive end time of a contact.
     * 
     */
    private String rxEndTime;
    /**
     * @return Receive start time of a contact.
     * 
     */
    private String rxStartTime;
    /**
     * @return Azimuth of the antenna at the start of the contact in decimal degrees.
     * 
     */
    private Double startAzimuthDegrees;
    /**
     * @return Spacecraft elevation above the horizon at contact start.
     * 
     */
    private Double startElevationDegrees;
    /**
     * @return Status of a contact.
     * 
     */
    private String status;
    /**
     * @return Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     */
    private SystemDataResponse systemData;
    /**
     * @return Transmit end time of a contact.
     * 
     */
    private String txEndTime;
    /**
     * @return Transmit start time of a contact.
     * 
     */
    private String txStartTime;
    /**
     * @return The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    private String type;

    private GetContactResult() {}
    /**
     * @return The reference to the contact profile resource.
     * 
     */
    public ResourceReferenceResponse contactProfile() {
        return this.contactProfile;
    }
    /**
     * @return Azimuth of the antenna at the end of the contact in decimal degrees.
     * 
     */
    public Double endAzimuthDegrees() {
        return this.endAzimuthDegrees;
    }
    /**
     * @return Spacecraft elevation above the horizon at contact end.
     * 
     */
    public Double endElevationDegrees() {
        return this.endElevationDegrees;
    }
    /**
     * @return Any error message while scheduling a contact.
     * 
     */
    public String errorMessage() {
        return this.errorMessage;
    }
    /**
     * @return A unique read-only string that changes whenever the resource is updated.
     * 
     */
    public String etag() {
        return this.etag;
    }
    /**
     * @return Azure Ground Station name.
     * 
     */
    public String groundStationName() {
        return this.groundStationName;
    }
    /**
     * @return Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Maximum elevation of the antenna during the contact in decimal degrees.
     * 
     */
    public Double maximumElevationDegrees() {
        return this.maximumElevationDegrees;
    }
    /**
     * @return The name of the resource
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Reservation end time of a contact.
     * 
     */
    public String reservationEndTime() {
        return this.reservationEndTime;
    }
    /**
     * @return Reservation start time of a contact.
     * 
     */
    public String reservationStartTime() {
        return this.reservationStartTime;
    }
    /**
     * @return Receive end time of a contact.
     * 
     */
    public String rxEndTime() {
        return this.rxEndTime;
    }
    /**
     * @return Receive start time of a contact.
     * 
     */
    public String rxStartTime() {
        return this.rxStartTime;
    }
    /**
     * @return Azimuth of the antenna at the start of the contact in decimal degrees.
     * 
     */
    public Double startAzimuthDegrees() {
        return this.startAzimuthDegrees;
    }
    /**
     * @return Spacecraft elevation above the horizon at contact start.
     * 
     */
    public Double startElevationDegrees() {
        return this.startElevationDegrees;
    }
    /**
     * @return Status of a contact.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     */
    public SystemDataResponse systemData() {
        return this.systemData;
    }
    /**
     * @return Transmit end time of a contact.
     * 
     */
    public String txEndTime() {
        return this.txEndTime;
    }
    /**
     * @return Transmit start time of a contact.
     * 
     */
    public String txStartTime() {
        return this.txStartTime;
    }
    /**
     * @return The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetContactResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private ResourceReferenceResponse contactProfile;
        private Double endAzimuthDegrees;
        private Double endElevationDegrees;
        private String errorMessage;
        private String etag;
        private String groundStationName;
        private String id;
        private Double maximumElevationDegrees;
        private String name;
        private String reservationEndTime;
        private String reservationStartTime;
        private String rxEndTime;
        private String rxStartTime;
        private Double startAzimuthDegrees;
        private Double startElevationDegrees;
        private String status;
        private SystemDataResponse systemData;
        private String txEndTime;
        private String txStartTime;
        private String type;
        public Builder() {}
        public Builder(GetContactResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.contactProfile = defaults.contactProfile;
    	      this.endAzimuthDegrees = defaults.endAzimuthDegrees;
    	      this.endElevationDegrees = defaults.endElevationDegrees;
    	      this.errorMessage = defaults.errorMessage;
    	      this.etag = defaults.etag;
    	      this.groundStationName = defaults.groundStationName;
    	      this.id = defaults.id;
    	      this.maximumElevationDegrees = defaults.maximumElevationDegrees;
    	      this.name = defaults.name;
    	      this.reservationEndTime = defaults.reservationEndTime;
    	      this.reservationStartTime = defaults.reservationStartTime;
    	      this.rxEndTime = defaults.rxEndTime;
    	      this.rxStartTime = defaults.rxStartTime;
    	      this.startAzimuthDegrees = defaults.startAzimuthDegrees;
    	      this.startElevationDegrees = defaults.startElevationDegrees;
    	      this.status = defaults.status;
    	      this.systemData = defaults.systemData;
    	      this.txEndTime = defaults.txEndTime;
    	      this.txStartTime = defaults.txStartTime;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder contactProfile(ResourceReferenceResponse contactProfile) {
            this.contactProfile = Objects.requireNonNull(contactProfile);
            return this;
        }
        @CustomType.Setter
        public Builder endAzimuthDegrees(Double endAzimuthDegrees) {
            this.endAzimuthDegrees = Objects.requireNonNull(endAzimuthDegrees);
            return this;
        }
        @CustomType.Setter
        public Builder endElevationDegrees(Double endElevationDegrees) {
            this.endElevationDegrees = Objects.requireNonNull(endElevationDegrees);
            return this;
        }
        @CustomType.Setter
        public Builder errorMessage(String errorMessage) {
            this.errorMessage = Objects.requireNonNull(errorMessage);
            return this;
        }
        @CustomType.Setter
        public Builder etag(String etag) {
            this.etag = Objects.requireNonNull(etag);
            return this;
        }
        @CustomType.Setter
        public Builder groundStationName(String groundStationName) {
            this.groundStationName = Objects.requireNonNull(groundStationName);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder maximumElevationDegrees(Double maximumElevationDegrees) {
            this.maximumElevationDegrees = Objects.requireNonNull(maximumElevationDegrees);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder reservationEndTime(String reservationEndTime) {
            this.reservationEndTime = Objects.requireNonNull(reservationEndTime);
            return this;
        }
        @CustomType.Setter
        public Builder reservationStartTime(String reservationStartTime) {
            this.reservationStartTime = Objects.requireNonNull(reservationStartTime);
            return this;
        }
        @CustomType.Setter
        public Builder rxEndTime(String rxEndTime) {
            this.rxEndTime = Objects.requireNonNull(rxEndTime);
            return this;
        }
        @CustomType.Setter
        public Builder rxStartTime(String rxStartTime) {
            this.rxStartTime = Objects.requireNonNull(rxStartTime);
            return this;
        }
        @CustomType.Setter
        public Builder startAzimuthDegrees(Double startAzimuthDegrees) {
            this.startAzimuthDegrees = Objects.requireNonNull(startAzimuthDegrees);
            return this;
        }
        @CustomType.Setter
        public Builder startElevationDegrees(Double startElevationDegrees) {
            this.startElevationDegrees = Objects.requireNonNull(startElevationDegrees);
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        @CustomType.Setter
        public Builder systemData(SystemDataResponse systemData) {
            this.systemData = Objects.requireNonNull(systemData);
            return this;
        }
        @CustomType.Setter
        public Builder txEndTime(String txEndTime) {
            this.txEndTime = Objects.requireNonNull(txEndTime);
            return this;
        }
        @CustomType.Setter
        public Builder txStartTime(String txStartTime) {
            this.txStartTime = Objects.requireNonNull(txStartTime);
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetContactResult build() {
            final var o = new GetContactResult();
            o.contactProfile = contactProfile;
            o.endAzimuthDegrees = endAzimuthDegrees;
            o.endElevationDegrees = endElevationDegrees;
            o.errorMessage = errorMessage;
            o.etag = etag;
            o.groundStationName = groundStationName;
            o.id = id;
            o.maximumElevationDegrees = maximumElevationDegrees;
            o.name = name;
            o.reservationEndTime = reservationEndTime;
            o.reservationStartTime = reservationStartTime;
            o.rxEndTime = rxEndTime;
            o.rxStartTime = rxStartTime;
            o.startAzimuthDegrees = startAzimuthDegrees;
            o.startElevationDegrees = startElevationDegrees;
            o.status = status;
            o.systemData = systemData;
            o.txEndTime = txEndTime;
            o.txStartTime = txStartTime;
            o.type = type;
            return o;
        }
    }
}
