// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.healthcareapis;

import com.pulumi.azurenative.Utilities;
import com.pulumi.azurenative.healthcareapis.FhirServiceArgs;
import com.pulumi.azurenative.healthcareapis.outputs.FhirServiceAccessPolicyEntryResponse;
import com.pulumi.azurenative.healthcareapis.outputs.FhirServiceAcrConfigurationResponse;
import com.pulumi.azurenative.healthcareapis.outputs.FhirServiceAuthenticationConfigurationResponse;
import com.pulumi.azurenative.healthcareapis.outputs.FhirServiceCorsConfigurationResponse;
import com.pulumi.azurenative.healthcareapis.outputs.FhirServiceExportConfigurationResponse;
import com.pulumi.azurenative.healthcareapis.outputs.PrivateEndpointConnectionResponse;
import com.pulumi.azurenative.healthcareapis.outputs.ResourceVersionPolicyConfigurationResponse;
import com.pulumi.azurenative.healthcareapis.outputs.ServiceManagedIdentityResponseIdentity;
import com.pulumi.azurenative.healthcareapis.outputs.SystemDataResponse;
import com.pulumi.core.Alias;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * The description of Fhir Service
 * API Version: 2022-05-15.
 * 
 * ## Example Usage
 * ### Create or update a Fhir Service
 * 
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var fhirService = new FhirService(&#34;fhirService&#34;, FhirServiceArgs.builder()        
 *             .accessPolicies(            
 *                 Map.of(&#34;objectId&#34;, &#34;c487e7d1-3210-41a3-8ccc-e9372b78da47&#34;),
 *                 Map.of(&#34;objectId&#34;, &#34;5b307da8-43d4-492b-8b66-b0294ade872f&#34;))
 *             .acrConfiguration(Map.of(&#34;loginServers&#34;, &#34;test1.azurecr.io&#34;))
 *             .authenticationConfiguration(Map.ofEntries(
 *                 Map.entry(&#34;audience&#34;, &#34;https://azurehealthcareapis.com&#34;),
 *                 Map.entry(&#34;authority&#34;, &#34;https://login.microsoftonline.com/abfde7b2-df0f-47e6-aabf-2462b07508dc&#34;),
 *                 Map.entry(&#34;smartProxyEnabled&#34;, true)
 *             ))
 *             .corsConfiguration(Map.ofEntries(
 *                 Map.entry(&#34;allowCredentials&#34;, false),
 *                 Map.entry(&#34;headers&#34;, &#34;*&#34;),
 *                 Map.entry(&#34;maxAge&#34;, 1440),
 *                 Map.entry(&#34;methods&#34;,                 
 *                     &#34;DELETE&#34;,
 *                     &#34;GET&#34;,
 *                     &#34;OPTIONS&#34;,
 *                     &#34;PATCH&#34;,
 *                     &#34;POST&#34;,
 *                     &#34;PUT&#34;),
 *                 Map.entry(&#34;origins&#34;, &#34;*&#34;)
 *             ))
 *             .exportConfiguration(Map.of(&#34;storageAccountName&#34;, &#34;existingStorageAccount&#34;))
 *             .fhirServiceName(&#34;fhirservice1&#34;)
 *             .identity(Map.of(&#34;type&#34;, &#34;SystemAssigned&#34;))
 *             .kind(&#34;fhir-R4&#34;)
 *             .location(&#34;westus&#34;)
 *             .resourceGroupName(&#34;testRG&#34;)
 *             .tags(Map.ofEntries(
 *                 Map.entry(&#34;additionalProp1&#34;, &#34;string&#34;),
 *                 Map.entry(&#34;additionalProp2&#34;, &#34;string&#34;),
 *                 Map.entry(&#34;additionalProp3&#34;, &#34;string&#34;)
 *             ))
 *             .workspaceName(&#34;workspace1&#34;)
 *             .build());
 * 
 *     }
 * }
 * 
 * ```
 * 
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:healthcareapis:FhirService fhirservice1 /subscriptions/subid/resourceGroups/testRG/providers/Microsoft.HealthcareApis/workspaces/workspace1/fhirservices/fhirservice1 
 * ```
 * 
 */
@ResourceType(type="azure-native:healthcareapis:FhirService")
public class FhirService extends com.pulumi.resources.CustomResource {
    /**
     * Fhir Service access policies.
     * 
     */
    @Export(name="accessPolicies", type=List.class, parameters={FhirServiceAccessPolicyEntryResponse.class})
    private Output</* @Nullable */ List<FhirServiceAccessPolicyEntryResponse>> accessPolicies;

    /**
     * @return Fhir Service access policies.
     * 
     */
    public Output<Optional<List<FhirServiceAccessPolicyEntryResponse>>> accessPolicies() {
        return Codegen.optional(this.accessPolicies);
    }
    /**
     * Fhir Service Azure container registry configuration.
     * 
     */
    @Export(name="acrConfiguration", type=FhirServiceAcrConfigurationResponse.class, parameters={})
    private Output</* @Nullable */ FhirServiceAcrConfigurationResponse> acrConfiguration;

    /**
     * @return Fhir Service Azure container registry configuration.
     * 
     */
    public Output<Optional<FhirServiceAcrConfigurationResponse>> acrConfiguration() {
        return Codegen.optional(this.acrConfiguration);
    }
    /**
     * Fhir Service authentication configuration.
     * 
     */
    @Export(name="authenticationConfiguration", type=FhirServiceAuthenticationConfigurationResponse.class, parameters={})
    private Output</* @Nullable */ FhirServiceAuthenticationConfigurationResponse> authenticationConfiguration;

    /**
     * @return Fhir Service authentication configuration.
     * 
     */
    public Output<Optional<FhirServiceAuthenticationConfigurationResponse>> authenticationConfiguration() {
        return Codegen.optional(this.authenticationConfiguration);
    }
    /**
     * Fhir Service Cors configuration.
     * 
     */
    @Export(name="corsConfiguration", type=FhirServiceCorsConfigurationResponse.class, parameters={})
    private Output</* @Nullable */ FhirServiceCorsConfigurationResponse> corsConfiguration;

    /**
     * @return Fhir Service Cors configuration.
     * 
     */
    public Output<Optional<FhirServiceCorsConfigurationResponse>> corsConfiguration() {
        return Codegen.optional(this.corsConfiguration);
    }
    /**
     * An etag associated with the resource, used for optimistic concurrency when editing it.
     * 
     */
    @Export(name="etag", type=String.class, parameters={})
    private Output</* @Nullable */ String> etag;

    /**
     * @return An etag associated with the resource, used for optimistic concurrency when editing it.
     * 
     */
    public Output<Optional<String>> etag() {
        return Codegen.optional(this.etag);
    }
    /**
     * Fhir Service event support status.
     * 
     */
    @Export(name="eventState", type=String.class, parameters={})
    private Output<String> eventState;

    /**
     * @return Fhir Service event support status.
     * 
     */
    public Output<String> eventState() {
        return this.eventState;
    }
    /**
     * Fhir Service export configuration.
     * 
     */
    @Export(name="exportConfiguration", type=FhirServiceExportConfigurationResponse.class, parameters={})
    private Output</* @Nullable */ FhirServiceExportConfigurationResponse> exportConfiguration;

    /**
     * @return Fhir Service export configuration.
     * 
     */
    public Output<Optional<FhirServiceExportConfigurationResponse>> exportConfiguration() {
        return Codegen.optional(this.exportConfiguration);
    }
    /**
     * Setting indicating whether the service has a managed identity associated with it.
     * 
     */
    @Export(name="identity", type=ServiceManagedIdentityResponseIdentity.class, parameters={})
    private Output</* @Nullable */ ServiceManagedIdentityResponseIdentity> identity;

    /**
     * @return Setting indicating whether the service has a managed identity associated with it.
     * 
     */
    public Output<Optional<ServiceManagedIdentityResponseIdentity>> identity() {
        return Codegen.optional(this.identity);
    }
    /**
     * The kind of the service.
     * 
     */
    @Export(name="kind", type=String.class, parameters={})
    private Output</* @Nullable */ String> kind;

    /**
     * @return The kind of the service.
     * 
     */
    public Output<Optional<String>> kind() {
        return Codegen.optional(this.kind);
    }
    /**
     * The resource location.
     * 
     */
    @Export(name="location", type=String.class, parameters={})
    private Output</* @Nullable */ String> location;

    /**
     * @return The resource location.
     * 
     */
    public Output<Optional<String>> location() {
        return Codegen.optional(this.location);
    }
    /**
     * The resource name.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The resource name.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The list of private endpoint connections that are set up for this resource.
     * 
     */
    @Export(name="privateEndpointConnections", type=List.class, parameters={PrivateEndpointConnectionResponse.class})
    private Output<List<PrivateEndpointConnectionResponse>> privateEndpointConnections;

    /**
     * @return The list of private endpoint connections that are set up for this resource.
     * 
     */
    public Output<List<PrivateEndpointConnectionResponse>> privateEndpointConnections() {
        return this.privateEndpointConnections;
    }
    /**
     * The provisioning state.
     * 
     */
    @Export(name="provisioningState", type=String.class, parameters={})
    private Output<String> provisioningState;

    /**
     * @return The provisioning state.
     * 
     */
    public Output<String> provisioningState() {
        return this.provisioningState;
    }
    /**
     * Control permission for data plane traffic coming from public networks while private endpoint is enabled.
     * 
     */
    @Export(name="publicNetworkAccess", type=String.class, parameters={})
    private Output<String> publicNetworkAccess;

    /**
     * @return Control permission for data plane traffic coming from public networks while private endpoint is enabled.
     * 
     */
    public Output<String> publicNetworkAccess() {
        return this.publicNetworkAccess;
    }
    /**
     * Determines tracking of history for resources.
     * 
     */
    @Export(name="resourceVersionPolicyConfiguration", type=ResourceVersionPolicyConfigurationResponse.class, parameters={})
    private Output</* @Nullable */ ResourceVersionPolicyConfigurationResponse> resourceVersionPolicyConfiguration;

    /**
     * @return Determines tracking of history for resources.
     * 
     */
    public Output<Optional<ResourceVersionPolicyConfigurationResponse>> resourceVersionPolicyConfiguration() {
        return Codegen.optional(this.resourceVersionPolicyConfiguration);
    }
    /**
     * Metadata pertaining to creation and last modification of the resource.
     * 
     */
    @Export(name="systemData", type=SystemDataResponse.class, parameters={})
    private Output<SystemDataResponse> systemData;

    /**
     * @return Metadata pertaining to creation and last modification of the resource.
     * 
     */
    public Output<SystemDataResponse> systemData() {
        return this.systemData;
    }
    /**
     * Resource tags.
     * 
     */
    @Export(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return Resource tags.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * The resource type.
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return The resource type.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public FhirService(String name) {
        this(name, FhirServiceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public FhirService(String name, FhirServiceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public FhirService(String name, FhirServiceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:healthcareapis:FhirService", name, args == null ? FhirServiceArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private FhirService(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:healthcareapis:FhirService", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("azure-native:healthcareapis/v20210601preview:FhirService").build()),
                Output.of(Alias.builder().type("azure-native:healthcareapis/v20211101:FhirService").build()),
                Output.of(Alias.builder().type("azure-native:healthcareapis/v20220131preview:FhirService").build()),
                Output.of(Alias.builder().type("azure-native:healthcareapis/v20220515:FhirService").build())
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static FhirService get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new FhirService(name, id, options);
    }
}
