// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.compute.outputs;

import com.pulumi.azurenative.compute.outputs.AdditionalCapabilitiesResponse;
import com.pulumi.azurenative.compute.outputs.AutomaticRepairsPolicyResponse;
import com.pulumi.azurenative.compute.outputs.ExtendedLocationResponse;
import com.pulumi.azurenative.compute.outputs.PlanResponse;
import com.pulumi.azurenative.compute.outputs.ScaleInPolicyResponse;
import com.pulumi.azurenative.compute.outputs.SkuResponse;
import com.pulumi.azurenative.compute.outputs.SubResourceResponse;
import com.pulumi.azurenative.compute.outputs.UpgradePolicyResponse;
import com.pulumi.azurenative.compute.outputs.VirtualMachineScaleSetIdentityResponse;
import com.pulumi.azurenative.compute.outputs.VirtualMachineScaleSetVMProfileResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetVirtualMachineScaleSetResult {
    /**
     * @return Specifies additional capabilities enabled or disabled on the Virtual Machines in the Virtual Machine Scale Set. For instance: whether the Virtual Machines have the capability to support attaching managed data disks with UltraSSD_LRS storage account type.
     * 
     */
    private @Nullable AdditionalCapabilitiesResponse additionalCapabilities;
    /**
     * @return Policy for automatic repairs.
     * 
     */
    private @Nullable AutomaticRepairsPolicyResponse automaticRepairsPolicy;
    /**
     * @return When Overprovision is enabled, extensions are launched only on the requested number of VMs which are finally kept. This property will hence ensure that the extensions do not run on the extra overprovisioned VMs.
     * 
     */
    private @Nullable Boolean doNotRunExtensionsOnOverprovisionedVMs;
    /**
     * @return The extended location of the Virtual Machine Scale Set.
     * 
     */
    private @Nullable ExtendedLocationResponse extendedLocation;
    /**
     * @return Specifies information about the dedicated host group that the virtual machine scale set resides in. &lt;br&gt;&lt;br&gt;Minimum api-version: 2020-06-01.
     * 
     */
    private @Nullable SubResourceResponse hostGroup;
    /**
     * @return Resource Id
     * 
     */
    private String id;
    /**
     * @return The identity of the virtual machine scale set, if configured.
     * 
     */
    private @Nullable VirtualMachineScaleSetIdentityResponse identity;
    /**
     * @return Resource location
     * 
     */
    private String location;
    /**
     * @return Resource name
     * 
     */
    private String name;
    /**
     * @return Specifies the orchestration mode for the virtual machine scale set.
     * 
     */
    private @Nullable String orchestrationMode;
    /**
     * @return Specifies whether the Virtual Machine Scale Set should be overprovisioned.
     * 
     */
    private @Nullable Boolean overprovision;
    /**
     * @return Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use.  In the Azure portal, find the marketplace image that you want to use and then click **Want to deploy programmatically, Get Started -&gt;**. Enter any required information and then click **Save**.
     * 
     */
    private @Nullable PlanResponse plan;
    /**
     * @return Fault Domain count for each placement group.
     * 
     */
    private @Nullable Integer platformFaultDomainCount;
    /**
     * @return The provisioning state, which only appears in the response.
     * 
     */
    private String provisioningState;
    /**
     * @return Specifies information about the proximity placement group that the virtual machine scale set should be assigned to. &lt;br&gt;&lt;br&gt;Minimum api-version: 2018-04-01.
     * 
     */
    private @Nullable SubResourceResponse proximityPlacementGroup;
    /**
     * @return Specifies the scale-in policy that decides which virtual machines are chosen for removal when a Virtual Machine Scale Set is scaled-in.
     * 
     */
    private @Nullable ScaleInPolicyResponse scaleInPolicy;
    /**
     * @return When true this limits the scale set to a single placement group, of max size 100 virtual machines. NOTE: If singlePlacementGroup is true, it may be modified to false. However, if singlePlacementGroup is false, it may not be modified to true.
     * 
     */
    private @Nullable Boolean singlePlacementGroup;
    /**
     * @return The virtual machine scale set sku.
     * 
     */
    private @Nullable SkuResponse sku;
    /**
     * @return Resource tags
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return Resource type
     * 
     */
    private String type;
    /**
     * @return Specifies the ID which uniquely identifies a Virtual Machine Scale Set.
     * 
     */
    private String uniqueId;
    /**
     * @return The upgrade policy.
     * 
     */
    private @Nullable UpgradePolicyResponse upgradePolicy;
    /**
     * @return The virtual machine profile.
     * 
     */
    private @Nullable VirtualMachineScaleSetVMProfileResponse virtualMachineProfile;
    /**
     * @return Whether to force strictly even Virtual Machine distribution cross x-zones in case there is zone outage.
     * 
     */
    private @Nullable Boolean zoneBalance;
    /**
     * @return The virtual machine scale set zones. NOTE: Availability zones can only be set when you create the scale set
     * 
     */
    private @Nullable List<String> zones;

    private GetVirtualMachineScaleSetResult() {}
    /**
     * @return Specifies additional capabilities enabled or disabled on the Virtual Machines in the Virtual Machine Scale Set. For instance: whether the Virtual Machines have the capability to support attaching managed data disks with UltraSSD_LRS storage account type.
     * 
     */
    public Optional<AdditionalCapabilitiesResponse> additionalCapabilities() {
        return Optional.ofNullable(this.additionalCapabilities);
    }
    /**
     * @return Policy for automatic repairs.
     * 
     */
    public Optional<AutomaticRepairsPolicyResponse> automaticRepairsPolicy() {
        return Optional.ofNullable(this.automaticRepairsPolicy);
    }
    /**
     * @return When Overprovision is enabled, extensions are launched only on the requested number of VMs which are finally kept. This property will hence ensure that the extensions do not run on the extra overprovisioned VMs.
     * 
     */
    public Optional<Boolean> doNotRunExtensionsOnOverprovisionedVMs() {
        return Optional.ofNullable(this.doNotRunExtensionsOnOverprovisionedVMs);
    }
    /**
     * @return The extended location of the Virtual Machine Scale Set.
     * 
     */
    public Optional<ExtendedLocationResponse> extendedLocation() {
        return Optional.ofNullable(this.extendedLocation);
    }
    /**
     * @return Specifies information about the dedicated host group that the virtual machine scale set resides in. &lt;br&gt;&lt;br&gt;Minimum api-version: 2020-06-01.
     * 
     */
    public Optional<SubResourceResponse> hostGroup() {
        return Optional.ofNullable(this.hostGroup);
    }
    /**
     * @return Resource Id
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The identity of the virtual machine scale set, if configured.
     * 
     */
    public Optional<VirtualMachineScaleSetIdentityResponse> identity() {
        return Optional.ofNullable(this.identity);
    }
    /**
     * @return Resource location
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return Resource name
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Specifies the orchestration mode for the virtual machine scale set.
     * 
     */
    public Optional<String> orchestrationMode() {
        return Optional.ofNullable(this.orchestrationMode);
    }
    /**
     * @return Specifies whether the Virtual Machine Scale Set should be overprovisioned.
     * 
     */
    public Optional<Boolean> overprovision() {
        return Optional.ofNullable(this.overprovision);
    }
    /**
     * @return Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use.  In the Azure portal, find the marketplace image that you want to use and then click **Want to deploy programmatically, Get Started -&gt;**. Enter any required information and then click **Save**.
     * 
     */
    public Optional<PlanResponse> plan() {
        return Optional.ofNullable(this.plan);
    }
    /**
     * @return Fault Domain count for each placement group.
     * 
     */
    public Optional<Integer> platformFaultDomainCount() {
        return Optional.ofNullable(this.platformFaultDomainCount);
    }
    /**
     * @return The provisioning state, which only appears in the response.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * @return Specifies information about the proximity placement group that the virtual machine scale set should be assigned to. &lt;br&gt;&lt;br&gt;Minimum api-version: 2018-04-01.
     * 
     */
    public Optional<SubResourceResponse> proximityPlacementGroup() {
        return Optional.ofNullable(this.proximityPlacementGroup);
    }
    /**
     * @return Specifies the scale-in policy that decides which virtual machines are chosen for removal when a Virtual Machine Scale Set is scaled-in.
     * 
     */
    public Optional<ScaleInPolicyResponse> scaleInPolicy() {
        return Optional.ofNullable(this.scaleInPolicy);
    }
    /**
     * @return When true this limits the scale set to a single placement group, of max size 100 virtual machines. NOTE: If singlePlacementGroup is true, it may be modified to false. However, if singlePlacementGroup is false, it may not be modified to true.
     * 
     */
    public Optional<Boolean> singlePlacementGroup() {
        return Optional.ofNullable(this.singlePlacementGroup);
    }
    /**
     * @return The virtual machine scale set sku.
     * 
     */
    public Optional<SkuResponse> sku() {
        return Optional.ofNullable(this.sku);
    }
    /**
     * @return Resource tags
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return Resource type
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return Specifies the ID which uniquely identifies a Virtual Machine Scale Set.
     * 
     */
    public String uniqueId() {
        return this.uniqueId;
    }
    /**
     * @return The upgrade policy.
     * 
     */
    public Optional<UpgradePolicyResponse> upgradePolicy() {
        return Optional.ofNullable(this.upgradePolicy);
    }
    /**
     * @return The virtual machine profile.
     * 
     */
    public Optional<VirtualMachineScaleSetVMProfileResponse> virtualMachineProfile() {
        return Optional.ofNullable(this.virtualMachineProfile);
    }
    /**
     * @return Whether to force strictly even Virtual Machine distribution cross x-zones in case there is zone outage.
     * 
     */
    public Optional<Boolean> zoneBalance() {
        return Optional.ofNullable(this.zoneBalance);
    }
    /**
     * @return The virtual machine scale set zones. NOTE: Availability zones can only be set when you create the scale set
     * 
     */
    public List<String> zones() {
        return this.zones == null ? List.of() : this.zones;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVirtualMachineScaleSetResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable AdditionalCapabilitiesResponse additionalCapabilities;
        private @Nullable AutomaticRepairsPolicyResponse automaticRepairsPolicy;
        private @Nullable Boolean doNotRunExtensionsOnOverprovisionedVMs;
        private @Nullable ExtendedLocationResponse extendedLocation;
        private @Nullable SubResourceResponse hostGroup;
        private String id;
        private @Nullable VirtualMachineScaleSetIdentityResponse identity;
        private String location;
        private String name;
        private @Nullable String orchestrationMode;
        private @Nullable Boolean overprovision;
        private @Nullable PlanResponse plan;
        private @Nullable Integer platformFaultDomainCount;
        private String provisioningState;
        private @Nullable SubResourceResponse proximityPlacementGroup;
        private @Nullable ScaleInPolicyResponse scaleInPolicy;
        private @Nullable Boolean singlePlacementGroup;
        private @Nullable SkuResponse sku;
        private @Nullable Map<String,String> tags;
        private String type;
        private String uniqueId;
        private @Nullable UpgradePolicyResponse upgradePolicy;
        private @Nullable VirtualMachineScaleSetVMProfileResponse virtualMachineProfile;
        private @Nullable Boolean zoneBalance;
        private @Nullable List<String> zones;
        public Builder() {}
        public Builder(GetVirtualMachineScaleSetResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.additionalCapabilities = defaults.additionalCapabilities;
    	      this.automaticRepairsPolicy = defaults.automaticRepairsPolicy;
    	      this.doNotRunExtensionsOnOverprovisionedVMs = defaults.doNotRunExtensionsOnOverprovisionedVMs;
    	      this.extendedLocation = defaults.extendedLocation;
    	      this.hostGroup = defaults.hostGroup;
    	      this.id = defaults.id;
    	      this.identity = defaults.identity;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.orchestrationMode = defaults.orchestrationMode;
    	      this.overprovision = defaults.overprovision;
    	      this.plan = defaults.plan;
    	      this.platformFaultDomainCount = defaults.platformFaultDomainCount;
    	      this.provisioningState = defaults.provisioningState;
    	      this.proximityPlacementGroup = defaults.proximityPlacementGroup;
    	      this.scaleInPolicy = defaults.scaleInPolicy;
    	      this.singlePlacementGroup = defaults.singlePlacementGroup;
    	      this.sku = defaults.sku;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
    	      this.uniqueId = defaults.uniqueId;
    	      this.upgradePolicy = defaults.upgradePolicy;
    	      this.virtualMachineProfile = defaults.virtualMachineProfile;
    	      this.zoneBalance = defaults.zoneBalance;
    	      this.zones = defaults.zones;
        }

        @CustomType.Setter
        public Builder additionalCapabilities(@Nullable AdditionalCapabilitiesResponse additionalCapabilities) {
            this.additionalCapabilities = additionalCapabilities;
            return this;
        }
        @CustomType.Setter
        public Builder automaticRepairsPolicy(@Nullable AutomaticRepairsPolicyResponse automaticRepairsPolicy) {
            this.automaticRepairsPolicy = automaticRepairsPolicy;
            return this;
        }
        @CustomType.Setter
        public Builder doNotRunExtensionsOnOverprovisionedVMs(@Nullable Boolean doNotRunExtensionsOnOverprovisionedVMs) {
            this.doNotRunExtensionsOnOverprovisionedVMs = doNotRunExtensionsOnOverprovisionedVMs;
            return this;
        }
        @CustomType.Setter
        public Builder extendedLocation(@Nullable ExtendedLocationResponse extendedLocation) {
            this.extendedLocation = extendedLocation;
            return this;
        }
        @CustomType.Setter
        public Builder hostGroup(@Nullable SubResourceResponse hostGroup) {
            this.hostGroup = hostGroup;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder identity(@Nullable VirtualMachineScaleSetIdentityResponse identity) {
            this.identity = identity;
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder orchestrationMode(@Nullable String orchestrationMode) {
            this.orchestrationMode = orchestrationMode;
            return this;
        }
        @CustomType.Setter
        public Builder overprovision(@Nullable Boolean overprovision) {
            this.overprovision = overprovision;
            return this;
        }
        @CustomType.Setter
        public Builder plan(@Nullable PlanResponse plan) {
            this.plan = plan;
            return this;
        }
        @CustomType.Setter
        public Builder platformFaultDomainCount(@Nullable Integer platformFaultDomainCount) {
            this.platformFaultDomainCount = platformFaultDomainCount;
            return this;
        }
        @CustomType.Setter
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        @CustomType.Setter
        public Builder proximityPlacementGroup(@Nullable SubResourceResponse proximityPlacementGroup) {
            this.proximityPlacementGroup = proximityPlacementGroup;
            return this;
        }
        @CustomType.Setter
        public Builder scaleInPolicy(@Nullable ScaleInPolicyResponse scaleInPolicy) {
            this.scaleInPolicy = scaleInPolicy;
            return this;
        }
        @CustomType.Setter
        public Builder singlePlacementGroup(@Nullable Boolean singlePlacementGroup) {
            this.singlePlacementGroup = singlePlacementGroup;
            return this;
        }
        @CustomType.Setter
        public Builder sku(@Nullable SkuResponse sku) {
            this.sku = sku;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder uniqueId(String uniqueId) {
            this.uniqueId = Objects.requireNonNull(uniqueId);
            return this;
        }
        @CustomType.Setter
        public Builder upgradePolicy(@Nullable UpgradePolicyResponse upgradePolicy) {
            this.upgradePolicy = upgradePolicy;
            return this;
        }
        @CustomType.Setter
        public Builder virtualMachineProfile(@Nullable VirtualMachineScaleSetVMProfileResponse virtualMachineProfile) {
            this.virtualMachineProfile = virtualMachineProfile;
            return this;
        }
        @CustomType.Setter
        public Builder zoneBalance(@Nullable Boolean zoneBalance) {
            this.zoneBalance = zoneBalance;
            return this;
        }
        @CustomType.Setter
        public Builder zones(@Nullable List<String> zones) {
            this.zones = zones;
            return this;
        }
        public Builder zones(String... zones) {
            return zones(List.of(zones));
        }
        public GetVirtualMachineScaleSetResult build() {
            final var o = new GetVirtualMachineScaleSetResult();
            o.additionalCapabilities = additionalCapabilities;
            o.automaticRepairsPolicy = automaticRepairsPolicy;
            o.doNotRunExtensionsOnOverprovisionedVMs = doNotRunExtensionsOnOverprovisionedVMs;
            o.extendedLocation = extendedLocation;
            o.hostGroup = hostGroup;
            o.id = id;
            o.identity = identity;
            o.location = location;
            o.name = name;
            o.orchestrationMode = orchestrationMode;
            o.overprovision = overprovision;
            o.plan = plan;
            o.platformFaultDomainCount = platformFaultDomainCount;
            o.provisioningState = provisioningState;
            o.proximityPlacementGroup = proximityPlacementGroup;
            o.scaleInPolicy = scaleInPolicy;
            o.singlePlacementGroup = singlePlacementGroup;
            o.sku = sku;
            o.tags = tags;
            o.type = type;
            o.uniqueId = uniqueId;
            o.upgradePolicy = upgradePolicy;
            o.virtualMachineProfile = virtualMachineProfile;
            o.zoneBalance = zoneBalance;
            o.zones = zones;
            return o;
        }
    }
}
