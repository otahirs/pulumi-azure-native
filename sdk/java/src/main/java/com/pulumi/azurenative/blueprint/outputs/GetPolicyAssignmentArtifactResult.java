// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.blueprint.outputs;

import com.pulumi.azurenative.blueprint.outputs.ParameterValueResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetPolicyAssignmentArtifactResult {
    /**
     * @return Artifacts which need to be deployed before the specified artifact.
     * 
     */
    private @Nullable List<String> dependsOn;
    /**
     * @return Multi-line explain this resource.
     * 
     */
    private @Nullable String description;
    /**
     * @return One-liner string explain this resource.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return String Id used to locate any resource on Azure.
     * 
     */
    private String id;
    /**
     * @return Specifies the kind of blueprint artifact.
     * Expected value is &#39;policyAssignment&#39;.
     * 
     */
    private String kind;
    /**
     * @return Name of this resource.
     * 
     */
    private String name;
    /**
     * @return Parameter values for the policy definition.
     * 
     */
    private Map<String,ParameterValueResponse> parameters;
    /**
     * @return Azure resource ID of the policy definition.
     * 
     */
    private String policyDefinitionId;
    /**
     * @return Name of the resource group placeholder to which the policy will be assigned.
     * 
     */
    private @Nullable String resourceGroup;
    /**
     * @return Type of this resource.
     * 
     */
    private String type;

    private GetPolicyAssignmentArtifactResult() {}
    /**
     * @return Artifacts which need to be deployed before the specified artifact.
     * 
     */
    public List<String> dependsOn() {
        return this.dependsOn == null ? List.of() : this.dependsOn;
    }
    /**
     * @return Multi-line explain this resource.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return One-liner string explain this resource.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return String Id used to locate any resource on Azure.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Specifies the kind of blueprint artifact.
     * Expected value is &#39;policyAssignment&#39;.
     * 
     */
    public String kind() {
        return this.kind;
    }
    /**
     * @return Name of this resource.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Parameter values for the policy definition.
     * 
     */
    public Map<String,ParameterValueResponse> parameters() {
        return this.parameters;
    }
    /**
     * @return Azure resource ID of the policy definition.
     * 
     */
    public String policyDefinitionId() {
        return this.policyDefinitionId;
    }
    /**
     * @return Name of the resource group placeholder to which the policy will be assigned.
     * 
     */
    public Optional<String> resourceGroup() {
        return Optional.ofNullable(this.resourceGroup);
    }
    /**
     * @return Type of this resource.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPolicyAssignmentArtifactResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> dependsOn;
        private @Nullable String description;
        private @Nullable String displayName;
        private String id;
        private String kind;
        private String name;
        private Map<String,ParameterValueResponse> parameters;
        private String policyDefinitionId;
        private @Nullable String resourceGroup;
        private String type;
        public Builder() {}
        public Builder(GetPolicyAssignmentArtifactResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dependsOn = defaults.dependsOn;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.id = defaults.id;
    	      this.kind = defaults.kind;
    	      this.name = defaults.name;
    	      this.parameters = defaults.parameters;
    	      this.policyDefinitionId = defaults.policyDefinitionId;
    	      this.resourceGroup = defaults.resourceGroup;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder dependsOn(@Nullable List<String> dependsOn) {
            this.dependsOn = dependsOn;
            return this;
        }
        public Builder dependsOn(String... dependsOn) {
            return dependsOn(List.of(dependsOn));
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder kind(String kind) {
            this.kind = Objects.requireNonNull(kind);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder parameters(Map<String,ParameterValueResponse> parameters) {
            this.parameters = Objects.requireNonNull(parameters);
            return this;
        }
        @CustomType.Setter
        public Builder policyDefinitionId(String policyDefinitionId) {
            this.policyDefinitionId = Objects.requireNonNull(policyDefinitionId);
            return this;
        }
        @CustomType.Setter
        public Builder resourceGroup(@Nullable String resourceGroup) {
            this.resourceGroup = resourceGroup;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetPolicyAssignmentArtifactResult build() {
            final var o = new GetPolicyAssignmentArtifactResult();
            o.dependsOn = dependsOn;
            o.description = description;
            o.displayName = displayName;
            o.id = id;
            o.kind = kind;
            o.name = name;
            o.parameters = parameters;
            o.policyDefinitionId = policyDefinitionId;
            o.resourceGroup = resourceGroup;
            o.type = type;
            return o;
        }
    }
}
