// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PacketCaptureFilterResponse {
    /**
     * @return Local IP Address to be filtered on. Notation: &#34;127.0.0.1&#34; for single address entry. &#34;127.0.0.1-127.0.0.255&#34; for range. &#34;127.0.0.1;127.0.0.5&#34;? for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
     * 
     */
    private @Nullable String localIPAddress;
    /**
     * @return Local port to be filtered on. Notation: &#34;80&#34; for single port entry.&#34;80-85&#34; for range. &#34;80;443;&#34; for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
     * 
     */
    private @Nullable String localPort;
    /**
     * @return Protocol to be filtered on.
     * 
     */
    private @Nullable String protocol;
    /**
     * @return Local IP Address to be filtered on. Notation: &#34;127.0.0.1&#34; for single address entry. &#34;127.0.0.1-127.0.0.255&#34; for range. &#34;127.0.0.1;127.0.0.5;&#34; for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
     * 
     */
    private @Nullable String remoteIPAddress;
    /**
     * @return Remote port to be filtered on. Notation: &#34;80&#34; for single port entry.&#34;80-85&#34; for range. &#34;80;443;&#34; for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
     * 
     */
    private @Nullable String remotePort;

    private PacketCaptureFilterResponse() {}
    /**
     * @return Local IP Address to be filtered on. Notation: &#34;127.0.0.1&#34; for single address entry. &#34;127.0.0.1-127.0.0.255&#34; for range. &#34;127.0.0.1;127.0.0.5&#34;? for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
     * 
     */
    public Optional<String> localIPAddress() {
        return Optional.ofNullable(this.localIPAddress);
    }
    /**
     * @return Local port to be filtered on. Notation: &#34;80&#34; for single port entry.&#34;80-85&#34; for range. &#34;80;443;&#34; for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
     * 
     */
    public Optional<String> localPort() {
        return Optional.ofNullable(this.localPort);
    }
    /**
     * @return Protocol to be filtered on.
     * 
     */
    public Optional<String> protocol() {
        return Optional.ofNullable(this.protocol);
    }
    /**
     * @return Local IP Address to be filtered on. Notation: &#34;127.0.0.1&#34; for single address entry. &#34;127.0.0.1-127.0.0.255&#34; for range. &#34;127.0.0.1;127.0.0.5;&#34; for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
     * 
     */
    public Optional<String> remoteIPAddress() {
        return Optional.ofNullable(this.remoteIPAddress);
    }
    /**
     * @return Remote port to be filtered on. Notation: &#34;80&#34; for single port entry.&#34;80-85&#34; for range. &#34;80;443;&#34; for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
     * 
     */
    public Optional<String> remotePort() {
        return Optional.ofNullable(this.remotePort);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PacketCaptureFilterResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String localIPAddress;
        private @Nullable String localPort;
        private @Nullable String protocol;
        private @Nullable String remoteIPAddress;
        private @Nullable String remotePort;
        public Builder() {}
        public Builder(PacketCaptureFilterResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.localIPAddress = defaults.localIPAddress;
    	      this.localPort = defaults.localPort;
    	      this.protocol = defaults.protocol;
    	      this.remoteIPAddress = defaults.remoteIPAddress;
    	      this.remotePort = defaults.remotePort;
        }

        @CustomType.Setter
        public Builder localIPAddress(@Nullable String localIPAddress) {
            this.localIPAddress = localIPAddress;
            return this;
        }
        @CustomType.Setter
        public Builder localPort(@Nullable String localPort) {
            this.localPort = localPort;
            return this;
        }
        @CustomType.Setter
        public Builder protocol(@Nullable String protocol) {
            this.protocol = protocol;
            return this;
        }
        @CustomType.Setter
        public Builder remoteIPAddress(@Nullable String remoteIPAddress) {
            this.remoteIPAddress = remoteIPAddress;
            return this;
        }
        @CustomType.Setter
        public Builder remotePort(@Nullable String remotePort) {
            this.remotePort = remotePort;
            return this;
        }
        public PacketCaptureFilterResponse build() {
            final var o = new PacketCaptureFilterResponse();
            o.localIPAddress = localIPAddress;
            o.localPort = localPort;
            o.protocol = protocol;
            o.remoteIPAddress = remoteIPAddress;
            o.remotePort = remotePort;
            return o;
        }
    }
}
