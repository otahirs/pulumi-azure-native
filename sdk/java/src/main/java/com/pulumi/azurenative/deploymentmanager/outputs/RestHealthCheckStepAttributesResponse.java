// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.deploymentmanager.outputs;

import com.pulumi.azurenative.deploymentmanager.outputs.RestHealthCheckResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class RestHealthCheckStepAttributesResponse {
    /**
     * @return The list of checks that form the health check step.
     * 
     */
    private List<RestHealthCheckResponse> healthChecks;
    /**
     * @return The duration in ISO 8601 format for which the resource is expected to be continuously healthy. If maxElasticDuration is specified, healthy state duration is enforced after the detection of first healthy signal.
     * 
     */
    private String healthyStateDuration;
    /**
     * @return The duration in ISO 8601 format for which the health check waits for the resource to become healthy. Health check fails if it doesn&#39;t. Health check starts to enforce healthyStateDuration once resource becomes healthy.
     * 
     */
    private @Nullable String maxElasticDuration;
    /**
     * @return The type of health check.
     * Expected value is &#39;REST&#39;.
     * 
     */
    private String type;
    /**
     * @return The duration in ISO 8601 format for which health check waits idly without any checks.
     * 
     */
    private @Nullable String waitDuration;

    private RestHealthCheckStepAttributesResponse() {}
    /**
     * @return The list of checks that form the health check step.
     * 
     */
    public List<RestHealthCheckResponse> healthChecks() {
        return this.healthChecks;
    }
    /**
     * @return The duration in ISO 8601 format for which the resource is expected to be continuously healthy. If maxElasticDuration is specified, healthy state duration is enforced after the detection of first healthy signal.
     * 
     */
    public String healthyStateDuration() {
        return this.healthyStateDuration;
    }
    /**
     * @return The duration in ISO 8601 format for which the health check waits for the resource to become healthy. Health check fails if it doesn&#39;t. Health check starts to enforce healthyStateDuration once resource becomes healthy.
     * 
     */
    public Optional<String> maxElasticDuration() {
        return Optional.ofNullable(this.maxElasticDuration);
    }
    /**
     * @return The type of health check.
     * Expected value is &#39;REST&#39;.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return The duration in ISO 8601 format for which health check waits idly without any checks.
     * 
     */
    public Optional<String> waitDuration() {
        return Optional.ofNullable(this.waitDuration);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RestHealthCheckStepAttributesResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<RestHealthCheckResponse> healthChecks;
        private String healthyStateDuration;
        private @Nullable String maxElasticDuration;
        private String type;
        private @Nullable String waitDuration;
        public Builder() {}
        public Builder(RestHealthCheckStepAttributesResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.healthChecks = defaults.healthChecks;
    	      this.healthyStateDuration = defaults.healthyStateDuration;
    	      this.maxElasticDuration = defaults.maxElasticDuration;
    	      this.type = defaults.type;
    	      this.waitDuration = defaults.waitDuration;
        }

        @CustomType.Setter
        public Builder healthChecks(List<RestHealthCheckResponse> healthChecks) {
            this.healthChecks = Objects.requireNonNull(healthChecks);
            return this;
        }
        public Builder healthChecks(RestHealthCheckResponse... healthChecks) {
            return healthChecks(List.of(healthChecks));
        }
        @CustomType.Setter
        public Builder healthyStateDuration(String healthyStateDuration) {
            this.healthyStateDuration = Objects.requireNonNull(healthyStateDuration);
            return this;
        }
        @CustomType.Setter
        public Builder maxElasticDuration(@Nullable String maxElasticDuration) {
            this.maxElasticDuration = maxElasticDuration;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder waitDuration(@Nullable String waitDuration) {
            this.waitDuration = waitDuration;
            return this;
        }
        public RestHealthCheckStepAttributesResponse build() {
            final var o = new RestHealthCheckStepAttributesResponse();
            o.healthChecks = healthChecks;
            o.healthyStateDuration = healthyStateDuration;
            o.maxElasticDuration = maxElasticDuration;
            o.type = type;
            o.waitDuration = waitDuration;
            return o;
        }
    }
}
