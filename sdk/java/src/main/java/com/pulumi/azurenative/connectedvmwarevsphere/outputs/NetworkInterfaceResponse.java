// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.connectedvmwarevsphere.outputs;

import com.pulumi.azurenative.connectedvmwarevsphere.outputs.NicIPSettingsResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class NetworkInterfaceResponse {
    /**
     * @return Gets or sets the device key value.
     * 
     */
    private @Nullable Integer deviceKey;
    /**
     * @return Gets or sets the nic ip addresses.
     * 
     */
    private List<String> ipAddresses;
    /**
     * @return Gets or sets the ipsettings.
     * 
     */
    private @Nullable NicIPSettingsResponse ipSettings;
    /**
     * @return Gets or sets the label of the virtual network in vCenter that the nic is connected to.
     * 
     */
    private String label;
    /**
     * @return Gets or sets the NIC MAC address.
     * 
     */
    private String macAddress;
    /**
     * @return Gets or sets the name of the network interface.
     * 
     */
    private @Nullable String name;
    /**
     * @return Gets or sets the ARM Id of the network resource to connect the virtual machine.
     * 
     */
    private @Nullable String networkId;
    /**
     * @return Gets or sets the name of the virtual network in vCenter that the nic is connected to.
     * 
     */
    private String networkMoName;
    /**
     * @return Gets or sets the vCenter MoRef (Managed Object Reference) ID of the virtual network
     * that the nic is connected to.
     * 
     */
    private String networkMoRefId;
    /**
     * @return NIC type
     * 
     */
    private @Nullable String nicType;
    /**
     * @return Gets or sets the power on boot.
     * 
     */
    private @Nullable String powerOnBoot;

    private NetworkInterfaceResponse() {}
    /**
     * @return Gets or sets the device key value.
     * 
     */
    public Optional<Integer> deviceKey() {
        return Optional.ofNullable(this.deviceKey);
    }
    /**
     * @return Gets or sets the nic ip addresses.
     * 
     */
    public List<String> ipAddresses() {
        return this.ipAddresses;
    }
    /**
     * @return Gets or sets the ipsettings.
     * 
     */
    public Optional<NicIPSettingsResponse> ipSettings() {
        return Optional.ofNullable(this.ipSettings);
    }
    /**
     * @return Gets or sets the label of the virtual network in vCenter that the nic is connected to.
     * 
     */
    public String label() {
        return this.label;
    }
    /**
     * @return Gets or sets the NIC MAC address.
     * 
     */
    public String macAddress() {
        return this.macAddress;
    }
    /**
     * @return Gets or sets the name of the network interface.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return Gets or sets the ARM Id of the network resource to connect the virtual machine.
     * 
     */
    public Optional<String> networkId() {
        return Optional.ofNullable(this.networkId);
    }
    /**
     * @return Gets or sets the name of the virtual network in vCenter that the nic is connected to.
     * 
     */
    public String networkMoName() {
        return this.networkMoName;
    }
    /**
     * @return Gets or sets the vCenter MoRef (Managed Object Reference) ID of the virtual network
     * that the nic is connected to.
     * 
     */
    public String networkMoRefId() {
        return this.networkMoRefId;
    }
    /**
     * @return NIC type
     * 
     */
    public Optional<String> nicType() {
        return Optional.ofNullable(this.nicType);
    }
    /**
     * @return Gets or sets the power on boot.
     * 
     */
    public Optional<String> powerOnBoot() {
        return Optional.ofNullable(this.powerOnBoot);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NetworkInterfaceResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer deviceKey;
        private List<String> ipAddresses;
        private @Nullable NicIPSettingsResponse ipSettings;
        private String label;
        private String macAddress;
        private @Nullable String name;
        private @Nullable String networkId;
        private String networkMoName;
        private String networkMoRefId;
        private @Nullable String nicType;
        private @Nullable String powerOnBoot;
        public Builder() {}
        public Builder(NetworkInterfaceResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.deviceKey = defaults.deviceKey;
    	      this.ipAddresses = defaults.ipAddresses;
    	      this.ipSettings = defaults.ipSettings;
    	      this.label = defaults.label;
    	      this.macAddress = defaults.macAddress;
    	      this.name = defaults.name;
    	      this.networkId = defaults.networkId;
    	      this.networkMoName = defaults.networkMoName;
    	      this.networkMoRefId = defaults.networkMoRefId;
    	      this.nicType = defaults.nicType;
    	      this.powerOnBoot = defaults.powerOnBoot;
        }

        @CustomType.Setter
        public Builder deviceKey(@Nullable Integer deviceKey) {
            this.deviceKey = deviceKey;
            return this;
        }
        @CustomType.Setter
        public Builder ipAddresses(List<String> ipAddresses) {
            this.ipAddresses = Objects.requireNonNull(ipAddresses);
            return this;
        }
        public Builder ipAddresses(String... ipAddresses) {
            return ipAddresses(List.of(ipAddresses));
        }
        @CustomType.Setter
        public Builder ipSettings(@Nullable NicIPSettingsResponse ipSettings) {
            this.ipSettings = ipSettings;
            return this;
        }
        @CustomType.Setter
        public Builder label(String label) {
            this.label = Objects.requireNonNull(label);
            return this;
        }
        @CustomType.Setter
        public Builder macAddress(String macAddress) {
            this.macAddress = Objects.requireNonNull(macAddress);
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder networkId(@Nullable String networkId) {
            this.networkId = networkId;
            return this;
        }
        @CustomType.Setter
        public Builder networkMoName(String networkMoName) {
            this.networkMoName = Objects.requireNonNull(networkMoName);
            return this;
        }
        @CustomType.Setter
        public Builder networkMoRefId(String networkMoRefId) {
            this.networkMoRefId = Objects.requireNonNull(networkMoRefId);
            return this;
        }
        @CustomType.Setter
        public Builder nicType(@Nullable String nicType) {
            this.nicType = nicType;
            return this;
        }
        @CustomType.Setter
        public Builder powerOnBoot(@Nullable String powerOnBoot) {
            this.powerOnBoot = powerOnBoot;
            return this;
        }
        public NetworkInterfaceResponse build() {
            final var o = new NetworkInterfaceResponse();
            o.deviceKey = deviceKey;
            o.ipAddresses = ipAddresses;
            o.ipSettings = ipSettings;
            o.label = label;
            o.macAddress = macAddress;
            o.name = name;
            o.networkId = networkId;
            o.networkMoName = networkMoName;
            o.networkMoRefId = networkMoRefId;
            o.nicType = nicType;
            o.powerOnBoot = powerOnBoot;
            return o;
        }
    }
}
