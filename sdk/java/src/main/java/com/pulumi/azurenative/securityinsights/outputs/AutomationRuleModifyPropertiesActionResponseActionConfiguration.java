// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.securityinsights.outputs;

import com.pulumi.azurenative.securityinsights.outputs.IncidentLabelResponse;
import com.pulumi.azurenative.securityinsights.outputs.IncidentOwnerInfoResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AutomationRuleModifyPropertiesActionResponseActionConfiguration {
    /**
     * @return The reason the incident was closed
     * 
     */
    private @Nullable String classification;
    /**
     * @return Describes the reason the incident was closed
     * 
     */
    private @Nullable String classificationComment;
    /**
     * @return The classification reason to close the incident with
     * 
     */
    private @Nullable String classificationReason;
    /**
     * @return List of labels to add to the incident
     * 
     */
    private @Nullable List<IncidentLabelResponse> labels;
    /**
     * @return Describes a user that the incident is assigned to
     * 
     */
    private @Nullable IncidentOwnerInfoResponse owner;
    /**
     * @return The severity of the incident
     * 
     */
    private @Nullable String severity;
    /**
     * @return The status of the incident
     * 
     */
    private @Nullable String status;

    private AutomationRuleModifyPropertiesActionResponseActionConfiguration() {}
    /**
     * @return The reason the incident was closed
     * 
     */
    public Optional<String> classification() {
        return Optional.ofNullable(this.classification);
    }
    /**
     * @return Describes the reason the incident was closed
     * 
     */
    public Optional<String> classificationComment() {
        return Optional.ofNullable(this.classificationComment);
    }
    /**
     * @return The classification reason to close the incident with
     * 
     */
    public Optional<String> classificationReason() {
        return Optional.ofNullable(this.classificationReason);
    }
    /**
     * @return List of labels to add to the incident
     * 
     */
    public List<IncidentLabelResponse> labels() {
        return this.labels == null ? List.of() : this.labels;
    }
    /**
     * @return Describes a user that the incident is assigned to
     * 
     */
    public Optional<IncidentOwnerInfoResponse> owner() {
        return Optional.ofNullable(this.owner);
    }
    /**
     * @return The severity of the incident
     * 
     */
    public Optional<String> severity() {
        return Optional.ofNullable(this.severity);
    }
    /**
     * @return The status of the incident
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AutomationRuleModifyPropertiesActionResponseActionConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String classification;
        private @Nullable String classificationComment;
        private @Nullable String classificationReason;
        private @Nullable List<IncidentLabelResponse> labels;
        private @Nullable IncidentOwnerInfoResponse owner;
        private @Nullable String severity;
        private @Nullable String status;
        public Builder() {}
        public Builder(AutomationRuleModifyPropertiesActionResponseActionConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.classification = defaults.classification;
    	      this.classificationComment = defaults.classificationComment;
    	      this.classificationReason = defaults.classificationReason;
    	      this.labels = defaults.labels;
    	      this.owner = defaults.owner;
    	      this.severity = defaults.severity;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder classification(@Nullable String classification) {
            this.classification = classification;
            return this;
        }
        @CustomType.Setter
        public Builder classificationComment(@Nullable String classificationComment) {
            this.classificationComment = classificationComment;
            return this;
        }
        @CustomType.Setter
        public Builder classificationReason(@Nullable String classificationReason) {
            this.classificationReason = classificationReason;
            return this;
        }
        @CustomType.Setter
        public Builder labels(@Nullable List<IncidentLabelResponse> labels) {
            this.labels = labels;
            return this;
        }
        public Builder labels(IncidentLabelResponse... labels) {
            return labels(List.of(labels));
        }
        @CustomType.Setter
        public Builder owner(@Nullable IncidentOwnerInfoResponse owner) {
            this.owner = owner;
            return this;
        }
        @CustomType.Setter
        public Builder severity(@Nullable String severity) {
            this.severity = severity;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {
            this.status = status;
            return this;
        }
        public AutomationRuleModifyPropertiesActionResponseActionConfiguration build() {
            final var o = new AutomationRuleModifyPropertiesActionResponseActionConfiguration();
            o.classification = classification;
            o.classificationComment = classificationComment;
            o.classificationReason = classificationReason;
            o.labels = labels;
            o.owner = owner;
            o.severity = severity;
            o.status = status;
            return o;
        }
    }
}
