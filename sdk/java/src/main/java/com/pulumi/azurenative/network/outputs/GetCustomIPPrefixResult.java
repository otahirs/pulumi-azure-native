// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.outputs;

import com.pulumi.azurenative.network.outputs.ExtendedLocationResponse;
import com.pulumi.azurenative.network.outputs.SubResourceResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetCustomIPPrefixResult {
    /**
     * @return The prefix range in CIDR notation. Should include the start address and the prefix length.
     * 
     */
    private @Nullable String cidr;
    /**
     * @return The commissioned state of the Custom IP Prefix.
     * 
     */
    private @Nullable String commissionedState;
    /**
     * @return A unique read-only string that changes whenever the resource is updated.
     * 
     */
    private String etag;
    /**
     * @return The extended location of the custom IP prefix.
     * 
     */
    private @Nullable ExtendedLocationResponse extendedLocation;
    /**
     * @return Resource ID.
     * 
     */
    private @Nullable String id;
    /**
     * @return Resource location.
     * 
     */
    private @Nullable String location;
    /**
     * @return Resource name.
     * 
     */
    private String name;
    /**
     * @return The provisioning state of the custom IP prefix resource.
     * 
     */
    private String provisioningState;
    /**
     * @return The list of all referenced PublicIpPrefixes.
     * 
     */
    private List<SubResourceResponse> publicIpPrefixes;
    /**
     * @return The resource GUID property of the custom IP prefix resource.
     * 
     */
    private String resourceGuid;
    /**
     * @return Resource tags.
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return Resource type.
     * 
     */
    private String type;
    /**
     * @return A list of availability zones denoting the IP allocated for the resource needs to come from.
     * 
     */
    private @Nullable List<String> zones;

    private GetCustomIPPrefixResult() {}
    /**
     * @return The prefix range in CIDR notation. Should include the start address and the prefix length.
     * 
     */
    public Optional<String> cidr() {
        return Optional.ofNullable(this.cidr);
    }
    /**
     * @return The commissioned state of the Custom IP Prefix.
     * 
     */
    public Optional<String> commissionedState() {
        return Optional.ofNullable(this.commissionedState);
    }
    /**
     * @return A unique read-only string that changes whenever the resource is updated.
     * 
     */
    public String etag() {
        return this.etag;
    }
    /**
     * @return The extended location of the custom IP prefix.
     * 
     */
    public Optional<ExtendedLocationResponse> extendedLocation() {
        return Optional.ofNullable(this.extendedLocation);
    }
    /**
     * @return Resource ID.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Resource location.
     * 
     */
    public Optional<String> location() {
        return Optional.ofNullable(this.location);
    }
    /**
     * @return Resource name.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The provisioning state of the custom IP prefix resource.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * @return The list of all referenced PublicIpPrefixes.
     * 
     */
    public List<SubResourceResponse> publicIpPrefixes() {
        return this.publicIpPrefixes;
    }
    /**
     * @return The resource GUID property of the custom IP prefix resource.
     * 
     */
    public String resourceGuid() {
        return this.resourceGuid;
    }
    /**
     * @return Resource tags.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return Resource type.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return A list of availability zones denoting the IP allocated for the resource needs to come from.
     * 
     */
    public List<String> zones() {
        return this.zones == null ? List.of() : this.zones;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCustomIPPrefixResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String cidr;
        private @Nullable String commissionedState;
        private String etag;
        private @Nullable ExtendedLocationResponse extendedLocation;
        private @Nullable String id;
        private @Nullable String location;
        private String name;
        private String provisioningState;
        private List<SubResourceResponse> publicIpPrefixes;
        private String resourceGuid;
        private @Nullable Map<String,String> tags;
        private String type;
        private @Nullable List<String> zones;
        public Builder() {}
        public Builder(GetCustomIPPrefixResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cidr = defaults.cidr;
    	      this.commissionedState = defaults.commissionedState;
    	      this.etag = defaults.etag;
    	      this.extendedLocation = defaults.extendedLocation;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.provisioningState = defaults.provisioningState;
    	      this.publicIpPrefixes = defaults.publicIpPrefixes;
    	      this.resourceGuid = defaults.resourceGuid;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
    	      this.zones = defaults.zones;
        }

        @CustomType.Setter
        public Builder cidr(@Nullable String cidr) {
            this.cidr = cidr;
            return this;
        }
        @CustomType.Setter
        public Builder commissionedState(@Nullable String commissionedState) {
            this.commissionedState = commissionedState;
            return this;
        }
        @CustomType.Setter
        public Builder etag(String etag) {
            this.etag = Objects.requireNonNull(etag);
            return this;
        }
        @CustomType.Setter
        public Builder extendedLocation(@Nullable ExtendedLocationResponse extendedLocation) {
            this.extendedLocation = extendedLocation;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder location(@Nullable String location) {
            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        @CustomType.Setter
        public Builder publicIpPrefixes(List<SubResourceResponse> publicIpPrefixes) {
            this.publicIpPrefixes = Objects.requireNonNull(publicIpPrefixes);
            return this;
        }
        public Builder publicIpPrefixes(SubResourceResponse... publicIpPrefixes) {
            return publicIpPrefixes(List.of(publicIpPrefixes));
        }
        @CustomType.Setter
        public Builder resourceGuid(String resourceGuid) {
            this.resourceGuid = Objects.requireNonNull(resourceGuid);
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder zones(@Nullable List<String> zones) {
            this.zones = zones;
            return this;
        }
        public Builder zones(String... zones) {
            return zones(List.of(zones));
        }
        public GetCustomIPPrefixResult build() {
            final var o = new GetCustomIPPrefixResult();
            o.cidr = cidr;
            o.commissionedState = commissionedState;
            o.etag = etag;
            o.extendedLocation = extendedLocation;
            o.id = id;
            o.location = location;
            o.name = name;
            o.provisioningState = provisioningState;
            o.publicIpPrefixes = publicIpPrefixes;
            o.resourceGuid = resourceGuid;
            o.tags = tags;
            o.type = type;
            o.zones = zones;
            return o;
        }
    }
}
