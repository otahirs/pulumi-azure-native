// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetGalleryApplicationResult {
    /**
     * @return The description of this gallery Application Definition resource. This property is updatable.
     * 
     */
    private @Nullable String description;
    /**
     * @return The end of life date of the gallery Application Definition. This property can be used for decommissioning purposes. This property is updatable.
     * 
     */
    private @Nullable String endOfLifeDate;
    /**
     * @return The Eula agreement for the gallery Application Definition.
     * 
     */
    private @Nullable String eula;
    /**
     * @return Resource Id
     * 
     */
    private String id;
    /**
     * @return Resource location
     * 
     */
    private String location;
    /**
     * @return Resource name
     * 
     */
    private String name;
    /**
     * @return The privacy statement uri.
     * 
     */
    private @Nullable String privacyStatementUri;
    /**
     * @return The release note uri.
     * 
     */
    private @Nullable String releaseNoteUri;
    /**
     * @return This property allows you to specify the supported type of the OS that application is built for. &lt;br&gt;&lt;br&gt; Possible values are: &lt;br&gt;&lt;br&gt; **Windows** &lt;br&gt;&lt;br&gt; **Linux**
     * 
     */
    private String supportedOSType;
    /**
     * @return Resource tags
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return Resource type
     * 
     */
    private String type;

    private GetGalleryApplicationResult() {}
    /**
     * @return The description of this gallery Application Definition resource. This property is updatable.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return The end of life date of the gallery Application Definition. This property can be used for decommissioning purposes. This property is updatable.
     * 
     */
    public Optional<String> endOfLifeDate() {
        return Optional.ofNullable(this.endOfLifeDate);
    }
    /**
     * @return The Eula agreement for the gallery Application Definition.
     * 
     */
    public Optional<String> eula() {
        return Optional.ofNullable(this.eula);
    }
    /**
     * @return Resource Id
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Resource location
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return Resource name
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The privacy statement uri.
     * 
     */
    public Optional<String> privacyStatementUri() {
        return Optional.ofNullable(this.privacyStatementUri);
    }
    /**
     * @return The release note uri.
     * 
     */
    public Optional<String> releaseNoteUri() {
        return Optional.ofNullable(this.releaseNoteUri);
    }
    /**
     * @return This property allows you to specify the supported type of the OS that application is built for. &lt;br&gt;&lt;br&gt; Possible values are: &lt;br&gt;&lt;br&gt; **Windows** &lt;br&gt;&lt;br&gt; **Linux**
     * 
     */
    public String supportedOSType() {
        return this.supportedOSType;
    }
    /**
     * @return Resource tags
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return Resource type
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGalleryApplicationResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String description;
        private @Nullable String endOfLifeDate;
        private @Nullable String eula;
        private String id;
        private String location;
        private String name;
        private @Nullable String privacyStatementUri;
        private @Nullable String releaseNoteUri;
        private String supportedOSType;
        private @Nullable Map<String,String> tags;
        private String type;
        public Builder() {}
        public Builder(GetGalleryApplicationResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.endOfLifeDate = defaults.endOfLifeDate;
    	      this.eula = defaults.eula;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.privacyStatementUri = defaults.privacyStatementUri;
    	      this.releaseNoteUri = defaults.releaseNoteUri;
    	      this.supportedOSType = defaults.supportedOSType;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder endOfLifeDate(@Nullable String endOfLifeDate) {
            this.endOfLifeDate = endOfLifeDate;
            return this;
        }
        @CustomType.Setter
        public Builder eula(@Nullable String eula) {
            this.eula = eula;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder privacyStatementUri(@Nullable String privacyStatementUri) {
            this.privacyStatementUri = privacyStatementUri;
            return this;
        }
        @CustomType.Setter
        public Builder releaseNoteUri(@Nullable String releaseNoteUri) {
            this.releaseNoteUri = releaseNoteUri;
            return this;
        }
        @CustomType.Setter
        public Builder supportedOSType(String supportedOSType) {
            this.supportedOSType = Objects.requireNonNull(supportedOSType);
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetGalleryApplicationResult build() {
            final var o = new GetGalleryApplicationResult();
            o.description = description;
            o.endOfLifeDate = endOfLifeDate;
            o.eula = eula;
            o.id = id;
            o.location = location;
            o.name = name;
            o.privacyStatementUri = privacyStatementUri;
            o.releaseNoteUri = releaseNoteUri;
            o.supportedOSType = supportedOSType;
            o.tags = tags;
            o.type = type;
            return o;
        }
    }
}
