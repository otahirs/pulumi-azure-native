// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.vmwarecloudsimple.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class VirtualDiskResponse {
    /**
     * @return Disk&#39;s Controller id
     * 
     */
    private String controllerId;
    /**
     * @return Disk&#39;s independence mode type
     * 
     */
    private String independenceMode;
    /**
     * @return Disk&#39;s total size
     * 
     */
    private Integer totalSize;
    /**
     * @return Disk&#39;s id
     * 
     */
    private @Nullable String virtualDiskId;
    /**
     * @return Disk&#39;s display name
     * 
     */
    private String virtualDiskName;

    private VirtualDiskResponse() {}
    /**
     * @return Disk&#39;s Controller id
     * 
     */
    public String controllerId() {
        return this.controllerId;
    }
    /**
     * @return Disk&#39;s independence mode type
     * 
     */
    public String independenceMode() {
        return this.independenceMode;
    }
    /**
     * @return Disk&#39;s total size
     * 
     */
    public Integer totalSize() {
        return this.totalSize;
    }
    /**
     * @return Disk&#39;s id
     * 
     */
    public Optional<String> virtualDiskId() {
        return Optional.ofNullable(this.virtualDiskId);
    }
    /**
     * @return Disk&#39;s display name
     * 
     */
    public String virtualDiskName() {
        return this.virtualDiskName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VirtualDiskResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String controllerId;
        private String independenceMode;
        private Integer totalSize;
        private @Nullable String virtualDiskId;
        private String virtualDiskName;
        public Builder() {}
        public Builder(VirtualDiskResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.controllerId = defaults.controllerId;
    	      this.independenceMode = defaults.independenceMode;
    	      this.totalSize = defaults.totalSize;
    	      this.virtualDiskId = defaults.virtualDiskId;
    	      this.virtualDiskName = defaults.virtualDiskName;
        }

        @CustomType.Setter
        public Builder controllerId(String controllerId) {
            this.controllerId = Objects.requireNonNull(controllerId);
            return this;
        }
        @CustomType.Setter
        public Builder independenceMode(String independenceMode) {
            this.independenceMode = Objects.requireNonNull(independenceMode);
            return this;
        }
        @CustomType.Setter
        public Builder totalSize(Integer totalSize) {
            this.totalSize = Objects.requireNonNull(totalSize);
            return this;
        }
        @CustomType.Setter
        public Builder virtualDiskId(@Nullable String virtualDiskId) {
            this.virtualDiskId = virtualDiskId;
            return this;
        }
        @CustomType.Setter
        public Builder virtualDiskName(String virtualDiskName) {
            this.virtualDiskName = Objects.requireNonNull(virtualDiskName);
            return this;
        }
        public VirtualDiskResponse build() {
            final var o = new VirtualDiskResponse();
            o.controllerId = controllerId;
            o.independenceMode = independenceMode;
            o.totalSize = totalSize;
            o.virtualDiskId = virtualDiskId;
            o.virtualDiskName = virtualDiskName;
            return o;
        }
    }
}
