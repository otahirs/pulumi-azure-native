// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.devhub.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetGitHubOAuthPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetGitHubOAuthPlainArgs Empty = new GetGitHubOAuthPlainArgs();

    /**
     * The name of Azure region.
     * 
     */
    @Import(name="location", required=true)
    private String location;

    /**
     * @return The name of Azure region.
     * 
     */
    public String location() {
        return this.location;
    }

    /**
     * The URL the client will redirect to on successful authentication. If empty, no redirect will occur.
     * 
     */
    @Import(name="redirectUrl")
    private @Nullable String redirectUrl;

    /**
     * @return The URL the client will redirect to on successful authentication. If empty, no redirect will occur.
     * 
     */
    public Optional<String> redirectUrl() {
        return Optional.ofNullable(this.redirectUrl);
    }

    private GetGitHubOAuthPlainArgs() {}

    private GetGitHubOAuthPlainArgs(GetGitHubOAuthPlainArgs $) {
        this.location = $.location;
        this.redirectUrl = $.redirectUrl;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetGitHubOAuthPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetGitHubOAuthPlainArgs $;

        public Builder() {
            $ = new GetGitHubOAuthPlainArgs();
        }

        public Builder(GetGitHubOAuthPlainArgs defaults) {
            $ = new GetGitHubOAuthPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param location The name of Azure region.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            $.location = location;
            return this;
        }

        /**
         * @param redirectUrl The URL the client will redirect to on successful authentication. If empty, no redirect will occur.
         * 
         * @return builder
         * 
         */
        public Builder redirectUrl(@Nullable String redirectUrl) {
            $.redirectUrl = redirectUrl;
            return this;
        }

        public GetGitHubOAuthPlainArgs build() {
            $.location = Objects.requireNonNull($.location, "expected parameter 'location' to be non-null");
            return $;
        }
    }

}
