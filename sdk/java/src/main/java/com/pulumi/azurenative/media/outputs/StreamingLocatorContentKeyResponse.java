// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.media.outputs;

import com.pulumi.azurenative.media.outputs.TrackSelectionResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class StreamingLocatorContentKeyResponse {
    /**
     * @return ID of Content Key
     * 
     */
    private String id;
    /**
     * @return Label of Content Key as specified in the Streaming Policy
     * 
     */
    private @Nullable String labelReferenceInStreamingPolicy;
    /**
     * @return ContentKeyPolicy used by Content Key
     * 
     */
    private String policyName;
    /**
     * @return Tracks which use this Content Key
     * 
     */
    private List<TrackSelectionResponse> tracks;
    /**
     * @return Encryption type of Content Key
     * 
     */
    private String type;
    /**
     * @return Value of Content Key
     * 
     */
    private @Nullable String value;

    private StreamingLocatorContentKeyResponse() {}
    /**
     * @return ID of Content Key
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Label of Content Key as specified in the Streaming Policy
     * 
     */
    public Optional<String> labelReferenceInStreamingPolicy() {
        return Optional.ofNullable(this.labelReferenceInStreamingPolicy);
    }
    /**
     * @return ContentKeyPolicy used by Content Key
     * 
     */
    public String policyName() {
        return this.policyName;
    }
    /**
     * @return Tracks which use this Content Key
     * 
     */
    public List<TrackSelectionResponse> tracks() {
        return this.tracks;
    }
    /**
     * @return Encryption type of Content Key
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return Value of Content Key
     * 
     */
    public Optional<String> value() {
        return Optional.ofNullable(this.value);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(StreamingLocatorContentKeyResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private @Nullable String labelReferenceInStreamingPolicy;
        private String policyName;
        private List<TrackSelectionResponse> tracks;
        private String type;
        private @Nullable String value;
        public Builder() {}
        public Builder(StreamingLocatorContentKeyResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.labelReferenceInStreamingPolicy = defaults.labelReferenceInStreamingPolicy;
    	      this.policyName = defaults.policyName;
    	      this.tracks = defaults.tracks;
    	      this.type = defaults.type;
    	      this.value = defaults.value;
        }

        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder labelReferenceInStreamingPolicy(@Nullable String labelReferenceInStreamingPolicy) {
            this.labelReferenceInStreamingPolicy = labelReferenceInStreamingPolicy;
            return this;
        }
        @CustomType.Setter
        public Builder policyName(String policyName) {
            this.policyName = Objects.requireNonNull(policyName);
            return this;
        }
        @CustomType.Setter
        public Builder tracks(List<TrackSelectionResponse> tracks) {
            this.tracks = Objects.requireNonNull(tracks);
            return this;
        }
        public Builder tracks(TrackSelectionResponse... tracks) {
            return tracks(List.of(tracks));
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder value(@Nullable String value) {
            this.value = value;
            return this;
        }
        public StreamingLocatorContentKeyResponse build() {
            final var o = new StreamingLocatorContentKeyResponse();
            o.id = id;
            o.labelReferenceInStreamingPolicy = labelReferenceInStreamingPolicy;
            o.policyName = policyName;
            o.tracks = tracks;
            o.type = type;
            o.value = value;
            return o;
        }
    }
}
