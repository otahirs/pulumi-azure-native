// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.workloads;

import com.pulumi.azurenative.workloads.enums.WorkloadKind;
import com.pulumi.azurenative.workloads.inputs.BackupProfileArgs;
import com.pulumi.azurenative.workloads.inputs.CacheProfileArgs;
import com.pulumi.azurenative.workloads.inputs.DatabaseProfileArgs;
import com.pulumi.azurenative.workloads.inputs.FileshareProfileArgs;
import com.pulumi.azurenative.workloads.inputs.ManagedRGConfigurationArgs;
import com.pulumi.azurenative.workloads.inputs.NetworkProfileArgs;
import com.pulumi.azurenative.workloads.inputs.NodeProfileArgs;
import com.pulumi.azurenative.workloads.inputs.PhpProfileArgs;
import com.pulumi.azurenative.workloads.inputs.PhpWorkloadResourceIdentityArgs;
import com.pulumi.azurenative.workloads.inputs.SearchProfileArgs;
import com.pulumi.azurenative.workloads.inputs.SiteProfileArgs;
import com.pulumi.azurenative.workloads.inputs.SkuArgs;
import com.pulumi.azurenative.workloads.inputs.UserProfileArgs;
import com.pulumi.azurenative.workloads.inputs.VmssNodesProfileArgs;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PhpWorkloadArgs extends com.pulumi.resources.ResourceArgs {

    public static final PhpWorkloadArgs Empty = new PhpWorkloadArgs();

    /**
     * Admin user profile used for VM and VMSS
     * 
     */
    @Import(name="adminUserProfile", required=true)
    private Output<UserProfileArgs> adminUserProfile;

    /**
     * @return Admin user profile used for VM and VMSS
     * 
     */
    public Output<UserProfileArgs> adminUserProfile() {
        return this.adminUserProfile;
    }

    /**
     * The infra resources for PHP workload will be created in this location
     * 
     */
    @Import(name="appLocation", required=true)
    private Output<String> appLocation;

    /**
     * @return The infra resources for PHP workload will be created in this location
     * 
     */
    public Output<String> appLocation() {
        return this.appLocation;
    }

    /**
     * Backup profile
     * 
     */
    @Import(name="backupProfile")
    private @Nullable Output<BackupProfileArgs> backupProfile;

    /**
     * @return Backup profile
     * 
     */
    public Optional<Output<BackupProfileArgs>> backupProfile() {
        return Optional.ofNullable(this.backupProfile);
    }

    /**
     * Cache profile
     * 
     */
    @Import(name="cacheProfile")
    private @Nullable Output<CacheProfileArgs> cacheProfile;

    /**
     * @return Cache profile
     * 
     */
    public Optional<Output<CacheProfileArgs>> cacheProfile() {
        return Optional.ofNullable(this.cacheProfile);
    }

    /**
     * Controller VM profile
     * 
     */
    @Import(name="controllerProfile", required=true)
    private Output<NodeProfileArgs> controllerProfile;

    /**
     * @return Controller VM profile
     * 
     */
    public Output<NodeProfileArgs> controllerProfile() {
        return this.controllerProfile;
    }

    /**
     * Database profile
     * 
     */
    @Import(name="databaseProfile", required=true)
    private Output<DatabaseProfileArgs> databaseProfile;

    /**
     * @return Database profile
     * 
     */
    public Output<DatabaseProfileArgs> databaseProfile() {
        return this.databaseProfile;
    }

    /**
     * File share profile
     * 
     */
    @Import(name="fileshareProfile")
    private @Nullable Output<FileshareProfileArgs> fileshareProfile;

    /**
     * @return File share profile
     * 
     */
    public Optional<Output<FileshareProfileArgs>> fileshareProfile() {
        return Optional.ofNullable(this.fileshareProfile);
    }

    /**
     * Identity for the resource. Currently not supported
     * 
     */
    @Import(name="identity")
    private @Nullable Output<PhpWorkloadResourceIdentityArgs> identity;

    /**
     * @return Identity for the resource. Currently not supported
     * 
     */
    public Optional<Output<PhpWorkloadResourceIdentityArgs>> identity() {
        return Optional.ofNullable(this.identity);
    }

    /**
     * Indicates which kind of php workload this resource represent e.g WordPress
     * 
     */
    @Import(name="kind", required=true)
    private Output<Either<String,WorkloadKind>> kind;

    /**
     * @return Indicates which kind of php workload this resource represent e.g WordPress
     * 
     */
    public Output<Either<String,WorkloadKind>> kind() {
        return this.kind;
    }

    /**
     * The geo-location where the resource lives
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The geo-location where the resource lives
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Managed resource group configuration of the workload
     * 
     */
    @Import(name="managedResourceGroupConfiguration")
    private @Nullable Output<ManagedRGConfigurationArgs> managedResourceGroupConfiguration;

    /**
     * @return Managed resource group configuration of the workload
     * 
     */
    public Optional<Output<ManagedRGConfigurationArgs>> managedResourceGroupConfiguration() {
        return Optional.ofNullable(this.managedResourceGroupConfiguration);
    }

    /**
     * Network profile
     * 
     */
    @Import(name="networkProfile")
    private @Nullable Output<NetworkProfileArgs> networkProfile;

    /**
     * @return Network profile
     * 
     */
    public Optional<Output<NetworkProfileArgs>> networkProfile() {
        return Optional.ofNullable(this.networkProfile);
    }

    /**
     * PHP profile
     * 
     */
    @Import(name="phpProfile")
    private @Nullable Output<PhpProfileArgs> phpProfile;

    /**
     * @return PHP profile
     * 
     */
    public Optional<Output<PhpProfileArgs>> phpProfile() {
        return Optional.ofNullable(this.phpProfile);
    }

    /**
     * Php workload name
     * 
     */
    @Import(name="phpWorkloadName")
    private @Nullable Output<String> phpWorkloadName;

    /**
     * @return Php workload name
     * 
     */
    public Optional<Output<String>> phpWorkloadName() {
        return Optional.ofNullable(this.phpWorkloadName);
    }

    /**
     * The name of the resource group. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group. The name is case insensitive.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Search profile
     * 
     */
    @Import(name="searchProfile")
    private @Nullable Output<SearchProfileArgs> searchProfile;

    /**
     * @return Search profile
     * 
     */
    public Optional<Output<SearchProfileArgs>> searchProfile() {
        return Optional.ofNullable(this.searchProfile);
    }

    /**
     * Site profile
     * 
     */
    @Import(name="siteProfile")
    private @Nullable Output<SiteProfileArgs> siteProfile;

    /**
     * @return Site profile
     * 
     */
    public Optional<Output<SiteProfileArgs>> siteProfile() {
        return Optional.ofNullable(this.siteProfile);
    }

    /**
     * Php workloads SKU
     * 
     */
    @Import(name="sku")
    private @Nullable Output<SkuArgs> sku;

    /**
     * @return Php workloads SKU
     * 
     */
    public Optional<Output<SkuArgs>> sku() {
        return Optional.ofNullable(this.sku);
    }

    /**
     * Resource tags.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Resource tags.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * VMSS web nodes profile
     * 
     */
    @Import(name="webNodesProfile", required=true)
    private Output<VmssNodesProfileArgs> webNodesProfile;

    /**
     * @return VMSS web nodes profile
     * 
     */
    public Output<VmssNodesProfileArgs> webNodesProfile() {
        return this.webNodesProfile;
    }

    private PhpWorkloadArgs() {}

    private PhpWorkloadArgs(PhpWorkloadArgs $) {
        this.adminUserProfile = $.adminUserProfile;
        this.appLocation = $.appLocation;
        this.backupProfile = $.backupProfile;
        this.cacheProfile = $.cacheProfile;
        this.controllerProfile = $.controllerProfile;
        this.databaseProfile = $.databaseProfile;
        this.fileshareProfile = $.fileshareProfile;
        this.identity = $.identity;
        this.kind = $.kind;
        this.location = $.location;
        this.managedResourceGroupConfiguration = $.managedResourceGroupConfiguration;
        this.networkProfile = $.networkProfile;
        this.phpProfile = $.phpProfile;
        this.phpWorkloadName = $.phpWorkloadName;
        this.resourceGroupName = $.resourceGroupName;
        this.searchProfile = $.searchProfile;
        this.siteProfile = $.siteProfile;
        this.sku = $.sku;
        this.tags = $.tags;
        this.webNodesProfile = $.webNodesProfile;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PhpWorkloadArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PhpWorkloadArgs $;

        public Builder() {
            $ = new PhpWorkloadArgs();
        }

        public Builder(PhpWorkloadArgs defaults) {
            $ = new PhpWorkloadArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param adminUserProfile Admin user profile used for VM and VMSS
         * 
         * @return builder
         * 
         */
        public Builder adminUserProfile(Output<UserProfileArgs> adminUserProfile) {
            $.adminUserProfile = adminUserProfile;
            return this;
        }

        /**
         * @param adminUserProfile Admin user profile used for VM and VMSS
         * 
         * @return builder
         * 
         */
        public Builder adminUserProfile(UserProfileArgs adminUserProfile) {
            return adminUserProfile(Output.of(adminUserProfile));
        }

        /**
         * @param appLocation The infra resources for PHP workload will be created in this location
         * 
         * @return builder
         * 
         */
        public Builder appLocation(Output<String> appLocation) {
            $.appLocation = appLocation;
            return this;
        }

        /**
         * @param appLocation The infra resources for PHP workload will be created in this location
         * 
         * @return builder
         * 
         */
        public Builder appLocation(String appLocation) {
            return appLocation(Output.of(appLocation));
        }

        /**
         * @param backupProfile Backup profile
         * 
         * @return builder
         * 
         */
        public Builder backupProfile(@Nullable Output<BackupProfileArgs> backupProfile) {
            $.backupProfile = backupProfile;
            return this;
        }

        /**
         * @param backupProfile Backup profile
         * 
         * @return builder
         * 
         */
        public Builder backupProfile(BackupProfileArgs backupProfile) {
            return backupProfile(Output.of(backupProfile));
        }

        /**
         * @param cacheProfile Cache profile
         * 
         * @return builder
         * 
         */
        public Builder cacheProfile(@Nullable Output<CacheProfileArgs> cacheProfile) {
            $.cacheProfile = cacheProfile;
            return this;
        }

        /**
         * @param cacheProfile Cache profile
         * 
         * @return builder
         * 
         */
        public Builder cacheProfile(CacheProfileArgs cacheProfile) {
            return cacheProfile(Output.of(cacheProfile));
        }

        /**
         * @param controllerProfile Controller VM profile
         * 
         * @return builder
         * 
         */
        public Builder controllerProfile(Output<NodeProfileArgs> controllerProfile) {
            $.controllerProfile = controllerProfile;
            return this;
        }

        /**
         * @param controllerProfile Controller VM profile
         * 
         * @return builder
         * 
         */
        public Builder controllerProfile(NodeProfileArgs controllerProfile) {
            return controllerProfile(Output.of(controllerProfile));
        }

        /**
         * @param databaseProfile Database profile
         * 
         * @return builder
         * 
         */
        public Builder databaseProfile(Output<DatabaseProfileArgs> databaseProfile) {
            $.databaseProfile = databaseProfile;
            return this;
        }

        /**
         * @param databaseProfile Database profile
         * 
         * @return builder
         * 
         */
        public Builder databaseProfile(DatabaseProfileArgs databaseProfile) {
            return databaseProfile(Output.of(databaseProfile));
        }

        /**
         * @param fileshareProfile File share profile
         * 
         * @return builder
         * 
         */
        public Builder fileshareProfile(@Nullable Output<FileshareProfileArgs> fileshareProfile) {
            $.fileshareProfile = fileshareProfile;
            return this;
        }

        /**
         * @param fileshareProfile File share profile
         * 
         * @return builder
         * 
         */
        public Builder fileshareProfile(FileshareProfileArgs fileshareProfile) {
            return fileshareProfile(Output.of(fileshareProfile));
        }

        /**
         * @param identity Identity for the resource. Currently not supported
         * 
         * @return builder
         * 
         */
        public Builder identity(@Nullable Output<PhpWorkloadResourceIdentityArgs> identity) {
            $.identity = identity;
            return this;
        }

        /**
         * @param identity Identity for the resource. Currently not supported
         * 
         * @return builder
         * 
         */
        public Builder identity(PhpWorkloadResourceIdentityArgs identity) {
            return identity(Output.of(identity));
        }

        /**
         * @param kind Indicates which kind of php workload this resource represent e.g WordPress
         * 
         * @return builder
         * 
         */
        public Builder kind(Output<Either<String,WorkloadKind>> kind) {
            $.kind = kind;
            return this;
        }

        /**
         * @param kind Indicates which kind of php workload this resource represent e.g WordPress
         * 
         * @return builder
         * 
         */
        public Builder kind(Either<String,WorkloadKind> kind) {
            return kind(Output.of(kind));
        }

        /**
         * @param kind Indicates which kind of php workload this resource represent e.g WordPress
         * 
         * @return builder
         * 
         */
        public Builder kind(String kind) {
            return kind(Either.ofLeft(kind));
        }

        /**
         * @param kind Indicates which kind of php workload this resource represent e.g WordPress
         * 
         * @return builder
         * 
         */
        public Builder kind(WorkloadKind kind) {
            return kind(Either.ofRight(kind));
        }

        /**
         * @param location The geo-location where the resource lives
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The geo-location where the resource lives
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param managedResourceGroupConfiguration Managed resource group configuration of the workload
         * 
         * @return builder
         * 
         */
        public Builder managedResourceGroupConfiguration(@Nullable Output<ManagedRGConfigurationArgs> managedResourceGroupConfiguration) {
            $.managedResourceGroupConfiguration = managedResourceGroupConfiguration;
            return this;
        }

        /**
         * @param managedResourceGroupConfiguration Managed resource group configuration of the workload
         * 
         * @return builder
         * 
         */
        public Builder managedResourceGroupConfiguration(ManagedRGConfigurationArgs managedResourceGroupConfiguration) {
            return managedResourceGroupConfiguration(Output.of(managedResourceGroupConfiguration));
        }

        /**
         * @param networkProfile Network profile
         * 
         * @return builder
         * 
         */
        public Builder networkProfile(@Nullable Output<NetworkProfileArgs> networkProfile) {
            $.networkProfile = networkProfile;
            return this;
        }

        /**
         * @param networkProfile Network profile
         * 
         * @return builder
         * 
         */
        public Builder networkProfile(NetworkProfileArgs networkProfile) {
            return networkProfile(Output.of(networkProfile));
        }

        /**
         * @param phpProfile PHP profile
         * 
         * @return builder
         * 
         */
        public Builder phpProfile(@Nullable Output<PhpProfileArgs> phpProfile) {
            $.phpProfile = phpProfile;
            return this;
        }

        /**
         * @param phpProfile PHP profile
         * 
         * @return builder
         * 
         */
        public Builder phpProfile(PhpProfileArgs phpProfile) {
            return phpProfile(Output.of(phpProfile));
        }

        /**
         * @param phpWorkloadName Php workload name
         * 
         * @return builder
         * 
         */
        public Builder phpWorkloadName(@Nullable Output<String> phpWorkloadName) {
            $.phpWorkloadName = phpWorkloadName;
            return this;
        }

        /**
         * @param phpWorkloadName Php workload name
         * 
         * @return builder
         * 
         */
        public Builder phpWorkloadName(String phpWorkloadName) {
            return phpWorkloadName(Output.of(phpWorkloadName));
        }

        /**
         * @param resourceGroupName The name of the resource group. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param searchProfile Search profile
         * 
         * @return builder
         * 
         */
        public Builder searchProfile(@Nullable Output<SearchProfileArgs> searchProfile) {
            $.searchProfile = searchProfile;
            return this;
        }

        /**
         * @param searchProfile Search profile
         * 
         * @return builder
         * 
         */
        public Builder searchProfile(SearchProfileArgs searchProfile) {
            return searchProfile(Output.of(searchProfile));
        }

        /**
         * @param siteProfile Site profile
         * 
         * @return builder
         * 
         */
        public Builder siteProfile(@Nullable Output<SiteProfileArgs> siteProfile) {
            $.siteProfile = siteProfile;
            return this;
        }

        /**
         * @param siteProfile Site profile
         * 
         * @return builder
         * 
         */
        public Builder siteProfile(SiteProfileArgs siteProfile) {
            return siteProfile(Output.of(siteProfile));
        }

        /**
         * @param sku Php workloads SKU
         * 
         * @return builder
         * 
         */
        public Builder sku(@Nullable Output<SkuArgs> sku) {
            $.sku = sku;
            return this;
        }

        /**
         * @param sku Php workloads SKU
         * 
         * @return builder
         * 
         */
        public Builder sku(SkuArgs sku) {
            return sku(Output.of(sku));
        }

        /**
         * @param tags Resource tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Resource tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param webNodesProfile VMSS web nodes profile
         * 
         * @return builder
         * 
         */
        public Builder webNodesProfile(Output<VmssNodesProfileArgs> webNodesProfile) {
            $.webNodesProfile = webNodesProfile;
            return this;
        }

        /**
         * @param webNodesProfile VMSS web nodes profile
         * 
         * @return builder
         * 
         */
        public Builder webNodesProfile(VmssNodesProfileArgs webNodesProfile) {
            return webNodesProfile(Output.of(webNodesProfile));
        }

        public PhpWorkloadArgs build() {
            $.adminUserProfile = Objects.requireNonNull($.adminUserProfile, "expected parameter 'adminUserProfile' to be non-null");
            $.appLocation = Objects.requireNonNull($.appLocation, "expected parameter 'appLocation' to be non-null");
            $.controllerProfile = Objects.requireNonNull($.controllerProfile, "expected parameter 'controllerProfile' to be non-null");
            $.databaseProfile = Objects.requireNonNull($.databaseProfile, "expected parameter 'databaseProfile' to be non-null");
            $.kind = Objects.requireNonNull($.kind, "expected parameter 'kind' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.webNodesProfile = Objects.requireNonNull($.webNodesProfile, "expected parameter 'webNodesProfile' to be non-null");
            return $;
        }
    }

}
