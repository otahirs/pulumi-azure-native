// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearningservices.outputs;

import com.pulumi.azurenative.machinelearningservices.outputs.ClientCredentialsResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AzureStorageSectionResponse {
    /**
     * @return  Storage Account Key (Deprecated).
     * 
     */
    private @Nullable String accountKey;
    /**
     * @return Storage Account Name.
     * 
     */
    private @Nullable String accountName;
    /**
     * @return Indicate if we are using Workspace ManagedIdentities/MSI token (Deprecated).
     * 
     */
    private @Nullable Boolean areWorkspaceManagedIdentitiesAllowed;
    /**
     * @return  If this is an &#34;DataStoreType.AzureBlob&#34;, the length of time (in seconds) to cache files locally after they are accessed (downloaded).
     * 
     */
    private @Nullable Integer blobCacheTimeout;
    private @Nullable ClientCredentialsResponse clientCredentials;
    /**
     * @return The storage container name.
     * 
     */
    private @Nullable String containerName;
    /**
     * @return The credential.
     * 
     */
    private @Nullable String credential;
    /**
     * @return  The credential type.
     * 
     */
    private @Nullable String credentialType;
    /**
     * @return The host of the container.
     * 
     */
    private @Nullable String endpoint;
    /**
     * @return Indicate if we are using SAS token or Account Key (Deprecated).
     * 
     */
    private @Nullable Boolean isSas;
    /**
     * @return The protocol to use. Defaults to https.
     * 
     */
    private @Nullable String protocol;
    /**
     * @return Resource Group.
     * 
     */
    private @Nullable String resourceGroup;
    /**
     * @return  SAS Token for the container (Deprecated).
     * 
     */
    private @Nullable String sasToken;
    /**
     * @return Indicates which identity to use to authenticate service data access to customer&#39;s storage.
     * 
     */
    private @Nullable String serviceDataAccessAuthIdentity;
    /**
     * @return Subscription ID.
     * 
     */
    private @Nullable String subscriptionId;

    private AzureStorageSectionResponse() {}
    /**
     * @return  Storage Account Key (Deprecated).
     * 
     */
    public Optional<String> accountKey() {
        return Optional.ofNullable(this.accountKey);
    }
    /**
     * @return Storage Account Name.
     * 
     */
    public Optional<String> accountName() {
        return Optional.ofNullable(this.accountName);
    }
    /**
     * @return Indicate if we are using Workspace ManagedIdentities/MSI token (Deprecated).
     * 
     */
    public Optional<Boolean> areWorkspaceManagedIdentitiesAllowed() {
        return Optional.ofNullable(this.areWorkspaceManagedIdentitiesAllowed);
    }
    /**
     * @return  If this is an &#34;DataStoreType.AzureBlob&#34;, the length of time (in seconds) to cache files locally after they are accessed (downloaded).
     * 
     */
    public Optional<Integer> blobCacheTimeout() {
        return Optional.ofNullable(this.blobCacheTimeout);
    }
    public Optional<ClientCredentialsResponse> clientCredentials() {
        return Optional.ofNullable(this.clientCredentials);
    }
    /**
     * @return The storage container name.
     * 
     */
    public Optional<String> containerName() {
        return Optional.ofNullable(this.containerName);
    }
    /**
     * @return The credential.
     * 
     */
    public Optional<String> credential() {
        return Optional.ofNullable(this.credential);
    }
    /**
     * @return  The credential type.
     * 
     */
    public Optional<String> credentialType() {
        return Optional.ofNullable(this.credentialType);
    }
    /**
     * @return The host of the container.
     * 
     */
    public Optional<String> endpoint() {
        return Optional.ofNullable(this.endpoint);
    }
    /**
     * @return Indicate if we are using SAS token or Account Key (Deprecated).
     * 
     */
    public Optional<Boolean> isSas() {
        return Optional.ofNullable(this.isSas);
    }
    /**
     * @return The protocol to use. Defaults to https.
     * 
     */
    public Optional<String> protocol() {
        return Optional.ofNullable(this.protocol);
    }
    /**
     * @return Resource Group.
     * 
     */
    public Optional<String> resourceGroup() {
        return Optional.ofNullable(this.resourceGroup);
    }
    /**
     * @return  SAS Token for the container (Deprecated).
     * 
     */
    public Optional<String> sasToken() {
        return Optional.ofNullable(this.sasToken);
    }
    /**
     * @return Indicates which identity to use to authenticate service data access to customer&#39;s storage.
     * 
     */
    public Optional<String> serviceDataAccessAuthIdentity() {
        return Optional.ofNullable(this.serviceDataAccessAuthIdentity);
    }
    /**
     * @return Subscription ID.
     * 
     */
    public Optional<String> subscriptionId() {
        return Optional.ofNullable(this.subscriptionId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AzureStorageSectionResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String accountKey;
        private @Nullable String accountName;
        private @Nullable Boolean areWorkspaceManagedIdentitiesAllowed;
        private @Nullable Integer blobCacheTimeout;
        private @Nullable ClientCredentialsResponse clientCredentials;
        private @Nullable String containerName;
        private @Nullable String credential;
        private @Nullable String credentialType;
        private @Nullable String endpoint;
        private @Nullable Boolean isSas;
        private @Nullable String protocol;
        private @Nullable String resourceGroup;
        private @Nullable String sasToken;
        private @Nullable String serviceDataAccessAuthIdentity;
        private @Nullable String subscriptionId;
        public Builder() {}
        public Builder(AzureStorageSectionResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountKey = defaults.accountKey;
    	      this.accountName = defaults.accountName;
    	      this.areWorkspaceManagedIdentitiesAllowed = defaults.areWorkspaceManagedIdentitiesAllowed;
    	      this.blobCacheTimeout = defaults.blobCacheTimeout;
    	      this.clientCredentials = defaults.clientCredentials;
    	      this.containerName = defaults.containerName;
    	      this.credential = defaults.credential;
    	      this.credentialType = defaults.credentialType;
    	      this.endpoint = defaults.endpoint;
    	      this.isSas = defaults.isSas;
    	      this.protocol = defaults.protocol;
    	      this.resourceGroup = defaults.resourceGroup;
    	      this.sasToken = defaults.sasToken;
    	      this.serviceDataAccessAuthIdentity = defaults.serviceDataAccessAuthIdentity;
    	      this.subscriptionId = defaults.subscriptionId;
        }

        @CustomType.Setter
        public Builder accountKey(@Nullable String accountKey) {
            this.accountKey = accountKey;
            return this;
        }
        @CustomType.Setter
        public Builder accountName(@Nullable String accountName) {
            this.accountName = accountName;
            return this;
        }
        @CustomType.Setter
        public Builder areWorkspaceManagedIdentitiesAllowed(@Nullable Boolean areWorkspaceManagedIdentitiesAllowed) {
            this.areWorkspaceManagedIdentitiesAllowed = areWorkspaceManagedIdentitiesAllowed;
            return this;
        }
        @CustomType.Setter
        public Builder blobCacheTimeout(@Nullable Integer blobCacheTimeout) {
            this.blobCacheTimeout = blobCacheTimeout;
            return this;
        }
        @CustomType.Setter
        public Builder clientCredentials(@Nullable ClientCredentialsResponse clientCredentials) {
            this.clientCredentials = clientCredentials;
            return this;
        }
        @CustomType.Setter
        public Builder containerName(@Nullable String containerName) {
            this.containerName = containerName;
            return this;
        }
        @CustomType.Setter
        public Builder credential(@Nullable String credential) {
            this.credential = credential;
            return this;
        }
        @CustomType.Setter
        public Builder credentialType(@Nullable String credentialType) {
            this.credentialType = credentialType;
            return this;
        }
        @CustomType.Setter
        public Builder endpoint(@Nullable String endpoint) {
            this.endpoint = endpoint;
            return this;
        }
        @CustomType.Setter
        public Builder isSas(@Nullable Boolean isSas) {
            this.isSas = isSas;
            return this;
        }
        @CustomType.Setter
        public Builder protocol(@Nullable String protocol) {
            this.protocol = protocol;
            return this;
        }
        @CustomType.Setter
        public Builder resourceGroup(@Nullable String resourceGroup) {
            this.resourceGroup = resourceGroup;
            return this;
        }
        @CustomType.Setter
        public Builder sasToken(@Nullable String sasToken) {
            this.sasToken = sasToken;
            return this;
        }
        @CustomType.Setter
        public Builder serviceDataAccessAuthIdentity(@Nullable String serviceDataAccessAuthIdentity) {
            this.serviceDataAccessAuthIdentity = serviceDataAccessAuthIdentity;
            return this;
        }
        @CustomType.Setter
        public Builder subscriptionId(@Nullable String subscriptionId) {
            this.subscriptionId = subscriptionId;
            return this;
        }
        public AzureStorageSectionResponse build() {
            final var o = new AzureStorageSectionResponse();
            o.accountKey = accountKey;
            o.accountName = accountName;
            o.areWorkspaceManagedIdentitiesAllowed = areWorkspaceManagedIdentitiesAllowed;
            o.blobCacheTimeout = blobCacheTimeout;
            o.clientCredentials = clientCredentials;
            o.containerName = containerName;
            o.credential = credential;
            o.credentialType = credentialType;
            o.endpoint = endpoint;
            o.isSas = isSas;
            o.protocol = protocol;
            o.resourceGroup = resourceGroup;
            o.sasToken = sasToken;
            o.serviceDataAccessAuthIdentity = serviceDataAccessAuthIdentity;
            o.subscriptionId = subscriptionId;
            return o;
        }
    }
}
