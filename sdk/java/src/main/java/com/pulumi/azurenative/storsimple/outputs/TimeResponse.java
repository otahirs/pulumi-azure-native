// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.storsimple.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.util.Objects;

@CustomType
public final class TimeResponse {
    /**
     * @return The hour.
     * 
     */
    private Integer hours;
    /**
     * @return The minute.
     * 
     */
    private Integer minutes;
    /**
     * @return The second.
     * 
     */
    private Integer seconds;

    private TimeResponse() {}
    /**
     * @return The hour.
     * 
     */
    public Integer hours() {
        return this.hours;
    }
    /**
     * @return The minute.
     * 
     */
    public Integer minutes() {
        return this.minutes;
    }
    /**
     * @return The second.
     * 
     */
    public Integer seconds() {
        return this.seconds;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TimeResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer hours;
        private Integer minutes;
        private Integer seconds;
        public Builder() {}
        public Builder(TimeResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.hours = defaults.hours;
    	      this.minutes = defaults.minutes;
    	      this.seconds = defaults.seconds;
        }

        @CustomType.Setter
        public Builder hours(Integer hours) {
            this.hours = Objects.requireNonNull(hours);
            return this;
        }
        @CustomType.Setter
        public Builder minutes(Integer minutes) {
            this.minutes = Objects.requireNonNull(minutes);
            return this;
        }
        @CustomType.Setter
        public Builder seconds(Integer seconds) {
            this.seconds = Objects.requireNonNull(seconds);
            return this;
        }
        public TimeResponse build() {
            final var o = new TimeResponse();
            o.hours = hours;
            o.minutes = minutes;
            o.seconds = seconds;
            return o;
        }
    }
}
