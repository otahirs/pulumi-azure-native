// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.outputs;

import com.pulumi.azurenative.network.outputs.ApplicationRuleConditionResponse;
import com.pulumi.azurenative.network.outputs.FirewallPolicyFilterRuleActionResponse;
import com.pulumi.azurenative.network.outputs.NatRuleConditionResponse;
import com.pulumi.azurenative.network.outputs.NetworkRuleConditionResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class FirewallPolicyFilterRuleResponse {
    /**
     * @return The action type of a Filter rule.
     * 
     */
    private @Nullable FirewallPolicyFilterRuleActionResponse action;
    /**
     * @return The name of the rule.
     * 
     */
    private @Nullable String name;
    /**
     * @return Priority of the Firewall Policy Rule resource.
     * 
     */
    private @Nullable Integer priority;
    /**
     * @return Collection of rule conditions used by a rule.
     * 
     */
    private @Nullable List<Object> ruleConditions;
    /**
     * @return The type of the rule.
     * Expected value is &#39;FirewallPolicyFilterRule&#39;.
     * 
     */
    private String ruleType;

    private FirewallPolicyFilterRuleResponse() {}
    /**
     * @return The action type of a Filter rule.
     * 
     */
    public Optional<FirewallPolicyFilterRuleActionResponse> action() {
        return Optional.ofNullable(this.action);
    }
    /**
     * @return The name of the rule.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return Priority of the Firewall Policy Rule resource.
     * 
     */
    public Optional<Integer> priority() {
        return Optional.ofNullable(this.priority);
    }
    /**
     * @return Collection of rule conditions used by a rule.
     * 
     */
    public List<Object> ruleConditions() {
        return this.ruleConditions == null ? List.of() : this.ruleConditions;
    }
    /**
     * @return The type of the rule.
     * Expected value is &#39;FirewallPolicyFilterRule&#39;.
     * 
     */
    public String ruleType() {
        return this.ruleType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FirewallPolicyFilterRuleResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable FirewallPolicyFilterRuleActionResponse action;
        private @Nullable String name;
        private @Nullable Integer priority;
        private @Nullable List<Object> ruleConditions;
        private String ruleType;
        public Builder() {}
        public Builder(FirewallPolicyFilterRuleResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.action = defaults.action;
    	      this.name = defaults.name;
    	      this.priority = defaults.priority;
    	      this.ruleConditions = defaults.ruleConditions;
    	      this.ruleType = defaults.ruleType;
        }

        @CustomType.Setter
        public Builder action(@Nullable FirewallPolicyFilterRuleActionResponse action) {
            this.action = action;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder priority(@Nullable Integer priority) {
            this.priority = priority;
            return this;
        }
        @CustomType.Setter
        public Builder ruleConditions(@Nullable List<Object> ruleConditions) {
            this.ruleConditions = ruleConditions;
            return this;
        }
        public Builder ruleConditions(Object... ruleConditions) {
            return ruleConditions(List.of(ruleConditions));
        }
        @CustomType.Setter
        public Builder ruleType(String ruleType) {
            this.ruleType = Objects.requireNonNull(ruleType);
            return this;
        }
        public FirewallPolicyFilterRuleResponse build() {
            final var o = new FirewallPolicyFilterRuleResponse();
            o.action = action;
            o.name = name;
            o.priority = priority;
            o.ruleConditions = ruleConditions;
            o.ruleType = ruleType;
            return o;
        }
    }
}
