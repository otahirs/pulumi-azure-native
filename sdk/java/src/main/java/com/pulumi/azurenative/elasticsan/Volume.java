// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.elasticsan;

import com.pulumi.azurenative.Utilities;
import com.pulumi.azurenative.elasticsan.VolumeArgs;
import com.pulumi.azurenative.elasticsan.outputs.IscsiTargetInfoResponse;
import com.pulumi.azurenative.elasticsan.outputs.SourceCreationDataResponse;
import com.pulumi.azurenative.elasticsan.outputs.SystemDataResponse;
import com.pulumi.core.Alias;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Response for Volume request.
 * API Version: 2021-11-20-preview.
 * 
 * ## Example Usage
 * ### Volumes_Create_MaximumSet_Gen
 * 
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var volume = new Volume(&#34;volume&#34;, VolumeArgs.builder()        
 *             .creationData(Map.ofEntries(
 *                 Map.entry(&#34;createSource&#34;, &#34;None&#34;),
 *                 Map.entry(&#34;sourceUri&#34;, &#34;aaaaaaaaaaaaaaa&#34;)
 *             ))
 *             .elasticSanName(&#34;l39-840_D8&#34;)
 *             .resourceGroupName(&#34;rgelasticsan&#34;)
 *             .sizeGiB(6)
 *             .tags(Map.of(&#34;key7173&#34;, &#34;aaaaaaaaaa&#34;))
 *             .volumeGroupName(&#34;It-I3&#34;)
 *             .volumeName(&#34;q76q-3gkP-514E&#34;)
 *             .build());
 * 
 *     }
 * }
 * 
 * ```
 * ### Volumes_Create_MinimumSet_Gen
 * 
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var volume = new Volume(&#34;volume&#34;, VolumeArgs.builder()        
 *             .elasticSanName(&#34;l39-840_D8&#34;)
 *             .resourceGroupName(&#34;rgelasticsan&#34;)
 *             .volumeGroupName(&#34;It-I3&#34;)
 *             .volumeName(&#34;q76q-3gkP-514E&#34;)
 *             .build());
 * 
 *     }
 * }
 * 
 * ```
 * 
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:elasticsan:Volume aaaaaa aaaaaaaaaaaa 
 * ```
 * 
 */
@ResourceType(type="azure-native:elasticsan:Volume")
public class Volume extends com.pulumi.resources.CustomResource {
    /**
     * State of the operation on the resource.
     * 
     */
    @Export(name="creationData", type=SourceCreationDataResponse.class, parameters={})
    private Output</* @Nullable */ SourceCreationDataResponse> creationData;

    /**
     * @return State of the operation on the resource.
     * 
     */
    public Output<Optional<SourceCreationDataResponse>> creationData() {
        return Codegen.optional(this.creationData);
    }
    /**
     * Azure resource name.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Azure resource name.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Volume size.
     * 
     */
    @Export(name="sizeGiB", type=Double.class, parameters={})
    private Output</* @Nullable */ Double> sizeGiB;

    /**
     * @return Volume size.
     * 
     */
    public Output<Optional<Double>> sizeGiB() {
        return Codegen.optional(this.sizeGiB);
    }
    /**
     * Storage target information
     * 
     */
    @Export(name="storageTarget", type=IscsiTargetInfoResponse.class, parameters={})
    private Output<IscsiTargetInfoResponse> storageTarget;

    /**
     * @return Storage target information
     * 
     */
    public Output<IscsiTargetInfoResponse> storageTarget() {
        return this.storageTarget;
    }
    /**
     * Resource metadata required by ARM RPC
     * 
     */
    @Export(name="systemData", type=SystemDataResponse.class, parameters={})
    private Output<SystemDataResponse> systemData;

    /**
     * @return Resource metadata required by ARM RPC
     * 
     */
    public Output<SystemDataResponse> systemData() {
        return this.systemData;
    }
    /**
     * Azure resource tags.
     * 
     */
    @Export(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return Azure resource tags.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * Azure resource type.
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return Azure resource type.
     * 
     */
    public Output<String> type() {
        return this.type;
    }
    /**
     * Unique Id of the volume in GUID format
     * 
     */
    @Export(name="volumeId", type=String.class, parameters={})
    private Output<String> volumeId;

    /**
     * @return Unique Id of the volume in GUID format
     * 
     */
    public Output<String> volumeId() {
        return this.volumeId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Volume(String name) {
        this(name, VolumeArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Volume(String name, VolumeArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Volume(String name, VolumeArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:elasticsan:Volume", name, args == null ? VolumeArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Volume(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:elasticsan:Volume", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("azure-native:elasticsan/v20211120preview:Volume").build())
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Volume get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Volume(name, id, options);
    }
}
