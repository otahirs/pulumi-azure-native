// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network;

import com.pulumi.azurenative.Utilities;
import com.pulumi.azurenative.network.ProfileArgs;
import com.pulumi.azurenative.network.outputs.DnsConfigResponse;
import com.pulumi.azurenative.network.outputs.EndpointResponse;
import com.pulumi.azurenative.network.outputs.MonitorConfigResponse;
import com.pulumi.core.Alias;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Class representing a Traffic Manager profile.
 * API Version: 2018-08-01.
 * 
 * ## Example Usage
 * ### Profile-PUT-MultiValue
 * 
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var profile = new Profile(&#34;profile&#34;, ProfileArgs.builder()        
 *             .dnsConfig(Map.ofEntries(
 *                 Map.entry(&#34;relativeName&#34;, &#34;azsmnet6386&#34;),
 *                 Map.entry(&#34;ttl&#34;, 35)
 *             ))
 *             .location(&#34;global&#34;)
 *             .maxReturn(2)
 *             .monitorConfig(Map.ofEntries(
 *                 Map.entry(&#34;path&#34;, &#34;/testpath.aspx&#34;),
 *                 Map.entry(&#34;port&#34;, 80),
 *                 Map.entry(&#34;protocol&#34;, &#34;HTTP&#34;)
 *             ))
 *             .profileName(&#34;azsmnet6386&#34;)
 *             .profileStatus(&#34;Enabled&#34;)
 *             .resourceGroupName(&#34;azuresdkfornetautoresttrafficmanager1421&#34;)
 *             .trafficRoutingMethod(&#34;MultiValue&#34;)
 *             .trafficViewEnrollmentStatus(&#34;Disabled&#34;)
 *             .build());
 * 
 *     }
 * }
 * 
 * ```
 * ### Profile-PUT-NoEndpoints
 * 
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var profile = new Profile(&#34;profile&#34;, ProfileArgs.builder()        
 *             .dnsConfig(Map.ofEntries(
 *                 Map.entry(&#34;relativeName&#34;, &#34;azsmnet6386&#34;),
 *                 Map.entry(&#34;ttl&#34;, 35)
 *             ))
 *             .location(&#34;global&#34;)
 *             .monitorConfig(Map.ofEntries(
 *                 Map.entry(&#34;path&#34;, &#34;/testpath.aspx&#34;),
 *                 Map.entry(&#34;port&#34;, 80),
 *                 Map.entry(&#34;protocol&#34;, &#34;HTTP&#34;)
 *             ))
 *             .profileName(&#34;azsmnet6386&#34;)
 *             .profileStatus(&#34;Enabled&#34;)
 *             .resourceGroupName(&#34;azuresdkfornetautoresttrafficmanager1421&#34;)
 *             .trafficRoutingMethod(&#34;Performance&#34;)
 *             .build());
 * 
 *     }
 * }
 * 
 * ```
 * ### Profile-PUT-WithAliasing
 * 
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var profile = new Profile(&#34;profile&#34;, ProfileArgs.builder()        
 *             .allowedEndpointRecordTypes(&#34;DomainName&#34;)
 *             .dnsConfig(Map.ofEntries(
 *                 Map.entry(&#34;relativeName&#34;, &#34;azuresdkfornetautoresttrafficmanager6192&#34;),
 *                 Map.entry(&#34;ttl&#34;, 35)
 *             ))
 *             .endpoints(Map.ofEntries(
 *                 Map.entry(&#34;endpointLocation&#34;, &#34;North Europe&#34;),
 *                 Map.entry(&#34;endpointStatus&#34;, &#34;Enabled&#34;),
 *                 Map.entry(&#34;name&#34;, &#34;My external endpoint&#34;),
 *                 Map.entry(&#34;target&#34;, &#34;foobar.contoso.com&#34;),
 *                 Map.entry(&#34;type&#34;, &#34;Microsoft.network/TrafficManagerProfiles/ExternalEndpoints&#34;)
 *             ))
 *             .location(&#34;global&#34;)
 *             .monitorConfig(Map.ofEntries(
 *                 Map.entry(&#34;intervalInSeconds&#34;, 10),
 *                 Map.entry(&#34;path&#34;, &#34;/testpath.aspx&#34;),
 *                 Map.entry(&#34;port&#34;, 80),
 *                 Map.entry(&#34;protocol&#34;, &#34;HTTP&#34;),
 *                 Map.entry(&#34;timeoutInSeconds&#34;, 5),
 *                 Map.entry(&#34;toleratedNumberOfFailures&#34;, 2)
 *             ))
 *             .profileName(&#34;azuresdkfornetautoresttrafficmanager6192&#34;)
 *             .profileStatus(&#34;Enabled&#34;)
 *             .resourceGroupName(&#34;azuresdkfornetautoresttrafficmanager2583&#34;)
 *             .trafficRoutingMethod(&#34;Performance&#34;)
 *             .build());
 * 
 *     }
 * }
 * 
 * ```
 * ### Profile-PUT-WithCustomHeaders
 * 
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var profile = new Profile(&#34;profile&#34;, ProfileArgs.builder()        
 *             .dnsConfig(Map.ofEntries(
 *                 Map.entry(&#34;relativeName&#34;, &#34;azuresdkfornetautoresttrafficmanager6192&#34;),
 *                 Map.entry(&#34;ttl&#34;, 35)
 *             ))
 *             .endpoints(Map.ofEntries(
 *                 Map.entry(&#34;customHeaders&#34;, Map.ofEntries(
 *                     Map.entry(&#34;name&#34;, &#34;header-2&#34;),
 *                     Map.entry(&#34;value&#34;, &#34;value-2-overridden&#34;)
 *                 )),
 *                 Map.entry(&#34;endpointLocation&#34;, &#34;North Europe&#34;),
 *                 Map.entry(&#34;endpointStatus&#34;, &#34;Enabled&#34;),
 *                 Map.entry(&#34;name&#34;, &#34;My external endpoint&#34;),
 *                 Map.entry(&#34;target&#34;, &#34;foobar.contoso.com&#34;),
 *                 Map.entry(&#34;type&#34;, &#34;Microsoft.network/TrafficManagerProfiles/ExternalEndpoints&#34;)
 *             ))
 *             .location(&#34;global&#34;)
 *             .monitorConfig(Map.ofEntries(
 *                 Map.entry(&#34;customHeaders&#34;,                 
 *                     Map.ofEntries(
 *                         Map.entry(&#34;name&#34;, &#34;header-1&#34;),
 *                         Map.entry(&#34;value&#34;, &#34;value-1&#34;)
 *                     ),
 *                     Map.ofEntries(
 *                         Map.entry(&#34;name&#34;, &#34;header-2&#34;),
 *                         Map.entry(&#34;value&#34;, &#34;value-2&#34;)
 *                     )),
 *                 Map.entry(&#34;expectedStatusCodeRanges&#34;,                 
 *                     Map.ofEntries(
 *                         Map.entry(&#34;max&#34;, 205),
 *                         Map.entry(&#34;min&#34;, 200)
 *                     ),
 *                     Map.ofEntries(
 *                         Map.entry(&#34;max&#34;, 410),
 *                         Map.entry(&#34;min&#34;, 400)
 *                     )),
 *                 Map.entry(&#34;intervalInSeconds&#34;, 10),
 *                 Map.entry(&#34;path&#34;, &#34;/testpath.aspx&#34;),
 *                 Map.entry(&#34;port&#34;, 80),
 *                 Map.entry(&#34;protocol&#34;, &#34;HTTP&#34;),
 *                 Map.entry(&#34;timeoutInSeconds&#34;, 5),
 *                 Map.entry(&#34;toleratedNumberOfFailures&#34;, 2)
 *             ))
 *             .profileName(&#34;azuresdkfornetautoresttrafficmanager6192&#34;)
 *             .profileStatus(&#34;Enabled&#34;)
 *             .resourceGroupName(&#34;azuresdkfornetautoresttrafficmanager2583&#34;)
 *             .trafficRoutingMethod(&#34;Performance&#34;)
 *             .trafficViewEnrollmentStatus(&#34;Disabled&#34;)
 *             .build());
 * 
 *     }
 * }
 * 
 * ```
 * ### Profile-PUT-WithEndpoints
 * 
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var profile = new Profile(&#34;profile&#34;, ProfileArgs.builder()        
 *             .dnsConfig(Map.ofEntries(
 *                 Map.entry(&#34;relativeName&#34;, &#34;azuresdkfornetautoresttrafficmanager6192&#34;),
 *                 Map.entry(&#34;ttl&#34;, 35)
 *             ))
 *             .endpoints(Map.ofEntries(
 *                 Map.entry(&#34;endpointLocation&#34;, &#34;North Europe&#34;),
 *                 Map.entry(&#34;endpointStatus&#34;, &#34;Enabled&#34;),
 *                 Map.entry(&#34;name&#34;, &#34;My external endpoint&#34;),
 *                 Map.entry(&#34;target&#34;, &#34;foobar.contoso.com&#34;),
 *                 Map.entry(&#34;type&#34;, &#34;Microsoft.network/TrafficManagerProfiles/ExternalEndpoints&#34;)
 *             ))
 *             .location(&#34;global&#34;)
 *             .monitorConfig(Map.ofEntries(
 *                 Map.entry(&#34;intervalInSeconds&#34;, 10),
 *                 Map.entry(&#34;path&#34;, &#34;/testpath.aspx&#34;),
 *                 Map.entry(&#34;port&#34;, 80),
 *                 Map.entry(&#34;protocol&#34;, &#34;HTTP&#34;),
 *                 Map.entry(&#34;timeoutInSeconds&#34;, 5),
 *                 Map.entry(&#34;toleratedNumberOfFailures&#34;, 2)
 *             ))
 *             .profileName(&#34;azuresdkfornetautoresttrafficmanager6192&#34;)
 *             .profileStatus(&#34;Enabled&#34;)
 *             .resourceGroupName(&#34;azuresdkfornetautoresttrafficmanager2583&#34;)
 *             .trafficRoutingMethod(&#34;Performance&#34;)
 *             .build());
 * 
 *     }
 * }
 * 
 * ```
 * ### Profile-PUT-WithNestedEndpoints
 * 
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var profile = new Profile(&#34;profile&#34;, ProfileArgs.builder()        
 *             .dnsConfig(Map.ofEntries(
 *                 Map.entry(&#34;relativeName&#34;, &#34;parentprofile&#34;),
 *                 Map.entry(&#34;ttl&#34;, 35)
 *             ))
 *             .endpoints(            
 *                 Map.ofEntries(
 *                     Map.entry(&#34;endpointStatus&#34;, &#34;Enabled&#34;),
 *                     Map.entry(&#34;minChildEndpoints&#34;, 2),
 *                     Map.entry(&#34;minChildEndpointsIPv4&#34;, 1),
 *                     Map.entry(&#34;minChildEndpointsIPv6&#34;, 2),
 *                     Map.entry(&#34;name&#34;, &#34;MyFirstNestedEndpoint&#34;),
 *                     Map.entry(&#34;priority&#34;, 1),
 *                     Map.entry(&#34;target&#34;, &#34;firstnestedprofile.tmpreview.watmtest.azure-test.net&#34;),
 *                     Map.entry(&#34;type&#34;, &#34;Microsoft.Network/trafficManagerProfiles/nestedEndpoints&#34;),
 *                     Map.entry(&#34;weight&#34;, 1)
 *                 ),
 *                 Map.ofEntries(
 *                     Map.entry(&#34;endpointStatus&#34;, &#34;Enabled&#34;),
 *                     Map.entry(&#34;minChildEndpoints&#34;, 2),
 *                     Map.entry(&#34;minChildEndpointsIPv4&#34;, 2),
 *                     Map.entry(&#34;minChildEndpointsIPv6&#34;, 1),
 *                     Map.entry(&#34;name&#34;, &#34;MySecondNestedEndpoint&#34;),
 *                     Map.entry(&#34;priority&#34;, 2),
 *                     Map.entry(&#34;target&#34;, &#34;secondnestedprofile.tmpreview.watmtest.azure-test.net&#34;),
 *                     Map.entry(&#34;type&#34;, &#34;Microsoft.Network/trafficManagerProfiles/nestedEndpoints&#34;),
 *                     Map.entry(&#34;weight&#34;, 1)
 *                 ))
 *             .location(&#34;global&#34;)
 *             .monitorConfig(Map.ofEntries(
 *                 Map.entry(&#34;intervalInSeconds&#34;, 10),
 *                 Map.entry(&#34;path&#34;, &#34;/testpath.aspx&#34;),
 *                 Map.entry(&#34;port&#34;, 80),
 *                 Map.entry(&#34;protocol&#34;, &#34;HTTP&#34;),
 *                 Map.entry(&#34;timeoutInSeconds&#34;, 5),
 *                 Map.entry(&#34;toleratedNumberOfFailures&#34;, 2)
 *             ))
 *             .profileName(&#34;parentprofile&#34;)
 *             .profileStatus(&#34;Enabled&#34;)
 *             .resourceGroupName(&#34;myresourcegroup&#34;)
 *             .trafficRoutingMethod(&#34;Priority&#34;)
 *             .build());
 * 
 *     }
 * }
 * 
 * ```
 * 
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:network:Profile parentprofile /subscriptions/{subscription-id}/resourceGroups/myresourcegroup/providers/Microsoft.Network/trafficManagerProfiles/parentprofile 
 * ```
 * 
 */
@ResourceType(type="azure-native:network:Profile")
public class Profile extends com.pulumi.resources.CustomResource {
    /**
     * The list of allowed endpoint record types.
     * 
     */
    @Export(name="allowedEndpointRecordTypes", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> allowedEndpointRecordTypes;

    /**
     * @return The list of allowed endpoint record types.
     * 
     */
    public Output<Optional<List<String>>> allowedEndpointRecordTypes() {
        return Codegen.optional(this.allowedEndpointRecordTypes);
    }
    /**
     * The DNS settings of the Traffic Manager profile.
     * 
     */
    @Export(name="dnsConfig", type=DnsConfigResponse.class, parameters={})
    private Output</* @Nullable */ DnsConfigResponse> dnsConfig;

    /**
     * @return The DNS settings of the Traffic Manager profile.
     * 
     */
    public Output<Optional<DnsConfigResponse>> dnsConfig() {
        return Codegen.optional(this.dnsConfig);
    }
    /**
     * The list of endpoints in the Traffic Manager profile.
     * 
     */
    @Export(name="endpoints", type=List.class, parameters={EndpointResponse.class})
    private Output</* @Nullable */ List<EndpointResponse>> endpoints;

    /**
     * @return The list of endpoints in the Traffic Manager profile.
     * 
     */
    public Output<Optional<List<EndpointResponse>>> endpoints() {
        return Codegen.optional(this.endpoints);
    }
    /**
     * The Azure Region where the resource lives
     * 
     */
    @Export(name="location", type=String.class, parameters={})
    private Output</* @Nullable */ String> location;

    /**
     * @return The Azure Region where the resource lives
     * 
     */
    public Output<Optional<String>> location() {
        return Codegen.optional(this.location);
    }
    /**
     * Maximum number of endpoints to be returned for MultiValue routing type.
     * 
     */
    @Export(name="maxReturn", type=Double.class, parameters={})
    private Output</* @Nullable */ Double> maxReturn;

    /**
     * @return Maximum number of endpoints to be returned for MultiValue routing type.
     * 
     */
    public Output<Optional<Double>> maxReturn() {
        return Codegen.optional(this.maxReturn);
    }
    /**
     * The endpoint monitoring settings of the Traffic Manager profile.
     * 
     */
    @Export(name="monitorConfig", type=MonitorConfigResponse.class, parameters={})
    private Output</* @Nullable */ MonitorConfigResponse> monitorConfig;

    /**
     * @return The endpoint monitoring settings of the Traffic Manager profile.
     * 
     */
    public Output<Optional<MonitorConfigResponse>> monitorConfig() {
        return Codegen.optional(this.monitorConfig);
    }
    /**
     * The name of the resource
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output</* @Nullable */ String> name;

    /**
     * @return The name of the resource
     * 
     */
    public Output<Optional<String>> name() {
        return Codegen.optional(this.name);
    }
    /**
     * The status of the Traffic Manager profile.
     * 
     */
    @Export(name="profileStatus", type=String.class, parameters={})
    private Output</* @Nullable */ String> profileStatus;

    /**
     * @return The status of the Traffic Manager profile.
     * 
     */
    public Output<Optional<String>> profileStatus() {
        return Codegen.optional(this.profileStatus);
    }
    /**
     * Resource tags.
     * 
     */
    @Export(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return Resource tags.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * The traffic routing method of the Traffic Manager profile.
     * 
     */
    @Export(name="trafficRoutingMethod", type=String.class, parameters={})
    private Output</* @Nullable */ String> trafficRoutingMethod;

    /**
     * @return The traffic routing method of the Traffic Manager profile.
     * 
     */
    public Output<Optional<String>> trafficRoutingMethod() {
        return Codegen.optional(this.trafficRoutingMethod);
    }
    /**
     * Indicates whether Traffic View is &#39;Enabled&#39; or &#39;Disabled&#39; for the Traffic Manager profile. Null, indicates &#39;Disabled&#39;. Enabling this feature will increase the cost of the Traffic Manage profile.
     * 
     */
    @Export(name="trafficViewEnrollmentStatus", type=String.class, parameters={})
    private Output</* @Nullable */ String> trafficViewEnrollmentStatus;

    /**
     * @return Indicates whether Traffic View is &#39;Enabled&#39; or &#39;Disabled&#39; for the Traffic Manager profile. Null, indicates &#39;Disabled&#39;. Enabling this feature will increase the cost of the Traffic Manage profile.
     * 
     */
    public Output<Optional<String>> trafficViewEnrollmentStatus() {
        return Codegen.optional(this.trafficViewEnrollmentStatus);
    }
    /**
     * The type of the resource. Ex- Microsoft.Network/trafficManagerProfiles.
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output</* @Nullable */ String> type;

    /**
     * @return The type of the resource. Ex- Microsoft.Network/trafficManagerProfiles.
     * 
     */
    public Output<Optional<String>> type() {
        return Codegen.optional(this.type);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Profile(String name) {
        this(name, ProfileArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Profile(String name, ProfileArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Profile(String name, ProfileArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:network:Profile", name, args == null ? ProfileArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Profile(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:network:Profile", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("azure-native:network/v20151101:Profile").build()),
                Output.of(Alias.builder().type("azure-native:network/v20170301:Profile").build()),
                Output.of(Alias.builder().type("azure-native:network/v20170501:Profile").build()),
                Output.of(Alias.builder().type("azure-native:network/v20180201:Profile").build()),
                Output.of(Alias.builder().type("azure-native:network/v20180301:Profile").build()),
                Output.of(Alias.builder().type("azure-native:network/v20180401:Profile").build()),
                Output.of(Alias.builder().type("azure-native:network/v20180801:Profile").build())
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Profile get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Profile(name, id, options);
    }
}
