// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.managedservices;

import com.pulumi.azurenative.Utilities;
import com.pulumi.azurenative.managedservices.RegistrationDefinitionArgs;
import com.pulumi.azurenative.managedservices.outputs.PlanResponse;
import com.pulumi.azurenative.managedservices.outputs.RegistrationDefinitionPropertiesResponse;
import com.pulumi.core.Alias;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Registration definition.
 * API Version: 2019-09-01.
 * 
 * ## Example Usage
 * ### Put Registration Definition
 * 
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var registrationDefinition = new RegistrationDefinition(&#34;registrationDefinition&#34;, RegistrationDefinitionArgs.builder()        
 *             .plan(Map.ofEntries(
 *                 Map.entry(&#34;name&#34;, &#34;addesai-plan&#34;),
 *                 Map.entry(&#34;product&#34;, &#34;test&#34;),
 *                 Map.entry(&#34;publisher&#34;, &#34;marketplace-test&#34;),
 *                 Map.entry(&#34;version&#34;, &#34;1.0.0&#34;)
 *             ))
 *             .properties(Map.ofEntries(
 *                 Map.entry(&#34;authorizations&#34;,                 
 *                     Map.ofEntries(
 *                         Map.entry(&#34;principalId&#34;, &#34;f98d86a2-4cc4-4e9d-ad47-b3e80a1bcdfc&#34;),
 *                         Map.entry(&#34;principalIdDisplayName&#34;, &#34;Support User&#34;),
 *                         Map.entry(&#34;roleDefinitionId&#34;, &#34;acdd72a7-3385-48ef-bd42-f606fba81ae7&#34;)
 *                     ),
 *                     Map.ofEntries(
 *                         Map.entry(&#34;delegatedRoleDefinitionIds&#34;, &#34;b24988ac-6180-42a0-ab88-20f7382dd24c&#34;),
 *                         Map.entry(&#34;principalId&#34;, &#34;f98d86a2-4cc4-4e9d-ad47-b3e80a1bcdfc&#34;),
 *                         Map.entry(&#34;principalIdDisplayName&#34;, &#34;User Access Administrator&#34;),
 *                         Map.entry(&#34;roleDefinitionId&#34;, &#34;18d7d88d-d35e-4fb5-a5c3-7773c20a72d9&#34;)
 *                     )),
 *                 Map.entry(&#34;description&#34;, &#34;Tes1t&#34;),
 *                 Map.entry(&#34;managedByTenantId&#34;, &#34;83abe5cd-bcc3-441a-bd86-e6a75360cecc&#34;),
 *                 Map.entry(&#34;registrationDefinitionName&#34;, &#34;DefinitionName&#34;)
 *             ))
 *             .registrationDefinitionId(&#34;26c128c2-fefa-4340-9bb1-6e081c90ada2&#34;)
 *             .scope(&#34;subscription/0afefe50-734e-4610-8a82-a144ahf49dea&#34;)
 *             .build());
 * 
 *     }
 * }
 * 
 * ```
 * 
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:managedservices:RegistrationDefinition 26c128c2-fefa-4340-9bb1-6e081c90ada2 /subscriptions/0afefe50-734e-4610-8a82-a144ahf49dea/providers/Microsoft.ManagedServices/registrationDefinitions/26c128c2-fefa-4340-9bb1-6e081c90ada2 
 * ```
 * 
 */
@ResourceType(type="azure-native:managedservices:RegistrationDefinition")
public class RegistrationDefinition extends com.pulumi.resources.CustomResource {
    /**
     * Name of the registration definition.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Name of the registration definition.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Plan details for the managed services.
     * 
     */
    @Export(name="plan", type=PlanResponse.class, parameters={})
    private Output</* @Nullable */ PlanResponse> plan;

    /**
     * @return Plan details for the managed services.
     * 
     */
    public Output<Optional<PlanResponse>> plan() {
        return Codegen.optional(this.plan);
    }
    /**
     * Properties of a registration definition.
     * 
     */
    @Export(name="properties", type=RegistrationDefinitionPropertiesResponse.class, parameters={})
    private Output<RegistrationDefinitionPropertiesResponse> properties;

    /**
     * @return Properties of a registration definition.
     * 
     */
    public Output<RegistrationDefinitionPropertiesResponse> properties() {
        return this.properties;
    }
    /**
     * Type of the resource.
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return Type of the resource.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public RegistrationDefinition(String name) {
        this(name, RegistrationDefinitionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public RegistrationDefinition(String name, RegistrationDefinitionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public RegistrationDefinition(String name, RegistrationDefinitionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:managedservices:RegistrationDefinition", name, args == null ? RegistrationDefinitionArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private RegistrationDefinition(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:managedservices:RegistrationDefinition", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("azure-native:managedservices/v20180601preview:RegistrationDefinition").build()),
                Output.of(Alias.builder().type("azure-native:managedservices/v20190401preview:RegistrationDefinition").build()),
                Output.of(Alias.builder().type("azure-native:managedservices/v20190601:RegistrationDefinition").build()),
                Output.of(Alias.builder().type("azure-native:managedservices/v20190901:RegistrationDefinition").build()),
                Output.of(Alias.builder().type("azure-native:managedservices/v20200201preview:RegistrationDefinition").build()),
                Output.of(Alias.builder().type("azure-native:managedservices/v20220101preview:RegistrationDefinition").build())
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static RegistrationDefinition get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new RegistrationDefinition(name, id, options);
    }
}
