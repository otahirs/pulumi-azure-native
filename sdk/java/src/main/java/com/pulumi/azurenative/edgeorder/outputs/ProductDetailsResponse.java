// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.edgeorder.outputs;

import com.pulumi.azurenative.edgeorder.outputs.DeviceDetailsResponse;
import com.pulumi.azurenative.edgeorder.outputs.DisplayInfoResponse;
import com.pulumi.azurenative.edgeorder.outputs.HierarchyInformationResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ProductDetailsResponse {
    /**
     * @return Quantity of the product
     * 
     */
    private Integer count;
    /**
     * @return list of device details
     * 
     */
    private List<DeviceDetailsResponse> deviceDetails;
    /**
     * @return Display details of the product
     * 
     */
    private @Nullable DisplayInfoResponse displayInfo;
    /**
     * @return Hierarchy of the product which uniquely identifies the product
     * 
     */
    private HierarchyInformationResponse hierarchyInformation;
    /**
     * @return Double encryption status of the configuration. Read-only field.
     * 
     */
    private String productDoubleEncryptionStatus;

    private ProductDetailsResponse() {}
    /**
     * @return Quantity of the product
     * 
     */
    public Integer count() {
        return this.count;
    }
    /**
     * @return list of device details
     * 
     */
    public List<DeviceDetailsResponse> deviceDetails() {
        return this.deviceDetails;
    }
    /**
     * @return Display details of the product
     * 
     */
    public Optional<DisplayInfoResponse> displayInfo() {
        return Optional.ofNullable(this.displayInfo);
    }
    /**
     * @return Hierarchy of the product which uniquely identifies the product
     * 
     */
    public HierarchyInformationResponse hierarchyInformation() {
        return this.hierarchyInformation;
    }
    /**
     * @return Double encryption status of the configuration. Read-only field.
     * 
     */
    public String productDoubleEncryptionStatus() {
        return this.productDoubleEncryptionStatus;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ProductDetailsResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer count;
        private List<DeviceDetailsResponse> deviceDetails;
        private @Nullable DisplayInfoResponse displayInfo;
        private HierarchyInformationResponse hierarchyInformation;
        private String productDoubleEncryptionStatus;
        public Builder() {}
        public Builder(ProductDetailsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.count = defaults.count;
    	      this.deviceDetails = defaults.deviceDetails;
    	      this.displayInfo = defaults.displayInfo;
    	      this.hierarchyInformation = defaults.hierarchyInformation;
    	      this.productDoubleEncryptionStatus = defaults.productDoubleEncryptionStatus;
        }

        @CustomType.Setter
        public Builder count(Integer count) {
            this.count = Objects.requireNonNull(count);
            return this;
        }
        @CustomType.Setter
        public Builder deviceDetails(List<DeviceDetailsResponse> deviceDetails) {
            this.deviceDetails = Objects.requireNonNull(deviceDetails);
            return this;
        }
        public Builder deviceDetails(DeviceDetailsResponse... deviceDetails) {
            return deviceDetails(List.of(deviceDetails));
        }
        @CustomType.Setter
        public Builder displayInfo(@Nullable DisplayInfoResponse displayInfo) {
            this.displayInfo = displayInfo;
            return this;
        }
        @CustomType.Setter
        public Builder hierarchyInformation(HierarchyInformationResponse hierarchyInformation) {
            this.hierarchyInformation = Objects.requireNonNull(hierarchyInformation);
            return this;
        }
        @CustomType.Setter
        public Builder productDoubleEncryptionStatus(String productDoubleEncryptionStatus) {
            this.productDoubleEncryptionStatus = Objects.requireNonNull(productDoubleEncryptionStatus);
            return this;
        }
        public ProductDetailsResponse build() {
            final var o = new ProductDetailsResponse();
            o.count = count;
            o.deviceDetails = deviceDetails;
            o.displayInfo = displayInfo;
            o.hierarchyInformation = hierarchyInformation;
            o.productDoubleEncryptionStatus = productDoubleEncryptionStatus;
            return o;
        }
    }
}
