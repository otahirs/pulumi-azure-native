// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.databoxedge.outputs;

import com.pulumi.azurenative.databoxedge.outputs.AzureContainerInfoResponse;
import com.pulumi.azurenative.databoxedge.outputs.ClientAccessRightResponse;
import com.pulumi.azurenative.databoxedge.outputs.MountPointMapResponse;
import com.pulumi.azurenative.databoxedge.outputs.RefreshDetailsResponse;
import com.pulumi.azurenative.databoxedge.outputs.SystemDataResponse;
import com.pulumi.azurenative.databoxedge.outputs.UserAccessRightResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetShareResult {
    /**
     * @return Access protocol to be used by the share.
     * 
     */
    private String accessProtocol;
    /**
     * @return Azure container mapping for the share.
     * 
     */
    private @Nullable AzureContainerInfoResponse azureContainerInfo;
    /**
     * @return List of IP addresses and corresponding access rights on the share(required for NFS protocol).
     * 
     */
    private @Nullable List<ClientAccessRightResponse> clientAccessRights;
    /**
     * @return Data policy of the share.
     * 
     */
    private @Nullable String dataPolicy;
    /**
     * @return Description for the share.
     * 
     */
    private @Nullable String description;
    /**
     * @return The path ID that uniquely identifies the object.
     * 
     */
    private String id;
    /**
     * @return Current monitoring status of the share.
     * 
     */
    private String monitoringStatus;
    /**
     * @return The object name.
     * 
     */
    private String name;
    /**
     * @return Details of the refresh job on this share.
     * 
     */
    private @Nullable RefreshDetailsResponse refreshDetails;
    /**
     * @return Share mount point to the role.
     * 
     */
    private List<MountPointMapResponse> shareMappings;
    /**
     * @return Current status of the share.
     * 
     */
    private String shareStatus;
    /**
     * @return Share on ASE device
     * 
     */
    private SystemDataResponse systemData;
    /**
     * @return The hierarchical type of the object.
     * 
     */
    private String type;
    /**
     * @return Mapping of users and corresponding access rights on the share (required for SMB protocol).
     * 
     */
    private @Nullable List<UserAccessRightResponse> userAccessRights;

    private GetShareResult() {}
    /**
     * @return Access protocol to be used by the share.
     * 
     */
    public String accessProtocol() {
        return this.accessProtocol;
    }
    /**
     * @return Azure container mapping for the share.
     * 
     */
    public Optional<AzureContainerInfoResponse> azureContainerInfo() {
        return Optional.ofNullable(this.azureContainerInfo);
    }
    /**
     * @return List of IP addresses and corresponding access rights on the share(required for NFS protocol).
     * 
     */
    public List<ClientAccessRightResponse> clientAccessRights() {
        return this.clientAccessRights == null ? List.of() : this.clientAccessRights;
    }
    /**
     * @return Data policy of the share.
     * 
     */
    public Optional<String> dataPolicy() {
        return Optional.ofNullable(this.dataPolicy);
    }
    /**
     * @return Description for the share.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return The path ID that uniquely identifies the object.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Current monitoring status of the share.
     * 
     */
    public String monitoringStatus() {
        return this.monitoringStatus;
    }
    /**
     * @return The object name.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Details of the refresh job on this share.
     * 
     */
    public Optional<RefreshDetailsResponse> refreshDetails() {
        return Optional.ofNullable(this.refreshDetails);
    }
    /**
     * @return Share mount point to the role.
     * 
     */
    public List<MountPointMapResponse> shareMappings() {
        return this.shareMappings;
    }
    /**
     * @return Current status of the share.
     * 
     */
    public String shareStatus() {
        return this.shareStatus;
    }
    /**
     * @return Share on ASE device
     * 
     */
    public SystemDataResponse systemData() {
        return this.systemData;
    }
    /**
     * @return The hierarchical type of the object.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return Mapping of users and corresponding access rights on the share (required for SMB protocol).
     * 
     */
    public List<UserAccessRightResponse> userAccessRights() {
        return this.userAccessRights == null ? List.of() : this.userAccessRights;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetShareResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accessProtocol;
        private @Nullable AzureContainerInfoResponse azureContainerInfo;
        private @Nullable List<ClientAccessRightResponse> clientAccessRights;
        private @Nullable String dataPolicy;
        private @Nullable String description;
        private String id;
        private String monitoringStatus;
        private String name;
        private @Nullable RefreshDetailsResponse refreshDetails;
        private List<MountPointMapResponse> shareMappings;
        private String shareStatus;
        private SystemDataResponse systemData;
        private String type;
        private @Nullable List<UserAccessRightResponse> userAccessRights;
        public Builder() {}
        public Builder(GetShareResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessProtocol = defaults.accessProtocol;
    	      this.azureContainerInfo = defaults.azureContainerInfo;
    	      this.clientAccessRights = defaults.clientAccessRights;
    	      this.dataPolicy = defaults.dataPolicy;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.monitoringStatus = defaults.monitoringStatus;
    	      this.name = defaults.name;
    	      this.refreshDetails = defaults.refreshDetails;
    	      this.shareMappings = defaults.shareMappings;
    	      this.shareStatus = defaults.shareStatus;
    	      this.systemData = defaults.systemData;
    	      this.type = defaults.type;
    	      this.userAccessRights = defaults.userAccessRights;
        }

        @CustomType.Setter
        public Builder accessProtocol(String accessProtocol) {
            this.accessProtocol = Objects.requireNonNull(accessProtocol);
            return this;
        }
        @CustomType.Setter
        public Builder azureContainerInfo(@Nullable AzureContainerInfoResponse azureContainerInfo) {
            this.azureContainerInfo = azureContainerInfo;
            return this;
        }
        @CustomType.Setter
        public Builder clientAccessRights(@Nullable List<ClientAccessRightResponse> clientAccessRights) {
            this.clientAccessRights = clientAccessRights;
            return this;
        }
        public Builder clientAccessRights(ClientAccessRightResponse... clientAccessRights) {
            return clientAccessRights(List.of(clientAccessRights));
        }
        @CustomType.Setter
        public Builder dataPolicy(@Nullable String dataPolicy) {
            this.dataPolicy = dataPolicy;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder monitoringStatus(String monitoringStatus) {
            this.monitoringStatus = Objects.requireNonNull(monitoringStatus);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder refreshDetails(@Nullable RefreshDetailsResponse refreshDetails) {
            this.refreshDetails = refreshDetails;
            return this;
        }
        @CustomType.Setter
        public Builder shareMappings(List<MountPointMapResponse> shareMappings) {
            this.shareMappings = Objects.requireNonNull(shareMappings);
            return this;
        }
        public Builder shareMappings(MountPointMapResponse... shareMappings) {
            return shareMappings(List.of(shareMappings));
        }
        @CustomType.Setter
        public Builder shareStatus(String shareStatus) {
            this.shareStatus = Objects.requireNonNull(shareStatus);
            return this;
        }
        @CustomType.Setter
        public Builder systemData(SystemDataResponse systemData) {
            this.systemData = Objects.requireNonNull(systemData);
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder userAccessRights(@Nullable List<UserAccessRightResponse> userAccessRights) {
            this.userAccessRights = userAccessRights;
            return this;
        }
        public Builder userAccessRights(UserAccessRightResponse... userAccessRights) {
            return userAccessRights(List.of(userAccessRights));
        }
        public GetShareResult build() {
            final var o = new GetShareResult();
            o.accessProtocol = accessProtocol;
            o.azureContainerInfo = azureContainerInfo;
            o.clientAccessRights = clientAccessRights;
            o.dataPolicy = dataPolicy;
            o.description = description;
            o.id = id;
            o.monitoringStatus = monitoringStatus;
            o.name = name;
            o.refreshDetails = refreshDetails;
            o.shareMappings = shareMappings;
            o.shareStatus = shareStatus;
            o.systemData = systemData;
            o.type = type;
            o.userAccessRights = userAccessRights;
            return o;
        }
    }
}
