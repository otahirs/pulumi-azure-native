// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.authorization.outputs;

import com.pulumi.azurenative.authorization.outputs.PermissionResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetRoleDefinitionResult {
    /**
     * @return Role definition assignable scopes.
     * 
     */
    private @Nullable List<String> assignableScopes;
    /**
     * @return The role definition description.
     * 
     */
    private @Nullable String description;
    /**
     * @return The role definition ID.
     * 
     */
    private String id;
    /**
     * @return The role definition name.
     * 
     */
    private String name;
    /**
     * @return Role definition permissions.
     * 
     */
    private @Nullable List<PermissionResponse> permissions;
    /**
     * @return The role name.
     * 
     */
    private @Nullable String roleName;
    /**
     * @return The role type.
     * 
     */
    private @Nullable String roleType;
    /**
     * @return The role definition type.
     * 
     */
    private String type;

    private GetRoleDefinitionResult() {}
    /**
     * @return Role definition assignable scopes.
     * 
     */
    public List<String> assignableScopes() {
        return this.assignableScopes == null ? List.of() : this.assignableScopes;
    }
    /**
     * @return The role definition description.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return The role definition ID.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The role definition name.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Role definition permissions.
     * 
     */
    public List<PermissionResponse> permissions() {
        return this.permissions == null ? List.of() : this.permissions;
    }
    /**
     * @return The role name.
     * 
     */
    public Optional<String> roleName() {
        return Optional.ofNullable(this.roleName);
    }
    /**
     * @return The role type.
     * 
     */
    public Optional<String> roleType() {
        return Optional.ofNullable(this.roleType);
    }
    /**
     * @return The role definition type.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRoleDefinitionResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> assignableScopes;
        private @Nullable String description;
        private String id;
        private String name;
        private @Nullable List<PermissionResponse> permissions;
        private @Nullable String roleName;
        private @Nullable String roleType;
        private String type;
        public Builder() {}
        public Builder(GetRoleDefinitionResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.assignableScopes = defaults.assignableScopes;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.permissions = defaults.permissions;
    	      this.roleName = defaults.roleName;
    	      this.roleType = defaults.roleType;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder assignableScopes(@Nullable List<String> assignableScopes) {
            this.assignableScopes = assignableScopes;
            return this;
        }
        public Builder assignableScopes(String... assignableScopes) {
            return assignableScopes(List.of(assignableScopes));
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder permissions(@Nullable List<PermissionResponse> permissions) {
            this.permissions = permissions;
            return this;
        }
        public Builder permissions(PermissionResponse... permissions) {
            return permissions(List.of(permissions));
        }
        @CustomType.Setter
        public Builder roleName(@Nullable String roleName) {
            this.roleName = roleName;
            return this;
        }
        @CustomType.Setter
        public Builder roleType(@Nullable String roleType) {
            this.roleType = roleType;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetRoleDefinitionResult build() {
            final var o = new GetRoleDefinitionResult();
            o.assignableScopes = assignableScopes;
            o.description = description;
            o.id = id;
            o.name = name;
            o.permissions = permissions;
            o.roleName = roleName;
            o.roleType = roleType;
            o.type = type;
            return o;
        }
    }
}
