// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.recoveryservices.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class InMageProtectedDiskDetailsResponse {
    /**
     * @return The disk capacity in bytes.
     * 
     */
    private @Nullable Double diskCapacityInBytes;
    /**
     * @return The disk id.
     * 
     */
    private @Nullable String diskId;
    /**
     * @return The disk name.
     * 
     */
    private @Nullable String diskName;
    /**
     * @return A value indicating whether disk is resized.
     * 
     */
    private @Nullable String diskResized;
    /**
     * @return The file system capacity in bytes.
     * 
     */
    private @Nullable Double fileSystemCapacityInBytes;
    /**
     * @return The health error code for the disk.
     * 
     */
    private @Nullable String healthErrorCode;
    /**
     * @return The last RPO calculated time.
     * 
     */
    private @Nullable String lastRpoCalculatedTime;
    /**
     * @return The protection stage.
     * 
     */
    private @Nullable String protectionStage;
    /**
     * @return The PS data transit in MB.
     * 
     */
    private @Nullable Double psDataInMB;
    /**
     * @return The resync duration in seconds.
     * 
     */
    private @Nullable Double resyncDurationInSeconds;
    /**
     * @return The resync progress percentage.
     * 
     */
    private @Nullable Integer resyncProgressPercentage;
    /**
     * @return A value indicating whether resync is required for this disk.
     * 
     */
    private @Nullable String resyncRequired;
    /**
     * @return The RPO in seconds.
     * 
     */
    private @Nullable Double rpoInSeconds;
    /**
     * @return The source data transit in MB.
     * 
     */
    private @Nullable Double sourceDataInMB;
    /**
     * @return The target data transit in MB.
     * 
     */
    private @Nullable Double targetDataInMB;

    private InMageProtectedDiskDetailsResponse() {}
    /**
     * @return The disk capacity in bytes.
     * 
     */
    public Optional<Double> diskCapacityInBytes() {
        return Optional.ofNullable(this.diskCapacityInBytes);
    }
    /**
     * @return The disk id.
     * 
     */
    public Optional<String> diskId() {
        return Optional.ofNullable(this.diskId);
    }
    /**
     * @return The disk name.
     * 
     */
    public Optional<String> diskName() {
        return Optional.ofNullable(this.diskName);
    }
    /**
     * @return A value indicating whether disk is resized.
     * 
     */
    public Optional<String> diskResized() {
        return Optional.ofNullable(this.diskResized);
    }
    /**
     * @return The file system capacity in bytes.
     * 
     */
    public Optional<Double> fileSystemCapacityInBytes() {
        return Optional.ofNullable(this.fileSystemCapacityInBytes);
    }
    /**
     * @return The health error code for the disk.
     * 
     */
    public Optional<String> healthErrorCode() {
        return Optional.ofNullable(this.healthErrorCode);
    }
    /**
     * @return The last RPO calculated time.
     * 
     */
    public Optional<String> lastRpoCalculatedTime() {
        return Optional.ofNullable(this.lastRpoCalculatedTime);
    }
    /**
     * @return The protection stage.
     * 
     */
    public Optional<String> protectionStage() {
        return Optional.ofNullable(this.protectionStage);
    }
    /**
     * @return The PS data transit in MB.
     * 
     */
    public Optional<Double> psDataInMB() {
        return Optional.ofNullable(this.psDataInMB);
    }
    /**
     * @return The resync duration in seconds.
     * 
     */
    public Optional<Double> resyncDurationInSeconds() {
        return Optional.ofNullable(this.resyncDurationInSeconds);
    }
    /**
     * @return The resync progress percentage.
     * 
     */
    public Optional<Integer> resyncProgressPercentage() {
        return Optional.ofNullable(this.resyncProgressPercentage);
    }
    /**
     * @return A value indicating whether resync is required for this disk.
     * 
     */
    public Optional<String> resyncRequired() {
        return Optional.ofNullable(this.resyncRequired);
    }
    /**
     * @return The RPO in seconds.
     * 
     */
    public Optional<Double> rpoInSeconds() {
        return Optional.ofNullable(this.rpoInSeconds);
    }
    /**
     * @return The source data transit in MB.
     * 
     */
    public Optional<Double> sourceDataInMB() {
        return Optional.ofNullable(this.sourceDataInMB);
    }
    /**
     * @return The target data transit in MB.
     * 
     */
    public Optional<Double> targetDataInMB() {
        return Optional.ofNullable(this.targetDataInMB);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InMageProtectedDiskDetailsResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Double diskCapacityInBytes;
        private @Nullable String diskId;
        private @Nullable String diskName;
        private @Nullable String diskResized;
        private @Nullable Double fileSystemCapacityInBytes;
        private @Nullable String healthErrorCode;
        private @Nullable String lastRpoCalculatedTime;
        private @Nullable String protectionStage;
        private @Nullable Double psDataInMB;
        private @Nullable Double resyncDurationInSeconds;
        private @Nullable Integer resyncProgressPercentage;
        private @Nullable String resyncRequired;
        private @Nullable Double rpoInSeconds;
        private @Nullable Double sourceDataInMB;
        private @Nullable Double targetDataInMB;
        public Builder() {}
        public Builder(InMageProtectedDiskDetailsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.diskCapacityInBytes = defaults.diskCapacityInBytes;
    	      this.diskId = defaults.diskId;
    	      this.diskName = defaults.diskName;
    	      this.diskResized = defaults.diskResized;
    	      this.fileSystemCapacityInBytes = defaults.fileSystemCapacityInBytes;
    	      this.healthErrorCode = defaults.healthErrorCode;
    	      this.lastRpoCalculatedTime = defaults.lastRpoCalculatedTime;
    	      this.protectionStage = defaults.protectionStage;
    	      this.psDataInMB = defaults.psDataInMB;
    	      this.resyncDurationInSeconds = defaults.resyncDurationInSeconds;
    	      this.resyncProgressPercentage = defaults.resyncProgressPercentage;
    	      this.resyncRequired = defaults.resyncRequired;
    	      this.rpoInSeconds = defaults.rpoInSeconds;
    	      this.sourceDataInMB = defaults.sourceDataInMB;
    	      this.targetDataInMB = defaults.targetDataInMB;
        }

        @CustomType.Setter
        public Builder diskCapacityInBytes(@Nullable Double diskCapacityInBytes) {
            this.diskCapacityInBytes = diskCapacityInBytes;
            return this;
        }
        @CustomType.Setter
        public Builder diskId(@Nullable String diskId) {
            this.diskId = diskId;
            return this;
        }
        @CustomType.Setter
        public Builder diskName(@Nullable String diskName) {
            this.diskName = diskName;
            return this;
        }
        @CustomType.Setter
        public Builder diskResized(@Nullable String diskResized) {
            this.diskResized = diskResized;
            return this;
        }
        @CustomType.Setter
        public Builder fileSystemCapacityInBytes(@Nullable Double fileSystemCapacityInBytes) {
            this.fileSystemCapacityInBytes = fileSystemCapacityInBytes;
            return this;
        }
        @CustomType.Setter
        public Builder healthErrorCode(@Nullable String healthErrorCode) {
            this.healthErrorCode = healthErrorCode;
            return this;
        }
        @CustomType.Setter
        public Builder lastRpoCalculatedTime(@Nullable String lastRpoCalculatedTime) {
            this.lastRpoCalculatedTime = lastRpoCalculatedTime;
            return this;
        }
        @CustomType.Setter
        public Builder protectionStage(@Nullable String protectionStage) {
            this.protectionStage = protectionStage;
            return this;
        }
        @CustomType.Setter
        public Builder psDataInMB(@Nullable Double psDataInMB) {
            this.psDataInMB = psDataInMB;
            return this;
        }
        @CustomType.Setter
        public Builder resyncDurationInSeconds(@Nullable Double resyncDurationInSeconds) {
            this.resyncDurationInSeconds = resyncDurationInSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder resyncProgressPercentage(@Nullable Integer resyncProgressPercentage) {
            this.resyncProgressPercentage = resyncProgressPercentage;
            return this;
        }
        @CustomType.Setter
        public Builder resyncRequired(@Nullable String resyncRequired) {
            this.resyncRequired = resyncRequired;
            return this;
        }
        @CustomType.Setter
        public Builder rpoInSeconds(@Nullable Double rpoInSeconds) {
            this.rpoInSeconds = rpoInSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder sourceDataInMB(@Nullable Double sourceDataInMB) {
            this.sourceDataInMB = sourceDataInMB;
            return this;
        }
        @CustomType.Setter
        public Builder targetDataInMB(@Nullable Double targetDataInMB) {
            this.targetDataInMB = targetDataInMB;
            return this;
        }
        public InMageProtectedDiskDetailsResponse build() {
            final var o = new InMageProtectedDiskDetailsResponse();
            o.diskCapacityInBytes = diskCapacityInBytes;
            o.diskId = diskId;
            o.diskName = diskName;
            o.diskResized = diskResized;
            o.fileSystemCapacityInBytes = fileSystemCapacityInBytes;
            o.healthErrorCode = healthErrorCode;
            o.lastRpoCalculatedTime = lastRpoCalculatedTime;
            o.protectionStage = protectionStage;
            o.psDataInMB = psDataInMB;
            o.resyncDurationInSeconds = resyncDurationInSeconds;
            o.resyncProgressPercentage = resyncProgressPercentage;
            o.resyncRequired = resyncRequired;
            o.rpoInSeconds = rpoInSeconds;
            o.sourceDataInMB = sourceDataInMB;
            o.targetDataInMB = targetDataInMB;
            return o;
        }
    }
}
