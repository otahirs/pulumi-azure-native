// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.hdinsight.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ApplicationGetHttpsEndpointResponse {
    /**
     * @return The list of access modes for the application.
     * 
     */
    private @Nullable List<String> accessModes;
    /**
     * @return The destination port to connect to.
     * 
     */
    private @Nullable Integer destinationPort;
    /**
     * @return The value indicates whether to disable GatewayAuth.
     * 
     */
    private @Nullable Boolean disableGatewayAuth;
    /**
     * @return The location of the endpoint.
     * 
     */
    private String location;
    /**
     * @return The private ip address of the endpoint.
     * 
     */
    private @Nullable String privateIPAddress;
    /**
     * @return The public port to connect to.
     * 
     */
    private Integer publicPort;
    /**
     * @return The subdomain suffix of the application.
     * 
     */
    private @Nullable String subDomainSuffix;

    private ApplicationGetHttpsEndpointResponse() {}
    /**
     * @return The list of access modes for the application.
     * 
     */
    public List<String> accessModes() {
        return this.accessModes == null ? List.of() : this.accessModes;
    }
    /**
     * @return The destination port to connect to.
     * 
     */
    public Optional<Integer> destinationPort() {
        return Optional.ofNullable(this.destinationPort);
    }
    /**
     * @return The value indicates whether to disable GatewayAuth.
     * 
     */
    public Optional<Boolean> disableGatewayAuth() {
        return Optional.ofNullable(this.disableGatewayAuth);
    }
    /**
     * @return The location of the endpoint.
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return The private ip address of the endpoint.
     * 
     */
    public Optional<String> privateIPAddress() {
        return Optional.ofNullable(this.privateIPAddress);
    }
    /**
     * @return The public port to connect to.
     * 
     */
    public Integer publicPort() {
        return this.publicPort;
    }
    /**
     * @return The subdomain suffix of the application.
     * 
     */
    public Optional<String> subDomainSuffix() {
        return Optional.ofNullable(this.subDomainSuffix);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ApplicationGetHttpsEndpointResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> accessModes;
        private @Nullable Integer destinationPort;
        private @Nullable Boolean disableGatewayAuth;
        private String location;
        private @Nullable String privateIPAddress;
        private Integer publicPort;
        private @Nullable String subDomainSuffix;
        public Builder() {}
        public Builder(ApplicationGetHttpsEndpointResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessModes = defaults.accessModes;
    	      this.destinationPort = defaults.destinationPort;
    	      this.disableGatewayAuth = defaults.disableGatewayAuth;
    	      this.location = defaults.location;
    	      this.privateIPAddress = defaults.privateIPAddress;
    	      this.publicPort = defaults.publicPort;
    	      this.subDomainSuffix = defaults.subDomainSuffix;
        }

        @CustomType.Setter
        public Builder accessModes(@Nullable List<String> accessModes) {
            this.accessModes = accessModes;
            return this;
        }
        public Builder accessModes(String... accessModes) {
            return accessModes(List.of(accessModes));
        }
        @CustomType.Setter
        public Builder destinationPort(@Nullable Integer destinationPort) {
            this.destinationPort = destinationPort;
            return this;
        }
        @CustomType.Setter
        public Builder disableGatewayAuth(@Nullable Boolean disableGatewayAuth) {
            this.disableGatewayAuth = disableGatewayAuth;
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        @CustomType.Setter
        public Builder privateIPAddress(@Nullable String privateIPAddress) {
            this.privateIPAddress = privateIPAddress;
            return this;
        }
        @CustomType.Setter
        public Builder publicPort(Integer publicPort) {
            this.publicPort = Objects.requireNonNull(publicPort);
            return this;
        }
        @CustomType.Setter
        public Builder subDomainSuffix(@Nullable String subDomainSuffix) {
            this.subDomainSuffix = subDomainSuffix;
            return this;
        }
        public ApplicationGetHttpsEndpointResponse build() {
            final var o = new ApplicationGetHttpsEndpointResponse();
            o.accessModes = accessModes;
            o.destinationPort = destinationPort;
            o.disableGatewayAuth = disableGatewayAuth;
            o.location = location;
            o.privateIPAddress = privateIPAddress;
            o.publicPort = publicPort;
            o.subDomainSuffix = subDomainSuffix;
            return o;
        }
    }
}
