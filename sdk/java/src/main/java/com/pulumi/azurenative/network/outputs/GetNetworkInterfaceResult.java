// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.outputs;

import com.pulumi.azurenative.network.outputs.ExtendedLocationResponse;
import com.pulumi.azurenative.network.outputs.NetworkInterfaceDnsSettingsResponse;
import com.pulumi.azurenative.network.outputs.NetworkInterfaceIPConfigurationResponse;
import com.pulumi.azurenative.network.outputs.NetworkInterfaceTapConfigurationResponse;
import com.pulumi.azurenative.network.outputs.NetworkSecurityGroupResponse;
import com.pulumi.azurenative.network.outputs.PrivateEndpointResponse;
import com.pulumi.azurenative.network.outputs.PrivateLinkServiceResponse;
import com.pulumi.azurenative.network.outputs.SubResourceResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetNetworkInterfaceResult {
    /**
     * @return The DNS settings in network interface.
     * 
     */
    private @Nullable NetworkInterfaceDnsSettingsResponse dnsSettings;
    /**
     * @return A reference to the dscp configuration to which the network interface is linked.
     * 
     */
    private SubResourceResponse dscpConfiguration;
    /**
     * @return If the network interface is accelerated networking enabled.
     * 
     */
    private @Nullable Boolean enableAcceleratedNetworking;
    /**
     * @return Indicates whether IP forwarding is enabled on this network interface.
     * 
     */
    private @Nullable Boolean enableIPForwarding;
    /**
     * @return A unique read-only string that changes whenever the resource is updated.
     * 
     */
    private String etag;
    /**
     * @return The extended location of the network interface.
     * 
     */
    private @Nullable ExtendedLocationResponse extendedLocation;
    /**
     * @return A list of references to linked BareMetal resources.
     * 
     */
    private List<String> hostedWorkloads;
    /**
     * @return Resource ID.
     * 
     */
    private @Nullable String id;
    /**
     * @return A list of IPConfigurations of the network interface.
     * 
     */
    private @Nullable List<NetworkInterfaceIPConfigurationResponse> ipConfigurations;
    /**
     * @return Resource location.
     * 
     */
    private @Nullable String location;
    /**
     * @return The MAC address of the network interface.
     * 
     */
    private String macAddress;
    /**
     * @return Migration phase of Network Interface resource.
     * 
     */
    private @Nullable String migrationPhase;
    /**
     * @return Resource name.
     * 
     */
    private String name;
    /**
     * @return The reference to the NetworkSecurityGroup resource.
     * 
     */
    private @Nullable NetworkSecurityGroupResponse networkSecurityGroup;
    /**
     * @return Type of Network Interface resource.
     * 
     */
    private @Nullable String nicType;
    /**
     * @return Whether this is a primary network interface on a virtual machine.
     * 
     */
    private Boolean primary;
    /**
     * @return A reference to the private endpoint to which the network interface is linked.
     * 
     */
    private PrivateEndpointResponse privateEndpoint;
    /**
     * @return Privatelinkservice of the network interface resource.
     * 
     */
    private @Nullable PrivateLinkServiceResponse privateLinkService;
    /**
     * @return The provisioning state of the network interface resource.
     * 
     */
    private String provisioningState;
    /**
     * @return The resource GUID property of the network interface resource.
     * 
     */
    private String resourceGuid;
    /**
     * @return Resource tags.
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return A list of TapConfigurations of the network interface.
     * 
     */
    private List<NetworkInterfaceTapConfigurationResponse> tapConfigurations;
    /**
     * @return Resource type.
     * 
     */
    private String type;
    /**
     * @return The reference to a virtual machine.
     * 
     */
    private SubResourceResponse virtualMachine;

    private GetNetworkInterfaceResult() {}
    /**
     * @return The DNS settings in network interface.
     * 
     */
    public Optional<NetworkInterfaceDnsSettingsResponse> dnsSettings() {
        return Optional.ofNullable(this.dnsSettings);
    }
    /**
     * @return A reference to the dscp configuration to which the network interface is linked.
     * 
     */
    public SubResourceResponse dscpConfiguration() {
        return this.dscpConfiguration;
    }
    /**
     * @return If the network interface is accelerated networking enabled.
     * 
     */
    public Optional<Boolean> enableAcceleratedNetworking() {
        return Optional.ofNullable(this.enableAcceleratedNetworking);
    }
    /**
     * @return Indicates whether IP forwarding is enabled on this network interface.
     * 
     */
    public Optional<Boolean> enableIPForwarding() {
        return Optional.ofNullable(this.enableIPForwarding);
    }
    /**
     * @return A unique read-only string that changes whenever the resource is updated.
     * 
     */
    public String etag() {
        return this.etag;
    }
    /**
     * @return The extended location of the network interface.
     * 
     */
    public Optional<ExtendedLocationResponse> extendedLocation() {
        return Optional.ofNullable(this.extendedLocation);
    }
    /**
     * @return A list of references to linked BareMetal resources.
     * 
     */
    public List<String> hostedWorkloads() {
        return this.hostedWorkloads;
    }
    /**
     * @return Resource ID.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return A list of IPConfigurations of the network interface.
     * 
     */
    public List<NetworkInterfaceIPConfigurationResponse> ipConfigurations() {
        return this.ipConfigurations == null ? List.of() : this.ipConfigurations;
    }
    /**
     * @return Resource location.
     * 
     */
    public Optional<String> location() {
        return Optional.ofNullable(this.location);
    }
    /**
     * @return The MAC address of the network interface.
     * 
     */
    public String macAddress() {
        return this.macAddress;
    }
    /**
     * @return Migration phase of Network Interface resource.
     * 
     */
    public Optional<String> migrationPhase() {
        return Optional.ofNullable(this.migrationPhase);
    }
    /**
     * @return Resource name.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The reference to the NetworkSecurityGroup resource.
     * 
     */
    public Optional<NetworkSecurityGroupResponse> networkSecurityGroup() {
        return Optional.ofNullable(this.networkSecurityGroup);
    }
    /**
     * @return Type of Network Interface resource.
     * 
     */
    public Optional<String> nicType() {
        return Optional.ofNullable(this.nicType);
    }
    /**
     * @return Whether this is a primary network interface on a virtual machine.
     * 
     */
    public Boolean primary() {
        return this.primary;
    }
    /**
     * @return A reference to the private endpoint to which the network interface is linked.
     * 
     */
    public PrivateEndpointResponse privateEndpoint() {
        return this.privateEndpoint;
    }
    /**
     * @return Privatelinkservice of the network interface resource.
     * 
     */
    public Optional<PrivateLinkServiceResponse> privateLinkService() {
        return Optional.ofNullable(this.privateLinkService);
    }
    /**
     * @return The provisioning state of the network interface resource.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * @return The resource GUID property of the network interface resource.
     * 
     */
    public String resourceGuid() {
        return this.resourceGuid;
    }
    /**
     * @return Resource tags.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return A list of TapConfigurations of the network interface.
     * 
     */
    public List<NetworkInterfaceTapConfigurationResponse> tapConfigurations() {
        return this.tapConfigurations;
    }
    /**
     * @return Resource type.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return The reference to a virtual machine.
     * 
     */
    public SubResourceResponse virtualMachine() {
        return this.virtualMachine;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNetworkInterfaceResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable NetworkInterfaceDnsSettingsResponse dnsSettings;
        private SubResourceResponse dscpConfiguration;
        private @Nullable Boolean enableAcceleratedNetworking;
        private @Nullable Boolean enableIPForwarding;
        private String etag;
        private @Nullable ExtendedLocationResponse extendedLocation;
        private List<String> hostedWorkloads;
        private @Nullable String id;
        private @Nullable List<NetworkInterfaceIPConfigurationResponse> ipConfigurations;
        private @Nullable String location;
        private String macAddress;
        private @Nullable String migrationPhase;
        private String name;
        private @Nullable NetworkSecurityGroupResponse networkSecurityGroup;
        private @Nullable String nicType;
        private Boolean primary;
        private PrivateEndpointResponse privateEndpoint;
        private @Nullable PrivateLinkServiceResponse privateLinkService;
        private String provisioningState;
        private String resourceGuid;
        private @Nullable Map<String,String> tags;
        private List<NetworkInterfaceTapConfigurationResponse> tapConfigurations;
        private String type;
        private SubResourceResponse virtualMachine;
        public Builder() {}
        public Builder(GetNetworkInterfaceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dnsSettings = defaults.dnsSettings;
    	      this.dscpConfiguration = defaults.dscpConfiguration;
    	      this.enableAcceleratedNetworking = defaults.enableAcceleratedNetworking;
    	      this.enableIPForwarding = defaults.enableIPForwarding;
    	      this.etag = defaults.etag;
    	      this.extendedLocation = defaults.extendedLocation;
    	      this.hostedWorkloads = defaults.hostedWorkloads;
    	      this.id = defaults.id;
    	      this.ipConfigurations = defaults.ipConfigurations;
    	      this.location = defaults.location;
    	      this.macAddress = defaults.macAddress;
    	      this.migrationPhase = defaults.migrationPhase;
    	      this.name = defaults.name;
    	      this.networkSecurityGroup = defaults.networkSecurityGroup;
    	      this.nicType = defaults.nicType;
    	      this.primary = defaults.primary;
    	      this.privateEndpoint = defaults.privateEndpoint;
    	      this.privateLinkService = defaults.privateLinkService;
    	      this.provisioningState = defaults.provisioningState;
    	      this.resourceGuid = defaults.resourceGuid;
    	      this.tags = defaults.tags;
    	      this.tapConfigurations = defaults.tapConfigurations;
    	      this.type = defaults.type;
    	      this.virtualMachine = defaults.virtualMachine;
        }

        @CustomType.Setter
        public Builder dnsSettings(@Nullable NetworkInterfaceDnsSettingsResponse dnsSettings) {
            this.dnsSettings = dnsSettings;
            return this;
        }
        @CustomType.Setter
        public Builder dscpConfiguration(SubResourceResponse dscpConfiguration) {
            this.dscpConfiguration = Objects.requireNonNull(dscpConfiguration);
            return this;
        }
        @CustomType.Setter
        public Builder enableAcceleratedNetworking(@Nullable Boolean enableAcceleratedNetworking) {
            this.enableAcceleratedNetworking = enableAcceleratedNetworking;
            return this;
        }
        @CustomType.Setter
        public Builder enableIPForwarding(@Nullable Boolean enableIPForwarding) {
            this.enableIPForwarding = enableIPForwarding;
            return this;
        }
        @CustomType.Setter
        public Builder etag(String etag) {
            this.etag = Objects.requireNonNull(etag);
            return this;
        }
        @CustomType.Setter
        public Builder extendedLocation(@Nullable ExtendedLocationResponse extendedLocation) {
            this.extendedLocation = extendedLocation;
            return this;
        }
        @CustomType.Setter
        public Builder hostedWorkloads(List<String> hostedWorkloads) {
            this.hostedWorkloads = Objects.requireNonNull(hostedWorkloads);
            return this;
        }
        public Builder hostedWorkloads(String... hostedWorkloads) {
            return hostedWorkloads(List.of(hostedWorkloads));
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ipConfigurations(@Nullable List<NetworkInterfaceIPConfigurationResponse> ipConfigurations) {
            this.ipConfigurations = ipConfigurations;
            return this;
        }
        public Builder ipConfigurations(NetworkInterfaceIPConfigurationResponse... ipConfigurations) {
            return ipConfigurations(List.of(ipConfigurations));
        }
        @CustomType.Setter
        public Builder location(@Nullable String location) {
            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder macAddress(String macAddress) {
            this.macAddress = Objects.requireNonNull(macAddress);
            return this;
        }
        @CustomType.Setter
        public Builder migrationPhase(@Nullable String migrationPhase) {
            this.migrationPhase = migrationPhase;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder networkSecurityGroup(@Nullable NetworkSecurityGroupResponse networkSecurityGroup) {
            this.networkSecurityGroup = networkSecurityGroup;
            return this;
        }
        @CustomType.Setter
        public Builder nicType(@Nullable String nicType) {
            this.nicType = nicType;
            return this;
        }
        @CustomType.Setter
        public Builder primary(Boolean primary) {
            this.primary = Objects.requireNonNull(primary);
            return this;
        }
        @CustomType.Setter
        public Builder privateEndpoint(PrivateEndpointResponse privateEndpoint) {
            this.privateEndpoint = Objects.requireNonNull(privateEndpoint);
            return this;
        }
        @CustomType.Setter
        public Builder privateLinkService(@Nullable PrivateLinkServiceResponse privateLinkService) {
            this.privateLinkService = privateLinkService;
            return this;
        }
        @CustomType.Setter
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        @CustomType.Setter
        public Builder resourceGuid(String resourceGuid) {
            this.resourceGuid = Objects.requireNonNull(resourceGuid);
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder tapConfigurations(List<NetworkInterfaceTapConfigurationResponse> tapConfigurations) {
            this.tapConfigurations = Objects.requireNonNull(tapConfigurations);
            return this;
        }
        public Builder tapConfigurations(NetworkInterfaceTapConfigurationResponse... tapConfigurations) {
            return tapConfigurations(List.of(tapConfigurations));
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder virtualMachine(SubResourceResponse virtualMachine) {
            this.virtualMachine = Objects.requireNonNull(virtualMachine);
            return this;
        }
        public GetNetworkInterfaceResult build() {
            final var o = new GetNetworkInterfaceResult();
            o.dnsSettings = dnsSettings;
            o.dscpConfiguration = dscpConfiguration;
            o.enableAcceleratedNetworking = enableAcceleratedNetworking;
            o.enableIPForwarding = enableIPForwarding;
            o.etag = etag;
            o.extendedLocation = extendedLocation;
            o.hostedWorkloads = hostedWorkloads;
            o.id = id;
            o.ipConfigurations = ipConfigurations;
            o.location = location;
            o.macAddress = macAddress;
            o.migrationPhase = migrationPhase;
            o.name = name;
            o.networkSecurityGroup = networkSecurityGroup;
            o.nicType = nicType;
            o.primary = primary;
            o.privateEndpoint = privateEndpoint;
            o.privateLinkService = privateLinkService;
            o.provisioningState = provisioningState;
            o.resourceGuid = resourceGuid;
            o.tags = tags;
            o.tapConfigurations = tapConfigurations;
            o.type = type;
            o.virtualMachine = virtualMachine;
            return o;
        }
    }
}
