// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datamigration.outputs;

import com.pulumi.azurenative.datamigration.outputs.MigrationEligibilityInfoResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class ConnectToSourceSqlServerTaskOutputAgentJobLevelResponse {
    /**
     * @return Result identifier
     * 
     */
    private String id;
    /**
     * @return The state of the original AgentJob.
     * 
     */
    private Boolean isEnabled;
    /**
     * @return The type of AgentJob.
     * 
     */
    private String jobCategory;
    /**
     * @return The owner of the AgentJob
     * 
     */
    private String jobOwner;
    /**
     * @return UTC Date and time when the AgentJob was last executed.
     * 
     */
    private String lastExecutedOn;
    /**
     * @return Information about eligibility of agent job for migration.
     * 
     */
    private MigrationEligibilityInfoResponse migrationEligibility;
    /**
     * @return AgentJob name
     * 
     */
    private String name;
    /**
     * @return Type of result - database level or task level
     * Expected value is &#39;AgentJobLevelOutput&#39;.
     * 
     */
    private String resultType;

    private ConnectToSourceSqlServerTaskOutputAgentJobLevelResponse() {}
    /**
     * @return Result identifier
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The state of the original AgentJob.
     * 
     */
    public Boolean isEnabled() {
        return this.isEnabled;
    }
    /**
     * @return The type of AgentJob.
     * 
     */
    public String jobCategory() {
        return this.jobCategory;
    }
    /**
     * @return The owner of the AgentJob
     * 
     */
    public String jobOwner() {
        return this.jobOwner;
    }
    /**
     * @return UTC Date and time when the AgentJob was last executed.
     * 
     */
    public String lastExecutedOn() {
        return this.lastExecutedOn;
    }
    /**
     * @return Information about eligibility of agent job for migration.
     * 
     */
    public MigrationEligibilityInfoResponse migrationEligibility() {
        return this.migrationEligibility;
    }
    /**
     * @return AgentJob name
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Type of result - database level or task level
     * Expected value is &#39;AgentJobLevelOutput&#39;.
     * 
     */
    public String resultType() {
        return this.resultType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConnectToSourceSqlServerTaskOutputAgentJobLevelResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private Boolean isEnabled;
        private String jobCategory;
        private String jobOwner;
        private String lastExecutedOn;
        private MigrationEligibilityInfoResponse migrationEligibility;
        private String name;
        private String resultType;
        public Builder() {}
        public Builder(ConnectToSourceSqlServerTaskOutputAgentJobLevelResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.isEnabled = defaults.isEnabled;
    	      this.jobCategory = defaults.jobCategory;
    	      this.jobOwner = defaults.jobOwner;
    	      this.lastExecutedOn = defaults.lastExecutedOn;
    	      this.migrationEligibility = defaults.migrationEligibility;
    	      this.name = defaults.name;
    	      this.resultType = defaults.resultType;
        }

        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder isEnabled(Boolean isEnabled) {
            this.isEnabled = Objects.requireNonNull(isEnabled);
            return this;
        }
        @CustomType.Setter
        public Builder jobCategory(String jobCategory) {
            this.jobCategory = Objects.requireNonNull(jobCategory);
            return this;
        }
        @CustomType.Setter
        public Builder jobOwner(String jobOwner) {
            this.jobOwner = Objects.requireNonNull(jobOwner);
            return this;
        }
        @CustomType.Setter
        public Builder lastExecutedOn(String lastExecutedOn) {
            this.lastExecutedOn = Objects.requireNonNull(lastExecutedOn);
            return this;
        }
        @CustomType.Setter
        public Builder migrationEligibility(MigrationEligibilityInfoResponse migrationEligibility) {
            this.migrationEligibility = Objects.requireNonNull(migrationEligibility);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder resultType(String resultType) {
            this.resultType = Objects.requireNonNull(resultType);
            return this;
        }
        public ConnectToSourceSqlServerTaskOutputAgentJobLevelResponse build() {
            final var o = new ConnectToSourceSqlServerTaskOutputAgentJobLevelResponse();
            o.id = id;
            o.isEnabled = isEnabled;
            o.jobCategory = jobCategory;
            o.jobOwner = jobOwner;
            o.lastExecutedOn = lastExecutedOn;
            o.migrationEligibility = migrationEligibility;
            o.name = name;
            o.resultType = resultType;
            return o;
        }
    }
}
