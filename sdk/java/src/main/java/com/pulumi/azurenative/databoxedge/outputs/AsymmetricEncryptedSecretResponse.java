// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.databoxedge.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AsymmetricEncryptedSecretResponse {
    /**
     * @return The algorithm used to encrypt &#34;Value&#34;.
     * 
     */
    private String encryptionAlgorithm;
    /**
     * @return Thumbprint certificate used to encrypt \&#34;Value\&#34;. If the value is unencrypted, it will be null.
     * 
     */
    private @Nullable String encryptionCertThumbprint;
    /**
     * @return The value of the secret.
     * 
     */
    private String value;

    private AsymmetricEncryptedSecretResponse() {}
    /**
     * @return The algorithm used to encrypt &#34;Value&#34;.
     * 
     */
    public String encryptionAlgorithm() {
        return this.encryptionAlgorithm;
    }
    /**
     * @return Thumbprint certificate used to encrypt \&#34;Value\&#34;. If the value is unencrypted, it will be null.
     * 
     */
    public Optional<String> encryptionCertThumbprint() {
        return Optional.ofNullable(this.encryptionCertThumbprint);
    }
    /**
     * @return The value of the secret.
     * 
     */
    public String value() {
        return this.value;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AsymmetricEncryptedSecretResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String encryptionAlgorithm;
        private @Nullable String encryptionCertThumbprint;
        private String value;
        public Builder() {}
        public Builder(AsymmetricEncryptedSecretResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.encryptionAlgorithm = defaults.encryptionAlgorithm;
    	      this.encryptionCertThumbprint = defaults.encryptionCertThumbprint;
    	      this.value = defaults.value;
        }

        @CustomType.Setter
        public Builder encryptionAlgorithm(String encryptionAlgorithm) {
            this.encryptionAlgorithm = Objects.requireNonNull(encryptionAlgorithm);
            return this;
        }
        @CustomType.Setter
        public Builder encryptionCertThumbprint(@Nullable String encryptionCertThumbprint) {
            this.encryptionCertThumbprint = encryptionCertThumbprint;
            return this;
        }
        @CustomType.Setter
        public Builder value(String value) {
            this.value = Objects.requireNonNull(value);
            return this;
        }
        public AsymmetricEncryptedSecretResponse build() {
            final var o = new AsymmetricEncryptedSecretResponse();
            o.encryptionAlgorithm = encryptionAlgorithm;
            o.encryptionCertThumbprint = encryptionCertThumbprint;
            o.value = value;
            return o;
        }
    }
}
