// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.batch.outputs;

import com.pulumi.azurenative.batch.outputs.ContainerRegistryResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class ContainerConfigurationResponse {
    /**
     * @return This is the full image reference, as would be specified to &#34;docker pull&#34;. An image will be sourced from the default Docker registry unless the image is fully qualified with an alternative registry.
     * 
     */
    private @Nullable List<String> containerImageNames;
    /**
     * @return If any images must be downloaded from a private registry which requires credentials, then those credentials must be provided here.
     * 
     */
    private @Nullable List<ContainerRegistryResponse> containerRegistries;
    private String type;

    private ContainerConfigurationResponse() {}
    /**
     * @return This is the full image reference, as would be specified to &#34;docker pull&#34;. An image will be sourced from the default Docker registry unless the image is fully qualified with an alternative registry.
     * 
     */
    public List<String> containerImageNames() {
        return this.containerImageNames == null ? List.of() : this.containerImageNames;
    }
    /**
     * @return If any images must be downloaded from a private registry which requires credentials, then those credentials must be provided here.
     * 
     */
    public List<ContainerRegistryResponse> containerRegistries() {
        return this.containerRegistries == null ? List.of() : this.containerRegistries;
    }
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ContainerConfigurationResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> containerImageNames;
        private @Nullable List<ContainerRegistryResponse> containerRegistries;
        private String type;
        public Builder() {}
        public Builder(ContainerConfigurationResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.containerImageNames = defaults.containerImageNames;
    	      this.containerRegistries = defaults.containerRegistries;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder containerImageNames(@Nullable List<String> containerImageNames) {
            this.containerImageNames = containerImageNames;
            return this;
        }
        public Builder containerImageNames(String... containerImageNames) {
            return containerImageNames(List.of(containerImageNames));
        }
        @CustomType.Setter
        public Builder containerRegistries(@Nullable List<ContainerRegistryResponse> containerRegistries) {
            this.containerRegistries = containerRegistries;
            return this;
        }
        public Builder containerRegistries(ContainerRegistryResponse... containerRegistries) {
            return containerRegistries(List.of(containerRegistries));
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public ContainerConfigurationResponse build() {
            final var o = new ContainerConfigurationResponse();
            o.containerImageNames = containerImageNames;
            o.containerRegistries = containerRegistries;
            o.type = type;
            return o;
        }
    }
}
