// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearning.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetWorkspaceResult {
    /**
     * @return The creation time for this workspace resource.
     * 
     */
    private String creationTime;
    /**
     * @return The resource ID.
     * 
     */
    private String id;
    /**
     * @return The key vault identifier used for encrypted workspaces.
     * 
     */
    private @Nullable String keyVaultIdentifierId;
    /**
     * @return The location of the resource. This cannot be changed after the resource is created.
     * 
     */
    private String location;
    /**
     * @return The name of the resource.
     * 
     */
    private String name;
    /**
     * @return The email id of the owner for this workspace.
     * 
     */
    private String ownerEmail;
    /**
     * @return The regional endpoint for the machine learning studio service which hosts this workspace.
     * 
     */
    private String studioEndpoint;
    /**
     * @return The tags of the resource.
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return The type of the resource.
     * 
     */
    private String type;
    /**
     * @return The fully qualified arm id of the storage account associated with this workspace.
     * 
     */
    private String userStorageAccountId;
    /**
     * @return The immutable id associated with this workspace.
     * 
     */
    private String workspaceId;
    /**
     * @return The current state of workspace resource.
     * 
     */
    private String workspaceState;
    /**
     * @return The type of this workspace.
     * 
     */
    private String workspaceType;

    private GetWorkspaceResult() {}
    /**
     * @return The creation time for this workspace resource.
     * 
     */
    public String creationTime() {
        return this.creationTime;
    }
    /**
     * @return The resource ID.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The key vault identifier used for encrypted workspaces.
     * 
     */
    public Optional<String> keyVaultIdentifierId() {
        return Optional.ofNullable(this.keyVaultIdentifierId);
    }
    /**
     * @return The location of the resource. This cannot be changed after the resource is created.
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return The name of the resource.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The email id of the owner for this workspace.
     * 
     */
    public String ownerEmail() {
        return this.ownerEmail;
    }
    /**
     * @return The regional endpoint for the machine learning studio service which hosts this workspace.
     * 
     */
    public String studioEndpoint() {
        return this.studioEndpoint;
    }
    /**
     * @return The tags of the resource.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return The type of the resource.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return The fully qualified arm id of the storage account associated with this workspace.
     * 
     */
    public String userStorageAccountId() {
        return this.userStorageAccountId;
    }
    /**
     * @return The immutable id associated with this workspace.
     * 
     */
    public String workspaceId() {
        return this.workspaceId;
    }
    /**
     * @return The current state of workspace resource.
     * 
     */
    public String workspaceState() {
        return this.workspaceState;
    }
    /**
     * @return The type of this workspace.
     * 
     */
    public String workspaceType() {
        return this.workspaceType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWorkspaceResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String creationTime;
        private String id;
        private @Nullable String keyVaultIdentifierId;
        private String location;
        private String name;
        private String ownerEmail;
        private String studioEndpoint;
        private @Nullable Map<String,String> tags;
        private String type;
        private String userStorageAccountId;
        private String workspaceId;
        private String workspaceState;
        private String workspaceType;
        public Builder() {}
        public Builder(GetWorkspaceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.creationTime = defaults.creationTime;
    	      this.id = defaults.id;
    	      this.keyVaultIdentifierId = defaults.keyVaultIdentifierId;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.ownerEmail = defaults.ownerEmail;
    	      this.studioEndpoint = defaults.studioEndpoint;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
    	      this.userStorageAccountId = defaults.userStorageAccountId;
    	      this.workspaceId = defaults.workspaceId;
    	      this.workspaceState = defaults.workspaceState;
    	      this.workspaceType = defaults.workspaceType;
        }

        @CustomType.Setter
        public Builder creationTime(String creationTime) {
            this.creationTime = Objects.requireNonNull(creationTime);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder keyVaultIdentifierId(@Nullable String keyVaultIdentifierId) {
            this.keyVaultIdentifierId = keyVaultIdentifierId;
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder ownerEmail(String ownerEmail) {
            this.ownerEmail = Objects.requireNonNull(ownerEmail);
            return this;
        }
        @CustomType.Setter
        public Builder studioEndpoint(String studioEndpoint) {
            this.studioEndpoint = Objects.requireNonNull(studioEndpoint);
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder userStorageAccountId(String userStorageAccountId) {
            this.userStorageAccountId = Objects.requireNonNull(userStorageAccountId);
            return this;
        }
        @CustomType.Setter
        public Builder workspaceId(String workspaceId) {
            this.workspaceId = Objects.requireNonNull(workspaceId);
            return this;
        }
        @CustomType.Setter
        public Builder workspaceState(String workspaceState) {
            this.workspaceState = Objects.requireNonNull(workspaceState);
            return this;
        }
        @CustomType.Setter
        public Builder workspaceType(String workspaceType) {
            this.workspaceType = Objects.requireNonNull(workspaceType);
            return this;
        }
        public GetWorkspaceResult build() {
            final var o = new GetWorkspaceResult();
            o.creationTime = creationTime;
            o.id = id;
            o.keyVaultIdentifierId = keyVaultIdentifierId;
            o.location = location;
            o.name = name;
            o.ownerEmail = ownerEmail;
            o.studioEndpoint = studioEndpoint;
            o.tags = tags;
            o.type = type;
            o.userStorageAccountId = userStorageAccountId;
            o.workspaceId = workspaceId;
            o.workspaceState = workspaceState;
            o.workspaceType = workspaceType;
            return o;
        }
    }
}
