// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.workloads.outputs;

import com.pulumi.azurenative.workloads.outputs.ApplicationServerConfigurationResponse;
import com.pulumi.azurenative.workloads.outputs.CentralServerConfigurationResponse;
import com.pulumi.azurenative.workloads.outputs.DatabaseConfigurationResponse;
import com.pulumi.azurenative.workloads.outputs.HighAvailabilityConfigurationResponse;
import com.pulumi.azurenative.workloads.outputs.NetworkConfigurationResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ThreeTierConfigurationResponse {
    /**
     * @return The application resource group where SAP system resources will be deployed.
     * 
     */
    private String appResourceGroup;
    /**
     * @return The application server configuration.
     * 
     */
    private ApplicationServerConfigurationResponse applicationServer;
    /**
     * @return The central server configuration.
     * 
     */
    private CentralServerConfigurationResponse centralServer;
    /**
     * @return The database configuration.
     * 
     */
    private DatabaseConfigurationResponse databaseServer;
    /**
     * @return The deployment Type.
     * Expected value is &#39;ThreeTier&#39;.
     * 
     */
    private String deploymentType;
    /**
     * @return The high availability configuration.
     * 
     */
    private @Nullable HighAvailabilityConfigurationResponse highAvailabilityConfig;
    /**
     * @return Network configuration common to all servers
     * 
     */
    private @Nullable NetworkConfigurationResponse networkConfiguration;

    private ThreeTierConfigurationResponse() {}
    /**
     * @return The application resource group where SAP system resources will be deployed.
     * 
     */
    public String appResourceGroup() {
        return this.appResourceGroup;
    }
    /**
     * @return The application server configuration.
     * 
     */
    public ApplicationServerConfigurationResponse applicationServer() {
        return this.applicationServer;
    }
    /**
     * @return The central server configuration.
     * 
     */
    public CentralServerConfigurationResponse centralServer() {
        return this.centralServer;
    }
    /**
     * @return The database configuration.
     * 
     */
    public DatabaseConfigurationResponse databaseServer() {
        return this.databaseServer;
    }
    /**
     * @return The deployment Type.
     * Expected value is &#39;ThreeTier&#39;.
     * 
     */
    public String deploymentType() {
        return this.deploymentType;
    }
    /**
     * @return The high availability configuration.
     * 
     */
    public Optional<HighAvailabilityConfigurationResponse> highAvailabilityConfig() {
        return Optional.ofNullable(this.highAvailabilityConfig);
    }
    /**
     * @return Network configuration common to all servers
     * 
     */
    public Optional<NetworkConfigurationResponse> networkConfiguration() {
        return Optional.ofNullable(this.networkConfiguration);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ThreeTierConfigurationResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String appResourceGroup;
        private ApplicationServerConfigurationResponse applicationServer;
        private CentralServerConfigurationResponse centralServer;
        private DatabaseConfigurationResponse databaseServer;
        private String deploymentType;
        private @Nullable HighAvailabilityConfigurationResponse highAvailabilityConfig;
        private @Nullable NetworkConfigurationResponse networkConfiguration;
        public Builder() {}
        public Builder(ThreeTierConfigurationResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.appResourceGroup = defaults.appResourceGroup;
    	      this.applicationServer = defaults.applicationServer;
    	      this.centralServer = defaults.centralServer;
    	      this.databaseServer = defaults.databaseServer;
    	      this.deploymentType = defaults.deploymentType;
    	      this.highAvailabilityConfig = defaults.highAvailabilityConfig;
    	      this.networkConfiguration = defaults.networkConfiguration;
        }

        @CustomType.Setter
        public Builder appResourceGroup(String appResourceGroup) {
            this.appResourceGroup = Objects.requireNonNull(appResourceGroup);
            return this;
        }
        @CustomType.Setter
        public Builder applicationServer(ApplicationServerConfigurationResponse applicationServer) {
            this.applicationServer = Objects.requireNonNull(applicationServer);
            return this;
        }
        @CustomType.Setter
        public Builder centralServer(CentralServerConfigurationResponse centralServer) {
            this.centralServer = Objects.requireNonNull(centralServer);
            return this;
        }
        @CustomType.Setter
        public Builder databaseServer(DatabaseConfigurationResponse databaseServer) {
            this.databaseServer = Objects.requireNonNull(databaseServer);
            return this;
        }
        @CustomType.Setter
        public Builder deploymentType(String deploymentType) {
            this.deploymentType = Objects.requireNonNull(deploymentType);
            return this;
        }
        @CustomType.Setter
        public Builder highAvailabilityConfig(@Nullable HighAvailabilityConfigurationResponse highAvailabilityConfig) {
            this.highAvailabilityConfig = highAvailabilityConfig;
            return this;
        }
        @CustomType.Setter
        public Builder networkConfiguration(@Nullable NetworkConfigurationResponse networkConfiguration) {
            this.networkConfiguration = networkConfiguration;
            return this;
        }
        public ThreeTierConfigurationResponse build() {
            final var o = new ThreeTierConfigurationResponse();
            o.appResourceGroup = appResourceGroup;
            o.applicationServer = applicationServer;
            o.centralServer = centralServer;
            o.databaseServer = databaseServer;
            o.deploymentType = deploymentType;
            o.highAvailabilityConfig = highAvailabilityConfig;
            o.networkConfiguration = networkConfiguration;
            return o;
        }
    }
}
