// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network;

import com.pulumi.azurenative.Utilities;
import com.pulumi.azurenative.network.P2sVpnGatewayArgs;
import com.pulumi.azurenative.network.outputs.P2SConnectionConfigurationResponse;
import com.pulumi.azurenative.network.outputs.SubResourceResponse;
import com.pulumi.azurenative.network.outputs.VpnClientConnectionHealthResponse;
import com.pulumi.core.Alias;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * P2SVpnGateway Resource.
 * API Version: 2020-11-01.
 * 
 * ## Example Usage
 * ### P2SVpnGatewayPut
 * 
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var p2sVpnGateway = new P2sVpnGateway(&#34;p2sVpnGateway&#34;, P2sVpnGatewayArgs.builder()        
 *             .customDnsServers(            
 *                 &#34;1.1.1.1&#34;,
 *                 &#34;2.2.2.2&#34;)
 *             .gatewayName(&#34;p2sVpnGateway1&#34;)
 *             .isRoutingPreferenceInternet(false)
 *             .location(&#34;West US&#34;)
 *             .p2SConnectionConfigurations(Map.ofEntries(
 *                 Map.entry(&#34;id&#34;, &#34;/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/p2sVpnGateways/p2sVpnGateway1/p2sConnectionConfigurations/P2SConnectionConfig1&#34;),
 *                 Map.entry(&#34;name&#34;, &#34;P2SConnectionConfig1&#34;),
 *                 Map.entry(&#34;routingConfiguration&#34;, Map.ofEntries(
 *                     Map.entry(&#34;associatedRouteTable&#34;, Map.of(&#34;id&#34;, &#34;/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubRouteTables/hubRouteTable1&#34;)),
 *                     Map.entry(&#34;propagatedRouteTables&#34;, Map.ofEntries(
 *                         Map.entry(&#34;ids&#34;,                         
 *                             Map.of(&#34;id&#34;, &#34;/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubRouteTables/hubRouteTable1&#34;),
 *                             Map.of(&#34;id&#34;, &#34;/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubRouteTables/hubRouteTable2&#34;),
 *                             Map.of(&#34;id&#34;, &#34;/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubRouteTables/hubRouteTable3&#34;)),
 *                         Map.entry(&#34;labels&#34;,                         
 *                             &#34;label1&#34;,
 *                             &#34;label2&#34;)
 *                     )),
 *                     Map.entry(&#34;vnetRoutes&#34;, Map.of(&#34;staticRoutes&#34;, ))
 *                 )),
 *                 Map.entry(&#34;vpnClientAddressPool&#34;, Map.of(&#34;addressPrefixes&#34;, &#34;101.3.0.0/16&#34;))
 *             ))
 *             .resourceGroupName(&#34;rg1&#34;)
 *             .tags(Map.of(&#34;key1&#34;, &#34;value1&#34;))
 *             .virtualHub(Map.of(&#34;id&#34;, &#34;/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1&#34;))
 *             .vpnGatewayScaleUnit(1)
 *             .vpnServerConfiguration(Map.of(&#34;id&#34;, &#34;/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnServerConfigurations/vpnServerConfiguration1&#34;))
 *             .build());
 * 
 *     }
 * }
 * 
 * ```
 * 
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:network:P2sVpnGateway p2sVpnGateway1 /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/P2SvpnGateways/p2sVpnGateway1 
 * ```
 * 
 */
@ResourceType(type="azure-native:network:P2sVpnGateway")
public class P2sVpnGateway extends com.pulumi.resources.CustomResource {
    /**
     * List of all customer specified DNS servers IP addresses.
     * 
     */
    @Export(name="customDnsServers", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> customDnsServers;

    /**
     * @return List of all customer specified DNS servers IP addresses.
     * 
     */
    public Output<Optional<List<String>>> customDnsServers() {
        return Codegen.optional(this.customDnsServers);
    }
    /**
     * A unique read-only string that changes whenever the resource is updated.
     * 
     */
    @Export(name="etag", type=String.class, parameters={})
    private Output<String> etag;

    /**
     * @return A unique read-only string that changes whenever the resource is updated.
     * 
     */
    public Output<String> etag() {
        return this.etag;
    }
    /**
     * Enable Routing Preference property for the Public IP Interface of the P2SVpnGateway.
     * 
     */
    @Export(name="isRoutingPreferenceInternet", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> isRoutingPreferenceInternet;

    /**
     * @return Enable Routing Preference property for the Public IP Interface of the P2SVpnGateway.
     * 
     */
    public Output<Optional<Boolean>> isRoutingPreferenceInternet() {
        return Codegen.optional(this.isRoutingPreferenceInternet);
    }
    /**
     * Resource location.
     * 
     */
    @Export(name="location", type=String.class, parameters={})
    private Output<String> location;

    /**
     * @return Resource location.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * Resource name.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Resource name.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * List of all p2s connection configurations of the gateway.
     * 
     */
    @Export(name="p2SConnectionConfigurations", type=List.class, parameters={P2SConnectionConfigurationResponse.class})
    private Output</* @Nullable */ List<P2SConnectionConfigurationResponse>> p2SConnectionConfigurations;

    /**
     * @return List of all p2s connection configurations of the gateway.
     * 
     */
    public Output<Optional<List<P2SConnectionConfigurationResponse>>> p2SConnectionConfigurations() {
        return Codegen.optional(this.p2SConnectionConfigurations);
    }
    /**
     * The provisioning state of the P2S VPN gateway resource.
     * 
     */
    @Export(name="provisioningState", type=String.class, parameters={})
    private Output<String> provisioningState;

    /**
     * @return The provisioning state of the P2S VPN gateway resource.
     * 
     */
    public Output<String> provisioningState() {
        return this.provisioningState;
    }
    /**
     * Resource tags.
     * 
     */
    @Export(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return Resource tags.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * Resource type.
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return Resource type.
     * 
     */
    public Output<String> type() {
        return this.type;
    }
    /**
     * The VirtualHub to which the gateway belongs.
     * 
     */
    @Export(name="virtualHub", type=SubResourceResponse.class, parameters={})
    private Output</* @Nullable */ SubResourceResponse> virtualHub;

    /**
     * @return The VirtualHub to which the gateway belongs.
     * 
     */
    public Output<Optional<SubResourceResponse>> virtualHub() {
        return Codegen.optional(this.virtualHub);
    }
    /**
     * All P2S VPN clients&#39; connection health status.
     * 
     */
    @Export(name="vpnClientConnectionHealth", type=VpnClientConnectionHealthResponse.class, parameters={})
    private Output<VpnClientConnectionHealthResponse> vpnClientConnectionHealth;

    /**
     * @return All P2S VPN clients&#39; connection health status.
     * 
     */
    public Output<VpnClientConnectionHealthResponse> vpnClientConnectionHealth() {
        return this.vpnClientConnectionHealth;
    }
    /**
     * The scale unit for this p2s vpn gateway.
     * 
     */
    @Export(name="vpnGatewayScaleUnit", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> vpnGatewayScaleUnit;

    /**
     * @return The scale unit for this p2s vpn gateway.
     * 
     */
    public Output<Optional<Integer>> vpnGatewayScaleUnit() {
        return Codegen.optional(this.vpnGatewayScaleUnit);
    }
    /**
     * The VpnServerConfiguration to which the p2sVpnGateway is attached to.
     * 
     */
    @Export(name="vpnServerConfiguration", type=SubResourceResponse.class, parameters={})
    private Output</* @Nullable */ SubResourceResponse> vpnServerConfiguration;

    /**
     * @return The VpnServerConfiguration to which the p2sVpnGateway is attached to.
     * 
     */
    public Output<Optional<SubResourceResponse>> vpnServerConfiguration() {
        return Codegen.optional(this.vpnServerConfiguration);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public P2sVpnGateway(String name) {
        this(name, P2sVpnGatewayArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public P2sVpnGateway(String name, P2sVpnGatewayArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public P2sVpnGateway(String name, P2sVpnGatewayArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:network:P2sVpnGateway", name, args == null ? P2sVpnGatewayArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private P2sVpnGateway(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:network:P2sVpnGateway", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("azure-native:network/v20180801:P2sVpnGateway").build()),
                Output.of(Alias.builder().type("azure-native:network/v20181001:P2sVpnGateway").build()),
                Output.of(Alias.builder().type("azure-native:network/v20181101:P2sVpnGateway").build()),
                Output.of(Alias.builder().type("azure-native:network/v20181201:P2sVpnGateway").build()),
                Output.of(Alias.builder().type("azure-native:network/v20190201:P2sVpnGateway").build()),
                Output.of(Alias.builder().type("azure-native:network/v20190401:P2sVpnGateway").build()),
                Output.of(Alias.builder().type("azure-native:network/v20190601:P2sVpnGateway").build()),
                Output.of(Alias.builder().type("azure-native:network/v20190701:P2sVpnGateway").build()),
                Output.of(Alias.builder().type("azure-native:network/v20190801:P2sVpnGateway").build()),
                Output.of(Alias.builder().type("azure-native:network/v20190901:P2sVpnGateway").build()),
                Output.of(Alias.builder().type("azure-native:network/v20191101:P2sVpnGateway").build()),
                Output.of(Alias.builder().type("azure-native:network/v20191201:P2sVpnGateway").build()),
                Output.of(Alias.builder().type("azure-native:network/v20200301:P2sVpnGateway").build()),
                Output.of(Alias.builder().type("azure-native:network/v20200401:P2sVpnGateway").build()),
                Output.of(Alias.builder().type("azure-native:network/v20200501:P2sVpnGateway").build()),
                Output.of(Alias.builder().type("azure-native:network/v20200601:P2sVpnGateway").build()),
                Output.of(Alias.builder().type("azure-native:network/v20200701:P2sVpnGateway").build()),
                Output.of(Alias.builder().type("azure-native:network/v20200801:P2sVpnGateway").build()),
                Output.of(Alias.builder().type("azure-native:network/v20201101:P2sVpnGateway").build()),
                Output.of(Alias.builder().type("azure-native:network/v20210201:P2sVpnGateway").build()),
                Output.of(Alias.builder().type("azure-native:network/v20210301:P2sVpnGateway").build()),
                Output.of(Alias.builder().type("azure-native:network/v20210501:P2sVpnGateway").build()),
                Output.of(Alias.builder().type("azure-native:network/v20210801:P2sVpnGateway").build()),
                Output.of(Alias.builder().type("azure-native:network/v20220101:P2sVpnGateway").build())
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static P2sVpnGateway get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new P2sVpnGateway(name, id, options);
    }
}
