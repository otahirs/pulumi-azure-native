// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.connectedvmwarevsphere.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class OsProfileResponse {
    /**
     * @return Gets or sets administrator username.
     * 
     */
    private @Nullable String adminUsername;
    /**
     * @return Gets or sets computer name.
     * 
     */
    private @Nullable String computerName;
    /**
     * @return Gets or sets os name.
     * 
     */
    private String osName;
    /**
     * @return Gets or sets the type of the os.
     * 
     */
    private @Nullable String osType;
    /**
     * @return Gets or sets the current running status of VMware Tools running in the guest operating system.
     * 
     */
    private String toolsRunningStatus;
    /**
     * @return Gets or sets the current version of VMware Tools.
     * 
     */
    private String toolsVersion;
    /**
     * @return Gets or sets the current version status of VMware Tools installed in the guest operating system.
     * 
     */
    private String toolsVersionStatus;

    private OsProfileResponse() {}
    /**
     * @return Gets or sets administrator username.
     * 
     */
    public Optional<String> adminUsername() {
        return Optional.ofNullable(this.adminUsername);
    }
    /**
     * @return Gets or sets computer name.
     * 
     */
    public Optional<String> computerName() {
        return Optional.ofNullable(this.computerName);
    }
    /**
     * @return Gets or sets os name.
     * 
     */
    public String osName() {
        return this.osName;
    }
    /**
     * @return Gets or sets the type of the os.
     * 
     */
    public Optional<String> osType() {
        return Optional.ofNullable(this.osType);
    }
    /**
     * @return Gets or sets the current running status of VMware Tools running in the guest operating system.
     * 
     */
    public String toolsRunningStatus() {
        return this.toolsRunningStatus;
    }
    /**
     * @return Gets or sets the current version of VMware Tools.
     * 
     */
    public String toolsVersion() {
        return this.toolsVersion;
    }
    /**
     * @return Gets or sets the current version status of VMware Tools installed in the guest operating system.
     * 
     */
    public String toolsVersionStatus() {
        return this.toolsVersionStatus;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OsProfileResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String adminUsername;
        private @Nullable String computerName;
        private String osName;
        private @Nullable String osType;
        private String toolsRunningStatus;
        private String toolsVersion;
        private String toolsVersionStatus;
        public Builder() {}
        public Builder(OsProfileResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.adminUsername = defaults.adminUsername;
    	      this.computerName = defaults.computerName;
    	      this.osName = defaults.osName;
    	      this.osType = defaults.osType;
    	      this.toolsRunningStatus = defaults.toolsRunningStatus;
    	      this.toolsVersion = defaults.toolsVersion;
    	      this.toolsVersionStatus = defaults.toolsVersionStatus;
        }

        @CustomType.Setter
        public Builder adminUsername(@Nullable String adminUsername) {
            this.adminUsername = adminUsername;
            return this;
        }
        @CustomType.Setter
        public Builder computerName(@Nullable String computerName) {
            this.computerName = computerName;
            return this;
        }
        @CustomType.Setter
        public Builder osName(String osName) {
            this.osName = Objects.requireNonNull(osName);
            return this;
        }
        @CustomType.Setter
        public Builder osType(@Nullable String osType) {
            this.osType = osType;
            return this;
        }
        @CustomType.Setter
        public Builder toolsRunningStatus(String toolsRunningStatus) {
            this.toolsRunningStatus = Objects.requireNonNull(toolsRunningStatus);
            return this;
        }
        @CustomType.Setter
        public Builder toolsVersion(String toolsVersion) {
            this.toolsVersion = Objects.requireNonNull(toolsVersion);
            return this;
        }
        @CustomType.Setter
        public Builder toolsVersionStatus(String toolsVersionStatus) {
            this.toolsVersionStatus = Objects.requireNonNull(toolsVersionStatus);
            return this;
        }
        public OsProfileResponse build() {
            final var o = new OsProfileResponse();
            o.adminUsername = adminUsername;
            o.computerName = computerName;
            o.osName = osName;
            o.osType = osType;
            o.toolsRunningStatus = toolsRunningStatus;
            o.toolsVersion = toolsVersion;
            o.toolsVersionStatus = toolsVersionStatus;
            return o;
        }
    }
}
