// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.containerservice.outputs;

import com.pulumi.azurenative.containerservice.outputs.CreationDataResponse;
import com.pulumi.azurenative.containerservice.outputs.SystemDataResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetSnapshotResult {
    /**
     * @return CreationData to be used to specify the source agent pool resource ID to create this snapshot.
     * 
     */
    private @Nullable CreationDataResponse creationData;
    /**
     * @return Resource Id
     * 
     */
    private String id;
    /**
     * @return Resource location
     * 
     */
    private String location;
    /**
     * @return Resource name
     * 
     */
    private String name;
    /**
     * @return The type of a snapshot. The default is NodePool.
     * 
     */
    private @Nullable String snapshotType;
    /**
     * @return The system metadata relating to this snapshot.
     * 
     */
    private SystemDataResponse systemData;
    /**
     * @return Resource tags
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return Resource type
     * 
     */
    private String type;

    private GetSnapshotResult() {}
    /**
     * @return CreationData to be used to specify the source agent pool resource ID to create this snapshot.
     * 
     */
    public Optional<CreationDataResponse> creationData() {
        return Optional.ofNullable(this.creationData);
    }
    /**
     * @return Resource Id
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Resource location
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return Resource name
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The type of a snapshot. The default is NodePool.
     * 
     */
    public Optional<String> snapshotType() {
        return Optional.ofNullable(this.snapshotType);
    }
    /**
     * @return The system metadata relating to this snapshot.
     * 
     */
    public SystemDataResponse systemData() {
        return this.systemData;
    }
    /**
     * @return Resource tags
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return Resource type
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSnapshotResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable CreationDataResponse creationData;
        private String id;
        private String location;
        private String name;
        private @Nullable String snapshotType;
        private SystemDataResponse systemData;
        private @Nullable Map<String,String> tags;
        private String type;
        public Builder() {}
        public Builder(GetSnapshotResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.creationData = defaults.creationData;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.snapshotType = defaults.snapshotType;
    	      this.systemData = defaults.systemData;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder creationData(@Nullable CreationDataResponse creationData) {
            this.creationData = creationData;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder snapshotType(@Nullable String snapshotType) {
            this.snapshotType = snapshotType;
            return this;
        }
        @CustomType.Setter
        public Builder systemData(SystemDataResponse systemData) {
            this.systemData = Objects.requireNonNull(systemData);
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetSnapshotResult build() {
            final var o = new GetSnapshotResult();
            o.creationData = creationData;
            o.id = id;
            o.location = location;
            o.name = name;
            o.snapshotType = snapshotType;
            o.systemData = systemData;
            o.tags = tags;
            o.type = type;
            return o;
        }
    }
}
