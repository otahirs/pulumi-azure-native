// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearningservices.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ComputeBindingResponse {
    /**
     * @return ID of the compute resource.
     * 
     */
    private @Nullable String computeId;
    /**
     * @return Number of nodes.
     * 
     */
    private @Nullable Integer nodeCount;

    private ComputeBindingResponse() {}
    /**
     * @return ID of the compute resource.
     * 
     */
    public Optional<String> computeId() {
        return Optional.ofNullable(this.computeId);
    }
    /**
     * @return Number of nodes.
     * 
     */
    public Optional<Integer> nodeCount() {
        return Optional.ofNullable(this.nodeCount);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ComputeBindingResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String computeId;
        private @Nullable Integer nodeCount;
        public Builder() {}
        public Builder(ComputeBindingResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.computeId = defaults.computeId;
    	      this.nodeCount = defaults.nodeCount;
        }

        @CustomType.Setter
        public Builder computeId(@Nullable String computeId) {
            this.computeId = computeId;
            return this;
        }
        @CustomType.Setter
        public Builder nodeCount(@Nullable Integer nodeCount) {
            this.nodeCount = nodeCount;
            return this;
        }
        public ComputeBindingResponse build() {
            final var o = new ComputeBindingResponse();
            o.computeId = computeId;
            o.nodeCount = nodeCount;
            return o;
        }
    }
}
