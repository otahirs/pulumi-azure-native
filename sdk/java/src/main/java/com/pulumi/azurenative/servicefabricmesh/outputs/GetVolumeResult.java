// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.servicefabricmesh.outputs;

import com.pulumi.azurenative.servicefabricmesh.outputs.VolumeProviderParametersAzureFileResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetVolumeResult {
    /**
     * @return This type describes a volume provided by an Azure Files file share.
     * 
     */
    private @Nullable VolumeProviderParametersAzureFileResponse azureFileParameters;
    /**
     * @return User readable description of the volume.
     * 
     */
    private @Nullable String description;
    /**
     * @return Fully qualified identifier for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    private String id;
    /**
     * @return The geo-location where the resource lives
     * 
     */
    private String location;
    /**
     * @return The name of the resource
     * 
     */
    private String name;
    /**
     * @return Provider of the volume.
     * 
     */
    private String provider;
    /**
     * @return State of the resource.
     * 
     */
    private String provisioningState;
    /**
     * @return Status of the volume.
     * 
     */
    private String status;
    /**
     * @return Gives additional information about the current status of the volume.
     * 
     */
    private String statusDetails;
    /**
     * @return Resource tags.
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
     * 
     */
    private String type;

    private GetVolumeResult() {}
    /**
     * @return This type describes a volume provided by an Azure Files file share.
     * 
     */
    public Optional<VolumeProviderParametersAzureFileResponse> azureFileParameters() {
        return Optional.ofNullable(this.azureFileParameters);
    }
    /**
     * @return User readable description of the volume.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return Fully qualified identifier for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The geo-location where the resource lives
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return The name of the resource
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Provider of the volume.
     * 
     */
    public String provider() {
        return this.provider;
    }
    /**
     * @return State of the resource.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * @return Status of the volume.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return Gives additional information about the current status of the volume.
     * 
     */
    public String statusDetails() {
        return this.statusDetails;
    }
    /**
     * @return Resource tags.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVolumeResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable VolumeProviderParametersAzureFileResponse azureFileParameters;
        private @Nullable String description;
        private String id;
        private String location;
        private String name;
        private String provider;
        private String provisioningState;
        private String status;
        private String statusDetails;
        private @Nullable Map<String,String> tags;
        private String type;
        public Builder() {}
        public Builder(GetVolumeResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.azureFileParameters = defaults.azureFileParameters;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.provider = defaults.provider;
    	      this.provisioningState = defaults.provisioningState;
    	      this.status = defaults.status;
    	      this.statusDetails = defaults.statusDetails;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder azureFileParameters(@Nullable VolumeProviderParametersAzureFileResponse azureFileParameters) {
            this.azureFileParameters = azureFileParameters;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder provider(String provider) {
            this.provider = Objects.requireNonNull(provider);
            return this;
        }
        @CustomType.Setter
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        @CustomType.Setter
        public Builder statusDetails(String statusDetails) {
            this.statusDetails = Objects.requireNonNull(statusDetails);
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetVolumeResult build() {
            final var o = new GetVolumeResult();
            o.azureFileParameters = azureFileParameters;
            o.description = description;
            o.id = id;
            o.location = location;
            o.name = name;
            o.provider = provider;
            o.provisioningState = provisioningState;
            o.status = status;
            o.statusDetails = statusDetails;
            o.tags = tags;
            o.type = type;
            return o;
        }
    }
}
