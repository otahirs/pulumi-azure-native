// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.workloads;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SAPCentralInstanceArgs extends com.pulumi.resources.ResourceArgs {

    public static final SAPCentralInstanceArgs Empty = new SAPCentralInstanceArgs();

    /**
     * Central Instance name string modeled as parameter for auto generation to work correctly.
     * 
     */
    @Import(name="centralInstanceName")
    private @Nullable Output<String> centralInstanceName;

    /**
     * @return Central Instance name string modeled as parameter for auto generation to work correctly.
     * 
     */
    public Optional<Output<String>> centralInstanceName() {
        return Optional.ofNullable(this.centralInstanceName);
    }

    /**
     * The geo-location where the resource lives
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The geo-location where the resource lives
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The name of the resource group. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group. The name is case insensitive.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the Virtual Instances for SAP.
     * 
     */
    @Import(name="sapVirtualInstanceName", required=true)
    private Output<String> sapVirtualInstanceName;

    /**
     * @return The name of the Virtual Instances for SAP.
     * 
     */
    public Output<String> sapVirtualInstanceName() {
        return this.sapVirtualInstanceName;
    }

    /**
     * Resource tags.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Resource tags.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private SAPCentralInstanceArgs() {}

    private SAPCentralInstanceArgs(SAPCentralInstanceArgs $) {
        this.centralInstanceName = $.centralInstanceName;
        this.location = $.location;
        this.resourceGroupName = $.resourceGroupName;
        this.sapVirtualInstanceName = $.sapVirtualInstanceName;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SAPCentralInstanceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SAPCentralInstanceArgs $;

        public Builder() {
            $ = new SAPCentralInstanceArgs();
        }

        public Builder(SAPCentralInstanceArgs defaults) {
            $ = new SAPCentralInstanceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param centralInstanceName Central Instance name string modeled as parameter for auto generation to work correctly.
         * 
         * @return builder
         * 
         */
        public Builder centralInstanceName(@Nullable Output<String> centralInstanceName) {
            $.centralInstanceName = centralInstanceName;
            return this;
        }

        /**
         * @param centralInstanceName Central Instance name string modeled as parameter for auto generation to work correctly.
         * 
         * @return builder
         * 
         */
        public Builder centralInstanceName(String centralInstanceName) {
            return centralInstanceName(Output.of(centralInstanceName));
        }

        /**
         * @param location The geo-location where the resource lives
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The geo-location where the resource lives
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param resourceGroupName The name of the resource group. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param sapVirtualInstanceName The name of the Virtual Instances for SAP.
         * 
         * @return builder
         * 
         */
        public Builder sapVirtualInstanceName(Output<String> sapVirtualInstanceName) {
            $.sapVirtualInstanceName = sapVirtualInstanceName;
            return this;
        }

        /**
         * @param sapVirtualInstanceName The name of the Virtual Instances for SAP.
         * 
         * @return builder
         * 
         */
        public Builder sapVirtualInstanceName(String sapVirtualInstanceName) {
            return sapVirtualInstanceName(Output.of(sapVirtualInstanceName));
        }

        /**
         * @param tags Resource tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Resource tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public SAPCentralInstanceArgs build() {
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.sapVirtualInstanceName = Objects.requireNonNull($.sapVirtualInstanceName, "expected parameter 'sapVirtualInstanceName' to be non-null");
            return $;
        }
    }

}
