// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.batch.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class CIFSMountConfigurationResponse {
    /**
     * @return These are &#39;net use&#39; options in Windows and &#39;mount&#39; options in Linux.
     * 
     */
    private @Nullable String mountOptions;
    private String password;
    /**
     * @return All file systems are mounted relative to the Batch mounts directory, accessible via the AZ_BATCH_NODE_MOUNTS_DIR environment variable.
     * 
     */
    private String relativeMountPath;
    private String source;
    private String username;

    private CIFSMountConfigurationResponse() {}
    /**
     * @return These are &#39;net use&#39; options in Windows and &#39;mount&#39; options in Linux.
     * 
     */
    public Optional<String> mountOptions() {
        return Optional.ofNullable(this.mountOptions);
    }
    public String password() {
        return this.password;
    }
    /**
     * @return All file systems are mounted relative to the Batch mounts directory, accessible via the AZ_BATCH_NODE_MOUNTS_DIR environment variable.
     * 
     */
    public String relativeMountPath() {
        return this.relativeMountPath;
    }
    public String source() {
        return this.source;
    }
    public String username() {
        return this.username;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CIFSMountConfigurationResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String mountOptions;
        private String password;
        private String relativeMountPath;
        private String source;
        private String username;
        public Builder() {}
        public Builder(CIFSMountConfigurationResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.mountOptions = defaults.mountOptions;
    	      this.password = defaults.password;
    	      this.relativeMountPath = defaults.relativeMountPath;
    	      this.source = defaults.source;
    	      this.username = defaults.username;
        }

        @CustomType.Setter
        public Builder mountOptions(@Nullable String mountOptions) {
            this.mountOptions = mountOptions;
            return this;
        }
        @CustomType.Setter
        public Builder password(String password) {
            this.password = Objects.requireNonNull(password);
            return this;
        }
        @CustomType.Setter
        public Builder relativeMountPath(String relativeMountPath) {
            this.relativeMountPath = Objects.requireNonNull(relativeMountPath);
            return this;
        }
        @CustomType.Setter
        public Builder source(String source) {
            this.source = Objects.requireNonNull(source);
            return this;
        }
        @CustomType.Setter
        public Builder username(String username) {
            this.username = Objects.requireNonNull(username);
            return this;
        }
        public CIFSMountConfigurationResponse build() {
            final var o = new CIFSMountConfigurationResponse();
            o.mountOptions = mountOptions;
            o.password = password;
            o.relativeMountPath = relativeMountPath;
            o.source = source;
            o.username = username;
            return o;
        }
    }
}
