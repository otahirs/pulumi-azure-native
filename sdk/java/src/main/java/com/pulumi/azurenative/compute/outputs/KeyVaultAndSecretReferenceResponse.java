// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.compute.outputs;

import com.pulumi.azurenative.compute.outputs.SourceVaultResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class KeyVaultAndSecretReferenceResponse {
    /**
     * @return Url pointing to a key or secret in KeyVault
     * 
     */
    private String secretUrl;
    /**
     * @return Resource id of the KeyVault containing the key or secret
     * 
     */
    private SourceVaultResponse sourceVault;

    private KeyVaultAndSecretReferenceResponse() {}
    /**
     * @return Url pointing to a key or secret in KeyVault
     * 
     */
    public String secretUrl() {
        return this.secretUrl;
    }
    /**
     * @return Resource id of the KeyVault containing the key or secret
     * 
     */
    public SourceVaultResponse sourceVault() {
        return this.sourceVault;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(KeyVaultAndSecretReferenceResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String secretUrl;
        private SourceVaultResponse sourceVault;
        public Builder() {}
        public Builder(KeyVaultAndSecretReferenceResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.secretUrl = defaults.secretUrl;
    	      this.sourceVault = defaults.sourceVault;
        }

        @CustomType.Setter
        public Builder secretUrl(String secretUrl) {
            this.secretUrl = Objects.requireNonNull(secretUrl);
            return this;
        }
        @CustomType.Setter
        public Builder sourceVault(SourceVaultResponse sourceVault) {
            this.sourceVault = Objects.requireNonNull(sourceVault);
            return this;
        }
        public KeyVaultAndSecretReferenceResponse build() {
            final var o = new KeyVaultAndSecretReferenceResponse();
            o.secretUrl = secretUrl;
            o.sourceVault = sourceVault;
            return o;
        }
    }
}
