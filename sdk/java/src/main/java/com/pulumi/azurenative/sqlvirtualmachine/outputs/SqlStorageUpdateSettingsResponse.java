// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.sqlvirtualmachine.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SqlStorageUpdateSettingsResponse {
    /**
     * @return Disk configuration to apply to SQL Server.
     * 
     */
    private @Nullable String diskConfigurationType;
    /**
     * @return Virtual machine disk count.
     * 
     */
    private @Nullable Integer diskCount;
    /**
     * @return Device id of the first disk to be updated.
     * 
     */
    private @Nullable Integer startingDeviceId;

    private SqlStorageUpdateSettingsResponse() {}
    /**
     * @return Disk configuration to apply to SQL Server.
     * 
     */
    public Optional<String> diskConfigurationType() {
        return Optional.ofNullable(this.diskConfigurationType);
    }
    /**
     * @return Virtual machine disk count.
     * 
     */
    public Optional<Integer> diskCount() {
        return Optional.ofNullable(this.diskCount);
    }
    /**
     * @return Device id of the first disk to be updated.
     * 
     */
    public Optional<Integer> startingDeviceId() {
        return Optional.ofNullable(this.startingDeviceId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SqlStorageUpdateSettingsResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String diskConfigurationType;
        private @Nullable Integer diskCount;
        private @Nullable Integer startingDeviceId;
        public Builder() {}
        public Builder(SqlStorageUpdateSettingsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.diskConfigurationType = defaults.diskConfigurationType;
    	      this.diskCount = defaults.diskCount;
    	      this.startingDeviceId = defaults.startingDeviceId;
        }

        @CustomType.Setter
        public Builder diskConfigurationType(@Nullable String diskConfigurationType) {
            this.diskConfigurationType = diskConfigurationType;
            return this;
        }
        @CustomType.Setter
        public Builder diskCount(@Nullable Integer diskCount) {
            this.diskCount = diskCount;
            return this;
        }
        @CustomType.Setter
        public Builder startingDeviceId(@Nullable Integer startingDeviceId) {
            this.startingDeviceId = startingDeviceId;
            return this;
        }
        public SqlStorageUpdateSettingsResponse build() {
            final var o = new SqlStorageUpdateSettingsResponse();
            o.diskConfigurationType = diskConfigurationType;
            o.diskCount = diskCount;
            o.startingDeviceId = startingDeviceId;
            return o;
        }
    }
}
