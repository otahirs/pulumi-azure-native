// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.maintenance.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetMaintenanceConfigurationResult {
    /**
     * @return Gets or sets extensionProperties of the maintenanceConfiguration. This is for future use only and would be a set of key value pairs for additional information e.g. whether to follow SDP etc.
     * 
     */
    private @Nullable Map<String,String> extensionProperties;
    /**
     * @return Fully qualified identifier of the resource
     * 
     */
    private String id;
    /**
     * @return Gets or sets location of the resource
     * 
     */
    private @Nullable String location;
    /**
     * @return Gets or sets maintenanceScope of the configuration. It represent the impact area of the maintenance
     * 
     */
    private @Nullable String maintenanceScope;
    /**
     * @return Name of the resource
     * 
     */
    private String name;
    /**
     * @return Gets or sets namespace of the resource e.g. Microsoft.Maintenance or Microsoft.Sql
     * 
     */
    private @Nullable String namespace;
    /**
     * @return Gets or sets tags of the resource
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return Type of the resource
     * 
     */
    private String type;

    private GetMaintenanceConfigurationResult() {}
    /**
     * @return Gets or sets extensionProperties of the maintenanceConfiguration. This is for future use only and would be a set of key value pairs for additional information e.g. whether to follow SDP etc.
     * 
     */
    public Map<String,String> extensionProperties() {
        return this.extensionProperties == null ? Map.of() : this.extensionProperties;
    }
    /**
     * @return Fully qualified identifier of the resource
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Gets or sets location of the resource
     * 
     */
    public Optional<String> location() {
        return Optional.ofNullable(this.location);
    }
    /**
     * @return Gets or sets maintenanceScope of the configuration. It represent the impact area of the maintenance
     * 
     */
    public Optional<String> maintenanceScope() {
        return Optional.ofNullable(this.maintenanceScope);
    }
    /**
     * @return Name of the resource
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Gets or sets namespace of the resource e.g. Microsoft.Maintenance or Microsoft.Sql
     * 
     */
    public Optional<String> namespace() {
        return Optional.ofNullable(this.namespace);
    }
    /**
     * @return Gets or sets tags of the resource
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return Type of the resource
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMaintenanceConfigurationResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Map<String,String> extensionProperties;
        private String id;
        private @Nullable String location;
        private @Nullable String maintenanceScope;
        private String name;
        private @Nullable String namespace;
        private @Nullable Map<String,String> tags;
        private String type;
        public Builder() {}
        public Builder(GetMaintenanceConfigurationResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.extensionProperties = defaults.extensionProperties;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.maintenanceScope = defaults.maintenanceScope;
    	      this.name = defaults.name;
    	      this.namespace = defaults.namespace;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder extensionProperties(@Nullable Map<String,String> extensionProperties) {
            this.extensionProperties = extensionProperties;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder location(@Nullable String location) {
            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder maintenanceScope(@Nullable String maintenanceScope) {
            this.maintenanceScope = maintenanceScope;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder namespace(@Nullable String namespace) {
            this.namespace = namespace;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetMaintenanceConfigurationResult build() {
            final var o = new GetMaintenanceConfigurationResult();
            o.extensionProperties = extensionProperties;
            o.id = id;
            o.location = location;
            o.maintenanceScope = maintenanceScope;
            o.name = name;
            o.namespace = namespace;
            o.tags = tags;
            o.type = type;
            return o;
        }
    }
}
