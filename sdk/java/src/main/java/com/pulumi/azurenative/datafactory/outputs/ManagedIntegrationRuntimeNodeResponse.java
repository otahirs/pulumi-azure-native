// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datafactory.outputs;

import com.pulumi.azurenative.datafactory.outputs.ManagedIntegrationRuntimeErrorResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class ManagedIntegrationRuntimeNodeResponse {
    /**
     * @return The errors that occurred on this integration runtime node.
     * 
     */
    private @Nullable List<ManagedIntegrationRuntimeErrorResponse> errors;
    /**
     * @return The managed integration runtime node id.
     * 
     */
    private String nodeId;
    /**
     * @return The managed integration runtime node status.
     * 
     */
    private String status;

    private ManagedIntegrationRuntimeNodeResponse() {}
    /**
     * @return The errors that occurred on this integration runtime node.
     * 
     */
    public List<ManagedIntegrationRuntimeErrorResponse> errors() {
        return this.errors == null ? List.of() : this.errors;
    }
    /**
     * @return The managed integration runtime node id.
     * 
     */
    public String nodeId() {
        return this.nodeId;
    }
    /**
     * @return The managed integration runtime node status.
     * 
     */
    public String status() {
        return this.status;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ManagedIntegrationRuntimeNodeResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<ManagedIntegrationRuntimeErrorResponse> errors;
        private String nodeId;
        private String status;
        public Builder() {}
        public Builder(ManagedIntegrationRuntimeNodeResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.errors = defaults.errors;
    	      this.nodeId = defaults.nodeId;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder errors(@Nullable List<ManagedIntegrationRuntimeErrorResponse> errors) {
            this.errors = errors;
            return this;
        }
        public Builder errors(ManagedIntegrationRuntimeErrorResponse... errors) {
            return errors(List.of(errors));
        }
        @CustomType.Setter
        public Builder nodeId(String nodeId) {
            this.nodeId = Objects.requireNonNull(nodeId);
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        public ManagedIntegrationRuntimeNodeResponse build() {
            final var o = new ManagedIntegrationRuntimeNodeResponse();
            o.errors = errors;
            o.nodeId = nodeId;
            o.status = status;
            return o;
        }
    }
}
