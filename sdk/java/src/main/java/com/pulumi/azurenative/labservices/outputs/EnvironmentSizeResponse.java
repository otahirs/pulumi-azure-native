// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.labservices.outputs;

import com.pulumi.azurenative.labservices.outputs.SizeInfoResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class EnvironmentSizeResponse {
    /**
     * @return The pay-as-you-go dollar price per hour this size will cost. It does not include discounts and may not reflect the actual price the size will cost. This is the maximum price of all prices within this tier.
     * 
     */
    private Double maxPrice;
    /**
     * @return The amount of memory available (in GB). This is the minimum amount of memory within this tier.
     * 
     */
    private Double minMemory;
    /**
     * @return The number of cores a VM of this size has. This is the minimum number of cores within this tier.
     * 
     */
    private Integer minNumberOfCores;
    /**
     * @return The size category
     * 
     */
    private @Nullable String name;
    /**
     * @return Represents a set of compute sizes that can serve this given size type
     * 
     */
    private @Nullable List<SizeInfoResponse> vmSizes;

    private EnvironmentSizeResponse() {}
    /**
     * @return The pay-as-you-go dollar price per hour this size will cost. It does not include discounts and may not reflect the actual price the size will cost. This is the maximum price of all prices within this tier.
     * 
     */
    public Double maxPrice() {
        return this.maxPrice;
    }
    /**
     * @return The amount of memory available (in GB). This is the minimum amount of memory within this tier.
     * 
     */
    public Double minMemory() {
        return this.minMemory;
    }
    /**
     * @return The number of cores a VM of this size has. This is the minimum number of cores within this tier.
     * 
     */
    public Integer minNumberOfCores() {
        return this.minNumberOfCores;
    }
    /**
     * @return The size category
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return Represents a set of compute sizes that can serve this given size type
     * 
     */
    public List<SizeInfoResponse> vmSizes() {
        return this.vmSizes == null ? List.of() : this.vmSizes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EnvironmentSizeResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Double maxPrice;
        private Double minMemory;
        private Integer minNumberOfCores;
        private @Nullable String name;
        private @Nullable List<SizeInfoResponse> vmSizes;
        public Builder() {}
        public Builder(EnvironmentSizeResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.maxPrice = defaults.maxPrice;
    	      this.minMemory = defaults.minMemory;
    	      this.minNumberOfCores = defaults.minNumberOfCores;
    	      this.name = defaults.name;
    	      this.vmSizes = defaults.vmSizes;
        }

        @CustomType.Setter
        public Builder maxPrice(Double maxPrice) {
            this.maxPrice = Objects.requireNonNull(maxPrice);
            return this;
        }
        @CustomType.Setter
        public Builder minMemory(Double minMemory) {
            this.minMemory = Objects.requireNonNull(minMemory);
            return this;
        }
        @CustomType.Setter
        public Builder minNumberOfCores(Integer minNumberOfCores) {
            this.minNumberOfCores = Objects.requireNonNull(minNumberOfCores);
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder vmSizes(@Nullable List<SizeInfoResponse> vmSizes) {
            this.vmSizes = vmSizes;
            return this;
        }
        public Builder vmSizes(SizeInfoResponse... vmSizes) {
            return vmSizes(List.of(vmSizes));
        }
        public EnvironmentSizeResponse build() {
            final var o = new EnvironmentSizeResponse();
            o.maxPrice = maxPrice;
            o.minMemory = minMemory;
            o.minNumberOfCores = minNumberOfCores;
            o.name = name;
            o.vmSizes = vmSizes;
            return o;
        }
    }
}
