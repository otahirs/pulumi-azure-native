// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.migrate.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GroupPropertiesResponse {
    /**
     * @return If the assessments are in running state.
     * 
     */
    private Boolean areAssessmentsRunning;
    /**
     * @return List of References to Assessments created on this group.
     * 
     */
    private List<String> assessments;
    /**
     * @return Time when this group was created. Date-Time represented in ISO-8601 format.
     * 
     */
    private String createdTimestamp;
    /**
     * @return Whether the group has been created and is valid.
     * 
     */
    private String groupStatus;
    /**
     * @return The type of group.
     * 
     */
    private @Nullable String groupType;
    /**
     * @return Number of machines part of this group.
     * 
     */
    private Integer machineCount;
    /**
     * @return Time when this group was last updated. Date-Time represented in ISO-8601 format.
     * 
     */
    private String updatedTimestamp;

    private GroupPropertiesResponse() {}
    /**
     * @return If the assessments are in running state.
     * 
     */
    public Boolean areAssessmentsRunning() {
        return this.areAssessmentsRunning;
    }
    /**
     * @return List of References to Assessments created on this group.
     * 
     */
    public List<String> assessments() {
        return this.assessments;
    }
    /**
     * @return Time when this group was created. Date-Time represented in ISO-8601 format.
     * 
     */
    public String createdTimestamp() {
        return this.createdTimestamp;
    }
    /**
     * @return Whether the group has been created and is valid.
     * 
     */
    public String groupStatus() {
        return this.groupStatus;
    }
    /**
     * @return The type of group.
     * 
     */
    public Optional<String> groupType() {
        return Optional.ofNullable(this.groupType);
    }
    /**
     * @return Number of machines part of this group.
     * 
     */
    public Integer machineCount() {
        return this.machineCount;
    }
    /**
     * @return Time when this group was last updated. Date-Time represented in ISO-8601 format.
     * 
     */
    public String updatedTimestamp() {
        return this.updatedTimestamp;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GroupPropertiesResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean areAssessmentsRunning;
        private List<String> assessments;
        private String createdTimestamp;
        private String groupStatus;
        private @Nullable String groupType;
        private Integer machineCount;
        private String updatedTimestamp;
        public Builder() {}
        public Builder(GroupPropertiesResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.areAssessmentsRunning = defaults.areAssessmentsRunning;
    	      this.assessments = defaults.assessments;
    	      this.createdTimestamp = defaults.createdTimestamp;
    	      this.groupStatus = defaults.groupStatus;
    	      this.groupType = defaults.groupType;
    	      this.machineCount = defaults.machineCount;
    	      this.updatedTimestamp = defaults.updatedTimestamp;
        }

        @CustomType.Setter
        public Builder areAssessmentsRunning(Boolean areAssessmentsRunning) {
            this.areAssessmentsRunning = Objects.requireNonNull(areAssessmentsRunning);
            return this;
        }
        @CustomType.Setter
        public Builder assessments(List<String> assessments) {
            this.assessments = Objects.requireNonNull(assessments);
            return this;
        }
        public Builder assessments(String... assessments) {
            return assessments(List.of(assessments));
        }
        @CustomType.Setter
        public Builder createdTimestamp(String createdTimestamp) {
            this.createdTimestamp = Objects.requireNonNull(createdTimestamp);
            return this;
        }
        @CustomType.Setter
        public Builder groupStatus(String groupStatus) {
            this.groupStatus = Objects.requireNonNull(groupStatus);
            return this;
        }
        @CustomType.Setter
        public Builder groupType(@Nullable String groupType) {
            this.groupType = groupType;
            return this;
        }
        @CustomType.Setter
        public Builder machineCount(Integer machineCount) {
            this.machineCount = Objects.requireNonNull(machineCount);
            return this;
        }
        @CustomType.Setter
        public Builder updatedTimestamp(String updatedTimestamp) {
            this.updatedTimestamp = Objects.requireNonNull(updatedTimestamp);
            return this;
        }
        public GroupPropertiesResponse build() {
            final var o = new GroupPropertiesResponse();
            o.areAssessmentsRunning = areAssessmentsRunning;
            o.assessments = assessments;
            o.createdTimestamp = createdTimestamp;
            o.groupStatus = groupStatus;
            o.groupType = groupType;
            o.machineCount = machineCount;
            o.updatedTimestamp = updatedTimestamp;
            return o;
        }
    }
}
