// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class TunnelConnectionHealthResponse {
    /**
     * @return Virtual Network Gateway connection status.
     * 
     */
    private String connectionStatus;
    /**
     * @return The Egress Bytes Transferred in this connection.
     * 
     */
    private Double egressBytesTransferred;
    /**
     * @return The Ingress Bytes Transferred in this connection.
     * 
     */
    private Double ingressBytesTransferred;
    /**
     * @return The time at which connection was established in Utc format.
     * 
     */
    private String lastConnectionEstablishedUtcTime;
    /**
     * @return Tunnel name.
     * 
     */
    private String tunnel;

    private TunnelConnectionHealthResponse() {}
    /**
     * @return Virtual Network Gateway connection status.
     * 
     */
    public String connectionStatus() {
        return this.connectionStatus;
    }
    /**
     * @return The Egress Bytes Transferred in this connection.
     * 
     */
    public Double egressBytesTransferred() {
        return this.egressBytesTransferred;
    }
    /**
     * @return The Ingress Bytes Transferred in this connection.
     * 
     */
    public Double ingressBytesTransferred() {
        return this.ingressBytesTransferred;
    }
    /**
     * @return The time at which connection was established in Utc format.
     * 
     */
    public String lastConnectionEstablishedUtcTime() {
        return this.lastConnectionEstablishedUtcTime;
    }
    /**
     * @return Tunnel name.
     * 
     */
    public String tunnel() {
        return this.tunnel;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TunnelConnectionHealthResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String connectionStatus;
        private Double egressBytesTransferred;
        private Double ingressBytesTransferred;
        private String lastConnectionEstablishedUtcTime;
        private String tunnel;
        public Builder() {}
        public Builder(TunnelConnectionHealthResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.connectionStatus = defaults.connectionStatus;
    	      this.egressBytesTransferred = defaults.egressBytesTransferred;
    	      this.ingressBytesTransferred = defaults.ingressBytesTransferred;
    	      this.lastConnectionEstablishedUtcTime = defaults.lastConnectionEstablishedUtcTime;
    	      this.tunnel = defaults.tunnel;
        }

        @CustomType.Setter
        public Builder connectionStatus(String connectionStatus) {
            this.connectionStatus = Objects.requireNonNull(connectionStatus);
            return this;
        }
        @CustomType.Setter
        public Builder egressBytesTransferred(Double egressBytesTransferred) {
            this.egressBytesTransferred = Objects.requireNonNull(egressBytesTransferred);
            return this;
        }
        @CustomType.Setter
        public Builder ingressBytesTransferred(Double ingressBytesTransferred) {
            this.ingressBytesTransferred = Objects.requireNonNull(ingressBytesTransferred);
            return this;
        }
        @CustomType.Setter
        public Builder lastConnectionEstablishedUtcTime(String lastConnectionEstablishedUtcTime) {
            this.lastConnectionEstablishedUtcTime = Objects.requireNonNull(lastConnectionEstablishedUtcTime);
            return this;
        }
        @CustomType.Setter
        public Builder tunnel(String tunnel) {
            this.tunnel = Objects.requireNonNull(tunnel);
            return this;
        }
        public TunnelConnectionHealthResponse build() {
            final var o = new TunnelConnectionHealthResponse();
            o.connectionStatus = connectionStatus;
            o.egressBytesTransferred = egressBytesTransferred;
            o.ingressBytesTransferred = ingressBytesTransferred;
            o.lastConnectionEstablishedUtcTime = lastConnectionEstablishedUtcTime;
            o.tunnel = tunnel;
            return o;
        }
    }
}
