// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datafactory.outputs;

import com.pulumi.azurenative.datafactory.outputs.AzureKeyVaultSecretReferenceResponse;
import com.pulumi.azurenative.datafactory.outputs.SecureStringResponse;
import com.pulumi.core.Either;
import com.pulumi.core.annotations.CustomType;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class WebClientCertificateAuthenticationResponse {
    /**
     * @return Type of authentication used to connect to the web table source.
     * Expected value is &#39;ClientCertificate&#39;.
     * 
     */
    private String authenticationType;
    /**
     * @return Password for the PFX file.
     * 
     */
    private Either<AzureKeyVaultSecretReferenceResponse,SecureStringResponse> password;
    /**
     * @return Base64-encoded contents of a PFX file.
     * 
     */
    private Either<AzureKeyVaultSecretReferenceResponse,SecureStringResponse> pfx;
    /**
     * @return The URL of the web service endpoint, e.g. https://www.microsoft.com . Type: string (or Expression with resultType string).
     * 
     */
    private Object url;

    private WebClientCertificateAuthenticationResponse() {}
    /**
     * @return Type of authentication used to connect to the web table source.
     * Expected value is &#39;ClientCertificate&#39;.
     * 
     */
    public String authenticationType() {
        return this.authenticationType;
    }
    /**
     * @return Password for the PFX file.
     * 
     */
    public Either<AzureKeyVaultSecretReferenceResponse,SecureStringResponse> password() {
        return this.password;
    }
    /**
     * @return Base64-encoded contents of a PFX file.
     * 
     */
    public Either<AzureKeyVaultSecretReferenceResponse,SecureStringResponse> pfx() {
        return this.pfx;
    }
    /**
     * @return The URL of the web service endpoint, e.g. https://www.microsoft.com . Type: string (or Expression with resultType string).
     * 
     */
    public Object url() {
        return this.url;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WebClientCertificateAuthenticationResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String authenticationType;
        private Either<AzureKeyVaultSecretReferenceResponse,SecureStringResponse> password;
        private Either<AzureKeyVaultSecretReferenceResponse,SecureStringResponse> pfx;
        private Object url;
        public Builder() {}
        public Builder(WebClientCertificateAuthenticationResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authenticationType = defaults.authenticationType;
    	      this.password = defaults.password;
    	      this.pfx = defaults.pfx;
    	      this.url = defaults.url;
        }

        @CustomType.Setter
        public Builder authenticationType(String authenticationType) {
            this.authenticationType = Objects.requireNonNull(authenticationType);
            return this;
        }
        @CustomType.Setter
        public Builder password(Either<AzureKeyVaultSecretReferenceResponse,SecureStringResponse> password) {
            this.password = Objects.requireNonNull(password);
            return this;
        }
        @CustomType.Setter
        public Builder pfx(Either<AzureKeyVaultSecretReferenceResponse,SecureStringResponse> pfx) {
            this.pfx = Objects.requireNonNull(pfx);
            return this;
        }
        @CustomType.Setter
        public Builder url(Object url) {
            this.url = Objects.requireNonNull(url);
            return this;
        }
        public WebClientCertificateAuthenticationResponse build() {
            final var o = new WebClientCertificateAuthenticationResponse();
            o.authenticationType = authenticationType;
            o.password = password;
            o.pfx = pfx;
            o.url = url;
            return o;
        }
    }
}
