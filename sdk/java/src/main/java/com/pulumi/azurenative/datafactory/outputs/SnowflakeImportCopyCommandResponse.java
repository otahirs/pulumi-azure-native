// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datafactory.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class SnowflakeImportCopyCommandResponse {
    /**
     * @return Additional copy options directly passed to snowflake Copy Command. Type: key value pairs (value should be string type) (or Expression with resultType object). Example: &#34;additionalCopyOptions&#34;: { &#34;DATE_FORMAT&#34;: &#34;MM/DD/YYYY&#34;, &#34;TIME_FORMAT&#34;: &#34;&#39;HH24:MI:SS.FF&#39;&#34; }
     * 
     */
    private @Nullable Map<String,Object> additionalCopyOptions;
    /**
     * @return Additional format options directly passed to snowflake Copy Command. Type: key value pairs (value should be string type) (or Expression with resultType object). Example: &#34;additionalFormatOptions&#34;: { &#34;FORCE&#34;: &#34;TRUE&#34;, &#34;LOAD_UNCERTAIN_FILES&#34;: &#34;&#39;FALSE&#39;&#34; }
     * 
     */
    private @Nullable Map<String,Object> additionalFormatOptions;
    /**
     * @return The import setting type.
     * Expected value is &#39;SnowflakeImportCopyCommand&#39;.
     * 
     */
    private String type;

    private SnowflakeImportCopyCommandResponse() {}
    /**
     * @return Additional copy options directly passed to snowflake Copy Command. Type: key value pairs (value should be string type) (or Expression with resultType object). Example: &#34;additionalCopyOptions&#34;: { &#34;DATE_FORMAT&#34;: &#34;MM/DD/YYYY&#34;, &#34;TIME_FORMAT&#34;: &#34;&#39;HH24:MI:SS.FF&#39;&#34; }
     * 
     */
    public Map<String,Object> additionalCopyOptions() {
        return this.additionalCopyOptions == null ? Map.of() : this.additionalCopyOptions;
    }
    /**
     * @return Additional format options directly passed to snowflake Copy Command. Type: key value pairs (value should be string type) (or Expression with resultType object). Example: &#34;additionalFormatOptions&#34;: { &#34;FORCE&#34;: &#34;TRUE&#34;, &#34;LOAD_UNCERTAIN_FILES&#34;: &#34;&#39;FALSE&#39;&#34; }
     * 
     */
    public Map<String,Object> additionalFormatOptions() {
        return this.additionalFormatOptions == null ? Map.of() : this.additionalFormatOptions;
    }
    /**
     * @return The import setting type.
     * Expected value is &#39;SnowflakeImportCopyCommand&#39;.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SnowflakeImportCopyCommandResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Map<String,Object> additionalCopyOptions;
        private @Nullable Map<String,Object> additionalFormatOptions;
        private String type;
        public Builder() {}
        public Builder(SnowflakeImportCopyCommandResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.additionalCopyOptions = defaults.additionalCopyOptions;
    	      this.additionalFormatOptions = defaults.additionalFormatOptions;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder additionalCopyOptions(@Nullable Map<String,Object> additionalCopyOptions) {
            this.additionalCopyOptions = additionalCopyOptions;
            return this;
        }
        @CustomType.Setter
        public Builder additionalFormatOptions(@Nullable Map<String,Object> additionalFormatOptions) {
            this.additionalFormatOptions = additionalFormatOptions;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public SnowflakeImportCopyCommandResponse build() {
            final var o = new SnowflakeImportCopyCommandResponse();
            o.additionalCopyOptions = additionalCopyOptions;
            o.additionalFormatOptions = additionalFormatOptions;
            o.type = type;
            return o;
        }
    }
}
