// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.streamanalytics.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class ClusterJobResponse {
    /**
     * @return Resource ID of the streaming job.
     * 
     */
    private String id;
    /**
     * @return The current execution state of the streaming job.
     * 
     */
    private String jobState;
    /**
     * @return The number of streaming units that are used by the streaming job.
     * 
     */
    private Integer streamingUnits;

    private ClusterJobResponse() {}
    /**
     * @return Resource ID of the streaming job.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The current execution state of the streaming job.
     * 
     */
    public String jobState() {
        return this.jobState;
    }
    /**
     * @return The number of streaming units that are used by the streaming job.
     * 
     */
    public Integer streamingUnits() {
        return this.streamingUnits;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClusterJobResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private String jobState;
        private Integer streamingUnits;
        public Builder() {}
        public Builder(ClusterJobResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.jobState = defaults.jobState;
    	      this.streamingUnits = defaults.streamingUnits;
        }

        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder jobState(String jobState) {
            this.jobState = Objects.requireNonNull(jobState);
            return this;
        }
        @CustomType.Setter
        public Builder streamingUnits(Integer streamingUnits) {
            this.streamingUnits = Objects.requireNonNull(streamingUnits);
            return this;
        }
        public ClusterJobResponse build() {
            final var o = new ClusterJobResponse();
            o.id = id;
            o.jobState = jobState;
            o.streamingUnits = streamingUnits;
            return o;
        }
    }
}
