// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datamigration.outputs;

import com.pulumi.azurenative.datamigration.outputs.MigrateSqlServerSqlDbSyncDatabaseInputResponse;
import com.pulumi.azurenative.datamigration.outputs.MigrationValidationOptionsResponse;
import com.pulumi.azurenative.datamigration.outputs.SqlConnectionInfoResponse;
import com.pulumi.core.annotations.CustomType;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class MigrateSqlServerSqlDbSyncTaskInputResponse {
    /**
     * @return Databases to migrate
     * 
     */
    private List<MigrateSqlServerSqlDbSyncDatabaseInputResponse> selectedDatabases;
    /**
     * @return Information for connecting to source
     * 
     */
    private SqlConnectionInfoResponse sourceConnectionInfo;
    /**
     * @return Information for connecting to target
     * 
     */
    private SqlConnectionInfoResponse targetConnectionInfo;
    /**
     * @return Validation options
     * 
     */
    private @Nullable MigrationValidationOptionsResponse validationOptions;

    private MigrateSqlServerSqlDbSyncTaskInputResponse() {}
    /**
     * @return Databases to migrate
     * 
     */
    public List<MigrateSqlServerSqlDbSyncDatabaseInputResponse> selectedDatabases() {
        return this.selectedDatabases;
    }
    /**
     * @return Information for connecting to source
     * 
     */
    public SqlConnectionInfoResponse sourceConnectionInfo() {
        return this.sourceConnectionInfo;
    }
    /**
     * @return Information for connecting to target
     * 
     */
    public SqlConnectionInfoResponse targetConnectionInfo() {
        return this.targetConnectionInfo;
    }
    /**
     * @return Validation options
     * 
     */
    public Optional<MigrationValidationOptionsResponse> validationOptions() {
        return Optional.ofNullable(this.validationOptions);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MigrateSqlServerSqlDbSyncTaskInputResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<MigrateSqlServerSqlDbSyncDatabaseInputResponse> selectedDatabases;
        private SqlConnectionInfoResponse sourceConnectionInfo;
        private SqlConnectionInfoResponse targetConnectionInfo;
        private @Nullable MigrationValidationOptionsResponse validationOptions;
        public Builder() {}
        public Builder(MigrateSqlServerSqlDbSyncTaskInputResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.selectedDatabases = defaults.selectedDatabases;
    	      this.sourceConnectionInfo = defaults.sourceConnectionInfo;
    	      this.targetConnectionInfo = defaults.targetConnectionInfo;
    	      this.validationOptions = defaults.validationOptions;
        }

        @CustomType.Setter
        public Builder selectedDatabases(List<MigrateSqlServerSqlDbSyncDatabaseInputResponse> selectedDatabases) {
            this.selectedDatabases = Objects.requireNonNull(selectedDatabases);
            return this;
        }
        public Builder selectedDatabases(MigrateSqlServerSqlDbSyncDatabaseInputResponse... selectedDatabases) {
            return selectedDatabases(List.of(selectedDatabases));
        }
        @CustomType.Setter
        public Builder sourceConnectionInfo(SqlConnectionInfoResponse sourceConnectionInfo) {
            this.sourceConnectionInfo = Objects.requireNonNull(sourceConnectionInfo);
            return this;
        }
        @CustomType.Setter
        public Builder targetConnectionInfo(SqlConnectionInfoResponse targetConnectionInfo) {
            this.targetConnectionInfo = Objects.requireNonNull(targetConnectionInfo);
            return this;
        }
        @CustomType.Setter
        public Builder validationOptions(@Nullable MigrationValidationOptionsResponse validationOptions) {
            this.validationOptions = validationOptions;
            return this;
        }
        public MigrateSqlServerSqlDbSyncTaskInputResponse build() {
            final var o = new MigrateSqlServerSqlDbSyncTaskInputResponse();
            o.selectedDatabases = selectedDatabases;
            o.sourceConnectionInfo = sourceConnectionInfo;
            o.targetConnectionInfo = targetConnectionInfo;
            o.validationOptions = validationOptions;
            return o;
        }
    }
}
