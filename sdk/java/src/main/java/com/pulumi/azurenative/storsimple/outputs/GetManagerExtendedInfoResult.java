// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.storsimple.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetManagerExtendedInfoResult {
    /**
     * @return Represents the encryption algorithm used to encrypt the keys. None - if Key is saved in plain text format. Algorithm name - if key is encrypted
     * 
     */
    private String algorithm;
    /**
     * @return Represents the CEK of the resource.
     * 
     */
    private @Nullable String encryptionKey;
    /**
     * @return Represents the Cert thumbprint that was used to encrypt the CEK.
     * 
     */
    private @Nullable String encryptionKeyThumbprint;
    /**
     * @return The etag of the resource.
     * 
     */
    private @Nullable String etag;
    /**
     * @return The path ID that uniquely identifies the object.
     * 
     */
    private String id;
    /**
     * @return Represents the CIK of the resource.
     * 
     */
    private String integrityKey;
    /**
     * @return The Kind of the object. Currently only Series8000 is supported
     * 
     */
    private @Nullable String kind;
    /**
     * @return The name of the object.
     * 
     */
    private String name;
    /**
     * @return Represents the portal thumbprint which can be used optionally to encrypt the entire data before storing it.
     * 
     */
    private @Nullable String portalCertificateThumbprint;
    /**
     * @return The hierarchical type of the object.
     * 
     */
    private String type;
    /**
     * @return The version of the extended info being persisted.
     * 
     */
    private @Nullable String version;

    private GetManagerExtendedInfoResult() {}
    /**
     * @return Represents the encryption algorithm used to encrypt the keys. None - if Key is saved in plain text format. Algorithm name - if key is encrypted
     * 
     */
    public String algorithm() {
        return this.algorithm;
    }
    /**
     * @return Represents the CEK of the resource.
     * 
     */
    public Optional<String> encryptionKey() {
        return Optional.ofNullable(this.encryptionKey);
    }
    /**
     * @return Represents the Cert thumbprint that was used to encrypt the CEK.
     * 
     */
    public Optional<String> encryptionKeyThumbprint() {
        return Optional.ofNullable(this.encryptionKeyThumbprint);
    }
    /**
     * @return The etag of the resource.
     * 
     */
    public Optional<String> etag() {
        return Optional.ofNullable(this.etag);
    }
    /**
     * @return The path ID that uniquely identifies the object.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Represents the CIK of the resource.
     * 
     */
    public String integrityKey() {
        return this.integrityKey;
    }
    /**
     * @return The Kind of the object. Currently only Series8000 is supported
     * 
     */
    public Optional<String> kind() {
        return Optional.ofNullable(this.kind);
    }
    /**
     * @return The name of the object.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Represents the portal thumbprint which can be used optionally to encrypt the entire data before storing it.
     * 
     */
    public Optional<String> portalCertificateThumbprint() {
        return Optional.ofNullable(this.portalCertificateThumbprint);
    }
    /**
     * @return The hierarchical type of the object.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return The version of the extended info being persisted.
     * 
     */
    public Optional<String> version() {
        return Optional.ofNullable(this.version);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetManagerExtendedInfoResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String algorithm;
        private @Nullable String encryptionKey;
        private @Nullable String encryptionKeyThumbprint;
        private @Nullable String etag;
        private String id;
        private String integrityKey;
        private @Nullable String kind;
        private String name;
        private @Nullable String portalCertificateThumbprint;
        private String type;
        private @Nullable String version;
        public Builder() {}
        public Builder(GetManagerExtendedInfoResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.algorithm = defaults.algorithm;
    	      this.encryptionKey = defaults.encryptionKey;
    	      this.encryptionKeyThumbprint = defaults.encryptionKeyThumbprint;
    	      this.etag = defaults.etag;
    	      this.id = defaults.id;
    	      this.integrityKey = defaults.integrityKey;
    	      this.kind = defaults.kind;
    	      this.name = defaults.name;
    	      this.portalCertificateThumbprint = defaults.portalCertificateThumbprint;
    	      this.type = defaults.type;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder algorithm(String algorithm) {
            this.algorithm = Objects.requireNonNull(algorithm);
            return this;
        }
        @CustomType.Setter
        public Builder encryptionKey(@Nullable String encryptionKey) {
            this.encryptionKey = encryptionKey;
            return this;
        }
        @CustomType.Setter
        public Builder encryptionKeyThumbprint(@Nullable String encryptionKeyThumbprint) {
            this.encryptionKeyThumbprint = encryptionKeyThumbprint;
            return this;
        }
        @CustomType.Setter
        public Builder etag(@Nullable String etag) {
            this.etag = etag;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder integrityKey(String integrityKey) {
            this.integrityKey = Objects.requireNonNull(integrityKey);
            return this;
        }
        @CustomType.Setter
        public Builder kind(@Nullable String kind) {
            this.kind = kind;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder portalCertificateThumbprint(@Nullable String portalCertificateThumbprint) {
            this.portalCertificateThumbprint = portalCertificateThumbprint;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder version(@Nullable String version) {
            this.version = version;
            return this;
        }
        public GetManagerExtendedInfoResult build() {
            final var o = new GetManagerExtendedInfoResult();
            o.algorithm = algorithm;
            o.encryptionKey = encryptionKey;
            o.encryptionKeyThumbprint = encryptionKeyThumbprint;
            o.etag = etag;
            o.id = id;
            o.integrityKey = integrityKey;
            o.kind = kind;
            o.name = name;
            o.portalCertificateThumbprint = portalCertificateThumbprint;
            o.type = type;
            o.version = version;
            return o;
        }
    }
}
