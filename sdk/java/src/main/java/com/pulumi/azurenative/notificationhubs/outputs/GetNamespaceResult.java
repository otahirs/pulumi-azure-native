// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.notificationhubs.outputs;

import com.pulumi.azurenative.notificationhubs.outputs.SkuResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetNamespaceResult {
    /**
     * @return The time the namespace was created.
     * 
     */
    private @Nullable String createdAt;
    /**
     * @return Whether or not the namespace is set as Critical.
     * 
     */
    private @Nullable Boolean critical;
    /**
     * @return Data center for the namespace
     * 
     */
    private @Nullable String dataCenter;
    /**
     * @return Whether or not the namespace is currently enabled.
     * 
     */
    private @Nullable Boolean enabled;
    /**
     * @return Resource Id
     * 
     */
    private String id;
    /**
     * @return Resource location
     * 
     */
    private @Nullable String location;
    /**
     * @return Identifier for Azure Insights metrics
     * 
     */
    private String metricId;
    /**
     * @return Resource name
     * 
     */
    private String name;
    /**
     * @return The namespace type.
     * 
     */
    private @Nullable String namespaceType;
    /**
     * @return Provisioning state of the Namespace.
     * 
     */
    private @Nullable String provisioningState;
    /**
     * @return Specifies the targeted region in which the namespace should be created. It can be any of the following values: Australia East, Australia Southeast, Central US, East US, East US 2, West US, North Central US, South Central US, East Asia, Southeast Asia, Brazil South, Japan East, Japan West, North Europe, West Europe
     * 
     */
    private @Nullable String region;
    /**
     * @return ScaleUnit where the namespace gets created
     * 
     */
    private @Nullable String scaleUnit;
    /**
     * @return Endpoint you can use to perform NotificationHub operations.
     * 
     */
    private @Nullable String serviceBusEndpoint;
    /**
     * @return The sku of the created namespace
     * 
     */
    private @Nullable SkuResponse sku;
    /**
     * @return Status of the namespace. It can be any of these values:1 = Created/Active2 = Creating3 = Suspended4 = Deleting
     * 
     */
    private @Nullable String status;
    /**
     * @return The Id of the Azure subscription associated with the namespace.
     * 
     */
    private @Nullable String subscriptionId;
    /**
     * @return Resource tags
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return Resource type
     * 
     */
    private String type;
    /**
     * @return The time the namespace was updated.
     * 
     */
    private @Nullable String updatedAt;

    private GetNamespaceResult() {}
    /**
     * @return The time the namespace was created.
     * 
     */
    public Optional<String> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }
    /**
     * @return Whether or not the namespace is set as Critical.
     * 
     */
    public Optional<Boolean> critical() {
        return Optional.ofNullable(this.critical);
    }
    /**
     * @return Data center for the namespace
     * 
     */
    public Optional<String> dataCenter() {
        return Optional.ofNullable(this.dataCenter);
    }
    /**
     * @return Whether or not the namespace is currently enabled.
     * 
     */
    public Optional<Boolean> enabled() {
        return Optional.ofNullable(this.enabled);
    }
    /**
     * @return Resource Id
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Resource location
     * 
     */
    public Optional<String> location() {
        return Optional.ofNullable(this.location);
    }
    /**
     * @return Identifier for Azure Insights metrics
     * 
     */
    public String metricId() {
        return this.metricId;
    }
    /**
     * @return Resource name
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The namespace type.
     * 
     */
    public Optional<String> namespaceType() {
        return Optional.ofNullable(this.namespaceType);
    }
    /**
     * @return Provisioning state of the Namespace.
     * 
     */
    public Optional<String> provisioningState() {
        return Optional.ofNullable(this.provisioningState);
    }
    /**
     * @return Specifies the targeted region in which the namespace should be created. It can be any of the following values: Australia East, Australia Southeast, Central US, East US, East US 2, West US, North Central US, South Central US, East Asia, Southeast Asia, Brazil South, Japan East, Japan West, North Europe, West Europe
     * 
     */
    public Optional<String> region() {
        return Optional.ofNullable(this.region);
    }
    /**
     * @return ScaleUnit where the namespace gets created
     * 
     */
    public Optional<String> scaleUnit() {
        return Optional.ofNullable(this.scaleUnit);
    }
    /**
     * @return Endpoint you can use to perform NotificationHub operations.
     * 
     */
    public Optional<String> serviceBusEndpoint() {
        return Optional.ofNullable(this.serviceBusEndpoint);
    }
    /**
     * @return The sku of the created namespace
     * 
     */
    public Optional<SkuResponse> sku() {
        return Optional.ofNullable(this.sku);
    }
    /**
     * @return Status of the namespace. It can be any of these values:1 = Created/Active2 = Creating3 = Suspended4 = Deleting
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }
    /**
     * @return The Id of the Azure subscription associated with the namespace.
     * 
     */
    public Optional<String> subscriptionId() {
        return Optional.ofNullable(this.subscriptionId);
    }
    /**
     * @return Resource tags
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return Resource type
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return The time the namespace was updated.
     * 
     */
    public Optional<String> updatedAt() {
        return Optional.ofNullable(this.updatedAt);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNamespaceResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String createdAt;
        private @Nullable Boolean critical;
        private @Nullable String dataCenter;
        private @Nullable Boolean enabled;
        private String id;
        private @Nullable String location;
        private String metricId;
        private String name;
        private @Nullable String namespaceType;
        private @Nullable String provisioningState;
        private @Nullable String region;
        private @Nullable String scaleUnit;
        private @Nullable String serviceBusEndpoint;
        private @Nullable SkuResponse sku;
        private @Nullable String status;
        private @Nullable String subscriptionId;
        private @Nullable Map<String,String> tags;
        private String type;
        private @Nullable String updatedAt;
        public Builder() {}
        public Builder(GetNamespaceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createdAt = defaults.createdAt;
    	      this.critical = defaults.critical;
    	      this.dataCenter = defaults.dataCenter;
    	      this.enabled = defaults.enabled;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.metricId = defaults.metricId;
    	      this.name = defaults.name;
    	      this.namespaceType = defaults.namespaceType;
    	      this.provisioningState = defaults.provisioningState;
    	      this.region = defaults.region;
    	      this.scaleUnit = defaults.scaleUnit;
    	      this.serviceBusEndpoint = defaults.serviceBusEndpoint;
    	      this.sku = defaults.sku;
    	      this.status = defaults.status;
    	      this.subscriptionId = defaults.subscriptionId;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
    	      this.updatedAt = defaults.updatedAt;
        }

        @CustomType.Setter
        public Builder createdAt(@Nullable String createdAt) {
            this.createdAt = createdAt;
            return this;
        }
        @CustomType.Setter
        public Builder critical(@Nullable Boolean critical) {
            this.critical = critical;
            return this;
        }
        @CustomType.Setter
        public Builder dataCenter(@Nullable String dataCenter) {
            this.dataCenter = dataCenter;
            return this;
        }
        @CustomType.Setter
        public Builder enabled(@Nullable Boolean enabled) {
            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder location(@Nullable String location) {
            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder metricId(String metricId) {
            this.metricId = Objects.requireNonNull(metricId);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder namespaceType(@Nullable String namespaceType) {
            this.namespaceType = namespaceType;
            return this;
        }
        @CustomType.Setter
        public Builder provisioningState(@Nullable String provisioningState) {
            this.provisioningState = provisioningState;
            return this;
        }
        @CustomType.Setter
        public Builder region(@Nullable String region) {
            this.region = region;
            return this;
        }
        @CustomType.Setter
        public Builder scaleUnit(@Nullable String scaleUnit) {
            this.scaleUnit = scaleUnit;
            return this;
        }
        @CustomType.Setter
        public Builder serviceBusEndpoint(@Nullable String serviceBusEndpoint) {
            this.serviceBusEndpoint = serviceBusEndpoint;
            return this;
        }
        @CustomType.Setter
        public Builder sku(@Nullable SkuResponse sku) {
            this.sku = sku;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder subscriptionId(@Nullable String subscriptionId) {
            this.subscriptionId = subscriptionId;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder updatedAt(@Nullable String updatedAt) {
            this.updatedAt = updatedAt;
            return this;
        }
        public GetNamespaceResult build() {
            final var o = new GetNamespaceResult();
            o.createdAt = createdAt;
            o.critical = critical;
            o.dataCenter = dataCenter;
            o.enabled = enabled;
            o.id = id;
            o.location = location;
            o.metricId = metricId;
            o.name = name;
            o.namespaceType = namespaceType;
            o.provisioningState = provisioningState;
            o.region = region;
            o.scaleUnit = scaleUnit;
            o.serviceBusEndpoint = serviceBusEndpoint;
            o.sku = sku;
            o.status = status;
            o.subscriptionId = subscriptionId;
            o.tags = tags;
            o.type = type;
            o.updatedAt = updatedAt;
            return o;
        }
    }
}
