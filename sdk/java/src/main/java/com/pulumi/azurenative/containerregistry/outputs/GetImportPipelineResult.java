// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.containerregistry.outputs;

import com.pulumi.azurenative.containerregistry.outputs.IdentityPropertiesResponse;
import com.pulumi.azurenative.containerregistry.outputs.ImportPipelineSourcePropertiesResponse;
import com.pulumi.azurenative.containerregistry.outputs.PipelineTriggerPropertiesResponse;
import com.pulumi.azurenative.containerregistry.outputs.SystemDataResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetImportPipelineResult {
    /**
     * @return The resource ID.
     * 
     */
    private String id;
    /**
     * @return The identity of the import pipeline.
     * 
     */
    private @Nullable IdentityPropertiesResponse identity;
    /**
     * @return The location of the import pipeline.
     * 
     */
    private @Nullable String location;
    /**
     * @return The name of the resource.
     * 
     */
    private String name;
    /**
     * @return The list of all options configured for the pipeline.
     * 
     */
    private @Nullable List<String> options;
    /**
     * @return The provisioning state of the pipeline at the time the operation was called.
     * 
     */
    private String provisioningState;
    /**
     * @return The source properties of the import pipeline.
     * 
     */
    private ImportPipelineSourcePropertiesResponse source;
    /**
     * @return Metadata pertaining to creation and last modification of the resource.
     * 
     */
    private SystemDataResponse systemData;
    /**
     * @return The properties that describe the trigger of the import pipeline.
     * 
     */
    private @Nullable PipelineTriggerPropertiesResponse trigger;
    /**
     * @return The type of the resource.
     * 
     */
    private String type;

    private GetImportPipelineResult() {}
    /**
     * @return The resource ID.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The identity of the import pipeline.
     * 
     */
    public Optional<IdentityPropertiesResponse> identity() {
        return Optional.ofNullable(this.identity);
    }
    /**
     * @return The location of the import pipeline.
     * 
     */
    public Optional<String> location() {
        return Optional.ofNullable(this.location);
    }
    /**
     * @return The name of the resource.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The list of all options configured for the pipeline.
     * 
     */
    public List<String> options() {
        return this.options == null ? List.of() : this.options;
    }
    /**
     * @return The provisioning state of the pipeline at the time the operation was called.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * @return The source properties of the import pipeline.
     * 
     */
    public ImportPipelineSourcePropertiesResponse source() {
        return this.source;
    }
    /**
     * @return Metadata pertaining to creation and last modification of the resource.
     * 
     */
    public SystemDataResponse systemData() {
        return this.systemData;
    }
    /**
     * @return The properties that describe the trigger of the import pipeline.
     * 
     */
    public Optional<PipelineTriggerPropertiesResponse> trigger() {
        return Optional.ofNullable(this.trigger);
    }
    /**
     * @return The type of the resource.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetImportPipelineResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private @Nullable IdentityPropertiesResponse identity;
        private @Nullable String location;
        private String name;
        private @Nullable List<String> options;
        private String provisioningState;
        private ImportPipelineSourcePropertiesResponse source;
        private SystemDataResponse systemData;
        private @Nullable PipelineTriggerPropertiesResponse trigger;
        private String type;
        public Builder() {}
        public Builder(GetImportPipelineResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.identity = defaults.identity;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.options = defaults.options;
    	      this.provisioningState = defaults.provisioningState;
    	      this.source = defaults.source;
    	      this.systemData = defaults.systemData;
    	      this.trigger = defaults.trigger;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder identity(@Nullable IdentityPropertiesResponse identity) {
            this.identity = identity;
            return this;
        }
        @CustomType.Setter
        public Builder location(@Nullable String location) {
            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder options(@Nullable List<String> options) {
            this.options = options;
            return this;
        }
        public Builder options(String... options) {
            return options(List.of(options));
        }
        @CustomType.Setter
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        @CustomType.Setter
        public Builder source(ImportPipelineSourcePropertiesResponse source) {
            this.source = Objects.requireNonNull(source);
            return this;
        }
        @CustomType.Setter
        public Builder systemData(SystemDataResponse systemData) {
            this.systemData = Objects.requireNonNull(systemData);
            return this;
        }
        @CustomType.Setter
        public Builder trigger(@Nullable PipelineTriggerPropertiesResponse trigger) {
            this.trigger = trigger;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetImportPipelineResult build() {
            final var o = new GetImportPipelineResult();
            o.id = id;
            o.identity = identity;
            o.location = location;
            o.name = name;
            o.options = options;
            o.provisioningState = provisioningState;
            o.source = source;
            o.systemData = systemData;
            o.trigger = trigger;
            o.type = type;
            return o;
        }
    }
}
