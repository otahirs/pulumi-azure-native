// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.blockchain.outputs;

import com.pulumi.azurenative.blockchain.outputs.BlockchainMemberNodesSkuResponse;
import com.pulumi.azurenative.blockchain.outputs.FirewallRuleResponse;
import com.pulumi.azurenative.blockchain.outputs.SkuResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetBlockchainMemberResult {
    /**
     * @return Gets or sets the consortium for the blockchain member.
     * 
     */
    private @Nullable String consortium;
    /**
     * @return Gets the managed consortium management account address.
     * 
     */
    private String consortiumManagementAccountAddress;
    /**
     * @return Sets the managed consortium management account password.
     * 
     */
    private @Nullable String consortiumManagementAccountPassword;
    /**
     * @return Gets the display name of the member in the consortium.
     * 
     */
    private @Nullable String consortiumMemberDisplayName;
    /**
     * @return Gets the role of the member in the consortium.
     * 
     */
    private @Nullable String consortiumRole;
    /**
     * @return Gets the dns endpoint of the blockchain member.
     * 
     */
    private String dns;
    /**
     * @return Gets or sets firewall rules
     * 
     */
    private @Nullable List<FirewallRuleResponse> firewallRules;
    /**
     * @return Fully qualified resource Id of the resource.
     * 
     */
    private String id;
    /**
     * @return The GEO location of the blockchain service.
     * 
     */
    private @Nullable String location;
    /**
     * @return The name of the resource.
     * 
     */
    private String name;
    /**
     * @return Sets the basic auth password of the blockchain member.
     * 
     */
    private @Nullable String password;
    /**
     * @return Gets or sets the blockchain protocol.
     * 
     */
    private @Nullable String protocol;
    /**
     * @return Gets or sets the blockchain member provision state.
     * 
     */
    private String provisioningState;
    /**
     * @return Gets the public key of the blockchain member (default transaction node).
     * 
     */
    private String publicKey;
    /**
     * @return Gets the Ethereum root contract address of the blockchain.
     * 
     */
    private String rootContractAddress;
    /**
     * @return Gets or sets the blockchain member Sku.
     * 
     */
    private @Nullable SkuResponse sku;
    /**
     * @return Tags of the service which is a list of key value pairs that describes the resource.
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return The type of the service - e.g. &#34;Microsoft.Blockchain&#34;
     * 
     */
    private String type;
    /**
     * @return Gets the auth user name of the blockchain member.
     * 
     */
    private String userName;
    /**
     * @return Gets or sets the blockchain validator nodes Sku.
     * 
     */
    private @Nullable BlockchainMemberNodesSkuResponse validatorNodesSku;

    private GetBlockchainMemberResult() {}
    /**
     * @return Gets or sets the consortium for the blockchain member.
     * 
     */
    public Optional<String> consortium() {
        return Optional.ofNullable(this.consortium);
    }
    /**
     * @return Gets the managed consortium management account address.
     * 
     */
    public String consortiumManagementAccountAddress() {
        return this.consortiumManagementAccountAddress;
    }
    /**
     * @return Sets the managed consortium management account password.
     * 
     */
    public Optional<String> consortiumManagementAccountPassword() {
        return Optional.ofNullable(this.consortiumManagementAccountPassword);
    }
    /**
     * @return Gets the display name of the member in the consortium.
     * 
     */
    public Optional<String> consortiumMemberDisplayName() {
        return Optional.ofNullable(this.consortiumMemberDisplayName);
    }
    /**
     * @return Gets the role of the member in the consortium.
     * 
     */
    public Optional<String> consortiumRole() {
        return Optional.ofNullable(this.consortiumRole);
    }
    /**
     * @return Gets the dns endpoint of the blockchain member.
     * 
     */
    public String dns() {
        return this.dns;
    }
    /**
     * @return Gets or sets firewall rules
     * 
     */
    public List<FirewallRuleResponse> firewallRules() {
        return this.firewallRules == null ? List.of() : this.firewallRules;
    }
    /**
     * @return Fully qualified resource Id of the resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The GEO location of the blockchain service.
     * 
     */
    public Optional<String> location() {
        return Optional.ofNullable(this.location);
    }
    /**
     * @return The name of the resource.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Sets the basic auth password of the blockchain member.
     * 
     */
    public Optional<String> password() {
        return Optional.ofNullable(this.password);
    }
    /**
     * @return Gets or sets the blockchain protocol.
     * 
     */
    public Optional<String> protocol() {
        return Optional.ofNullable(this.protocol);
    }
    /**
     * @return Gets or sets the blockchain member provision state.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * @return Gets the public key of the blockchain member (default transaction node).
     * 
     */
    public String publicKey() {
        return this.publicKey;
    }
    /**
     * @return Gets the Ethereum root contract address of the blockchain.
     * 
     */
    public String rootContractAddress() {
        return this.rootContractAddress;
    }
    /**
     * @return Gets or sets the blockchain member Sku.
     * 
     */
    public Optional<SkuResponse> sku() {
        return Optional.ofNullable(this.sku);
    }
    /**
     * @return Tags of the service which is a list of key value pairs that describes the resource.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return The type of the service - e.g. &#34;Microsoft.Blockchain&#34;
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return Gets the auth user name of the blockchain member.
     * 
     */
    public String userName() {
        return this.userName;
    }
    /**
     * @return Gets or sets the blockchain validator nodes Sku.
     * 
     */
    public Optional<BlockchainMemberNodesSkuResponse> validatorNodesSku() {
        return Optional.ofNullable(this.validatorNodesSku);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBlockchainMemberResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String consortium;
        private String consortiumManagementAccountAddress;
        private @Nullable String consortiumManagementAccountPassword;
        private @Nullable String consortiumMemberDisplayName;
        private @Nullable String consortiumRole;
        private String dns;
        private @Nullable List<FirewallRuleResponse> firewallRules;
        private String id;
        private @Nullable String location;
        private String name;
        private @Nullable String password;
        private @Nullable String protocol;
        private String provisioningState;
        private String publicKey;
        private String rootContractAddress;
        private @Nullable SkuResponse sku;
        private @Nullable Map<String,String> tags;
        private String type;
        private String userName;
        private @Nullable BlockchainMemberNodesSkuResponse validatorNodesSku;
        public Builder() {}
        public Builder(GetBlockchainMemberResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.consortium = defaults.consortium;
    	      this.consortiumManagementAccountAddress = defaults.consortiumManagementAccountAddress;
    	      this.consortiumManagementAccountPassword = defaults.consortiumManagementAccountPassword;
    	      this.consortiumMemberDisplayName = defaults.consortiumMemberDisplayName;
    	      this.consortiumRole = defaults.consortiumRole;
    	      this.dns = defaults.dns;
    	      this.firewallRules = defaults.firewallRules;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.password = defaults.password;
    	      this.protocol = defaults.protocol;
    	      this.provisioningState = defaults.provisioningState;
    	      this.publicKey = defaults.publicKey;
    	      this.rootContractAddress = defaults.rootContractAddress;
    	      this.sku = defaults.sku;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
    	      this.userName = defaults.userName;
    	      this.validatorNodesSku = defaults.validatorNodesSku;
        }

        @CustomType.Setter
        public Builder consortium(@Nullable String consortium) {
            this.consortium = consortium;
            return this;
        }
        @CustomType.Setter
        public Builder consortiumManagementAccountAddress(String consortiumManagementAccountAddress) {
            this.consortiumManagementAccountAddress = Objects.requireNonNull(consortiumManagementAccountAddress);
            return this;
        }
        @CustomType.Setter
        public Builder consortiumManagementAccountPassword(@Nullable String consortiumManagementAccountPassword) {
            this.consortiumManagementAccountPassword = consortiumManagementAccountPassword;
            return this;
        }
        @CustomType.Setter
        public Builder consortiumMemberDisplayName(@Nullable String consortiumMemberDisplayName) {
            this.consortiumMemberDisplayName = consortiumMemberDisplayName;
            return this;
        }
        @CustomType.Setter
        public Builder consortiumRole(@Nullable String consortiumRole) {
            this.consortiumRole = consortiumRole;
            return this;
        }
        @CustomType.Setter
        public Builder dns(String dns) {
            this.dns = Objects.requireNonNull(dns);
            return this;
        }
        @CustomType.Setter
        public Builder firewallRules(@Nullable List<FirewallRuleResponse> firewallRules) {
            this.firewallRules = firewallRules;
            return this;
        }
        public Builder firewallRules(FirewallRuleResponse... firewallRules) {
            return firewallRules(List.of(firewallRules));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder location(@Nullable String location) {
            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder password(@Nullable String password) {
            this.password = password;
            return this;
        }
        @CustomType.Setter
        public Builder protocol(@Nullable String protocol) {
            this.protocol = protocol;
            return this;
        }
        @CustomType.Setter
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        @CustomType.Setter
        public Builder publicKey(String publicKey) {
            this.publicKey = Objects.requireNonNull(publicKey);
            return this;
        }
        @CustomType.Setter
        public Builder rootContractAddress(String rootContractAddress) {
            this.rootContractAddress = Objects.requireNonNull(rootContractAddress);
            return this;
        }
        @CustomType.Setter
        public Builder sku(@Nullable SkuResponse sku) {
            this.sku = sku;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder userName(String userName) {
            this.userName = Objects.requireNonNull(userName);
            return this;
        }
        @CustomType.Setter
        public Builder validatorNodesSku(@Nullable BlockchainMemberNodesSkuResponse validatorNodesSku) {
            this.validatorNodesSku = validatorNodesSku;
            return this;
        }
        public GetBlockchainMemberResult build() {
            final var o = new GetBlockchainMemberResult();
            o.consortium = consortium;
            o.consortiumManagementAccountAddress = consortiumManagementAccountAddress;
            o.consortiumManagementAccountPassword = consortiumManagementAccountPassword;
            o.consortiumMemberDisplayName = consortiumMemberDisplayName;
            o.consortiumRole = consortiumRole;
            o.dns = dns;
            o.firewallRules = firewallRules;
            o.id = id;
            o.location = location;
            o.name = name;
            o.password = password;
            o.protocol = protocol;
            o.provisioningState = provisioningState;
            o.publicKey = publicKey;
            o.rootContractAddress = rootContractAddress;
            o.sku = sku;
            o.tags = tags;
            o.type = type;
            o.userName = userName;
            o.validatorNodesSku = validatorNodesSku;
            return o;
        }
    }
}
