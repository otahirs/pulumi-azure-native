// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.storagecache.outputs;

import com.pulumi.azurenative.storagecache.outputs.ConditionResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class CacheHealthResponse {
    /**
     * @return Outstanding conditions that need to be investigated and resolved.
     * 
     */
    private List<ConditionResponse> conditions;
    /**
     * @return List of Cache health states.
     * 
     */
    private @Nullable String state;
    /**
     * @return Describes explanation of state.
     * 
     */
    private @Nullable String statusDescription;

    private CacheHealthResponse() {}
    /**
     * @return Outstanding conditions that need to be investigated and resolved.
     * 
     */
    public List<ConditionResponse> conditions() {
        return this.conditions;
    }
    /**
     * @return List of Cache health states.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return Describes explanation of state.
     * 
     */
    public Optional<String> statusDescription() {
        return Optional.ofNullable(this.statusDescription);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CacheHealthResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<ConditionResponse> conditions;
        private @Nullable String state;
        private @Nullable String statusDescription;
        public Builder() {}
        public Builder(CacheHealthResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.conditions = defaults.conditions;
    	      this.state = defaults.state;
    	      this.statusDescription = defaults.statusDescription;
        }

        @CustomType.Setter
        public Builder conditions(List<ConditionResponse> conditions) {
            this.conditions = Objects.requireNonNull(conditions);
            return this;
        }
        public Builder conditions(ConditionResponse... conditions) {
            return conditions(List.of(conditions));
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder statusDescription(@Nullable String statusDescription) {
            this.statusDescription = statusDescription;
            return this;
        }
        public CacheHealthResponse build() {
            final var o = new CacheHealthResponse();
            o.conditions = conditions;
            o.state = state;
            o.statusDescription = statusDescription;
            return o;
        }
    }
}
