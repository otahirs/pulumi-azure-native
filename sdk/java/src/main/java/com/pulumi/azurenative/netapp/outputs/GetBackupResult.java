// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.netapp.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetBackupResult {
    /**
     * @return UUID v4 used to identify the Backup
     * 
     */
    private String backupId;
    /**
     * @return Type of backup Manual or Scheduled
     * 
     */
    private String backupType;
    /**
     * @return The creation date of the backup
     * 
     */
    private String creationDate;
    /**
     * @return Failure reason
     * 
     */
    private String failureReason;
    /**
     * @return Resource Id
     * 
     */
    private String id;
    /**
     * @return Label for backup
     * 
     */
    private @Nullable String label;
    /**
     * @return Resource location
     * 
     */
    private String location;
    /**
     * @return Resource name
     * 
     */
    private String name;
    /**
     * @return Azure lifecycle management
     * 
     */
    private String provisioningState;
    /**
     * @return Size of backup
     * 
     */
    private Double size;
    /**
     * @return Resource type
     * 
     */
    private String type;
    /**
     * @return Volume name
     * 
     */
    private String volumeName;

    private GetBackupResult() {}
    /**
     * @return UUID v4 used to identify the Backup
     * 
     */
    public String backupId() {
        return this.backupId;
    }
    /**
     * @return Type of backup Manual or Scheduled
     * 
     */
    public String backupType() {
        return this.backupType;
    }
    /**
     * @return The creation date of the backup
     * 
     */
    public String creationDate() {
        return this.creationDate;
    }
    /**
     * @return Failure reason
     * 
     */
    public String failureReason() {
        return this.failureReason;
    }
    /**
     * @return Resource Id
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Label for backup
     * 
     */
    public Optional<String> label() {
        return Optional.ofNullable(this.label);
    }
    /**
     * @return Resource location
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return Resource name
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Azure lifecycle management
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * @return Size of backup
     * 
     */
    public Double size() {
        return this.size;
    }
    /**
     * @return Resource type
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return Volume name
     * 
     */
    public String volumeName() {
        return this.volumeName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBackupResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String backupId;
        private String backupType;
        private String creationDate;
        private String failureReason;
        private String id;
        private @Nullable String label;
        private String location;
        private String name;
        private String provisioningState;
        private Double size;
        private String type;
        private String volumeName;
        public Builder() {}
        public Builder(GetBackupResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backupId = defaults.backupId;
    	      this.backupType = defaults.backupType;
    	      this.creationDate = defaults.creationDate;
    	      this.failureReason = defaults.failureReason;
    	      this.id = defaults.id;
    	      this.label = defaults.label;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.provisioningState = defaults.provisioningState;
    	      this.size = defaults.size;
    	      this.type = defaults.type;
    	      this.volumeName = defaults.volumeName;
        }

        @CustomType.Setter
        public Builder backupId(String backupId) {
            this.backupId = Objects.requireNonNull(backupId);
            return this;
        }
        @CustomType.Setter
        public Builder backupType(String backupType) {
            this.backupType = Objects.requireNonNull(backupType);
            return this;
        }
        @CustomType.Setter
        public Builder creationDate(String creationDate) {
            this.creationDate = Objects.requireNonNull(creationDate);
            return this;
        }
        @CustomType.Setter
        public Builder failureReason(String failureReason) {
            this.failureReason = Objects.requireNonNull(failureReason);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder label(@Nullable String label) {
            this.label = label;
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        @CustomType.Setter
        public Builder size(Double size) {
            this.size = Objects.requireNonNull(size);
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder volumeName(String volumeName) {
            this.volumeName = Objects.requireNonNull(volumeName);
            return this;
        }
        public GetBackupResult build() {
            final var o = new GetBackupResult();
            o.backupId = backupId;
            o.backupType = backupType;
            o.creationDate = creationDate;
            o.failureReason = failureReason;
            o.id = id;
            o.label = label;
            o.location = location;
            o.name = name;
            o.provisioningState = provisioningState;
            o.size = size;
            o.type = type;
            o.volumeName = volumeName;
            return o;
        }
    }
}
