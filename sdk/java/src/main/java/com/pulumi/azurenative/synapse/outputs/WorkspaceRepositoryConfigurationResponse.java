// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.synapse.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class WorkspaceRepositoryConfigurationResponse {
    /**
     * @return Account name
     * 
     */
    private @Nullable String accountName;
    /**
     * @return Collaboration branch
     * 
     */
    private @Nullable String collaborationBranch;
    /**
     * @return GitHub Enterprise host name. For example: https://github.mydomain.com
     * 
     */
    private @Nullable String hostName;
    /**
     * @return The last commit ID
     * 
     */
    private @Nullable String lastCommitId;
    /**
     * @return VSTS project name
     * 
     */
    private @Nullable String projectName;
    /**
     * @return Repository name
     * 
     */
    private @Nullable String repositoryName;
    /**
     * @return Root folder to use in the repository
     * 
     */
    private @Nullable String rootFolder;
    /**
     * @return The VSTS tenant ID
     * 
     */
    private @Nullable String tenantId;
    /**
     * @return Type of workspace repositoryID configuration. Example WorkspaceVSTSConfiguration, WorkspaceGitHubConfiguration
     * 
     */
    private @Nullable String type;

    private WorkspaceRepositoryConfigurationResponse() {}
    /**
     * @return Account name
     * 
     */
    public Optional<String> accountName() {
        return Optional.ofNullable(this.accountName);
    }
    /**
     * @return Collaboration branch
     * 
     */
    public Optional<String> collaborationBranch() {
        return Optional.ofNullable(this.collaborationBranch);
    }
    /**
     * @return GitHub Enterprise host name. For example: https://github.mydomain.com
     * 
     */
    public Optional<String> hostName() {
        return Optional.ofNullable(this.hostName);
    }
    /**
     * @return The last commit ID
     * 
     */
    public Optional<String> lastCommitId() {
        return Optional.ofNullable(this.lastCommitId);
    }
    /**
     * @return VSTS project name
     * 
     */
    public Optional<String> projectName() {
        return Optional.ofNullable(this.projectName);
    }
    /**
     * @return Repository name
     * 
     */
    public Optional<String> repositoryName() {
        return Optional.ofNullable(this.repositoryName);
    }
    /**
     * @return Root folder to use in the repository
     * 
     */
    public Optional<String> rootFolder() {
        return Optional.ofNullable(this.rootFolder);
    }
    /**
     * @return The VSTS tenant ID
     * 
     */
    public Optional<String> tenantId() {
        return Optional.ofNullable(this.tenantId);
    }
    /**
     * @return Type of workspace repositoryID configuration. Example WorkspaceVSTSConfiguration, WorkspaceGitHubConfiguration
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WorkspaceRepositoryConfigurationResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String accountName;
        private @Nullable String collaborationBranch;
        private @Nullable String hostName;
        private @Nullable String lastCommitId;
        private @Nullable String projectName;
        private @Nullable String repositoryName;
        private @Nullable String rootFolder;
        private @Nullable String tenantId;
        private @Nullable String type;
        public Builder() {}
        public Builder(WorkspaceRepositoryConfigurationResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountName = defaults.accountName;
    	      this.collaborationBranch = defaults.collaborationBranch;
    	      this.hostName = defaults.hostName;
    	      this.lastCommitId = defaults.lastCommitId;
    	      this.projectName = defaults.projectName;
    	      this.repositoryName = defaults.repositoryName;
    	      this.rootFolder = defaults.rootFolder;
    	      this.tenantId = defaults.tenantId;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder accountName(@Nullable String accountName) {
            this.accountName = accountName;
            return this;
        }
        @CustomType.Setter
        public Builder collaborationBranch(@Nullable String collaborationBranch) {
            this.collaborationBranch = collaborationBranch;
            return this;
        }
        @CustomType.Setter
        public Builder hostName(@Nullable String hostName) {
            this.hostName = hostName;
            return this;
        }
        @CustomType.Setter
        public Builder lastCommitId(@Nullable String lastCommitId) {
            this.lastCommitId = lastCommitId;
            return this;
        }
        @CustomType.Setter
        public Builder projectName(@Nullable String projectName) {
            this.projectName = projectName;
            return this;
        }
        @CustomType.Setter
        public Builder repositoryName(@Nullable String repositoryName) {
            this.repositoryName = repositoryName;
            return this;
        }
        @CustomType.Setter
        public Builder rootFolder(@Nullable String rootFolder) {
            this.rootFolder = rootFolder;
            return this;
        }
        @CustomType.Setter
        public Builder tenantId(@Nullable String tenantId) {
            this.tenantId = tenantId;
            return this;
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {
            this.type = type;
            return this;
        }
        public WorkspaceRepositoryConfigurationResponse build() {
            final var o = new WorkspaceRepositoryConfigurationResponse();
            o.accountName = accountName;
            o.collaborationBranch = collaborationBranch;
            o.hostName = hostName;
            o.lastCommitId = lastCommitId;
            o.projectName = projectName;
            o.repositoryName = repositoryName;
            o.rootFolder = rootFolder;
            o.tenantId = tenantId;
            o.type = type;
            return o;
        }
    }
}
