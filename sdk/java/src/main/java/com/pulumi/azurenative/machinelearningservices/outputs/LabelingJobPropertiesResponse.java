// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearningservices.outputs;

import com.pulumi.azurenative.machinelearningservices.outputs.LabelCategoryResponse;
import com.pulumi.azurenative.machinelearningservices.outputs.LabelingDatasetConfigurationResponse;
import com.pulumi.azurenative.machinelearningservices.outputs.LabelingJobImagePropertiesResponse;
import com.pulumi.azurenative.machinelearningservices.outputs.LabelingJobInstructionsResponse;
import com.pulumi.azurenative.machinelearningservices.outputs.MLAssistConfigurationResponse;
import com.pulumi.azurenative.machinelearningservices.outputs.ProgressMetricsResponse;
import com.pulumi.azurenative.machinelearningservices.outputs.StatusMessageResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class LabelingJobPropertiesResponse {
    /**
     * @return Created time of the job in UTC timezone.
     * 
     */
    private String createdTimeUtc;
    /**
     * @return Dataset configuration for the job.
     * 
     */
    private LabelingDatasetConfigurationResponse datasetConfiguration;
    /**
     * @return Instructions for the job.
     * 
     */
    private LabelingJobInstructionsResponse jobInstructions;
    /**
     * @return Label categories of the job.
     * 
     */
    private Map<String,LabelCategoryResponse> labelCategories;
    /**
     * @return Media specific properties in a labeling job.
     * 
     */
    private LabelingJobImagePropertiesResponse labelingJobMediaProperties;
    /**
     * @return Machine learning assisted configuration for the job.
     * 
     */
    private @Nullable MLAssistConfigurationResponse mlAssistConfiguration;
    /**
     * @return Progress metrics of the job.
     * 
     */
    private ProgressMetricsResponse progressMetrics;
    /**
     * @return Internal id of the job(Previously called project).
     * 
     */
    private String projectId;
    /**
     * @return The job property dictionary. Properties can be added, but not removed or altered.
     * 
     */
    private @Nullable Map<String,String> properties;
    /**
     * @return Status of the job.
     * 
     */
    private String status;
    /**
     * @return Status messages of the job.
     * 
     */
    private List<StatusMessageResponse> statusMessages;
    /**
     * @return The job tag dictionary. Tags can be added, removed, and updated.
     * 
     */
    private @Nullable Map<String,String> tags;

    private LabelingJobPropertiesResponse() {}
    /**
     * @return Created time of the job in UTC timezone.
     * 
     */
    public String createdTimeUtc() {
        return this.createdTimeUtc;
    }
    /**
     * @return Dataset configuration for the job.
     * 
     */
    public LabelingDatasetConfigurationResponse datasetConfiguration() {
        return this.datasetConfiguration;
    }
    /**
     * @return Instructions for the job.
     * 
     */
    public LabelingJobInstructionsResponse jobInstructions() {
        return this.jobInstructions;
    }
    /**
     * @return Label categories of the job.
     * 
     */
    public Map<String,LabelCategoryResponse> labelCategories() {
        return this.labelCategories;
    }
    /**
     * @return Media specific properties in a labeling job.
     * 
     */
    public LabelingJobImagePropertiesResponse labelingJobMediaProperties() {
        return this.labelingJobMediaProperties;
    }
    /**
     * @return Machine learning assisted configuration for the job.
     * 
     */
    public Optional<MLAssistConfigurationResponse> mlAssistConfiguration() {
        return Optional.ofNullable(this.mlAssistConfiguration);
    }
    /**
     * @return Progress metrics of the job.
     * 
     */
    public ProgressMetricsResponse progressMetrics() {
        return this.progressMetrics;
    }
    /**
     * @return Internal id of the job(Previously called project).
     * 
     */
    public String projectId() {
        return this.projectId;
    }
    /**
     * @return The job property dictionary. Properties can be added, but not removed or altered.
     * 
     */
    public Map<String,String> properties() {
        return this.properties == null ? Map.of() : this.properties;
    }
    /**
     * @return Status of the job.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return Status messages of the job.
     * 
     */
    public List<StatusMessageResponse> statusMessages() {
        return this.statusMessages;
    }
    /**
     * @return The job tag dictionary. Tags can be added, removed, and updated.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LabelingJobPropertiesResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String createdTimeUtc;
        private LabelingDatasetConfigurationResponse datasetConfiguration;
        private LabelingJobInstructionsResponse jobInstructions;
        private Map<String,LabelCategoryResponse> labelCategories;
        private LabelingJobImagePropertiesResponse labelingJobMediaProperties;
        private @Nullable MLAssistConfigurationResponse mlAssistConfiguration;
        private ProgressMetricsResponse progressMetrics;
        private String projectId;
        private @Nullable Map<String,String> properties;
        private String status;
        private List<StatusMessageResponse> statusMessages;
        private @Nullable Map<String,String> tags;
        public Builder() {}
        public Builder(LabelingJobPropertiesResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createdTimeUtc = defaults.createdTimeUtc;
    	      this.datasetConfiguration = defaults.datasetConfiguration;
    	      this.jobInstructions = defaults.jobInstructions;
    	      this.labelCategories = defaults.labelCategories;
    	      this.labelingJobMediaProperties = defaults.labelingJobMediaProperties;
    	      this.mlAssistConfiguration = defaults.mlAssistConfiguration;
    	      this.progressMetrics = defaults.progressMetrics;
    	      this.projectId = defaults.projectId;
    	      this.properties = defaults.properties;
    	      this.status = defaults.status;
    	      this.statusMessages = defaults.statusMessages;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder createdTimeUtc(String createdTimeUtc) {
            this.createdTimeUtc = Objects.requireNonNull(createdTimeUtc);
            return this;
        }
        @CustomType.Setter
        public Builder datasetConfiguration(LabelingDatasetConfigurationResponse datasetConfiguration) {
            this.datasetConfiguration = Objects.requireNonNull(datasetConfiguration);
            return this;
        }
        @CustomType.Setter
        public Builder jobInstructions(LabelingJobInstructionsResponse jobInstructions) {
            this.jobInstructions = Objects.requireNonNull(jobInstructions);
            return this;
        }
        @CustomType.Setter
        public Builder labelCategories(Map<String,LabelCategoryResponse> labelCategories) {
            this.labelCategories = Objects.requireNonNull(labelCategories);
            return this;
        }
        @CustomType.Setter
        public Builder labelingJobMediaProperties(LabelingJobImagePropertiesResponse labelingJobMediaProperties) {
            this.labelingJobMediaProperties = Objects.requireNonNull(labelingJobMediaProperties);
            return this;
        }
        @CustomType.Setter
        public Builder mlAssistConfiguration(@Nullable MLAssistConfigurationResponse mlAssistConfiguration) {
            this.mlAssistConfiguration = mlAssistConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder progressMetrics(ProgressMetricsResponse progressMetrics) {
            this.progressMetrics = Objects.requireNonNull(progressMetrics);
            return this;
        }
        @CustomType.Setter
        public Builder projectId(String projectId) {
            this.projectId = Objects.requireNonNull(projectId);
            return this;
        }
        @CustomType.Setter
        public Builder properties(@Nullable Map<String,String> properties) {
            this.properties = properties;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        @CustomType.Setter
        public Builder statusMessages(List<StatusMessageResponse> statusMessages) {
            this.statusMessages = Objects.requireNonNull(statusMessages);
            return this;
        }
        public Builder statusMessages(StatusMessageResponse... statusMessages) {
            return statusMessages(List.of(statusMessages));
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        public LabelingJobPropertiesResponse build() {
            final var o = new LabelingJobPropertiesResponse();
            o.createdTimeUtc = createdTimeUtc;
            o.datasetConfiguration = datasetConfiguration;
            o.jobInstructions = jobInstructions;
            o.labelCategories = labelCategories;
            o.labelingJobMediaProperties = labelingJobMediaProperties;
            o.mlAssistConfiguration = mlAssistConfiguration;
            o.progressMetrics = progressMetrics;
            o.projectId = projectId;
            o.properties = properties;
            o.status = status;
            o.statusMessages = statusMessages;
            o.tags = tags;
            return o;
        }
    }
}
