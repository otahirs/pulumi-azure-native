// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datamigration.outputs;

import com.pulumi.azurenative.datamigration.outputs.ReportableExceptionResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class ConnectToTargetSqlMITaskOutputResponse {
    /**
     * @return List of agent jobs on the target server.
     * 
     */
    private List<String> agentJobs;
    /**
     * @return Result identifier
     * 
     */
    private String id;
    /**
     * @return List of logins on the target server.
     * 
     */
    private List<String> logins;
    /**
     * @return Target server brand version
     * 
     */
    private String targetServerBrandVersion;
    /**
     * @return Target server version
     * 
     */
    private String targetServerVersion;
    /**
     * @return Validation errors
     * 
     */
    private List<ReportableExceptionResponse> validationErrors;

    private ConnectToTargetSqlMITaskOutputResponse() {}
    /**
     * @return List of agent jobs on the target server.
     * 
     */
    public List<String> agentJobs() {
        return this.agentJobs;
    }
    /**
     * @return Result identifier
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return List of logins on the target server.
     * 
     */
    public List<String> logins() {
        return this.logins;
    }
    /**
     * @return Target server brand version
     * 
     */
    public String targetServerBrandVersion() {
        return this.targetServerBrandVersion;
    }
    /**
     * @return Target server version
     * 
     */
    public String targetServerVersion() {
        return this.targetServerVersion;
    }
    /**
     * @return Validation errors
     * 
     */
    public List<ReportableExceptionResponse> validationErrors() {
        return this.validationErrors;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConnectToTargetSqlMITaskOutputResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> agentJobs;
        private String id;
        private List<String> logins;
        private String targetServerBrandVersion;
        private String targetServerVersion;
        private List<ReportableExceptionResponse> validationErrors;
        public Builder() {}
        public Builder(ConnectToTargetSqlMITaskOutputResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.agentJobs = defaults.agentJobs;
    	      this.id = defaults.id;
    	      this.logins = defaults.logins;
    	      this.targetServerBrandVersion = defaults.targetServerBrandVersion;
    	      this.targetServerVersion = defaults.targetServerVersion;
    	      this.validationErrors = defaults.validationErrors;
        }

        @CustomType.Setter
        public Builder agentJobs(List<String> agentJobs) {
            this.agentJobs = Objects.requireNonNull(agentJobs);
            return this;
        }
        public Builder agentJobs(String... agentJobs) {
            return agentJobs(List.of(agentJobs));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder logins(List<String> logins) {
            this.logins = Objects.requireNonNull(logins);
            return this;
        }
        public Builder logins(String... logins) {
            return logins(List.of(logins));
        }
        @CustomType.Setter
        public Builder targetServerBrandVersion(String targetServerBrandVersion) {
            this.targetServerBrandVersion = Objects.requireNonNull(targetServerBrandVersion);
            return this;
        }
        @CustomType.Setter
        public Builder targetServerVersion(String targetServerVersion) {
            this.targetServerVersion = Objects.requireNonNull(targetServerVersion);
            return this;
        }
        @CustomType.Setter
        public Builder validationErrors(List<ReportableExceptionResponse> validationErrors) {
            this.validationErrors = Objects.requireNonNull(validationErrors);
            return this;
        }
        public Builder validationErrors(ReportableExceptionResponse... validationErrors) {
            return validationErrors(List.of(validationErrors));
        }
        public ConnectToTargetSqlMITaskOutputResponse build() {
            final var o = new ConnectToTargetSqlMITaskOutputResponse();
            o.agentJobs = agentJobs;
            o.id = id;
            o.logins = logins;
            o.targetServerBrandVersion = targetServerBrandVersion;
            o.targetServerVersion = targetServerVersion;
            o.validationErrors = validationErrors;
            return o;
        }
    }
}
