// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.workloads.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;


/**
 * Specifies Windows operating system settings on the virtual machine.
 * 
 */
public final class WindowsConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final WindowsConfigurationArgs Empty = new WindowsConfigurationArgs();

    /**
     * The OS Type
     * Expected value is &#39;Windows&#39;.
     * 
     */
    @Import(name="osType", required=true)
    private Output<String> osType;

    /**
     * @return The OS Type
     * Expected value is &#39;Windows&#39;.
     * 
     */
    public Output<String> osType() {
        return this.osType;
    }

    private WindowsConfigurationArgs() {}

    private WindowsConfigurationArgs(WindowsConfigurationArgs $) {
        this.osType = $.osType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WindowsConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WindowsConfigurationArgs $;

        public Builder() {
            $ = new WindowsConfigurationArgs();
        }

        public Builder(WindowsConfigurationArgs defaults) {
            $ = new WindowsConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param osType The OS Type
         * Expected value is &#39;Windows&#39;.
         * 
         * @return builder
         * 
         */
        public Builder osType(Output<String> osType) {
            $.osType = osType;
            return this;
        }

        /**
         * @param osType The OS Type
         * Expected value is &#39;Windows&#39;.
         * 
         * @return builder
         * 
         */
        public Builder osType(String osType) {
            return osType(Output.of(osType));
        }

        public WindowsConfigurationArgs build() {
            $.osType = Codegen.stringProp("osType").output().arg($.osType).require();
            return $;
        }
    }

}
