// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.digitaltwins.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AzureDataExplorerConnectionPropertiesResponse {
    /**
     * @return The name of the Azure Data Explorer database.
     * 
     */
    private String adxDatabaseName;
    /**
     * @return The URI of the Azure Data Explorer endpoint.
     * 
     */
    private String adxEndpointUri;
    /**
     * @return The resource ID of the Azure Data Explorer cluster.
     * 
     */
    private String adxResourceId;
    /**
     * @return The name of the Azure Data Explorer table.
     * 
     */
    private @Nullable String adxTableName;
    /**
     * @return The type of time series connection resource.
     * Expected value is &#39;AzureDataExplorer&#39;.
     * 
     */
    private String connectionType;
    /**
     * @return The EventHub consumer group to use when ADX reads from EventHub. Defaults to $Default.
     * 
     */
    private @Nullable String eventHubConsumerGroup;
    /**
     * @return The URL of the EventHub namespace for identity-based authentication. It must include the protocol sb://
     * 
     */
    private String eventHubEndpointUri;
    /**
     * @return The EventHub name in the EventHub namespace for identity-based authentication.
     * 
     */
    private String eventHubEntityPath;
    /**
     * @return The resource ID of the EventHub namespace.
     * 
     */
    private String eventHubNamespaceResourceId;
    /**
     * @return The provisioning state.
     * 
     */
    private String provisioningState;

    private AzureDataExplorerConnectionPropertiesResponse() {}
    /**
     * @return The name of the Azure Data Explorer database.
     * 
     */
    public String adxDatabaseName() {
        return this.adxDatabaseName;
    }
    /**
     * @return The URI of the Azure Data Explorer endpoint.
     * 
     */
    public String adxEndpointUri() {
        return this.adxEndpointUri;
    }
    /**
     * @return The resource ID of the Azure Data Explorer cluster.
     * 
     */
    public String adxResourceId() {
        return this.adxResourceId;
    }
    /**
     * @return The name of the Azure Data Explorer table.
     * 
     */
    public Optional<String> adxTableName() {
        return Optional.ofNullable(this.adxTableName);
    }
    /**
     * @return The type of time series connection resource.
     * Expected value is &#39;AzureDataExplorer&#39;.
     * 
     */
    public String connectionType() {
        return this.connectionType;
    }
    /**
     * @return The EventHub consumer group to use when ADX reads from EventHub. Defaults to $Default.
     * 
     */
    public Optional<String> eventHubConsumerGroup() {
        return Optional.ofNullable(this.eventHubConsumerGroup);
    }
    /**
     * @return The URL of the EventHub namespace for identity-based authentication. It must include the protocol sb://
     * 
     */
    public String eventHubEndpointUri() {
        return this.eventHubEndpointUri;
    }
    /**
     * @return The EventHub name in the EventHub namespace for identity-based authentication.
     * 
     */
    public String eventHubEntityPath() {
        return this.eventHubEntityPath;
    }
    /**
     * @return The resource ID of the EventHub namespace.
     * 
     */
    public String eventHubNamespaceResourceId() {
        return this.eventHubNamespaceResourceId;
    }
    /**
     * @return The provisioning state.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AzureDataExplorerConnectionPropertiesResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String adxDatabaseName;
        private String adxEndpointUri;
        private String adxResourceId;
        private @Nullable String adxTableName;
        private String connectionType;
        private @Nullable String eventHubConsumerGroup;
        private String eventHubEndpointUri;
        private String eventHubEntityPath;
        private String eventHubNamespaceResourceId;
        private String provisioningState;
        public Builder() {}
        public Builder(AzureDataExplorerConnectionPropertiesResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.adxDatabaseName = defaults.adxDatabaseName;
    	      this.adxEndpointUri = defaults.adxEndpointUri;
    	      this.adxResourceId = defaults.adxResourceId;
    	      this.adxTableName = defaults.adxTableName;
    	      this.connectionType = defaults.connectionType;
    	      this.eventHubConsumerGroup = defaults.eventHubConsumerGroup;
    	      this.eventHubEndpointUri = defaults.eventHubEndpointUri;
    	      this.eventHubEntityPath = defaults.eventHubEntityPath;
    	      this.eventHubNamespaceResourceId = defaults.eventHubNamespaceResourceId;
    	      this.provisioningState = defaults.provisioningState;
        }

        @CustomType.Setter
        public Builder adxDatabaseName(String adxDatabaseName) {
            this.adxDatabaseName = Objects.requireNonNull(adxDatabaseName);
            return this;
        }
        @CustomType.Setter
        public Builder adxEndpointUri(String adxEndpointUri) {
            this.adxEndpointUri = Objects.requireNonNull(adxEndpointUri);
            return this;
        }
        @CustomType.Setter
        public Builder adxResourceId(String adxResourceId) {
            this.adxResourceId = Objects.requireNonNull(adxResourceId);
            return this;
        }
        @CustomType.Setter
        public Builder adxTableName(@Nullable String adxTableName) {
            this.adxTableName = adxTableName;
            return this;
        }
        @CustomType.Setter
        public Builder connectionType(String connectionType) {
            this.connectionType = Objects.requireNonNull(connectionType);
            return this;
        }
        @CustomType.Setter
        public Builder eventHubConsumerGroup(@Nullable String eventHubConsumerGroup) {
            this.eventHubConsumerGroup = eventHubConsumerGroup;
            return this;
        }
        @CustomType.Setter
        public Builder eventHubEndpointUri(String eventHubEndpointUri) {
            this.eventHubEndpointUri = Objects.requireNonNull(eventHubEndpointUri);
            return this;
        }
        @CustomType.Setter
        public Builder eventHubEntityPath(String eventHubEntityPath) {
            this.eventHubEntityPath = Objects.requireNonNull(eventHubEntityPath);
            return this;
        }
        @CustomType.Setter
        public Builder eventHubNamespaceResourceId(String eventHubNamespaceResourceId) {
            this.eventHubNamespaceResourceId = Objects.requireNonNull(eventHubNamespaceResourceId);
            return this;
        }
        @CustomType.Setter
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        public AzureDataExplorerConnectionPropertiesResponse build() {
            final var o = new AzureDataExplorerConnectionPropertiesResponse();
            o.adxDatabaseName = adxDatabaseName;
            o.adxEndpointUri = adxEndpointUri;
            o.adxResourceId = adxResourceId;
            o.adxTableName = adxTableName;
            o.connectionType = connectionType;
            o.eventHubConsumerGroup = eventHubConsumerGroup;
            o.eventHubEndpointUri = eventHubEndpointUri;
            o.eventHubEntityPath = eventHubEntityPath;
            o.eventHubNamespaceResourceId = eventHubNamespaceResourceId;
            o.provisioningState = provisioningState;
            return o;
        }
    }
}
