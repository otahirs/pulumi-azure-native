// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.outputs;

import com.pulumi.azurenative.network.outputs.ExperimentEndpointResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetExperimentResult {
    /**
     * @return The description of the details or intents of the Experiment
     * 
     */
    private @Nullable String description;
    /**
     * @return The state of the Experiment
     * 
     */
    private @Nullable String enabledState;
    /**
     * @return The endpoint A of an experiment
     * 
     */
    private @Nullable ExperimentEndpointResponse endpointA;
    /**
     * @return The endpoint B of an experiment
     * 
     */
    private @Nullable ExperimentEndpointResponse endpointB;
    /**
     * @return Resource ID.
     * 
     */
    private String id;
    /**
     * @return Resource location.
     * 
     */
    private @Nullable String location;
    /**
     * @return Resource name.
     * 
     */
    private String name;
    /**
     * @return Resource status.
     * 
     */
    private String resourceState;
    /**
     * @return The uri to the Script used in the Experiment
     * 
     */
    private String scriptFileUri;
    /**
     * @return The description of Experiment status from the server side
     * 
     */
    private String status;
    /**
     * @return Resource tags.
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return Resource type.
     * 
     */
    private String type;

    private GetExperimentResult() {}
    /**
     * @return The description of the details or intents of the Experiment
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return The state of the Experiment
     * 
     */
    public Optional<String> enabledState() {
        return Optional.ofNullable(this.enabledState);
    }
    /**
     * @return The endpoint A of an experiment
     * 
     */
    public Optional<ExperimentEndpointResponse> endpointA() {
        return Optional.ofNullable(this.endpointA);
    }
    /**
     * @return The endpoint B of an experiment
     * 
     */
    public Optional<ExperimentEndpointResponse> endpointB() {
        return Optional.ofNullable(this.endpointB);
    }
    /**
     * @return Resource ID.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Resource location.
     * 
     */
    public Optional<String> location() {
        return Optional.ofNullable(this.location);
    }
    /**
     * @return Resource name.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Resource status.
     * 
     */
    public String resourceState() {
        return this.resourceState;
    }
    /**
     * @return The uri to the Script used in the Experiment
     * 
     */
    public String scriptFileUri() {
        return this.scriptFileUri;
    }
    /**
     * @return The description of Experiment status from the server side
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return Resource tags.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return Resource type.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetExperimentResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String description;
        private @Nullable String enabledState;
        private @Nullable ExperimentEndpointResponse endpointA;
        private @Nullable ExperimentEndpointResponse endpointB;
        private String id;
        private @Nullable String location;
        private String name;
        private String resourceState;
        private String scriptFileUri;
        private String status;
        private @Nullable Map<String,String> tags;
        private String type;
        public Builder() {}
        public Builder(GetExperimentResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.enabledState = defaults.enabledState;
    	      this.endpointA = defaults.endpointA;
    	      this.endpointB = defaults.endpointB;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.resourceState = defaults.resourceState;
    	      this.scriptFileUri = defaults.scriptFileUri;
    	      this.status = defaults.status;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder enabledState(@Nullable String enabledState) {
            this.enabledState = enabledState;
            return this;
        }
        @CustomType.Setter
        public Builder endpointA(@Nullable ExperimentEndpointResponse endpointA) {
            this.endpointA = endpointA;
            return this;
        }
        @CustomType.Setter
        public Builder endpointB(@Nullable ExperimentEndpointResponse endpointB) {
            this.endpointB = endpointB;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder location(@Nullable String location) {
            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder resourceState(String resourceState) {
            this.resourceState = Objects.requireNonNull(resourceState);
            return this;
        }
        @CustomType.Setter
        public Builder scriptFileUri(String scriptFileUri) {
            this.scriptFileUri = Objects.requireNonNull(scriptFileUri);
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetExperimentResult build() {
            final var o = new GetExperimentResult();
            o.description = description;
            o.enabledState = enabledState;
            o.endpointA = endpointA;
            o.endpointB = endpointB;
            o.id = id;
            o.location = location;
            o.name = name;
            o.resourceState = resourceState;
            o.scriptFileUri = scriptFileUri;
            o.status = status;
            o.tags = tags;
            o.type = type;
            return o;
        }
    }
}
