// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.synapse.outputs;

import com.pulumi.azurenative.synapse.outputs.LinkedIntegrationRuntimeResponse;
import com.pulumi.azurenative.synapse.outputs.SelfHostedIntegrationRuntimeNodeResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class SelfHostedIntegrationRuntimeStatusResponse {
    /**
     * @return Whether Self-hosted integration runtime auto update has been turned on.
     * 
     */
    private String autoUpdate;
    /**
     * @return The estimated time when the self-hosted integration runtime will be updated.
     * 
     */
    private String autoUpdateETA;
    /**
     * @return Object with additional information about integration runtime capabilities.
     * 
     */
    private Map<String,String> capabilities;
    /**
     * @return The time at which the integration runtime was created, in ISO8601 format.
     * 
     */
    private String createTime;
    /**
     * @return The workspace name which the integration runtime belong to.
     * 
     */
    private String dataFactoryName;
    /**
     * @return It is used to set the encryption mode for node-node communication channel (when more than 2 self-hosted integration runtime nodes exist).
     * 
     */
    private String internalChannelEncryption;
    /**
     * @return The latest version on download center.
     * 
     */
    private String latestVersion;
    /**
     * @return The list of linked integration runtimes that are created to share with this integration runtime.
     * 
     */
    private @Nullable List<LinkedIntegrationRuntimeResponse> links;
    /**
     * @return The local time zone offset in hours.
     * 
     */
    private String localTimeZoneOffset;
    /**
     * @return The node communication Channel encryption mode
     * 
     */
    private String nodeCommunicationChannelEncryptionMode;
    /**
     * @return The list of nodes for this integration runtime.
     * 
     */
    private @Nullable List<SelfHostedIntegrationRuntimeNodeResponse> nodes;
    /**
     * @return The version that the integration runtime is going to update to.
     * 
     */
    private String pushedVersion;
    /**
     * @return The date at which the integration runtime will be scheduled to update, in ISO8601 format.
     * 
     */
    private String scheduledUpdateDate;
    /**
     * @return The URLs for the services used in integration runtime backend service.
     * 
     */
    private List<String> serviceUrls;
    /**
     * @return The state of integration runtime.
     * 
     */
    private String state;
    /**
     * @return The task queue id of the integration runtime.
     * 
     */
    private String taskQueueId;
    /**
     * @return The type of integration runtime.
     * Expected value is &#39;SelfHosted&#39;.
     * 
     */
    private String type;
    /**
     * @return The time in the date scheduled by service to update the integration runtime, e.g., PT03H is 3 hours
     * 
     */
    private String updateDelayOffset;
    /**
     * @return Version of the integration runtime.
     * 
     */
    private String version;
    /**
     * @return Status of the integration runtime version.
     * 
     */
    private String versionStatus;

    private SelfHostedIntegrationRuntimeStatusResponse() {}
    /**
     * @return Whether Self-hosted integration runtime auto update has been turned on.
     * 
     */
    public String autoUpdate() {
        return this.autoUpdate;
    }
    /**
     * @return The estimated time when the self-hosted integration runtime will be updated.
     * 
     */
    public String autoUpdateETA() {
        return this.autoUpdateETA;
    }
    /**
     * @return Object with additional information about integration runtime capabilities.
     * 
     */
    public Map<String,String> capabilities() {
        return this.capabilities;
    }
    /**
     * @return The time at which the integration runtime was created, in ISO8601 format.
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return The workspace name which the integration runtime belong to.
     * 
     */
    public String dataFactoryName() {
        return this.dataFactoryName;
    }
    /**
     * @return It is used to set the encryption mode for node-node communication channel (when more than 2 self-hosted integration runtime nodes exist).
     * 
     */
    public String internalChannelEncryption() {
        return this.internalChannelEncryption;
    }
    /**
     * @return The latest version on download center.
     * 
     */
    public String latestVersion() {
        return this.latestVersion;
    }
    /**
     * @return The list of linked integration runtimes that are created to share with this integration runtime.
     * 
     */
    public List<LinkedIntegrationRuntimeResponse> links() {
        return this.links == null ? List.of() : this.links;
    }
    /**
     * @return The local time zone offset in hours.
     * 
     */
    public String localTimeZoneOffset() {
        return this.localTimeZoneOffset;
    }
    /**
     * @return The node communication Channel encryption mode
     * 
     */
    public String nodeCommunicationChannelEncryptionMode() {
        return this.nodeCommunicationChannelEncryptionMode;
    }
    /**
     * @return The list of nodes for this integration runtime.
     * 
     */
    public List<SelfHostedIntegrationRuntimeNodeResponse> nodes() {
        return this.nodes == null ? List.of() : this.nodes;
    }
    /**
     * @return The version that the integration runtime is going to update to.
     * 
     */
    public String pushedVersion() {
        return this.pushedVersion;
    }
    /**
     * @return The date at which the integration runtime will be scheduled to update, in ISO8601 format.
     * 
     */
    public String scheduledUpdateDate() {
        return this.scheduledUpdateDate;
    }
    /**
     * @return The URLs for the services used in integration runtime backend service.
     * 
     */
    public List<String> serviceUrls() {
        return this.serviceUrls;
    }
    /**
     * @return The state of integration runtime.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The task queue id of the integration runtime.
     * 
     */
    public String taskQueueId() {
        return this.taskQueueId;
    }
    /**
     * @return The type of integration runtime.
     * Expected value is &#39;SelfHosted&#39;.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return The time in the date scheduled by service to update the integration runtime, e.g., PT03H is 3 hours
     * 
     */
    public String updateDelayOffset() {
        return this.updateDelayOffset;
    }
    /**
     * @return Version of the integration runtime.
     * 
     */
    public String version() {
        return this.version;
    }
    /**
     * @return Status of the integration runtime version.
     * 
     */
    public String versionStatus() {
        return this.versionStatus;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SelfHostedIntegrationRuntimeStatusResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String autoUpdate;
        private String autoUpdateETA;
        private Map<String,String> capabilities;
        private String createTime;
        private String dataFactoryName;
        private String internalChannelEncryption;
        private String latestVersion;
        private @Nullable List<LinkedIntegrationRuntimeResponse> links;
        private String localTimeZoneOffset;
        private String nodeCommunicationChannelEncryptionMode;
        private @Nullable List<SelfHostedIntegrationRuntimeNodeResponse> nodes;
        private String pushedVersion;
        private String scheduledUpdateDate;
        private List<String> serviceUrls;
        private String state;
        private String taskQueueId;
        private String type;
        private String updateDelayOffset;
        private String version;
        private String versionStatus;
        public Builder() {}
        public Builder(SelfHostedIntegrationRuntimeStatusResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoUpdate = defaults.autoUpdate;
    	      this.autoUpdateETA = defaults.autoUpdateETA;
    	      this.capabilities = defaults.capabilities;
    	      this.createTime = defaults.createTime;
    	      this.dataFactoryName = defaults.dataFactoryName;
    	      this.internalChannelEncryption = defaults.internalChannelEncryption;
    	      this.latestVersion = defaults.latestVersion;
    	      this.links = defaults.links;
    	      this.localTimeZoneOffset = defaults.localTimeZoneOffset;
    	      this.nodeCommunicationChannelEncryptionMode = defaults.nodeCommunicationChannelEncryptionMode;
    	      this.nodes = defaults.nodes;
    	      this.pushedVersion = defaults.pushedVersion;
    	      this.scheduledUpdateDate = defaults.scheduledUpdateDate;
    	      this.serviceUrls = defaults.serviceUrls;
    	      this.state = defaults.state;
    	      this.taskQueueId = defaults.taskQueueId;
    	      this.type = defaults.type;
    	      this.updateDelayOffset = defaults.updateDelayOffset;
    	      this.version = defaults.version;
    	      this.versionStatus = defaults.versionStatus;
        }

        @CustomType.Setter
        public Builder autoUpdate(String autoUpdate) {
            this.autoUpdate = Objects.requireNonNull(autoUpdate);
            return this;
        }
        @CustomType.Setter
        public Builder autoUpdateETA(String autoUpdateETA) {
            this.autoUpdateETA = Objects.requireNonNull(autoUpdateETA);
            return this;
        }
        @CustomType.Setter
        public Builder capabilities(Map<String,String> capabilities) {
            this.capabilities = Objects.requireNonNull(capabilities);
            return this;
        }
        @CustomType.Setter
        public Builder createTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }
        @CustomType.Setter
        public Builder dataFactoryName(String dataFactoryName) {
            this.dataFactoryName = Objects.requireNonNull(dataFactoryName);
            return this;
        }
        @CustomType.Setter
        public Builder internalChannelEncryption(String internalChannelEncryption) {
            this.internalChannelEncryption = Objects.requireNonNull(internalChannelEncryption);
            return this;
        }
        @CustomType.Setter
        public Builder latestVersion(String latestVersion) {
            this.latestVersion = Objects.requireNonNull(latestVersion);
            return this;
        }
        @CustomType.Setter
        public Builder links(@Nullable List<LinkedIntegrationRuntimeResponse> links) {
            this.links = links;
            return this;
        }
        public Builder links(LinkedIntegrationRuntimeResponse... links) {
            return links(List.of(links));
        }
        @CustomType.Setter
        public Builder localTimeZoneOffset(String localTimeZoneOffset) {
            this.localTimeZoneOffset = Objects.requireNonNull(localTimeZoneOffset);
            return this;
        }
        @CustomType.Setter
        public Builder nodeCommunicationChannelEncryptionMode(String nodeCommunicationChannelEncryptionMode) {
            this.nodeCommunicationChannelEncryptionMode = Objects.requireNonNull(nodeCommunicationChannelEncryptionMode);
            return this;
        }
        @CustomType.Setter
        public Builder nodes(@Nullable List<SelfHostedIntegrationRuntimeNodeResponse> nodes) {
            this.nodes = nodes;
            return this;
        }
        public Builder nodes(SelfHostedIntegrationRuntimeNodeResponse... nodes) {
            return nodes(List.of(nodes));
        }
        @CustomType.Setter
        public Builder pushedVersion(String pushedVersion) {
            this.pushedVersion = Objects.requireNonNull(pushedVersion);
            return this;
        }
        @CustomType.Setter
        public Builder scheduledUpdateDate(String scheduledUpdateDate) {
            this.scheduledUpdateDate = Objects.requireNonNull(scheduledUpdateDate);
            return this;
        }
        @CustomType.Setter
        public Builder serviceUrls(List<String> serviceUrls) {
            this.serviceUrls = Objects.requireNonNull(serviceUrls);
            return this;
        }
        public Builder serviceUrls(String... serviceUrls) {
            return serviceUrls(List.of(serviceUrls));
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        @CustomType.Setter
        public Builder taskQueueId(String taskQueueId) {
            this.taskQueueId = Objects.requireNonNull(taskQueueId);
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder updateDelayOffset(String updateDelayOffset) {
            this.updateDelayOffset = Objects.requireNonNull(updateDelayOffset);
            return this;
        }
        @CustomType.Setter
        public Builder version(String version) {
            this.version = Objects.requireNonNull(version);
            return this;
        }
        @CustomType.Setter
        public Builder versionStatus(String versionStatus) {
            this.versionStatus = Objects.requireNonNull(versionStatus);
            return this;
        }
        public SelfHostedIntegrationRuntimeStatusResponse build() {
            final var o = new SelfHostedIntegrationRuntimeStatusResponse();
            o.autoUpdate = autoUpdate;
            o.autoUpdateETA = autoUpdateETA;
            o.capabilities = capabilities;
            o.createTime = createTime;
            o.dataFactoryName = dataFactoryName;
            o.internalChannelEncryption = internalChannelEncryption;
            o.latestVersion = latestVersion;
            o.links = links;
            o.localTimeZoneOffset = localTimeZoneOffset;
            o.nodeCommunicationChannelEncryptionMode = nodeCommunicationChannelEncryptionMode;
            o.nodes = nodes;
            o.pushedVersion = pushedVersion;
            o.scheduledUpdateDate = scheduledUpdateDate;
            o.serviceUrls = serviceUrls;
            o.state = state;
            o.taskQueueId = taskQueueId;
            o.type = type;
            o.updateDelayOffset = updateDelayOffset;
            o.version = version;
            o.versionStatus = versionStatus;
            return o;
        }
    }
}
