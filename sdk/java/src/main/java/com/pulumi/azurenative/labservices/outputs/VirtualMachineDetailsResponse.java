// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.labservices.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class VirtualMachineDetailsResponse {
    /**
     * @return Last known compute power state captured in DTL
     * 
     */
    private String lastKnownPowerState;
    /**
     * @return PrivateIp address of the compute VM
     * 
     */
    private String privateIpAddress;
    /**
     * @return Provisioning state of the Dtl VM
     * 
     */
    private String provisioningState;
    /**
     * @return Connection information for Windows
     * 
     */
    private String rdpAuthority;
    /**
     * @return Connection information for Linux
     * 
     */
    private String sshAuthority;
    /**
     * @return Compute VM login user name
     * 
     */
    private String userName;

    private VirtualMachineDetailsResponse() {}
    /**
     * @return Last known compute power state captured in DTL
     * 
     */
    public String lastKnownPowerState() {
        return this.lastKnownPowerState;
    }
    /**
     * @return PrivateIp address of the compute VM
     * 
     */
    public String privateIpAddress() {
        return this.privateIpAddress;
    }
    /**
     * @return Provisioning state of the Dtl VM
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * @return Connection information for Windows
     * 
     */
    public String rdpAuthority() {
        return this.rdpAuthority;
    }
    /**
     * @return Connection information for Linux
     * 
     */
    public String sshAuthority() {
        return this.sshAuthority;
    }
    /**
     * @return Compute VM login user name
     * 
     */
    public String userName() {
        return this.userName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VirtualMachineDetailsResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String lastKnownPowerState;
        private String privateIpAddress;
        private String provisioningState;
        private String rdpAuthority;
        private String sshAuthority;
        private String userName;
        public Builder() {}
        public Builder(VirtualMachineDetailsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.lastKnownPowerState = defaults.lastKnownPowerState;
    	      this.privateIpAddress = defaults.privateIpAddress;
    	      this.provisioningState = defaults.provisioningState;
    	      this.rdpAuthority = defaults.rdpAuthority;
    	      this.sshAuthority = defaults.sshAuthority;
    	      this.userName = defaults.userName;
        }

        @CustomType.Setter
        public Builder lastKnownPowerState(String lastKnownPowerState) {
            this.lastKnownPowerState = Objects.requireNonNull(lastKnownPowerState);
            return this;
        }
        @CustomType.Setter
        public Builder privateIpAddress(String privateIpAddress) {
            this.privateIpAddress = Objects.requireNonNull(privateIpAddress);
            return this;
        }
        @CustomType.Setter
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        @CustomType.Setter
        public Builder rdpAuthority(String rdpAuthority) {
            this.rdpAuthority = Objects.requireNonNull(rdpAuthority);
            return this;
        }
        @CustomType.Setter
        public Builder sshAuthority(String sshAuthority) {
            this.sshAuthority = Objects.requireNonNull(sshAuthority);
            return this;
        }
        @CustomType.Setter
        public Builder userName(String userName) {
            this.userName = Objects.requireNonNull(userName);
            return this;
        }
        public VirtualMachineDetailsResponse build() {
            final var o = new VirtualMachineDetailsResponse();
            o.lastKnownPowerState = lastKnownPowerState;
            o.privateIpAddress = privateIpAddress;
            o.provisioningState = provisioningState;
            o.rdpAuthority = rdpAuthority;
            o.sshAuthority = sshAuthority;
            o.userName = userName;
            return o;
        }
    }
}
