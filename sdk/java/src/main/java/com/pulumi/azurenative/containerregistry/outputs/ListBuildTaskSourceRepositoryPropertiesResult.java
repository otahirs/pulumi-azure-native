// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.containerregistry.outputs;

import com.pulumi.azurenative.containerregistry.outputs.SourceControlAuthInfoResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ListBuildTaskSourceRepositoryPropertiesResult {
    /**
     * @return The value of this property indicates whether the source control commit trigger is enabled or not.
     * 
     */
    private @Nullable Boolean isCommitTriggerEnabled;
    /**
     * @return The full URL to the source code repository
     * 
     */
    private String repositoryUrl;
    /**
     * @return The authorization properties for accessing the source code repository.
     * 
     */
    private @Nullable SourceControlAuthInfoResponse sourceControlAuthProperties;
    /**
     * @return The type of source control service.
     * 
     */
    private String sourceControlType;

    private ListBuildTaskSourceRepositoryPropertiesResult() {}
    /**
     * @return The value of this property indicates whether the source control commit trigger is enabled or not.
     * 
     */
    public Optional<Boolean> isCommitTriggerEnabled() {
        return Optional.ofNullable(this.isCommitTriggerEnabled);
    }
    /**
     * @return The full URL to the source code repository
     * 
     */
    public String repositoryUrl() {
        return this.repositoryUrl;
    }
    /**
     * @return The authorization properties for accessing the source code repository.
     * 
     */
    public Optional<SourceControlAuthInfoResponse> sourceControlAuthProperties() {
        return Optional.ofNullable(this.sourceControlAuthProperties);
    }
    /**
     * @return The type of source control service.
     * 
     */
    public String sourceControlType() {
        return this.sourceControlType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ListBuildTaskSourceRepositoryPropertiesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean isCommitTriggerEnabled;
        private String repositoryUrl;
        private @Nullable SourceControlAuthInfoResponse sourceControlAuthProperties;
        private String sourceControlType;
        public Builder() {}
        public Builder(ListBuildTaskSourceRepositoryPropertiesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.isCommitTriggerEnabled = defaults.isCommitTriggerEnabled;
    	      this.repositoryUrl = defaults.repositoryUrl;
    	      this.sourceControlAuthProperties = defaults.sourceControlAuthProperties;
    	      this.sourceControlType = defaults.sourceControlType;
        }

        @CustomType.Setter
        public Builder isCommitTriggerEnabled(@Nullable Boolean isCommitTriggerEnabled) {
            this.isCommitTriggerEnabled = isCommitTriggerEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder repositoryUrl(String repositoryUrl) {
            this.repositoryUrl = Objects.requireNonNull(repositoryUrl);
            return this;
        }
        @CustomType.Setter
        public Builder sourceControlAuthProperties(@Nullable SourceControlAuthInfoResponse sourceControlAuthProperties) {
            this.sourceControlAuthProperties = sourceControlAuthProperties;
            return this;
        }
        @CustomType.Setter
        public Builder sourceControlType(String sourceControlType) {
            this.sourceControlType = Objects.requireNonNull(sourceControlType);
            return this;
        }
        public ListBuildTaskSourceRepositoryPropertiesResult build() {
            final var o = new ListBuildTaskSourceRepositoryPropertiesResult();
            o.isCommitTriggerEnabled = isCommitTriggerEnabled;
            o.repositoryUrl = repositoryUrl;
            o.sourceControlAuthProperties = sourceControlAuthProperties;
            o.sourceControlType = sourceControlType;
            return o;
        }
    }
}
