// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.deploymentmanager.outputs;

import com.pulumi.azurenative.deploymentmanager.outputs.ServiceUnitResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ServiceResponse {
    /**
     * @return Name of the service.
     * 
     */
    private @Nullable String name;
    /**
     * @return The detailed information about the units that make up the service.
     * 
     */
    private @Nullable List<ServiceUnitResponse> serviceUnits;
    /**
     * @return The Azure location to which the resources in the service belong to or should be deployed to.
     * 
     */
    private String targetLocation;
    /**
     * @return The subscription to which the resources in the service belong to or should be deployed to.
     * 
     */
    private String targetSubscriptionId;

    private ServiceResponse() {}
    /**
     * @return Name of the service.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return The detailed information about the units that make up the service.
     * 
     */
    public List<ServiceUnitResponse> serviceUnits() {
        return this.serviceUnits == null ? List.of() : this.serviceUnits;
    }
    /**
     * @return The Azure location to which the resources in the service belong to or should be deployed to.
     * 
     */
    public String targetLocation() {
        return this.targetLocation;
    }
    /**
     * @return The subscription to which the resources in the service belong to or should be deployed to.
     * 
     */
    public String targetSubscriptionId() {
        return this.targetSubscriptionId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServiceResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String name;
        private @Nullable List<ServiceUnitResponse> serviceUnits;
        private String targetLocation;
        private String targetSubscriptionId;
        public Builder() {}
        public Builder(ServiceResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.name = defaults.name;
    	      this.serviceUnits = defaults.serviceUnits;
    	      this.targetLocation = defaults.targetLocation;
    	      this.targetSubscriptionId = defaults.targetSubscriptionId;
        }

        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder serviceUnits(@Nullable List<ServiceUnitResponse> serviceUnits) {
            this.serviceUnits = serviceUnits;
            return this;
        }
        public Builder serviceUnits(ServiceUnitResponse... serviceUnits) {
            return serviceUnits(List.of(serviceUnits));
        }
        @CustomType.Setter
        public Builder targetLocation(String targetLocation) {
            this.targetLocation = Objects.requireNonNull(targetLocation);
            return this;
        }
        @CustomType.Setter
        public Builder targetSubscriptionId(String targetSubscriptionId) {
            this.targetSubscriptionId = Objects.requireNonNull(targetSubscriptionId);
            return this;
        }
        public ServiceResponse build() {
            final var o = new ServiceResponse();
            o.name = name;
            o.serviceUnits = serviceUnits;
            o.targetLocation = targetLocation;
            o.targetSubscriptionId = targetSubscriptionId;
            return o;
        }
    }
}
