// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.servicefabric.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ServiceLoadMetricDescriptionResponse {
    /**
     * @return Used only for Stateless services. The default amount of load, as a number, that this service creates for this metric.
     * 
     */
    private @Nullable Integer defaultLoad;
    /**
     * @return The name of the metric. If the service chooses to report load during runtime, the load metric name should match the name that is specified in Name exactly. Note that metric names are case sensitive.
     * 
     */
    private String name;
    /**
     * @return Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Primary replica.
     * 
     */
    private @Nullable Integer primaryDefaultLoad;
    /**
     * @return Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Secondary replica.
     * 
     */
    private @Nullable Integer secondaryDefaultLoad;
    /**
     * @return The service load metric relative weight, compared to other metrics configured for this service, as a number.
     * 
     */
    private @Nullable String weight;

    private ServiceLoadMetricDescriptionResponse() {}
    /**
     * @return Used only for Stateless services. The default amount of load, as a number, that this service creates for this metric.
     * 
     */
    public Optional<Integer> defaultLoad() {
        return Optional.ofNullable(this.defaultLoad);
    }
    /**
     * @return The name of the metric. If the service chooses to report load during runtime, the load metric name should match the name that is specified in Name exactly. Note that metric names are case sensitive.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Primary replica.
     * 
     */
    public Optional<Integer> primaryDefaultLoad() {
        return Optional.ofNullable(this.primaryDefaultLoad);
    }
    /**
     * @return Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Secondary replica.
     * 
     */
    public Optional<Integer> secondaryDefaultLoad() {
        return Optional.ofNullable(this.secondaryDefaultLoad);
    }
    /**
     * @return The service load metric relative weight, compared to other metrics configured for this service, as a number.
     * 
     */
    public Optional<String> weight() {
        return Optional.ofNullable(this.weight);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServiceLoadMetricDescriptionResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer defaultLoad;
        private String name;
        private @Nullable Integer primaryDefaultLoad;
        private @Nullable Integer secondaryDefaultLoad;
        private @Nullable String weight;
        public Builder() {}
        public Builder(ServiceLoadMetricDescriptionResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.defaultLoad = defaults.defaultLoad;
    	      this.name = defaults.name;
    	      this.primaryDefaultLoad = defaults.primaryDefaultLoad;
    	      this.secondaryDefaultLoad = defaults.secondaryDefaultLoad;
    	      this.weight = defaults.weight;
        }

        @CustomType.Setter
        public Builder defaultLoad(@Nullable Integer defaultLoad) {
            this.defaultLoad = defaultLoad;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder primaryDefaultLoad(@Nullable Integer primaryDefaultLoad) {
            this.primaryDefaultLoad = primaryDefaultLoad;
            return this;
        }
        @CustomType.Setter
        public Builder secondaryDefaultLoad(@Nullable Integer secondaryDefaultLoad) {
            this.secondaryDefaultLoad = secondaryDefaultLoad;
            return this;
        }
        @CustomType.Setter
        public Builder weight(@Nullable String weight) {
            this.weight = weight;
            return this;
        }
        public ServiceLoadMetricDescriptionResponse build() {
            final var o = new ServiceLoadMetricDescriptionResponse();
            o.defaultLoad = defaultLoad;
            o.name = name;
            o.primaryDefaultLoad = primaryDefaultLoad;
            o.secondaryDefaultLoad = secondaryDefaultLoad;
            o.weight = weight;
            return o;
        }
    }
}
