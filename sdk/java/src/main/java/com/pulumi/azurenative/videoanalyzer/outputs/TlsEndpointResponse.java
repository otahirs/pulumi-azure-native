// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.videoanalyzer.outputs;

import com.pulumi.azurenative.videoanalyzer.outputs.PemCertificateListResponse;
import com.pulumi.azurenative.videoanalyzer.outputs.SecureIotDeviceRemoteTunnelResponse;
import com.pulumi.azurenative.videoanalyzer.outputs.TlsValidationOptionsResponse;
import com.pulumi.azurenative.videoanalyzer.outputs.UsernamePasswordCredentialsResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class TlsEndpointResponse {
    /**
     * @return Credentials to be presented to the endpoint.
     * 
     */
    private UsernamePasswordCredentialsResponse credentials;
    /**
     * @return List of trusted certificate authorities when authenticating a TLS connection. A null list designates that Azure Video Analyzer&#39;s list of trusted authorities should be used.
     * 
     */
    private @Nullable PemCertificateListResponse trustedCertificates;
    /**
     * @return Describes the tunnel through which Video Analyzer can connect to the endpoint URL. This is an optional property, typically used when the endpoint is behind a firewall.
     * 
     */
    private @Nullable SecureIotDeviceRemoteTunnelResponse tunnel;
    /**
     * @return The discriminator for derived types.
     * Expected value is &#39;#Microsoft.VideoAnalyzer.TlsEndpoint&#39;.
     * 
     */
    private String type;
    /**
     * @return The endpoint URL for Video Analyzer to connect to.
     * 
     */
    private String url;
    /**
     * @return Validation options to use when authenticating a TLS connection. By default, strict validation is used.
     * 
     */
    private @Nullable TlsValidationOptionsResponse validationOptions;

    private TlsEndpointResponse() {}
    /**
     * @return Credentials to be presented to the endpoint.
     * 
     */
    public UsernamePasswordCredentialsResponse credentials() {
        return this.credentials;
    }
    /**
     * @return List of trusted certificate authorities when authenticating a TLS connection. A null list designates that Azure Video Analyzer&#39;s list of trusted authorities should be used.
     * 
     */
    public Optional<PemCertificateListResponse> trustedCertificates() {
        return Optional.ofNullable(this.trustedCertificates);
    }
    /**
     * @return Describes the tunnel through which Video Analyzer can connect to the endpoint URL. This is an optional property, typically used when the endpoint is behind a firewall.
     * 
     */
    public Optional<SecureIotDeviceRemoteTunnelResponse> tunnel() {
        return Optional.ofNullable(this.tunnel);
    }
    /**
     * @return The discriminator for derived types.
     * Expected value is &#39;#Microsoft.VideoAnalyzer.TlsEndpoint&#39;.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return The endpoint URL for Video Analyzer to connect to.
     * 
     */
    public String url() {
        return this.url;
    }
    /**
     * @return Validation options to use when authenticating a TLS connection. By default, strict validation is used.
     * 
     */
    public Optional<TlsValidationOptionsResponse> validationOptions() {
        return Optional.ofNullable(this.validationOptions);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TlsEndpointResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private UsernamePasswordCredentialsResponse credentials;
        private @Nullable PemCertificateListResponse trustedCertificates;
        private @Nullable SecureIotDeviceRemoteTunnelResponse tunnel;
        private String type;
        private String url;
        private @Nullable TlsValidationOptionsResponse validationOptions;
        public Builder() {}
        public Builder(TlsEndpointResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.credentials = defaults.credentials;
    	      this.trustedCertificates = defaults.trustedCertificates;
    	      this.tunnel = defaults.tunnel;
    	      this.type = defaults.type;
    	      this.url = defaults.url;
    	      this.validationOptions = defaults.validationOptions;
        }

        @CustomType.Setter
        public Builder credentials(UsernamePasswordCredentialsResponse credentials) {
            this.credentials = Objects.requireNonNull(credentials);
            return this;
        }
        @CustomType.Setter
        public Builder trustedCertificates(@Nullable PemCertificateListResponse trustedCertificates) {
            this.trustedCertificates = trustedCertificates;
            return this;
        }
        @CustomType.Setter
        public Builder tunnel(@Nullable SecureIotDeviceRemoteTunnelResponse tunnel) {
            this.tunnel = tunnel;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder url(String url) {
            this.url = Objects.requireNonNull(url);
            return this;
        }
        @CustomType.Setter
        public Builder validationOptions(@Nullable TlsValidationOptionsResponse validationOptions) {
            this.validationOptions = validationOptions;
            return this;
        }
        public TlsEndpointResponse build() {
            final var o = new TlsEndpointResponse();
            o.credentials = credentials;
            o.trustedCertificates = trustedCertificates;
            o.tunnel = tunnel;
            o.type = type;
            o.url = url;
            o.validationOptions = validationOptions;
            return o;
        }
    }
}
