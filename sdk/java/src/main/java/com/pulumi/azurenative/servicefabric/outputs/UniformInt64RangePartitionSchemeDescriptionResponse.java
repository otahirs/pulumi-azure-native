// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.servicefabric.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class UniformInt64RangePartitionSchemeDescriptionResponse {
    /**
     * @return The number of partitions.
     * 
     */
    private Integer count;
    /**
     * @return String indicating the upper bound of the partition key range that
     * should be split between the partition ‘count’
     * 
     */
    private String highKey;
    /**
     * @return String indicating the lower bound of the partition key range that
     * should be split between the partition ‘count’
     * 
     */
    private String lowKey;
    /**
     * @return Enumerates the ways that a service can be partitioned.
     * Expected value is &#39;UniformInt64Range&#39;.
     * 
     */
    private String partitionScheme;

    private UniformInt64RangePartitionSchemeDescriptionResponse() {}
    /**
     * @return The number of partitions.
     * 
     */
    public Integer count() {
        return this.count;
    }
    /**
     * @return String indicating the upper bound of the partition key range that
     * should be split between the partition ‘count’
     * 
     */
    public String highKey() {
        return this.highKey;
    }
    /**
     * @return String indicating the lower bound of the partition key range that
     * should be split between the partition ‘count’
     * 
     */
    public String lowKey() {
        return this.lowKey;
    }
    /**
     * @return Enumerates the ways that a service can be partitioned.
     * Expected value is &#39;UniformInt64Range&#39;.
     * 
     */
    public String partitionScheme() {
        return this.partitionScheme;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(UniformInt64RangePartitionSchemeDescriptionResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer count;
        private String highKey;
        private String lowKey;
        private String partitionScheme;
        public Builder() {}
        public Builder(UniformInt64RangePartitionSchemeDescriptionResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.count = defaults.count;
    	      this.highKey = defaults.highKey;
    	      this.lowKey = defaults.lowKey;
    	      this.partitionScheme = defaults.partitionScheme;
        }

        @CustomType.Setter
        public Builder count(Integer count) {
            this.count = Objects.requireNonNull(count);
            return this;
        }
        @CustomType.Setter
        public Builder highKey(String highKey) {
            this.highKey = Objects.requireNonNull(highKey);
            return this;
        }
        @CustomType.Setter
        public Builder lowKey(String lowKey) {
            this.lowKey = Objects.requireNonNull(lowKey);
            return this;
        }
        @CustomType.Setter
        public Builder partitionScheme(String partitionScheme) {
            this.partitionScheme = Objects.requireNonNull(partitionScheme);
            return this;
        }
        public UniformInt64RangePartitionSchemeDescriptionResponse build() {
            final var o = new UniformInt64RangePartitionSchemeDescriptionResponse();
            o.count = count;
            o.highKey = highKey;
            o.lowKey = lowKey;
            o.partitionScheme = partitionScheme;
            return o;
        }
    }
}
