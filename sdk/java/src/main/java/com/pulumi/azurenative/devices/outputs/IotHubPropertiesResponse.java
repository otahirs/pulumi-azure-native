// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.devices.outputs;

import com.pulumi.azurenative.devices.outputs.CloudToDevicePropertiesResponse;
import com.pulumi.azurenative.devices.outputs.EventHubPropertiesResponse;
import com.pulumi.azurenative.devices.outputs.IotHubLocationDescriptionResponse;
import com.pulumi.azurenative.devices.outputs.IpFilterRuleResponse;
import com.pulumi.azurenative.devices.outputs.MessagingEndpointPropertiesResponse;
import com.pulumi.azurenative.devices.outputs.NetworkRuleSetPropertiesResponse;
import com.pulumi.azurenative.devices.outputs.PrivateEndpointConnectionResponse;
import com.pulumi.azurenative.devices.outputs.RoutingPropertiesResponse;
import com.pulumi.azurenative.devices.outputs.SharedAccessSignatureAuthorizationRuleResponse;
import com.pulumi.azurenative.devices.outputs.StorageEndpointPropertiesResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class IotHubPropertiesResponse {
    /**
     * @return The shared access policies you can use to secure a connection to the IoT hub.
     * 
     */
    private @Nullable List<SharedAccessSignatureAuthorizationRuleResponse> authorizationPolicies;
    /**
     * @return The IoT hub cloud-to-device messaging properties.
     * 
     */
    private @Nullable CloudToDevicePropertiesResponse cloudToDevice;
    /**
     * @return IoT hub comments.
     * 
     */
    private @Nullable String comments;
    /**
     * @return If True, file upload notifications are enabled.
     * 
     */
    private @Nullable Boolean enableFileUploadNotifications;
    /**
     * @return The Event Hub-compatible endpoint properties. The only possible keys to this dictionary is events. This key has to be present in the dictionary while making create or update calls for the IoT hub.
     * 
     */
    private @Nullable Map<String,EventHubPropertiesResponse> eventHubEndpoints;
    /**
     * @return The capabilities and features enabled for the IoT hub.
     * 
     */
    private @Nullable String features;
    /**
     * @return The name of the host.
     * 
     */
    private String hostName;
    /**
     * @return The IP filter rules.
     * 
     */
    private @Nullable List<IpFilterRuleResponse> ipFilterRules;
    /**
     * @return Primary and secondary location for iot hub
     * 
     */
    private List<IotHubLocationDescriptionResponse> locations;
    /**
     * @return The messaging endpoint properties for the file upload notification queue.
     * 
     */
    private @Nullable Map<String,MessagingEndpointPropertiesResponse> messagingEndpoints;
    /**
     * @return Specifies the minimum TLS version to support for this hub. Can be set to &#34;1.2&#34; to have clients that use a TLS version below 1.2 to be rejected.
     * 
     */
    private @Nullable String minTlsVersion;
    /**
     * @return Network Rule Set Properties of IotHub
     * 
     */
    private @Nullable NetworkRuleSetPropertiesResponse networkRuleSets;
    /**
     * @return Private endpoint connections created on this IotHub
     * 
     */
    private @Nullable List<PrivateEndpointConnectionResponse> privateEndpointConnections;
    /**
     * @return The provisioning state.
     * 
     */
    private String provisioningState;
    /**
     * @return Whether requests from Public Network are allowed
     * 
     */
    private @Nullable String publicNetworkAccess;
    /**
     * @return The routing related properties of the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging
     * 
     */
    private @Nullable RoutingPropertiesResponse routing;
    /**
     * @return The hub state.
     * 
     */
    private String state;
    /**
     * @return The list of Azure Storage endpoints where you can upload files. Currently you can configure only one Azure Storage account and that MUST have its key as $default. Specifying more than one storage account causes an error to be thrown. Not specifying a value for this property when the enableFileUploadNotifications property is set to True, causes an error to be thrown.
     * 
     */
    private @Nullable Map<String,StorageEndpointPropertiesResponse> storageEndpoints;

    private IotHubPropertiesResponse() {}
    /**
     * @return The shared access policies you can use to secure a connection to the IoT hub.
     * 
     */
    public List<SharedAccessSignatureAuthorizationRuleResponse> authorizationPolicies() {
        return this.authorizationPolicies == null ? List.of() : this.authorizationPolicies;
    }
    /**
     * @return The IoT hub cloud-to-device messaging properties.
     * 
     */
    public Optional<CloudToDevicePropertiesResponse> cloudToDevice() {
        return Optional.ofNullable(this.cloudToDevice);
    }
    /**
     * @return IoT hub comments.
     * 
     */
    public Optional<String> comments() {
        return Optional.ofNullable(this.comments);
    }
    /**
     * @return If True, file upload notifications are enabled.
     * 
     */
    public Optional<Boolean> enableFileUploadNotifications() {
        return Optional.ofNullable(this.enableFileUploadNotifications);
    }
    /**
     * @return The Event Hub-compatible endpoint properties. The only possible keys to this dictionary is events. This key has to be present in the dictionary while making create or update calls for the IoT hub.
     * 
     */
    public Map<String,EventHubPropertiesResponse> eventHubEndpoints() {
        return this.eventHubEndpoints == null ? Map.of() : this.eventHubEndpoints;
    }
    /**
     * @return The capabilities and features enabled for the IoT hub.
     * 
     */
    public Optional<String> features() {
        return Optional.ofNullable(this.features);
    }
    /**
     * @return The name of the host.
     * 
     */
    public String hostName() {
        return this.hostName;
    }
    /**
     * @return The IP filter rules.
     * 
     */
    public List<IpFilterRuleResponse> ipFilterRules() {
        return this.ipFilterRules == null ? List.of() : this.ipFilterRules;
    }
    /**
     * @return Primary and secondary location for iot hub
     * 
     */
    public List<IotHubLocationDescriptionResponse> locations() {
        return this.locations;
    }
    /**
     * @return The messaging endpoint properties for the file upload notification queue.
     * 
     */
    public Map<String,MessagingEndpointPropertiesResponse> messagingEndpoints() {
        return this.messagingEndpoints == null ? Map.of() : this.messagingEndpoints;
    }
    /**
     * @return Specifies the minimum TLS version to support for this hub. Can be set to &#34;1.2&#34; to have clients that use a TLS version below 1.2 to be rejected.
     * 
     */
    public Optional<String> minTlsVersion() {
        return Optional.ofNullable(this.minTlsVersion);
    }
    /**
     * @return Network Rule Set Properties of IotHub
     * 
     */
    public Optional<NetworkRuleSetPropertiesResponse> networkRuleSets() {
        return Optional.ofNullable(this.networkRuleSets);
    }
    /**
     * @return Private endpoint connections created on this IotHub
     * 
     */
    public List<PrivateEndpointConnectionResponse> privateEndpointConnections() {
        return this.privateEndpointConnections == null ? List.of() : this.privateEndpointConnections;
    }
    /**
     * @return The provisioning state.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * @return Whether requests from Public Network are allowed
     * 
     */
    public Optional<String> publicNetworkAccess() {
        return Optional.ofNullable(this.publicNetworkAccess);
    }
    /**
     * @return The routing related properties of the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging
     * 
     */
    public Optional<RoutingPropertiesResponse> routing() {
        return Optional.ofNullable(this.routing);
    }
    /**
     * @return The hub state.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The list of Azure Storage endpoints where you can upload files. Currently you can configure only one Azure Storage account and that MUST have its key as $default. Specifying more than one storage account causes an error to be thrown. Not specifying a value for this property when the enableFileUploadNotifications property is set to True, causes an error to be thrown.
     * 
     */
    public Map<String,StorageEndpointPropertiesResponse> storageEndpoints() {
        return this.storageEndpoints == null ? Map.of() : this.storageEndpoints;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IotHubPropertiesResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<SharedAccessSignatureAuthorizationRuleResponse> authorizationPolicies;
        private @Nullable CloudToDevicePropertiesResponse cloudToDevice;
        private @Nullable String comments;
        private @Nullable Boolean enableFileUploadNotifications;
        private @Nullable Map<String,EventHubPropertiesResponse> eventHubEndpoints;
        private @Nullable String features;
        private String hostName;
        private @Nullable List<IpFilterRuleResponse> ipFilterRules;
        private List<IotHubLocationDescriptionResponse> locations;
        private @Nullable Map<String,MessagingEndpointPropertiesResponse> messagingEndpoints;
        private @Nullable String minTlsVersion;
        private @Nullable NetworkRuleSetPropertiesResponse networkRuleSets;
        private @Nullable List<PrivateEndpointConnectionResponse> privateEndpointConnections;
        private String provisioningState;
        private @Nullable String publicNetworkAccess;
        private @Nullable RoutingPropertiesResponse routing;
        private String state;
        private @Nullable Map<String,StorageEndpointPropertiesResponse> storageEndpoints;
        public Builder() {}
        public Builder(IotHubPropertiesResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authorizationPolicies = defaults.authorizationPolicies;
    	      this.cloudToDevice = defaults.cloudToDevice;
    	      this.comments = defaults.comments;
    	      this.enableFileUploadNotifications = defaults.enableFileUploadNotifications;
    	      this.eventHubEndpoints = defaults.eventHubEndpoints;
    	      this.features = defaults.features;
    	      this.hostName = defaults.hostName;
    	      this.ipFilterRules = defaults.ipFilterRules;
    	      this.locations = defaults.locations;
    	      this.messagingEndpoints = defaults.messagingEndpoints;
    	      this.minTlsVersion = defaults.minTlsVersion;
    	      this.networkRuleSets = defaults.networkRuleSets;
    	      this.privateEndpointConnections = defaults.privateEndpointConnections;
    	      this.provisioningState = defaults.provisioningState;
    	      this.publicNetworkAccess = defaults.publicNetworkAccess;
    	      this.routing = defaults.routing;
    	      this.state = defaults.state;
    	      this.storageEndpoints = defaults.storageEndpoints;
        }

        @CustomType.Setter
        public Builder authorizationPolicies(@Nullable List<SharedAccessSignatureAuthorizationRuleResponse> authorizationPolicies) {
            this.authorizationPolicies = authorizationPolicies;
            return this;
        }
        public Builder authorizationPolicies(SharedAccessSignatureAuthorizationRuleResponse... authorizationPolicies) {
            return authorizationPolicies(List.of(authorizationPolicies));
        }
        @CustomType.Setter
        public Builder cloudToDevice(@Nullable CloudToDevicePropertiesResponse cloudToDevice) {
            this.cloudToDevice = cloudToDevice;
            return this;
        }
        @CustomType.Setter
        public Builder comments(@Nullable String comments) {
            this.comments = comments;
            return this;
        }
        @CustomType.Setter
        public Builder enableFileUploadNotifications(@Nullable Boolean enableFileUploadNotifications) {
            this.enableFileUploadNotifications = enableFileUploadNotifications;
            return this;
        }
        @CustomType.Setter
        public Builder eventHubEndpoints(@Nullable Map<String,EventHubPropertiesResponse> eventHubEndpoints) {
            this.eventHubEndpoints = eventHubEndpoints;
            return this;
        }
        @CustomType.Setter
        public Builder features(@Nullable String features) {
            this.features = features;
            return this;
        }
        @CustomType.Setter
        public Builder hostName(String hostName) {
            this.hostName = Objects.requireNonNull(hostName);
            return this;
        }
        @CustomType.Setter
        public Builder ipFilterRules(@Nullable List<IpFilterRuleResponse> ipFilterRules) {
            this.ipFilterRules = ipFilterRules;
            return this;
        }
        public Builder ipFilterRules(IpFilterRuleResponse... ipFilterRules) {
            return ipFilterRules(List.of(ipFilterRules));
        }
        @CustomType.Setter
        public Builder locations(List<IotHubLocationDescriptionResponse> locations) {
            this.locations = Objects.requireNonNull(locations);
            return this;
        }
        public Builder locations(IotHubLocationDescriptionResponse... locations) {
            return locations(List.of(locations));
        }
        @CustomType.Setter
        public Builder messagingEndpoints(@Nullable Map<String,MessagingEndpointPropertiesResponse> messagingEndpoints) {
            this.messagingEndpoints = messagingEndpoints;
            return this;
        }
        @CustomType.Setter
        public Builder minTlsVersion(@Nullable String minTlsVersion) {
            this.minTlsVersion = minTlsVersion;
            return this;
        }
        @CustomType.Setter
        public Builder networkRuleSets(@Nullable NetworkRuleSetPropertiesResponse networkRuleSets) {
            this.networkRuleSets = networkRuleSets;
            return this;
        }
        @CustomType.Setter
        public Builder privateEndpointConnections(@Nullable List<PrivateEndpointConnectionResponse> privateEndpointConnections) {
            this.privateEndpointConnections = privateEndpointConnections;
            return this;
        }
        public Builder privateEndpointConnections(PrivateEndpointConnectionResponse... privateEndpointConnections) {
            return privateEndpointConnections(List.of(privateEndpointConnections));
        }
        @CustomType.Setter
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        @CustomType.Setter
        public Builder publicNetworkAccess(@Nullable String publicNetworkAccess) {
            this.publicNetworkAccess = publicNetworkAccess;
            return this;
        }
        @CustomType.Setter
        public Builder routing(@Nullable RoutingPropertiesResponse routing) {
            this.routing = routing;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        @CustomType.Setter
        public Builder storageEndpoints(@Nullable Map<String,StorageEndpointPropertiesResponse> storageEndpoints) {
            this.storageEndpoints = storageEndpoints;
            return this;
        }
        public IotHubPropertiesResponse build() {
            final var o = new IotHubPropertiesResponse();
            o.authorizationPolicies = authorizationPolicies;
            o.cloudToDevice = cloudToDevice;
            o.comments = comments;
            o.enableFileUploadNotifications = enableFileUploadNotifications;
            o.eventHubEndpoints = eventHubEndpoints;
            o.features = features;
            o.hostName = hostName;
            o.ipFilterRules = ipFilterRules;
            o.locations = locations;
            o.messagingEndpoints = messagingEndpoints;
            o.minTlsVersion = minTlsVersion;
            o.networkRuleSets = networkRuleSets;
            o.privateEndpointConnections = privateEndpointConnections;
            o.provisioningState = provisioningState;
            o.publicNetworkAccess = publicNetworkAccess;
            o.routing = routing;
            o.state = state;
            o.storageEndpoints = storageEndpoints;
            return o;
        }
    }
}
