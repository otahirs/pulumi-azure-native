// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.synapse.outputs;

import com.pulumi.azurenative.synapse.outputs.SystemDataResponse;
import com.pulumi.azurenative.synapse.outputs.TableLevelSharingPropertiesResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetKustoPoolAttachedDatabaseConfigurationResult {
    /**
     * @return The list of databases from the clusterResourceId which are currently attached to the kusto pool.
     * 
     */
    private List<String> attachedDatabaseNames;
    /**
     * @return The name of the database which you would like to attach, use * if you want to follow all current and future databases.
     * 
     */
    private String databaseName;
    /**
     * @return The default principals modification kind
     * 
     */
    private String defaultPrincipalsModificationKind;
    /**
     * @return Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    private String id;
    /**
     * @return The resource id of the kusto pool where the databases you would like to attach reside.
     * 
     */
    private String kustoPoolResourceId;
    /**
     * @return Resource location.
     * 
     */
    private @Nullable String location;
    /**
     * @return The name of the resource
     * 
     */
    private String name;
    /**
     * @return The provisioned state of the resource.
     * 
     */
    private String provisioningState;
    /**
     * @return Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     */
    private SystemDataResponse systemData;
    /**
     * @return Table level sharing specifications
     * 
     */
    private @Nullable TableLevelSharingPropertiesResponse tableLevelSharingProperties;
    /**
     * @return The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    private String type;

    private GetKustoPoolAttachedDatabaseConfigurationResult() {}
    /**
     * @return The list of databases from the clusterResourceId which are currently attached to the kusto pool.
     * 
     */
    public List<String> attachedDatabaseNames() {
        return this.attachedDatabaseNames;
    }
    /**
     * @return The name of the database which you would like to attach, use * if you want to follow all current and future databases.
     * 
     */
    public String databaseName() {
        return this.databaseName;
    }
    /**
     * @return The default principals modification kind
     * 
     */
    public String defaultPrincipalsModificationKind() {
        return this.defaultPrincipalsModificationKind;
    }
    /**
     * @return Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The resource id of the kusto pool where the databases you would like to attach reside.
     * 
     */
    public String kustoPoolResourceId() {
        return this.kustoPoolResourceId;
    }
    /**
     * @return Resource location.
     * 
     */
    public Optional<String> location() {
        return Optional.ofNullable(this.location);
    }
    /**
     * @return The name of the resource
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The provisioned state of the resource.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * @return Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     */
    public SystemDataResponse systemData() {
        return this.systemData;
    }
    /**
     * @return Table level sharing specifications
     * 
     */
    public Optional<TableLevelSharingPropertiesResponse> tableLevelSharingProperties() {
        return Optional.ofNullable(this.tableLevelSharingProperties);
    }
    /**
     * @return The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetKustoPoolAttachedDatabaseConfigurationResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> attachedDatabaseNames;
        private String databaseName;
        private String defaultPrincipalsModificationKind;
        private String id;
        private String kustoPoolResourceId;
        private @Nullable String location;
        private String name;
        private String provisioningState;
        private SystemDataResponse systemData;
        private @Nullable TableLevelSharingPropertiesResponse tableLevelSharingProperties;
        private String type;
        public Builder() {}
        public Builder(GetKustoPoolAttachedDatabaseConfigurationResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.attachedDatabaseNames = defaults.attachedDatabaseNames;
    	      this.databaseName = defaults.databaseName;
    	      this.defaultPrincipalsModificationKind = defaults.defaultPrincipalsModificationKind;
    	      this.id = defaults.id;
    	      this.kustoPoolResourceId = defaults.kustoPoolResourceId;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.provisioningState = defaults.provisioningState;
    	      this.systemData = defaults.systemData;
    	      this.tableLevelSharingProperties = defaults.tableLevelSharingProperties;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder attachedDatabaseNames(List<String> attachedDatabaseNames) {
            this.attachedDatabaseNames = Objects.requireNonNull(attachedDatabaseNames);
            return this;
        }
        public Builder attachedDatabaseNames(String... attachedDatabaseNames) {
            return attachedDatabaseNames(List.of(attachedDatabaseNames));
        }
        @CustomType.Setter
        public Builder databaseName(String databaseName) {
            this.databaseName = Objects.requireNonNull(databaseName);
            return this;
        }
        @CustomType.Setter
        public Builder defaultPrincipalsModificationKind(String defaultPrincipalsModificationKind) {
            this.defaultPrincipalsModificationKind = Objects.requireNonNull(defaultPrincipalsModificationKind);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder kustoPoolResourceId(String kustoPoolResourceId) {
            this.kustoPoolResourceId = Objects.requireNonNull(kustoPoolResourceId);
            return this;
        }
        @CustomType.Setter
        public Builder location(@Nullable String location) {
            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        @CustomType.Setter
        public Builder systemData(SystemDataResponse systemData) {
            this.systemData = Objects.requireNonNull(systemData);
            return this;
        }
        @CustomType.Setter
        public Builder tableLevelSharingProperties(@Nullable TableLevelSharingPropertiesResponse tableLevelSharingProperties) {
            this.tableLevelSharingProperties = tableLevelSharingProperties;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetKustoPoolAttachedDatabaseConfigurationResult build() {
            final var o = new GetKustoPoolAttachedDatabaseConfigurationResult();
            o.attachedDatabaseNames = attachedDatabaseNames;
            o.databaseName = databaseName;
            o.defaultPrincipalsModificationKind = defaultPrincipalsModificationKind;
            o.id = id;
            o.kustoPoolResourceId = kustoPoolResourceId;
            o.location = location;
            o.name = name;
            o.provisioningState = provisioningState;
            o.systemData = systemData;
            o.tableLevelSharingProperties = tableLevelSharingProperties;
            o.type = type;
            return o;
        }
    }
}
