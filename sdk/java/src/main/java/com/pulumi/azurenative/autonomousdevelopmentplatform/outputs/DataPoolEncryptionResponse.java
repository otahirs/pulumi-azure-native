// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.autonomousdevelopmentplatform.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DataPoolEncryptionResponse {
    /**
     * @return The name of Key Vault key
     * 
     */
    private String keyName;
    /**
     * @return The URI of a soft delete-enabled Key Vault that is in the same location as the Data Pool location
     * 
     */
    private String keyVaultUri;
    /**
     * @return The version of Key Vault key
     * 
     */
    private @Nullable String keyVersion;
    /**
     * @return The resource ID of a user-assigned Managed Identity used to access the encryption key in the Key Vault. Requires access to the key operations get, wrap, unwrap, and recover
     * 
     */
    private String userAssignedIdentity;

    private DataPoolEncryptionResponse() {}
    /**
     * @return The name of Key Vault key
     * 
     */
    public String keyName() {
        return this.keyName;
    }
    /**
     * @return The URI of a soft delete-enabled Key Vault that is in the same location as the Data Pool location
     * 
     */
    public String keyVaultUri() {
        return this.keyVaultUri;
    }
    /**
     * @return The version of Key Vault key
     * 
     */
    public Optional<String> keyVersion() {
        return Optional.ofNullable(this.keyVersion);
    }
    /**
     * @return The resource ID of a user-assigned Managed Identity used to access the encryption key in the Key Vault. Requires access to the key operations get, wrap, unwrap, and recover
     * 
     */
    public String userAssignedIdentity() {
        return this.userAssignedIdentity;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DataPoolEncryptionResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String keyName;
        private String keyVaultUri;
        private @Nullable String keyVersion;
        private String userAssignedIdentity;
        public Builder() {}
        public Builder(DataPoolEncryptionResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.keyName = defaults.keyName;
    	      this.keyVaultUri = defaults.keyVaultUri;
    	      this.keyVersion = defaults.keyVersion;
    	      this.userAssignedIdentity = defaults.userAssignedIdentity;
        }

        @CustomType.Setter
        public Builder keyName(String keyName) {
            this.keyName = Objects.requireNonNull(keyName);
            return this;
        }
        @CustomType.Setter
        public Builder keyVaultUri(String keyVaultUri) {
            this.keyVaultUri = Objects.requireNonNull(keyVaultUri);
            return this;
        }
        @CustomType.Setter
        public Builder keyVersion(@Nullable String keyVersion) {
            this.keyVersion = keyVersion;
            return this;
        }
        @CustomType.Setter
        public Builder userAssignedIdentity(String userAssignedIdentity) {
            this.userAssignedIdentity = Objects.requireNonNull(userAssignedIdentity);
            return this;
        }
        public DataPoolEncryptionResponse build() {
            final var o = new DataPoolEncryptionResponse();
            o.keyName = keyName;
            o.keyVaultUri = keyVaultUri;
            o.keyVersion = keyVersion;
            o.userAssignedIdentity = userAssignedIdentity;
            return o;
        }
    }
}
