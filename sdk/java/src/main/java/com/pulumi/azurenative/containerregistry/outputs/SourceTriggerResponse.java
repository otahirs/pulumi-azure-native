// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.containerregistry.outputs;

import com.pulumi.azurenative.containerregistry.outputs.SourcePropertiesResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SourceTriggerResponse {
    /**
     * @return The name of the trigger.
     * 
     */
    private String name;
    /**
     * @return The properties that describes the source(code) for the task.
     * 
     */
    private SourcePropertiesResponse sourceRepository;
    /**
     * @return The source event corresponding to the trigger.
     * 
     */
    private List<String> sourceTriggerEvents;
    /**
     * @return The current status of trigger.
     * 
     */
    private @Nullable String status;

    private SourceTriggerResponse() {}
    /**
     * @return The name of the trigger.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The properties that describes the source(code) for the task.
     * 
     */
    public SourcePropertiesResponse sourceRepository() {
        return this.sourceRepository;
    }
    /**
     * @return The source event corresponding to the trigger.
     * 
     */
    public List<String> sourceTriggerEvents() {
        return this.sourceTriggerEvents;
    }
    /**
     * @return The current status of trigger.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SourceTriggerResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String name;
        private SourcePropertiesResponse sourceRepository;
        private List<String> sourceTriggerEvents;
        private @Nullable String status;
        public Builder() {}
        public Builder(SourceTriggerResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.name = defaults.name;
    	      this.sourceRepository = defaults.sourceRepository;
    	      this.sourceTriggerEvents = defaults.sourceTriggerEvents;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder sourceRepository(SourcePropertiesResponse sourceRepository) {
            this.sourceRepository = Objects.requireNonNull(sourceRepository);
            return this;
        }
        @CustomType.Setter
        public Builder sourceTriggerEvents(List<String> sourceTriggerEvents) {
            this.sourceTriggerEvents = Objects.requireNonNull(sourceTriggerEvents);
            return this;
        }
        public Builder sourceTriggerEvents(String... sourceTriggerEvents) {
            return sourceTriggerEvents(List.of(sourceTriggerEvents));
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {
            this.status = status;
            return this;
        }
        public SourceTriggerResponse build() {
            final var o = new SourceTriggerResponse();
            o.name = name;
            o.sourceRepository = sourceRepository;
            o.sourceTriggerEvents = sourceTriggerEvents;
            o.status = status;
            return o;
        }
    }
}
