// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.outputs;

import com.pulumi.azurenative.network.outputs.ApplicationGatewayPathRuleResponse;
import com.pulumi.azurenative.network.outputs.SubResourceResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ApplicationGatewayUrlPathMapResponse {
    /**
     * @return Default backend address pool resource of URL path map.
     * 
     */
    private @Nullable SubResourceResponse defaultBackendAddressPool;
    /**
     * @return Default backend http settings resource of URL path map.
     * 
     */
    private @Nullable SubResourceResponse defaultBackendHttpSettings;
    /**
     * @return Default redirect configuration resource of URL path map.
     * 
     */
    private @Nullable SubResourceResponse defaultRedirectConfiguration;
    /**
     * @return Default Rewrite rule set resource of URL path map.
     * 
     */
    private @Nullable SubResourceResponse defaultRewriteRuleSet;
    /**
     * @return A unique read-only string that changes whenever the resource is updated.
     * 
     */
    private String etag;
    /**
     * @return Resource ID.
     * 
     */
    private @Nullable String id;
    /**
     * @return Name of the URL path map that is unique within an Application Gateway.
     * 
     */
    private @Nullable String name;
    /**
     * @return Path rule of URL path map resource.
     * 
     */
    private @Nullable List<ApplicationGatewayPathRuleResponse> pathRules;
    /**
     * @return The provisioning state of the URL path map resource.
     * 
     */
    private String provisioningState;
    /**
     * @return Type of the resource.
     * 
     */
    private String type;

    private ApplicationGatewayUrlPathMapResponse() {}
    /**
     * @return Default backend address pool resource of URL path map.
     * 
     */
    public Optional<SubResourceResponse> defaultBackendAddressPool() {
        return Optional.ofNullable(this.defaultBackendAddressPool);
    }
    /**
     * @return Default backend http settings resource of URL path map.
     * 
     */
    public Optional<SubResourceResponse> defaultBackendHttpSettings() {
        return Optional.ofNullable(this.defaultBackendHttpSettings);
    }
    /**
     * @return Default redirect configuration resource of URL path map.
     * 
     */
    public Optional<SubResourceResponse> defaultRedirectConfiguration() {
        return Optional.ofNullable(this.defaultRedirectConfiguration);
    }
    /**
     * @return Default Rewrite rule set resource of URL path map.
     * 
     */
    public Optional<SubResourceResponse> defaultRewriteRuleSet() {
        return Optional.ofNullable(this.defaultRewriteRuleSet);
    }
    /**
     * @return A unique read-only string that changes whenever the resource is updated.
     * 
     */
    public String etag() {
        return this.etag;
    }
    /**
     * @return Resource ID.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Name of the URL path map that is unique within an Application Gateway.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return Path rule of URL path map resource.
     * 
     */
    public List<ApplicationGatewayPathRuleResponse> pathRules() {
        return this.pathRules == null ? List.of() : this.pathRules;
    }
    /**
     * @return The provisioning state of the URL path map resource.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * @return Type of the resource.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ApplicationGatewayUrlPathMapResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable SubResourceResponse defaultBackendAddressPool;
        private @Nullable SubResourceResponse defaultBackendHttpSettings;
        private @Nullable SubResourceResponse defaultRedirectConfiguration;
        private @Nullable SubResourceResponse defaultRewriteRuleSet;
        private String etag;
        private @Nullable String id;
        private @Nullable String name;
        private @Nullable List<ApplicationGatewayPathRuleResponse> pathRules;
        private String provisioningState;
        private String type;
        public Builder() {}
        public Builder(ApplicationGatewayUrlPathMapResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.defaultBackendAddressPool = defaults.defaultBackendAddressPool;
    	      this.defaultBackendHttpSettings = defaults.defaultBackendHttpSettings;
    	      this.defaultRedirectConfiguration = defaults.defaultRedirectConfiguration;
    	      this.defaultRewriteRuleSet = defaults.defaultRewriteRuleSet;
    	      this.etag = defaults.etag;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.pathRules = defaults.pathRules;
    	      this.provisioningState = defaults.provisioningState;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder defaultBackendAddressPool(@Nullable SubResourceResponse defaultBackendAddressPool) {
            this.defaultBackendAddressPool = defaultBackendAddressPool;
            return this;
        }
        @CustomType.Setter
        public Builder defaultBackendHttpSettings(@Nullable SubResourceResponse defaultBackendHttpSettings) {
            this.defaultBackendHttpSettings = defaultBackendHttpSettings;
            return this;
        }
        @CustomType.Setter
        public Builder defaultRedirectConfiguration(@Nullable SubResourceResponse defaultRedirectConfiguration) {
            this.defaultRedirectConfiguration = defaultRedirectConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder defaultRewriteRuleSet(@Nullable SubResourceResponse defaultRewriteRuleSet) {
            this.defaultRewriteRuleSet = defaultRewriteRuleSet;
            return this;
        }
        @CustomType.Setter
        public Builder etag(String etag) {
            this.etag = Objects.requireNonNull(etag);
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder pathRules(@Nullable List<ApplicationGatewayPathRuleResponse> pathRules) {
            this.pathRules = pathRules;
            return this;
        }
        public Builder pathRules(ApplicationGatewayPathRuleResponse... pathRules) {
            return pathRules(List.of(pathRules));
        }
        @CustomType.Setter
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public ApplicationGatewayUrlPathMapResponse build() {
            final var o = new ApplicationGatewayUrlPathMapResponse();
            o.defaultBackendAddressPool = defaultBackendAddressPool;
            o.defaultBackendHttpSettings = defaultBackendHttpSettings;
            o.defaultRedirectConfiguration = defaultRedirectConfiguration;
            o.defaultRewriteRuleSet = defaultRewriteRuleSet;
            o.etag = etag;
            o.id = id;
            o.name = name;
            o.pathRules = pathRules;
            o.provisioningState = provisioningState;
            o.type = type;
            return o;
        }
    }
}
