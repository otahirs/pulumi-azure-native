// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.networkfunction;

import com.pulumi.azurenative.Utilities;
import com.pulumi.azurenative.networkfunction.AzureTrafficCollectorArgs;
import com.pulumi.azurenative.networkfunction.outputs.CollectorPolicyResponse;
import com.pulumi.azurenative.networkfunction.outputs.ResourceReferenceResponse;
import com.pulumi.azurenative.networkfunction.outputs.TrackedResourceResponseSystemData;
import com.pulumi.core.Alias;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Azure Traffic Collector resource.
 * API Version: 2022-05-01.
 * 
 * ## Example Usage
 * ### Create a traffic collector
 * 
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var azureTrafficCollector = new AzureTrafficCollector(&#34;azureTrafficCollector&#34;, AzureTrafficCollectorArgs.builder()        
 *             .azureTrafficCollectorName(&#34;atc&#34;)
 *             .collectorPolicies()
 *             .location(&#34;West US&#34;)
 *             .resourceGroupName(&#34;rg1&#34;)
 *             .tags(Map.of(&#34;key1&#34;, &#34;value1&#34;))
 *             .build());
 * 
 *     }
 * }
 * 
 * ```
 * 
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:networkfunction:AzureTrafficCollector atc /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.NetworkFunction/azureTrafficCollectors/atc 
 * ```
 * 
 */
@ResourceType(type="azure-native:networkfunction:AzureTrafficCollector")
public class AzureTrafficCollector extends com.pulumi.resources.CustomResource {
    /**
     * Collector Policies for Azure Traffic Collector.
     * 
     */
    @Export(name="collectorPolicies", type=List.class, parameters={CollectorPolicyResponse.class})
    private Output</* @Nullable */ List<CollectorPolicyResponse>> collectorPolicies;

    /**
     * @return Collector Policies for Azure Traffic Collector.
     * 
     */
    public Output<Optional<List<CollectorPolicyResponse>>> collectorPolicies() {
        return Codegen.optional(this.collectorPolicies);
    }
    /**
     * A unique read-only string that changes whenever the resource is updated.
     * 
     */
    @Export(name="etag", type=String.class, parameters={})
    private Output<String> etag;

    /**
     * @return A unique read-only string that changes whenever the resource is updated.
     * 
     */
    public Output<String> etag() {
        return this.etag;
    }
    /**
     * Resource location.
     * 
     */
    @Export(name="location", type=String.class, parameters={})
    private Output</* @Nullable */ String> location;

    /**
     * @return Resource location.
     * 
     */
    public Output<Optional<String>> location() {
        return Codegen.optional(this.location);
    }
    /**
     * Resource name.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Resource name.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The provisioning state of the application rule collection resource.
     * 
     */
    @Export(name="provisioningState", type=String.class, parameters={})
    private Output<String> provisioningState;

    /**
     * @return The provisioning state of the application rule collection resource.
     * 
     */
    public Output<String> provisioningState() {
        return this.provisioningState;
    }
    /**
     * Metadata pertaining to creation and last modification of the resource.
     * 
     */
    @Export(name="systemData", type=TrackedResourceResponseSystemData.class, parameters={})
    private Output<TrackedResourceResponseSystemData> systemData;

    /**
     * @return Metadata pertaining to creation and last modification of the resource.
     * 
     */
    public Output<TrackedResourceResponseSystemData> systemData() {
        return this.systemData;
    }
    /**
     * Resource tags.
     * 
     */
    @Export(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return Resource tags.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * Resource type.
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return Resource type.
     * 
     */
    public Output<String> type() {
        return this.type;
    }
    /**
     * The virtualHub to which the Azure Traffic Collector belongs.
     * 
     */
    @Export(name="virtualHub", type=ResourceReferenceResponse.class, parameters={})
    private Output</* @Nullable */ ResourceReferenceResponse> virtualHub;

    /**
     * @return The virtualHub to which the Azure Traffic Collector belongs.
     * 
     */
    public Output<Optional<ResourceReferenceResponse>> virtualHub() {
        return Codegen.optional(this.virtualHub);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public AzureTrafficCollector(String name) {
        this(name, AzureTrafficCollectorArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public AzureTrafficCollector(String name, AzureTrafficCollectorArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public AzureTrafficCollector(String name, AzureTrafficCollectorArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:networkfunction:AzureTrafficCollector", name, args == null ? AzureTrafficCollectorArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private AzureTrafficCollector(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:networkfunction:AzureTrafficCollector", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("azure-native:networkfunction/v20210901preview:AzureTrafficCollector").build()),
                Output.of(Alias.builder().type("azure-native:networkfunction/v20220501:AzureTrafficCollector").build())
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static AzureTrafficCollector get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new AzureTrafficCollector(name, id, options);
    }
}
