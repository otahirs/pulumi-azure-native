// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.eventgrid.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class StorageQueueEventSubscriptionDestinationResponse {
    /**
     * @return Type of the endpoint for the event subscription destination.
     * Expected value is &#39;StorageQueue&#39;.
     * 
     */
    private String endpointType;
    /**
     * @return Storage queue message time to live in seconds.
     * 
     */
    private @Nullable Double queueMessageTimeToLiveInSeconds;
    /**
     * @return The name of the Storage queue under a storage account that is the destination of an event subscription.
     * 
     */
    private @Nullable String queueName;
    /**
     * @return The Azure Resource ID of the storage account that contains the queue that is the destination of an event subscription.
     * 
     */
    private @Nullable String resourceId;

    private StorageQueueEventSubscriptionDestinationResponse() {}
    /**
     * @return Type of the endpoint for the event subscription destination.
     * Expected value is &#39;StorageQueue&#39;.
     * 
     */
    public String endpointType() {
        return this.endpointType;
    }
    /**
     * @return Storage queue message time to live in seconds.
     * 
     */
    public Optional<Double> queueMessageTimeToLiveInSeconds() {
        return Optional.ofNullable(this.queueMessageTimeToLiveInSeconds);
    }
    /**
     * @return The name of the Storage queue under a storage account that is the destination of an event subscription.
     * 
     */
    public Optional<String> queueName() {
        return Optional.ofNullable(this.queueName);
    }
    /**
     * @return The Azure Resource ID of the storage account that contains the queue that is the destination of an event subscription.
     * 
     */
    public Optional<String> resourceId() {
        return Optional.ofNullable(this.resourceId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(StorageQueueEventSubscriptionDestinationResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String endpointType;
        private @Nullable Double queueMessageTimeToLiveInSeconds;
        private @Nullable String queueName;
        private @Nullable String resourceId;
        public Builder() {}
        public Builder(StorageQueueEventSubscriptionDestinationResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.endpointType = defaults.endpointType;
    	      this.queueMessageTimeToLiveInSeconds = defaults.queueMessageTimeToLiveInSeconds;
    	      this.queueName = defaults.queueName;
    	      this.resourceId = defaults.resourceId;
        }

        @CustomType.Setter
        public Builder endpointType(String endpointType) {
            this.endpointType = Objects.requireNonNull(endpointType);
            return this;
        }
        @CustomType.Setter
        public Builder queueMessageTimeToLiveInSeconds(@Nullable Double queueMessageTimeToLiveInSeconds) {
            this.queueMessageTimeToLiveInSeconds = queueMessageTimeToLiveInSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder queueName(@Nullable String queueName) {
            this.queueName = queueName;
            return this;
        }
        @CustomType.Setter
        public Builder resourceId(@Nullable String resourceId) {
            this.resourceId = resourceId;
            return this;
        }
        public StorageQueueEventSubscriptionDestinationResponse build() {
            final var o = new StorageQueueEventSubscriptionDestinationResponse();
            o.endpointType = endpointType;
            o.queueMessageTimeToLiveInSeconds = queueMessageTimeToLiveInSeconds;
            o.queueName = queueName;
            o.resourceId = resourceId;
            return o;
        }
    }
}
