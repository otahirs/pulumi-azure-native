// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.workloads.inputs;

import com.pulumi.azurenative.workloads.enums.OSImageOffer;
import com.pulumi.azurenative.workloads.enums.OSImagePublisher;
import com.pulumi.azurenative.workloads.enums.OSImageSku;
import com.pulumi.azurenative.workloads.enums.OSImageVersion;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * OS image profile
 * 
 */
public final class OsImageProfileArgs extends com.pulumi.resources.ResourceArgs {

    public static final OsImageProfileArgs Empty = new OsImageProfileArgs();

    /**
     * OS image offer
     * 
     */
    @Import(name="offer")
    private @Nullable Output<Either<String,OSImageOffer>> offer;

    /**
     * @return OS image offer
     * 
     */
    public Optional<Output<Either<String,OSImageOffer>>> offer() {
        return Optional.ofNullable(this.offer);
    }

    /**
     * OS image publisher
     * 
     */
    @Import(name="publisher")
    private @Nullable Output<Either<String,OSImagePublisher>> publisher;

    /**
     * @return OS image publisher
     * 
     */
    public Optional<Output<Either<String,OSImagePublisher>>> publisher() {
        return Optional.ofNullable(this.publisher);
    }

    /**
     * OS image sku
     * 
     */
    @Import(name="sku")
    private @Nullable Output<Either<String,OSImageSku>> sku;

    /**
     * @return OS image sku
     * 
     */
    public Optional<Output<Either<String,OSImageSku>>> sku() {
        return Optional.ofNullable(this.sku);
    }

    /**
     * OS image version
     * 
     */
    @Import(name="version")
    private @Nullable Output<Either<String,OSImageVersion>> version;

    /**
     * @return OS image version
     * 
     */
    public Optional<Output<Either<String,OSImageVersion>>> version() {
        return Optional.ofNullable(this.version);
    }

    private OsImageProfileArgs() {}

    private OsImageProfileArgs(OsImageProfileArgs $) {
        this.offer = $.offer;
        this.publisher = $.publisher;
        this.sku = $.sku;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OsImageProfileArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OsImageProfileArgs $;

        public Builder() {
            $ = new OsImageProfileArgs();
        }

        public Builder(OsImageProfileArgs defaults) {
            $ = new OsImageProfileArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param offer OS image offer
         * 
         * @return builder
         * 
         */
        public Builder offer(@Nullable Output<Either<String,OSImageOffer>> offer) {
            $.offer = offer;
            return this;
        }

        /**
         * @param offer OS image offer
         * 
         * @return builder
         * 
         */
        public Builder offer(Either<String,OSImageOffer> offer) {
            return offer(Output.of(offer));
        }

        /**
         * @param offer OS image offer
         * 
         * @return builder
         * 
         */
        public Builder offer(String offer) {
            return offer(Either.ofLeft(offer));
        }

        /**
         * @param offer OS image offer
         * 
         * @return builder
         * 
         */
        public Builder offer(OSImageOffer offer) {
            return offer(Either.ofRight(offer));
        }

        /**
         * @param publisher OS image publisher
         * 
         * @return builder
         * 
         */
        public Builder publisher(@Nullable Output<Either<String,OSImagePublisher>> publisher) {
            $.publisher = publisher;
            return this;
        }

        /**
         * @param publisher OS image publisher
         * 
         * @return builder
         * 
         */
        public Builder publisher(Either<String,OSImagePublisher> publisher) {
            return publisher(Output.of(publisher));
        }

        /**
         * @param publisher OS image publisher
         * 
         * @return builder
         * 
         */
        public Builder publisher(String publisher) {
            return publisher(Either.ofLeft(publisher));
        }

        /**
         * @param publisher OS image publisher
         * 
         * @return builder
         * 
         */
        public Builder publisher(OSImagePublisher publisher) {
            return publisher(Either.ofRight(publisher));
        }

        /**
         * @param sku OS image sku
         * 
         * @return builder
         * 
         */
        public Builder sku(@Nullable Output<Either<String,OSImageSku>> sku) {
            $.sku = sku;
            return this;
        }

        /**
         * @param sku OS image sku
         * 
         * @return builder
         * 
         */
        public Builder sku(Either<String,OSImageSku> sku) {
            return sku(Output.of(sku));
        }

        /**
         * @param sku OS image sku
         * 
         * @return builder
         * 
         */
        public Builder sku(String sku) {
            return sku(Either.ofLeft(sku));
        }

        /**
         * @param sku OS image sku
         * 
         * @return builder
         * 
         */
        public Builder sku(OSImageSku sku) {
            return sku(Either.ofRight(sku));
        }

        /**
         * @param version OS image version
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<Either<String,OSImageVersion>> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version OS image version
         * 
         * @return builder
         * 
         */
        public Builder version(Either<String,OSImageVersion> version) {
            return version(Output.of(version));
        }

        /**
         * @param version OS image version
         * 
         * @return builder
         * 
         */
        public Builder version(String version) {
            return version(Either.ofLeft(version));
        }

        /**
         * @param version OS image version
         * 
         * @return builder
         * 
         */
        public Builder version(OSImageVersion version) {
            return version(Either.ofRight(version));
        }

        public OsImageProfileArgs build() {
            return $;
        }
    }

}
