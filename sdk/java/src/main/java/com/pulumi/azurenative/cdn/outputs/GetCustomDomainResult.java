// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.cdn.outputs;

import com.pulumi.azurenative.cdn.outputs.CdnManagedHttpsParametersResponse;
import com.pulumi.azurenative.cdn.outputs.SystemDataResponse;
import com.pulumi.azurenative.cdn.outputs.UserManagedHttpsParametersResponse;
import com.pulumi.core.Either;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetCustomDomainResult {
    /**
     * @return Certificate parameters for securing custom HTTPS
     * 
     */
    private @Nullable Either<CdnManagedHttpsParametersResponse,UserManagedHttpsParametersResponse> customHttpsParameters;
    /**
     * @return Provisioning status of Custom Https of the custom domain.
     * 
     */
    private String customHttpsProvisioningState;
    /**
     * @return Provisioning substate shows the progress of custom HTTPS enabling/disabling process step by step.
     * 
     */
    private String customHttpsProvisioningSubstate;
    /**
     * @return The host name of the custom domain. Must be a domain name.
     * 
     */
    private String hostName;
    /**
     * @return Resource ID.
     * 
     */
    private String id;
    /**
     * @return Resource name.
     * 
     */
    private String name;
    /**
     * @return Provisioning status of the custom domain.
     * 
     */
    private String provisioningState;
    /**
     * @return Resource status of the custom domain.
     * 
     */
    private String resourceState;
    /**
     * @return Read only system data
     * 
     */
    private SystemDataResponse systemData;
    /**
     * @return Resource type.
     * 
     */
    private String type;
    /**
     * @return Special validation or data may be required when delivering CDN to some regions due to local compliance reasons. E.g. ICP license number of a custom domain is required to deliver content in China.
     * 
     */
    private @Nullable String validationData;

    private GetCustomDomainResult() {}
    /**
     * @return Certificate parameters for securing custom HTTPS
     * 
     */
    public Optional<Either<CdnManagedHttpsParametersResponse,UserManagedHttpsParametersResponse>> customHttpsParameters() {
        return Optional.ofNullable(this.customHttpsParameters);
    }
    /**
     * @return Provisioning status of Custom Https of the custom domain.
     * 
     */
    public String customHttpsProvisioningState() {
        return this.customHttpsProvisioningState;
    }
    /**
     * @return Provisioning substate shows the progress of custom HTTPS enabling/disabling process step by step.
     * 
     */
    public String customHttpsProvisioningSubstate() {
        return this.customHttpsProvisioningSubstate;
    }
    /**
     * @return The host name of the custom domain. Must be a domain name.
     * 
     */
    public String hostName() {
        return this.hostName;
    }
    /**
     * @return Resource ID.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Resource name.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Provisioning status of the custom domain.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * @return Resource status of the custom domain.
     * 
     */
    public String resourceState() {
        return this.resourceState;
    }
    /**
     * @return Read only system data
     * 
     */
    public SystemDataResponse systemData() {
        return this.systemData;
    }
    /**
     * @return Resource type.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return Special validation or data may be required when delivering CDN to some regions due to local compliance reasons. E.g. ICP license number of a custom domain is required to deliver content in China.
     * 
     */
    public Optional<String> validationData() {
        return Optional.ofNullable(this.validationData);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCustomDomainResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Either<CdnManagedHttpsParametersResponse,UserManagedHttpsParametersResponse> customHttpsParameters;
        private String customHttpsProvisioningState;
        private String customHttpsProvisioningSubstate;
        private String hostName;
        private String id;
        private String name;
        private String provisioningState;
        private String resourceState;
        private SystemDataResponse systemData;
        private String type;
        private @Nullable String validationData;
        public Builder() {}
        public Builder(GetCustomDomainResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.customHttpsParameters = defaults.customHttpsParameters;
    	      this.customHttpsProvisioningState = defaults.customHttpsProvisioningState;
    	      this.customHttpsProvisioningSubstate = defaults.customHttpsProvisioningSubstate;
    	      this.hostName = defaults.hostName;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.provisioningState = defaults.provisioningState;
    	      this.resourceState = defaults.resourceState;
    	      this.systemData = defaults.systemData;
    	      this.type = defaults.type;
    	      this.validationData = defaults.validationData;
        }

        @CustomType.Setter
        public Builder customHttpsParameters(@Nullable Either<CdnManagedHttpsParametersResponse,UserManagedHttpsParametersResponse> customHttpsParameters) {
            this.customHttpsParameters = customHttpsParameters;
            return this;
        }
        @CustomType.Setter
        public Builder customHttpsProvisioningState(String customHttpsProvisioningState) {
            this.customHttpsProvisioningState = Objects.requireNonNull(customHttpsProvisioningState);
            return this;
        }
        @CustomType.Setter
        public Builder customHttpsProvisioningSubstate(String customHttpsProvisioningSubstate) {
            this.customHttpsProvisioningSubstate = Objects.requireNonNull(customHttpsProvisioningSubstate);
            return this;
        }
        @CustomType.Setter
        public Builder hostName(String hostName) {
            this.hostName = Objects.requireNonNull(hostName);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        @CustomType.Setter
        public Builder resourceState(String resourceState) {
            this.resourceState = Objects.requireNonNull(resourceState);
            return this;
        }
        @CustomType.Setter
        public Builder systemData(SystemDataResponse systemData) {
            this.systemData = Objects.requireNonNull(systemData);
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder validationData(@Nullable String validationData) {
            this.validationData = validationData;
            return this;
        }
        public GetCustomDomainResult build() {
            final var o = new GetCustomDomainResult();
            o.customHttpsParameters = customHttpsParameters;
            o.customHttpsProvisioningState = customHttpsProvisioningState;
            o.customHttpsProvisioningSubstate = customHttpsProvisioningSubstate;
            o.hostName = hostName;
            o.id = id;
            o.name = name;
            o.provisioningState = provisioningState;
            o.resourceState = resourceState;
            o.systemData = systemData;
            o.type = type;
            o.validationData = validationData;
            return o;
        }
    }
}
