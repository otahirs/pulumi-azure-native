// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.batch.outputs;

import com.pulumi.azurenative.batch.outputs.LinuxUserConfigurationResponse;
import com.pulumi.azurenative.batch.outputs.WindowsUserConfigurationResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class UserAccountResponse {
    /**
     * @return nonAdmin - The auto user is a standard user without elevated access. admin - The auto user is a user with elevated access and operates with full Administrator permissions. The default value is nonAdmin.
     * 
     */
    private @Nullable String elevationLevel;
    /**
     * @return This property is ignored if specified on a Windows pool. If not specified, the user is created with the default options.
     * 
     */
    private @Nullable LinuxUserConfigurationResponse linuxUserConfiguration;
    private String name;
    private String password;
    /**
     * @return This property can only be specified if the user is on a Windows pool. If not specified and on a Windows pool, the user is created with the default options.
     * 
     */
    private @Nullable WindowsUserConfigurationResponse windowsUserConfiguration;

    private UserAccountResponse() {}
    /**
     * @return nonAdmin - The auto user is a standard user without elevated access. admin - The auto user is a user with elevated access and operates with full Administrator permissions. The default value is nonAdmin.
     * 
     */
    public Optional<String> elevationLevel() {
        return Optional.ofNullable(this.elevationLevel);
    }
    /**
     * @return This property is ignored if specified on a Windows pool. If not specified, the user is created with the default options.
     * 
     */
    public Optional<LinuxUserConfigurationResponse> linuxUserConfiguration() {
        return Optional.ofNullable(this.linuxUserConfiguration);
    }
    public String name() {
        return this.name;
    }
    public String password() {
        return this.password;
    }
    /**
     * @return This property can only be specified if the user is on a Windows pool. If not specified and on a Windows pool, the user is created with the default options.
     * 
     */
    public Optional<WindowsUserConfigurationResponse> windowsUserConfiguration() {
        return Optional.ofNullable(this.windowsUserConfiguration);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(UserAccountResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String elevationLevel;
        private @Nullable LinuxUserConfigurationResponse linuxUserConfiguration;
        private String name;
        private String password;
        private @Nullable WindowsUserConfigurationResponse windowsUserConfiguration;
        public Builder() {}
        public Builder(UserAccountResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.elevationLevel = defaults.elevationLevel;
    	      this.linuxUserConfiguration = defaults.linuxUserConfiguration;
    	      this.name = defaults.name;
    	      this.password = defaults.password;
    	      this.windowsUserConfiguration = defaults.windowsUserConfiguration;
        }

        @CustomType.Setter
        public Builder elevationLevel(@Nullable String elevationLevel) {
            this.elevationLevel = elevationLevel;
            return this;
        }
        @CustomType.Setter
        public Builder linuxUserConfiguration(@Nullable LinuxUserConfigurationResponse linuxUserConfiguration) {
            this.linuxUserConfiguration = linuxUserConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder password(String password) {
            this.password = Objects.requireNonNull(password);
            return this;
        }
        @CustomType.Setter
        public Builder windowsUserConfiguration(@Nullable WindowsUserConfigurationResponse windowsUserConfiguration) {
            this.windowsUserConfiguration = windowsUserConfiguration;
            return this;
        }
        public UserAccountResponse build() {
            final var o = new UserAccountResponse();
            o.elevationLevel = elevationLevel;
            o.linuxUserConfiguration = linuxUserConfiguration;
            o.name = name;
            o.password = password;
            o.windowsUserConfiguration = windowsUserConfiguration;
            return o;
        }
    }
}
