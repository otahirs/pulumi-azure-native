// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.logic.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class EdifactEnvelopeOverrideResponse {
    /**
     * @return The application password.
     * 
     */
    private @Nullable String applicationPassword;
    /**
     * @return The association assigned code.
     * 
     */
    private @Nullable String associationAssignedCode;
    /**
     * @return The controlling agency code.
     * 
     */
    private @Nullable String controllingAgencyCode;
    /**
     * @return The functional group id.
     * 
     */
    private @Nullable String functionalGroupId;
    /**
     * @return The group header message release.
     * 
     */
    private @Nullable String groupHeaderMessageRelease;
    /**
     * @return The group header message version.
     * 
     */
    private @Nullable String groupHeaderMessageVersion;
    /**
     * @return The message association assigned code.
     * 
     */
    private @Nullable String messageAssociationAssignedCode;
    /**
     * @return The message id on which this envelope settings has to be applied.
     * 
     */
    private @Nullable String messageId;
    /**
     * @return The message release version on which this envelope settings has to be applied.
     * 
     */
    private @Nullable String messageRelease;
    /**
     * @return The message version on which this envelope settings has to be applied.
     * 
     */
    private @Nullable String messageVersion;
    /**
     * @return The receiver application id.
     * 
     */
    private @Nullable String receiverApplicationId;
    /**
     * @return The receiver application qualifier.
     * 
     */
    private @Nullable String receiverApplicationQualifier;
    /**
     * @return The sender application id.
     * 
     */
    private @Nullable String senderApplicationId;
    /**
     * @return The sender application qualifier.
     * 
     */
    private @Nullable String senderApplicationQualifier;
    /**
     * @return The target namespace on which this envelope settings has to be applied.
     * 
     */
    private @Nullable String targetNamespace;

    private EdifactEnvelopeOverrideResponse() {}
    /**
     * @return The application password.
     * 
     */
    public Optional<String> applicationPassword() {
        return Optional.ofNullable(this.applicationPassword);
    }
    /**
     * @return The association assigned code.
     * 
     */
    public Optional<String> associationAssignedCode() {
        return Optional.ofNullable(this.associationAssignedCode);
    }
    /**
     * @return The controlling agency code.
     * 
     */
    public Optional<String> controllingAgencyCode() {
        return Optional.ofNullable(this.controllingAgencyCode);
    }
    /**
     * @return The functional group id.
     * 
     */
    public Optional<String> functionalGroupId() {
        return Optional.ofNullable(this.functionalGroupId);
    }
    /**
     * @return The group header message release.
     * 
     */
    public Optional<String> groupHeaderMessageRelease() {
        return Optional.ofNullable(this.groupHeaderMessageRelease);
    }
    /**
     * @return The group header message version.
     * 
     */
    public Optional<String> groupHeaderMessageVersion() {
        return Optional.ofNullable(this.groupHeaderMessageVersion);
    }
    /**
     * @return The message association assigned code.
     * 
     */
    public Optional<String> messageAssociationAssignedCode() {
        return Optional.ofNullable(this.messageAssociationAssignedCode);
    }
    /**
     * @return The message id on which this envelope settings has to be applied.
     * 
     */
    public Optional<String> messageId() {
        return Optional.ofNullable(this.messageId);
    }
    /**
     * @return The message release version on which this envelope settings has to be applied.
     * 
     */
    public Optional<String> messageRelease() {
        return Optional.ofNullable(this.messageRelease);
    }
    /**
     * @return The message version on which this envelope settings has to be applied.
     * 
     */
    public Optional<String> messageVersion() {
        return Optional.ofNullable(this.messageVersion);
    }
    /**
     * @return The receiver application id.
     * 
     */
    public Optional<String> receiverApplicationId() {
        return Optional.ofNullable(this.receiverApplicationId);
    }
    /**
     * @return The receiver application qualifier.
     * 
     */
    public Optional<String> receiverApplicationQualifier() {
        return Optional.ofNullable(this.receiverApplicationQualifier);
    }
    /**
     * @return The sender application id.
     * 
     */
    public Optional<String> senderApplicationId() {
        return Optional.ofNullable(this.senderApplicationId);
    }
    /**
     * @return The sender application qualifier.
     * 
     */
    public Optional<String> senderApplicationQualifier() {
        return Optional.ofNullable(this.senderApplicationQualifier);
    }
    /**
     * @return The target namespace on which this envelope settings has to be applied.
     * 
     */
    public Optional<String> targetNamespace() {
        return Optional.ofNullable(this.targetNamespace);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EdifactEnvelopeOverrideResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String applicationPassword;
        private @Nullable String associationAssignedCode;
        private @Nullable String controllingAgencyCode;
        private @Nullable String functionalGroupId;
        private @Nullable String groupHeaderMessageRelease;
        private @Nullable String groupHeaderMessageVersion;
        private @Nullable String messageAssociationAssignedCode;
        private @Nullable String messageId;
        private @Nullable String messageRelease;
        private @Nullable String messageVersion;
        private @Nullable String receiverApplicationId;
        private @Nullable String receiverApplicationQualifier;
        private @Nullable String senderApplicationId;
        private @Nullable String senderApplicationQualifier;
        private @Nullable String targetNamespace;
        public Builder() {}
        public Builder(EdifactEnvelopeOverrideResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationPassword = defaults.applicationPassword;
    	      this.associationAssignedCode = defaults.associationAssignedCode;
    	      this.controllingAgencyCode = defaults.controllingAgencyCode;
    	      this.functionalGroupId = defaults.functionalGroupId;
    	      this.groupHeaderMessageRelease = defaults.groupHeaderMessageRelease;
    	      this.groupHeaderMessageVersion = defaults.groupHeaderMessageVersion;
    	      this.messageAssociationAssignedCode = defaults.messageAssociationAssignedCode;
    	      this.messageId = defaults.messageId;
    	      this.messageRelease = defaults.messageRelease;
    	      this.messageVersion = defaults.messageVersion;
    	      this.receiverApplicationId = defaults.receiverApplicationId;
    	      this.receiverApplicationQualifier = defaults.receiverApplicationQualifier;
    	      this.senderApplicationId = defaults.senderApplicationId;
    	      this.senderApplicationQualifier = defaults.senderApplicationQualifier;
    	      this.targetNamespace = defaults.targetNamespace;
        }

        @CustomType.Setter
        public Builder applicationPassword(@Nullable String applicationPassword) {
            this.applicationPassword = applicationPassword;
            return this;
        }
        @CustomType.Setter
        public Builder associationAssignedCode(@Nullable String associationAssignedCode) {
            this.associationAssignedCode = associationAssignedCode;
            return this;
        }
        @CustomType.Setter
        public Builder controllingAgencyCode(@Nullable String controllingAgencyCode) {
            this.controllingAgencyCode = controllingAgencyCode;
            return this;
        }
        @CustomType.Setter
        public Builder functionalGroupId(@Nullable String functionalGroupId) {
            this.functionalGroupId = functionalGroupId;
            return this;
        }
        @CustomType.Setter
        public Builder groupHeaderMessageRelease(@Nullable String groupHeaderMessageRelease) {
            this.groupHeaderMessageRelease = groupHeaderMessageRelease;
            return this;
        }
        @CustomType.Setter
        public Builder groupHeaderMessageVersion(@Nullable String groupHeaderMessageVersion) {
            this.groupHeaderMessageVersion = groupHeaderMessageVersion;
            return this;
        }
        @CustomType.Setter
        public Builder messageAssociationAssignedCode(@Nullable String messageAssociationAssignedCode) {
            this.messageAssociationAssignedCode = messageAssociationAssignedCode;
            return this;
        }
        @CustomType.Setter
        public Builder messageId(@Nullable String messageId) {
            this.messageId = messageId;
            return this;
        }
        @CustomType.Setter
        public Builder messageRelease(@Nullable String messageRelease) {
            this.messageRelease = messageRelease;
            return this;
        }
        @CustomType.Setter
        public Builder messageVersion(@Nullable String messageVersion) {
            this.messageVersion = messageVersion;
            return this;
        }
        @CustomType.Setter
        public Builder receiverApplicationId(@Nullable String receiverApplicationId) {
            this.receiverApplicationId = receiverApplicationId;
            return this;
        }
        @CustomType.Setter
        public Builder receiverApplicationQualifier(@Nullable String receiverApplicationQualifier) {
            this.receiverApplicationQualifier = receiverApplicationQualifier;
            return this;
        }
        @CustomType.Setter
        public Builder senderApplicationId(@Nullable String senderApplicationId) {
            this.senderApplicationId = senderApplicationId;
            return this;
        }
        @CustomType.Setter
        public Builder senderApplicationQualifier(@Nullable String senderApplicationQualifier) {
            this.senderApplicationQualifier = senderApplicationQualifier;
            return this;
        }
        @CustomType.Setter
        public Builder targetNamespace(@Nullable String targetNamespace) {
            this.targetNamespace = targetNamespace;
            return this;
        }
        public EdifactEnvelopeOverrideResponse build() {
            final var o = new EdifactEnvelopeOverrideResponse();
            o.applicationPassword = applicationPassword;
            o.associationAssignedCode = associationAssignedCode;
            o.controllingAgencyCode = controllingAgencyCode;
            o.functionalGroupId = functionalGroupId;
            o.groupHeaderMessageRelease = groupHeaderMessageRelease;
            o.groupHeaderMessageVersion = groupHeaderMessageVersion;
            o.messageAssociationAssignedCode = messageAssociationAssignedCode;
            o.messageId = messageId;
            o.messageRelease = messageRelease;
            o.messageVersion = messageVersion;
            o.receiverApplicationId = receiverApplicationId;
            o.receiverApplicationQualifier = receiverApplicationQualifier;
            o.senderApplicationId = senderApplicationId;
            o.senderApplicationQualifier = senderApplicationQualifier;
            o.targetNamespace = targetNamespace;
            return o;
        }
    }
}
