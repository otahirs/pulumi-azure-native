// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.elasticsan.outputs;

import com.pulumi.azurenative.elasticsan.outputs.IscsiTargetInfoResponse;
import com.pulumi.azurenative.elasticsan.outputs.SourceCreationDataResponse;
import com.pulumi.azurenative.elasticsan.outputs.SystemDataResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetVolumeResult {
    /**
     * @return State of the operation on the resource.
     * 
     */
    private @Nullable SourceCreationDataResponse creationData;
    /**
     * @return Azure resource identifier.
     * 
     */
    private String id;
    /**
     * @return Azure resource name.
     * 
     */
    private String name;
    /**
     * @return Volume size.
     * 
     */
    private @Nullable Double sizeGiB;
    /**
     * @return Storage target information
     * 
     */
    private IscsiTargetInfoResponse storageTarget;
    /**
     * @return Resource metadata required by ARM RPC
     * 
     */
    private SystemDataResponse systemData;
    /**
     * @return Azure resource tags.
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return Azure resource type.
     * 
     */
    private String type;
    /**
     * @return Unique Id of the volume in GUID format
     * 
     */
    private String volumeId;

    private GetVolumeResult() {}
    /**
     * @return State of the operation on the resource.
     * 
     */
    public Optional<SourceCreationDataResponse> creationData() {
        return Optional.ofNullable(this.creationData);
    }
    /**
     * @return Azure resource identifier.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Azure resource name.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Volume size.
     * 
     */
    public Optional<Double> sizeGiB() {
        return Optional.ofNullable(this.sizeGiB);
    }
    /**
     * @return Storage target information
     * 
     */
    public IscsiTargetInfoResponse storageTarget() {
        return this.storageTarget;
    }
    /**
     * @return Resource metadata required by ARM RPC
     * 
     */
    public SystemDataResponse systemData() {
        return this.systemData;
    }
    /**
     * @return Azure resource tags.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return Azure resource type.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return Unique Id of the volume in GUID format
     * 
     */
    public String volumeId() {
        return this.volumeId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVolumeResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable SourceCreationDataResponse creationData;
        private String id;
        private String name;
        private @Nullable Double sizeGiB;
        private IscsiTargetInfoResponse storageTarget;
        private SystemDataResponse systemData;
        private @Nullable Map<String,String> tags;
        private String type;
        private String volumeId;
        public Builder() {}
        public Builder(GetVolumeResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.creationData = defaults.creationData;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.sizeGiB = defaults.sizeGiB;
    	      this.storageTarget = defaults.storageTarget;
    	      this.systemData = defaults.systemData;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
    	      this.volumeId = defaults.volumeId;
        }

        @CustomType.Setter
        public Builder creationData(@Nullable SourceCreationDataResponse creationData) {
            this.creationData = creationData;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder sizeGiB(@Nullable Double sizeGiB) {
            this.sizeGiB = sizeGiB;
            return this;
        }
        @CustomType.Setter
        public Builder storageTarget(IscsiTargetInfoResponse storageTarget) {
            this.storageTarget = Objects.requireNonNull(storageTarget);
            return this;
        }
        @CustomType.Setter
        public Builder systemData(SystemDataResponse systemData) {
            this.systemData = Objects.requireNonNull(systemData);
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder volumeId(String volumeId) {
            this.volumeId = Objects.requireNonNull(volumeId);
            return this;
        }
        public GetVolumeResult build() {
            final var o = new GetVolumeResult();
            o.creationData = creationData;
            o.id = id;
            o.name = name;
            o.sizeGiB = sizeGiB;
            o.storageTarget = storageTarget;
            o.systemData = systemData;
            o.tags = tags;
            o.type = type;
            o.volumeId = volumeId;
            return o;
        }
    }
}
