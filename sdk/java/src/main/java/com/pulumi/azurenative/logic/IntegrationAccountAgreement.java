// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.logic;

import com.pulumi.azurenative.Utilities;
import com.pulumi.azurenative.logic.IntegrationAccountAgreementArgs;
import com.pulumi.azurenative.logic.outputs.AgreementContentResponse;
import com.pulumi.azurenative.logic.outputs.BusinessIdentityResponse;
import com.pulumi.core.Alias;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * The integration account agreement.
 * API Version: 2019-05-01.
 * 
 * ## Example Usage
 * ### Create or update an agreement
 * 
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var integrationAccountAgreement = new IntegrationAccountAgreement(&#34;integrationAccountAgreement&#34;, IntegrationAccountAgreementArgs.builder()        
 *             .agreementName(&#34;testAgreement&#34;)
 *             .agreementType(&#34;AS2&#34;)
 *             .content(Map.of(&#34;aS2&#34;, Map.ofEntries(
 *                 Map.entry(&#34;receiveAgreement&#34;, Map.ofEntries(
 *                     Map.entry(&#34;protocolSettings&#34;, Map.ofEntries(
 *                         Map.entry(&#34;acknowledgementConnectionSettings&#34;, Map.ofEntries(
 *                             Map.entry(&#34;ignoreCertificateNameMismatch&#34;, true),
 *                             Map.entry(&#34;keepHttpConnectionAlive&#34;, true),
 *                             Map.entry(&#34;supportHttpStatusCodeContinue&#34;, true),
 *                             Map.entry(&#34;unfoldHttpHeaders&#34;, true)
 *                         )),
 *                         Map.entry(&#34;envelopeSettings&#34;, Map.ofEntries(
 *                             Map.entry(&#34;autogenerateFileName&#34;, true),
 *                             Map.entry(&#34;fileNameTemplate&#34;, &#34;Test&#34;),
 *                             Map.entry(&#34;messageContentType&#34;, &#34;text/plain&#34;),
 *                             Map.entry(&#34;suspendMessageOnFileNameGenerationError&#34;, true),
 *                             Map.entry(&#34;transmitFileNameInMimeHeader&#34;, true)
 *                         )),
 *                         Map.entry(&#34;errorSettings&#34;, Map.ofEntries(
 *                             Map.entry(&#34;resendIfMDNNotReceived&#34;, true),
 *                             Map.entry(&#34;suspendDuplicateMessage&#34;, true)
 *                         )),
 *                         Map.entry(&#34;mdnSettings&#34;, Map.ofEntries(
 *                             Map.entry(&#34;dispositionNotificationTo&#34;, &#34;http://tempuri.org&#34;),
 *                             Map.entry(&#34;mdnText&#34;, &#34;Sample&#34;),
 *                             Map.entry(&#34;micHashingAlgorithm&#34;, &#34;SHA1&#34;),
 *                             Map.entry(&#34;needMDN&#34;, true),
 *                             Map.entry(&#34;receiptDeliveryUrl&#34;, &#34;http://tempuri.org&#34;),
 *                             Map.entry(&#34;sendInboundMDNToMessageBox&#34;, true),
 *                             Map.entry(&#34;sendMDNAsynchronously&#34;, true),
 *                             Map.entry(&#34;signMDN&#34;, true),
 *                             Map.entry(&#34;signOutboundMDNIfOptional&#34;, true)
 *                         )),
 *                         Map.entry(&#34;messageConnectionSettings&#34;, Map.ofEntries(
 *                             Map.entry(&#34;ignoreCertificateNameMismatch&#34;, true),
 *                             Map.entry(&#34;keepHttpConnectionAlive&#34;, true),
 *                             Map.entry(&#34;supportHttpStatusCodeContinue&#34;, true),
 *                             Map.entry(&#34;unfoldHttpHeaders&#34;, true)
 *                         )),
 *                         Map.entry(&#34;securitySettings&#34;, Map.ofEntries(
 *                             Map.entry(&#34;enableNRRForInboundDecodedMessages&#34;, true),
 *                             Map.entry(&#34;enableNRRForInboundEncodedMessages&#34;, true),
 *                             Map.entry(&#34;enableNRRForInboundMDN&#34;, true),
 *                             Map.entry(&#34;enableNRRForOutboundDecodedMessages&#34;, true),
 *                             Map.entry(&#34;enableNRRForOutboundEncodedMessages&#34;, true),
 *                             Map.entry(&#34;enableNRRForOutboundMDN&#34;, true),
 *                             Map.entry(&#34;overrideGroupSigningCertificate&#34;, false)
 *                         )),
 *                         Map.entry(&#34;validationSettings&#34;, Map.ofEntries(
 *                             Map.entry(&#34;checkCertificateRevocationListOnReceive&#34;, true),
 *                             Map.entry(&#34;checkCertificateRevocationListOnSend&#34;, true),
 *                             Map.entry(&#34;checkDuplicateMessage&#34;, true),
 *                             Map.entry(&#34;compressMessage&#34;, true),
 *                             Map.entry(&#34;encryptMessage&#34;, false),
 *                             Map.entry(&#34;encryptionAlgorithm&#34;, &#34;AES128&#34;),
 *                             Map.entry(&#34;interchangeDuplicatesValidityDays&#34;, 100),
 *                             Map.entry(&#34;overrideMessageProperties&#34;, true),
 *                             Map.entry(&#34;signMessage&#34;, false)
 *                         ))
 *                     )),
 *                     Map.entry(&#34;receiverBusinessIdentity&#34;, Map.ofEntries(
 *                         Map.entry(&#34;qualifier&#34;, &#34;ZZ&#34;),
 *                         Map.entry(&#34;value&#34;, &#34;ZZ&#34;)
 *                     )),
 *                     Map.entry(&#34;senderBusinessIdentity&#34;, Map.ofEntries(
 *                         Map.entry(&#34;qualifier&#34;, &#34;AA&#34;),
 *                         Map.entry(&#34;value&#34;, &#34;AA&#34;)
 *                     ))
 *                 )),
 *                 Map.entry(&#34;sendAgreement&#34;, Map.ofEntries(
 *                     Map.entry(&#34;protocolSettings&#34;, Map.ofEntries(
 *                         Map.entry(&#34;acknowledgementConnectionSettings&#34;, Map.ofEntries(
 *                             Map.entry(&#34;ignoreCertificateNameMismatch&#34;, true),
 *                             Map.entry(&#34;keepHttpConnectionAlive&#34;, true),
 *                             Map.entry(&#34;supportHttpStatusCodeContinue&#34;, true),
 *                             Map.entry(&#34;unfoldHttpHeaders&#34;, true)
 *                         )),
 *                         Map.entry(&#34;envelopeSettings&#34;, Map.ofEntries(
 *                             Map.entry(&#34;autogenerateFileName&#34;, true),
 *                             Map.entry(&#34;fileNameTemplate&#34;, &#34;Test&#34;),
 *                             Map.entry(&#34;messageContentType&#34;, &#34;text/plain&#34;),
 *                             Map.entry(&#34;suspendMessageOnFileNameGenerationError&#34;, true),
 *                             Map.entry(&#34;transmitFileNameInMimeHeader&#34;, true)
 *                         )),
 *                         Map.entry(&#34;errorSettings&#34;, Map.ofEntries(
 *                             Map.entry(&#34;resendIfMDNNotReceived&#34;, true),
 *                             Map.entry(&#34;suspendDuplicateMessage&#34;, true)
 *                         )),
 *                         Map.entry(&#34;mdnSettings&#34;, Map.ofEntries(
 *                             Map.entry(&#34;dispositionNotificationTo&#34;, &#34;http://tempuri.org&#34;),
 *                             Map.entry(&#34;mdnText&#34;, &#34;Sample&#34;),
 *                             Map.entry(&#34;micHashingAlgorithm&#34;, &#34;SHA1&#34;),
 *                             Map.entry(&#34;needMDN&#34;, true),
 *                             Map.entry(&#34;receiptDeliveryUrl&#34;, &#34;http://tempuri.org&#34;),
 *                             Map.entry(&#34;sendInboundMDNToMessageBox&#34;, true),
 *                             Map.entry(&#34;sendMDNAsynchronously&#34;, true),
 *                             Map.entry(&#34;signMDN&#34;, true),
 *                             Map.entry(&#34;signOutboundMDNIfOptional&#34;, true)
 *                         )),
 *                         Map.entry(&#34;messageConnectionSettings&#34;, Map.ofEntries(
 *                             Map.entry(&#34;ignoreCertificateNameMismatch&#34;, true),
 *                             Map.entry(&#34;keepHttpConnectionAlive&#34;, true),
 *                             Map.entry(&#34;supportHttpStatusCodeContinue&#34;, true),
 *                             Map.entry(&#34;unfoldHttpHeaders&#34;, true)
 *                         )),
 *                         Map.entry(&#34;securitySettings&#34;, Map.ofEntries(
 *                             Map.entry(&#34;enableNRRForInboundDecodedMessages&#34;, true),
 *                             Map.entry(&#34;enableNRRForInboundEncodedMessages&#34;, true),
 *                             Map.entry(&#34;enableNRRForInboundMDN&#34;, true),
 *                             Map.entry(&#34;enableNRRForOutboundDecodedMessages&#34;, true),
 *                             Map.entry(&#34;enableNRRForOutboundEncodedMessages&#34;, true),
 *                             Map.entry(&#34;enableNRRForOutboundMDN&#34;, true),
 *                             Map.entry(&#34;overrideGroupSigningCertificate&#34;, false)
 *                         )),
 *                         Map.entry(&#34;validationSettings&#34;, Map.ofEntries(
 *                             Map.entry(&#34;checkCertificateRevocationListOnReceive&#34;, true),
 *                             Map.entry(&#34;checkCertificateRevocationListOnSend&#34;, true),
 *                             Map.entry(&#34;checkDuplicateMessage&#34;, true),
 *                             Map.entry(&#34;compressMessage&#34;, true),
 *                             Map.entry(&#34;encryptMessage&#34;, false),
 *                             Map.entry(&#34;encryptionAlgorithm&#34;, &#34;AES128&#34;),
 *                             Map.entry(&#34;interchangeDuplicatesValidityDays&#34;, 100),
 *                             Map.entry(&#34;overrideMessageProperties&#34;, true),
 *                             Map.entry(&#34;signMessage&#34;, false)
 *                         ))
 *                     )),
 *                     Map.entry(&#34;receiverBusinessIdentity&#34;, Map.ofEntries(
 *                         Map.entry(&#34;qualifier&#34;, &#34;AA&#34;),
 *                         Map.entry(&#34;value&#34;, &#34;AA&#34;)
 *                     )),
 *                     Map.entry(&#34;senderBusinessIdentity&#34;, Map.ofEntries(
 *                         Map.entry(&#34;qualifier&#34;, &#34;ZZ&#34;),
 *                         Map.entry(&#34;value&#34;, &#34;ZZ&#34;)
 *                     ))
 *                 ))
 *             )))
 *             .guestIdentity(Map.ofEntries(
 *                 Map.entry(&#34;qualifier&#34;, &#34;AA&#34;),
 *                 Map.entry(&#34;value&#34;, &#34;AA&#34;)
 *             ))
 *             .guestPartner(&#34;GuestPartner&#34;)
 *             .hostIdentity(Map.ofEntries(
 *                 Map.entry(&#34;qualifier&#34;, &#34;ZZ&#34;),
 *                 Map.entry(&#34;value&#34;, &#34;ZZ&#34;)
 *             ))
 *             .hostPartner(&#34;HostPartner&#34;)
 *             .integrationAccountName(&#34;testIntegrationAccount&#34;)
 *             .location(&#34;westus&#34;)
 *             .metadata()
 *             .resourceGroupName(&#34;testResourceGroup&#34;)
 *             .tags(Map.of(&#34;IntegrationAccountAgreement&#34;, &#34;&lt;IntegrationAccountAgreementName&gt;&#34;))
 *             .build());
 * 
 *     }
 * }
 * 
 * ```
 * 
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:logic:IntegrationAccountAgreement &lt;IntegrationAccountAgreementName&gt; /subscriptions/34adfa4f-cedf-4dc0-ba29-b6d1a69ab345/resourceGroups/testResourceGroup/providers/Microsoft.Logic/integrationAccounts/IntegrationAccount4533/agreements/&lt;IntegrationAccountAgreementName&gt; 
 * ```
 * 
 */
@ResourceType(type="azure-native:logic:IntegrationAccountAgreement")
public class IntegrationAccountAgreement extends com.pulumi.resources.CustomResource {
    /**
     * The agreement type.
     * 
     */
    @Export(name="agreementType", type=String.class, parameters={})
    private Output<String> agreementType;

    /**
     * @return The agreement type.
     * 
     */
    public Output<String> agreementType() {
        return this.agreementType;
    }
    /**
     * The changed time.
     * 
     */
    @Export(name="changedTime", type=String.class, parameters={})
    private Output<String> changedTime;

    /**
     * @return The changed time.
     * 
     */
    public Output<String> changedTime() {
        return this.changedTime;
    }
    /**
     * The agreement content.
     * 
     */
    @Export(name="content", type=AgreementContentResponse.class, parameters={})
    private Output<AgreementContentResponse> content;

    /**
     * @return The agreement content.
     * 
     */
    public Output<AgreementContentResponse> content() {
        return this.content;
    }
    /**
     * The created time.
     * 
     */
    @Export(name="createdTime", type=String.class, parameters={})
    private Output<String> createdTime;

    /**
     * @return The created time.
     * 
     */
    public Output<String> createdTime() {
        return this.createdTime;
    }
    /**
     * The business identity of the guest partner.
     * 
     */
    @Export(name="guestIdentity", type=BusinessIdentityResponse.class, parameters={})
    private Output<BusinessIdentityResponse> guestIdentity;

    /**
     * @return The business identity of the guest partner.
     * 
     */
    public Output<BusinessIdentityResponse> guestIdentity() {
        return this.guestIdentity;
    }
    /**
     * The integration account partner that is set as guest partner for this agreement.
     * 
     */
    @Export(name="guestPartner", type=String.class, parameters={})
    private Output<String> guestPartner;

    /**
     * @return The integration account partner that is set as guest partner for this agreement.
     * 
     */
    public Output<String> guestPartner() {
        return this.guestPartner;
    }
    /**
     * The business identity of the host partner.
     * 
     */
    @Export(name="hostIdentity", type=BusinessIdentityResponse.class, parameters={})
    private Output<BusinessIdentityResponse> hostIdentity;

    /**
     * @return The business identity of the host partner.
     * 
     */
    public Output<BusinessIdentityResponse> hostIdentity() {
        return this.hostIdentity;
    }
    /**
     * The integration account partner that is set as host partner for this agreement.
     * 
     */
    @Export(name="hostPartner", type=String.class, parameters={})
    private Output<String> hostPartner;

    /**
     * @return The integration account partner that is set as host partner for this agreement.
     * 
     */
    public Output<String> hostPartner() {
        return this.hostPartner;
    }
    /**
     * The resource location.
     * 
     */
    @Export(name="location", type=String.class, parameters={})
    private Output</* @Nullable */ String> location;

    /**
     * @return The resource location.
     * 
     */
    public Output<Optional<String>> location() {
        return Codegen.optional(this.location);
    }
    /**
     * The metadata.
     * 
     */
    @Export(name="metadata", type=Object.class, parameters={})
    private Output</* @Nullable */ Object> metadata;

    /**
     * @return The metadata.
     * 
     */
    public Output<Optional<Object>> metadata() {
        return Codegen.optional(this.metadata);
    }
    /**
     * Gets the resource name.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Gets the resource name.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The resource tags.
     * 
     */
    @Export(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return The resource tags.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * Gets the resource type.
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return Gets the resource type.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public IntegrationAccountAgreement(String name) {
        this(name, IntegrationAccountAgreementArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public IntegrationAccountAgreement(String name, IntegrationAccountAgreementArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public IntegrationAccountAgreement(String name, IntegrationAccountAgreementArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:logic:IntegrationAccountAgreement", name, args == null ? IntegrationAccountAgreementArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private IntegrationAccountAgreement(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:logic:IntegrationAccountAgreement", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("azure-native:logic/v20150801preview:IntegrationAccountAgreement").build()),
                Output.of(Alias.builder().type("azure-native:logic/v20160601:IntegrationAccountAgreement").build()),
                Output.of(Alias.builder().type("azure-native:logic/v20180701preview:IntegrationAccountAgreement").build()),
                Output.of(Alias.builder().type("azure-native:logic/v20190501:IntegrationAccountAgreement").build())
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static IntegrationAccountAgreement get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new IntegrationAccountAgreement(name, id, options);
    }
}
