// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.securityinsights.outputs;

import com.pulumi.azurenative.securityinsights.outputs.IncidentInfoResponse;
import com.pulumi.azurenative.securityinsights.outputs.UserInfoResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetBookmarkResult {
    /**
     * @return The time the bookmark was created
     * 
     */
    private @Nullable String created;
    /**
     * @return Describes a user that created the bookmark
     * 
     */
    private @Nullable UserInfoResponse createdBy;
    /**
     * @return The display name of the bookmark
     * 
     */
    private String displayName;
    /**
     * @return Etag of the azure resource
     * 
     */
    private @Nullable String etag;
    /**
     * @return The bookmark event time
     * 
     */
    private @Nullable String eventTime;
    /**
     * @return Azure resource Id
     * 
     */
    private String id;
    /**
     * @return Describes an incident that relates to bookmark
     * 
     */
    private @Nullable IncidentInfoResponse incidentInfo;
    /**
     * @return List of labels relevant to this bookmark
     * 
     */
    private @Nullable List<String> labels;
    /**
     * @return Azure resource name
     * 
     */
    private String name;
    /**
     * @return The notes of the bookmark
     * 
     */
    private @Nullable String notes;
    /**
     * @return The query of the bookmark.
     * 
     */
    private String query;
    /**
     * @return The end time for the query
     * 
     */
    private @Nullable String queryEndTime;
    /**
     * @return The query result of the bookmark.
     * 
     */
    private @Nullable String queryResult;
    /**
     * @return The start time for the query
     * 
     */
    private @Nullable String queryStartTime;
    /**
     * @return Azure resource type
     * 
     */
    private String type;
    /**
     * @return The last time the bookmark was updated
     * 
     */
    private @Nullable String updated;
    /**
     * @return Describes a user that updated the bookmark
     * 
     */
    private @Nullable UserInfoResponse updatedBy;

    private GetBookmarkResult() {}
    /**
     * @return The time the bookmark was created
     * 
     */
    public Optional<String> created() {
        return Optional.ofNullable(this.created);
    }
    /**
     * @return Describes a user that created the bookmark
     * 
     */
    public Optional<UserInfoResponse> createdBy() {
        return Optional.ofNullable(this.createdBy);
    }
    /**
     * @return The display name of the bookmark
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Etag of the azure resource
     * 
     */
    public Optional<String> etag() {
        return Optional.ofNullable(this.etag);
    }
    /**
     * @return The bookmark event time
     * 
     */
    public Optional<String> eventTime() {
        return Optional.ofNullable(this.eventTime);
    }
    /**
     * @return Azure resource Id
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Describes an incident that relates to bookmark
     * 
     */
    public Optional<IncidentInfoResponse> incidentInfo() {
        return Optional.ofNullable(this.incidentInfo);
    }
    /**
     * @return List of labels relevant to this bookmark
     * 
     */
    public List<String> labels() {
        return this.labels == null ? List.of() : this.labels;
    }
    /**
     * @return Azure resource name
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The notes of the bookmark
     * 
     */
    public Optional<String> notes() {
        return Optional.ofNullable(this.notes);
    }
    /**
     * @return The query of the bookmark.
     * 
     */
    public String query() {
        return this.query;
    }
    /**
     * @return The end time for the query
     * 
     */
    public Optional<String> queryEndTime() {
        return Optional.ofNullable(this.queryEndTime);
    }
    /**
     * @return The query result of the bookmark.
     * 
     */
    public Optional<String> queryResult() {
        return Optional.ofNullable(this.queryResult);
    }
    /**
     * @return The start time for the query
     * 
     */
    public Optional<String> queryStartTime() {
        return Optional.ofNullable(this.queryStartTime);
    }
    /**
     * @return Azure resource type
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return The last time the bookmark was updated
     * 
     */
    public Optional<String> updated() {
        return Optional.ofNullable(this.updated);
    }
    /**
     * @return Describes a user that updated the bookmark
     * 
     */
    public Optional<UserInfoResponse> updatedBy() {
        return Optional.ofNullable(this.updatedBy);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBookmarkResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String created;
        private @Nullable UserInfoResponse createdBy;
        private String displayName;
        private @Nullable String etag;
        private @Nullable String eventTime;
        private String id;
        private @Nullable IncidentInfoResponse incidentInfo;
        private @Nullable List<String> labels;
        private String name;
        private @Nullable String notes;
        private String query;
        private @Nullable String queryEndTime;
        private @Nullable String queryResult;
        private @Nullable String queryStartTime;
        private String type;
        private @Nullable String updated;
        private @Nullable UserInfoResponse updatedBy;
        public Builder() {}
        public Builder(GetBookmarkResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.created = defaults.created;
    	      this.createdBy = defaults.createdBy;
    	      this.displayName = defaults.displayName;
    	      this.etag = defaults.etag;
    	      this.eventTime = defaults.eventTime;
    	      this.id = defaults.id;
    	      this.incidentInfo = defaults.incidentInfo;
    	      this.labels = defaults.labels;
    	      this.name = defaults.name;
    	      this.notes = defaults.notes;
    	      this.query = defaults.query;
    	      this.queryEndTime = defaults.queryEndTime;
    	      this.queryResult = defaults.queryResult;
    	      this.queryStartTime = defaults.queryStartTime;
    	      this.type = defaults.type;
    	      this.updated = defaults.updated;
    	      this.updatedBy = defaults.updatedBy;
        }

        @CustomType.Setter
        public Builder created(@Nullable String created) {
            this.created = created;
            return this;
        }
        @CustomType.Setter
        public Builder createdBy(@Nullable UserInfoResponse createdBy) {
            this.createdBy = createdBy;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        @CustomType.Setter
        public Builder etag(@Nullable String etag) {
            this.etag = etag;
            return this;
        }
        @CustomType.Setter
        public Builder eventTime(@Nullable String eventTime) {
            this.eventTime = eventTime;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder incidentInfo(@Nullable IncidentInfoResponse incidentInfo) {
            this.incidentInfo = incidentInfo;
            return this;
        }
        @CustomType.Setter
        public Builder labels(@Nullable List<String> labels) {
            this.labels = labels;
            return this;
        }
        public Builder labels(String... labels) {
            return labels(List.of(labels));
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder notes(@Nullable String notes) {
            this.notes = notes;
            return this;
        }
        @CustomType.Setter
        public Builder query(String query) {
            this.query = Objects.requireNonNull(query);
            return this;
        }
        @CustomType.Setter
        public Builder queryEndTime(@Nullable String queryEndTime) {
            this.queryEndTime = queryEndTime;
            return this;
        }
        @CustomType.Setter
        public Builder queryResult(@Nullable String queryResult) {
            this.queryResult = queryResult;
            return this;
        }
        @CustomType.Setter
        public Builder queryStartTime(@Nullable String queryStartTime) {
            this.queryStartTime = queryStartTime;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder updated(@Nullable String updated) {
            this.updated = updated;
            return this;
        }
        @CustomType.Setter
        public Builder updatedBy(@Nullable UserInfoResponse updatedBy) {
            this.updatedBy = updatedBy;
            return this;
        }
        public GetBookmarkResult build() {
            final var o = new GetBookmarkResult();
            o.created = created;
            o.createdBy = createdBy;
            o.displayName = displayName;
            o.etag = etag;
            o.eventTime = eventTime;
            o.id = id;
            o.incidentInfo = incidentInfo;
            o.labels = labels;
            o.name = name;
            o.notes = notes;
            o.query = query;
            o.queryEndTime = queryEndTime;
            o.queryResult = queryResult;
            o.queryStartTime = queryStartTime;
            o.type = type;
            o.updated = updated;
            o.updatedBy = updatedBy;
            return o;
        }
    }
}
