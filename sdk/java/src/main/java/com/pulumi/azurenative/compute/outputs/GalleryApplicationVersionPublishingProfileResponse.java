// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.compute.outputs;

import com.pulumi.azurenative.compute.outputs.TargetRegionResponse;
import com.pulumi.azurenative.compute.outputs.UserArtifactManageResponse;
import com.pulumi.azurenative.compute.outputs.UserArtifactSourceResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GalleryApplicationVersionPublishingProfileResponse {
    /**
     * @return Optional. Whether or not this application reports health.
     * 
     */
    private @Nullable Boolean enableHealthCheck;
    /**
     * @return The end of life date of the gallery image version. This property can be used for decommissioning purposes. This property is updatable.
     * 
     */
    private @Nullable String endOfLifeDate;
    /**
     * @return If set to true, Virtual Machines deployed from the latest version of the Image Definition won&#39;t use this Image Version.
     * 
     */
    private @Nullable Boolean excludeFromLatest;
    private @Nullable UserArtifactManageResponse manageActions;
    /**
     * @return The timestamp for when the gallery image version is published.
     * 
     */
    private String publishedDate;
    /**
     * @return The number of replicas of the Image Version to be created per region. This property would take effect for a region when regionalReplicaCount is not specified. This property is updatable.
     * 
     */
    private @Nullable Integer replicaCount;
    /**
     * @return The source image from which the Image Version is going to be created.
     * 
     */
    private UserArtifactSourceResponse source;
    /**
     * @return Specifies the storage account type to be used to store the image. This property is not updatable.
     * 
     */
    private @Nullable String storageAccountType;
    /**
     * @return The target regions where the Image Version is going to be replicated to. This property is updatable.
     * 
     */
    private @Nullable List<TargetRegionResponse> targetRegions;

    private GalleryApplicationVersionPublishingProfileResponse() {}
    /**
     * @return Optional. Whether or not this application reports health.
     * 
     */
    public Optional<Boolean> enableHealthCheck() {
        return Optional.ofNullable(this.enableHealthCheck);
    }
    /**
     * @return The end of life date of the gallery image version. This property can be used for decommissioning purposes. This property is updatable.
     * 
     */
    public Optional<String> endOfLifeDate() {
        return Optional.ofNullable(this.endOfLifeDate);
    }
    /**
     * @return If set to true, Virtual Machines deployed from the latest version of the Image Definition won&#39;t use this Image Version.
     * 
     */
    public Optional<Boolean> excludeFromLatest() {
        return Optional.ofNullable(this.excludeFromLatest);
    }
    public Optional<UserArtifactManageResponse> manageActions() {
        return Optional.ofNullable(this.manageActions);
    }
    /**
     * @return The timestamp for when the gallery image version is published.
     * 
     */
    public String publishedDate() {
        return this.publishedDate;
    }
    /**
     * @return The number of replicas of the Image Version to be created per region. This property would take effect for a region when regionalReplicaCount is not specified. This property is updatable.
     * 
     */
    public Optional<Integer> replicaCount() {
        return Optional.ofNullable(this.replicaCount);
    }
    /**
     * @return The source image from which the Image Version is going to be created.
     * 
     */
    public UserArtifactSourceResponse source() {
        return this.source;
    }
    /**
     * @return Specifies the storage account type to be used to store the image. This property is not updatable.
     * 
     */
    public Optional<String> storageAccountType() {
        return Optional.ofNullable(this.storageAccountType);
    }
    /**
     * @return The target regions where the Image Version is going to be replicated to. This property is updatable.
     * 
     */
    public List<TargetRegionResponse> targetRegions() {
        return this.targetRegions == null ? List.of() : this.targetRegions;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GalleryApplicationVersionPublishingProfileResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean enableHealthCheck;
        private @Nullable String endOfLifeDate;
        private @Nullable Boolean excludeFromLatest;
        private @Nullable UserArtifactManageResponse manageActions;
        private String publishedDate;
        private @Nullable Integer replicaCount;
        private UserArtifactSourceResponse source;
        private @Nullable String storageAccountType;
        private @Nullable List<TargetRegionResponse> targetRegions;
        public Builder() {}
        public Builder(GalleryApplicationVersionPublishingProfileResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enableHealthCheck = defaults.enableHealthCheck;
    	      this.endOfLifeDate = defaults.endOfLifeDate;
    	      this.excludeFromLatest = defaults.excludeFromLatest;
    	      this.manageActions = defaults.manageActions;
    	      this.publishedDate = defaults.publishedDate;
    	      this.replicaCount = defaults.replicaCount;
    	      this.source = defaults.source;
    	      this.storageAccountType = defaults.storageAccountType;
    	      this.targetRegions = defaults.targetRegions;
        }

        @CustomType.Setter
        public Builder enableHealthCheck(@Nullable Boolean enableHealthCheck) {
            this.enableHealthCheck = enableHealthCheck;
            return this;
        }
        @CustomType.Setter
        public Builder endOfLifeDate(@Nullable String endOfLifeDate) {
            this.endOfLifeDate = endOfLifeDate;
            return this;
        }
        @CustomType.Setter
        public Builder excludeFromLatest(@Nullable Boolean excludeFromLatest) {
            this.excludeFromLatest = excludeFromLatest;
            return this;
        }
        @CustomType.Setter
        public Builder manageActions(@Nullable UserArtifactManageResponse manageActions) {
            this.manageActions = manageActions;
            return this;
        }
        @CustomType.Setter
        public Builder publishedDate(String publishedDate) {
            this.publishedDate = Objects.requireNonNull(publishedDate);
            return this;
        }
        @CustomType.Setter
        public Builder replicaCount(@Nullable Integer replicaCount) {
            this.replicaCount = replicaCount;
            return this;
        }
        @CustomType.Setter
        public Builder source(UserArtifactSourceResponse source) {
            this.source = Objects.requireNonNull(source);
            return this;
        }
        @CustomType.Setter
        public Builder storageAccountType(@Nullable String storageAccountType) {
            this.storageAccountType = storageAccountType;
            return this;
        }
        @CustomType.Setter
        public Builder targetRegions(@Nullable List<TargetRegionResponse> targetRegions) {
            this.targetRegions = targetRegions;
            return this;
        }
        public Builder targetRegions(TargetRegionResponse... targetRegions) {
            return targetRegions(List.of(targetRegions));
        }
        public GalleryApplicationVersionPublishingProfileResponse build() {
            final var o = new GalleryApplicationVersionPublishingProfileResponse();
            o.enableHealthCheck = enableHealthCheck;
            o.endOfLifeDate = endOfLifeDate;
            o.excludeFromLatest = excludeFromLatest;
            o.manageActions = manageActions;
            o.publishedDate = publishedDate;
            o.replicaCount = replicaCount;
            o.source = source;
            o.storageAccountType = storageAccountType;
            o.targetRegions = targetRegions;
            return o;
        }
    }
}
