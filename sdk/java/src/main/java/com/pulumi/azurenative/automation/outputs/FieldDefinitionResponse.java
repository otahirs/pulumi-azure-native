// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.automation.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class FieldDefinitionResponse {
    /**
     * @return Gets or sets the isEncrypted flag of the connection field definition.
     * 
     */
    private @Nullable Boolean isEncrypted;
    /**
     * @return Gets or sets the isOptional flag of the connection field definition.
     * 
     */
    private @Nullable Boolean isOptional;
    /**
     * @return Gets or sets the type of the connection field definition.
     * 
     */
    private String type;

    private FieldDefinitionResponse() {}
    /**
     * @return Gets or sets the isEncrypted flag of the connection field definition.
     * 
     */
    public Optional<Boolean> isEncrypted() {
        return Optional.ofNullable(this.isEncrypted);
    }
    /**
     * @return Gets or sets the isOptional flag of the connection field definition.
     * 
     */
    public Optional<Boolean> isOptional() {
        return Optional.ofNullable(this.isOptional);
    }
    /**
     * @return Gets or sets the type of the connection field definition.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FieldDefinitionResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean isEncrypted;
        private @Nullable Boolean isOptional;
        private String type;
        public Builder() {}
        public Builder(FieldDefinitionResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.isEncrypted = defaults.isEncrypted;
    	      this.isOptional = defaults.isOptional;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder isEncrypted(@Nullable Boolean isEncrypted) {
            this.isEncrypted = isEncrypted;
            return this;
        }
        @CustomType.Setter
        public Builder isOptional(@Nullable Boolean isOptional) {
            this.isOptional = isOptional;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public FieldDefinitionResponse build() {
            final var o = new FieldDefinitionResponse();
            o.isEncrypted = isEncrypted;
            o.isOptional = isOptional;
            o.type = type;
            return o;
        }
    }
}
