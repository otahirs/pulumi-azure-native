// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.eventhub.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class ThrottlingPolicyResponse {
    /**
     * @return Metric Id on which the throttle limit should be set, MetricId can be discovered by hovering over Metric in the Metrics section of Event Hub Namespace inside Azure Portal
     * 
     */
    private String metricId;
    /**
     * @return The Name of this policy
     * 
     */
    private String name;
    /**
     * @return The Threshold limit above which the application group will be throttled.Rate limit is always per second.
     * 
     */
    private Double rateLimitThreshold;
    /**
     * @return Application Group Policy types
     * Expected value is &#39;ThrottlingPolicy&#39;.
     * 
     */
    private String type;

    private ThrottlingPolicyResponse() {}
    /**
     * @return Metric Id on which the throttle limit should be set, MetricId can be discovered by hovering over Metric in the Metrics section of Event Hub Namespace inside Azure Portal
     * 
     */
    public String metricId() {
        return this.metricId;
    }
    /**
     * @return The Name of this policy
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The Threshold limit above which the application group will be throttled.Rate limit is always per second.
     * 
     */
    public Double rateLimitThreshold() {
        return this.rateLimitThreshold;
    }
    /**
     * @return Application Group Policy types
     * Expected value is &#39;ThrottlingPolicy&#39;.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ThrottlingPolicyResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String metricId;
        private String name;
        private Double rateLimitThreshold;
        private String type;
        public Builder() {}
        public Builder(ThrottlingPolicyResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.metricId = defaults.metricId;
    	      this.name = defaults.name;
    	      this.rateLimitThreshold = defaults.rateLimitThreshold;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder metricId(String metricId) {
            this.metricId = Objects.requireNonNull(metricId);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder rateLimitThreshold(Double rateLimitThreshold) {
            this.rateLimitThreshold = Objects.requireNonNull(rateLimitThreshold);
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public ThrottlingPolicyResponse build() {
            final var o = new ThrottlingPolicyResponse();
            o.metricId = metricId;
            o.name = name;
            o.rateLimitThreshold = rateLimitThreshold;
            o.type = type;
            return o;
        }
    }
}
