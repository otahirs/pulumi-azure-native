// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.vmwarecloudsimple.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetDedicatedCloudServiceResult {
    /**
     * @return gateway Subnet for the account. It will collect the subnet address and always treat it as /28
     * 
     */
    private String gatewaySubnet;
    /**
     * @return /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/dedicatedCloudServices/{dedicatedCloudServiceName}
     * 
     */
    private String id;
    /**
     * @return indicates whether account onboarded or not in a given region
     * 
     */
    private String isAccountOnboarded;
    /**
     * @return Azure region
     * 
     */
    private String location;
    /**
     * @return {dedicatedCloudServiceName}
     * 
     */
    private String name;
    /**
     * @return total nodes purchased
     * 
     */
    private Integer nodes;
    /**
     * @return link to a service management web portal
     * 
     */
    private String serviceURL;
    /**
     * @return The list of tags
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return {resourceProviderNamespace}/{resourceType}
     * 
     */
    private String type;

    private GetDedicatedCloudServiceResult() {}
    /**
     * @return gateway Subnet for the account. It will collect the subnet address and always treat it as /28
     * 
     */
    public String gatewaySubnet() {
        return this.gatewaySubnet;
    }
    /**
     * @return /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/dedicatedCloudServices/{dedicatedCloudServiceName}
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return indicates whether account onboarded or not in a given region
     * 
     */
    public String isAccountOnboarded() {
        return this.isAccountOnboarded;
    }
    /**
     * @return Azure region
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return {dedicatedCloudServiceName}
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return total nodes purchased
     * 
     */
    public Integer nodes() {
        return this.nodes;
    }
    /**
     * @return link to a service management web portal
     * 
     */
    public String serviceURL() {
        return this.serviceURL;
    }
    /**
     * @return The list of tags
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return {resourceProviderNamespace}/{resourceType}
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDedicatedCloudServiceResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String gatewaySubnet;
        private String id;
        private String isAccountOnboarded;
        private String location;
        private String name;
        private Integer nodes;
        private String serviceURL;
        private @Nullable Map<String,String> tags;
        private String type;
        public Builder() {}
        public Builder(GetDedicatedCloudServiceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.gatewaySubnet = defaults.gatewaySubnet;
    	      this.id = defaults.id;
    	      this.isAccountOnboarded = defaults.isAccountOnboarded;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.nodes = defaults.nodes;
    	      this.serviceURL = defaults.serviceURL;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder gatewaySubnet(String gatewaySubnet) {
            this.gatewaySubnet = Objects.requireNonNull(gatewaySubnet);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder isAccountOnboarded(String isAccountOnboarded) {
            this.isAccountOnboarded = Objects.requireNonNull(isAccountOnboarded);
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder nodes(Integer nodes) {
            this.nodes = Objects.requireNonNull(nodes);
            return this;
        }
        @CustomType.Setter
        public Builder serviceURL(String serviceURL) {
            this.serviceURL = Objects.requireNonNull(serviceURL);
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetDedicatedCloudServiceResult build() {
            final var o = new GetDedicatedCloudServiceResult();
            o.gatewaySubnet = gatewaySubnet;
            o.id = id;
            o.isAccountOnboarded = isAccountOnboarded;
            o.location = location;
            o.name = name;
            o.nodes = nodes;
            o.serviceURL = serviceURL;
            o.tags = tags;
            o.type = type;
            return o;
        }
    }
}
