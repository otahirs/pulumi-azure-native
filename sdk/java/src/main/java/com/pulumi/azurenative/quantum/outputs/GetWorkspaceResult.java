// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.quantum.outputs;

import com.pulumi.azurenative.quantum.outputs.ProviderResponse;
import com.pulumi.azurenative.quantum.outputs.QuantumWorkspaceResponseIdentity;
import com.pulumi.azurenative.quantum.outputs.SystemDataResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetWorkspaceResult {
    /**
     * @return The URI of the workspace endpoint.
     * 
     */
    private String endpointUri;
    /**
     * @return Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    private String id;
    /**
     * @return Managed Identity information.
     * 
     */
    private @Nullable QuantumWorkspaceResponseIdentity identity;
    /**
     * @return The geo-location where the resource lives
     * 
     */
    private String location;
    /**
     * @return The name of the resource
     * 
     */
    private String name;
    /**
     * @return List of Providers selected for this Workspace
     * 
     */
    private @Nullable List<ProviderResponse> providers;
    /**
     * @return Provisioning status field
     * 
     */
    private String provisioningState;
    /**
     * @return ARM Resource Id of the storage account associated with this workspace.
     * 
     */
    private @Nullable String storageAccount;
    /**
     * @return System metadata
     * 
     */
    private SystemDataResponse systemData;
    /**
     * @return Resource tags.
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    private String type;
    /**
     * @return Whether the current workspace is ready to accept Jobs.
     * 
     */
    private String usable;

    private GetWorkspaceResult() {}
    /**
     * @return The URI of the workspace endpoint.
     * 
     */
    public String endpointUri() {
        return this.endpointUri;
    }
    /**
     * @return Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Managed Identity information.
     * 
     */
    public Optional<QuantumWorkspaceResponseIdentity> identity() {
        return Optional.ofNullable(this.identity);
    }
    /**
     * @return The geo-location where the resource lives
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return The name of the resource
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return List of Providers selected for this Workspace
     * 
     */
    public List<ProviderResponse> providers() {
        return this.providers == null ? List.of() : this.providers;
    }
    /**
     * @return Provisioning status field
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * @return ARM Resource Id of the storage account associated with this workspace.
     * 
     */
    public Optional<String> storageAccount() {
        return Optional.ofNullable(this.storageAccount);
    }
    /**
     * @return System metadata
     * 
     */
    public SystemDataResponse systemData() {
        return this.systemData;
    }
    /**
     * @return Resource tags.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return Whether the current workspace is ready to accept Jobs.
     * 
     */
    public String usable() {
        return this.usable;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWorkspaceResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String endpointUri;
        private String id;
        private @Nullable QuantumWorkspaceResponseIdentity identity;
        private String location;
        private String name;
        private @Nullable List<ProviderResponse> providers;
        private String provisioningState;
        private @Nullable String storageAccount;
        private SystemDataResponse systemData;
        private @Nullable Map<String,String> tags;
        private String type;
        private String usable;
        public Builder() {}
        public Builder(GetWorkspaceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.endpointUri = defaults.endpointUri;
    	      this.id = defaults.id;
    	      this.identity = defaults.identity;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.providers = defaults.providers;
    	      this.provisioningState = defaults.provisioningState;
    	      this.storageAccount = defaults.storageAccount;
    	      this.systemData = defaults.systemData;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
    	      this.usable = defaults.usable;
        }

        @CustomType.Setter
        public Builder endpointUri(String endpointUri) {
            this.endpointUri = Objects.requireNonNull(endpointUri);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder identity(@Nullable QuantumWorkspaceResponseIdentity identity) {
            this.identity = identity;
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder providers(@Nullable List<ProviderResponse> providers) {
            this.providers = providers;
            return this;
        }
        public Builder providers(ProviderResponse... providers) {
            return providers(List.of(providers));
        }
        @CustomType.Setter
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        @CustomType.Setter
        public Builder storageAccount(@Nullable String storageAccount) {
            this.storageAccount = storageAccount;
            return this;
        }
        @CustomType.Setter
        public Builder systemData(SystemDataResponse systemData) {
            this.systemData = Objects.requireNonNull(systemData);
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder usable(String usable) {
            this.usable = Objects.requireNonNull(usable);
            return this;
        }
        public GetWorkspaceResult build() {
            final var o = new GetWorkspaceResult();
            o.endpointUri = endpointUri;
            o.id = id;
            o.identity = identity;
            o.location = location;
            o.name = name;
            o.providers = providers;
            o.provisioningState = provisioningState;
            o.storageAccount = storageAccount;
            o.systemData = systemData;
            o.tags = tags;
            o.type = type;
            o.usable = usable;
            return o;
        }
    }
}
