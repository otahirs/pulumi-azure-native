// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.streamanalytics.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ServiceBusQueueOutputDataSourceResponse {
    /**
     * @return A string array of the names of output columns to be attached to Service Bus messages as custom properties.
     * 
     */
    private @Nullable List<String> propertyColumns;
    /**
     * @return The name of the Service Bus Queue. Required on PUT (CreateOrReplace) requests.
     * 
     */
    private @Nullable String queueName;
    /**
     * @return The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
     * 
     */
    private @Nullable String serviceBusNamespace;
    /**
     * @return The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests.
     * 
     */
    private @Nullable String sharedAccessPolicyKey;
    /**
     * @return The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
     * 
     */
    private @Nullable String sharedAccessPolicyName;
    /**
     * @return Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
     * Expected value is &#39;Microsoft.ServiceBus/Queue&#39;.
     * 
     */
    private String type;

    private ServiceBusQueueOutputDataSourceResponse() {}
    /**
     * @return A string array of the names of output columns to be attached to Service Bus messages as custom properties.
     * 
     */
    public List<String> propertyColumns() {
        return this.propertyColumns == null ? List.of() : this.propertyColumns;
    }
    /**
     * @return The name of the Service Bus Queue. Required on PUT (CreateOrReplace) requests.
     * 
     */
    public Optional<String> queueName() {
        return Optional.ofNullable(this.queueName);
    }
    /**
     * @return The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
     * 
     */
    public Optional<String> serviceBusNamespace() {
        return Optional.ofNullable(this.serviceBusNamespace);
    }
    /**
     * @return The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests.
     * 
     */
    public Optional<String> sharedAccessPolicyKey() {
        return Optional.ofNullable(this.sharedAccessPolicyKey);
    }
    /**
     * @return The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
     * 
     */
    public Optional<String> sharedAccessPolicyName() {
        return Optional.ofNullable(this.sharedAccessPolicyName);
    }
    /**
     * @return Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
     * Expected value is &#39;Microsoft.ServiceBus/Queue&#39;.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServiceBusQueueOutputDataSourceResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> propertyColumns;
        private @Nullable String queueName;
        private @Nullable String serviceBusNamespace;
        private @Nullable String sharedAccessPolicyKey;
        private @Nullable String sharedAccessPolicyName;
        private String type;
        public Builder() {}
        public Builder(ServiceBusQueueOutputDataSourceResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.propertyColumns = defaults.propertyColumns;
    	      this.queueName = defaults.queueName;
    	      this.serviceBusNamespace = defaults.serviceBusNamespace;
    	      this.sharedAccessPolicyKey = defaults.sharedAccessPolicyKey;
    	      this.sharedAccessPolicyName = defaults.sharedAccessPolicyName;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder propertyColumns(@Nullable List<String> propertyColumns) {
            this.propertyColumns = propertyColumns;
            return this;
        }
        public Builder propertyColumns(String... propertyColumns) {
            return propertyColumns(List.of(propertyColumns));
        }
        @CustomType.Setter
        public Builder queueName(@Nullable String queueName) {
            this.queueName = queueName;
            return this;
        }
        @CustomType.Setter
        public Builder serviceBusNamespace(@Nullable String serviceBusNamespace) {
            this.serviceBusNamespace = serviceBusNamespace;
            return this;
        }
        @CustomType.Setter
        public Builder sharedAccessPolicyKey(@Nullable String sharedAccessPolicyKey) {
            this.sharedAccessPolicyKey = sharedAccessPolicyKey;
            return this;
        }
        @CustomType.Setter
        public Builder sharedAccessPolicyName(@Nullable String sharedAccessPolicyName) {
            this.sharedAccessPolicyName = sharedAccessPolicyName;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public ServiceBusQueueOutputDataSourceResponse build() {
            final var o = new ServiceBusQueueOutputDataSourceResponse();
            o.propertyColumns = propertyColumns;
            o.queueName = queueName;
            o.serviceBusNamespace = serviceBusNamespace;
            o.sharedAccessPolicyKey = sharedAccessPolicyKey;
            o.sharedAccessPolicyName = sharedAccessPolicyName;
            o.type = type;
            return o;
        }
    }
}
