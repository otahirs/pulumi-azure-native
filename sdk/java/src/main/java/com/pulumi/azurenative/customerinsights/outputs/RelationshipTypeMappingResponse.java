// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.customerinsights.outputs;

import com.pulumi.azurenative.customerinsights.outputs.RelationshipTypeFieldMappingResponse;
import com.pulumi.core.annotations.CustomType;
import java.util.List;
import java.util.Objects;

@CustomType
public final class RelationshipTypeMappingResponse {
    /**
     * @return Maps a profile property with the StrongId of related profile. This is an array to support StrongIds that are composite key as well.
     * 
     */
    private List<RelationshipTypeFieldMappingResponse> fieldMappings;

    private RelationshipTypeMappingResponse() {}
    /**
     * @return Maps a profile property with the StrongId of related profile. This is an array to support StrongIds that are composite key as well.
     * 
     */
    public List<RelationshipTypeFieldMappingResponse> fieldMappings() {
        return this.fieldMappings;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RelationshipTypeMappingResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<RelationshipTypeFieldMappingResponse> fieldMappings;
        public Builder() {}
        public Builder(RelationshipTypeMappingResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.fieldMappings = defaults.fieldMappings;
        }

        @CustomType.Setter
        public Builder fieldMappings(List<RelationshipTypeFieldMappingResponse> fieldMappings) {
            this.fieldMappings = Objects.requireNonNull(fieldMappings);
            return this;
        }
        public Builder fieldMappings(RelationshipTypeFieldMappingResponse... fieldMappings) {
            return fieldMappings(List.of(fieldMappings));
        }
        public RelationshipTypeMappingResponse build() {
            final var o = new RelationshipTypeMappingResponse();
            o.fieldMappings = fieldMappings;
            return o;
        }
    }
}
