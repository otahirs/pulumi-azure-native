// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.networkfunction;

import com.pulumi.azurenative.Utilities;
import com.pulumi.azurenative.networkfunction.CollectorPolicyArgs;
import com.pulumi.azurenative.networkfunction.outputs.CollectorPolicyResponseSystemData;
import com.pulumi.azurenative.networkfunction.outputs.EmissionPoliciesPropertiesFormatResponse;
import com.pulumi.azurenative.networkfunction.outputs.IngestionPolicyPropertiesFormatResponse;
import com.pulumi.core.Alias;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Collector policy resource.
 * API Version: 2022-05-01.
 * 
 * ## Example Usage
 * ### Create a collection policy
 * 
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var collectorPolicy = new CollectorPolicy(&#34;collectorPolicy&#34;, CollectorPolicyArgs.builder()        
 *             .azureTrafficCollectorName(&#34;atc&#34;)
 *             .collectorPolicyName(&#34;cp1&#34;)
 *             .emissionPolicies(Map.ofEntries(
 *                 Map.entry(&#34;emissionDestinations&#34;, Map.of(&#34;destinationType&#34;, &#34;AzureMonitor&#34;)),
 *                 Map.entry(&#34;emissionType&#34;, &#34;IPFIX&#34;)
 *             ))
 *             .ingestionPolicy(Map.ofEntries(
 *                 Map.entry(&#34;ingestionSources&#34;, Map.ofEntries(
 *                     Map.entry(&#34;resourceId&#34;, &#34;/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRouteCircuits/circuitName&#34;),
 *                     Map.entry(&#34;sourceType&#34;, &#34;Resource&#34;)
 *                 )),
 *                 Map.entry(&#34;ingestionType&#34;, &#34;IPFIX&#34;)
 *             ))
 *             .resourceGroupName(&#34;rg1&#34;)
 *             .build());
 * 
 *     }
 * }
 * 
 * ```
 * 
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:networkfunction:CollectorPolicy cp1 /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.NetworkFunction/azureTrafficCollectors/atc/collectorPolicies/cp1 
 * ```
 * 
 */
@ResourceType(type="azure-native:networkfunction:CollectorPolicy")
public class CollectorPolicy extends com.pulumi.resources.CustomResource {
    /**
     * Emission policies.
     * 
     */
    @Export(name="emissionPolicies", type=List.class, parameters={EmissionPoliciesPropertiesFormatResponse.class})
    private Output</* @Nullable */ List<EmissionPoliciesPropertiesFormatResponse>> emissionPolicies;

    /**
     * @return Emission policies.
     * 
     */
    public Output<Optional<List<EmissionPoliciesPropertiesFormatResponse>>> emissionPolicies() {
        return Codegen.optional(this.emissionPolicies);
    }
    /**
     * A unique read-only string that changes whenever the resource is updated.
     * 
     */
    @Export(name="etag", type=String.class, parameters={})
    private Output<String> etag;

    /**
     * @return A unique read-only string that changes whenever the resource is updated.
     * 
     */
    public Output<String> etag() {
        return this.etag;
    }
    /**
     * Ingestion policies.
     * 
     */
    @Export(name="ingestionPolicy", type=IngestionPolicyPropertiesFormatResponse.class, parameters={})
    private Output</* @Nullable */ IngestionPolicyPropertiesFormatResponse> ingestionPolicy;

    /**
     * @return Ingestion policies.
     * 
     */
    public Output<Optional<IngestionPolicyPropertiesFormatResponse>> ingestionPolicy() {
        return Codegen.optional(this.ingestionPolicy);
    }
    /**
     * Azure resource name
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Azure resource name
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The provisioning state.
     * 
     */
    @Export(name="provisioningState", type=String.class, parameters={})
    private Output<String> provisioningState;

    /**
     * @return The provisioning state.
     * 
     */
    public Output<String> provisioningState() {
        return this.provisioningState;
    }
    /**
     * Metadata pertaining to creation and last modification of the resource.
     * 
     */
    @Export(name="systemData", type=CollectorPolicyResponseSystemData.class, parameters={})
    private Output<CollectorPolicyResponseSystemData> systemData;

    /**
     * @return Metadata pertaining to creation and last modification of the resource.
     * 
     */
    public Output<CollectorPolicyResponseSystemData> systemData() {
        return this.systemData;
    }
    /**
     * Azure resource type
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return Azure resource type
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public CollectorPolicy(String name) {
        this(name, CollectorPolicyArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public CollectorPolicy(String name, CollectorPolicyArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public CollectorPolicy(String name, CollectorPolicyArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:networkfunction:CollectorPolicy", name, args == null ? CollectorPolicyArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private CollectorPolicy(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:networkfunction:CollectorPolicy", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("azure-native:networkfunction/v20210901preview:CollectorPolicy").build()),
                Output.of(Alias.builder().type("azure-native:networkfunction/v20220501:CollectorPolicy").build())
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static CollectorPolicy get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new CollectorPolicy(name, id, options);
    }
}
