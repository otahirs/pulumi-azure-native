// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.dashboard.outputs;

import com.pulumi.azurenative.dashboard.outputs.PrivateEndpointConnectionResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ManagedGrafanaPropertiesResponse {
    /**
     * @return The api key setting of the Grafana instance.
     * 
     */
    private @Nullable String apiKey;
    /**
     * @return Scope for dns deterministic name hash calculation.
     * 
     */
    private @Nullable String autoGeneratedDomainNameLabelScope;
    /**
     * @return Whether a Grafana instance uses deterministic outbound IPs.
     * 
     */
    private @Nullable String deterministicOutboundIP;
    /**
     * @return The endpoint of the Grafana instance.
     * 
     */
    private String endpoint;
    /**
     * @return The Grafana software version.
     * 
     */
    private String grafanaVersion;
    /**
     * @return List of outbound IPs if deterministicOutboundIP is enabled.
     * 
     */
    private List<String> outboundIPs;
    /**
     * @return The private endpoint connections of the Grafana instance.
     * 
     */
    private List<PrivateEndpointConnectionResponse> privateEndpointConnections;
    /**
     * @return Provisioning state of the resource.
     * 
     */
    private String provisioningState;
    /**
     * @return Indicate the state for enable or disable traffic over the public interface.
     * 
     */
    private @Nullable String publicNetworkAccess;
    /**
     * @return The zone redundancy setting of the Grafana instance.
     * 
     */
    private @Nullable String zoneRedundancy;

    private ManagedGrafanaPropertiesResponse() {}
    /**
     * @return The api key setting of the Grafana instance.
     * 
     */
    public Optional<String> apiKey() {
        return Optional.ofNullable(this.apiKey);
    }
    /**
     * @return Scope for dns deterministic name hash calculation.
     * 
     */
    public Optional<String> autoGeneratedDomainNameLabelScope() {
        return Optional.ofNullable(this.autoGeneratedDomainNameLabelScope);
    }
    /**
     * @return Whether a Grafana instance uses deterministic outbound IPs.
     * 
     */
    public Optional<String> deterministicOutboundIP() {
        return Optional.ofNullable(this.deterministicOutboundIP);
    }
    /**
     * @return The endpoint of the Grafana instance.
     * 
     */
    public String endpoint() {
        return this.endpoint;
    }
    /**
     * @return The Grafana software version.
     * 
     */
    public String grafanaVersion() {
        return this.grafanaVersion;
    }
    /**
     * @return List of outbound IPs if deterministicOutboundIP is enabled.
     * 
     */
    public List<String> outboundIPs() {
        return this.outboundIPs;
    }
    /**
     * @return The private endpoint connections of the Grafana instance.
     * 
     */
    public List<PrivateEndpointConnectionResponse> privateEndpointConnections() {
        return this.privateEndpointConnections;
    }
    /**
     * @return Provisioning state of the resource.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * @return Indicate the state for enable or disable traffic over the public interface.
     * 
     */
    public Optional<String> publicNetworkAccess() {
        return Optional.ofNullable(this.publicNetworkAccess);
    }
    /**
     * @return The zone redundancy setting of the Grafana instance.
     * 
     */
    public Optional<String> zoneRedundancy() {
        return Optional.ofNullable(this.zoneRedundancy);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ManagedGrafanaPropertiesResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String apiKey;
        private @Nullable String autoGeneratedDomainNameLabelScope;
        private @Nullable String deterministicOutboundIP;
        private String endpoint;
        private String grafanaVersion;
        private List<String> outboundIPs;
        private List<PrivateEndpointConnectionResponse> privateEndpointConnections;
        private String provisioningState;
        private @Nullable String publicNetworkAccess;
        private @Nullable String zoneRedundancy;
        public Builder() {}
        public Builder(ManagedGrafanaPropertiesResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apiKey = defaults.apiKey;
    	      this.autoGeneratedDomainNameLabelScope = defaults.autoGeneratedDomainNameLabelScope;
    	      this.deterministicOutboundIP = defaults.deterministicOutboundIP;
    	      this.endpoint = defaults.endpoint;
    	      this.grafanaVersion = defaults.grafanaVersion;
    	      this.outboundIPs = defaults.outboundIPs;
    	      this.privateEndpointConnections = defaults.privateEndpointConnections;
    	      this.provisioningState = defaults.provisioningState;
    	      this.publicNetworkAccess = defaults.publicNetworkAccess;
    	      this.zoneRedundancy = defaults.zoneRedundancy;
        }

        @CustomType.Setter
        public Builder apiKey(@Nullable String apiKey) {
            this.apiKey = apiKey;
            return this;
        }
        @CustomType.Setter
        public Builder autoGeneratedDomainNameLabelScope(@Nullable String autoGeneratedDomainNameLabelScope) {
            this.autoGeneratedDomainNameLabelScope = autoGeneratedDomainNameLabelScope;
            return this;
        }
        @CustomType.Setter
        public Builder deterministicOutboundIP(@Nullable String deterministicOutboundIP) {
            this.deterministicOutboundIP = deterministicOutboundIP;
            return this;
        }
        @CustomType.Setter
        public Builder endpoint(String endpoint) {
            this.endpoint = Objects.requireNonNull(endpoint);
            return this;
        }
        @CustomType.Setter
        public Builder grafanaVersion(String grafanaVersion) {
            this.grafanaVersion = Objects.requireNonNull(grafanaVersion);
            return this;
        }
        @CustomType.Setter
        public Builder outboundIPs(List<String> outboundIPs) {
            this.outboundIPs = Objects.requireNonNull(outboundIPs);
            return this;
        }
        public Builder outboundIPs(String... outboundIPs) {
            return outboundIPs(List.of(outboundIPs));
        }
        @CustomType.Setter
        public Builder privateEndpointConnections(List<PrivateEndpointConnectionResponse> privateEndpointConnections) {
            this.privateEndpointConnections = Objects.requireNonNull(privateEndpointConnections);
            return this;
        }
        public Builder privateEndpointConnections(PrivateEndpointConnectionResponse... privateEndpointConnections) {
            return privateEndpointConnections(List.of(privateEndpointConnections));
        }
        @CustomType.Setter
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        @CustomType.Setter
        public Builder publicNetworkAccess(@Nullable String publicNetworkAccess) {
            this.publicNetworkAccess = publicNetworkAccess;
            return this;
        }
        @CustomType.Setter
        public Builder zoneRedundancy(@Nullable String zoneRedundancy) {
            this.zoneRedundancy = zoneRedundancy;
            return this;
        }
        public ManagedGrafanaPropertiesResponse build() {
            final var o = new ManagedGrafanaPropertiesResponse();
            o.apiKey = apiKey;
            o.autoGeneratedDomainNameLabelScope = autoGeneratedDomainNameLabelScope;
            o.deterministicOutboundIP = deterministicOutboundIP;
            o.endpoint = endpoint;
            o.grafanaVersion = grafanaVersion;
            o.outboundIPs = outboundIPs;
            o.privateEndpointConnections = privateEndpointConnections;
            o.provisioningState = provisioningState;
            o.publicNetworkAccess = publicNetworkAccess;
            o.zoneRedundancy = zoneRedundancy;
            return o;
        }
    }
}
