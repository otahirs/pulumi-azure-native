// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.databoxedge.outputs;

import com.pulumi.azurenative.databoxedge.outputs.MetricDimensionResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class MetricCounterResponse {
    /**
     * @return The additional dimensions to be added to metric.
     * 
     */
    private @Nullable List<MetricDimensionResponse> additionalDimensions;
    /**
     * @return The dimension filter.
     * 
     */
    private @Nullable List<MetricDimensionResponse> dimensionFilter;
    /**
     * @return The instance from which counter should be collected.
     * 
     */
    private @Nullable String instance;
    /**
     * @return The counter name.
     * 
     */
    private String name;

    private MetricCounterResponse() {}
    /**
     * @return The additional dimensions to be added to metric.
     * 
     */
    public List<MetricDimensionResponse> additionalDimensions() {
        return this.additionalDimensions == null ? List.of() : this.additionalDimensions;
    }
    /**
     * @return The dimension filter.
     * 
     */
    public List<MetricDimensionResponse> dimensionFilter() {
        return this.dimensionFilter == null ? List.of() : this.dimensionFilter;
    }
    /**
     * @return The instance from which counter should be collected.
     * 
     */
    public Optional<String> instance() {
        return Optional.ofNullable(this.instance);
    }
    /**
     * @return The counter name.
     * 
     */
    public String name() {
        return this.name;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MetricCounterResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<MetricDimensionResponse> additionalDimensions;
        private @Nullable List<MetricDimensionResponse> dimensionFilter;
        private @Nullable String instance;
        private String name;
        public Builder() {}
        public Builder(MetricCounterResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.additionalDimensions = defaults.additionalDimensions;
    	      this.dimensionFilter = defaults.dimensionFilter;
    	      this.instance = defaults.instance;
    	      this.name = defaults.name;
        }

        @CustomType.Setter
        public Builder additionalDimensions(@Nullable List<MetricDimensionResponse> additionalDimensions) {
            this.additionalDimensions = additionalDimensions;
            return this;
        }
        public Builder additionalDimensions(MetricDimensionResponse... additionalDimensions) {
            return additionalDimensions(List.of(additionalDimensions));
        }
        @CustomType.Setter
        public Builder dimensionFilter(@Nullable List<MetricDimensionResponse> dimensionFilter) {
            this.dimensionFilter = dimensionFilter;
            return this;
        }
        public Builder dimensionFilter(MetricDimensionResponse... dimensionFilter) {
            return dimensionFilter(List.of(dimensionFilter));
        }
        @CustomType.Setter
        public Builder instance(@Nullable String instance) {
            this.instance = instance;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public MetricCounterResponse build() {
            final var o = new MetricCounterResponse();
            o.additionalDimensions = additionalDimensions;
            o.dimensionFilter = dimensionFilter;
            o.instance = instance;
            o.name = name;
            return o;
        }
    }
}
