// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.containerservice;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TrustedAccessRoleBindingArgs extends com.pulumi.resources.ResourceArgs {

    public static final TrustedAccessRoleBindingArgs Empty = new TrustedAccessRoleBindingArgs();

    /**
     * The name of the resource group. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group. The name is case insensitive.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the managed cluster resource.
     * 
     */
    @Import(name="resourceName", required=true)
    private Output<String> resourceName;

    /**
     * @return The name of the managed cluster resource.
     * 
     */
    public Output<String> resourceName() {
        return this.resourceName;
    }

    /**
     * A list of roles to bind, each item is a resource type qualified role name. For example: &#39;Microsoft.MachineLearningServices/workspaces/reader&#39;.
     * 
     */
    @Import(name="roles", required=true)
    private Output<List<String>> roles;

    /**
     * @return A list of roles to bind, each item is a resource type qualified role name. For example: &#39;Microsoft.MachineLearningServices/workspaces/reader&#39;.
     * 
     */
    public Output<List<String>> roles() {
        return this.roles;
    }

    /**
     * The ARM resource ID of source resource that trusted access is configured for.
     * 
     */
    @Import(name="sourceResourceId", required=true)
    private Output<String> sourceResourceId;

    /**
     * @return The ARM resource ID of source resource that trusted access is configured for.
     * 
     */
    public Output<String> sourceResourceId() {
        return this.sourceResourceId;
    }

    /**
     * The name of trusted access role binding.
     * 
     */
    @Import(name="trustedAccessRoleBindingName")
    private @Nullable Output<String> trustedAccessRoleBindingName;

    /**
     * @return The name of trusted access role binding.
     * 
     */
    public Optional<Output<String>> trustedAccessRoleBindingName() {
        return Optional.ofNullable(this.trustedAccessRoleBindingName);
    }

    private TrustedAccessRoleBindingArgs() {}

    private TrustedAccessRoleBindingArgs(TrustedAccessRoleBindingArgs $) {
        this.resourceGroupName = $.resourceGroupName;
        this.resourceName = $.resourceName;
        this.roles = $.roles;
        this.sourceResourceId = $.sourceResourceId;
        this.trustedAccessRoleBindingName = $.trustedAccessRoleBindingName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TrustedAccessRoleBindingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TrustedAccessRoleBindingArgs $;

        public Builder() {
            $ = new TrustedAccessRoleBindingArgs();
        }

        public Builder(TrustedAccessRoleBindingArgs defaults) {
            $ = new TrustedAccessRoleBindingArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param resourceGroupName The name of the resource group. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param resourceName The name of the managed cluster resource.
         * 
         * @return builder
         * 
         */
        public Builder resourceName(Output<String> resourceName) {
            $.resourceName = resourceName;
            return this;
        }

        /**
         * @param resourceName The name of the managed cluster resource.
         * 
         * @return builder
         * 
         */
        public Builder resourceName(String resourceName) {
            return resourceName(Output.of(resourceName));
        }

        /**
         * @param roles A list of roles to bind, each item is a resource type qualified role name. For example: &#39;Microsoft.MachineLearningServices/workspaces/reader&#39;.
         * 
         * @return builder
         * 
         */
        public Builder roles(Output<List<String>> roles) {
            $.roles = roles;
            return this;
        }

        /**
         * @param roles A list of roles to bind, each item is a resource type qualified role name. For example: &#39;Microsoft.MachineLearningServices/workspaces/reader&#39;.
         * 
         * @return builder
         * 
         */
        public Builder roles(List<String> roles) {
            return roles(Output.of(roles));
        }

        /**
         * @param roles A list of roles to bind, each item is a resource type qualified role name. For example: &#39;Microsoft.MachineLearningServices/workspaces/reader&#39;.
         * 
         * @return builder
         * 
         */
        public Builder roles(String... roles) {
            return roles(List.of(roles));
        }

        /**
         * @param sourceResourceId The ARM resource ID of source resource that trusted access is configured for.
         * 
         * @return builder
         * 
         */
        public Builder sourceResourceId(Output<String> sourceResourceId) {
            $.sourceResourceId = sourceResourceId;
            return this;
        }

        /**
         * @param sourceResourceId The ARM resource ID of source resource that trusted access is configured for.
         * 
         * @return builder
         * 
         */
        public Builder sourceResourceId(String sourceResourceId) {
            return sourceResourceId(Output.of(sourceResourceId));
        }

        /**
         * @param trustedAccessRoleBindingName The name of trusted access role binding.
         * 
         * @return builder
         * 
         */
        public Builder trustedAccessRoleBindingName(@Nullable Output<String> trustedAccessRoleBindingName) {
            $.trustedAccessRoleBindingName = trustedAccessRoleBindingName;
            return this;
        }

        /**
         * @param trustedAccessRoleBindingName The name of trusted access role binding.
         * 
         * @return builder
         * 
         */
        public Builder trustedAccessRoleBindingName(String trustedAccessRoleBindingName) {
            return trustedAccessRoleBindingName(Output.of(trustedAccessRoleBindingName));
        }

        public TrustedAccessRoleBindingArgs build() {
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.resourceName = Objects.requireNonNull($.resourceName, "expected parameter 'resourceName' to be non-null");
            $.roles = Objects.requireNonNull($.roles, "expected parameter 'roles' to be non-null");
            $.sourceResourceId = Objects.requireNonNull($.sourceResourceId, "expected parameter 'sourceResourceId' to be non-null");
            return $;
        }
    }

}
