// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datafactory.outputs;

import com.pulumi.azurenative.datafactory.outputs.AzureKeyVaultSecretReferenceResponse;
import com.pulumi.azurenative.datafactory.outputs.IntegrationRuntimeReferenceResponse;
import com.pulumi.azurenative.datafactory.outputs.ParameterSpecificationResponse;
import com.pulumi.azurenative.datafactory.outputs.SecureStringResponse;
import com.pulumi.core.Either;
import com.pulumi.core.annotations.CustomType;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GoogleBigQueryLinkedServiceResponse {
    /**
     * @return A comma-separated list of public BigQuery projects to access.
     * 
     */
    private @Nullable Object additionalProjects;
    /**
     * @return List of tags that can be used for describing the linked service.
     * 
     */
    private @Nullable List<Object> annotations;
    /**
     * @return The OAuth 2.0 authentication mechanism used for authentication. ServiceAuthentication can only be used on self-hosted IR.
     * 
     */
    private String authenticationType;
    /**
     * @return The client id of the google application used to acquire the refresh token. Type: string (or Expression with resultType string).
     * 
     */
    private @Nullable Object clientId;
    /**
     * @return The client secret of the google application used to acquire the refresh token.
     * 
     */
    private @Nullable Either<AzureKeyVaultSecretReferenceResponse,SecureStringResponse> clientSecret;
    /**
     * @return The integration runtime reference.
     * 
     */
    private @Nullable IntegrationRuntimeReferenceResponse connectVia;
    /**
     * @return Linked service description.
     * 
     */
    private @Nullable String description;
    /**
     * @return The service account email ID that is used for ServiceAuthentication and can only be used on self-hosted IR.
     * 
     */
    private @Nullable Object email;
    /**
     * @return The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
     * 
     */
    private @Nullable Object encryptedCredential;
    /**
     * @return The full path to the .p12 key file that is used to authenticate the service account email address and can only be used on self-hosted IR.
     * 
     */
    private @Nullable Object keyFilePath;
    /**
     * @return Parameters for linked service.
     * 
     */
    private @Nullable Map<String,ParameterSpecificationResponse> parameters;
    /**
     * @return The default BigQuery project to query against.
     * 
     */
    private Object project;
    /**
     * @return The refresh token obtained from Google for authorizing access to BigQuery for UserAuthentication.
     * 
     */
    private @Nullable Either<AzureKeyVaultSecretReferenceResponse,SecureStringResponse> refreshToken;
    /**
     * @return Whether to request access to Google Drive. Allowing Google Drive access enables support for federated tables that combine BigQuery data with data from Google Drive. The default value is false.
     * 
     */
    private @Nullable Object requestGoogleDriveScope;
    /**
     * @return The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.
     * 
     */
    private @Nullable Object trustedCertPath;
    /**
     * @return Type of linked service.
     * Expected value is &#39;GoogleBigQuery&#39;.
     * 
     */
    private String type;
    /**
     * @return Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.
     * 
     */
    private @Nullable Object useSystemTrustStore;

    private GoogleBigQueryLinkedServiceResponse() {}
    /**
     * @return A comma-separated list of public BigQuery projects to access.
     * 
     */
    public Optional<Object> additionalProjects() {
        return Optional.ofNullable(this.additionalProjects);
    }
    /**
     * @return List of tags that can be used for describing the linked service.
     * 
     */
    public List<Object> annotations() {
        return this.annotations == null ? List.of() : this.annotations;
    }
    /**
     * @return The OAuth 2.0 authentication mechanism used for authentication. ServiceAuthentication can only be used on self-hosted IR.
     * 
     */
    public String authenticationType() {
        return this.authenticationType;
    }
    /**
     * @return The client id of the google application used to acquire the refresh token. Type: string (or Expression with resultType string).
     * 
     */
    public Optional<Object> clientId() {
        return Optional.ofNullable(this.clientId);
    }
    /**
     * @return The client secret of the google application used to acquire the refresh token.
     * 
     */
    public Optional<Either<AzureKeyVaultSecretReferenceResponse,SecureStringResponse>> clientSecret() {
        return Optional.ofNullable(this.clientSecret);
    }
    /**
     * @return The integration runtime reference.
     * 
     */
    public Optional<IntegrationRuntimeReferenceResponse> connectVia() {
        return Optional.ofNullable(this.connectVia);
    }
    /**
     * @return Linked service description.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return The service account email ID that is used for ServiceAuthentication and can only be used on self-hosted IR.
     * 
     */
    public Optional<Object> email() {
        return Optional.ofNullable(this.email);
    }
    /**
     * @return The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
     * 
     */
    public Optional<Object> encryptedCredential() {
        return Optional.ofNullable(this.encryptedCredential);
    }
    /**
     * @return The full path to the .p12 key file that is used to authenticate the service account email address and can only be used on self-hosted IR.
     * 
     */
    public Optional<Object> keyFilePath() {
        return Optional.ofNullable(this.keyFilePath);
    }
    /**
     * @return Parameters for linked service.
     * 
     */
    public Map<String,ParameterSpecificationResponse> parameters() {
        return this.parameters == null ? Map.of() : this.parameters;
    }
    /**
     * @return The default BigQuery project to query against.
     * 
     */
    public Object project() {
        return this.project;
    }
    /**
     * @return The refresh token obtained from Google for authorizing access to BigQuery for UserAuthentication.
     * 
     */
    public Optional<Either<AzureKeyVaultSecretReferenceResponse,SecureStringResponse>> refreshToken() {
        return Optional.ofNullable(this.refreshToken);
    }
    /**
     * @return Whether to request access to Google Drive. Allowing Google Drive access enables support for federated tables that combine BigQuery data with data from Google Drive. The default value is false.
     * 
     */
    public Optional<Object> requestGoogleDriveScope() {
        return Optional.ofNullable(this.requestGoogleDriveScope);
    }
    /**
     * @return The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.
     * 
     */
    public Optional<Object> trustedCertPath() {
        return Optional.ofNullable(this.trustedCertPath);
    }
    /**
     * @return Type of linked service.
     * Expected value is &#39;GoogleBigQuery&#39;.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.
     * 
     */
    public Optional<Object> useSystemTrustStore() {
        return Optional.ofNullable(this.useSystemTrustStore);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GoogleBigQueryLinkedServiceResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Object additionalProjects;
        private @Nullable List<Object> annotations;
        private String authenticationType;
        private @Nullable Object clientId;
        private @Nullable Either<AzureKeyVaultSecretReferenceResponse,SecureStringResponse> clientSecret;
        private @Nullable IntegrationRuntimeReferenceResponse connectVia;
        private @Nullable String description;
        private @Nullable Object email;
        private @Nullable Object encryptedCredential;
        private @Nullable Object keyFilePath;
        private @Nullable Map<String,ParameterSpecificationResponse> parameters;
        private Object project;
        private @Nullable Either<AzureKeyVaultSecretReferenceResponse,SecureStringResponse> refreshToken;
        private @Nullable Object requestGoogleDriveScope;
        private @Nullable Object trustedCertPath;
        private String type;
        private @Nullable Object useSystemTrustStore;
        public Builder() {}
        public Builder(GoogleBigQueryLinkedServiceResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.additionalProjects = defaults.additionalProjects;
    	      this.annotations = defaults.annotations;
    	      this.authenticationType = defaults.authenticationType;
    	      this.clientId = defaults.clientId;
    	      this.clientSecret = defaults.clientSecret;
    	      this.connectVia = defaults.connectVia;
    	      this.description = defaults.description;
    	      this.email = defaults.email;
    	      this.encryptedCredential = defaults.encryptedCredential;
    	      this.keyFilePath = defaults.keyFilePath;
    	      this.parameters = defaults.parameters;
    	      this.project = defaults.project;
    	      this.refreshToken = defaults.refreshToken;
    	      this.requestGoogleDriveScope = defaults.requestGoogleDriveScope;
    	      this.trustedCertPath = defaults.trustedCertPath;
    	      this.type = defaults.type;
    	      this.useSystemTrustStore = defaults.useSystemTrustStore;
        }

        @CustomType.Setter
        public Builder additionalProjects(@Nullable Object additionalProjects) {
            this.additionalProjects = additionalProjects;
            return this;
        }
        @CustomType.Setter
        public Builder annotations(@Nullable List<Object> annotations) {
            this.annotations = annotations;
            return this;
        }
        public Builder annotations(Object... annotations) {
            return annotations(List.of(annotations));
        }
        @CustomType.Setter
        public Builder authenticationType(String authenticationType) {
            this.authenticationType = Objects.requireNonNull(authenticationType);
            return this;
        }
        @CustomType.Setter
        public Builder clientId(@Nullable Object clientId) {
            this.clientId = clientId;
            return this;
        }
        @CustomType.Setter
        public Builder clientSecret(@Nullable Either<AzureKeyVaultSecretReferenceResponse,SecureStringResponse> clientSecret) {
            this.clientSecret = clientSecret;
            return this;
        }
        @CustomType.Setter
        public Builder connectVia(@Nullable IntegrationRuntimeReferenceResponse connectVia) {
            this.connectVia = connectVia;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder email(@Nullable Object email) {
            this.email = email;
            return this;
        }
        @CustomType.Setter
        public Builder encryptedCredential(@Nullable Object encryptedCredential) {
            this.encryptedCredential = encryptedCredential;
            return this;
        }
        @CustomType.Setter
        public Builder keyFilePath(@Nullable Object keyFilePath) {
            this.keyFilePath = keyFilePath;
            return this;
        }
        @CustomType.Setter
        public Builder parameters(@Nullable Map<String,ParameterSpecificationResponse> parameters) {
            this.parameters = parameters;
            return this;
        }
        @CustomType.Setter
        public Builder project(Object project) {
            this.project = Objects.requireNonNull(project);
            return this;
        }
        @CustomType.Setter
        public Builder refreshToken(@Nullable Either<AzureKeyVaultSecretReferenceResponse,SecureStringResponse> refreshToken) {
            this.refreshToken = refreshToken;
            return this;
        }
        @CustomType.Setter
        public Builder requestGoogleDriveScope(@Nullable Object requestGoogleDriveScope) {
            this.requestGoogleDriveScope = requestGoogleDriveScope;
            return this;
        }
        @CustomType.Setter
        public Builder trustedCertPath(@Nullable Object trustedCertPath) {
            this.trustedCertPath = trustedCertPath;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder useSystemTrustStore(@Nullable Object useSystemTrustStore) {
            this.useSystemTrustStore = useSystemTrustStore;
            return this;
        }
        public GoogleBigQueryLinkedServiceResponse build() {
            final var o = new GoogleBigQueryLinkedServiceResponse();
            o.additionalProjects = additionalProjects;
            o.annotations = annotations;
            o.authenticationType = authenticationType;
            o.clientId = clientId;
            o.clientSecret = clientSecret;
            o.connectVia = connectVia;
            o.description = description;
            o.email = email;
            o.encryptedCredential = encryptedCredential;
            o.keyFilePath = keyFilePath;
            o.parameters = parameters;
            o.project = project;
            o.refreshToken = refreshToken;
            o.requestGoogleDriveScope = requestGoogleDriveScope;
            o.trustedCertPath = trustedCertPath;
            o.type = type;
            o.useSystemTrustStore = useSystemTrustStore;
            return o;
        }
    }
}
