// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datafactory.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetGlobalParameterArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetGlobalParameterArgs Empty = new GetGlobalParameterArgs();

    /**
     * The factory name.
     * 
     */
    @Import(name="factoryName", required=true)
    private Output<String> factoryName;

    /**
     * @return The factory name.
     * 
     */
    public Output<String> factoryName() {
        return this.factoryName;
    }

    /**
     * The global parameter name.
     * 
     */
    @Import(name="globalParameterName", required=true)
    private Output<String> globalParameterName;

    /**
     * @return The global parameter name.
     * 
     */
    public Output<String> globalParameterName() {
        return this.globalParameterName;
    }

    /**
     * The resource group name.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The resource group name.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    private GetGlobalParameterArgs() {}

    private GetGlobalParameterArgs(GetGlobalParameterArgs $) {
        this.factoryName = $.factoryName;
        this.globalParameterName = $.globalParameterName;
        this.resourceGroupName = $.resourceGroupName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetGlobalParameterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetGlobalParameterArgs $;

        public Builder() {
            $ = new GetGlobalParameterArgs();
        }

        public Builder(GetGlobalParameterArgs defaults) {
            $ = new GetGlobalParameterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param factoryName The factory name.
         * 
         * @return builder
         * 
         */
        public Builder factoryName(Output<String> factoryName) {
            $.factoryName = factoryName;
            return this;
        }

        /**
         * @param factoryName The factory name.
         * 
         * @return builder
         * 
         */
        public Builder factoryName(String factoryName) {
            return factoryName(Output.of(factoryName));
        }

        /**
         * @param globalParameterName The global parameter name.
         * 
         * @return builder
         * 
         */
        public Builder globalParameterName(Output<String> globalParameterName) {
            $.globalParameterName = globalParameterName;
            return this;
        }

        /**
         * @param globalParameterName The global parameter name.
         * 
         * @return builder
         * 
         */
        public Builder globalParameterName(String globalParameterName) {
            return globalParameterName(Output.of(globalParameterName));
        }

        /**
         * @param resourceGroupName The resource group name.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The resource group name.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public GetGlobalParameterArgs build() {
            $.factoryName = Objects.requireNonNull($.factoryName, "expected parameter 'factoryName' to be non-null");
            $.globalParameterName = Objects.requireNonNull($.globalParameterName, "expected parameter 'globalParameterName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
