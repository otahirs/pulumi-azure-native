// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.devtestlab.outputs;

import com.pulumi.azurenative.devtestlab.outputs.SharedPublicIpAddressConfigurationResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class NetworkInterfacePropertiesResponse {
    /**
     * @return The DNS name.
     * 
     */
    private @Nullable String dnsName;
    /**
     * @return The private IP address.
     * 
     */
    private @Nullable String privateIpAddress;
    /**
     * @return The public IP address.
     * 
     */
    private @Nullable String publicIpAddress;
    /**
     * @return The resource ID of the public IP address.
     * 
     */
    private @Nullable String publicIpAddressId;
    /**
     * @return The RdpAuthority property is a server DNS host name or IP address followed by the service port number for RDP (Remote Desktop Protocol).
     * 
     */
    private @Nullable String rdpAuthority;
    /**
     * @return The configuration for sharing a public IP address across multiple virtual machines.
     * 
     */
    private @Nullable SharedPublicIpAddressConfigurationResponse sharedPublicIpAddressConfiguration;
    /**
     * @return The SshAuthority property is a server DNS host name or IP address followed by the service port number for SSH.
     * 
     */
    private @Nullable String sshAuthority;
    /**
     * @return The resource ID of the sub net.
     * 
     */
    private @Nullable String subnetId;
    /**
     * @return The resource ID of the virtual network.
     * 
     */
    private @Nullable String virtualNetworkId;

    private NetworkInterfacePropertiesResponse() {}
    /**
     * @return The DNS name.
     * 
     */
    public Optional<String> dnsName() {
        return Optional.ofNullable(this.dnsName);
    }
    /**
     * @return The private IP address.
     * 
     */
    public Optional<String> privateIpAddress() {
        return Optional.ofNullable(this.privateIpAddress);
    }
    /**
     * @return The public IP address.
     * 
     */
    public Optional<String> publicIpAddress() {
        return Optional.ofNullable(this.publicIpAddress);
    }
    /**
     * @return The resource ID of the public IP address.
     * 
     */
    public Optional<String> publicIpAddressId() {
        return Optional.ofNullable(this.publicIpAddressId);
    }
    /**
     * @return The RdpAuthority property is a server DNS host name or IP address followed by the service port number for RDP (Remote Desktop Protocol).
     * 
     */
    public Optional<String> rdpAuthority() {
        return Optional.ofNullable(this.rdpAuthority);
    }
    /**
     * @return The configuration for sharing a public IP address across multiple virtual machines.
     * 
     */
    public Optional<SharedPublicIpAddressConfigurationResponse> sharedPublicIpAddressConfiguration() {
        return Optional.ofNullable(this.sharedPublicIpAddressConfiguration);
    }
    /**
     * @return The SshAuthority property is a server DNS host name or IP address followed by the service port number for SSH.
     * 
     */
    public Optional<String> sshAuthority() {
        return Optional.ofNullable(this.sshAuthority);
    }
    /**
     * @return The resource ID of the sub net.
     * 
     */
    public Optional<String> subnetId() {
        return Optional.ofNullable(this.subnetId);
    }
    /**
     * @return The resource ID of the virtual network.
     * 
     */
    public Optional<String> virtualNetworkId() {
        return Optional.ofNullable(this.virtualNetworkId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NetworkInterfacePropertiesResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String dnsName;
        private @Nullable String privateIpAddress;
        private @Nullable String publicIpAddress;
        private @Nullable String publicIpAddressId;
        private @Nullable String rdpAuthority;
        private @Nullable SharedPublicIpAddressConfigurationResponse sharedPublicIpAddressConfiguration;
        private @Nullable String sshAuthority;
        private @Nullable String subnetId;
        private @Nullable String virtualNetworkId;
        public Builder() {}
        public Builder(NetworkInterfacePropertiesResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dnsName = defaults.dnsName;
    	      this.privateIpAddress = defaults.privateIpAddress;
    	      this.publicIpAddress = defaults.publicIpAddress;
    	      this.publicIpAddressId = defaults.publicIpAddressId;
    	      this.rdpAuthority = defaults.rdpAuthority;
    	      this.sharedPublicIpAddressConfiguration = defaults.sharedPublicIpAddressConfiguration;
    	      this.sshAuthority = defaults.sshAuthority;
    	      this.subnetId = defaults.subnetId;
    	      this.virtualNetworkId = defaults.virtualNetworkId;
        }

        @CustomType.Setter
        public Builder dnsName(@Nullable String dnsName) {
            this.dnsName = dnsName;
            return this;
        }
        @CustomType.Setter
        public Builder privateIpAddress(@Nullable String privateIpAddress) {
            this.privateIpAddress = privateIpAddress;
            return this;
        }
        @CustomType.Setter
        public Builder publicIpAddress(@Nullable String publicIpAddress) {
            this.publicIpAddress = publicIpAddress;
            return this;
        }
        @CustomType.Setter
        public Builder publicIpAddressId(@Nullable String publicIpAddressId) {
            this.publicIpAddressId = publicIpAddressId;
            return this;
        }
        @CustomType.Setter
        public Builder rdpAuthority(@Nullable String rdpAuthority) {
            this.rdpAuthority = rdpAuthority;
            return this;
        }
        @CustomType.Setter
        public Builder sharedPublicIpAddressConfiguration(@Nullable SharedPublicIpAddressConfigurationResponse sharedPublicIpAddressConfiguration) {
            this.sharedPublicIpAddressConfiguration = sharedPublicIpAddressConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder sshAuthority(@Nullable String sshAuthority) {
            this.sshAuthority = sshAuthority;
            return this;
        }
        @CustomType.Setter
        public Builder subnetId(@Nullable String subnetId) {
            this.subnetId = subnetId;
            return this;
        }
        @CustomType.Setter
        public Builder virtualNetworkId(@Nullable String virtualNetworkId) {
            this.virtualNetworkId = virtualNetworkId;
            return this;
        }
        public NetworkInterfacePropertiesResponse build() {
            final var o = new NetworkInterfacePropertiesResponse();
            o.dnsName = dnsName;
            o.privateIpAddress = privateIpAddress;
            o.publicIpAddress = publicIpAddress;
            o.publicIpAddressId = publicIpAddressId;
            o.rdpAuthority = rdpAuthority;
            o.sharedPublicIpAddressConfiguration = sharedPublicIpAddressConfiguration;
            o.sshAuthority = sshAuthority;
            o.subnetId = subnetId;
            o.virtualNetworkId = virtualNetworkId;
            return o;
        }
    }
}
