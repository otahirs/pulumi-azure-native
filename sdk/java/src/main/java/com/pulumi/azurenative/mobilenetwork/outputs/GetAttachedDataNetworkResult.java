// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.mobilenetwork.outputs;

import com.pulumi.azurenative.mobilenetwork.outputs.InterfacePropertiesResponse;
import com.pulumi.azurenative.mobilenetwork.outputs.NaptConfigurationResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetAttachedDataNetworkResult {
    /**
     * @return The timestamp of resource creation (UTC).
     * 
     */
    private @Nullable String createdAt;
    /**
     * @return The identity that created the resource.
     * 
     */
    private @Nullable String createdBy;
    /**
     * @return The type of identity that created the resource.
     * 
     */
    private @Nullable String createdByType;
    /**
     * @return Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    private String id;
    /**
     * @return The timestamp of resource last modification (UTC)
     * 
     */
    private @Nullable String lastModifiedAt;
    /**
     * @return The identity that last modified the resource.
     * 
     */
    private @Nullable String lastModifiedBy;
    /**
     * @return The type of identity that last modified the resource.
     * 
     */
    private @Nullable String lastModifiedByType;
    /**
     * @return The geo-location where the resource lives
     * 
     */
    private String location;
    /**
     * @return The name of the resource
     * 
     */
    private String name;
    /**
     * @return The Network Address and Port Translation configuration.
     * If not specified the attached data network uses a default NAPT configuration with NAPT enabled.
     * 
     */
    private @Nullable NaptConfigurationResponse naptConfiguration;
    /**
     * @return The provisioning state of the attached data network resource.
     * 
     */
    private String provisioningState;
    /**
     * @return Resource tags.
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    private String type;
    /**
     * @return The user equipment address pool prefixes for the attached data network that are dynamically assigned by the core to UEs when they set up a PDU session.
     * At least one of userEquipmentAddressPoolPrefix and userEquipmentStaticAddressPoolPrefix must be defined. If both are defined then they must be the same size.
     * 
     */
    private @Nullable List<String> userEquipmentAddressPoolPrefix;
    /**
     * @return The user equipment address pool prefixes for the attached data network that are statically assigned by the core to UEs when they set up a PDU session.
     * The mapping of static IP to sim is configured in staticIpConfiguration on the sim resource.
     * At least one of userEquipmentAddressPoolPrefix and userEquipmentStaticAddressPoolPrefix must be defined. If both are defined then they must be the same size.
     * 
     */
    private @Nullable List<String> userEquipmentStaticAddressPoolPrefix;
    /**
     * @return The user plane interface on the data network. In 5G networks this is called as N6 interface whereas in 4G networks this is called as SGi interface.
     * 
     */
    private InterfacePropertiesResponse userPlaneDataInterface;

    private GetAttachedDataNetworkResult() {}
    /**
     * @return The timestamp of resource creation (UTC).
     * 
     */
    public Optional<String> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }
    /**
     * @return The identity that created the resource.
     * 
     */
    public Optional<String> createdBy() {
        return Optional.ofNullable(this.createdBy);
    }
    /**
     * @return The type of identity that created the resource.
     * 
     */
    public Optional<String> createdByType() {
        return Optional.ofNullable(this.createdByType);
    }
    /**
     * @return Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The timestamp of resource last modification (UTC)
     * 
     */
    public Optional<String> lastModifiedAt() {
        return Optional.ofNullable(this.lastModifiedAt);
    }
    /**
     * @return The identity that last modified the resource.
     * 
     */
    public Optional<String> lastModifiedBy() {
        return Optional.ofNullable(this.lastModifiedBy);
    }
    /**
     * @return The type of identity that last modified the resource.
     * 
     */
    public Optional<String> lastModifiedByType() {
        return Optional.ofNullable(this.lastModifiedByType);
    }
    /**
     * @return The geo-location where the resource lives
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return The name of the resource
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The Network Address and Port Translation configuration.
     * If not specified the attached data network uses a default NAPT configuration with NAPT enabled.
     * 
     */
    public Optional<NaptConfigurationResponse> naptConfiguration() {
        return Optional.ofNullable(this.naptConfiguration);
    }
    /**
     * @return The provisioning state of the attached data network resource.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * @return Resource tags.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return The user equipment address pool prefixes for the attached data network that are dynamically assigned by the core to UEs when they set up a PDU session.
     * At least one of userEquipmentAddressPoolPrefix and userEquipmentStaticAddressPoolPrefix must be defined. If both are defined then they must be the same size.
     * 
     */
    public List<String> userEquipmentAddressPoolPrefix() {
        return this.userEquipmentAddressPoolPrefix == null ? List.of() : this.userEquipmentAddressPoolPrefix;
    }
    /**
     * @return The user equipment address pool prefixes for the attached data network that are statically assigned by the core to UEs when they set up a PDU session.
     * The mapping of static IP to sim is configured in staticIpConfiguration on the sim resource.
     * At least one of userEquipmentAddressPoolPrefix and userEquipmentStaticAddressPoolPrefix must be defined. If both are defined then they must be the same size.
     * 
     */
    public List<String> userEquipmentStaticAddressPoolPrefix() {
        return this.userEquipmentStaticAddressPoolPrefix == null ? List.of() : this.userEquipmentStaticAddressPoolPrefix;
    }
    /**
     * @return The user plane interface on the data network. In 5G networks this is called as N6 interface whereas in 4G networks this is called as SGi interface.
     * 
     */
    public InterfacePropertiesResponse userPlaneDataInterface() {
        return this.userPlaneDataInterface;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAttachedDataNetworkResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String createdAt;
        private @Nullable String createdBy;
        private @Nullable String createdByType;
        private String id;
        private @Nullable String lastModifiedAt;
        private @Nullable String lastModifiedBy;
        private @Nullable String lastModifiedByType;
        private String location;
        private String name;
        private @Nullable NaptConfigurationResponse naptConfiguration;
        private String provisioningState;
        private @Nullable Map<String,String> tags;
        private String type;
        private @Nullable List<String> userEquipmentAddressPoolPrefix;
        private @Nullable List<String> userEquipmentStaticAddressPoolPrefix;
        private InterfacePropertiesResponse userPlaneDataInterface;
        public Builder() {}
        public Builder(GetAttachedDataNetworkResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createdAt = defaults.createdAt;
    	      this.createdBy = defaults.createdBy;
    	      this.createdByType = defaults.createdByType;
    	      this.id = defaults.id;
    	      this.lastModifiedAt = defaults.lastModifiedAt;
    	      this.lastModifiedBy = defaults.lastModifiedBy;
    	      this.lastModifiedByType = defaults.lastModifiedByType;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.naptConfiguration = defaults.naptConfiguration;
    	      this.provisioningState = defaults.provisioningState;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
    	      this.userEquipmentAddressPoolPrefix = defaults.userEquipmentAddressPoolPrefix;
    	      this.userEquipmentStaticAddressPoolPrefix = defaults.userEquipmentStaticAddressPoolPrefix;
    	      this.userPlaneDataInterface = defaults.userPlaneDataInterface;
        }

        @CustomType.Setter
        public Builder createdAt(@Nullable String createdAt) {
            this.createdAt = createdAt;
            return this;
        }
        @CustomType.Setter
        public Builder createdBy(@Nullable String createdBy) {
            this.createdBy = createdBy;
            return this;
        }
        @CustomType.Setter
        public Builder createdByType(@Nullable String createdByType) {
            this.createdByType = createdByType;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder lastModifiedAt(@Nullable String lastModifiedAt) {
            this.lastModifiedAt = lastModifiedAt;
            return this;
        }
        @CustomType.Setter
        public Builder lastModifiedBy(@Nullable String lastModifiedBy) {
            this.lastModifiedBy = lastModifiedBy;
            return this;
        }
        @CustomType.Setter
        public Builder lastModifiedByType(@Nullable String lastModifiedByType) {
            this.lastModifiedByType = lastModifiedByType;
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder naptConfiguration(@Nullable NaptConfigurationResponse naptConfiguration) {
            this.naptConfiguration = naptConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder userEquipmentAddressPoolPrefix(@Nullable List<String> userEquipmentAddressPoolPrefix) {
            this.userEquipmentAddressPoolPrefix = userEquipmentAddressPoolPrefix;
            return this;
        }
        public Builder userEquipmentAddressPoolPrefix(String... userEquipmentAddressPoolPrefix) {
            return userEquipmentAddressPoolPrefix(List.of(userEquipmentAddressPoolPrefix));
        }
        @CustomType.Setter
        public Builder userEquipmentStaticAddressPoolPrefix(@Nullable List<String> userEquipmentStaticAddressPoolPrefix) {
            this.userEquipmentStaticAddressPoolPrefix = userEquipmentStaticAddressPoolPrefix;
            return this;
        }
        public Builder userEquipmentStaticAddressPoolPrefix(String... userEquipmentStaticAddressPoolPrefix) {
            return userEquipmentStaticAddressPoolPrefix(List.of(userEquipmentStaticAddressPoolPrefix));
        }
        @CustomType.Setter
        public Builder userPlaneDataInterface(InterfacePropertiesResponse userPlaneDataInterface) {
            this.userPlaneDataInterface = Objects.requireNonNull(userPlaneDataInterface);
            return this;
        }
        public GetAttachedDataNetworkResult build() {
            final var o = new GetAttachedDataNetworkResult();
            o.createdAt = createdAt;
            o.createdBy = createdBy;
            o.createdByType = createdByType;
            o.id = id;
            o.lastModifiedAt = lastModifiedAt;
            o.lastModifiedBy = lastModifiedBy;
            o.lastModifiedByType = lastModifiedByType;
            o.location = location;
            o.name = name;
            o.naptConfiguration = naptConfiguration;
            o.provisioningState = provisioningState;
            o.tags = tags;
            o.type = type;
            o.userEquipmentAddressPoolPrefix = userEquipmentAddressPoolPrefix;
            o.userEquipmentStaticAddressPoolPrefix = userEquipmentStaticAddressPoolPrefix;
            o.userPlaneDataInterface = userPlaneDataInterface;
            return o;
        }
    }
}
