// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.networkfunction.inputs;

import com.pulumi.azurenative.networkfunction.enums.SourceType;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Ingestion policy properties.
 * 
 */
public final class IngestionSourcesPropertiesFormatArgs extends com.pulumi.resources.ResourceArgs {

    public static final IngestionSourcesPropertiesFormatArgs Empty = new IngestionSourcesPropertiesFormatArgs();

    /**
     * Resource ID.
     * 
     */
    @Import(name="resourceId")
    private @Nullable Output<String> resourceId;

    /**
     * @return Resource ID.
     * 
     */
    public Optional<Output<String>> resourceId() {
        return Optional.ofNullable(this.resourceId);
    }

    /**
     * Ingestion source type.
     * 
     */
    @Import(name="sourceType")
    private @Nullable Output<Either<String,SourceType>> sourceType;

    /**
     * @return Ingestion source type.
     * 
     */
    public Optional<Output<Either<String,SourceType>>> sourceType() {
        return Optional.ofNullable(this.sourceType);
    }

    private IngestionSourcesPropertiesFormatArgs() {}

    private IngestionSourcesPropertiesFormatArgs(IngestionSourcesPropertiesFormatArgs $) {
        this.resourceId = $.resourceId;
        this.sourceType = $.sourceType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IngestionSourcesPropertiesFormatArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IngestionSourcesPropertiesFormatArgs $;

        public Builder() {
            $ = new IngestionSourcesPropertiesFormatArgs();
        }

        public Builder(IngestionSourcesPropertiesFormatArgs defaults) {
            $ = new IngestionSourcesPropertiesFormatArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param resourceId Resource ID.
         * 
         * @return builder
         * 
         */
        public Builder resourceId(@Nullable Output<String> resourceId) {
            $.resourceId = resourceId;
            return this;
        }

        /**
         * @param resourceId Resource ID.
         * 
         * @return builder
         * 
         */
        public Builder resourceId(String resourceId) {
            return resourceId(Output.of(resourceId));
        }

        /**
         * @param sourceType Ingestion source type.
         * 
         * @return builder
         * 
         */
        public Builder sourceType(@Nullable Output<Either<String,SourceType>> sourceType) {
            $.sourceType = sourceType;
            return this;
        }

        /**
         * @param sourceType Ingestion source type.
         * 
         * @return builder
         * 
         */
        public Builder sourceType(Either<String,SourceType> sourceType) {
            return sourceType(Output.of(sourceType));
        }

        /**
         * @param sourceType Ingestion source type.
         * 
         * @return builder
         * 
         */
        public Builder sourceType(String sourceType) {
            return sourceType(Either.ofLeft(sourceType));
        }

        /**
         * @param sourceType Ingestion source type.
         * 
         * @return builder
         * 
         */
        public Builder sourceType(SourceType sourceType) {
            return sourceType(Either.ofRight(sourceType));
        }

        public IngestionSourcesPropertiesFormatArgs build() {
            return $;
        }
    }

}
