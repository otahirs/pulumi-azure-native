// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.outputs;

import com.pulumi.azurenative.network.outputs.ManagedServiceIdentityResponse;
import com.pulumi.azurenative.network.outputs.SubResourceResponse;
import com.pulumi.azurenative.network.outputs.VirtualApplianceNicPropertiesResponse;
import com.pulumi.azurenative.network.outputs.VirtualApplianceSkuPropertiesResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetNetworkVirtualApplianceResult {
    /**
     * @return Address Prefix.
     * 
     */
    private String addressPrefix;
    /**
     * @return BootStrapConfigurationBlobs storage URLs.
     * 
     */
    private @Nullable List<String> bootStrapConfigurationBlobs;
    /**
     * @return CloudInitConfiguration string in plain text.
     * 
     */
    private @Nullable String cloudInitConfiguration;
    /**
     * @return CloudInitConfigurationBlob storage URLs.
     * 
     */
    private @Nullable List<String> cloudInitConfigurationBlobs;
    /**
     * @return A unique read-only string that changes whenever the resource is updated.
     * 
     */
    private String etag;
    /**
     * @return Resource ID.
     * 
     */
    private @Nullable String id;
    /**
     * @return The service principal that has read access to cloud-init and config blob.
     * 
     */
    private @Nullable ManagedServiceIdentityResponse identity;
    /**
     * @return List of references to InboundSecurityRules.
     * 
     */
    private List<SubResourceResponse> inboundSecurityRules;
    /**
     * @return Resource location.
     * 
     */
    private @Nullable String location;
    /**
     * @return Resource name.
     * 
     */
    private String name;
    /**
     * @return Network Virtual Appliance SKU.
     * 
     */
    private @Nullable VirtualApplianceSkuPropertiesResponse nvaSku;
    /**
     * @return The provisioning state of the resource.
     * 
     */
    private String provisioningState;
    /**
     * @return Resource tags.
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return Resource type.
     * 
     */
    private String type;
    /**
     * @return VirtualAppliance ASN.
     * 
     */
    private @Nullable Double virtualApplianceAsn;
    /**
     * @return List of Virtual Appliance Network Interfaces.
     * 
     */
    private List<VirtualApplianceNicPropertiesResponse> virtualApplianceNics;
    /**
     * @return List of references to VirtualApplianceSite.
     * 
     */
    private List<SubResourceResponse> virtualApplianceSites;
    /**
     * @return The Virtual Hub where Network Virtual Appliance is being deployed.
     * 
     */
    private @Nullable SubResourceResponse virtualHub;

    private GetNetworkVirtualApplianceResult() {}
    /**
     * @return Address Prefix.
     * 
     */
    public String addressPrefix() {
        return this.addressPrefix;
    }
    /**
     * @return BootStrapConfigurationBlobs storage URLs.
     * 
     */
    public List<String> bootStrapConfigurationBlobs() {
        return this.bootStrapConfigurationBlobs == null ? List.of() : this.bootStrapConfigurationBlobs;
    }
    /**
     * @return CloudInitConfiguration string in plain text.
     * 
     */
    public Optional<String> cloudInitConfiguration() {
        return Optional.ofNullable(this.cloudInitConfiguration);
    }
    /**
     * @return CloudInitConfigurationBlob storage URLs.
     * 
     */
    public List<String> cloudInitConfigurationBlobs() {
        return this.cloudInitConfigurationBlobs == null ? List.of() : this.cloudInitConfigurationBlobs;
    }
    /**
     * @return A unique read-only string that changes whenever the resource is updated.
     * 
     */
    public String etag() {
        return this.etag;
    }
    /**
     * @return Resource ID.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The service principal that has read access to cloud-init and config blob.
     * 
     */
    public Optional<ManagedServiceIdentityResponse> identity() {
        return Optional.ofNullable(this.identity);
    }
    /**
     * @return List of references to InboundSecurityRules.
     * 
     */
    public List<SubResourceResponse> inboundSecurityRules() {
        return this.inboundSecurityRules;
    }
    /**
     * @return Resource location.
     * 
     */
    public Optional<String> location() {
        return Optional.ofNullable(this.location);
    }
    /**
     * @return Resource name.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Network Virtual Appliance SKU.
     * 
     */
    public Optional<VirtualApplianceSkuPropertiesResponse> nvaSku() {
        return Optional.ofNullable(this.nvaSku);
    }
    /**
     * @return The provisioning state of the resource.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * @return Resource tags.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return Resource type.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return VirtualAppliance ASN.
     * 
     */
    public Optional<Double> virtualApplianceAsn() {
        return Optional.ofNullable(this.virtualApplianceAsn);
    }
    /**
     * @return List of Virtual Appliance Network Interfaces.
     * 
     */
    public List<VirtualApplianceNicPropertiesResponse> virtualApplianceNics() {
        return this.virtualApplianceNics;
    }
    /**
     * @return List of references to VirtualApplianceSite.
     * 
     */
    public List<SubResourceResponse> virtualApplianceSites() {
        return this.virtualApplianceSites;
    }
    /**
     * @return The Virtual Hub where Network Virtual Appliance is being deployed.
     * 
     */
    public Optional<SubResourceResponse> virtualHub() {
        return Optional.ofNullable(this.virtualHub);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNetworkVirtualApplianceResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String addressPrefix;
        private @Nullable List<String> bootStrapConfigurationBlobs;
        private @Nullable String cloudInitConfiguration;
        private @Nullable List<String> cloudInitConfigurationBlobs;
        private String etag;
        private @Nullable String id;
        private @Nullable ManagedServiceIdentityResponse identity;
        private List<SubResourceResponse> inboundSecurityRules;
        private @Nullable String location;
        private String name;
        private @Nullable VirtualApplianceSkuPropertiesResponse nvaSku;
        private String provisioningState;
        private @Nullable Map<String,String> tags;
        private String type;
        private @Nullable Double virtualApplianceAsn;
        private List<VirtualApplianceNicPropertiesResponse> virtualApplianceNics;
        private List<SubResourceResponse> virtualApplianceSites;
        private @Nullable SubResourceResponse virtualHub;
        public Builder() {}
        public Builder(GetNetworkVirtualApplianceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.addressPrefix = defaults.addressPrefix;
    	      this.bootStrapConfigurationBlobs = defaults.bootStrapConfigurationBlobs;
    	      this.cloudInitConfiguration = defaults.cloudInitConfiguration;
    	      this.cloudInitConfigurationBlobs = defaults.cloudInitConfigurationBlobs;
    	      this.etag = defaults.etag;
    	      this.id = defaults.id;
    	      this.identity = defaults.identity;
    	      this.inboundSecurityRules = defaults.inboundSecurityRules;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.nvaSku = defaults.nvaSku;
    	      this.provisioningState = defaults.provisioningState;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
    	      this.virtualApplianceAsn = defaults.virtualApplianceAsn;
    	      this.virtualApplianceNics = defaults.virtualApplianceNics;
    	      this.virtualApplianceSites = defaults.virtualApplianceSites;
    	      this.virtualHub = defaults.virtualHub;
        }

        @CustomType.Setter
        public Builder addressPrefix(String addressPrefix) {
            this.addressPrefix = Objects.requireNonNull(addressPrefix);
            return this;
        }
        @CustomType.Setter
        public Builder bootStrapConfigurationBlobs(@Nullable List<String> bootStrapConfigurationBlobs) {
            this.bootStrapConfigurationBlobs = bootStrapConfigurationBlobs;
            return this;
        }
        public Builder bootStrapConfigurationBlobs(String... bootStrapConfigurationBlobs) {
            return bootStrapConfigurationBlobs(List.of(bootStrapConfigurationBlobs));
        }
        @CustomType.Setter
        public Builder cloudInitConfiguration(@Nullable String cloudInitConfiguration) {
            this.cloudInitConfiguration = cloudInitConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder cloudInitConfigurationBlobs(@Nullable List<String> cloudInitConfigurationBlobs) {
            this.cloudInitConfigurationBlobs = cloudInitConfigurationBlobs;
            return this;
        }
        public Builder cloudInitConfigurationBlobs(String... cloudInitConfigurationBlobs) {
            return cloudInitConfigurationBlobs(List.of(cloudInitConfigurationBlobs));
        }
        @CustomType.Setter
        public Builder etag(String etag) {
            this.etag = Objects.requireNonNull(etag);
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder identity(@Nullable ManagedServiceIdentityResponse identity) {
            this.identity = identity;
            return this;
        }
        @CustomType.Setter
        public Builder inboundSecurityRules(List<SubResourceResponse> inboundSecurityRules) {
            this.inboundSecurityRules = Objects.requireNonNull(inboundSecurityRules);
            return this;
        }
        public Builder inboundSecurityRules(SubResourceResponse... inboundSecurityRules) {
            return inboundSecurityRules(List.of(inboundSecurityRules));
        }
        @CustomType.Setter
        public Builder location(@Nullable String location) {
            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder nvaSku(@Nullable VirtualApplianceSkuPropertiesResponse nvaSku) {
            this.nvaSku = nvaSku;
            return this;
        }
        @CustomType.Setter
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder virtualApplianceAsn(@Nullable Double virtualApplianceAsn) {
            this.virtualApplianceAsn = virtualApplianceAsn;
            return this;
        }
        @CustomType.Setter
        public Builder virtualApplianceNics(List<VirtualApplianceNicPropertiesResponse> virtualApplianceNics) {
            this.virtualApplianceNics = Objects.requireNonNull(virtualApplianceNics);
            return this;
        }
        public Builder virtualApplianceNics(VirtualApplianceNicPropertiesResponse... virtualApplianceNics) {
            return virtualApplianceNics(List.of(virtualApplianceNics));
        }
        @CustomType.Setter
        public Builder virtualApplianceSites(List<SubResourceResponse> virtualApplianceSites) {
            this.virtualApplianceSites = Objects.requireNonNull(virtualApplianceSites);
            return this;
        }
        public Builder virtualApplianceSites(SubResourceResponse... virtualApplianceSites) {
            return virtualApplianceSites(List.of(virtualApplianceSites));
        }
        @CustomType.Setter
        public Builder virtualHub(@Nullable SubResourceResponse virtualHub) {
            this.virtualHub = virtualHub;
            return this;
        }
        public GetNetworkVirtualApplianceResult build() {
            final var o = new GetNetworkVirtualApplianceResult();
            o.addressPrefix = addressPrefix;
            o.bootStrapConfigurationBlobs = bootStrapConfigurationBlobs;
            o.cloudInitConfiguration = cloudInitConfiguration;
            o.cloudInitConfigurationBlobs = cloudInitConfigurationBlobs;
            o.etag = etag;
            o.id = id;
            o.identity = identity;
            o.inboundSecurityRules = inboundSecurityRules;
            o.location = location;
            o.name = name;
            o.nvaSku = nvaSku;
            o.provisioningState = provisioningState;
            o.tags = tags;
            o.type = type;
            o.virtualApplianceAsn = virtualApplianceAsn;
            o.virtualApplianceNics = virtualApplianceNics;
            o.virtualApplianceSites = virtualApplianceSites;
            o.virtualHub = virtualHub;
            return o;
        }
    }
}
