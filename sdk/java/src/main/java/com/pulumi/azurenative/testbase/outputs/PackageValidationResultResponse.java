// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.testbase.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class PackageValidationResultResponse {
    /**
     * @return Error information.
     * 
     */
    private List<String> errors;
    /**
     * @return Indicates whether the package passed the validation.
     * 
     */
    private Boolean isValid;
    /**
     * @return Validation name.
     * 
     */
    private String validationName;

    private PackageValidationResultResponse() {}
    /**
     * @return Error information.
     * 
     */
    public List<String> errors() {
        return this.errors;
    }
    /**
     * @return Indicates whether the package passed the validation.
     * 
     */
    public Boolean isValid() {
        return this.isValid;
    }
    /**
     * @return Validation name.
     * 
     */
    public String validationName() {
        return this.validationName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PackageValidationResultResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> errors;
        private Boolean isValid;
        private String validationName;
        public Builder() {}
        public Builder(PackageValidationResultResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.errors = defaults.errors;
    	      this.isValid = defaults.isValid;
    	      this.validationName = defaults.validationName;
        }

        @CustomType.Setter
        public Builder errors(List<String> errors) {
            this.errors = Objects.requireNonNull(errors);
            return this;
        }
        public Builder errors(String... errors) {
            return errors(List.of(errors));
        }
        @CustomType.Setter
        public Builder isValid(Boolean isValid) {
            this.isValid = Objects.requireNonNull(isValid);
            return this;
        }
        @CustomType.Setter
        public Builder validationName(String validationName) {
            this.validationName = Objects.requireNonNull(validationName);
            return this;
        }
        public PackageValidationResultResponse build() {
            final var o = new PackageValidationResultResponse();
            o.errors = errors;
            o.isValid = isValid;
            o.validationName = validationName;
            return o;
        }
    }
}
