// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.security.outputs;

import com.pulumi.azurenative.security.outputs.AwAssumeRoleAuthenticationDetailsPropertiesResponse;
import com.pulumi.azurenative.security.outputs.AwsCredsAuthenticationDetailsPropertiesResponse;
import com.pulumi.azurenative.security.outputs.GcpCredentialsDetailsPropertiesResponse;
import com.pulumi.azurenative.security.outputs.HybridComputeSettingsPropertiesResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetConnectorResult {
    /**
     * @return Settings for authentication management, these settings are relevant only for the cloud connector.
     * 
     */
    private @Nullable Object authenticationDetails;
    /**
     * @return Settings for hybrid compute management. These settings are relevant only for Arc autoProvision (Hybrid Compute).
     * 
     */
    private @Nullable HybridComputeSettingsPropertiesResponse hybridComputeSettings;
    /**
     * @return Resource Id
     * 
     */
    private String id;
    /**
     * @return Resource name
     * 
     */
    private String name;
    /**
     * @return Resource type
     * 
     */
    private String type;

    private GetConnectorResult() {}
    /**
     * @return Settings for authentication management, these settings are relevant only for the cloud connector.
     * 
     */
    public Optional<Object> authenticationDetails() {
        return Optional.ofNullable(this.authenticationDetails);
    }
    /**
     * @return Settings for hybrid compute management. These settings are relevant only for Arc autoProvision (Hybrid Compute).
     * 
     */
    public Optional<HybridComputeSettingsPropertiesResponse> hybridComputeSettings() {
        return Optional.ofNullable(this.hybridComputeSettings);
    }
    /**
     * @return Resource Id
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Resource name
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Resource type
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetConnectorResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Object authenticationDetails;
        private @Nullable HybridComputeSettingsPropertiesResponse hybridComputeSettings;
        private String id;
        private String name;
        private String type;
        public Builder() {}
        public Builder(GetConnectorResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authenticationDetails = defaults.authenticationDetails;
    	      this.hybridComputeSettings = defaults.hybridComputeSettings;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder authenticationDetails(@Nullable Object authenticationDetails) {
            this.authenticationDetails = authenticationDetails;
            return this;
        }
        @CustomType.Setter
        public Builder hybridComputeSettings(@Nullable HybridComputeSettingsPropertiesResponse hybridComputeSettings) {
            this.hybridComputeSettings = hybridComputeSettings;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetConnectorResult build() {
            final var o = new GetConnectorResult();
            o.authenticationDetails = authenticationDetails;
            o.hybridComputeSettings = hybridComputeSettings;
            o.id = id;
            o.name = name;
            o.type = type;
            return o;
        }
    }
}
