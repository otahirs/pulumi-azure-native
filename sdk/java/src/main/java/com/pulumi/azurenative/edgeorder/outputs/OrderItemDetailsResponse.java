// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.edgeorder.outputs;

import com.pulumi.azurenative.edgeorder.outputs.ErrorDetailResponse;
import com.pulumi.azurenative.edgeorder.outputs.ForwardShippingDetailsResponse;
import com.pulumi.azurenative.edgeorder.outputs.PreferencesResponse;
import com.pulumi.azurenative.edgeorder.outputs.ProductDetailsResponse;
import com.pulumi.azurenative.edgeorder.outputs.ResourceProviderDetailsResponse;
import com.pulumi.azurenative.edgeorder.outputs.ReverseShippingDetailsResponse;
import com.pulumi.azurenative.edgeorder.outputs.StageDetailsResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class OrderItemDetailsResponse {
    /**
     * @return Cancellation reason.
     * 
     */
    private String cancellationReason;
    /**
     * @return Describes whether the order item is cancellable or not.
     * 
     */
    private String cancellationStatus;
    /**
     * @return Current Order item Status
     * 
     */
    private StageDetailsResponse currentStage;
    /**
     * @return Describes whether the order item is deletable or not.
     * 
     */
    private String deletionStatus;
    /**
     * @return Top level error for the job.
     * 
     */
    private ErrorDetailResponse error;
    /**
     * @return Forward Package Shipping details
     * 
     */
    private ForwardShippingDetailsResponse forwardShippingDetails;
    /**
     * @return Parent RP details - this returns only the first or default parent RP from the entire list
     * 
     */
    private ResourceProviderDetailsResponse managementRpDetails;
    /**
     * @return List of parent RP details supported for configuration.
     * 
     */
    private List<ResourceProviderDetailsResponse> managementRpDetailsList;
    /**
     * @return Additional notification email list
     * 
     */
    private @Nullable List<String> notificationEmailList;
    /**
     * @return Order item status history
     * 
     */
    private List<StageDetailsResponse> orderItemStageHistory;
    /**
     * @return Order item type.
     * 
     */
    private String orderItemType;
    /**
     * @return Customer notification Preferences
     * 
     */
    private @Nullable PreferencesResponse preferences;
    /**
     * @return Unique identifier for configuration.
     * 
     */
    private ProductDetailsResponse productDetails;
    /**
     * @return Return reason.
     * 
     */
    private String returnReason;
    /**
     * @return Describes whether the order item is returnable or not.
     * 
     */
    private String returnStatus;
    /**
     * @return Reverse Package Shipping details
     * 
     */
    private ReverseShippingDetailsResponse reverseShippingDetails;

    private OrderItemDetailsResponse() {}
    /**
     * @return Cancellation reason.
     * 
     */
    public String cancellationReason() {
        return this.cancellationReason;
    }
    /**
     * @return Describes whether the order item is cancellable or not.
     * 
     */
    public String cancellationStatus() {
        return this.cancellationStatus;
    }
    /**
     * @return Current Order item Status
     * 
     */
    public StageDetailsResponse currentStage() {
        return this.currentStage;
    }
    /**
     * @return Describes whether the order item is deletable or not.
     * 
     */
    public String deletionStatus() {
        return this.deletionStatus;
    }
    /**
     * @return Top level error for the job.
     * 
     */
    public ErrorDetailResponse error() {
        return this.error;
    }
    /**
     * @return Forward Package Shipping details
     * 
     */
    public ForwardShippingDetailsResponse forwardShippingDetails() {
        return this.forwardShippingDetails;
    }
    /**
     * @return Parent RP details - this returns only the first or default parent RP from the entire list
     * 
     */
    public ResourceProviderDetailsResponse managementRpDetails() {
        return this.managementRpDetails;
    }
    /**
     * @return List of parent RP details supported for configuration.
     * 
     */
    public List<ResourceProviderDetailsResponse> managementRpDetailsList() {
        return this.managementRpDetailsList;
    }
    /**
     * @return Additional notification email list
     * 
     */
    public List<String> notificationEmailList() {
        return this.notificationEmailList == null ? List.of() : this.notificationEmailList;
    }
    /**
     * @return Order item status history
     * 
     */
    public List<StageDetailsResponse> orderItemStageHistory() {
        return this.orderItemStageHistory;
    }
    /**
     * @return Order item type.
     * 
     */
    public String orderItemType() {
        return this.orderItemType;
    }
    /**
     * @return Customer notification Preferences
     * 
     */
    public Optional<PreferencesResponse> preferences() {
        return Optional.ofNullable(this.preferences);
    }
    /**
     * @return Unique identifier for configuration.
     * 
     */
    public ProductDetailsResponse productDetails() {
        return this.productDetails;
    }
    /**
     * @return Return reason.
     * 
     */
    public String returnReason() {
        return this.returnReason;
    }
    /**
     * @return Describes whether the order item is returnable or not.
     * 
     */
    public String returnStatus() {
        return this.returnStatus;
    }
    /**
     * @return Reverse Package Shipping details
     * 
     */
    public ReverseShippingDetailsResponse reverseShippingDetails() {
        return this.reverseShippingDetails;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OrderItemDetailsResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String cancellationReason;
        private String cancellationStatus;
        private StageDetailsResponse currentStage;
        private String deletionStatus;
        private ErrorDetailResponse error;
        private ForwardShippingDetailsResponse forwardShippingDetails;
        private ResourceProviderDetailsResponse managementRpDetails;
        private List<ResourceProviderDetailsResponse> managementRpDetailsList;
        private @Nullable List<String> notificationEmailList;
        private List<StageDetailsResponse> orderItemStageHistory;
        private String orderItemType;
        private @Nullable PreferencesResponse preferences;
        private ProductDetailsResponse productDetails;
        private String returnReason;
        private String returnStatus;
        private ReverseShippingDetailsResponse reverseShippingDetails;
        public Builder() {}
        public Builder(OrderItemDetailsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cancellationReason = defaults.cancellationReason;
    	      this.cancellationStatus = defaults.cancellationStatus;
    	      this.currentStage = defaults.currentStage;
    	      this.deletionStatus = defaults.deletionStatus;
    	      this.error = defaults.error;
    	      this.forwardShippingDetails = defaults.forwardShippingDetails;
    	      this.managementRpDetails = defaults.managementRpDetails;
    	      this.managementRpDetailsList = defaults.managementRpDetailsList;
    	      this.notificationEmailList = defaults.notificationEmailList;
    	      this.orderItemStageHistory = defaults.orderItemStageHistory;
    	      this.orderItemType = defaults.orderItemType;
    	      this.preferences = defaults.preferences;
    	      this.productDetails = defaults.productDetails;
    	      this.returnReason = defaults.returnReason;
    	      this.returnStatus = defaults.returnStatus;
    	      this.reverseShippingDetails = defaults.reverseShippingDetails;
        }

        @CustomType.Setter
        public Builder cancellationReason(String cancellationReason) {
            this.cancellationReason = Objects.requireNonNull(cancellationReason);
            return this;
        }
        @CustomType.Setter
        public Builder cancellationStatus(String cancellationStatus) {
            this.cancellationStatus = Objects.requireNonNull(cancellationStatus);
            return this;
        }
        @CustomType.Setter
        public Builder currentStage(StageDetailsResponse currentStage) {
            this.currentStage = Objects.requireNonNull(currentStage);
            return this;
        }
        @CustomType.Setter
        public Builder deletionStatus(String deletionStatus) {
            this.deletionStatus = Objects.requireNonNull(deletionStatus);
            return this;
        }
        @CustomType.Setter
        public Builder error(ErrorDetailResponse error) {
            this.error = Objects.requireNonNull(error);
            return this;
        }
        @CustomType.Setter
        public Builder forwardShippingDetails(ForwardShippingDetailsResponse forwardShippingDetails) {
            this.forwardShippingDetails = Objects.requireNonNull(forwardShippingDetails);
            return this;
        }
        @CustomType.Setter
        public Builder managementRpDetails(ResourceProviderDetailsResponse managementRpDetails) {
            this.managementRpDetails = Objects.requireNonNull(managementRpDetails);
            return this;
        }
        @CustomType.Setter
        public Builder managementRpDetailsList(List<ResourceProviderDetailsResponse> managementRpDetailsList) {
            this.managementRpDetailsList = Objects.requireNonNull(managementRpDetailsList);
            return this;
        }
        public Builder managementRpDetailsList(ResourceProviderDetailsResponse... managementRpDetailsList) {
            return managementRpDetailsList(List.of(managementRpDetailsList));
        }
        @CustomType.Setter
        public Builder notificationEmailList(@Nullable List<String> notificationEmailList) {
            this.notificationEmailList = notificationEmailList;
            return this;
        }
        public Builder notificationEmailList(String... notificationEmailList) {
            return notificationEmailList(List.of(notificationEmailList));
        }
        @CustomType.Setter
        public Builder orderItemStageHistory(List<StageDetailsResponse> orderItemStageHistory) {
            this.orderItemStageHistory = Objects.requireNonNull(orderItemStageHistory);
            return this;
        }
        public Builder orderItemStageHistory(StageDetailsResponse... orderItemStageHistory) {
            return orderItemStageHistory(List.of(orderItemStageHistory));
        }
        @CustomType.Setter
        public Builder orderItemType(String orderItemType) {
            this.orderItemType = Objects.requireNonNull(orderItemType);
            return this;
        }
        @CustomType.Setter
        public Builder preferences(@Nullable PreferencesResponse preferences) {
            this.preferences = preferences;
            return this;
        }
        @CustomType.Setter
        public Builder productDetails(ProductDetailsResponse productDetails) {
            this.productDetails = Objects.requireNonNull(productDetails);
            return this;
        }
        @CustomType.Setter
        public Builder returnReason(String returnReason) {
            this.returnReason = Objects.requireNonNull(returnReason);
            return this;
        }
        @CustomType.Setter
        public Builder returnStatus(String returnStatus) {
            this.returnStatus = Objects.requireNonNull(returnStatus);
            return this;
        }
        @CustomType.Setter
        public Builder reverseShippingDetails(ReverseShippingDetailsResponse reverseShippingDetails) {
            this.reverseShippingDetails = Objects.requireNonNull(reverseShippingDetails);
            return this;
        }
        public OrderItemDetailsResponse build() {
            final var o = new OrderItemDetailsResponse();
            o.cancellationReason = cancellationReason;
            o.cancellationStatus = cancellationStatus;
            o.currentStage = currentStage;
            o.deletionStatus = deletionStatus;
            o.error = error;
            o.forwardShippingDetails = forwardShippingDetails;
            o.managementRpDetails = managementRpDetails;
            o.managementRpDetailsList = managementRpDetailsList;
            o.notificationEmailList = notificationEmailList;
            o.orderItemStageHistory = orderItemStageHistory;
            o.orderItemType = orderItemType;
            o.preferences = preferences;
            o.productDetails = productDetails;
            o.returnReason = returnReason;
            o.returnStatus = returnStatus;
            o.reverseShippingDetails = reverseShippingDetails;
            return o;
        }
    }
}
