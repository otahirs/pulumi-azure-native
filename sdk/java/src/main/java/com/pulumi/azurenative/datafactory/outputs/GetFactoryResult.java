// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datafactory.outputs;

import com.pulumi.azurenative.datafactory.outputs.EncryptionConfigurationResponse;
import com.pulumi.azurenative.datafactory.outputs.FactoryGitHubConfigurationResponse;
import com.pulumi.azurenative.datafactory.outputs.FactoryIdentityResponse;
import com.pulumi.azurenative.datafactory.outputs.FactoryVSTSConfigurationResponse;
import com.pulumi.azurenative.datafactory.outputs.GlobalParameterSpecificationResponse;
import com.pulumi.azurenative.datafactory.outputs.PurviewConfigurationResponse;
import com.pulumi.core.Either;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetFactoryResult {
    /**
     * @return Time the factory was created in ISO8601 format.
     * 
     */
    private String createTime;
    /**
     * @return Etag identifies change in the resource.
     * 
     */
    private String eTag;
    /**
     * @return Properties to enable Customer Managed Key for the factory.
     * 
     */
    private @Nullable EncryptionConfigurationResponse encryption;
    /**
     * @return List of parameters for factory.
     * 
     */
    private @Nullable Map<String,GlobalParameterSpecificationResponse> globalParameters;
    /**
     * @return The resource identifier.
     * 
     */
    private String id;
    /**
     * @return Managed service identity of the factory.
     * 
     */
    private @Nullable FactoryIdentityResponse identity;
    /**
     * @return The resource location.
     * 
     */
    private @Nullable String location;
    /**
     * @return The resource name.
     * 
     */
    private String name;
    /**
     * @return Factory provisioning state, example Succeeded.
     * 
     */
    private String provisioningState;
    /**
     * @return Whether or not public network access is allowed for the data factory.
     * 
     */
    private @Nullable String publicNetworkAccess;
    /**
     * @return Purview information of the factory.
     * 
     */
    private @Nullable PurviewConfigurationResponse purviewConfiguration;
    /**
     * @return Git repo information of the factory.
     * 
     */
    private @Nullable Either<FactoryGitHubConfigurationResponse,FactoryVSTSConfigurationResponse> repoConfiguration;
    /**
     * @return The resource tags.
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return The resource type.
     * 
     */
    private String type;
    /**
     * @return Version of the factory.
     * 
     */
    private String version;

    private GetFactoryResult() {}
    /**
     * @return Time the factory was created in ISO8601 format.
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return Etag identifies change in the resource.
     * 
     */
    public String eTag() {
        return this.eTag;
    }
    /**
     * @return Properties to enable Customer Managed Key for the factory.
     * 
     */
    public Optional<EncryptionConfigurationResponse> encryption() {
        return Optional.ofNullable(this.encryption);
    }
    /**
     * @return List of parameters for factory.
     * 
     */
    public Map<String,GlobalParameterSpecificationResponse> globalParameters() {
        return this.globalParameters == null ? Map.of() : this.globalParameters;
    }
    /**
     * @return The resource identifier.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Managed service identity of the factory.
     * 
     */
    public Optional<FactoryIdentityResponse> identity() {
        return Optional.ofNullable(this.identity);
    }
    /**
     * @return The resource location.
     * 
     */
    public Optional<String> location() {
        return Optional.ofNullable(this.location);
    }
    /**
     * @return The resource name.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Factory provisioning state, example Succeeded.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * @return Whether or not public network access is allowed for the data factory.
     * 
     */
    public Optional<String> publicNetworkAccess() {
        return Optional.ofNullable(this.publicNetworkAccess);
    }
    /**
     * @return Purview information of the factory.
     * 
     */
    public Optional<PurviewConfigurationResponse> purviewConfiguration() {
        return Optional.ofNullable(this.purviewConfiguration);
    }
    /**
     * @return Git repo information of the factory.
     * 
     */
    public Optional<Either<FactoryGitHubConfigurationResponse,FactoryVSTSConfigurationResponse>> repoConfiguration() {
        return Optional.ofNullable(this.repoConfiguration);
    }
    /**
     * @return The resource tags.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return The resource type.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return Version of the factory.
     * 
     */
    public String version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFactoryResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String createTime;
        private String eTag;
        private @Nullable EncryptionConfigurationResponse encryption;
        private @Nullable Map<String,GlobalParameterSpecificationResponse> globalParameters;
        private String id;
        private @Nullable FactoryIdentityResponse identity;
        private @Nullable String location;
        private String name;
        private String provisioningState;
        private @Nullable String publicNetworkAccess;
        private @Nullable PurviewConfigurationResponse purviewConfiguration;
        private @Nullable Either<FactoryGitHubConfigurationResponse,FactoryVSTSConfigurationResponse> repoConfiguration;
        private @Nullable Map<String,String> tags;
        private String type;
        private String version;
        public Builder() {}
        public Builder(GetFactoryResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createTime = defaults.createTime;
    	      this.eTag = defaults.eTag;
    	      this.encryption = defaults.encryption;
    	      this.globalParameters = defaults.globalParameters;
    	      this.id = defaults.id;
    	      this.identity = defaults.identity;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.provisioningState = defaults.provisioningState;
    	      this.publicNetworkAccess = defaults.publicNetworkAccess;
    	      this.purviewConfiguration = defaults.purviewConfiguration;
    	      this.repoConfiguration = defaults.repoConfiguration;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder createTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }
        @CustomType.Setter
        public Builder eTag(String eTag) {
            this.eTag = Objects.requireNonNull(eTag);
            return this;
        }
        @CustomType.Setter
        public Builder encryption(@Nullable EncryptionConfigurationResponse encryption) {
            this.encryption = encryption;
            return this;
        }
        @CustomType.Setter
        public Builder globalParameters(@Nullable Map<String,GlobalParameterSpecificationResponse> globalParameters) {
            this.globalParameters = globalParameters;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder identity(@Nullable FactoryIdentityResponse identity) {
            this.identity = identity;
            return this;
        }
        @CustomType.Setter
        public Builder location(@Nullable String location) {
            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        @CustomType.Setter
        public Builder publicNetworkAccess(@Nullable String publicNetworkAccess) {
            this.publicNetworkAccess = publicNetworkAccess;
            return this;
        }
        @CustomType.Setter
        public Builder purviewConfiguration(@Nullable PurviewConfigurationResponse purviewConfiguration) {
            this.purviewConfiguration = purviewConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder repoConfiguration(@Nullable Either<FactoryGitHubConfigurationResponse,FactoryVSTSConfigurationResponse> repoConfiguration) {
            this.repoConfiguration = repoConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder version(String version) {
            this.version = Objects.requireNonNull(version);
            return this;
        }
        public GetFactoryResult build() {
            final var o = new GetFactoryResult();
            o.createTime = createTime;
            o.eTag = eTag;
            o.encryption = encryption;
            o.globalParameters = globalParameters;
            o.id = id;
            o.identity = identity;
            o.location = location;
            o.name = name;
            o.provisioningState = provisioningState;
            o.publicNetworkAccess = publicNetworkAccess;
            o.purviewConfiguration = purviewConfiguration;
            o.repoConfiguration = repoConfiguration;
            o.tags = tags;
            o.type = type;
            o.version = version;
            return o;
        }
    }
}
