// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datafactory.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class JsonWriteSettingsResponse {
    /**
     * @return File pattern of JSON. This setting controls the way a collection of JSON objects will be treated. The default value is &#39;setOfObjects&#39;. It is case-sensitive.
     * 
     */
    private @Nullable Object filePattern;
    /**
     * @return The write setting type.
     * Expected value is &#39;JsonWriteSettings&#39;.
     * 
     */
    private String type;

    private JsonWriteSettingsResponse() {}
    /**
     * @return File pattern of JSON. This setting controls the way a collection of JSON objects will be treated. The default value is &#39;setOfObjects&#39;. It is case-sensitive.
     * 
     */
    public Optional<Object> filePattern() {
        return Optional.ofNullable(this.filePattern);
    }
    /**
     * @return The write setting type.
     * Expected value is &#39;JsonWriteSettings&#39;.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(JsonWriteSettingsResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Object filePattern;
        private String type;
        public Builder() {}
        public Builder(JsonWriteSettingsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filePattern = defaults.filePattern;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder filePattern(@Nullable Object filePattern) {
            this.filePattern = filePattern;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public JsonWriteSettingsResponse build() {
            final var o = new JsonWriteSettingsResponse();
            o.filePattern = filePattern;
            o.type = type;
            return o;
        }
    }
}
