// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.containerregistry.outputs;

import com.pulumi.azurenative.containerregistry.outputs.SystemDataResponse;
import com.pulumi.azurenative.containerregistry.outputs.TokenCredentialsPropertiesResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetTokenResult {
    /**
     * @return The creation date of scope map.
     * 
     */
    private String creationDate;
    /**
     * @return The credentials that can be used for authenticating the token.
     * 
     */
    private @Nullable TokenCredentialsPropertiesResponse credentials;
    /**
     * @return The resource ID.
     * 
     */
    private String id;
    /**
     * @return The name of the resource.
     * 
     */
    private String name;
    /**
     * @return Provisioning state of the resource.
     * 
     */
    private String provisioningState;
    /**
     * @return The resource ID of the scope map to which the token will be associated with.
     * 
     */
    private @Nullable String scopeMapId;
    /**
     * @return The status of the token example enabled or disabled.
     * 
     */
    private @Nullable String status;
    /**
     * @return Metadata pertaining to creation and last modification of the resource.
     * 
     */
    private SystemDataResponse systemData;
    /**
     * @return The type of the resource.
     * 
     */
    private String type;

    private GetTokenResult() {}
    /**
     * @return The creation date of scope map.
     * 
     */
    public String creationDate() {
        return this.creationDate;
    }
    /**
     * @return The credentials that can be used for authenticating the token.
     * 
     */
    public Optional<TokenCredentialsPropertiesResponse> credentials() {
        return Optional.ofNullable(this.credentials);
    }
    /**
     * @return The resource ID.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The name of the resource.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Provisioning state of the resource.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * @return The resource ID of the scope map to which the token will be associated with.
     * 
     */
    public Optional<String> scopeMapId() {
        return Optional.ofNullable(this.scopeMapId);
    }
    /**
     * @return The status of the token example enabled or disabled.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }
    /**
     * @return Metadata pertaining to creation and last modification of the resource.
     * 
     */
    public SystemDataResponse systemData() {
        return this.systemData;
    }
    /**
     * @return The type of the resource.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTokenResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String creationDate;
        private @Nullable TokenCredentialsPropertiesResponse credentials;
        private String id;
        private String name;
        private String provisioningState;
        private @Nullable String scopeMapId;
        private @Nullable String status;
        private SystemDataResponse systemData;
        private String type;
        public Builder() {}
        public Builder(GetTokenResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.creationDate = defaults.creationDate;
    	      this.credentials = defaults.credentials;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.provisioningState = defaults.provisioningState;
    	      this.scopeMapId = defaults.scopeMapId;
    	      this.status = defaults.status;
    	      this.systemData = defaults.systemData;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder creationDate(String creationDate) {
            this.creationDate = Objects.requireNonNull(creationDate);
            return this;
        }
        @CustomType.Setter
        public Builder credentials(@Nullable TokenCredentialsPropertiesResponse credentials) {
            this.credentials = credentials;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        @CustomType.Setter
        public Builder scopeMapId(@Nullable String scopeMapId) {
            this.scopeMapId = scopeMapId;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder systemData(SystemDataResponse systemData) {
            this.systemData = Objects.requireNonNull(systemData);
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetTokenResult build() {
            final var o = new GetTokenResult();
            o.creationDate = creationDate;
            o.credentials = credentials;
            o.id = id;
            o.name = name;
            o.provisioningState = provisioningState;
            o.scopeMapId = scopeMapId;
            o.status = status;
            o.systemData = systemData;
            o.type = type;
            return o;
        }
    }
}
