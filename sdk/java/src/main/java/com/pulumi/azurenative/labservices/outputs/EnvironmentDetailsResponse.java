// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.labservices.outputs;

import com.pulumi.azurenative.labservices.outputs.LatestOperationResultResponse;
import com.pulumi.azurenative.labservices.outputs.VirtualMachineDetailsResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class EnvironmentDetailsResponse {
    /**
     * @return Description of the Environment
     * 
     */
    private String description;
    /**
     * @return Publishing state of the environment setting Possible values are Creating, Created, Failed
     * 
     */
    private String environmentState;
    /**
     * @return Resource Id of the environment
     * 
     */
    private String id;
    /**
     * @return The details of the latest operation. ex: status, error
     * 
     */
    private LatestOperationResultResponse latestOperationResult;
    /**
     * @return Name of the Environment
     * 
     */
    private String name;
    /**
     * @return When the password was last reset on the environment.
     * 
     */
    private String passwordLastReset;
    /**
     * @return The provisioning state of the environment. This also includes LabIsFull and NotYetProvisioned status.
     * 
     */
    private String provisioningState;
    /**
     * @return How long the environment has been used by a lab user
     * 
     */
    private String totalUsage;
    /**
     * @return Details of backing DTL virtual machine with compute and network details.
     * 
     */
    private VirtualMachineDetailsResponse virtualMachineDetails;

    private EnvironmentDetailsResponse() {}
    /**
     * @return Description of the Environment
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Publishing state of the environment setting Possible values are Creating, Created, Failed
     * 
     */
    public String environmentState() {
        return this.environmentState;
    }
    /**
     * @return Resource Id of the environment
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The details of the latest operation. ex: status, error
     * 
     */
    public LatestOperationResultResponse latestOperationResult() {
        return this.latestOperationResult;
    }
    /**
     * @return Name of the Environment
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return When the password was last reset on the environment.
     * 
     */
    public String passwordLastReset() {
        return this.passwordLastReset;
    }
    /**
     * @return The provisioning state of the environment. This also includes LabIsFull and NotYetProvisioned status.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * @return How long the environment has been used by a lab user
     * 
     */
    public String totalUsage() {
        return this.totalUsage;
    }
    /**
     * @return Details of backing DTL virtual machine with compute and network details.
     * 
     */
    public VirtualMachineDetailsResponse virtualMachineDetails() {
        return this.virtualMachineDetails;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EnvironmentDetailsResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String description;
        private String environmentState;
        private String id;
        private LatestOperationResultResponse latestOperationResult;
        private String name;
        private String passwordLastReset;
        private String provisioningState;
        private String totalUsage;
        private VirtualMachineDetailsResponse virtualMachineDetails;
        public Builder() {}
        public Builder(EnvironmentDetailsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.environmentState = defaults.environmentState;
    	      this.id = defaults.id;
    	      this.latestOperationResult = defaults.latestOperationResult;
    	      this.name = defaults.name;
    	      this.passwordLastReset = defaults.passwordLastReset;
    	      this.provisioningState = defaults.provisioningState;
    	      this.totalUsage = defaults.totalUsage;
    	      this.virtualMachineDetails = defaults.virtualMachineDetails;
        }

        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder environmentState(String environmentState) {
            this.environmentState = Objects.requireNonNull(environmentState);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder latestOperationResult(LatestOperationResultResponse latestOperationResult) {
            this.latestOperationResult = Objects.requireNonNull(latestOperationResult);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder passwordLastReset(String passwordLastReset) {
            this.passwordLastReset = Objects.requireNonNull(passwordLastReset);
            return this;
        }
        @CustomType.Setter
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        @CustomType.Setter
        public Builder totalUsage(String totalUsage) {
            this.totalUsage = Objects.requireNonNull(totalUsage);
            return this;
        }
        @CustomType.Setter
        public Builder virtualMachineDetails(VirtualMachineDetailsResponse virtualMachineDetails) {
            this.virtualMachineDetails = Objects.requireNonNull(virtualMachineDetails);
            return this;
        }
        public EnvironmentDetailsResponse build() {
            final var o = new EnvironmentDetailsResponse();
            o.description = description;
            o.environmentState = environmentState;
            o.id = id;
            o.latestOperationResult = latestOperationResult;
            o.name = name;
            o.passwordLastReset = passwordLastReset;
            o.provisioningState = provisioningState;
            o.totalUsage = totalUsage;
            o.virtualMachineDetails = virtualMachineDetails;
            return o;
        }
    }
}
