// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.apimanagement.outputs;

import com.pulumi.azurenative.apimanagement.outputs.BackendAuthorizationHeaderCredentialsResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class BackendCredentialsContractResponse {
    /**
     * @return Authorization header authentication
     * 
     */
    private @Nullable BackendAuthorizationHeaderCredentialsResponse authorization;
    /**
     * @return List of Client Certificate Thumbprints. Will be ignored if certificatesIds are provided.
     * 
     */
    private @Nullable List<String> certificate;
    /**
     * @return List of Client Certificate Ids.
     * 
     */
    private @Nullable List<String> certificateIds;
    /**
     * @return Header Parameter description.
     * 
     */
    private @Nullable Map<String,List<String>> header;
    /**
     * @return Query Parameter description.
     * 
     */
    private @Nullable Map<String,List<String>> query;

    private BackendCredentialsContractResponse() {}
    /**
     * @return Authorization header authentication
     * 
     */
    public Optional<BackendAuthorizationHeaderCredentialsResponse> authorization() {
        return Optional.ofNullable(this.authorization);
    }
    /**
     * @return List of Client Certificate Thumbprints. Will be ignored if certificatesIds are provided.
     * 
     */
    public List<String> certificate() {
        return this.certificate == null ? List.of() : this.certificate;
    }
    /**
     * @return List of Client Certificate Ids.
     * 
     */
    public List<String> certificateIds() {
        return this.certificateIds == null ? List.of() : this.certificateIds;
    }
    /**
     * @return Header Parameter description.
     * 
     */
    public Map<String,List<String>> header() {
        return this.header == null ? Map.of() : this.header;
    }
    /**
     * @return Query Parameter description.
     * 
     */
    public Map<String,List<String>> query() {
        return this.query == null ? Map.of() : this.query;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BackendCredentialsContractResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable BackendAuthorizationHeaderCredentialsResponse authorization;
        private @Nullable List<String> certificate;
        private @Nullable List<String> certificateIds;
        private @Nullable Map<String,List<String>> header;
        private @Nullable Map<String,List<String>> query;
        public Builder() {}
        public Builder(BackendCredentialsContractResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authorization = defaults.authorization;
    	      this.certificate = defaults.certificate;
    	      this.certificateIds = defaults.certificateIds;
    	      this.header = defaults.header;
    	      this.query = defaults.query;
        }

        @CustomType.Setter
        public Builder authorization(@Nullable BackendAuthorizationHeaderCredentialsResponse authorization) {
            this.authorization = authorization;
            return this;
        }
        @CustomType.Setter
        public Builder certificate(@Nullable List<String> certificate) {
            this.certificate = certificate;
            return this;
        }
        public Builder certificate(String... certificate) {
            return certificate(List.of(certificate));
        }
        @CustomType.Setter
        public Builder certificateIds(@Nullable List<String> certificateIds) {
            this.certificateIds = certificateIds;
            return this;
        }
        public Builder certificateIds(String... certificateIds) {
            return certificateIds(List.of(certificateIds));
        }
        @CustomType.Setter
        public Builder header(@Nullable Map<String,List<String>> header) {
            this.header = header;
            return this;
        }
        @CustomType.Setter
        public Builder query(@Nullable Map<String,List<String>> query) {
            this.query = query;
            return this;
        }
        public BackendCredentialsContractResponse build() {
            final var o = new BackendCredentialsContractResponse();
            o.authorization = authorization;
            o.certificate = certificate;
            o.certificateIds = certificateIds;
            o.header = header;
            o.query = query;
            return o;
        }
    }
}
