// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.compute.outputs;

import com.pulumi.azurenative.compute.outputs.GalleryArtifactVersionSourceResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GalleryDataDiskImageResponse {
    /**
     * @return The host caching of the disk. Valid values are &#39;None&#39;, &#39;ReadOnly&#39;, and &#39;ReadWrite&#39;
     * 
     */
    private @Nullable String hostCaching;
    /**
     * @return This property specifies the logical unit number of the data disk. This value is used to identify data disks within the Virtual Machine and therefore must be unique for each data disk attached to the Virtual Machine.
     * 
     */
    private Integer lun;
    /**
     * @return This property indicates the size of the VHD to be created.
     * 
     */
    private Integer sizeInGB;
    /**
     * @return The gallery artifact version source.
     * 
     */
    private @Nullable GalleryArtifactVersionSourceResponse source;

    private GalleryDataDiskImageResponse() {}
    /**
     * @return The host caching of the disk. Valid values are &#39;None&#39;, &#39;ReadOnly&#39;, and &#39;ReadWrite&#39;
     * 
     */
    public Optional<String> hostCaching() {
        return Optional.ofNullable(this.hostCaching);
    }
    /**
     * @return This property specifies the logical unit number of the data disk. This value is used to identify data disks within the Virtual Machine and therefore must be unique for each data disk attached to the Virtual Machine.
     * 
     */
    public Integer lun() {
        return this.lun;
    }
    /**
     * @return This property indicates the size of the VHD to be created.
     * 
     */
    public Integer sizeInGB() {
        return this.sizeInGB;
    }
    /**
     * @return The gallery artifact version source.
     * 
     */
    public Optional<GalleryArtifactVersionSourceResponse> source() {
        return Optional.ofNullable(this.source);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GalleryDataDiskImageResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String hostCaching;
        private Integer lun;
        private Integer sizeInGB;
        private @Nullable GalleryArtifactVersionSourceResponse source;
        public Builder() {}
        public Builder(GalleryDataDiskImageResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.hostCaching = defaults.hostCaching;
    	      this.lun = defaults.lun;
    	      this.sizeInGB = defaults.sizeInGB;
    	      this.source = defaults.source;
        }

        @CustomType.Setter
        public Builder hostCaching(@Nullable String hostCaching) {
            this.hostCaching = hostCaching;
            return this;
        }
        @CustomType.Setter
        public Builder lun(Integer lun) {
            this.lun = Objects.requireNonNull(lun);
            return this;
        }
        @CustomType.Setter
        public Builder sizeInGB(Integer sizeInGB) {
            this.sizeInGB = Objects.requireNonNull(sizeInGB);
            return this;
        }
        @CustomType.Setter
        public Builder source(@Nullable GalleryArtifactVersionSourceResponse source) {
            this.source = source;
            return this;
        }
        public GalleryDataDiskImageResponse build() {
            final var o = new GalleryDataDiskImageResponse();
            o.hostCaching = hostCaching;
            o.lun = lun;
            o.sizeInGB = sizeInGB;
            o.source = source;
            return o;
        }
    }
}
