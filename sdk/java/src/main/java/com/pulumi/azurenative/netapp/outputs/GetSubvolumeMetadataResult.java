// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.netapp.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetSubvolumeMetadataResult {
    /**
     * @return Most recent access time and date
     * 
     */
    private @Nullable String accessedTimeStamp;
    /**
     * @return Bytes used
     * 
     */
    private @Nullable Double bytesUsed;
    /**
     * @return Most recent change time and date
     * 
     */
    private @Nullable String changedTimeStamp;
    /**
     * @return Creation time and date
     * 
     */
    private @Nullable String creationTimeStamp;
    /**
     * @return Resource Id
     * 
     */
    private String id;
    /**
     * @return Most recent modification time and date
     * 
     */
    private @Nullable String modifiedTimeStamp;
    /**
     * @return Resource name
     * 
     */
    private String name;
    /**
     * @return Path to the parent subvolume
     * 
     */
    private @Nullable String parentPath;
    /**
     * @return Path to the subvolume
     * 
     */
    private @Nullable String path;
    /**
     * @return Permissions of the subvolume
     * 
     */
    private @Nullable String permissions;
    /**
     * @return Azure lifecycle management
     * 
     */
    private @Nullable String provisioningState;
    /**
     * @return Size of subvolume
     * 
     */
    private @Nullable Double size;
    /**
     * @return Resource type
     * 
     */
    private String type;

    private GetSubvolumeMetadataResult() {}
    /**
     * @return Most recent access time and date
     * 
     */
    public Optional<String> accessedTimeStamp() {
        return Optional.ofNullable(this.accessedTimeStamp);
    }
    /**
     * @return Bytes used
     * 
     */
    public Optional<Double> bytesUsed() {
        return Optional.ofNullable(this.bytesUsed);
    }
    /**
     * @return Most recent change time and date
     * 
     */
    public Optional<String> changedTimeStamp() {
        return Optional.ofNullable(this.changedTimeStamp);
    }
    /**
     * @return Creation time and date
     * 
     */
    public Optional<String> creationTimeStamp() {
        return Optional.ofNullable(this.creationTimeStamp);
    }
    /**
     * @return Resource Id
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Most recent modification time and date
     * 
     */
    public Optional<String> modifiedTimeStamp() {
        return Optional.ofNullable(this.modifiedTimeStamp);
    }
    /**
     * @return Resource name
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Path to the parent subvolume
     * 
     */
    public Optional<String> parentPath() {
        return Optional.ofNullable(this.parentPath);
    }
    /**
     * @return Path to the subvolume
     * 
     */
    public Optional<String> path() {
        return Optional.ofNullable(this.path);
    }
    /**
     * @return Permissions of the subvolume
     * 
     */
    public Optional<String> permissions() {
        return Optional.ofNullable(this.permissions);
    }
    /**
     * @return Azure lifecycle management
     * 
     */
    public Optional<String> provisioningState() {
        return Optional.ofNullable(this.provisioningState);
    }
    /**
     * @return Size of subvolume
     * 
     */
    public Optional<Double> size() {
        return Optional.ofNullable(this.size);
    }
    /**
     * @return Resource type
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSubvolumeMetadataResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String accessedTimeStamp;
        private @Nullable Double bytesUsed;
        private @Nullable String changedTimeStamp;
        private @Nullable String creationTimeStamp;
        private String id;
        private @Nullable String modifiedTimeStamp;
        private String name;
        private @Nullable String parentPath;
        private @Nullable String path;
        private @Nullable String permissions;
        private @Nullable String provisioningState;
        private @Nullable Double size;
        private String type;
        public Builder() {}
        public Builder(GetSubvolumeMetadataResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessedTimeStamp = defaults.accessedTimeStamp;
    	      this.bytesUsed = defaults.bytesUsed;
    	      this.changedTimeStamp = defaults.changedTimeStamp;
    	      this.creationTimeStamp = defaults.creationTimeStamp;
    	      this.id = defaults.id;
    	      this.modifiedTimeStamp = defaults.modifiedTimeStamp;
    	      this.name = defaults.name;
    	      this.parentPath = defaults.parentPath;
    	      this.path = defaults.path;
    	      this.permissions = defaults.permissions;
    	      this.provisioningState = defaults.provisioningState;
    	      this.size = defaults.size;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder accessedTimeStamp(@Nullable String accessedTimeStamp) {
            this.accessedTimeStamp = accessedTimeStamp;
            return this;
        }
        @CustomType.Setter
        public Builder bytesUsed(@Nullable Double bytesUsed) {
            this.bytesUsed = bytesUsed;
            return this;
        }
        @CustomType.Setter
        public Builder changedTimeStamp(@Nullable String changedTimeStamp) {
            this.changedTimeStamp = changedTimeStamp;
            return this;
        }
        @CustomType.Setter
        public Builder creationTimeStamp(@Nullable String creationTimeStamp) {
            this.creationTimeStamp = creationTimeStamp;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder modifiedTimeStamp(@Nullable String modifiedTimeStamp) {
            this.modifiedTimeStamp = modifiedTimeStamp;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder parentPath(@Nullable String parentPath) {
            this.parentPath = parentPath;
            return this;
        }
        @CustomType.Setter
        public Builder path(@Nullable String path) {
            this.path = path;
            return this;
        }
        @CustomType.Setter
        public Builder permissions(@Nullable String permissions) {
            this.permissions = permissions;
            return this;
        }
        @CustomType.Setter
        public Builder provisioningState(@Nullable String provisioningState) {
            this.provisioningState = provisioningState;
            return this;
        }
        @CustomType.Setter
        public Builder size(@Nullable Double size) {
            this.size = size;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetSubvolumeMetadataResult build() {
            final var o = new GetSubvolumeMetadataResult();
            o.accessedTimeStamp = accessedTimeStamp;
            o.bytesUsed = bytesUsed;
            o.changedTimeStamp = changedTimeStamp;
            o.creationTimeStamp = creationTimeStamp;
            o.id = id;
            o.modifiedTimeStamp = modifiedTimeStamp;
            o.name = name;
            o.parentPath = parentPath;
            o.path = path;
            o.permissions = permissions;
            o.provisioningState = provisioningState;
            o.size = size;
            o.type = type;
            return o;
        }
    }
}
