// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearningservices.outputs;

import com.pulumi.azurenative.machinelearningservices.outputs.AutoScaleSettingsResponse;
import com.pulumi.azurenative.machinelearningservices.outputs.CodeConfigurationResponse;
import com.pulumi.azurenative.machinelearningservices.outputs.DataPathAssetReferenceResponse;
import com.pulumi.azurenative.machinelearningservices.outputs.IdAssetReferenceResponse;
import com.pulumi.azurenative.machinelearningservices.outputs.ManualScaleSettingsResponse;
import com.pulumi.azurenative.machinelearningservices.outputs.OnlineRequestSettingsResponse;
import com.pulumi.azurenative.machinelearningservices.outputs.OutputPathAssetReferenceResponse;
import com.pulumi.azurenative.machinelearningservices.outputs.ProbeSettingsResponse;
import com.pulumi.core.Either;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ManagedOnlineDeploymentResponse {
    /**
     * @return If true, enables Application Insights logging.
     * 
     */
    private @Nullable Boolean appInsightsEnabled;
    /**
     * @return Code configuration for the endpoint deployment.
     * 
     */
    private @Nullable CodeConfigurationResponse codeConfiguration;
    /**
     * @return Description of the endpoint deployment.
     * 
     */
    private @Nullable String description;
    /**
     * @return Enum to determine endpoint compute type.
     * Expected value is &#39;Managed&#39;.
     * 
     */
    private String endpointComputeType;
    /**
     * @return ARM resource ID of the environment specification for the endpoint deployment.
     * 
     */
    private @Nullable String environmentId;
    /**
     * @return Environment variables configuration for the deployment.
     * 
     */
    private @Nullable Map<String,String> environmentVariables;
    /**
     * @return Compute instance type.
     * 
     */
    private @Nullable String instanceType;
    /**
     * @return Deployment container liveness/readiness probe configuration.
     * 
     */
    private @Nullable ProbeSettingsResponse livenessProbe;
    /**
     * @return Reference to the model asset for the endpoint deployment.
     * 
     */
    private @Nullable Object model;
    /**
     * @return Property dictionary. Properties can be added, but not removed or altered.
     * 
     */
    private @Nullable Map<String,String> properties;
    /**
     * @return Provisioning state for the endpoint deployment.
     * 
     */
    private String provisioningState;
    /**
     * @return Deployment container liveness/readiness probe configuration.
     * 
     */
    private @Nullable ProbeSettingsResponse readinessProbe;
    /**
     * @return Online deployment scoring requests configuration.
     * 
     */
    private @Nullable OnlineRequestSettingsResponse requestSettings;
    /**
     * @return Online deployment scaling configuration.
     * 
     */
    private @Nullable Either<AutoScaleSettingsResponse,ManualScaleSettingsResponse> scaleSettings;

    private ManagedOnlineDeploymentResponse() {}
    /**
     * @return If true, enables Application Insights logging.
     * 
     */
    public Optional<Boolean> appInsightsEnabled() {
        return Optional.ofNullable(this.appInsightsEnabled);
    }
    /**
     * @return Code configuration for the endpoint deployment.
     * 
     */
    public Optional<CodeConfigurationResponse> codeConfiguration() {
        return Optional.ofNullable(this.codeConfiguration);
    }
    /**
     * @return Description of the endpoint deployment.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return Enum to determine endpoint compute type.
     * Expected value is &#39;Managed&#39;.
     * 
     */
    public String endpointComputeType() {
        return this.endpointComputeType;
    }
    /**
     * @return ARM resource ID of the environment specification for the endpoint deployment.
     * 
     */
    public Optional<String> environmentId() {
        return Optional.ofNullable(this.environmentId);
    }
    /**
     * @return Environment variables configuration for the deployment.
     * 
     */
    public Map<String,String> environmentVariables() {
        return this.environmentVariables == null ? Map.of() : this.environmentVariables;
    }
    /**
     * @return Compute instance type.
     * 
     */
    public Optional<String> instanceType() {
        return Optional.ofNullable(this.instanceType);
    }
    /**
     * @return Deployment container liveness/readiness probe configuration.
     * 
     */
    public Optional<ProbeSettingsResponse> livenessProbe() {
        return Optional.ofNullable(this.livenessProbe);
    }
    /**
     * @return Reference to the model asset for the endpoint deployment.
     * 
     */
    public Optional<Object> model() {
        return Optional.ofNullable(this.model);
    }
    /**
     * @return Property dictionary. Properties can be added, but not removed or altered.
     * 
     */
    public Map<String,String> properties() {
        return this.properties == null ? Map.of() : this.properties;
    }
    /**
     * @return Provisioning state for the endpoint deployment.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * @return Deployment container liveness/readiness probe configuration.
     * 
     */
    public Optional<ProbeSettingsResponse> readinessProbe() {
        return Optional.ofNullable(this.readinessProbe);
    }
    /**
     * @return Online deployment scoring requests configuration.
     * 
     */
    public Optional<OnlineRequestSettingsResponse> requestSettings() {
        return Optional.ofNullable(this.requestSettings);
    }
    /**
     * @return Online deployment scaling configuration.
     * 
     */
    public Optional<Either<AutoScaleSettingsResponse,ManualScaleSettingsResponse>> scaleSettings() {
        return Optional.ofNullable(this.scaleSettings);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ManagedOnlineDeploymentResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean appInsightsEnabled;
        private @Nullable CodeConfigurationResponse codeConfiguration;
        private @Nullable String description;
        private String endpointComputeType;
        private @Nullable String environmentId;
        private @Nullable Map<String,String> environmentVariables;
        private @Nullable String instanceType;
        private @Nullable ProbeSettingsResponse livenessProbe;
        private @Nullable Object model;
        private @Nullable Map<String,String> properties;
        private String provisioningState;
        private @Nullable ProbeSettingsResponse readinessProbe;
        private @Nullable OnlineRequestSettingsResponse requestSettings;
        private @Nullable Either<AutoScaleSettingsResponse,ManualScaleSettingsResponse> scaleSettings;
        public Builder() {}
        public Builder(ManagedOnlineDeploymentResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.appInsightsEnabled = defaults.appInsightsEnabled;
    	      this.codeConfiguration = defaults.codeConfiguration;
    	      this.description = defaults.description;
    	      this.endpointComputeType = defaults.endpointComputeType;
    	      this.environmentId = defaults.environmentId;
    	      this.environmentVariables = defaults.environmentVariables;
    	      this.instanceType = defaults.instanceType;
    	      this.livenessProbe = defaults.livenessProbe;
    	      this.model = defaults.model;
    	      this.properties = defaults.properties;
    	      this.provisioningState = defaults.provisioningState;
    	      this.readinessProbe = defaults.readinessProbe;
    	      this.requestSettings = defaults.requestSettings;
    	      this.scaleSettings = defaults.scaleSettings;
        }

        @CustomType.Setter
        public Builder appInsightsEnabled(@Nullable Boolean appInsightsEnabled) {
            this.appInsightsEnabled = appInsightsEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder codeConfiguration(@Nullable CodeConfigurationResponse codeConfiguration) {
            this.codeConfiguration = codeConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder endpointComputeType(String endpointComputeType) {
            this.endpointComputeType = Objects.requireNonNull(endpointComputeType);
            return this;
        }
        @CustomType.Setter
        public Builder environmentId(@Nullable String environmentId) {
            this.environmentId = environmentId;
            return this;
        }
        @CustomType.Setter
        public Builder environmentVariables(@Nullable Map<String,String> environmentVariables) {
            this.environmentVariables = environmentVariables;
            return this;
        }
        @CustomType.Setter
        public Builder instanceType(@Nullable String instanceType) {
            this.instanceType = instanceType;
            return this;
        }
        @CustomType.Setter
        public Builder livenessProbe(@Nullable ProbeSettingsResponse livenessProbe) {
            this.livenessProbe = livenessProbe;
            return this;
        }
        @CustomType.Setter
        public Builder model(@Nullable Object model) {
            this.model = model;
            return this;
        }
        @CustomType.Setter
        public Builder properties(@Nullable Map<String,String> properties) {
            this.properties = properties;
            return this;
        }
        @CustomType.Setter
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        @CustomType.Setter
        public Builder readinessProbe(@Nullable ProbeSettingsResponse readinessProbe) {
            this.readinessProbe = readinessProbe;
            return this;
        }
        @CustomType.Setter
        public Builder requestSettings(@Nullable OnlineRequestSettingsResponse requestSettings) {
            this.requestSettings = requestSettings;
            return this;
        }
        @CustomType.Setter
        public Builder scaleSettings(@Nullable Either<AutoScaleSettingsResponse,ManualScaleSettingsResponse> scaleSettings) {
            this.scaleSettings = scaleSettings;
            return this;
        }
        public ManagedOnlineDeploymentResponse build() {
            final var o = new ManagedOnlineDeploymentResponse();
            o.appInsightsEnabled = appInsightsEnabled;
            o.codeConfiguration = codeConfiguration;
            o.description = description;
            o.endpointComputeType = endpointComputeType;
            o.environmentId = environmentId;
            o.environmentVariables = environmentVariables;
            o.instanceType = instanceType;
            o.livenessProbe = livenessProbe;
            o.model = model;
            o.properties = properties;
            o.provisioningState = provisioningState;
            o.readinessProbe = readinessProbe;
            o.requestSettings = requestSettings;
            o.scaleSettings = scaleSettings;
            return o;
        }
    }
}
