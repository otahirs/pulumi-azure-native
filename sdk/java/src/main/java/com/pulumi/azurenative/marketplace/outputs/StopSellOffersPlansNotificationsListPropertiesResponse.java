// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.marketplace.outputs;

import com.pulumi.azurenative.marketplace.outputs.PlanNotificationDetailsResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class StopSellOffersPlansNotificationsListPropertiesResponse {
    /**
     * @return The offer display name
     * 
     */
    private String displayName;
    /**
     * @return The icon url
     * 
     */
    private String icon;
    /**
     * @return A value indicating whether entire offer is in stop sell or only few of its plans
     * 
     */
    private Boolean isEntire;
    /**
     * @return The notification message code
     * 
     */
    private Double messageCode;
    /**
     * @return The offer id
     * 
     */
    private String offerId;
    /**
     * @return The list of removed plans notifications
     * 
     */
    private List<PlanNotificationDetailsResponse> plans;
    /**
     * @return True if the offer has public plans
     * 
     */
    private Boolean publicContext;
    /**
     * @return The subscriptions related to private plans
     * 
     */
    private List<String> subscriptionsIds;

    private StopSellOffersPlansNotificationsListPropertiesResponse() {}
    /**
     * @return The offer display name
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The icon url
     * 
     */
    public String icon() {
        return this.icon;
    }
    /**
     * @return A value indicating whether entire offer is in stop sell or only few of its plans
     * 
     */
    public Boolean isEntire() {
        return this.isEntire;
    }
    /**
     * @return The notification message code
     * 
     */
    public Double messageCode() {
        return this.messageCode;
    }
    /**
     * @return The offer id
     * 
     */
    public String offerId() {
        return this.offerId;
    }
    /**
     * @return The list of removed plans notifications
     * 
     */
    public List<PlanNotificationDetailsResponse> plans() {
        return this.plans;
    }
    /**
     * @return True if the offer has public plans
     * 
     */
    public Boolean publicContext() {
        return this.publicContext;
    }
    /**
     * @return The subscriptions related to private plans
     * 
     */
    public List<String> subscriptionsIds() {
        return this.subscriptionsIds;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(StopSellOffersPlansNotificationsListPropertiesResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String displayName;
        private String icon;
        private Boolean isEntire;
        private Double messageCode;
        private String offerId;
        private List<PlanNotificationDetailsResponse> plans;
        private Boolean publicContext;
        private List<String> subscriptionsIds;
        public Builder() {}
        public Builder(StopSellOffersPlansNotificationsListPropertiesResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.displayName = defaults.displayName;
    	      this.icon = defaults.icon;
    	      this.isEntire = defaults.isEntire;
    	      this.messageCode = defaults.messageCode;
    	      this.offerId = defaults.offerId;
    	      this.plans = defaults.plans;
    	      this.publicContext = defaults.publicContext;
    	      this.subscriptionsIds = defaults.subscriptionsIds;
        }

        @CustomType.Setter
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        @CustomType.Setter
        public Builder icon(String icon) {
            this.icon = Objects.requireNonNull(icon);
            return this;
        }
        @CustomType.Setter
        public Builder isEntire(Boolean isEntire) {
            this.isEntire = Objects.requireNonNull(isEntire);
            return this;
        }
        @CustomType.Setter
        public Builder messageCode(Double messageCode) {
            this.messageCode = Objects.requireNonNull(messageCode);
            return this;
        }
        @CustomType.Setter
        public Builder offerId(String offerId) {
            this.offerId = Objects.requireNonNull(offerId);
            return this;
        }
        @CustomType.Setter
        public Builder plans(List<PlanNotificationDetailsResponse> plans) {
            this.plans = Objects.requireNonNull(plans);
            return this;
        }
        public Builder plans(PlanNotificationDetailsResponse... plans) {
            return plans(List.of(plans));
        }
        @CustomType.Setter
        public Builder publicContext(Boolean publicContext) {
            this.publicContext = Objects.requireNonNull(publicContext);
            return this;
        }
        @CustomType.Setter
        public Builder subscriptionsIds(List<String> subscriptionsIds) {
            this.subscriptionsIds = Objects.requireNonNull(subscriptionsIds);
            return this;
        }
        public Builder subscriptionsIds(String... subscriptionsIds) {
            return subscriptionsIds(List.of(subscriptionsIds));
        }
        public StopSellOffersPlansNotificationsListPropertiesResponse build() {
            final var o = new StopSellOffersPlansNotificationsListPropertiesResponse();
            o.displayName = displayName;
            o.icon = icon;
            o.isEntire = isEntire;
            o.messageCode = messageCode;
            o.offerId = offerId;
            o.plans = plans;
            o.publicContext = publicContext;
            o.subscriptionsIds = subscriptionsIds;
            return o;
        }
    }
}
