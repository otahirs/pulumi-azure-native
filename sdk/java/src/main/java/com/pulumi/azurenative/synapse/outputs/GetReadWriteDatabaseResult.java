// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.synapse.outputs;

import com.pulumi.azurenative.synapse.outputs.DatabaseStatisticsResponse;
import com.pulumi.azurenative.synapse.outputs.SystemDataResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetReadWriteDatabaseResult {
    /**
     * @return The time the data should be kept in cache for fast queries in TimeSpan.
     * 
     */
    private @Nullable String hotCachePeriod;
    /**
     * @return Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    private String id;
    /**
     * @return Indicates whether the database is followed.
     * 
     */
    private Boolean isFollowed;
    /**
     * @return Kind of the database
     * Expected value is &#39;ReadWrite&#39;.
     * 
     */
    private String kind;
    /**
     * @return Resource location.
     * 
     */
    private @Nullable String location;
    /**
     * @return The name of the resource
     * 
     */
    private String name;
    /**
     * @return The provisioned state of the resource.
     * 
     */
    private String provisioningState;
    /**
     * @return The time the data should be kept before it stops being accessible to queries in TimeSpan.
     * 
     */
    private @Nullable String softDeletePeriod;
    /**
     * @return The statistics of the database.
     * 
     */
    private DatabaseStatisticsResponse statistics;
    /**
     * @return Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     */
    private SystemDataResponse systemData;
    /**
     * @return The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    private String type;

    private GetReadWriteDatabaseResult() {}
    /**
     * @return The time the data should be kept in cache for fast queries in TimeSpan.
     * 
     */
    public Optional<String> hotCachePeriod() {
        return Optional.ofNullable(this.hotCachePeriod);
    }
    /**
     * @return Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Indicates whether the database is followed.
     * 
     */
    public Boolean isFollowed() {
        return this.isFollowed;
    }
    /**
     * @return Kind of the database
     * Expected value is &#39;ReadWrite&#39;.
     * 
     */
    public String kind() {
        return this.kind;
    }
    /**
     * @return Resource location.
     * 
     */
    public Optional<String> location() {
        return Optional.ofNullable(this.location);
    }
    /**
     * @return The name of the resource
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The provisioned state of the resource.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * @return The time the data should be kept before it stops being accessible to queries in TimeSpan.
     * 
     */
    public Optional<String> softDeletePeriod() {
        return Optional.ofNullable(this.softDeletePeriod);
    }
    /**
     * @return The statistics of the database.
     * 
     */
    public DatabaseStatisticsResponse statistics() {
        return this.statistics;
    }
    /**
     * @return Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     */
    public SystemDataResponse systemData() {
        return this.systemData;
    }
    /**
     * @return The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetReadWriteDatabaseResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String hotCachePeriod;
        private String id;
        private Boolean isFollowed;
        private String kind;
        private @Nullable String location;
        private String name;
        private String provisioningState;
        private @Nullable String softDeletePeriod;
        private DatabaseStatisticsResponse statistics;
        private SystemDataResponse systemData;
        private String type;
        public Builder() {}
        public Builder(GetReadWriteDatabaseResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.hotCachePeriod = defaults.hotCachePeriod;
    	      this.id = defaults.id;
    	      this.isFollowed = defaults.isFollowed;
    	      this.kind = defaults.kind;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.provisioningState = defaults.provisioningState;
    	      this.softDeletePeriod = defaults.softDeletePeriod;
    	      this.statistics = defaults.statistics;
    	      this.systemData = defaults.systemData;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder hotCachePeriod(@Nullable String hotCachePeriod) {
            this.hotCachePeriod = hotCachePeriod;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder isFollowed(Boolean isFollowed) {
            this.isFollowed = Objects.requireNonNull(isFollowed);
            return this;
        }
        @CustomType.Setter
        public Builder kind(String kind) {
            this.kind = Objects.requireNonNull(kind);
            return this;
        }
        @CustomType.Setter
        public Builder location(@Nullable String location) {
            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        @CustomType.Setter
        public Builder softDeletePeriod(@Nullable String softDeletePeriod) {
            this.softDeletePeriod = softDeletePeriod;
            return this;
        }
        @CustomType.Setter
        public Builder statistics(DatabaseStatisticsResponse statistics) {
            this.statistics = Objects.requireNonNull(statistics);
            return this;
        }
        @CustomType.Setter
        public Builder systemData(SystemDataResponse systemData) {
            this.systemData = Objects.requireNonNull(systemData);
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetReadWriteDatabaseResult build() {
            final var o = new GetReadWriteDatabaseResult();
            o.hotCachePeriod = hotCachePeriod;
            o.id = id;
            o.isFollowed = isFollowed;
            o.kind = kind;
            o.location = location;
            o.name = name;
            o.provisioningState = provisioningState;
            o.softDeletePeriod = softDeletePeriod;
            o.statistics = statistics;
            o.systemData = systemData;
            o.type = type;
            return o;
        }
    }
}
