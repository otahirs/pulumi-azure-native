// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.networkfunction;

import com.pulumi.azurenative.networkfunction.inputs.EmissionPoliciesPropertiesFormatArgs;
import com.pulumi.azurenative.networkfunction.inputs.IngestionPolicyPropertiesFormatArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CollectorPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final CollectorPolicyArgs Empty = new CollectorPolicyArgs();

    /**
     * Azure Traffic Collector name
     * 
     */
    @Import(name="azureTrafficCollectorName", required=true)
    private Output<String> azureTrafficCollectorName;

    /**
     * @return Azure Traffic Collector name
     * 
     */
    public Output<String> azureTrafficCollectorName() {
        return this.azureTrafficCollectorName;
    }

    /**
     * Collector Policy Name
     * 
     */
    @Import(name="collectorPolicyName")
    private @Nullable Output<String> collectorPolicyName;

    /**
     * @return Collector Policy Name
     * 
     */
    public Optional<Output<String>> collectorPolicyName() {
        return Optional.ofNullable(this.collectorPolicyName);
    }

    /**
     * Emission policies.
     * 
     */
    @Import(name="emissionPolicies")
    private @Nullable Output<List<EmissionPoliciesPropertiesFormatArgs>> emissionPolicies;

    /**
     * @return Emission policies.
     * 
     */
    public Optional<Output<List<EmissionPoliciesPropertiesFormatArgs>>> emissionPolicies() {
        return Optional.ofNullable(this.emissionPolicies);
    }

    /**
     * Ingestion policies.
     * 
     */
    @Import(name="ingestionPolicy")
    private @Nullable Output<IngestionPolicyPropertiesFormatArgs> ingestionPolicy;

    /**
     * @return Ingestion policies.
     * 
     */
    public Optional<Output<IngestionPolicyPropertiesFormatArgs>> ingestionPolicy() {
        return Optional.ofNullable(this.ingestionPolicy);
    }

    /**
     * The name of the resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    private CollectorPolicyArgs() {}

    private CollectorPolicyArgs(CollectorPolicyArgs $) {
        this.azureTrafficCollectorName = $.azureTrafficCollectorName;
        this.collectorPolicyName = $.collectorPolicyName;
        this.emissionPolicies = $.emissionPolicies;
        this.ingestionPolicy = $.ingestionPolicy;
        this.resourceGroupName = $.resourceGroupName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CollectorPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CollectorPolicyArgs $;

        public Builder() {
            $ = new CollectorPolicyArgs();
        }

        public Builder(CollectorPolicyArgs defaults) {
            $ = new CollectorPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param azureTrafficCollectorName Azure Traffic Collector name
         * 
         * @return builder
         * 
         */
        public Builder azureTrafficCollectorName(Output<String> azureTrafficCollectorName) {
            $.azureTrafficCollectorName = azureTrafficCollectorName;
            return this;
        }

        /**
         * @param azureTrafficCollectorName Azure Traffic Collector name
         * 
         * @return builder
         * 
         */
        public Builder azureTrafficCollectorName(String azureTrafficCollectorName) {
            return azureTrafficCollectorName(Output.of(azureTrafficCollectorName));
        }

        /**
         * @param collectorPolicyName Collector Policy Name
         * 
         * @return builder
         * 
         */
        public Builder collectorPolicyName(@Nullable Output<String> collectorPolicyName) {
            $.collectorPolicyName = collectorPolicyName;
            return this;
        }

        /**
         * @param collectorPolicyName Collector Policy Name
         * 
         * @return builder
         * 
         */
        public Builder collectorPolicyName(String collectorPolicyName) {
            return collectorPolicyName(Output.of(collectorPolicyName));
        }

        /**
         * @param emissionPolicies Emission policies.
         * 
         * @return builder
         * 
         */
        public Builder emissionPolicies(@Nullable Output<List<EmissionPoliciesPropertiesFormatArgs>> emissionPolicies) {
            $.emissionPolicies = emissionPolicies;
            return this;
        }

        /**
         * @param emissionPolicies Emission policies.
         * 
         * @return builder
         * 
         */
        public Builder emissionPolicies(List<EmissionPoliciesPropertiesFormatArgs> emissionPolicies) {
            return emissionPolicies(Output.of(emissionPolicies));
        }

        /**
         * @param emissionPolicies Emission policies.
         * 
         * @return builder
         * 
         */
        public Builder emissionPolicies(EmissionPoliciesPropertiesFormatArgs... emissionPolicies) {
            return emissionPolicies(List.of(emissionPolicies));
        }

        /**
         * @param ingestionPolicy Ingestion policies.
         * 
         * @return builder
         * 
         */
        public Builder ingestionPolicy(@Nullable Output<IngestionPolicyPropertiesFormatArgs> ingestionPolicy) {
            $.ingestionPolicy = ingestionPolicy;
            return this;
        }

        /**
         * @param ingestionPolicy Ingestion policies.
         * 
         * @return builder
         * 
         */
        public Builder ingestionPolicy(IngestionPolicyPropertiesFormatArgs ingestionPolicy) {
            return ingestionPolicy(Output.of(ingestionPolicy));
        }

        /**
         * @param resourceGroupName The name of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public CollectorPolicyArgs build() {
            $.azureTrafficCollectorName = Objects.requireNonNull($.azureTrafficCollectorName, "expected parameter 'azureTrafficCollectorName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
