// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.testbase.outputs;

import com.pulumi.azurenative.testbase.outputs.PackageValidationResultResponse;
import com.pulumi.azurenative.testbase.outputs.SystemDataResponse;
import com.pulumi.azurenative.testbase.outputs.TargetOSInfoResponse;
import com.pulumi.azurenative.testbase.outputs.TestResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetPackageResult {
    /**
     * @return Application name
     * 
     */
    private String applicationName;
    /**
     * @return The file path of the package.
     * 
     */
    private String blobPath;
    /**
     * @return Resource Etag.
     * 
     */
    private String etag;
    /**
     * @return The flighting ring for feature update.
     * 
     */
    private String flightingRing;
    /**
     * @return Resource ID.
     * 
     */
    private String id;
    /**
     * @return Flag showing that whether the package is enabled. It doesn&#39;t schedule test for package which is not enabled.
     * 
     */
    private Boolean isEnabled;
    /**
     * @return The UTC timestamp when the package was last modified.
     * 
     */
    private String lastModifiedTime;
    /**
     * @return The geo-location where the resource lives
     * 
     */
    private String location;
    /**
     * @return Resource name.
     * 
     */
    private String name;
    /**
     * @return The status of the package.
     * 
     */
    private String packageStatus;
    /**
     * @return The provisioning state of the resource.
     * 
     */
    private String provisioningState;
    /**
     * @return The system metadata relating to this resource
     * 
     */
    private SystemDataResponse systemData;
    /**
     * @return The tags of the resource.
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return Specifies the target OSs of specific OS Update types.
     * 
     */
    private List<TargetOSInfoResponse> targetOSList;
    /**
     * @return OOB, functional or both. Mapped to the data in &#39;tests&#39; property.
     * 
     */
    private List<String> testTypes;
    /**
     * @return The detailed test information.
     * 
     */
    private List<TestResponse> tests;
    /**
     * @return Resource type.
     * 
     */
    private String type;
    /**
     * @return The validation results. There&#39;s validation on package when it&#39;s created or updated.
     * 
     */
    private List<PackageValidationResultResponse> validationResults;
    /**
     * @return Application version
     * 
     */
    private String version;

    private GetPackageResult() {}
    /**
     * @return Application name
     * 
     */
    public String applicationName() {
        return this.applicationName;
    }
    /**
     * @return The file path of the package.
     * 
     */
    public String blobPath() {
        return this.blobPath;
    }
    /**
     * @return Resource Etag.
     * 
     */
    public String etag() {
        return this.etag;
    }
    /**
     * @return The flighting ring for feature update.
     * 
     */
    public String flightingRing() {
        return this.flightingRing;
    }
    /**
     * @return Resource ID.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Flag showing that whether the package is enabled. It doesn&#39;t schedule test for package which is not enabled.
     * 
     */
    public Boolean isEnabled() {
        return this.isEnabled;
    }
    /**
     * @return The UTC timestamp when the package was last modified.
     * 
     */
    public String lastModifiedTime() {
        return this.lastModifiedTime;
    }
    /**
     * @return The geo-location where the resource lives
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return Resource name.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The status of the package.
     * 
     */
    public String packageStatus() {
        return this.packageStatus;
    }
    /**
     * @return The provisioning state of the resource.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * @return The system metadata relating to this resource
     * 
     */
    public SystemDataResponse systemData() {
        return this.systemData;
    }
    /**
     * @return The tags of the resource.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return Specifies the target OSs of specific OS Update types.
     * 
     */
    public List<TargetOSInfoResponse> targetOSList() {
        return this.targetOSList;
    }
    /**
     * @return OOB, functional or both. Mapped to the data in &#39;tests&#39; property.
     * 
     */
    public List<String> testTypes() {
        return this.testTypes;
    }
    /**
     * @return The detailed test information.
     * 
     */
    public List<TestResponse> tests() {
        return this.tests;
    }
    /**
     * @return Resource type.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return The validation results. There&#39;s validation on package when it&#39;s created or updated.
     * 
     */
    public List<PackageValidationResultResponse> validationResults() {
        return this.validationResults;
    }
    /**
     * @return Application version
     * 
     */
    public String version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPackageResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String applicationName;
        private String blobPath;
        private String etag;
        private String flightingRing;
        private String id;
        private Boolean isEnabled;
        private String lastModifiedTime;
        private String location;
        private String name;
        private String packageStatus;
        private String provisioningState;
        private SystemDataResponse systemData;
        private @Nullable Map<String,String> tags;
        private List<TargetOSInfoResponse> targetOSList;
        private List<String> testTypes;
        private List<TestResponse> tests;
        private String type;
        private List<PackageValidationResultResponse> validationResults;
        private String version;
        public Builder() {}
        public Builder(GetPackageResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationName = defaults.applicationName;
    	      this.blobPath = defaults.blobPath;
    	      this.etag = defaults.etag;
    	      this.flightingRing = defaults.flightingRing;
    	      this.id = defaults.id;
    	      this.isEnabled = defaults.isEnabled;
    	      this.lastModifiedTime = defaults.lastModifiedTime;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.packageStatus = defaults.packageStatus;
    	      this.provisioningState = defaults.provisioningState;
    	      this.systemData = defaults.systemData;
    	      this.tags = defaults.tags;
    	      this.targetOSList = defaults.targetOSList;
    	      this.testTypes = defaults.testTypes;
    	      this.tests = defaults.tests;
    	      this.type = defaults.type;
    	      this.validationResults = defaults.validationResults;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder applicationName(String applicationName) {
            this.applicationName = Objects.requireNonNull(applicationName);
            return this;
        }
        @CustomType.Setter
        public Builder blobPath(String blobPath) {
            this.blobPath = Objects.requireNonNull(blobPath);
            return this;
        }
        @CustomType.Setter
        public Builder etag(String etag) {
            this.etag = Objects.requireNonNull(etag);
            return this;
        }
        @CustomType.Setter
        public Builder flightingRing(String flightingRing) {
            this.flightingRing = Objects.requireNonNull(flightingRing);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder isEnabled(Boolean isEnabled) {
            this.isEnabled = Objects.requireNonNull(isEnabled);
            return this;
        }
        @CustomType.Setter
        public Builder lastModifiedTime(String lastModifiedTime) {
            this.lastModifiedTime = Objects.requireNonNull(lastModifiedTime);
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder packageStatus(String packageStatus) {
            this.packageStatus = Objects.requireNonNull(packageStatus);
            return this;
        }
        @CustomType.Setter
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        @CustomType.Setter
        public Builder systemData(SystemDataResponse systemData) {
            this.systemData = Objects.requireNonNull(systemData);
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder targetOSList(List<TargetOSInfoResponse> targetOSList) {
            this.targetOSList = Objects.requireNonNull(targetOSList);
            return this;
        }
        public Builder targetOSList(TargetOSInfoResponse... targetOSList) {
            return targetOSList(List.of(targetOSList));
        }
        @CustomType.Setter
        public Builder testTypes(List<String> testTypes) {
            this.testTypes = Objects.requireNonNull(testTypes);
            return this;
        }
        public Builder testTypes(String... testTypes) {
            return testTypes(List.of(testTypes));
        }
        @CustomType.Setter
        public Builder tests(List<TestResponse> tests) {
            this.tests = Objects.requireNonNull(tests);
            return this;
        }
        public Builder tests(TestResponse... tests) {
            return tests(List.of(tests));
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder validationResults(List<PackageValidationResultResponse> validationResults) {
            this.validationResults = Objects.requireNonNull(validationResults);
            return this;
        }
        public Builder validationResults(PackageValidationResultResponse... validationResults) {
            return validationResults(List.of(validationResults));
        }
        @CustomType.Setter
        public Builder version(String version) {
            this.version = Objects.requireNonNull(version);
            return this;
        }
        public GetPackageResult build() {
            final var o = new GetPackageResult();
            o.applicationName = applicationName;
            o.blobPath = blobPath;
            o.etag = etag;
            o.flightingRing = flightingRing;
            o.id = id;
            o.isEnabled = isEnabled;
            o.lastModifiedTime = lastModifiedTime;
            o.location = location;
            o.name = name;
            o.packageStatus = packageStatus;
            o.provisioningState = provisioningState;
            o.systemData = systemData;
            o.tags = tags;
            o.targetOSList = targetOSList;
            o.testTypes = testTypes;
            o.tests = tests;
            o.type = type;
            o.validationResults = validationResults;
            o.version = version;
            return o;
        }
    }
}
