// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.documentdb.outputs;

import com.pulumi.azurenative.documentdb.outputs.CassandraSchemaResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class CassandraTableGetPropertiesResponseResource {
    /**
     * @return Analytical TTL.
     * 
     */
    private @Nullable Integer analyticalStorageTtl;
    /**
     * @return Time to live of the Cosmos DB Cassandra table
     * 
     */
    private @Nullable Integer defaultTtl;
    /**
     * @return A system generated property representing the resource etag required for optimistic concurrency control.
     * 
     */
    private String etag;
    /**
     * @return Name of the Cosmos DB Cassandra table
     * 
     */
    private String id;
    /**
     * @return A system generated property. A unique identifier.
     * 
     */
    private String rid;
    /**
     * @return Schema of the Cosmos DB Cassandra table
     * 
     */
    private @Nullable CassandraSchemaResponse schema;
    /**
     * @return A system generated property that denotes the last updated timestamp of the resource.
     * 
     */
    private Double ts;

    private CassandraTableGetPropertiesResponseResource() {}
    /**
     * @return Analytical TTL.
     * 
     */
    public Optional<Integer> analyticalStorageTtl() {
        return Optional.ofNullable(this.analyticalStorageTtl);
    }
    /**
     * @return Time to live of the Cosmos DB Cassandra table
     * 
     */
    public Optional<Integer> defaultTtl() {
        return Optional.ofNullable(this.defaultTtl);
    }
    /**
     * @return A system generated property representing the resource etag required for optimistic concurrency control.
     * 
     */
    public String etag() {
        return this.etag;
    }
    /**
     * @return Name of the Cosmos DB Cassandra table
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A system generated property. A unique identifier.
     * 
     */
    public String rid() {
        return this.rid;
    }
    /**
     * @return Schema of the Cosmos DB Cassandra table
     * 
     */
    public Optional<CassandraSchemaResponse> schema() {
        return Optional.ofNullable(this.schema);
    }
    /**
     * @return A system generated property that denotes the last updated timestamp of the resource.
     * 
     */
    public Double ts() {
        return this.ts;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CassandraTableGetPropertiesResponseResource defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer analyticalStorageTtl;
        private @Nullable Integer defaultTtl;
        private String etag;
        private String id;
        private String rid;
        private @Nullable CassandraSchemaResponse schema;
        private Double ts;
        public Builder() {}
        public Builder(CassandraTableGetPropertiesResponseResource defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.analyticalStorageTtl = defaults.analyticalStorageTtl;
    	      this.defaultTtl = defaults.defaultTtl;
    	      this.etag = defaults.etag;
    	      this.id = defaults.id;
    	      this.rid = defaults.rid;
    	      this.schema = defaults.schema;
    	      this.ts = defaults.ts;
        }

        @CustomType.Setter
        public Builder analyticalStorageTtl(@Nullable Integer analyticalStorageTtl) {
            this.analyticalStorageTtl = analyticalStorageTtl;
            return this;
        }
        @CustomType.Setter
        public Builder defaultTtl(@Nullable Integer defaultTtl) {
            this.defaultTtl = defaultTtl;
            return this;
        }
        @CustomType.Setter
        public Builder etag(String etag) {
            this.etag = Objects.requireNonNull(etag);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder rid(String rid) {
            this.rid = Objects.requireNonNull(rid);
            return this;
        }
        @CustomType.Setter
        public Builder schema(@Nullable CassandraSchemaResponse schema) {
            this.schema = schema;
            return this;
        }
        @CustomType.Setter
        public Builder ts(Double ts) {
            this.ts = Objects.requireNonNull(ts);
            return this;
        }
        public CassandraTableGetPropertiesResponseResource build() {
            final var o = new CassandraTableGetPropertiesResponseResource();
            o.analyticalStorageTtl = analyticalStorageTtl;
            o.defaultTtl = defaultTtl;
            o.etag = etag;
            o.id = id;
            o.rid = rid;
            o.schema = schema;
            o.ts = ts;
            return o;
        }
    }
}
