// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.botservice.outputs;

import com.pulumi.azurenative.botservice.outputs.ServiceProviderParameterResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class ServiceProviderPropertiesResponse {
    /**
     * @return Display Name of the Service Provider
     * 
     */
    private String devPortalUrl;
    /**
     * @return Display Name of the Service Provider
     * 
     */
    private String displayName;
    /**
     * @return Display Name of the Service Provider
     * 
     */
    private String iconUrl;
    /**
     * @return Id for Service Provider
     * 
     */
    private String id;
    /**
     * @return The list of parameters for the Service Provider
     * 
     */
    private @Nullable List<ServiceProviderParameterResponse> parameters;
    /**
     * @return Display Name of the Service Provider
     * 
     */
    private String serviceProviderName;

    private ServiceProviderPropertiesResponse() {}
    /**
     * @return Display Name of the Service Provider
     * 
     */
    public String devPortalUrl() {
        return this.devPortalUrl;
    }
    /**
     * @return Display Name of the Service Provider
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Display Name of the Service Provider
     * 
     */
    public String iconUrl() {
        return this.iconUrl;
    }
    /**
     * @return Id for Service Provider
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The list of parameters for the Service Provider
     * 
     */
    public List<ServiceProviderParameterResponse> parameters() {
        return this.parameters == null ? List.of() : this.parameters;
    }
    /**
     * @return Display Name of the Service Provider
     * 
     */
    public String serviceProviderName() {
        return this.serviceProviderName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServiceProviderPropertiesResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String devPortalUrl;
        private String displayName;
        private String iconUrl;
        private String id;
        private @Nullable List<ServiceProviderParameterResponse> parameters;
        private String serviceProviderName;
        public Builder() {}
        public Builder(ServiceProviderPropertiesResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.devPortalUrl = defaults.devPortalUrl;
    	      this.displayName = defaults.displayName;
    	      this.iconUrl = defaults.iconUrl;
    	      this.id = defaults.id;
    	      this.parameters = defaults.parameters;
    	      this.serviceProviderName = defaults.serviceProviderName;
        }

        @CustomType.Setter
        public Builder devPortalUrl(String devPortalUrl) {
            this.devPortalUrl = Objects.requireNonNull(devPortalUrl);
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        @CustomType.Setter
        public Builder iconUrl(String iconUrl) {
            this.iconUrl = Objects.requireNonNull(iconUrl);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder parameters(@Nullable List<ServiceProviderParameterResponse> parameters) {
            this.parameters = parameters;
            return this;
        }
        public Builder parameters(ServiceProviderParameterResponse... parameters) {
            return parameters(List.of(parameters));
        }
        @CustomType.Setter
        public Builder serviceProviderName(String serviceProviderName) {
            this.serviceProviderName = Objects.requireNonNull(serviceProviderName);
            return this;
        }
        public ServiceProviderPropertiesResponse build() {
            final var o = new ServiceProviderPropertiesResponse();
            o.devPortalUrl = devPortalUrl;
            o.displayName = displayName;
            o.iconUrl = iconUrl;
            o.id = id;
            o.parameters = parameters;
            o.serviceProviderName = serviceProviderName;
            return o;
        }
    }
}
