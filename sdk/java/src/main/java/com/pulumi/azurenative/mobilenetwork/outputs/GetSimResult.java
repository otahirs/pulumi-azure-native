// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.mobilenetwork.outputs;

import com.pulumi.azurenative.mobilenetwork.outputs.MobileNetworkResourceIdResponse;
import com.pulumi.azurenative.mobilenetwork.outputs.SimPolicyResourceIdResponse;
import com.pulumi.azurenative.mobilenetwork.outputs.SimStaticIpPropertiesResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetSimResult {
    /**
     * @return The configuration state of the sim resource - complete or incomplete.
     * 
     */
    private String configurationState;
    /**
     * @return The timestamp of resource creation (UTC).
     * 
     */
    private @Nullable String createdAt;
    /**
     * @return The identity that created the resource.
     * 
     */
    private @Nullable String createdBy;
    /**
     * @return The type of identity that created the resource.
     * 
     */
    private @Nullable String createdByType;
    /**
     * @return An optional free-form text field that can be used to record the device type this sim is associated with, for example &#39;Video camera&#39;. The Azure portal allows Sims to be grouped and filtered based on this value.
     * 
     */
    private @Nullable String deviceType;
    /**
     * @return Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    private String id;
    /**
     * @return The Integrated Circuit Card ID (ICC Id) for the sim.
     * 
     */
    private @Nullable String integratedCircuitCardIdentifier;
    /**
     * @return The International Mobile Subscriber Identity (IMSI) for the sim.
     * 
     */
    private String internationalMobileSubscriberIdentity;
    /**
     * @return The timestamp of resource last modification (UTC)
     * 
     */
    private @Nullable String lastModifiedAt;
    /**
     * @return The identity that last modified the resource.
     * 
     */
    private @Nullable String lastModifiedBy;
    /**
     * @return The type of identity that last modified the resource.
     * 
     */
    private @Nullable String lastModifiedByType;
    /**
     * @return The geo-location where the resource lives
     * 
     */
    private String location;
    /**
     * @return Mobile network that this sim belongs to
     * 
     */
    private @Nullable MobileNetworkResourceIdResponse mobileNetwork;
    /**
     * @return The name of the resource
     * 
     */
    private String name;
    /**
     * @return The provisioning state of the sim resource.
     * 
     */
    private String provisioningState;
    /**
     * @return The simPolicy used by this sim.
     * 
     */
    private @Nullable SimPolicyResourceIdResponse simPolicy;
    /**
     * @return A list of static IP addresses assigned to this sim. Each address is assigned at a defined network scope, made up of {attached data network, slice}.
     * 
     */
    private @Nullable List<SimStaticIpPropertiesResponse> staticIpConfiguration;
    /**
     * @return Resource tags.
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    private String type;

    private GetSimResult() {}
    /**
     * @return The configuration state of the sim resource - complete or incomplete.
     * 
     */
    public String configurationState() {
        return this.configurationState;
    }
    /**
     * @return The timestamp of resource creation (UTC).
     * 
     */
    public Optional<String> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }
    /**
     * @return The identity that created the resource.
     * 
     */
    public Optional<String> createdBy() {
        return Optional.ofNullable(this.createdBy);
    }
    /**
     * @return The type of identity that created the resource.
     * 
     */
    public Optional<String> createdByType() {
        return Optional.ofNullable(this.createdByType);
    }
    /**
     * @return An optional free-form text field that can be used to record the device type this sim is associated with, for example &#39;Video camera&#39;. The Azure portal allows Sims to be grouped and filtered based on this value.
     * 
     */
    public Optional<String> deviceType() {
        return Optional.ofNullable(this.deviceType);
    }
    /**
     * @return Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The Integrated Circuit Card ID (ICC Id) for the sim.
     * 
     */
    public Optional<String> integratedCircuitCardIdentifier() {
        return Optional.ofNullable(this.integratedCircuitCardIdentifier);
    }
    /**
     * @return The International Mobile Subscriber Identity (IMSI) for the sim.
     * 
     */
    public String internationalMobileSubscriberIdentity() {
        return this.internationalMobileSubscriberIdentity;
    }
    /**
     * @return The timestamp of resource last modification (UTC)
     * 
     */
    public Optional<String> lastModifiedAt() {
        return Optional.ofNullable(this.lastModifiedAt);
    }
    /**
     * @return The identity that last modified the resource.
     * 
     */
    public Optional<String> lastModifiedBy() {
        return Optional.ofNullable(this.lastModifiedBy);
    }
    /**
     * @return The type of identity that last modified the resource.
     * 
     */
    public Optional<String> lastModifiedByType() {
        return Optional.ofNullable(this.lastModifiedByType);
    }
    /**
     * @return The geo-location where the resource lives
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return Mobile network that this sim belongs to
     * 
     */
    public Optional<MobileNetworkResourceIdResponse> mobileNetwork() {
        return Optional.ofNullable(this.mobileNetwork);
    }
    /**
     * @return The name of the resource
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The provisioning state of the sim resource.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * @return The simPolicy used by this sim.
     * 
     */
    public Optional<SimPolicyResourceIdResponse> simPolicy() {
        return Optional.ofNullable(this.simPolicy);
    }
    /**
     * @return A list of static IP addresses assigned to this sim. Each address is assigned at a defined network scope, made up of {attached data network, slice}.
     * 
     */
    public List<SimStaticIpPropertiesResponse> staticIpConfiguration() {
        return this.staticIpConfiguration == null ? List.of() : this.staticIpConfiguration;
    }
    /**
     * @return Resource tags.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSimResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String configurationState;
        private @Nullable String createdAt;
        private @Nullable String createdBy;
        private @Nullable String createdByType;
        private @Nullable String deviceType;
        private String id;
        private @Nullable String integratedCircuitCardIdentifier;
        private String internationalMobileSubscriberIdentity;
        private @Nullable String lastModifiedAt;
        private @Nullable String lastModifiedBy;
        private @Nullable String lastModifiedByType;
        private String location;
        private @Nullable MobileNetworkResourceIdResponse mobileNetwork;
        private String name;
        private String provisioningState;
        private @Nullable SimPolicyResourceIdResponse simPolicy;
        private @Nullable List<SimStaticIpPropertiesResponse> staticIpConfiguration;
        private @Nullable Map<String,String> tags;
        private String type;
        public Builder() {}
        public Builder(GetSimResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.configurationState = defaults.configurationState;
    	      this.createdAt = defaults.createdAt;
    	      this.createdBy = defaults.createdBy;
    	      this.createdByType = defaults.createdByType;
    	      this.deviceType = defaults.deviceType;
    	      this.id = defaults.id;
    	      this.integratedCircuitCardIdentifier = defaults.integratedCircuitCardIdentifier;
    	      this.internationalMobileSubscriberIdentity = defaults.internationalMobileSubscriberIdentity;
    	      this.lastModifiedAt = defaults.lastModifiedAt;
    	      this.lastModifiedBy = defaults.lastModifiedBy;
    	      this.lastModifiedByType = defaults.lastModifiedByType;
    	      this.location = defaults.location;
    	      this.mobileNetwork = defaults.mobileNetwork;
    	      this.name = defaults.name;
    	      this.provisioningState = defaults.provisioningState;
    	      this.simPolicy = defaults.simPolicy;
    	      this.staticIpConfiguration = defaults.staticIpConfiguration;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder configurationState(String configurationState) {
            this.configurationState = Objects.requireNonNull(configurationState);
            return this;
        }
        @CustomType.Setter
        public Builder createdAt(@Nullable String createdAt) {
            this.createdAt = createdAt;
            return this;
        }
        @CustomType.Setter
        public Builder createdBy(@Nullable String createdBy) {
            this.createdBy = createdBy;
            return this;
        }
        @CustomType.Setter
        public Builder createdByType(@Nullable String createdByType) {
            this.createdByType = createdByType;
            return this;
        }
        @CustomType.Setter
        public Builder deviceType(@Nullable String deviceType) {
            this.deviceType = deviceType;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder integratedCircuitCardIdentifier(@Nullable String integratedCircuitCardIdentifier) {
            this.integratedCircuitCardIdentifier = integratedCircuitCardIdentifier;
            return this;
        }
        @CustomType.Setter
        public Builder internationalMobileSubscriberIdentity(String internationalMobileSubscriberIdentity) {
            this.internationalMobileSubscriberIdentity = Objects.requireNonNull(internationalMobileSubscriberIdentity);
            return this;
        }
        @CustomType.Setter
        public Builder lastModifiedAt(@Nullable String lastModifiedAt) {
            this.lastModifiedAt = lastModifiedAt;
            return this;
        }
        @CustomType.Setter
        public Builder lastModifiedBy(@Nullable String lastModifiedBy) {
            this.lastModifiedBy = lastModifiedBy;
            return this;
        }
        @CustomType.Setter
        public Builder lastModifiedByType(@Nullable String lastModifiedByType) {
            this.lastModifiedByType = lastModifiedByType;
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        @CustomType.Setter
        public Builder mobileNetwork(@Nullable MobileNetworkResourceIdResponse mobileNetwork) {
            this.mobileNetwork = mobileNetwork;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        @CustomType.Setter
        public Builder simPolicy(@Nullable SimPolicyResourceIdResponse simPolicy) {
            this.simPolicy = simPolicy;
            return this;
        }
        @CustomType.Setter
        public Builder staticIpConfiguration(@Nullable List<SimStaticIpPropertiesResponse> staticIpConfiguration) {
            this.staticIpConfiguration = staticIpConfiguration;
            return this;
        }
        public Builder staticIpConfiguration(SimStaticIpPropertiesResponse... staticIpConfiguration) {
            return staticIpConfiguration(List.of(staticIpConfiguration));
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetSimResult build() {
            final var o = new GetSimResult();
            o.configurationState = configurationState;
            o.createdAt = createdAt;
            o.createdBy = createdBy;
            o.createdByType = createdByType;
            o.deviceType = deviceType;
            o.id = id;
            o.integratedCircuitCardIdentifier = integratedCircuitCardIdentifier;
            o.internationalMobileSubscriberIdentity = internationalMobileSubscriberIdentity;
            o.lastModifiedAt = lastModifiedAt;
            o.lastModifiedBy = lastModifiedBy;
            o.lastModifiedByType = lastModifiedByType;
            o.location = location;
            o.mobileNetwork = mobileNetwork;
            o.name = name;
            o.provisioningState = provisioningState;
            o.simPolicy = simPolicy;
            o.staticIpConfiguration = staticIpConfiguration;
            o.tags = tags;
            o.type = type;
            return o;
        }
    }
}
