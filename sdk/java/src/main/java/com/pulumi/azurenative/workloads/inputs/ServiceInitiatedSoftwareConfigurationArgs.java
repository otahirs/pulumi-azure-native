// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.workloads.inputs;

import com.pulumi.azurenative.workloads.inputs.HighAvailabilitySoftwareConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The SAP Software configuration Input when the software is to be installed by service.
 * 
 */
public final class ServiceInitiatedSoftwareConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceInitiatedSoftwareConfigurationArgs Empty = new ServiceInitiatedSoftwareConfigurationArgs();

    /**
     * The URL to the SAP Build of Materials(BOM) file.
     * 
     */
    @Import(name="bomUrl", required=true)
    private Output<String> bomUrl;

    /**
     * @return The URL to the SAP Build of Materials(BOM) file.
     * 
     */
    public Output<String> bomUrl() {
        return this.bomUrl;
    }

    /**
     * Gets or sets the HA software configuration.
     * 
     */
    @Import(name="highAvailabilitySoftwareConfiguration")
    private @Nullable Output<HighAvailabilitySoftwareConfigurationArgs> highAvailabilitySoftwareConfiguration;

    /**
     * @return Gets or sets the HA software configuration.
     * 
     */
    public Optional<Output<HighAvailabilitySoftwareConfigurationArgs>> highAvailabilitySoftwareConfiguration() {
        return Optional.ofNullable(this.highAvailabilitySoftwareConfiguration);
    }

    /**
     * The SAP bits storage account id.
     * 
     */
    @Import(name="sapBitsStorageAccountId", required=true)
    private Output<String> sapBitsStorageAccountId;

    /**
     * @return The SAP bits storage account id.
     * 
     */
    public Output<String> sapBitsStorageAccountId() {
        return this.sapBitsStorageAccountId;
    }

    /**
     * The FQDN to set for the SAP system during install.
     * 
     */
    @Import(name="sapFqdn", required=true)
    private Output<String> sapFqdn;

    /**
     * @return The FQDN to set for the SAP system during install.
     * 
     */
    public Output<String> sapFqdn() {
        return this.sapFqdn;
    }

    /**
     * The SAP software installation Type.
     * Expected value is &#39;ServiceInitiated&#39;.
     * 
     */
    @Import(name="softwareInstallationType", required=true)
    private Output<String> softwareInstallationType;

    /**
     * @return The SAP software installation Type.
     * Expected value is &#39;ServiceInitiated&#39;.
     * 
     */
    public Output<String> softwareInstallationType() {
        return this.softwareInstallationType;
    }

    /**
     * The software version to install.
     * 
     */
    @Import(name="softwareVersion", required=true)
    private Output<String> softwareVersion;

    /**
     * @return The software version to install.
     * 
     */
    public Output<String> softwareVersion() {
        return this.softwareVersion;
    }

    /**
     * The SSH private key.
     * 
     */
    @Import(name="sshPrivateKey", required=true)
    private Output<String> sshPrivateKey;

    /**
     * @return The SSH private key.
     * 
     */
    public Output<String> sshPrivateKey() {
        return this.sshPrivateKey;
    }

    private ServiceInitiatedSoftwareConfigurationArgs() {}

    private ServiceInitiatedSoftwareConfigurationArgs(ServiceInitiatedSoftwareConfigurationArgs $) {
        this.bomUrl = $.bomUrl;
        this.highAvailabilitySoftwareConfiguration = $.highAvailabilitySoftwareConfiguration;
        this.sapBitsStorageAccountId = $.sapBitsStorageAccountId;
        this.sapFqdn = $.sapFqdn;
        this.softwareInstallationType = $.softwareInstallationType;
        this.softwareVersion = $.softwareVersion;
        this.sshPrivateKey = $.sshPrivateKey;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceInitiatedSoftwareConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceInitiatedSoftwareConfigurationArgs $;

        public Builder() {
            $ = new ServiceInitiatedSoftwareConfigurationArgs();
        }

        public Builder(ServiceInitiatedSoftwareConfigurationArgs defaults) {
            $ = new ServiceInitiatedSoftwareConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bomUrl The URL to the SAP Build of Materials(BOM) file.
         * 
         * @return builder
         * 
         */
        public Builder bomUrl(Output<String> bomUrl) {
            $.bomUrl = bomUrl;
            return this;
        }

        /**
         * @param bomUrl The URL to the SAP Build of Materials(BOM) file.
         * 
         * @return builder
         * 
         */
        public Builder bomUrl(String bomUrl) {
            return bomUrl(Output.of(bomUrl));
        }

        /**
         * @param highAvailabilitySoftwareConfiguration Gets or sets the HA software configuration.
         * 
         * @return builder
         * 
         */
        public Builder highAvailabilitySoftwareConfiguration(@Nullable Output<HighAvailabilitySoftwareConfigurationArgs> highAvailabilitySoftwareConfiguration) {
            $.highAvailabilitySoftwareConfiguration = highAvailabilitySoftwareConfiguration;
            return this;
        }

        /**
         * @param highAvailabilitySoftwareConfiguration Gets or sets the HA software configuration.
         * 
         * @return builder
         * 
         */
        public Builder highAvailabilitySoftwareConfiguration(HighAvailabilitySoftwareConfigurationArgs highAvailabilitySoftwareConfiguration) {
            return highAvailabilitySoftwareConfiguration(Output.of(highAvailabilitySoftwareConfiguration));
        }

        /**
         * @param sapBitsStorageAccountId The SAP bits storage account id.
         * 
         * @return builder
         * 
         */
        public Builder sapBitsStorageAccountId(Output<String> sapBitsStorageAccountId) {
            $.sapBitsStorageAccountId = sapBitsStorageAccountId;
            return this;
        }

        /**
         * @param sapBitsStorageAccountId The SAP bits storage account id.
         * 
         * @return builder
         * 
         */
        public Builder sapBitsStorageAccountId(String sapBitsStorageAccountId) {
            return sapBitsStorageAccountId(Output.of(sapBitsStorageAccountId));
        }

        /**
         * @param sapFqdn The FQDN to set for the SAP system during install.
         * 
         * @return builder
         * 
         */
        public Builder sapFqdn(Output<String> sapFqdn) {
            $.sapFqdn = sapFqdn;
            return this;
        }

        /**
         * @param sapFqdn The FQDN to set for the SAP system during install.
         * 
         * @return builder
         * 
         */
        public Builder sapFqdn(String sapFqdn) {
            return sapFqdn(Output.of(sapFqdn));
        }

        /**
         * @param softwareInstallationType The SAP software installation Type.
         * Expected value is &#39;ServiceInitiated&#39;.
         * 
         * @return builder
         * 
         */
        public Builder softwareInstallationType(Output<String> softwareInstallationType) {
            $.softwareInstallationType = softwareInstallationType;
            return this;
        }

        /**
         * @param softwareInstallationType The SAP software installation Type.
         * Expected value is &#39;ServiceInitiated&#39;.
         * 
         * @return builder
         * 
         */
        public Builder softwareInstallationType(String softwareInstallationType) {
            return softwareInstallationType(Output.of(softwareInstallationType));
        }

        /**
         * @param softwareVersion The software version to install.
         * 
         * @return builder
         * 
         */
        public Builder softwareVersion(Output<String> softwareVersion) {
            $.softwareVersion = softwareVersion;
            return this;
        }

        /**
         * @param softwareVersion The software version to install.
         * 
         * @return builder
         * 
         */
        public Builder softwareVersion(String softwareVersion) {
            return softwareVersion(Output.of(softwareVersion));
        }

        /**
         * @param sshPrivateKey The SSH private key.
         * 
         * @return builder
         * 
         */
        public Builder sshPrivateKey(Output<String> sshPrivateKey) {
            $.sshPrivateKey = sshPrivateKey;
            return this;
        }

        /**
         * @param sshPrivateKey The SSH private key.
         * 
         * @return builder
         * 
         */
        public Builder sshPrivateKey(String sshPrivateKey) {
            return sshPrivateKey(Output.of(sshPrivateKey));
        }

        public ServiceInitiatedSoftwareConfigurationArgs build() {
            $.bomUrl = Objects.requireNonNull($.bomUrl, "expected parameter 'bomUrl' to be non-null");
            $.sapBitsStorageAccountId = Objects.requireNonNull($.sapBitsStorageAccountId, "expected parameter 'sapBitsStorageAccountId' to be non-null");
            $.sapFqdn = Objects.requireNonNull($.sapFqdn, "expected parameter 'sapFqdn' to be non-null");
            $.softwareInstallationType = Codegen.stringProp("softwareInstallationType").output().arg($.softwareInstallationType).require();
            $.softwareVersion = Objects.requireNonNull($.softwareVersion, "expected parameter 'softwareVersion' to be non-null");
            $.sshPrivateKey = Objects.requireNonNull($.sshPrivateKey, "expected parameter 'sshPrivateKey' to be non-null");
            return $;
        }
    }

}
