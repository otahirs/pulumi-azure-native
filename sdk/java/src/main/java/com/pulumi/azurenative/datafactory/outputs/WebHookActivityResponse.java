// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datafactory.outputs;

import com.pulumi.azurenative.datafactory.outputs.ActivityDependencyResponse;
import com.pulumi.azurenative.datafactory.outputs.UserPropertyResponse;
import com.pulumi.azurenative.datafactory.outputs.WebActivityAuthenticationResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class WebHookActivityResponse {
    /**
     * @return Authentication method used for calling the endpoint.
     * 
     */
    private @Nullable WebActivityAuthenticationResponse authentication;
    /**
     * @return Represents the payload that will be sent to the endpoint. Required for POST/PUT method, not allowed for GET method Type: string (or Expression with resultType string).
     * 
     */
    private @Nullable Object body;
    /**
     * @return Activity depends on condition.
     * 
     */
    private @Nullable List<ActivityDependencyResponse> dependsOn;
    /**
     * @return Activity description.
     * 
     */
    private @Nullable String description;
    /**
     * @return Represents the headers that will be sent to the request. For example, to set the language and type on a request: &#34;headers&#34; : { &#34;Accept-Language&#34;: &#34;en-us&#34;, &#34;Content-Type&#34;: &#34;application/json&#34; }. Type: string (or Expression with resultType string).
     * 
     */
    private @Nullable Object headers;
    /**
     * @return Rest API method for target endpoint.
     * 
     */
    private String method;
    /**
     * @return Activity name.
     * 
     */
    private String name;
    /**
     * @return When set to true, statusCode, output and error in callback request body will be consumed by activity. The activity can be marked as failed by setting statusCode &gt;= 400 in callback request. Default is false. Type: boolean (or Expression with resultType boolean).
     * 
     */
    private @Nullable Object reportStatusOnCallBack;
    /**
     * @return The timeout within which the webhook should be called back. If there is no value specified, it defaults to 10 minutes. Type: string. Pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
     * 
     */
    private @Nullable String timeout;
    /**
     * @return Type of activity.
     * Expected value is &#39;WebHook&#39;.
     * 
     */
    private String type;
    /**
     * @return WebHook activity target endpoint and path. Type: string (or Expression with resultType string).
     * 
     */
    private Object url;
    /**
     * @return Activity user properties.
     * 
     */
    private @Nullable List<UserPropertyResponse> userProperties;

    private WebHookActivityResponse() {}
    /**
     * @return Authentication method used for calling the endpoint.
     * 
     */
    public Optional<WebActivityAuthenticationResponse> authentication() {
        return Optional.ofNullable(this.authentication);
    }
    /**
     * @return Represents the payload that will be sent to the endpoint. Required for POST/PUT method, not allowed for GET method Type: string (or Expression with resultType string).
     * 
     */
    public Optional<Object> body() {
        return Optional.ofNullable(this.body);
    }
    /**
     * @return Activity depends on condition.
     * 
     */
    public List<ActivityDependencyResponse> dependsOn() {
        return this.dependsOn == null ? List.of() : this.dependsOn;
    }
    /**
     * @return Activity description.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return Represents the headers that will be sent to the request. For example, to set the language and type on a request: &#34;headers&#34; : { &#34;Accept-Language&#34;: &#34;en-us&#34;, &#34;Content-Type&#34;: &#34;application/json&#34; }. Type: string (or Expression with resultType string).
     * 
     */
    public Optional<Object> headers() {
        return Optional.ofNullable(this.headers);
    }
    /**
     * @return Rest API method for target endpoint.
     * 
     */
    public String method() {
        return this.method;
    }
    /**
     * @return Activity name.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return When set to true, statusCode, output and error in callback request body will be consumed by activity. The activity can be marked as failed by setting statusCode &gt;= 400 in callback request. Default is false. Type: boolean (or Expression with resultType boolean).
     * 
     */
    public Optional<Object> reportStatusOnCallBack() {
        return Optional.ofNullable(this.reportStatusOnCallBack);
    }
    /**
     * @return The timeout within which the webhook should be called back. If there is no value specified, it defaults to 10 minutes. Type: string. Pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
     * 
     */
    public Optional<String> timeout() {
        return Optional.ofNullable(this.timeout);
    }
    /**
     * @return Type of activity.
     * Expected value is &#39;WebHook&#39;.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return WebHook activity target endpoint and path. Type: string (or Expression with resultType string).
     * 
     */
    public Object url() {
        return this.url;
    }
    /**
     * @return Activity user properties.
     * 
     */
    public List<UserPropertyResponse> userProperties() {
        return this.userProperties == null ? List.of() : this.userProperties;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WebHookActivityResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable WebActivityAuthenticationResponse authentication;
        private @Nullable Object body;
        private @Nullable List<ActivityDependencyResponse> dependsOn;
        private @Nullable String description;
        private @Nullable Object headers;
        private String method;
        private String name;
        private @Nullable Object reportStatusOnCallBack;
        private @Nullable String timeout;
        private String type;
        private Object url;
        private @Nullable List<UserPropertyResponse> userProperties;
        public Builder() {}
        public Builder(WebHookActivityResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authentication = defaults.authentication;
    	      this.body = defaults.body;
    	      this.dependsOn = defaults.dependsOn;
    	      this.description = defaults.description;
    	      this.headers = defaults.headers;
    	      this.method = defaults.method;
    	      this.name = defaults.name;
    	      this.reportStatusOnCallBack = defaults.reportStatusOnCallBack;
    	      this.timeout = defaults.timeout;
    	      this.type = defaults.type;
    	      this.url = defaults.url;
    	      this.userProperties = defaults.userProperties;
        }

        @CustomType.Setter
        public Builder authentication(@Nullable WebActivityAuthenticationResponse authentication) {
            this.authentication = authentication;
            return this;
        }
        @CustomType.Setter
        public Builder body(@Nullable Object body) {
            this.body = body;
            return this;
        }
        @CustomType.Setter
        public Builder dependsOn(@Nullable List<ActivityDependencyResponse> dependsOn) {
            this.dependsOn = dependsOn;
            return this;
        }
        public Builder dependsOn(ActivityDependencyResponse... dependsOn) {
            return dependsOn(List.of(dependsOn));
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder headers(@Nullable Object headers) {
            this.headers = headers;
            return this;
        }
        @CustomType.Setter
        public Builder method(String method) {
            this.method = Objects.requireNonNull(method);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder reportStatusOnCallBack(@Nullable Object reportStatusOnCallBack) {
            this.reportStatusOnCallBack = reportStatusOnCallBack;
            return this;
        }
        @CustomType.Setter
        public Builder timeout(@Nullable String timeout) {
            this.timeout = timeout;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder url(Object url) {
            this.url = Objects.requireNonNull(url);
            return this;
        }
        @CustomType.Setter
        public Builder userProperties(@Nullable List<UserPropertyResponse> userProperties) {
            this.userProperties = userProperties;
            return this;
        }
        public Builder userProperties(UserPropertyResponse... userProperties) {
            return userProperties(List.of(userProperties));
        }
        public WebHookActivityResponse build() {
            final var o = new WebHookActivityResponse();
            o.authentication = authentication;
            o.body = body;
            o.dependsOn = dependsOn;
            o.description = description;
            o.headers = headers;
            o.method = method;
            o.name = name;
            o.reportStatusOnCallBack = reportStatusOnCallBack;
            o.timeout = timeout;
            o.type = type;
            o.url = url;
            o.userProperties = userProperties;
            return o;
        }
    }
}
