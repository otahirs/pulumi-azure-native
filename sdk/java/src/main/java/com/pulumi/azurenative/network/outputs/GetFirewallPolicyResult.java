// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.outputs;

import com.pulumi.azurenative.network.outputs.DnsSettingsResponse;
import com.pulumi.azurenative.network.outputs.FirewallPolicyInsightsResponse;
import com.pulumi.azurenative.network.outputs.FirewallPolicyIntrusionDetectionResponse;
import com.pulumi.azurenative.network.outputs.FirewallPolicySNATResponse;
import com.pulumi.azurenative.network.outputs.FirewallPolicySkuResponse;
import com.pulumi.azurenative.network.outputs.FirewallPolicyThreatIntelWhitelistResponse;
import com.pulumi.azurenative.network.outputs.FirewallPolicyTransportSecurityResponse;
import com.pulumi.azurenative.network.outputs.ManagedServiceIdentityResponse;
import com.pulumi.azurenative.network.outputs.SubResourceResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetFirewallPolicyResult {
    /**
     * @return The parent firewall policy from which rules are inherited.
     * 
     */
    private @Nullable SubResourceResponse basePolicy;
    /**
     * @return List of references to Child Firewall Policies.
     * 
     */
    private List<SubResourceResponse> childPolicies;
    /**
     * @return DNS Proxy Settings definition.
     * 
     */
    private @Nullable DnsSettingsResponse dnsSettings;
    /**
     * @return A unique read-only string that changes whenever the resource is updated.
     * 
     */
    private String etag;
    /**
     * @return List of references to Azure Firewalls that this Firewall Policy is associated with.
     * 
     */
    private List<SubResourceResponse> firewalls;
    /**
     * @return Resource ID.
     * 
     */
    private @Nullable String id;
    /**
     * @return The identity of the firewall policy.
     * 
     */
    private @Nullable ManagedServiceIdentityResponse identity;
    /**
     * @return Insights on Firewall Policy.
     * 
     */
    private @Nullable FirewallPolicyInsightsResponse insights;
    /**
     * @return The configuration for Intrusion detection.
     * 
     */
    private @Nullable FirewallPolicyIntrusionDetectionResponse intrusionDetection;
    /**
     * @return Resource location.
     * 
     */
    private @Nullable String location;
    /**
     * @return Resource name.
     * 
     */
    private String name;
    /**
     * @return The provisioning state of the firewall policy resource.
     * 
     */
    private String provisioningState;
    /**
     * @return List of references to FirewallPolicyRuleCollectionGroups.
     * 
     */
    private List<SubResourceResponse> ruleCollectionGroups;
    /**
     * @return The Firewall Policy SKU.
     * 
     */
    private @Nullable FirewallPolicySkuResponse sku;
    /**
     * @return The private IP addresses/IP ranges to which traffic will not be SNAT.
     * 
     */
    private @Nullable FirewallPolicySNATResponse snat;
    /**
     * @return Resource tags.
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return The operation mode for Threat Intelligence.
     * 
     */
    private @Nullable String threatIntelMode;
    /**
     * @return ThreatIntel Whitelist for Firewall Policy.
     * 
     */
    private @Nullable FirewallPolicyThreatIntelWhitelistResponse threatIntelWhitelist;
    /**
     * @return TLS Configuration definition.
     * 
     */
    private @Nullable FirewallPolicyTransportSecurityResponse transportSecurity;
    /**
     * @return Resource type.
     * 
     */
    private String type;

    private GetFirewallPolicyResult() {}
    /**
     * @return The parent firewall policy from which rules are inherited.
     * 
     */
    public Optional<SubResourceResponse> basePolicy() {
        return Optional.ofNullable(this.basePolicy);
    }
    /**
     * @return List of references to Child Firewall Policies.
     * 
     */
    public List<SubResourceResponse> childPolicies() {
        return this.childPolicies;
    }
    /**
     * @return DNS Proxy Settings definition.
     * 
     */
    public Optional<DnsSettingsResponse> dnsSettings() {
        return Optional.ofNullable(this.dnsSettings);
    }
    /**
     * @return A unique read-only string that changes whenever the resource is updated.
     * 
     */
    public String etag() {
        return this.etag;
    }
    /**
     * @return List of references to Azure Firewalls that this Firewall Policy is associated with.
     * 
     */
    public List<SubResourceResponse> firewalls() {
        return this.firewalls;
    }
    /**
     * @return Resource ID.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The identity of the firewall policy.
     * 
     */
    public Optional<ManagedServiceIdentityResponse> identity() {
        return Optional.ofNullable(this.identity);
    }
    /**
     * @return Insights on Firewall Policy.
     * 
     */
    public Optional<FirewallPolicyInsightsResponse> insights() {
        return Optional.ofNullable(this.insights);
    }
    /**
     * @return The configuration for Intrusion detection.
     * 
     */
    public Optional<FirewallPolicyIntrusionDetectionResponse> intrusionDetection() {
        return Optional.ofNullable(this.intrusionDetection);
    }
    /**
     * @return Resource location.
     * 
     */
    public Optional<String> location() {
        return Optional.ofNullable(this.location);
    }
    /**
     * @return Resource name.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The provisioning state of the firewall policy resource.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * @return List of references to FirewallPolicyRuleCollectionGroups.
     * 
     */
    public List<SubResourceResponse> ruleCollectionGroups() {
        return this.ruleCollectionGroups;
    }
    /**
     * @return The Firewall Policy SKU.
     * 
     */
    public Optional<FirewallPolicySkuResponse> sku() {
        return Optional.ofNullable(this.sku);
    }
    /**
     * @return The private IP addresses/IP ranges to which traffic will not be SNAT.
     * 
     */
    public Optional<FirewallPolicySNATResponse> snat() {
        return Optional.ofNullable(this.snat);
    }
    /**
     * @return Resource tags.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return The operation mode for Threat Intelligence.
     * 
     */
    public Optional<String> threatIntelMode() {
        return Optional.ofNullable(this.threatIntelMode);
    }
    /**
     * @return ThreatIntel Whitelist for Firewall Policy.
     * 
     */
    public Optional<FirewallPolicyThreatIntelWhitelistResponse> threatIntelWhitelist() {
        return Optional.ofNullable(this.threatIntelWhitelist);
    }
    /**
     * @return TLS Configuration definition.
     * 
     */
    public Optional<FirewallPolicyTransportSecurityResponse> transportSecurity() {
        return Optional.ofNullable(this.transportSecurity);
    }
    /**
     * @return Resource type.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFirewallPolicyResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable SubResourceResponse basePolicy;
        private List<SubResourceResponse> childPolicies;
        private @Nullable DnsSettingsResponse dnsSettings;
        private String etag;
        private List<SubResourceResponse> firewalls;
        private @Nullable String id;
        private @Nullable ManagedServiceIdentityResponse identity;
        private @Nullable FirewallPolicyInsightsResponse insights;
        private @Nullable FirewallPolicyIntrusionDetectionResponse intrusionDetection;
        private @Nullable String location;
        private String name;
        private String provisioningState;
        private List<SubResourceResponse> ruleCollectionGroups;
        private @Nullable FirewallPolicySkuResponse sku;
        private @Nullable FirewallPolicySNATResponse snat;
        private @Nullable Map<String,String> tags;
        private @Nullable String threatIntelMode;
        private @Nullable FirewallPolicyThreatIntelWhitelistResponse threatIntelWhitelist;
        private @Nullable FirewallPolicyTransportSecurityResponse transportSecurity;
        private String type;
        public Builder() {}
        public Builder(GetFirewallPolicyResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.basePolicy = defaults.basePolicy;
    	      this.childPolicies = defaults.childPolicies;
    	      this.dnsSettings = defaults.dnsSettings;
    	      this.etag = defaults.etag;
    	      this.firewalls = defaults.firewalls;
    	      this.id = defaults.id;
    	      this.identity = defaults.identity;
    	      this.insights = defaults.insights;
    	      this.intrusionDetection = defaults.intrusionDetection;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.provisioningState = defaults.provisioningState;
    	      this.ruleCollectionGroups = defaults.ruleCollectionGroups;
    	      this.sku = defaults.sku;
    	      this.snat = defaults.snat;
    	      this.tags = defaults.tags;
    	      this.threatIntelMode = defaults.threatIntelMode;
    	      this.threatIntelWhitelist = defaults.threatIntelWhitelist;
    	      this.transportSecurity = defaults.transportSecurity;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder basePolicy(@Nullable SubResourceResponse basePolicy) {
            this.basePolicy = basePolicy;
            return this;
        }
        @CustomType.Setter
        public Builder childPolicies(List<SubResourceResponse> childPolicies) {
            this.childPolicies = Objects.requireNonNull(childPolicies);
            return this;
        }
        public Builder childPolicies(SubResourceResponse... childPolicies) {
            return childPolicies(List.of(childPolicies));
        }
        @CustomType.Setter
        public Builder dnsSettings(@Nullable DnsSettingsResponse dnsSettings) {
            this.dnsSettings = dnsSettings;
            return this;
        }
        @CustomType.Setter
        public Builder etag(String etag) {
            this.etag = Objects.requireNonNull(etag);
            return this;
        }
        @CustomType.Setter
        public Builder firewalls(List<SubResourceResponse> firewalls) {
            this.firewalls = Objects.requireNonNull(firewalls);
            return this;
        }
        public Builder firewalls(SubResourceResponse... firewalls) {
            return firewalls(List.of(firewalls));
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder identity(@Nullable ManagedServiceIdentityResponse identity) {
            this.identity = identity;
            return this;
        }
        @CustomType.Setter
        public Builder insights(@Nullable FirewallPolicyInsightsResponse insights) {
            this.insights = insights;
            return this;
        }
        @CustomType.Setter
        public Builder intrusionDetection(@Nullable FirewallPolicyIntrusionDetectionResponse intrusionDetection) {
            this.intrusionDetection = intrusionDetection;
            return this;
        }
        @CustomType.Setter
        public Builder location(@Nullable String location) {
            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        @CustomType.Setter
        public Builder ruleCollectionGroups(List<SubResourceResponse> ruleCollectionGroups) {
            this.ruleCollectionGroups = Objects.requireNonNull(ruleCollectionGroups);
            return this;
        }
        public Builder ruleCollectionGroups(SubResourceResponse... ruleCollectionGroups) {
            return ruleCollectionGroups(List.of(ruleCollectionGroups));
        }
        @CustomType.Setter
        public Builder sku(@Nullable FirewallPolicySkuResponse sku) {
            this.sku = sku;
            return this;
        }
        @CustomType.Setter
        public Builder snat(@Nullable FirewallPolicySNATResponse snat) {
            this.snat = snat;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder threatIntelMode(@Nullable String threatIntelMode) {
            this.threatIntelMode = threatIntelMode;
            return this;
        }
        @CustomType.Setter
        public Builder threatIntelWhitelist(@Nullable FirewallPolicyThreatIntelWhitelistResponse threatIntelWhitelist) {
            this.threatIntelWhitelist = threatIntelWhitelist;
            return this;
        }
        @CustomType.Setter
        public Builder transportSecurity(@Nullable FirewallPolicyTransportSecurityResponse transportSecurity) {
            this.transportSecurity = transportSecurity;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetFirewallPolicyResult build() {
            final var o = new GetFirewallPolicyResult();
            o.basePolicy = basePolicy;
            o.childPolicies = childPolicies;
            o.dnsSettings = dnsSettings;
            o.etag = etag;
            o.firewalls = firewalls;
            o.id = id;
            o.identity = identity;
            o.insights = insights;
            o.intrusionDetection = intrusionDetection;
            o.location = location;
            o.name = name;
            o.provisioningState = provisioningState;
            o.ruleCollectionGroups = ruleCollectionGroups;
            o.sku = sku;
            o.snat = snat;
            o.tags = tags;
            o.threatIntelMode = threatIntelMode;
            o.threatIntelWhitelist = threatIntelWhitelist;
            o.transportSecurity = transportSecurity;
            o.type = type;
            return o;
        }
    }
}
