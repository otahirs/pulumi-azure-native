// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.apimanagement.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetPropertyResult {
    /**
     * @return Unique name of Property. It may contain only letters, digits, period, dash, and underscore characters.
     * 
     */
    private String displayName;
    /**
     * @return Resource ID.
     * 
     */
    private String id;
    /**
     * @return Resource name.
     * 
     */
    private String name;
    /**
     * @return Determines whether the value is a secret and should be encrypted or not. Default value is false.
     * 
     */
    private @Nullable Boolean secret;
    /**
     * @return Optional tags that when provided can be used to filter the property list.
     * 
     */
    private @Nullable List<String> tags;
    /**
     * @return Resource type for API Management resource.
     * 
     */
    private String type;
    /**
     * @return Value of the property. Can contain policy expressions. It may not be empty or consist only of whitespace.
     * 
     */
    private String value;

    private GetPropertyResult() {}
    /**
     * @return Unique name of Property. It may contain only letters, digits, period, dash, and underscore characters.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Resource ID.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Resource name.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Determines whether the value is a secret and should be encrypted or not. Default value is false.
     * 
     */
    public Optional<Boolean> secret() {
        return Optional.ofNullable(this.secret);
    }
    /**
     * @return Optional tags that when provided can be used to filter the property list.
     * 
     */
    public List<String> tags() {
        return this.tags == null ? List.of() : this.tags;
    }
    /**
     * @return Resource type for API Management resource.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return Value of the property. Can contain policy expressions. It may not be empty or consist only of whitespace.
     * 
     */
    public String value() {
        return this.value;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPropertyResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String displayName;
        private String id;
        private String name;
        private @Nullable Boolean secret;
        private @Nullable List<String> tags;
        private String type;
        private String value;
        public Builder() {}
        public Builder(GetPropertyResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.displayName = defaults.displayName;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.secret = defaults.secret;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
    	      this.value = defaults.value;
        }

        @CustomType.Setter
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder secret(@Nullable Boolean secret) {
            this.secret = secret;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable List<String> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder value(String value) {
            this.value = Objects.requireNonNull(value);
            return this;
        }
        public GetPropertyResult build() {
            final var o = new GetPropertyResult();
            o.displayName = displayName;
            o.id = id;
            o.name = name;
            o.secret = secret;
            o.tags = tags;
            o.type = type;
            o.value = value;
            return o;
        }
    }
}
