// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.compute.outputs;

import com.pulumi.azurenative.compute.outputs.GalleryIdentifierResponse;
import com.pulumi.azurenative.compute.outputs.SharingProfileResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetGalleryResult {
    /**
     * @return The description of this Shared Image Gallery resource. This property is updatable.
     * 
     */
    private @Nullable String description;
    /**
     * @return Resource Id
     * 
     */
    private String id;
    /**
     * @return Describes the gallery unique name.
     * 
     */
    private @Nullable GalleryIdentifierResponse identifier;
    /**
     * @return Resource location
     * 
     */
    private String location;
    /**
     * @return Resource name
     * 
     */
    private String name;
    /**
     * @return The provisioning state, which only appears in the response.
     * 
     */
    private String provisioningState;
    /**
     * @return Profile for gallery sharing to subscription or tenant
     * 
     */
    private @Nullable SharingProfileResponse sharingProfile;
    /**
     * @return Resource tags
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return Resource type
     * 
     */
    private String type;

    private GetGalleryResult() {}
    /**
     * @return The description of this Shared Image Gallery resource. This property is updatable.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return Resource Id
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Describes the gallery unique name.
     * 
     */
    public Optional<GalleryIdentifierResponse> identifier() {
        return Optional.ofNullable(this.identifier);
    }
    /**
     * @return Resource location
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return Resource name
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The provisioning state, which only appears in the response.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * @return Profile for gallery sharing to subscription or tenant
     * 
     */
    public Optional<SharingProfileResponse> sharingProfile() {
        return Optional.ofNullable(this.sharingProfile);
    }
    /**
     * @return Resource tags
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return Resource type
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGalleryResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String description;
        private String id;
        private @Nullable GalleryIdentifierResponse identifier;
        private String location;
        private String name;
        private String provisioningState;
        private @Nullable SharingProfileResponse sharingProfile;
        private @Nullable Map<String,String> tags;
        private String type;
        public Builder() {}
        public Builder(GetGalleryResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.identifier = defaults.identifier;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.provisioningState = defaults.provisioningState;
    	      this.sharingProfile = defaults.sharingProfile;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder identifier(@Nullable GalleryIdentifierResponse identifier) {
            this.identifier = identifier;
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        @CustomType.Setter
        public Builder sharingProfile(@Nullable SharingProfileResponse sharingProfile) {
            this.sharingProfile = sharingProfile;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetGalleryResult build() {
            final var o = new GetGalleryResult();
            o.description = description;
            o.id = id;
            o.identifier = identifier;
            o.location = location;
            o.name = name;
            o.provisioningState = provisioningState;
            o.sharingProfile = sharingProfile;
            o.tags = tags;
            o.type = type;
            return o;
        }
    }
}
