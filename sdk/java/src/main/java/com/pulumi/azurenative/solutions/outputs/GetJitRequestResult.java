// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.solutions.outputs;

import com.pulumi.azurenative.solutions.outputs.ApplicationClientDetailsResponse;
import com.pulumi.azurenative.solutions.outputs.JitAuthorizationPoliciesResponse;
import com.pulumi.azurenative.solutions.outputs.JitSchedulingPolicyResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetJitRequestResult {
    /**
     * @return The parent application id.
     * 
     */
    private String applicationResourceId;
    /**
     * @return The client entity that created the JIT request.
     * 
     */
    private ApplicationClientDetailsResponse createdBy;
    /**
     * @return Resource ID
     * 
     */
    private String id;
    /**
     * @return The JIT authorization policies.
     * 
     */
    private List<JitAuthorizationPoliciesResponse> jitAuthorizationPolicies;
    /**
     * @return The JIT request state.
     * 
     */
    private String jitRequestState;
    /**
     * @return The JIT request properties.
     * 
     */
    private JitSchedulingPolicyResponse jitSchedulingPolicy;
    /**
     * @return Resource location
     * 
     */
    private @Nullable String location;
    /**
     * @return Resource name
     * 
     */
    private String name;
    /**
     * @return The JIT request provisioning state.
     * 
     */
    private String provisioningState;
    /**
     * @return The publisher tenant id.
     * 
     */
    private String publisherTenantId;
    /**
     * @return Resource tags
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return Resource type
     * 
     */
    private String type;
    /**
     * @return The client entity that last updated the JIT request.
     * 
     */
    private ApplicationClientDetailsResponse updatedBy;

    private GetJitRequestResult() {}
    /**
     * @return The parent application id.
     * 
     */
    public String applicationResourceId() {
        return this.applicationResourceId;
    }
    /**
     * @return The client entity that created the JIT request.
     * 
     */
    public ApplicationClientDetailsResponse createdBy() {
        return this.createdBy;
    }
    /**
     * @return Resource ID
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The JIT authorization policies.
     * 
     */
    public List<JitAuthorizationPoliciesResponse> jitAuthorizationPolicies() {
        return this.jitAuthorizationPolicies;
    }
    /**
     * @return The JIT request state.
     * 
     */
    public String jitRequestState() {
        return this.jitRequestState;
    }
    /**
     * @return The JIT request properties.
     * 
     */
    public JitSchedulingPolicyResponse jitSchedulingPolicy() {
        return this.jitSchedulingPolicy;
    }
    /**
     * @return Resource location
     * 
     */
    public Optional<String> location() {
        return Optional.ofNullable(this.location);
    }
    /**
     * @return Resource name
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The JIT request provisioning state.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * @return The publisher tenant id.
     * 
     */
    public String publisherTenantId() {
        return this.publisherTenantId;
    }
    /**
     * @return Resource tags
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return Resource type
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return The client entity that last updated the JIT request.
     * 
     */
    public ApplicationClientDetailsResponse updatedBy() {
        return this.updatedBy;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetJitRequestResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String applicationResourceId;
        private ApplicationClientDetailsResponse createdBy;
        private String id;
        private List<JitAuthorizationPoliciesResponse> jitAuthorizationPolicies;
        private String jitRequestState;
        private JitSchedulingPolicyResponse jitSchedulingPolicy;
        private @Nullable String location;
        private String name;
        private String provisioningState;
        private String publisherTenantId;
        private @Nullable Map<String,String> tags;
        private String type;
        private ApplicationClientDetailsResponse updatedBy;
        public Builder() {}
        public Builder(GetJitRequestResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationResourceId = defaults.applicationResourceId;
    	      this.createdBy = defaults.createdBy;
    	      this.id = defaults.id;
    	      this.jitAuthorizationPolicies = defaults.jitAuthorizationPolicies;
    	      this.jitRequestState = defaults.jitRequestState;
    	      this.jitSchedulingPolicy = defaults.jitSchedulingPolicy;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.provisioningState = defaults.provisioningState;
    	      this.publisherTenantId = defaults.publisherTenantId;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
    	      this.updatedBy = defaults.updatedBy;
        }

        @CustomType.Setter
        public Builder applicationResourceId(String applicationResourceId) {
            this.applicationResourceId = Objects.requireNonNull(applicationResourceId);
            return this;
        }
        @CustomType.Setter
        public Builder createdBy(ApplicationClientDetailsResponse createdBy) {
            this.createdBy = Objects.requireNonNull(createdBy);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder jitAuthorizationPolicies(List<JitAuthorizationPoliciesResponse> jitAuthorizationPolicies) {
            this.jitAuthorizationPolicies = Objects.requireNonNull(jitAuthorizationPolicies);
            return this;
        }
        public Builder jitAuthorizationPolicies(JitAuthorizationPoliciesResponse... jitAuthorizationPolicies) {
            return jitAuthorizationPolicies(List.of(jitAuthorizationPolicies));
        }
        @CustomType.Setter
        public Builder jitRequestState(String jitRequestState) {
            this.jitRequestState = Objects.requireNonNull(jitRequestState);
            return this;
        }
        @CustomType.Setter
        public Builder jitSchedulingPolicy(JitSchedulingPolicyResponse jitSchedulingPolicy) {
            this.jitSchedulingPolicy = Objects.requireNonNull(jitSchedulingPolicy);
            return this;
        }
        @CustomType.Setter
        public Builder location(@Nullable String location) {
            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        @CustomType.Setter
        public Builder publisherTenantId(String publisherTenantId) {
            this.publisherTenantId = Objects.requireNonNull(publisherTenantId);
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder updatedBy(ApplicationClientDetailsResponse updatedBy) {
            this.updatedBy = Objects.requireNonNull(updatedBy);
            return this;
        }
        public GetJitRequestResult build() {
            final var o = new GetJitRequestResult();
            o.applicationResourceId = applicationResourceId;
            o.createdBy = createdBy;
            o.id = id;
            o.jitAuthorizationPolicies = jitAuthorizationPolicies;
            o.jitRequestState = jitRequestState;
            o.jitSchedulingPolicy = jitSchedulingPolicy;
            o.location = location;
            o.name = name;
            o.provisioningState = provisioningState;
            o.publisherTenantId = publisherTenantId;
            o.tags = tags;
            o.type = type;
            o.updatedBy = updatedBy;
            return o;
        }
    }
}
