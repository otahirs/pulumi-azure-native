// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.workloads;

import com.pulumi.azurenative.workloads.inputs.DB2ProviderInstancePropertiesArgs;
import com.pulumi.azurenative.workloads.inputs.HanaDbProviderInstancePropertiesArgs;
import com.pulumi.azurenative.workloads.inputs.MsSqlServerProviderInstancePropertiesArgs;
import com.pulumi.azurenative.workloads.inputs.PrometheusHaClusterProviderInstancePropertiesArgs;
import com.pulumi.azurenative.workloads.inputs.PrometheusOSProviderInstancePropertiesArgs;
import com.pulumi.azurenative.workloads.inputs.SapNetWeaverProviderInstancePropertiesArgs;
import com.pulumi.azurenative.workloads.inputs.UserAssignedServiceIdentityArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProviderInstanceArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProviderInstanceArgs Empty = new ProviderInstanceArgs();

    /**
     * Managed service identity (user assigned identities)
     * 
     */
    @Import(name="identity")
    private @Nullable Output<UserAssignedServiceIdentityArgs> identity;

    /**
     * @return Managed service identity (user assigned identities)
     * 
     */
    public Optional<Output<UserAssignedServiceIdentityArgs>> identity() {
        return Optional.ofNullable(this.identity);
    }

    /**
     * Name of the SAP monitor resource.
     * 
     */
    @Import(name="monitorName", required=true)
    private Output<String> monitorName;

    /**
     * @return Name of the SAP monitor resource.
     * 
     */
    public Output<String> monitorName() {
        return this.monitorName;
    }

    /**
     * Name of the provider instance.
     * 
     */
    @Import(name="providerInstanceName")
    private @Nullable Output<String> providerInstanceName;

    /**
     * @return Name of the provider instance.
     * 
     */
    public Optional<Output<String>> providerInstanceName() {
        return Optional.ofNullable(this.providerInstanceName);
    }

    /**
     * Defines the provider instance errors.
     * 
     */
    @Import(name="providerSettings")
    private @Nullable Output<Object> providerSettings;

    /**
     * @return Defines the provider instance errors.
     * 
     */
    public Optional<Output<Object>> providerSettings() {
        return Optional.ofNullable(this.providerSettings);
    }

    /**
     * The name of the resource group. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group. The name is case insensitive.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    private ProviderInstanceArgs() {}

    private ProviderInstanceArgs(ProviderInstanceArgs $) {
        this.identity = $.identity;
        this.monitorName = $.monitorName;
        this.providerInstanceName = $.providerInstanceName;
        this.providerSettings = $.providerSettings;
        this.resourceGroupName = $.resourceGroupName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProviderInstanceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProviderInstanceArgs $;

        public Builder() {
            $ = new ProviderInstanceArgs();
        }

        public Builder(ProviderInstanceArgs defaults) {
            $ = new ProviderInstanceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param identity Managed service identity (user assigned identities)
         * 
         * @return builder
         * 
         */
        public Builder identity(@Nullable Output<UserAssignedServiceIdentityArgs> identity) {
            $.identity = identity;
            return this;
        }

        /**
         * @param identity Managed service identity (user assigned identities)
         * 
         * @return builder
         * 
         */
        public Builder identity(UserAssignedServiceIdentityArgs identity) {
            return identity(Output.of(identity));
        }

        /**
         * @param monitorName Name of the SAP monitor resource.
         * 
         * @return builder
         * 
         */
        public Builder monitorName(Output<String> monitorName) {
            $.monitorName = monitorName;
            return this;
        }

        /**
         * @param monitorName Name of the SAP monitor resource.
         * 
         * @return builder
         * 
         */
        public Builder monitorName(String monitorName) {
            return monitorName(Output.of(monitorName));
        }

        /**
         * @param providerInstanceName Name of the provider instance.
         * 
         * @return builder
         * 
         */
        public Builder providerInstanceName(@Nullable Output<String> providerInstanceName) {
            $.providerInstanceName = providerInstanceName;
            return this;
        }

        /**
         * @param providerInstanceName Name of the provider instance.
         * 
         * @return builder
         * 
         */
        public Builder providerInstanceName(String providerInstanceName) {
            return providerInstanceName(Output.of(providerInstanceName));
        }

        /**
         * @param providerSettings Defines the provider instance errors.
         * 
         * @return builder
         * 
         */
        public Builder providerSettings(@Nullable Output<Object> providerSettings) {
            $.providerSettings = providerSettings;
            return this;
        }

        /**
         * @param providerSettings Defines the provider instance errors.
         * 
         * @return builder
         * 
         */
        public Builder providerSettings(Object providerSettings) {
            return providerSettings(Output.of(providerSettings));
        }

        /**
         * @param resourceGroupName The name of the resource group. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public ProviderInstanceArgs build() {
            $.monitorName = Objects.requireNonNull($.monitorName, "expected parameter 'monitorName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
