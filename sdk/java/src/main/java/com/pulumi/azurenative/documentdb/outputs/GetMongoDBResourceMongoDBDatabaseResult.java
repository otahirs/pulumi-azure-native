// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.documentdb.outputs;

import com.pulumi.azurenative.documentdb.outputs.MongoDBDatabaseGetPropertiesResponseOptions;
import com.pulumi.azurenative.documentdb.outputs.MongoDBDatabaseGetPropertiesResponseResource;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetMongoDBResourceMongoDBDatabaseResult {
    /**
     * @return The unique resource identifier of the ARM resource.
     * 
     */
    private String id;
    /**
     * @return The location of the resource group to which the resource belongs.
     * 
     */
    private @Nullable String location;
    /**
     * @return The name of the ARM resource.
     * 
     */
    private String name;
    private @Nullable MongoDBDatabaseGetPropertiesResponseOptions options;
    private @Nullable MongoDBDatabaseGetPropertiesResponseResource resource;
    /**
     * @return Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with &#34;defaultExperience&#34;: &#34;Cassandra&#34;. Current &#34;defaultExperience&#34; values also include &#34;Table&#34;, &#34;Graph&#34;, &#34;DocumentDB&#34;, and &#34;MongoDB&#34;.
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return The type of Azure resource.
     * 
     */
    private String type;

    private GetMongoDBResourceMongoDBDatabaseResult() {}
    /**
     * @return The unique resource identifier of the ARM resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The location of the resource group to which the resource belongs.
     * 
     */
    public Optional<String> location() {
        return Optional.ofNullable(this.location);
    }
    /**
     * @return The name of the ARM resource.
     * 
     */
    public String name() {
        return this.name;
    }
    public Optional<MongoDBDatabaseGetPropertiesResponseOptions> options() {
        return Optional.ofNullable(this.options);
    }
    public Optional<MongoDBDatabaseGetPropertiesResponseResource> resource() {
        return Optional.ofNullable(this.resource);
    }
    /**
     * @return Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with &#34;defaultExperience&#34;: &#34;Cassandra&#34;. Current &#34;defaultExperience&#34; values also include &#34;Table&#34;, &#34;Graph&#34;, &#34;DocumentDB&#34;, and &#34;MongoDB&#34;.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return The type of Azure resource.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMongoDBResourceMongoDBDatabaseResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private @Nullable String location;
        private String name;
        private @Nullable MongoDBDatabaseGetPropertiesResponseOptions options;
        private @Nullable MongoDBDatabaseGetPropertiesResponseResource resource;
        private @Nullable Map<String,String> tags;
        private String type;
        public Builder() {}
        public Builder(GetMongoDBResourceMongoDBDatabaseResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.options = defaults.options;
    	      this.resource = defaults.resource;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder location(@Nullable String location) {
            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder options(@Nullable MongoDBDatabaseGetPropertiesResponseOptions options) {
            this.options = options;
            return this;
        }
        @CustomType.Setter
        public Builder resource(@Nullable MongoDBDatabaseGetPropertiesResponseResource resource) {
            this.resource = resource;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetMongoDBResourceMongoDBDatabaseResult build() {
            final var o = new GetMongoDBResourceMongoDBDatabaseResult();
            o.id = id;
            o.location = location;
            o.name = name;
            o.options = options;
            o.resource = resource;
            o.tags = tags;
            o.type = type;
            return o;
        }
    }
}
