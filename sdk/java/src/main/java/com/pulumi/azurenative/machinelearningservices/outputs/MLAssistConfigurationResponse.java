// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearningservices.outputs;

import com.pulumi.azurenative.machinelearningservices.outputs.ComputeBindingResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class MLAssistConfigurationResponse {
    /**
     * @return The compute designated for inferencing.
     * 
     */
    private ComputeBindingResponse inferencingComputeBinding;
    /**
     * @return Indicates whether MLAssist feature is enabled.
     * 
     */
    private @Nullable Boolean mlAssistEnabled;
    /**
     * @return Name prefix to use for machine learning model. For each iteration modelName will be appended with iteration e.g.{modelName}_{i}.
     * 
     */
    private String modelNamePrefix;
    /**
     * @return Prelabel accuracy threshold used in MLAssist feature.
     * 
     */
    private @Nullable Double prelabelAccuracyThreshold;
    /**
     * @return The compute designated for training.
     * 
     */
    private ComputeBindingResponse trainingComputeBinding;

    private MLAssistConfigurationResponse() {}
    /**
     * @return The compute designated for inferencing.
     * 
     */
    public ComputeBindingResponse inferencingComputeBinding() {
        return this.inferencingComputeBinding;
    }
    /**
     * @return Indicates whether MLAssist feature is enabled.
     * 
     */
    public Optional<Boolean> mlAssistEnabled() {
        return Optional.ofNullable(this.mlAssistEnabled);
    }
    /**
     * @return Name prefix to use for machine learning model. For each iteration modelName will be appended with iteration e.g.{modelName}_{i}.
     * 
     */
    public String modelNamePrefix() {
        return this.modelNamePrefix;
    }
    /**
     * @return Prelabel accuracy threshold used in MLAssist feature.
     * 
     */
    public Optional<Double> prelabelAccuracyThreshold() {
        return Optional.ofNullable(this.prelabelAccuracyThreshold);
    }
    /**
     * @return The compute designated for training.
     * 
     */
    public ComputeBindingResponse trainingComputeBinding() {
        return this.trainingComputeBinding;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MLAssistConfigurationResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private ComputeBindingResponse inferencingComputeBinding;
        private @Nullable Boolean mlAssistEnabled;
        private String modelNamePrefix;
        private @Nullable Double prelabelAccuracyThreshold;
        private ComputeBindingResponse trainingComputeBinding;
        public Builder() {}
        public Builder(MLAssistConfigurationResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.inferencingComputeBinding = defaults.inferencingComputeBinding;
    	      this.mlAssistEnabled = defaults.mlAssistEnabled;
    	      this.modelNamePrefix = defaults.modelNamePrefix;
    	      this.prelabelAccuracyThreshold = defaults.prelabelAccuracyThreshold;
    	      this.trainingComputeBinding = defaults.trainingComputeBinding;
        }

        @CustomType.Setter
        public Builder inferencingComputeBinding(ComputeBindingResponse inferencingComputeBinding) {
            this.inferencingComputeBinding = Objects.requireNonNull(inferencingComputeBinding);
            return this;
        }
        @CustomType.Setter
        public Builder mlAssistEnabled(@Nullable Boolean mlAssistEnabled) {
            this.mlAssistEnabled = mlAssistEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder modelNamePrefix(String modelNamePrefix) {
            this.modelNamePrefix = Objects.requireNonNull(modelNamePrefix);
            return this;
        }
        @CustomType.Setter
        public Builder prelabelAccuracyThreshold(@Nullable Double prelabelAccuracyThreshold) {
            this.prelabelAccuracyThreshold = prelabelAccuracyThreshold;
            return this;
        }
        @CustomType.Setter
        public Builder trainingComputeBinding(ComputeBindingResponse trainingComputeBinding) {
            this.trainingComputeBinding = Objects.requireNonNull(trainingComputeBinding);
            return this;
        }
        public MLAssistConfigurationResponse build() {
            final var o = new MLAssistConfigurationResponse();
            o.inferencingComputeBinding = inferencingComputeBinding;
            o.mlAssistEnabled = mlAssistEnabled;
            o.modelNamePrefix = modelNamePrefix;
            o.prelabelAccuracyThreshold = prelabelAccuracyThreshold;
            o.trainingComputeBinding = trainingComputeBinding;
            return o;
        }
    }
}
