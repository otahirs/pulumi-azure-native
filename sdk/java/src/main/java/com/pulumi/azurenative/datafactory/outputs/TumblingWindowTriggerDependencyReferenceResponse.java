// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datafactory.outputs;

import com.pulumi.azurenative.datafactory.outputs.TriggerReferenceResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class TumblingWindowTriggerDependencyReferenceResponse {
    /**
     * @return Timespan applied to the start time of a tumbling window when evaluating dependency.
     * 
     */
    private @Nullable String offset;
    /**
     * @return Referenced trigger.
     * 
     */
    private TriggerReferenceResponse referenceTrigger;
    /**
     * @return The size of the window when evaluating the dependency. If undefined the frequency of the tumbling window will be used.
     * 
     */
    private @Nullable String size;
    /**
     * @return The type of dependency reference.
     * Expected value is &#39;TumblingWindowTriggerDependencyReference&#39;.
     * 
     */
    private String type;

    private TumblingWindowTriggerDependencyReferenceResponse() {}
    /**
     * @return Timespan applied to the start time of a tumbling window when evaluating dependency.
     * 
     */
    public Optional<String> offset() {
        return Optional.ofNullable(this.offset);
    }
    /**
     * @return Referenced trigger.
     * 
     */
    public TriggerReferenceResponse referenceTrigger() {
        return this.referenceTrigger;
    }
    /**
     * @return The size of the window when evaluating the dependency. If undefined the frequency of the tumbling window will be used.
     * 
     */
    public Optional<String> size() {
        return Optional.ofNullable(this.size);
    }
    /**
     * @return The type of dependency reference.
     * Expected value is &#39;TumblingWindowTriggerDependencyReference&#39;.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TumblingWindowTriggerDependencyReferenceResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String offset;
        private TriggerReferenceResponse referenceTrigger;
        private @Nullable String size;
        private String type;
        public Builder() {}
        public Builder(TumblingWindowTriggerDependencyReferenceResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.offset = defaults.offset;
    	      this.referenceTrigger = defaults.referenceTrigger;
    	      this.size = defaults.size;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder offset(@Nullable String offset) {
            this.offset = offset;
            return this;
        }
        @CustomType.Setter
        public Builder referenceTrigger(TriggerReferenceResponse referenceTrigger) {
            this.referenceTrigger = Objects.requireNonNull(referenceTrigger);
            return this;
        }
        @CustomType.Setter
        public Builder size(@Nullable String size) {
            this.size = size;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public TumblingWindowTriggerDependencyReferenceResponse build() {
            final var o = new TumblingWindowTriggerDependencyReferenceResponse();
            o.offset = offset;
            o.referenceTrigger = referenceTrigger;
            o.size = size;
            o.type = type;
            return o;
        }
    }
}
