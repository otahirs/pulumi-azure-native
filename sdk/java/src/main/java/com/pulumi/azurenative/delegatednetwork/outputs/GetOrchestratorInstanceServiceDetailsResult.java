// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.delegatednetwork.outputs;

import com.pulumi.azurenative.delegatednetwork.outputs.ControllerDetailsResponse;
import com.pulumi.azurenative.delegatednetwork.outputs.OrchestratorIdentityResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetOrchestratorInstanceServiceDetailsResult {
    /**
     * @return K8s APIServer url. Either one of apiServerEndpoint or privateLinkResourceId can be specified
     * 
     */
    private @Nullable String apiServerEndpoint;
    /**
     * @return RootCA certificate of kubernetes cluster base64 encoded
     * 
     */
    private @Nullable String clusterRootCA;
    /**
     * @return Properties of the controller.
     * 
     */
    private ControllerDetailsResponse controllerDetails;
    /**
     * @return An identifier that represents the resource.
     * 
     */
    private String id;
    /**
     * @return The identity of the orchestrator
     * 
     */
    private @Nullable OrchestratorIdentityResponse identity;
    /**
     * @return The kind of workbook. Choices are user and shared.
     * 
     */
    private String kind;
    /**
     * @return Location of the resource.
     * 
     */
    private @Nullable String location;
    /**
     * @return The name of the resource.
     * 
     */
    private String name;
    /**
     * @return AAD ID used with apiserver
     * 
     */
    private @Nullable String orchestratorAppId;
    /**
     * @return TenantID of server App ID
     * 
     */
    private @Nullable String orchestratorTenantId;
    /**
     * @return private link arm resource id. Either one of apiServerEndpoint or privateLinkResourceId can be specified
     * 
     */
    private @Nullable String privateLinkResourceId;
    /**
     * @return The current state of orchestratorInstance resource.
     * 
     */
    private String provisioningState;
    /**
     * @return Resource guid.
     * 
     */
    private String resourceGuid;
    /**
     * @return The resource tags.
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return The type of resource.
     * 
     */
    private String type;

    private GetOrchestratorInstanceServiceDetailsResult() {}
    /**
     * @return K8s APIServer url. Either one of apiServerEndpoint or privateLinkResourceId can be specified
     * 
     */
    public Optional<String> apiServerEndpoint() {
        return Optional.ofNullable(this.apiServerEndpoint);
    }
    /**
     * @return RootCA certificate of kubernetes cluster base64 encoded
     * 
     */
    public Optional<String> clusterRootCA() {
        return Optional.ofNullable(this.clusterRootCA);
    }
    /**
     * @return Properties of the controller.
     * 
     */
    public ControllerDetailsResponse controllerDetails() {
        return this.controllerDetails;
    }
    /**
     * @return An identifier that represents the resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The identity of the orchestrator
     * 
     */
    public Optional<OrchestratorIdentityResponse> identity() {
        return Optional.ofNullable(this.identity);
    }
    /**
     * @return The kind of workbook. Choices are user and shared.
     * 
     */
    public String kind() {
        return this.kind;
    }
    /**
     * @return Location of the resource.
     * 
     */
    public Optional<String> location() {
        return Optional.ofNullable(this.location);
    }
    /**
     * @return The name of the resource.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return AAD ID used with apiserver
     * 
     */
    public Optional<String> orchestratorAppId() {
        return Optional.ofNullable(this.orchestratorAppId);
    }
    /**
     * @return TenantID of server App ID
     * 
     */
    public Optional<String> orchestratorTenantId() {
        return Optional.ofNullable(this.orchestratorTenantId);
    }
    /**
     * @return private link arm resource id. Either one of apiServerEndpoint or privateLinkResourceId can be specified
     * 
     */
    public Optional<String> privateLinkResourceId() {
        return Optional.ofNullable(this.privateLinkResourceId);
    }
    /**
     * @return The current state of orchestratorInstance resource.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * @return Resource guid.
     * 
     */
    public String resourceGuid() {
        return this.resourceGuid;
    }
    /**
     * @return The resource tags.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return The type of resource.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetOrchestratorInstanceServiceDetailsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String apiServerEndpoint;
        private @Nullable String clusterRootCA;
        private ControllerDetailsResponse controllerDetails;
        private String id;
        private @Nullable OrchestratorIdentityResponse identity;
        private String kind;
        private @Nullable String location;
        private String name;
        private @Nullable String orchestratorAppId;
        private @Nullable String orchestratorTenantId;
        private @Nullable String privateLinkResourceId;
        private String provisioningState;
        private String resourceGuid;
        private @Nullable Map<String,String> tags;
        private String type;
        public Builder() {}
        public Builder(GetOrchestratorInstanceServiceDetailsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apiServerEndpoint = defaults.apiServerEndpoint;
    	      this.clusterRootCA = defaults.clusterRootCA;
    	      this.controllerDetails = defaults.controllerDetails;
    	      this.id = defaults.id;
    	      this.identity = defaults.identity;
    	      this.kind = defaults.kind;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.orchestratorAppId = defaults.orchestratorAppId;
    	      this.orchestratorTenantId = defaults.orchestratorTenantId;
    	      this.privateLinkResourceId = defaults.privateLinkResourceId;
    	      this.provisioningState = defaults.provisioningState;
    	      this.resourceGuid = defaults.resourceGuid;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder apiServerEndpoint(@Nullable String apiServerEndpoint) {
            this.apiServerEndpoint = apiServerEndpoint;
            return this;
        }
        @CustomType.Setter
        public Builder clusterRootCA(@Nullable String clusterRootCA) {
            this.clusterRootCA = clusterRootCA;
            return this;
        }
        @CustomType.Setter
        public Builder controllerDetails(ControllerDetailsResponse controllerDetails) {
            this.controllerDetails = Objects.requireNonNull(controllerDetails);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder identity(@Nullable OrchestratorIdentityResponse identity) {
            this.identity = identity;
            return this;
        }
        @CustomType.Setter
        public Builder kind(String kind) {
            this.kind = Objects.requireNonNull(kind);
            return this;
        }
        @CustomType.Setter
        public Builder location(@Nullable String location) {
            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder orchestratorAppId(@Nullable String orchestratorAppId) {
            this.orchestratorAppId = orchestratorAppId;
            return this;
        }
        @CustomType.Setter
        public Builder orchestratorTenantId(@Nullable String orchestratorTenantId) {
            this.orchestratorTenantId = orchestratorTenantId;
            return this;
        }
        @CustomType.Setter
        public Builder privateLinkResourceId(@Nullable String privateLinkResourceId) {
            this.privateLinkResourceId = privateLinkResourceId;
            return this;
        }
        @CustomType.Setter
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        @CustomType.Setter
        public Builder resourceGuid(String resourceGuid) {
            this.resourceGuid = Objects.requireNonNull(resourceGuid);
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetOrchestratorInstanceServiceDetailsResult build() {
            final var o = new GetOrchestratorInstanceServiceDetailsResult();
            o.apiServerEndpoint = apiServerEndpoint;
            o.clusterRootCA = clusterRootCA;
            o.controllerDetails = controllerDetails;
            o.id = id;
            o.identity = identity;
            o.kind = kind;
            o.location = location;
            o.name = name;
            o.orchestratorAppId = orchestratorAppId;
            o.orchestratorTenantId = orchestratorTenantId;
            o.privateLinkResourceId = privateLinkResourceId;
            o.provisioningState = provisioningState;
            o.resourceGuid = resourceGuid;
            o.tags = tags;
            o.type = type;
            return o;
        }
    }
}
