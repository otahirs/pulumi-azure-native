// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.containerinstance.outputs;

import com.pulumi.azurenative.containerinstance.outputs.ContainerExecResponse;
import com.pulumi.azurenative.containerinstance.outputs.ContainerHttpGetResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ContainerProbeResponse {
    /**
     * @return The execution command to probe
     * 
     */
    private @Nullable ContainerExecResponse exec;
    /**
     * @return The failure threshold.
     * 
     */
    private @Nullable Integer failureThreshold;
    /**
     * @return The Http Get settings to probe
     * 
     */
    private @Nullable ContainerHttpGetResponse httpGet;
    /**
     * @return The initial delay seconds.
     * 
     */
    private @Nullable Integer initialDelaySeconds;
    /**
     * @return The period seconds.
     * 
     */
    private @Nullable Integer periodSeconds;
    /**
     * @return The success threshold.
     * 
     */
    private @Nullable Integer successThreshold;
    /**
     * @return The timeout seconds.
     * 
     */
    private @Nullable Integer timeoutSeconds;

    private ContainerProbeResponse() {}
    /**
     * @return The execution command to probe
     * 
     */
    public Optional<ContainerExecResponse> exec() {
        return Optional.ofNullable(this.exec);
    }
    /**
     * @return The failure threshold.
     * 
     */
    public Optional<Integer> failureThreshold() {
        return Optional.ofNullable(this.failureThreshold);
    }
    /**
     * @return The Http Get settings to probe
     * 
     */
    public Optional<ContainerHttpGetResponse> httpGet() {
        return Optional.ofNullable(this.httpGet);
    }
    /**
     * @return The initial delay seconds.
     * 
     */
    public Optional<Integer> initialDelaySeconds() {
        return Optional.ofNullable(this.initialDelaySeconds);
    }
    /**
     * @return The period seconds.
     * 
     */
    public Optional<Integer> periodSeconds() {
        return Optional.ofNullable(this.periodSeconds);
    }
    /**
     * @return The success threshold.
     * 
     */
    public Optional<Integer> successThreshold() {
        return Optional.ofNullable(this.successThreshold);
    }
    /**
     * @return The timeout seconds.
     * 
     */
    public Optional<Integer> timeoutSeconds() {
        return Optional.ofNullable(this.timeoutSeconds);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ContainerProbeResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable ContainerExecResponse exec;
        private @Nullable Integer failureThreshold;
        private @Nullable ContainerHttpGetResponse httpGet;
        private @Nullable Integer initialDelaySeconds;
        private @Nullable Integer periodSeconds;
        private @Nullable Integer successThreshold;
        private @Nullable Integer timeoutSeconds;
        public Builder() {}
        public Builder(ContainerProbeResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.exec = defaults.exec;
    	      this.failureThreshold = defaults.failureThreshold;
    	      this.httpGet = defaults.httpGet;
    	      this.initialDelaySeconds = defaults.initialDelaySeconds;
    	      this.periodSeconds = defaults.periodSeconds;
    	      this.successThreshold = defaults.successThreshold;
    	      this.timeoutSeconds = defaults.timeoutSeconds;
        }

        @CustomType.Setter
        public Builder exec(@Nullable ContainerExecResponse exec) {
            this.exec = exec;
            return this;
        }
        @CustomType.Setter
        public Builder failureThreshold(@Nullable Integer failureThreshold) {
            this.failureThreshold = failureThreshold;
            return this;
        }
        @CustomType.Setter
        public Builder httpGet(@Nullable ContainerHttpGetResponse httpGet) {
            this.httpGet = httpGet;
            return this;
        }
        @CustomType.Setter
        public Builder initialDelaySeconds(@Nullable Integer initialDelaySeconds) {
            this.initialDelaySeconds = initialDelaySeconds;
            return this;
        }
        @CustomType.Setter
        public Builder periodSeconds(@Nullable Integer periodSeconds) {
            this.periodSeconds = periodSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder successThreshold(@Nullable Integer successThreshold) {
            this.successThreshold = successThreshold;
            return this;
        }
        @CustomType.Setter
        public Builder timeoutSeconds(@Nullable Integer timeoutSeconds) {
            this.timeoutSeconds = timeoutSeconds;
            return this;
        }
        public ContainerProbeResponse build() {
            final var o = new ContainerProbeResponse();
            o.exec = exec;
            o.failureThreshold = failureThreshold;
            o.httpGet = httpGet;
            o.initialDelaySeconds = initialDelaySeconds;
            o.periodSeconds = periodSeconds;
            o.successThreshold = successThreshold;
            o.timeoutSeconds = timeoutSeconds;
            return o;
        }
    }
}
