// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.workloads;

import com.pulumi.azurenative.Utilities;
import com.pulumi.azurenative.workloads.PhpWorkloadArgs;
import com.pulumi.azurenative.workloads.outputs.BackupProfileResponse;
import com.pulumi.azurenative.workloads.outputs.CacheProfileResponse;
import com.pulumi.azurenative.workloads.outputs.DatabaseProfileResponse;
import com.pulumi.azurenative.workloads.outputs.FileshareProfileResponse;
import com.pulumi.azurenative.workloads.outputs.ManagedRGConfigurationResponse;
import com.pulumi.azurenative.workloads.outputs.NetworkProfileResponse;
import com.pulumi.azurenative.workloads.outputs.NodeProfileResponse;
import com.pulumi.azurenative.workloads.outputs.PhpProfileResponse;
import com.pulumi.azurenative.workloads.outputs.PhpWorkloadResourceResponseIdentity;
import com.pulumi.azurenative.workloads.outputs.SearchProfileResponse;
import com.pulumi.azurenative.workloads.outputs.SiteProfileResponse;
import com.pulumi.azurenative.workloads.outputs.SkuResponse;
import com.pulumi.azurenative.workloads.outputs.SystemDataResponse;
import com.pulumi.azurenative.workloads.outputs.UserProfileResponse;
import com.pulumi.azurenative.workloads.outputs.VmssNodesProfileResponse;
import com.pulumi.core.Alias;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Php workload resource
 * API Version: 2021-12-01-preview.
 * 
 * ## Example Usage
 * ### Workloads
 * 
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var phpWorkload = new PhpWorkload(&#34;phpWorkload&#34;, PhpWorkloadArgs.builder()        
 *             .adminUserProfile(Map.ofEntries(
 *                 Map.entry(&#34;sshPublicKey&#34;, &#34;===SSH=PUBLIC=KEY===&#34;),
 *                 Map.entry(&#34;userName&#34;, &#34;wpadmin&#34;)
 *             ))
 *             .appLocation(&#34;eastus&#34;)
 *             .backupProfile(Map.of(&#34;backupEnabled&#34;, &#34;Disabled&#34;))
 *             .cacheProfile(Map.ofEntries(
 *                 Map.entry(&#34;capacity&#34;, 0),
 *                 Map.entry(&#34;family&#34;, &#34;C&#34;),
 *                 Map.entry(&#34;name&#34;, &#34;wp-cache&#34;),
 *                 Map.entry(&#34;skuName&#34;, &#34;Basic&#34;)
 *             ))
 *             .controllerProfile(Map.ofEntries(
 *                 Map.entry(&#34;dataDisks&#34;, Map.ofEntries(
 *                     Map.entry(&#34;sizeInGB&#34;, 100),
 *                     Map.entry(&#34;storageType&#34;, &#34;Premium_LRS&#34;)
 *                 )),
 *                 Map.entry(&#34;name&#34;, &#34;contoller-vm&#34;),
 *                 Map.entry(&#34;nodeSku&#34;, &#34;Standard_DS2_v2&#34;),
 *                 Map.entry(&#34;osDisk&#34;, Map.of(&#34;storageType&#34;, &#34;Premium_LRS&#34;)),
 *                 Map.entry(&#34;osImage&#34;, Map.ofEntries(
 *                     Map.entry(&#34;offer&#34;, &#34;UbuntuServer&#34;),
 *                     Map.entry(&#34;publisher&#34;, &#34;Canonical&#34;),
 *                     Map.entry(&#34;sku&#34;, &#34;18.0-LTS&#34;),
 *                     Map.entry(&#34;version&#34;, &#34;latest&#34;)
 *                 ))
 *             ))
 *             .databaseProfile(Map.ofEntries(
 *                 Map.entry(&#34;backupRetentionDays&#34;, 7),
 *                 Map.entry(&#34;haEnabled&#34;, &#34;Disabled&#34;),
 *                 Map.entry(&#34;serverName&#34;, &#34;wp-db-server&#34;),
 *                 Map.entry(&#34;sku&#34;, &#34;Standard_D32s_v4&#34;),
 *                 Map.entry(&#34;sslEnforcementEnabled&#34;, &#34;Enabled&#34;),
 *                 Map.entry(&#34;storageInGB&#34;, 128),
 *                 Map.entry(&#34;storageIops&#34;, 200),
 *                 Map.entry(&#34;storageSku&#34;, &#34;Premium_LRS&#34;),
 *                 Map.entry(&#34;tier&#34;, &#34;GeneralPurpose&#34;),
 *                 Map.entry(&#34;type&#34;, &#34;MySql&#34;),
 *                 Map.entry(&#34;version&#34;, &#34;5.7&#34;)
 *             ))
 *             .fileshareProfile(Map.ofEntries(
 *                 Map.entry(&#34;shareSizeInGB&#34;, 100),
 *                 Map.entry(&#34;shareType&#34;, &#34;AzureFiles&#34;),
 *                 Map.entry(&#34;storageType&#34;, &#34;Premium_LRS&#34;)
 *             ))
 *             .kind(&#34;WordPress&#34;)
 *             .location(&#34;eastus2&#34;)
 *             .managedResourceGroupConfiguration(Map.of(&#34;name&#34;, &#34;php-mrg-wp39&#34;))
 *             .networkProfile(Map.ofEntries(
 *                 Map.entry(&#34;azureFrontDoorEnabled&#34;, &#34;Enabled&#34;),
 *                 Map.entry(&#34;loadBalancerSku&#34;, &#34;Standard&#34;),
 *                 Map.entry(&#34;loadBalancerType&#34;, &#34;LoadBalancer&#34;)
 *             ))
 *             .phpProfile(Map.of(&#34;version&#34;, &#34;7.3&#34;))
 *             .phpWorkloadName(&#34;wp39&#34;)
 *             .resourceGroupName(&#34;test-rg&#34;)
 *             .searchProfile(Map.ofEntries(
 *                 Map.entry(&#34;nodeSku&#34;, &#34;Standard_DS2_v2&#34;),
 *                 Map.entry(&#34;osDisk&#34;, Map.of(&#34;storageType&#34;, &#34;Premium_LRS&#34;)),
 *                 Map.entry(&#34;osImage&#34;, Map.ofEntries(
 *                     Map.entry(&#34;offer&#34;, &#34;UbuntuServer&#34;),
 *                     Map.entry(&#34;publisher&#34;, &#34;Canonical&#34;),
 *                     Map.entry(&#34;sku&#34;, &#34;18.0-LTS&#34;),
 *                     Map.entry(&#34;version&#34;, &#34;latest&#34;)
 *                 )),
 *                 Map.entry(&#34;searchType&#34;, &#34;Elastic&#34;)
 *             ))
 *             .siteProfile(Map.of(&#34;domainName&#34;, &#34;www.example.com&#34;))
 *             .sku(Map.of(&#34;name&#34;, &#34;Large&#34;))
 *             .tags()
 *             .webNodesProfile(Map.ofEntries(
 *                 Map.entry(&#34;autoScaleMaxCount&#34;, 1),
 *                 Map.entry(&#34;autoScaleMinCount&#34;, 1),
 *                 Map.entry(&#34;name&#34;, &#34;web-server&#34;),
 *                 Map.entry(&#34;nodeSku&#34;, &#34;Standard_DS2_v2&#34;),
 *                 Map.entry(&#34;osDisk&#34;, Map.of(&#34;storageType&#34;, &#34;Premium_LRS&#34;)),
 *                 Map.entry(&#34;osImage&#34;, Map.ofEntries(
 *                     Map.entry(&#34;offer&#34;, &#34;UbuntuServer&#34;),
 *                     Map.entry(&#34;publisher&#34;, &#34;Canonical&#34;),
 *                     Map.entry(&#34;sku&#34;, &#34;18.0-LTS&#34;),
 *                     Map.entry(&#34;version&#34;, &#34;latest&#34;)
 *                 ))
 *             ))
 *             .build());
 * 
 *     }
 * }
 * 
 * ```
 * 
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:workloads:PhpWorkload wp39 /subscriptions/6d875e77-e412-4d7d-9af4-8895278b4443/resourceGroups/test-rg/providers/Microsot.Workloads/phpWorkloads/wp39 
 * ```
 * 
 */
@ResourceType(type="azure-native:workloads:PhpWorkload")
public class PhpWorkload extends com.pulumi.resources.CustomResource {
    /**
     * Admin user profile used for VM and VMSS
     * 
     */
    @Export(name="adminUserProfile", type=UserProfileResponse.class, parameters={})
    private Output<UserProfileResponse> adminUserProfile;

    /**
     * @return Admin user profile used for VM and VMSS
     * 
     */
    public Output<UserProfileResponse> adminUserProfile() {
        return this.adminUserProfile;
    }
    /**
     * The infra resources for PHP workload will be created in this location
     * 
     */
    @Export(name="appLocation", type=String.class, parameters={})
    private Output<String> appLocation;

    /**
     * @return The infra resources for PHP workload will be created in this location
     * 
     */
    public Output<String> appLocation() {
        return this.appLocation;
    }
    /**
     * Backup profile
     * 
     */
    @Export(name="backupProfile", type=BackupProfileResponse.class, parameters={})
    private Output</* @Nullable */ BackupProfileResponse> backupProfile;

    /**
     * @return Backup profile
     * 
     */
    public Output<Optional<BackupProfileResponse>> backupProfile() {
        return Codegen.optional(this.backupProfile);
    }
    /**
     * Cache profile
     * 
     */
    @Export(name="cacheProfile", type=CacheProfileResponse.class, parameters={})
    private Output</* @Nullable */ CacheProfileResponse> cacheProfile;

    /**
     * @return Cache profile
     * 
     */
    public Output<Optional<CacheProfileResponse>> cacheProfile() {
        return Codegen.optional(this.cacheProfile);
    }
    /**
     * Controller VM profile
     * 
     */
    @Export(name="controllerProfile", type=NodeProfileResponse.class, parameters={})
    private Output<NodeProfileResponse> controllerProfile;

    /**
     * @return Controller VM profile
     * 
     */
    public Output<NodeProfileResponse> controllerProfile() {
        return this.controllerProfile;
    }
    /**
     * Database profile
     * 
     */
    @Export(name="databaseProfile", type=DatabaseProfileResponse.class, parameters={})
    private Output<DatabaseProfileResponse> databaseProfile;

    /**
     * @return Database profile
     * 
     */
    public Output<DatabaseProfileResponse> databaseProfile() {
        return this.databaseProfile;
    }
    /**
     * File share profile
     * 
     */
    @Export(name="fileshareProfile", type=FileshareProfileResponse.class, parameters={})
    private Output</* @Nullable */ FileshareProfileResponse> fileshareProfile;

    /**
     * @return File share profile
     * 
     */
    public Output<Optional<FileshareProfileResponse>> fileshareProfile() {
        return Codegen.optional(this.fileshareProfile);
    }
    /**
     * Identity for the resource. Currently not supported
     * 
     */
    @Export(name="identity", type=PhpWorkloadResourceResponseIdentity.class, parameters={})
    private Output</* @Nullable */ PhpWorkloadResourceResponseIdentity> identity;

    /**
     * @return Identity for the resource. Currently not supported
     * 
     */
    public Output<Optional<PhpWorkloadResourceResponseIdentity>> identity() {
        return Codegen.optional(this.identity);
    }
    /**
     * Indicates which kind of php workload this resource represent e.g WordPress
     * 
     */
    @Export(name="kind", type=String.class, parameters={})
    private Output<String> kind;

    /**
     * @return Indicates which kind of php workload this resource represent e.g WordPress
     * 
     */
    public Output<String> kind() {
        return this.kind;
    }
    /**
     * The geo-location where the resource lives
     * 
     */
    @Export(name="location", type=String.class, parameters={})
    private Output<String> location;

    /**
     * @return The geo-location where the resource lives
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * Managed resource group configuration of the workload
     * 
     */
    @Export(name="managedResourceGroupConfiguration", type=ManagedRGConfigurationResponse.class, parameters={})
    private Output</* @Nullable */ ManagedRGConfigurationResponse> managedResourceGroupConfiguration;

    /**
     * @return Managed resource group configuration of the workload
     * 
     */
    public Output<Optional<ManagedRGConfigurationResponse>> managedResourceGroupConfiguration() {
        return Codegen.optional(this.managedResourceGroupConfiguration);
    }
    /**
     * The name of the resource
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the resource
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Network profile
     * 
     */
    @Export(name="networkProfile", type=NetworkProfileResponse.class, parameters={})
    private Output</* @Nullable */ NetworkProfileResponse> networkProfile;

    /**
     * @return Network profile
     * 
     */
    public Output<Optional<NetworkProfileResponse>> networkProfile() {
        return Codegen.optional(this.networkProfile);
    }
    /**
     * PHP profile
     * 
     */
    @Export(name="phpProfile", type=PhpProfileResponse.class, parameters={})
    private Output</* @Nullable */ PhpProfileResponse> phpProfile;

    /**
     * @return PHP profile
     * 
     */
    public Output<Optional<PhpProfileResponse>> phpProfile() {
        return Codegen.optional(this.phpProfile);
    }
    /**
     * Php workload resource provisioning state
     * 
     */
    @Export(name="provisioningState", type=String.class, parameters={})
    private Output<String> provisioningState;

    /**
     * @return Php workload resource provisioning state
     * 
     */
    public Output<String> provisioningState() {
        return this.provisioningState;
    }
    /**
     * Search profile
     * 
     */
    @Export(name="searchProfile", type=SearchProfileResponse.class, parameters={})
    private Output</* @Nullable */ SearchProfileResponse> searchProfile;

    /**
     * @return Search profile
     * 
     */
    public Output<Optional<SearchProfileResponse>> searchProfile() {
        return Codegen.optional(this.searchProfile);
    }
    /**
     * Site profile
     * 
     */
    @Export(name="siteProfile", type=SiteProfileResponse.class, parameters={})
    private Output</* @Nullable */ SiteProfileResponse> siteProfile;

    /**
     * @return Site profile
     * 
     */
    public Output<Optional<SiteProfileResponse>> siteProfile() {
        return Codegen.optional(this.siteProfile);
    }
    /**
     * Php workloads SKU
     * 
     */
    @Export(name="sku", type=SkuResponse.class, parameters={})
    private Output</* @Nullable */ SkuResponse> sku;

    /**
     * @return Php workloads SKU
     * 
     */
    public Output<Optional<SkuResponse>> sku() {
        return Codegen.optional(this.sku);
    }
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     */
    @Export(name="systemData", type=SystemDataResponse.class, parameters={})
    private Output<SystemDataResponse> systemData;

    /**
     * @return Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     */
    public Output<SystemDataResponse> systemData() {
        return this.systemData;
    }
    /**
     * Resource tags.
     * 
     */
    @Export(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return Resource tags.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    public Output<String> type() {
        return this.type;
    }
    /**
     * VMSS web nodes profile
     * 
     */
    @Export(name="webNodesProfile", type=VmssNodesProfileResponse.class, parameters={})
    private Output<VmssNodesProfileResponse> webNodesProfile;

    /**
     * @return VMSS web nodes profile
     * 
     */
    public Output<VmssNodesProfileResponse> webNodesProfile() {
        return this.webNodesProfile;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public PhpWorkload(String name) {
        this(name, PhpWorkloadArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public PhpWorkload(String name, PhpWorkloadArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public PhpWorkload(String name, PhpWorkloadArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:workloads:PhpWorkload", name, args == null ? PhpWorkloadArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private PhpWorkload(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:workloads:PhpWorkload", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("azure-native:workloads/v20211201preview:PhpWorkload").build())
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static PhpWorkload get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new PhpWorkload(name, id, options);
    }
}
