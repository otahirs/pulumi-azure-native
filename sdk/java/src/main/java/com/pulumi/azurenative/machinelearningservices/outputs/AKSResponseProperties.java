// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearningservices.outputs;

import com.pulumi.azurenative.machinelearningservices.outputs.AksNetworkingConfigurationResponse;
import com.pulumi.azurenative.machinelearningservices.outputs.SslConfigurationResponse;
import com.pulumi.azurenative.machinelearningservices.outputs.SystemServiceResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AKSResponseProperties {
    /**
     * @return Number of agents
     * 
     */
    private @Nullable Integer agentCount;
    /**
     * @return Agent virtual machine size
     * 
     */
    private @Nullable String agentVmSize;
    /**
     * @return AKS networking configuration for vnet
     * 
     */
    private @Nullable AksNetworkingConfigurationResponse aksNetworkingConfiguration;
    /**
     * @return Cluster full qualified domain name
     * 
     */
    private @Nullable String clusterFqdn;
    /**
     * @return Intended usage of the cluster
     * 
     */
    private @Nullable String clusterPurpose;
    /**
     * @return SSL configuration
     * 
     */
    private @Nullable SslConfigurationResponse sslConfiguration;
    /**
     * @return System services
     * 
     */
    private List<SystemServiceResponse> systemServices;

    private AKSResponseProperties() {}
    /**
     * @return Number of agents
     * 
     */
    public Optional<Integer> agentCount() {
        return Optional.ofNullable(this.agentCount);
    }
    /**
     * @return Agent virtual machine size
     * 
     */
    public Optional<String> agentVmSize() {
        return Optional.ofNullable(this.agentVmSize);
    }
    /**
     * @return AKS networking configuration for vnet
     * 
     */
    public Optional<AksNetworkingConfigurationResponse> aksNetworkingConfiguration() {
        return Optional.ofNullable(this.aksNetworkingConfiguration);
    }
    /**
     * @return Cluster full qualified domain name
     * 
     */
    public Optional<String> clusterFqdn() {
        return Optional.ofNullable(this.clusterFqdn);
    }
    /**
     * @return Intended usage of the cluster
     * 
     */
    public Optional<String> clusterPurpose() {
        return Optional.ofNullable(this.clusterPurpose);
    }
    /**
     * @return SSL configuration
     * 
     */
    public Optional<SslConfigurationResponse> sslConfiguration() {
        return Optional.ofNullable(this.sslConfiguration);
    }
    /**
     * @return System services
     * 
     */
    public List<SystemServiceResponse> systemServices() {
        return this.systemServices;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AKSResponseProperties defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer agentCount;
        private @Nullable String agentVmSize;
        private @Nullable AksNetworkingConfigurationResponse aksNetworkingConfiguration;
        private @Nullable String clusterFqdn;
        private @Nullable String clusterPurpose;
        private @Nullable SslConfigurationResponse sslConfiguration;
        private List<SystemServiceResponse> systemServices;
        public Builder() {}
        public Builder(AKSResponseProperties defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.agentCount = defaults.agentCount;
    	      this.agentVmSize = defaults.agentVmSize;
    	      this.aksNetworkingConfiguration = defaults.aksNetworkingConfiguration;
    	      this.clusterFqdn = defaults.clusterFqdn;
    	      this.clusterPurpose = defaults.clusterPurpose;
    	      this.sslConfiguration = defaults.sslConfiguration;
    	      this.systemServices = defaults.systemServices;
        }

        @CustomType.Setter
        public Builder agentCount(@Nullable Integer agentCount) {
            this.agentCount = agentCount;
            return this;
        }
        @CustomType.Setter
        public Builder agentVmSize(@Nullable String agentVmSize) {
            this.agentVmSize = agentVmSize;
            return this;
        }
        @CustomType.Setter
        public Builder aksNetworkingConfiguration(@Nullable AksNetworkingConfigurationResponse aksNetworkingConfiguration) {
            this.aksNetworkingConfiguration = aksNetworkingConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder clusterFqdn(@Nullable String clusterFqdn) {
            this.clusterFqdn = clusterFqdn;
            return this;
        }
        @CustomType.Setter
        public Builder clusterPurpose(@Nullable String clusterPurpose) {
            this.clusterPurpose = clusterPurpose;
            return this;
        }
        @CustomType.Setter
        public Builder sslConfiguration(@Nullable SslConfigurationResponse sslConfiguration) {
            this.sslConfiguration = sslConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder systemServices(List<SystemServiceResponse> systemServices) {
            this.systemServices = Objects.requireNonNull(systemServices);
            return this;
        }
        public Builder systemServices(SystemServiceResponse... systemServices) {
            return systemServices(List.of(systemServices));
        }
        public AKSResponseProperties build() {
            final var o = new AKSResponseProperties();
            o.agentCount = agentCount;
            o.agentVmSize = agentVmSize;
            o.aksNetworkingConfiguration = aksNetworkingConfiguration;
            o.clusterFqdn = clusterFqdn;
            o.clusterPurpose = clusterPurpose;
            o.sslConfiguration = sslConfiguration;
            o.systemServices = systemServices;
            return o;
        }
    }
}
