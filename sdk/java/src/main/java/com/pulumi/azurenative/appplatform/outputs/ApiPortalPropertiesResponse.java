// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.appplatform.outputs;

import com.pulumi.azurenative.appplatform.outputs.ApiPortalInstanceResponse;
import com.pulumi.azurenative.appplatform.outputs.ApiPortalResourceRequestsResponse;
import com.pulumi.azurenative.appplatform.outputs.SsoPropertiesResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ApiPortalPropertiesResponse {
    /**
     * @return The array of resource Ids of gateway to integrate with API portal.
     * 
     */
    private @Nullable List<String> gatewayIds;
    /**
     * @return Indicate if only https is allowed.
     * 
     */
    private @Nullable Boolean httpsOnly;
    /**
     * @return Collection of instances belong to API portal.
     * 
     */
    private List<ApiPortalInstanceResponse> instances;
    /**
     * @return State of the API portal.
     * 
     */
    private String provisioningState;
    /**
     * @return Indicates whether the API portal exposes endpoint.
     * 
     */
    private @Nullable Boolean public_;
    /**
     * @return The requested resource quantity for required CPU and Memory.
     * 
     */
    private ApiPortalResourceRequestsResponse resourceRequests;
    /**
     * @return Collection of OpenAPI source URL locations.
     * 
     */
    private @Nullable List<String> sourceUrls;
    /**
     * @return Single sign-on related configuration
     * 
     */
    private @Nullable SsoPropertiesResponse ssoProperties;
    /**
     * @return URL of the API portal, exposed when &#39;public&#39; is true.
     * 
     */
    private String url;

    private ApiPortalPropertiesResponse() {}
    /**
     * @return The array of resource Ids of gateway to integrate with API portal.
     * 
     */
    public List<String> gatewayIds() {
        return this.gatewayIds == null ? List.of() : this.gatewayIds;
    }
    /**
     * @return Indicate if only https is allowed.
     * 
     */
    public Optional<Boolean> httpsOnly() {
        return Optional.ofNullable(this.httpsOnly);
    }
    /**
     * @return Collection of instances belong to API portal.
     * 
     */
    public List<ApiPortalInstanceResponse> instances() {
        return this.instances;
    }
    /**
     * @return State of the API portal.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * @return Indicates whether the API portal exposes endpoint.
     * 
     */
    public Optional<Boolean> public_() {
        return Optional.ofNullable(this.public_);
    }
    /**
     * @return The requested resource quantity for required CPU and Memory.
     * 
     */
    public ApiPortalResourceRequestsResponse resourceRequests() {
        return this.resourceRequests;
    }
    /**
     * @return Collection of OpenAPI source URL locations.
     * 
     */
    public List<String> sourceUrls() {
        return this.sourceUrls == null ? List.of() : this.sourceUrls;
    }
    /**
     * @return Single sign-on related configuration
     * 
     */
    public Optional<SsoPropertiesResponse> ssoProperties() {
        return Optional.ofNullable(this.ssoProperties);
    }
    /**
     * @return URL of the API portal, exposed when &#39;public&#39; is true.
     * 
     */
    public String url() {
        return this.url;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ApiPortalPropertiesResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> gatewayIds;
        private @Nullable Boolean httpsOnly;
        private List<ApiPortalInstanceResponse> instances;
        private String provisioningState;
        private @Nullable Boolean public_;
        private ApiPortalResourceRequestsResponse resourceRequests;
        private @Nullable List<String> sourceUrls;
        private @Nullable SsoPropertiesResponse ssoProperties;
        private String url;
        public Builder() {}
        public Builder(ApiPortalPropertiesResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.gatewayIds = defaults.gatewayIds;
    	      this.httpsOnly = defaults.httpsOnly;
    	      this.instances = defaults.instances;
    	      this.provisioningState = defaults.provisioningState;
    	      this.public_ = defaults.public_;
    	      this.resourceRequests = defaults.resourceRequests;
    	      this.sourceUrls = defaults.sourceUrls;
    	      this.ssoProperties = defaults.ssoProperties;
    	      this.url = defaults.url;
        }

        @CustomType.Setter
        public Builder gatewayIds(@Nullable List<String> gatewayIds) {
            this.gatewayIds = gatewayIds;
            return this;
        }
        public Builder gatewayIds(String... gatewayIds) {
            return gatewayIds(List.of(gatewayIds));
        }
        @CustomType.Setter
        public Builder httpsOnly(@Nullable Boolean httpsOnly) {
            this.httpsOnly = httpsOnly;
            return this;
        }
        @CustomType.Setter
        public Builder instances(List<ApiPortalInstanceResponse> instances) {
            this.instances = Objects.requireNonNull(instances);
            return this;
        }
        public Builder instances(ApiPortalInstanceResponse... instances) {
            return instances(List.of(instances));
        }
        @CustomType.Setter
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        @CustomType.Setter("public")
        public Builder public_(@Nullable Boolean public_) {
            this.public_ = public_;
            return this;
        }
        @CustomType.Setter
        public Builder resourceRequests(ApiPortalResourceRequestsResponse resourceRequests) {
            this.resourceRequests = Objects.requireNonNull(resourceRequests);
            return this;
        }
        @CustomType.Setter
        public Builder sourceUrls(@Nullable List<String> sourceUrls) {
            this.sourceUrls = sourceUrls;
            return this;
        }
        public Builder sourceUrls(String... sourceUrls) {
            return sourceUrls(List.of(sourceUrls));
        }
        @CustomType.Setter
        public Builder ssoProperties(@Nullable SsoPropertiesResponse ssoProperties) {
            this.ssoProperties = ssoProperties;
            return this;
        }
        @CustomType.Setter
        public Builder url(String url) {
            this.url = Objects.requireNonNull(url);
            return this;
        }
        public ApiPortalPropertiesResponse build() {
            final var o = new ApiPortalPropertiesResponse();
            o.gatewayIds = gatewayIds;
            o.httpsOnly = httpsOnly;
            o.instances = instances;
            o.provisioningState = provisioningState;
            o.public_ = public_;
            o.resourceRequests = resourceRequests;
            o.sourceUrls = sourceUrls;
            o.ssoProperties = ssoProperties;
            o.url = url;
            return o;
        }
    }
}
