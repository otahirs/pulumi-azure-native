// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.authorization;

import com.pulumi.azurenative.Utilities;
import com.pulumi.azurenative.authorization.PolicySetDefinitionAtManagementGroupArgs;
import com.pulumi.azurenative.authorization.outputs.ParameterDefinitionsValueResponse;
import com.pulumi.azurenative.authorization.outputs.PolicyDefinitionGroupResponse;
import com.pulumi.azurenative.authorization.outputs.PolicyDefinitionReferenceResponse;
import com.pulumi.core.Alias;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * The policy set definition.
 * API Version: 2020-09-01.
 * 
 * ## Example Usage
 * ### Create or update a policy set definition at management group level
 * 
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var policySetDefinitionAtManagementGroup = new PolicySetDefinitionAtManagementGroup(&#34;policySetDefinitionAtManagementGroup&#34;, PolicySetDefinitionAtManagementGroupArgs.builder()        
 *             .description(&#34;Policies to enforce low cost storage SKUs&#34;)
 *             .displayName(&#34;Cost Management&#34;)
 *             .managementGroupId(&#34;MyManagementGroup&#34;)
 *             .metadata(Map.of(&#34;category&#34;, &#34;Cost Management&#34;))
 *             .policyDefinitions(            
 *                 Map.ofEntries(
 *                     Map.entry(&#34;parameters&#34;, Map.of(&#34;listOfAllowedSKUs&#34;, Map.of(&#34;value&#34;,                     
 *                         &#34;Standard_GRS&#34;,
 *                         &#34;Standard_LRS&#34;))),
 *                     Map.entry(&#34;policyDefinitionId&#34;, &#34;/providers/Microsoft.Management/managementgroups/MyManagementGroup/providers/Microsoft.Authorization/policyDefinitions/7433c107-6db4-4ad1-b57a-a76dce0154a1&#34;),
 *                     Map.entry(&#34;policyDefinitionReferenceId&#34;, &#34;Limit_Skus&#34;)
 *                 ),
 *                 Map.ofEntries(
 *                     Map.entry(&#34;parameters&#34;, Map.ofEntries(
 *                         Map.entry(&#34;prefix&#34;, Map.of(&#34;value&#34;, &#34;DeptA&#34;)),
 *                         Map.entry(&#34;suffix&#34;, Map.of(&#34;value&#34;, &#34;-LC&#34;))
 *                     )),
 *                     Map.entry(&#34;policyDefinitionId&#34;, &#34;/providers/Microsoft.Management/managementgroups/MyManagementGroup/providers/Microsoft.Authorization/policyDefinitions/ResourceNaming&#34;),
 *                     Map.entry(&#34;policyDefinitionReferenceId&#34;, &#34;Resource_Naming&#34;)
 *                 ))
 *             .policySetDefinitionName(&#34;CostManagement&#34;)
 *             .build());
 * 
 *     }
 * }
 * 
 * ```
 * ### Create or update a policy set definition with groups at management group level
 * 
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var policySetDefinitionAtManagementGroup = new PolicySetDefinitionAtManagementGroup(&#34;policySetDefinitionAtManagementGroup&#34;, PolicySetDefinitionAtManagementGroupArgs.builder()        
 *             .description(&#34;Policies to enforce low cost storage SKUs&#34;)
 *             .displayName(&#34;Cost Management&#34;)
 *             .managementGroupId(&#34;MyManagementGroup&#34;)
 *             .metadata(Map.of(&#34;category&#34;, &#34;Cost Management&#34;))
 *             .policyDefinitionGroups(            
 *                 Map.ofEntries(
 *                     Map.entry(&#34;description&#34;, &#34;Policies designed to control spend within a subscription.&#34;),
 *                     Map.entry(&#34;displayName&#34;, &#34;Cost Management Policies&#34;),
 *                     Map.entry(&#34;name&#34;, &#34;CostSaving&#34;)
 *                 ),
 *                 Map.ofEntries(
 *                     Map.entry(&#34;description&#34;, &#34;Policies that help enforce resource organization standards within a subscription.&#34;),
 *                     Map.entry(&#34;displayName&#34;, &#34;Organizational Policies&#34;),
 *                     Map.entry(&#34;name&#34;, &#34;Organizational&#34;)
 *                 ))
 *             .policyDefinitions(            
 *                 Map.ofEntries(
 *                     Map.entry(&#34;groupNames&#34;, &#34;CostSaving&#34;),
 *                     Map.entry(&#34;parameters&#34;, Map.of(&#34;listOfAllowedSKUs&#34;, Map.of(&#34;value&#34;,                     
 *                         &#34;Standard_GRS&#34;,
 *                         &#34;Standard_LRS&#34;))),
 *                     Map.entry(&#34;policyDefinitionId&#34;, &#34;/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/7433c107-6db4-4ad1-b57a-a76dce0154a1&#34;),
 *                     Map.entry(&#34;policyDefinitionReferenceId&#34;, &#34;Limit_Skus&#34;)
 *                 ),
 *                 Map.ofEntries(
 *                     Map.entry(&#34;groupNames&#34;, &#34;Organizational&#34;),
 *                     Map.entry(&#34;parameters&#34;, Map.ofEntries(
 *                         Map.entry(&#34;prefix&#34;, Map.of(&#34;value&#34;, &#34;DeptA&#34;)),
 *                         Map.entry(&#34;suffix&#34;, Map.of(&#34;value&#34;, &#34;-LC&#34;))
 *                     )),
 *                     Map.entry(&#34;policyDefinitionId&#34;, &#34;/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/ResourceNaming&#34;),
 *                     Map.entry(&#34;policyDefinitionReferenceId&#34;, &#34;Resource_Naming&#34;)
 *                 ))
 *             .policySetDefinitionName(&#34;CostManagement&#34;)
 *             .build());
 * 
 *     }
 * }
 * 
 * ```
 * 
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:authorization:PolicySetDefinitionAtManagementGroup CostManagement /providers/Microsoft.Management/managementgroups/MyManagementGroup/providers/Microsoft.Authorization/policySetDefinitions/CostManagement 
 * ```
 * 
 */
@ResourceType(type="azure-native:authorization:PolicySetDefinitionAtManagementGroup")
public class PolicySetDefinitionAtManagementGroup extends com.pulumi.resources.CustomResource {
    /**
     * The policy set definition description.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return The policy set definition description.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * The display name of the policy set definition.
     * 
     */
    @Export(name="displayName", type=String.class, parameters={})
    private Output</* @Nullable */ String> displayName;

    /**
     * @return The display name of the policy set definition.
     * 
     */
    public Output<Optional<String>> displayName() {
        return Codegen.optional(this.displayName);
    }
    /**
     * The policy set definition metadata.  Metadata is an open ended object and is typically a collection of key value pairs.
     * 
     */
    @Export(name="metadata", type=Object.class, parameters={})
    private Output</* @Nullable */ Object> metadata;

    /**
     * @return The policy set definition metadata.  Metadata is an open ended object and is typically a collection of key value pairs.
     * 
     */
    public Output<Optional<Object>> metadata() {
        return Codegen.optional(this.metadata);
    }
    /**
     * The name of the policy set definition.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the policy set definition.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The policy set definition parameters that can be used in policy definition references.
     * 
     */
    @Export(name="parameters", type=Map.class, parameters={String.class, ParameterDefinitionsValueResponse.class})
    private Output</* @Nullable */ Map<String,ParameterDefinitionsValueResponse>> parameters;

    /**
     * @return The policy set definition parameters that can be used in policy definition references.
     * 
     */
    public Output<Optional<Map<String,ParameterDefinitionsValueResponse>>> parameters() {
        return Codegen.optional(this.parameters);
    }
    /**
     * The metadata describing groups of policy definition references within the policy set definition.
     * 
     */
    @Export(name="policyDefinitionGroups", type=List.class, parameters={PolicyDefinitionGroupResponse.class})
    private Output</* @Nullable */ List<PolicyDefinitionGroupResponse>> policyDefinitionGroups;

    /**
     * @return The metadata describing groups of policy definition references within the policy set definition.
     * 
     */
    public Output<Optional<List<PolicyDefinitionGroupResponse>>> policyDefinitionGroups() {
        return Codegen.optional(this.policyDefinitionGroups);
    }
    /**
     * An array of policy definition references.
     * 
     */
    @Export(name="policyDefinitions", type=List.class, parameters={PolicyDefinitionReferenceResponse.class})
    private Output<List<PolicyDefinitionReferenceResponse>> policyDefinitions;

    /**
     * @return An array of policy definition references.
     * 
     */
    public Output<List<PolicyDefinitionReferenceResponse>> policyDefinitions() {
        return this.policyDefinitions;
    }
    /**
     * The type of policy definition. Possible values are NotSpecified, BuiltIn, Custom, and Static.
     * 
     */
    @Export(name="policyType", type=String.class, parameters={})
    private Output</* @Nullable */ String> policyType;

    /**
     * @return The type of policy definition. Possible values are NotSpecified, BuiltIn, Custom, and Static.
     * 
     */
    public Output<Optional<String>> policyType() {
        return Codegen.optional(this.policyType);
    }
    /**
     * The type of the resource (Microsoft.Authorization/policySetDefinitions).
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return The type of the resource (Microsoft.Authorization/policySetDefinitions).
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public PolicySetDefinitionAtManagementGroup(String name) {
        this(name, PolicySetDefinitionAtManagementGroupArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public PolicySetDefinitionAtManagementGroup(String name, PolicySetDefinitionAtManagementGroupArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public PolicySetDefinitionAtManagementGroup(String name, PolicySetDefinitionAtManagementGroupArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:authorization:PolicySetDefinitionAtManagementGroup", name, args == null ? PolicySetDefinitionAtManagementGroupArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private PolicySetDefinitionAtManagementGroup(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:authorization:PolicySetDefinitionAtManagementGroup", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("azure-native:authorization/v20170601preview:PolicySetDefinitionAtManagementGroup").build()),
                Output.of(Alias.builder().type("azure-native:authorization/v20180301:PolicySetDefinitionAtManagementGroup").build()),
                Output.of(Alias.builder().type("azure-native:authorization/v20180501:PolicySetDefinitionAtManagementGroup").build()),
                Output.of(Alias.builder().type("azure-native:authorization/v20190101:PolicySetDefinitionAtManagementGroup").build()),
                Output.of(Alias.builder().type("azure-native:authorization/v20190601:PolicySetDefinitionAtManagementGroup").build()),
                Output.of(Alias.builder().type("azure-native:authorization/v20190901:PolicySetDefinitionAtManagementGroup").build()),
                Output.of(Alias.builder().type("azure-native:authorization/v20200301:PolicySetDefinitionAtManagementGroup").build()),
                Output.of(Alias.builder().type("azure-native:authorization/v20200901:PolicySetDefinitionAtManagementGroup").build()),
                Output.of(Alias.builder().type("azure-native:authorization/v20210601:PolicySetDefinitionAtManagementGroup").build())
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static PolicySetDefinitionAtManagementGroup get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new PolicySetDefinitionAtManagementGroup(name, id, options);
    }
}
