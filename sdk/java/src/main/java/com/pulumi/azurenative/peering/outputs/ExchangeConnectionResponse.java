// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.peering.outputs;

import com.pulumi.azurenative.peering.outputs.BgpSessionResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ExchangeConnectionResponse {
    /**
     * @return The BGP session associated with the connection.
     * 
     */
    private @Nullable BgpSessionResponse bgpSession;
    /**
     * @return The unique identifier (GUID) for the connection.
     * 
     */
    private @Nullable String connectionIdentifier;
    /**
     * @return The state of the connection.
     * 
     */
    private String connectionState;
    /**
     * @return The error message related to the connection state, if any.
     * 
     */
    private String errorMessage;
    /**
     * @return The PeeringDB.com ID of the facility at which the connection has to be set up.
     * 
     */
    private @Nullable Integer peeringDBFacilityId;

    private ExchangeConnectionResponse() {}
    /**
     * @return The BGP session associated with the connection.
     * 
     */
    public Optional<BgpSessionResponse> bgpSession() {
        return Optional.ofNullable(this.bgpSession);
    }
    /**
     * @return The unique identifier (GUID) for the connection.
     * 
     */
    public Optional<String> connectionIdentifier() {
        return Optional.ofNullable(this.connectionIdentifier);
    }
    /**
     * @return The state of the connection.
     * 
     */
    public String connectionState() {
        return this.connectionState;
    }
    /**
     * @return The error message related to the connection state, if any.
     * 
     */
    public String errorMessage() {
        return this.errorMessage;
    }
    /**
     * @return The PeeringDB.com ID of the facility at which the connection has to be set up.
     * 
     */
    public Optional<Integer> peeringDBFacilityId() {
        return Optional.ofNullable(this.peeringDBFacilityId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ExchangeConnectionResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable BgpSessionResponse bgpSession;
        private @Nullable String connectionIdentifier;
        private String connectionState;
        private String errorMessage;
        private @Nullable Integer peeringDBFacilityId;
        public Builder() {}
        public Builder(ExchangeConnectionResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bgpSession = defaults.bgpSession;
    	      this.connectionIdentifier = defaults.connectionIdentifier;
    	      this.connectionState = defaults.connectionState;
    	      this.errorMessage = defaults.errorMessage;
    	      this.peeringDBFacilityId = defaults.peeringDBFacilityId;
        }

        @CustomType.Setter
        public Builder bgpSession(@Nullable BgpSessionResponse bgpSession) {
            this.bgpSession = bgpSession;
            return this;
        }
        @CustomType.Setter
        public Builder connectionIdentifier(@Nullable String connectionIdentifier) {
            this.connectionIdentifier = connectionIdentifier;
            return this;
        }
        @CustomType.Setter
        public Builder connectionState(String connectionState) {
            this.connectionState = Objects.requireNonNull(connectionState);
            return this;
        }
        @CustomType.Setter
        public Builder errorMessage(String errorMessage) {
            this.errorMessage = Objects.requireNonNull(errorMessage);
            return this;
        }
        @CustomType.Setter
        public Builder peeringDBFacilityId(@Nullable Integer peeringDBFacilityId) {
            this.peeringDBFacilityId = peeringDBFacilityId;
            return this;
        }
        public ExchangeConnectionResponse build() {
            final var o = new ExchangeConnectionResponse();
            o.bgpSession = bgpSession;
            o.connectionIdentifier = connectionIdentifier;
            o.connectionState = connectionState;
            o.errorMessage = errorMessage;
            o.peeringDBFacilityId = peeringDBFacilityId;
            return o;
        }
    }
}
