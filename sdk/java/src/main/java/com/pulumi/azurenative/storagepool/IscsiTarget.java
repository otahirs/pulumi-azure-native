// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.storagepool;

import com.pulumi.azurenative.Utilities;
import com.pulumi.azurenative.storagepool.IscsiTargetArgs;
import com.pulumi.azurenative.storagepool.outputs.TargetPortalGroupResponse;
import com.pulumi.core.Alias;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Response for iSCSI target requests.
 * API Version: 2020-03-15-preview.
 * 
 * ## Example Usage
 * ### Create or Update iSCSI target
 * 
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var iscsiTarget = new IscsiTarget(&#34;iscsiTarget&#34;, IscsiTargetArgs.builder()        
 *             .diskPoolName(&#34;myDiskPool&#34;)
 *             .iscsiTargetName(&#34;myIscsiTarget&#34;)
 *             .resourceGroupName(&#34;myResourceGroup&#34;)
 *             .targetIqn(&#34;iqn.2005-03.org.iscsi:server1&#34;)
 *             .tpgs(Map.ofEntries(
 *                 Map.entry(&#34;acls&#34;, Map.ofEntries(
 *                     Map.entry(&#34;initiatorIqn&#34;, &#34;iqn.2005-03.org.iscsi:client&#34;),
 *                     Map.entry(&#34;mappedLuns&#34;, &#34;lun0&#34;),
 *                     Map.entry(&#34;password&#34;, &#34;some_password&#34;),
 *                     Map.entry(&#34;username&#34;, &#34;some_username&#34;)
 *                 )),
 *                 Map.entry(&#34;attributes&#34;, Map.ofEntries(
 *                     Map.entry(&#34;authentication&#34;, true),
 *                     Map.entry(&#34;prodModeWriteProtect&#34;, false)
 *                 )),
 *                 Map.entry(&#34;luns&#34;, Map.ofEntries(
 *                     Map.entry(&#34;managedDiskAzureResourceId&#34;, &#34;/subscriptions/11111111-1111-1111-1111-111111111111/resourceGroups/myResourceGroup/providers/Microsoft.Compute/disks/vm-name_DataDisk_1&#34;),
 *                     Map.entry(&#34;name&#34;, &#34;lun0&#34;)
 *                 ))
 *             ))
 *             .build());
 * 
 *     }
 * }
 * 
 * ```
 * 
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:storagepool:IscsiTarget myIscsiTarget /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.StoragePool/diskPools/myDiskPool/iscsiTargets/myIscsiTarget 
 * ```
 * 
 */
@ResourceType(type="azure-native:storagepool:IscsiTarget")
public class IscsiTarget extends com.pulumi.resources.CustomResource {
    /**
     * The name of the resource
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the resource
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * State of the operation on the resource.
     * 
     */
    @Export(name="provisioningState", type=String.class, parameters={})
    private Output<String> provisioningState;

    /**
     * @return State of the operation on the resource.
     * 
     */
    public Output<String> provisioningState() {
        return this.provisioningState;
    }
    /**
     * Operational status of the iSCSI target.
     * 
     */
    @Export(name="status", type=String.class, parameters={})
    private Output<String> status;

    /**
     * @return Operational status of the iSCSI target.
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * iSCSI target IQN (iSCSI Qualified Name); example: &#34;iqn.2005-03.org.iscsi:server&#34;.
     * 
     */
    @Export(name="targetIqn", type=String.class, parameters={})
    private Output<String> targetIqn;

    /**
     * @return iSCSI target IQN (iSCSI Qualified Name); example: &#34;iqn.2005-03.org.iscsi:server&#34;.
     * 
     */
    public Output<String> targetIqn() {
        return this.targetIqn;
    }
    /**
     * List of iSCSI target portal groups. Can have 1 portal group at most.
     * 
     */
    @Export(name="tpgs", type=List.class, parameters={TargetPortalGroupResponse.class})
    private Output<List<TargetPortalGroupResponse>> tpgs;

    /**
     * @return List of iSCSI target portal groups. Can have 1 portal group at most.
     * 
     */
    public Output<List<TargetPortalGroupResponse>> tpgs() {
        return this.tpgs;
    }
    /**
     * The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public IscsiTarget(String name) {
        this(name, IscsiTargetArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public IscsiTarget(String name, IscsiTargetArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public IscsiTarget(String name, IscsiTargetArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:storagepool:IscsiTarget", name, args == null ? IscsiTargetArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private IscsiTarget(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:storagepool:IscsiTarget", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("azure-native:storagepool/v20200315preview:IscsiTarget").build()),
                Output.of(Alias.builder().type("azure-native:storagepool/v20210401preview:IscsiTarget").build()),
                Output.of(Alias.builder().type("azure-native:storagepool/v20210801:IscsiTarget").build())
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static IscsiTarget get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new IscsiTarget(name, id, options);
    }
}
