// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.containerinstance.outputs;

import com.pulumi.azurenative.containerinstance.outputs.PortResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class IpAddressResponse {
    /**
     * @return The Dns name label for the IP.
     * 
     */
    private @Nullable String dnsNameLabel;
    /**
     * @return The FQDN for the IP.
     * 
     */
    private String fqdn;
    /**
     * @return The IP exposed to the public internet.
     * 
     */
    private @Nullable String ip;
    /**
     * @return The list of ports exposed on the container group.
     * 
     */
    private List<PortResponse> ports;
    /**
     * @return Specifies if the IP is exposed to the public internet or private VNET.
     * 
     */
    private String type;

    private IpAddressResponse() {}
    /**
     * @return The Dns name label for the IP.
     * 
     */
    public Optional<String> dnsNameLabel() {
        return Optional.ofNullable(this.dnsNameLabel);
    }
    /**
     * @return The FQDN for the IP.
     * 
     */
    public String fqdn() {
        return this.fqdn;
    }
    /**
     * @return The IP exposed to the public internet.
     * 
     */
    public Optional<String> ip() {
        return Optional.ofNullable(this.ip);
    }
    /**
     * @return The list of ports exposed on the container group.
     * 
     */
    public List<PortResponse> ports() {
        return this.ports;
    }
    /**
     * @return Specifies if the IP is exposed to the public internet or private VNET.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IpAddressResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String dnsNameLabel;
        private String fqdn;
        private @Nullable String ip;
        private List<PortResponse> ports;
        private String type;
        public Builder() {}
        public Builder(IpAddressResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dnsNameLabel = defaults.dnsNameLabel;
    	      this.fqdn = defaults.fqdn;
    	      this.ip = defaults.ip;
    	      this.ports = defaults.ports;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder dnsNameLabel(@Nullable String dnsNameLabel) {
            this.dnsNameLabel = dnsNameLabel;
            return this;
        }
        @CustomType.Setter
        public Builder fqdn(String fqdn) {
            this.fqdn = Objects.requireNonNull(fqdn);
            return this;
        }
        @CustomType.Setter
        public Builder ip(@Nullable String ip) {
            this.ip = ip;
            return this;
        }
        @CustomType.Setter
        public Builder ports(List<PortResponse> ports) {
            this.ports = Objects.requireNonNull(ports);
            return this;
        }
        public Builder ports(PortResponse... ports) {
            return ports(List.of(ports));
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public IpAddressResponse build() {
            final var o = new IpAddressResponse();
            o.dnsNameLabel = dnsNameLabel;
            o.fqdn = fqdn;
            o.ip = ip;
            o.ports = ports;
            o.type = type;
            return o;
        }
    }
}
