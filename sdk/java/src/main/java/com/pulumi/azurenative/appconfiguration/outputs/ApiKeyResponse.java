// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.appconfiguration.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class ApiKeyResponse {
    /**
     * @return A connection string that can be used by supporting clients for authentication.
     * 
     */
    private String connectionString;
    /**
     * @return The key ID.
     * 
     */
    private String id;
    /**
     * @return The last time any of the key&#39;s properties were modified.
     * 
     */
    private String lastModified;
    /**
     * @return A name for the key describing its usage.
     * 
     */
    private String name;
    /**
     * @return Whether this key can only be used for read operations.
     * 
     */
    private Boolean readOnly;
    /**
     * @return The value of the key that is used for authentication purposes.
     * 
     */
    private String value;

    private ApiKeyResponse() {}
    /**
     * @return A connection string that can be used by supporting clients for authentication.
     * 
     */
    public String connectionString() {
        return this.connectionString;
    }
    /**
     * @return The key ID.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The last time any of the key&#39;s properties were modified.
     * 
     */
    public String lastModified() {
        return this.lastModified;
    }
    /**
     * @return A name for the key describing its usage.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Whether this key can only be used for read operations.
     * 
     */
    public Boolean readOnly() {
        return this.readOnly;
    }
    /**
     * @return The value of the key that is used for authentication purposes.
     * 
     */
    public String value() {
        return this.value;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ApiKeyResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String connectionString;
        private String id;
        private String lastModified;
        private String name;
        private Boolean readOnly;
        private String value;
        public Builder() {}
        public Builder(ApiKeyResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.connectionString = defaults.connectionString;
    	      this.id = defaults.id;
    	      this.lastModified = defaults.lastModified;
    	      this.name = defaults.name;
    	      this.readOnly = defaults.readOnly;
    	      this.value = defaults.value;
        }

        @CustomType.Setter
        public Builder connectionString(String connectionString) {
            this.connectionString = Objects.requireNonNull(connectionString);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder lastModified(String lastModified) {
            this.lastModified = Objects.requireNonNull(lastModified);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder readOnly(Boolean readOnly) {
            this.readOnly = Objects.requireNonNull(readOnly);
            return this;
        }
        @CustomType.Setter
        public Builder value(String value) {
            this.value = Objects.requireNonNull(value);
            return this;
        }
        public ApiKeyResponse build() {
            final var o = new ApiKeyResponse();
            o.connectionString = connectionString;
            o.id = id;
            o.lastModified = lastModified;
            o.name = name;
            o.readOnly = readOnly;
            o.value = value;
            return o;
        }
    }
}
