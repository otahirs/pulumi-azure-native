// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datamigration.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class FileShareResponse {
    /**
     * @return Password credential used to connect to the share location.
     * 
     */
    private @Nullable String password;
    /**
     * @return The folder path for this share.
     * 
     */
    private String path;
    /**
     * @return User name credential to connect to the share location
     * 
     */
    private @Nullable String userName;

    private FileShareResponse() {}
    /**
     * @return Password credential used to connect to the share location.
     * 
     */
    public Optional<String> password() {
        return Optional.ofNullable(this.password);
    }
    /**
     * @return The folder path for this share.
     * 
     */
    public String path() {
        return this.path;
    }
    /**
     * @return User name credential to connect to the share location
     * 
     */
    public Optional<String> userName() {
        return Optional.ofNullable(this.userName);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FileShareResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String password;
        private String path;
        private @Nullable String userName;
        public Builder() {}
        public Builder(FileShareResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.password = defaults.password;
    	      this.path = defaults.path;
    	      this.userName = defaults.userName;
        }

        @CustomType.Setter
        public Builder password(@Nullable String password) {
            this.password = password;
            return this;
        }
        @CustomType.Setter
        public Builder path(String path) {
            this.path = Objects.requireNonNull(path);
            return this;
        }
        @CustomType.Setter
        public Builder userName(@Nullable String userName) {
            this.userName = userName;
            return this;
        }
        public FileShareResponse build() {
            final var o = new FileShareResponse();
            o.password = password;
            o.path = path;
            o.userName = userName;
            return o;
        }
    }
}
