// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.azuredata.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetSqlServerResult {
    /**
     * @return Cores of the Sql Server.
     * 
     */
    private @Nullable Integer cores;
    /**
     * @return Sql Server Edition.
     * 
     */
    private @Nullable String edition;
    /**
     * @return Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    private String id;
    /**
     * @return The name of the resource
     * 
     */
    private String name;
    /**
     * @return Sql Server Json Property Bag.
     * 
     */
    private @Nullable String propertyBag;
    /**
     * @return ID for Parent Sql Server Registration.
     * 
     */
    private @Nullable String registrationID;
    /**
     * @return The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
     * 
     */
    private String type;
    /**
     * @return Version of the Sql Server.
     * 
     */
    private @Nullable String version;

    private GetSqlServerResult() {}
    /**
     * @return Cores of the Sql Server.
     * 
     */
    public Optional<Integer> cores() {
        return Optional.ofNullable(this.cores);
    }
    /**
     * @return Sql Server Edition.
     * 
     */
    public Optional<String> edition() {
        return Optional.ofNullable(this.edition);
    }
    /**
     * @return Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The name of the resource
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Sql Server Json Property Bag.
     * 
     */
    public Optional<String> propertyBag() {
        return Optional.ofNullable(this.propertyBag);
    }
    /**
     * @return ID for Parent Sql Server Registration.
     * 
     */
    public Optional<String> registrationID() {
        return Optional.ofNullable(this.registrationID);
    }
    /**
     * @return The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return Version of the Sql Server.
     * 
     */
    public Optional<String> version() {
        return Optional.ofNullable(this.version);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSqlServerResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer cores;
        private @Nullable String edition;
        private String id;
        private String name;
        private @Nullable String propertyBag;
        private @Nullable String registrationID;
        private String type;
        private @Nullable String version;
        public Builder() {}
        public Builder(GetSqlServerResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cores = defaults.cores;
    	      this.edition = defaults.edition;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.propertyBag = defaults.propertyBag;
    	      this.registrationID = defaults.registrationID;
    	      this.type = defaults.type;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder cores(@Nullable Integer cores) {
            this.cores = cores;
            return this;
        }
        @CustomType.Setter
        public Builder edition(@Nullable String edition) {
            this.edition = edition;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder propertyBag(@Nullable String propertyBag) {
            this.propertyBag = propertyBag;
            return this;
        }
        @CustomType.Setter
        public Builder registrationID(@Nullable String registrationID) {
            this.registrationID = registrationID;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder version(@Nullable String version) {
            this.version = version;
            return this;
        }
        public GetSqlServerResult build() {
            final var o = new GetSqlServerResult();
            o.cores = cores;
            o.edition = edition;
            o.id = id;
            o.name = name;
            o.propertyBag = propertyBag;
            o.registrationID = registrationID;
            o.type = type;
            o.version = version;
            return o;
        }
    }
}
