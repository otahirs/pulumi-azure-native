// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.media.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AudioResponse {
    /**
     * @return The bitrate, in bits per second, of the output encoded audio.
     * 
     */
    private @Nullable Integer bitrate;
    /**
     * @return The number of channels in the audio.
     * 
     */
    private @Nullable Integer channels;
    /**
     * @return An optional label for the codec. The label can be used to control muxing behavior.
     * 
     */
    private @Nullable String label;
    /**
     * @return The discriminator for derived types.
     * Expected value is &#39;#Microsoft.Media.Audio&#39;.
     * 
     */
    private String odataType;
    /**
     * @return The sampling rate to use for encoding in hertz.
     * 
     */
    private @Nullable Integer samplingRate;

    private AudioResponse() {}
    /**
     * @return The bitrate, in bits per second, of the output encoded audio.
     * 
     */
    public Optional<Integer> bitrate() {
        return Optional.ofNullable(this.bitrate);
    }
    /**
     * @return The number of channels in the audio.
     * 
     */
    public Optional<Integer> channels() {
        return Optional.ofNullable(this.channels);
    }
    /**
     * @return An optional label for the codec. The label can be used to control muxing behavior.
     * 
     */
    public Optional<String> label() {
        return Optional.ofNullable(this.label);
    }
    /**
     * @return The discriminator for derived types.
     * Expected value is &#39;#Microsoft.Media.Audio&#39;.
     * 
     */
    public String odataType() {
        return this.odataType;
    }
    /**
     * @return The sampling rate to use for encoding in hertz.
     * 
     */
    public Optional<Integer> samplingRate() {
        return Optional.ofNullable(this.samplingRate);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AudioResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer bitrate;
        private @Nullable Integer channels;
        private @Nullable String label;
        private String odataType;
        private @Nullable Integer samplingRate;
        public Builder() {}
        public Builder(AudioResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bitrate = defaults.bitrate;
    	      this.channels = defaults.channels;
    	      this.label = defaults.label;
    	      this.odataType = defaults.odataType;
    	      this.samplingRate = defaults.samplingRate;
        }

        @CustomType.Setter
        public Builder bitrate(@Nullable Integer bitrate) {
            this.bitrate = bitrate;
            return this;
        }
        @CustomType.Setter
        public Builder channels(@Nullable Integer channels) {
            this.channels = channels;
            return this;
        }
        @CustomType.Setter
        public Builder label(@Nullable String label) {
            this.label = label;
            return this;
        }
        @CustomType.Setter
        public Builder odataType(String odataType) {
            this.odataType = Objects.requireNonNull(odataType);
            return this;
        }
        @CustomType.Setter
        public Builder samplingRate(@Nullable Integer samplingRate) {
            this.samplingRate = samplingRate;
            return this;
        }
        public AudioResponse build() {
            final var o = new AudioResponse();
            o.bitrate = bitrate;
            o.channels = channels;
            o.label = label;
            o.odataType = odataType;
            o.samplingRate = samplingRate;
            return o;
        }
    }
}
