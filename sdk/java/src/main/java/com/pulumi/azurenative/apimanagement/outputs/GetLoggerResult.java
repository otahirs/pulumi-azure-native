// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.apimanagement.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetLoggerResult {
    /**
     * @return The name and SendRule connection string of the event hub for azureEventHub logger.
     * Instrumentation key for applicationInsights logger.
     * 
     */
    private @Nullable Map<String,String> credentials;
    /**
     * @return Logger description.
     * 
     */
    private @Nullable String description;
    /**
     * @return Resource ID.
     * 
     */
    private String id;
    /**
     * @return Whether records are buffered in the logger before publishing. Default is assumed to be true.
     * 
     */
    private @Nullable Boolean isBuffered;
    /**
     * @return Logger type.
     * 
     */
    private String loggerType;
    /**
     * @return Resource name.
     * 
     */
    private String name;
    /**
     * @return Azure Resource Id of a log target (either Azure Event Hub resource or Azure Application Insights resource).
     * 
     */
    private @Nullable String resourceId;
    /**
     * @return Resource type for API Management resource.
     * 
     */
    private String type;

    private GetLoggerResult() {}
    /**
     * @return The name and SendRule connection string of the event hub for azureEventHub logger.
     * Instrumentation key for applicationInsights logger.
     * 
     */
    public Map<String,String> credentials() {
        return this.credentials == null ? Map.of() : this.credentials;
    }
    /**
     * @return Logger description.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return Resource ID.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Whether records are buffered in the logger before publishing. Default is assumed to be true.
     * 
     */
    public Optional<Boolean> isBuffered() {
        return Optional.ofNullable(this.isBuffered);
    }
    /**
     * @return Logger type.
     * 
     */
    public String loggerType() {
        return this.loggerType;
    }
    /**
     * @return Resource name.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Azure Resource Id of a log target (either Azure Event Hub resource or Azure Application Insights resource).
     * 
     */
    public Optional<String> resourceId() {
        return Optional.ofNullable(this.resourceId);
    }
    /**
     * @return Resource type for API Management resource.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLoggerResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Map<String,String> credentials;
        private @Nullable String description;
        private String id;
        private @Nullable Boolean isBuffered;
        private String loggerType;
        private String name;
        private @Nullable String resourceId;
        private String type;
        public Builder() {}
        public Builder(GetLoggerResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.credentials = defaults.credentials;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.isBuffered = defaults.isBuffered;
    	      this.loggerType = defaults.loggerType;
    	      this.name = defaults.name;
    	      this.resourceId = defaults.resourceId;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder credentials(@Nullable Map<String,String> credentials) {
            this.credentials = credentials;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder isBuffered(@Nullable Boolean isBuffered) {
            this.isBuffered = isBuffered;
            return this;
        }
        @CustomType.Setter
        public Builder loggerType(String loggerType) {
            this.loggerType = Objects.requireNonNull(loggerType);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder resourceId(@Nullable String resourceId) {
            this.resourceId = resourceId;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetLoggerResult build() {
            final var o = new GetLoggerResult();
            o.credentials = credentials;
            o.description = description;
            o.id = id;
            o.isBuffered = isBuffered;
            o.loggerType = loggerType;
            o.name = name;
            o.resourceId = resourceId;
            o.type = type;
            return o;
        }
    }
}
