// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.batch.outputs;

import com.pulumi.azurenative.batch.outputs.InboundNatPoolResponse;
import com.pulumi.core.annotations.CustomType;
import java.util.List;
import java.util.Objects;

@CustomType
public final class PoolEndpointConfigurationResponse {
    /**
     * @return The maximum number of inbound NAT pools per Batch pool is 5. If the maximum number of inbound NAT pools is exceeded the request fails with HTTP status code 400. This cannot be specified if the IPAddressProvisioningType is NoPublicIPAddresses.
     * 
     */
    private List<InboundNatPoolResponse> inboundNatPools;

    private PoolEndpointConfigurationResponse() {}
    /**
     * @return The maximum number of inbound NAT pools per Batch pool is 5. If the maximum number of inbound NAT pools is exceeded the request fails with HTTP status code 400. This cannot be specified if the IPAddressProvisioningType is NoPublicIPAddresses.
     * 
     */
    public List<InboundNatPoolResponse> inboundNatPools() {
        return this.inboundNatPools;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PoolEndpointConfigurationResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<InboundNatPoolResponse> inboundNatPools;
        public Builder() {}
        public Builder(PoolEndpointConfigurationResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.inboundNatPools = defaults.inboundNatPools;
        }

        @CustomType.Setter
        public Builder inboundNatPools(List<InboundNatPoolResponse> inboundNatPools) {
            this.inboundNatPools = Objects.requireNonNull(inboundNatPools);
            return this;
        }
        public Builder inboundNatPools(InboundNatPoolResponse... inboundNatPools) {
            return inboundNatPools(List.of(inboundNatPools));
        }
        public PoolEndpointConfigurationResponse build() {
            final var o = new PoolEndpointConfigurationResponse();
            o.inboundNatPools = inboundNatPools;
            return o;
        }
    }
}
