// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.cdn.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PolicySettingsResponse {
    /**
     * @return If the action type is block, customer can override the response body. The body must be specified in base64 encoding.
     * 
     */
    private @Nullable String defaultCustomBlockResponseBody;
    /**
     * @return If the action type is block, this field defines the default customer overridable http response status code.
     * 
     */
    private @Nullable Integer defaultCustomBlockResponseStatusCode;
    /**
     * @return If action type is redirect, this field represents the default redirect URL for the client.
     * 
     */
    private @Nullable String defaultRedirectUrl;
    /**
     * @return describes if the policy is in enabled state or disabled state
     * 
     */
    private @Nullable String enabledState;
    /**
     * @return Describes if it is in detection mode or prevention mode at policy level.
     * 
     */
    private @Nullable String mode;

    private PolicySettingsResponse() {}
    /**
     * @return If the action type is block, customer can override the response body. The body must be specified in base64 encoding.
     * 
     */
    public Optional<String> defaultCustomBlockResponseBody() {
        return Optional.ofNullable(this.defaultCustomBlockResponseBody);
    }
    /**
     * @return If the action type is block, this field defines the default customer overridable http response status code.
     * 
     */
    public Optional<Integer> defaultCustomBlockResponseStatusCode() {
        return Optional.ofNullable(this.defaultCustomBlockResponseStatusCode);
    }
    /**
     * @return If action type is redirect, this field represents the default redirect URL for the client.
     * 
     */
    public Optional<String> defaultRedirectUrl() {
        return Optional.ofNullable(this.defaultRedirectUrl);
    }
    /**
     * @return describes if the policy is in enabled state or disabled state
     * 
     */
    public Optional<String> enabledState() {
        return Optional.ofNullable(this.enabledState);
    }
    /**
     * @return Describes if it is in detection mode or prevention mode at policy level.
     * 
     */
    public Optional<String> mode() {
        return Optional.ofNullable(this.mode);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PolicySettingsResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String defaultCustomBlockResponseBody;
        private @Nullable Integer defaultCustomBlockResponseStatusCode;
        private @Nullable String defaultRedirectUrl;
        private @Nullable String enabledState;
        private @Nullable String mode;
        public Builder() {}
        public Builder(PolicySettingsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.defaultCustomBlockResponseBody = defaults.defaultCustomBlockResponseBody;
    	      this.defaultCustomBlockResponseStatusCode = defaults.defaultCustomBlockResponseStatusCode;
    	      this.defaultRedirectUrl = defaults.defaultRedirectUrl;
    	      this.enabledState = defaults.enabledState;
    	      this.mode = defaults.mode;
        }

        @CustomType.Setter
        public Builder defaultCustomBlockResponseBody(@Nullable String defaultCustomBlockResponseBody) {
            this.defaultCustomBlockResponseBody = defaultCustomBlockResponseBody;
            return this;
        }
        @CustomType.Setter
        public Builder defaultCustomBlockResponseStatusCode(@Nullable Integer defaultCustomBlockResponseStatusCode) {
            this.defaultCustomBlockResponseStatusCode = defaultCustomBlockResponseStatusCode;
            return this;
        }
        @CustomType.Setter
        public Builder defaultRedirectUrl(@Nullable String defaultRedirectUrl) {
            this.defaultRedirectUrl = defaultRedirectUrl;
            return this;
        }
        @CustomType.Setter
        public Builder enabledState(@Nullable String enabledState) {
            this.enabledState = enabledState;
            return this;
        }
        @CustomType.Setter
        public Builder mode(@Nullable String mode) {
            this.mode = mode;
            return this;
        }
        public PolicySettingsResponse build() {
            final var o = new PolicySettingsResponse();
            o.defaultCustomBlockResponseBody = defaultCustomBlockResponseBody;
            o.defaultCustomBlockResponseStatusCode = defaultCustomBlockResponseStatusCode;
            o.defaultRedirectUrl = defaultRedirectUrl;
            o.enabledState = enabledState;
            o.mode = mode;
            return o;
        }
    }
}
