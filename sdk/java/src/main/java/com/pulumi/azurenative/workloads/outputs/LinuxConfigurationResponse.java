// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.workloads.outputs;

import com.pulumi.azurenative.workloads.outputs.SshConfigurationResponse;
import com.pulumi.azurenative.workloads.outputs.SshKeyPairResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class LinuxConfigurationResponse {
    /**
     * @return Specifies whether password authentication should be disabled.
     * 
     */
    private @Nullable Boolean disablePasswordAuthentication;
    /**
     * @return The OS Type
     * Expected value is &#39;Linux&#39;.
     * 
     */
    private String osType;
    /**
     * @return Specifies the ssh key configuration for a Linux OS. (This property is deprecated, please use &#39;sshKeyPair&#39; instead)
     * 
     */
    private @Nullable SshConfigurationResponse ssh;
    /**
     * @return The SSH Key-pair used to authenticate with the VM&#39;s.
     * 
     */
    private @Nullable SshKeyPairResponse sshKeyPair;

    private LinuxConfigurationResponse() {}
    /**
     * @return Specifies whether password authentication should be disabled.
     * 
     */
    public Optional<Boolean> disablePasswordAuthentication() {
        return Optional.ofNullable(this.disablePasswordAuthentication);
    }
    /**
     * @return The OS Type
     * Expected value is &#39;Linux&#39;.
     * 
     */
    public String osType() {
        return this.osType;
    }
    /**
     * @return Specifies the ssh key configuration for a Linux OS. (This property is deprecated, please use &#39;sshKeyPair&#39; instead)
     * 
     */
    public Optional<SshConfigurationResponse> ssh() {
        return Optional.ofNullable(this.ssh);
    }
    /**
     * @return The SSH Key-pair used to authenticate with the VM&#39;s.
     * 
     */
    public Optional<SshKeyPairResponse> sshKeyPair() {
        return Optional.ofNullable(this.sshKeyPair);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LinuxConfigurationResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean disablePasswordAuthentication;
        private String osType;
        private @Nullable SshConfigurationResponse ssh;
        private @Nullable SshKeyPairResponse sshKeyPair;
        public Builder() {}
        public Builder(LinuxConfigurationResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.disablePasswordAuthentication = defaults.disablePasswordAuthentication;
    	      this.osType = defaults.osType;
    	      this.ssh = defaults.ssh;
    	      this.sshKeyPair = defaults.sshKeyPair;
        }

        @CustomType.Setter
        public Builder disablePasswordAuthentication(@Nullable Boolean disablePasswordAuthentication) {
            this.disablePasswordAuthentication = disablePasswordAuthentication;
            return this;
        }
        @CustomType.Setter
        public Builder osType(String osType) {
            this.osType = Objects.requireNonNull(osType);
            return this;
        }
        @CustomType.Setter
        public Builder ssh(@Nullable SshConfigurationResponse ssh) {
            this.ssh = ssh;
            return this;
        }
        @CustomType.Setter
        public Builder sshKeyPair(@Nullable SshKeyPairResponse sshKeyPair) {
            this.sshKeyPair = sshKeyPair;
            return this;
        }
        public LinuxConfigurationResponse build() {
            final var o = new LinuxConfigurationResponse();
            o.disablePasswordAuthentication = disablePasswordAuthentication;
            o.osType = osType;
            o.ssh = ssh;
            o.sshKeyPair = sshKeyPair;
            return o;
        }
    }
}
