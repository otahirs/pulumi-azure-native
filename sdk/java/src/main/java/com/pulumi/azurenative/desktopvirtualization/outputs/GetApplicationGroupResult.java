// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.desktopvirtualization.outputs;

import com.pulumi.azurenative.desktopvirtualization.outputs.MigrationRequestPropertiesResponse;
import com.pulumi.azurenative.desktopvirtualization.outputs.ResourceModelWithAllowedPropertySetResponseIdentity;
import com.pulumi.azurenative.desktopvirtualization.outputs.ResourceModelWithAllowedPropertySetResponsePlan;
import com.pulumi.azurenative.desktopvirtualization.outputs.ResourceModelWithAllowedPropertySetResponseSku;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetApplicationGroupResult {
    /**
     * @return Resource Type of ApplicationGroup.
     * 
     */
    private String applicationGroupType;
    /**
     * @return Is cloud pc resource.
     * 
     */
    private Boolean cloudPcResource;
    /**
     * @return Description of ApplicationGroup.
     * 
     */
    private @Nullable String description;
    /**
     * @return The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.
     * 
     */
    private String etag;
    /**
     * @return Friendly name of ApplicationGroup.
     * 
     */
    private @Nullable String friendlyName;
    /**
     * @return HostPool arm path of ApplicationGroup.
     * 
     */
    private String hostPoolArmPath;
    /**
     * @return Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    private String id;
    private @Nullable ResourceModelWithAllowedPropertySetResponseIdentity identity;
    /**
     * @return Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
     * 
     */
    private @Nullable String kind;
    /**
     * @return The geo-location where the resource lives
     * 
     */
    private @Nullable String location;
    /**
     * @return The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
     * 
     */
    private @Nullable String managedBy;
    /**
     * @return The registration info of HostPool.
     * 
     */
    private @Nullable MigrationRequestPropertiesResponse migrationRequest;
    /**
     * @return The name of the resource
     * 
     */
    private String name;
    /**
     * @return ObjectId of ApplicationGroup. (internal use)
     * 
     */
    private String objectId;
    private @Nullable ResourceModelWithAllowedPropertySetResponsePlan plan;
    private @Nullable ResourceModelWithAllowedPropertySetResponseSku sku;
    /**
     * @return Resource tags.
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    private String type;
    /**
     * @return Workspace arm path of ApplicationGroup.
     * 
     */
    private String workspaceArmPath;

    private GetApplicationGroupResult() {}
    /**
     * @return Resource Type of ApplicationGroup.
     * 
     */
    public String applicationGroupType() {
        return this.applicationGroupType;
    }
    /**
     * @return Is cloud pc resource.
     * 
     */
    public Boolean cloudPcResource() {
        return this.cloudPcResource;
    }
    /**
     * @return Description of ApplicationGroup.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.
     * 
     */
    public String etag() {
        return this.etag;
    }
    /**
     * @return Friendly name of ApplicationGroup.
     * 
     */
    public Optional<String> friendlyName() {
        return Optional.ofNullable(this.friendlyName);
    }
    /**
     * @return HostPool arm path of ApplicationGroup.
     * 
     */
    public String hostPoolArmPath() {
        return this.hostPoolArmPath;
    }
    /**
     * @return Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<ResourceModelWithAllowedPropertySetResponseIdentity> identity() {
        return Optional.ofNullable(this.identity);
    }
    /**
     * @return Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
     * 
     */
    public Optional<String> kind() {
        return Optional.ofNullable(this.kind);
    }
    /**
     * @return The geo-location where the resource lives
     * 
     */
    public Optional<String> location() {
        return Optional.ofNullable(this.location);
    }
    /**
     * @return The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
     * 
     */
    public Optional<String> managedBy() {
        return Optional.ofNullable(this.managedBy);
    }
    /**
     * @return The registration info of HostPool.
     * 
     */
    public Optional<MigrationRequestPropertiesResponse> migrationRequest() {
        return Optional.ofNullable(this.migrationRequest);
    }
    /**
     * @return The name of the resource
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return ObjectId of ApplicationGroup. (internal use)
     * 
     */
    public String objectId() {
        return this.objectId;
    }
    public Optional<ResourceModelWithAllowedPropertySetResponsePlan> plan() {
        return Optional.ofNullable(this.plan);
    }
    public Optional<ResourceModelWithAllowedPropertySetResponseSku> sku() {
        return Optional.ofNullable(this.sku);
    }
    /**
     * @return Resource tags.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return Workspace arm path of ApplicationGroup.
     * 
     */
    public String workspaceArmPath() {
        return this.workspaceArmPath;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetApplicationGroupResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String applicationGroupType;
        private Boolean cloudPcResource;
        private @Nullable String description;
        private String etag;
        private @Nullable String friendlyName;
        private String hostPoolArmPath;
        private String id;
        private @Nullable ResourceModelWithAllowedPropertySetResponseIdentity identity;
        private @Nullable String kind;
        private @Nullable String location;
        private @Nullable String managedBy;
        private @Nullable MigrationRequestPropertiesResponse migrationRequest;
        private String name;
        private String objectId;
        private @Nullable ResourceModelWithAllowedPropertySetResponsePlan plan;
        private @Nullable ResourceModelWithAllowedPropertySetResponseSku sku;
        private @Nullable Map<String,String> tags;
        private String type;
        private String workspaceArmPath;
        public Builder() {}
        public Builder(GetApplicationGroupResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationGroupType = defaults.applicationGroupType;
    	      this.cloudPcResource = defaults.cloudPcResource;
    	      this.description = defaults.description;
    	      this.etag = defaults.etag;
    	      this.friendlyName = defaults.friendlyName;
    	      this.hostPoolArmPath = defaults.hostPoolArmPath;
    	      this.id = defaults.id;
    	      this.identity = defaults.identity;
    	      this.kind = defaults.kind;
    	      this.location = defaults.location;
    	      this.managedBy = defaults.managedBy;
    	      this.migrationRequest = defaults.migrationRequest;
    	      this.name = defaults.name;
    	      this.objectId = defaults.objectId;
    	      this.plan = defaults.plan;
    	      this.sku = defaults.sku;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
    	      this.workspaceArmPath = defaults.workspaceArmPath;
        }

        @CustomType.Setter
        public Builder applicationGroupType(String applicationGroupType) {
            this.applicationGroupType = Objects.requireNonNull(applicationGroupType);
            return this;
        }
        @CustomType.Setter
        public Builder cloudPcResource(Boolean cloudPcResource) {
            this.cloudPcResource = Objects.requireNonNull(cloudPcResource);
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder etag(String etag) {
            this.etag = Objects.requireNonNull(etag);
            return this;
        }
        @CustomType.Setter
        public Builder friendlyName(@Nullable String friendlyName) {
            this.friendlyName = friendlyName;
            return this;
        }
        @CustomType.Setter
        public Builder hostPoolArmPath(String hostPoolArmPath) {
            this.hostPoolArmPath = Objects.requireNonNull(hostPoolArmPath);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder identity(@Nullable ResourceModelWithAllowedPropertySetResponseIdentity identity) {
            this.identity = identity;
            return this;
        }
        @CustomType.Setter
        public Builder kind(@Nullable String kind) {
            this.kind = kind;
            return this;
        }
        @CustomType.Setter
        public Builder location(@Nullable String location) {
            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder managedBy(@Nullable String managedBy) {
            this.managedBy = managedBy;
            return this;
        }
        @CustomType.Setter
        public Builder migrationRequest(@Nullable MigrationRequestPropertiesResponse migrationRequest) {
            this.migrationRequest = migrationRequest;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder objectId(String objectId) {
            this.objectId = Objects.requireNonNull(objectId);
            return this;
        }
        @CustomType.Setter
        public Builder plan(@Nullable ResourceModelWithAllowedPropertySetResponsePlan plan) {
            this.plan = plan;
            return this;
        }
        @CustomType.Setter
        public Builder sku(@Nullable ResourceModelWithAllowedPropertySetResponseSku sku) {
            this.sku = sku;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder workspaceArmPath(String workspaceArmPath) {
            this.workspaceArmPath = Objects.requireNonNull(workspaceArmPath);
            return this;
        }
        public GetApplicationGroupResult build() {
            final var o = new GetApplicationGroupResult();
            o.applicationGroupType = applicationGroupType;
            o.cloudPcResource = cloudPcResource;
            o.description = description;
            o.etag = etag;
            o.friendlyName = friendlyName;
            o.hostPoolArmPath = hostPoolArmPath;
            o.id = id;
            o.identity = identity;
            o.kind = kind;
            o.location = location;
            o.managedBy = managedBy;
            o.migrationRequest = migrationRequest;
            o.name = name;
            o.objectId = objectId;
            o.plan = plan;
            o.sku = sku;
            o.tags = tags;
            o.type = type;
            o.workspaceArmPath = workspaceArmPath;
            return o;
        }
    }
}
