// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.documentdb.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetSqlResourceSqlRoleAssignmentResult {
    /**
     * @return The unique resource identifier of the database account.
     * 
     */
    private String id;
    /**
     * @return The name of the database account.
     * 
     */
    private String name;
    /**
     * @return The unique identifier for the associated AAD principal in the AAD graph to which access is being granted through this Role Assignment. Tenant ID for the principal is inferred using the tenant associated with the subscription.
     * 
     */
    private @Nullable String principalId;
    /**
     * @return The unique identifier for the associated Role Definition.
     * 
     */
    private @Nullable String roleDefinitionId;
    /**
     * @return The data plane resource path for which access is being granted through this Role Assignment.
     * 
     */
    private @Nullable String scope;
    /**
     * @return The type of Azure resource.
     * 
     */
    private String type;

    private GetSqlResourceSqlRoleAssignmentResult() {}
    /**
     * @return The unique resource identifier of the database account.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The name of the database account.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The unique identifier for the associated AAD principal in the AAD graph to which access is being granted through this Role Assignment. Tenant ID for the principal is inferred using the tenant associated with the subscription.
     * 
     */
    public Optional<String> principalId() {
        return Optional.ofNullable(this.principalId);
    }
    /**
     * @return The unique identifier for the associated Role Definition.
     * 
     */
    public Optional<String> roleDefinitionId() {
        return Optional.ofNullable(this.roleDefinitionId);
    }
    /**
     * @return The data plane resource path for which access is being granted through this Role Assignment.
     * 
     */
    public Optional<String> scope() {
        return Optional.ofNullable(this.scope);
    }
    /**
     * @return The type of Azure resource.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSqlResourceSqlRoleAssignmentResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private String name;
        private @Nullable String principalId;
        private @Nullable String roleDefinitionId;
        private @Nullable String scope;
        private String type;
        public Builder() {}
        public Builder(GetSqlResourceSqlRoleAssignmentResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.principalId = defaults.principalId;
    	      this.roleDefinitionId = defaults.roleDefinitionId;
    	      this.scope = defaults.scope;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder principalId(@Nullable String principalId) {
            this.principalId = principalId;
            return this;
        }
        @CustomType.Setter
        public Builder roleDefinitionId(@Nullable String roleDefinitionId) {
            this.roleDefinitionId = roleDefinitionId;
            return this;
        }
        @CustomType.Setter
        public Builder scope(@Nullable String scope) {
            this.scope = scope;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetSqlResourceSqlRoleAssignmentResult build() {
            final var o = new GetSqlResourceSqlRoleAssignmentResult();
            o.id = id;
            o.name = name;
            o.principalId = principalId;
            o.roleDefinitionId = roleDefinitionId;
            o.scope = scope;
            o.type = type;
            return o;
        }
    }
}
