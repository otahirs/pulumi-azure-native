// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.servicefabricmesh.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DiagnosticsRefResponse {
    /**
     * @return Status of whether or not sinks are enabled.
     * 
     */
    private @Nullable Boolean enabled;
    /**
     * @return List of sinks to be used if enabled. References the list of sinks in DiagnosticsDescription.
     * 
     */
    private @Nullable List<String> sinkRefs;

    private DiagnosticsRefResponse() {}
    /**
     * @return Status of whether or not sinks are enabled.
     * 
     */
    public Optional<Boolean> enabled() {
        return Optional.ofNullable(this.enabled);
    }
    /**
     * @return List of sinks to be used if enabled. References the list of sinks in DiagnosticsDescription.
     * 
     */
    public List<String> sinkRefs() {
        return this.sinkRefs == null ? List.of() : this.sinkRefs;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DiagnosticsRefResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean enabled;
        private @Nullable List<String> sinkRefs;
        public Builder() {}
        public Builder(DiagnosticsRefResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enabled = defaults.enabled;
    	      this.sinkRefs = defaults.sinkRefs;
        }

        @CustomType.Setter
        public Builder enabled(@Nullable Boolean enabled) {
            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder sinkRefs(@Nullable List<String> sinkRefs) {
            this.sinkRefs = sinkRefs;
            return this;
        }
        public Builder sinkRefs(String... sinkRefs) {
            return sinkRefs(List.of(sinkRefs));
        }
        public DiagnosticsRefResponse build() {
            final var o = new DiagnosticsRefResponse();
            o.enabled = enabled;
            o.sinkRefs = sinkRefs;
            return o;
        }
    }
}
