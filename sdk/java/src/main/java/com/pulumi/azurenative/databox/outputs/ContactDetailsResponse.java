// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.databox.outputs;

import com.pulumi.azurenative.databox.outputs.NotificationPreferenceResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ContactDetailsResponse {
    /**
     * @return Contact name of the person.
     * 
     */
    private String contactName;
    /**
     * @return List of Email-ids to be notified about job progress.
     * 
     */
    private List<String> emailList;
    /**
     * @return Mobile number of the contact person.
     * 
     */
    private @Nullable String mobile;
    /**
     * @return Notification preference for a job stage.
     * 
     */
    private @Nullable List<NotificationPreferenceResponse> notificationPreference;
    /**
     * @return Phone number of the contact person.
     * 
     */
    private String phone;
    /**
     * @return Phone extension number of the contact person.
     * 
     */
    private @Nullable String phoneExtension;

    private ContactDetailsResponse() {}
    /**
     * @return Contact name of the person.
     * 
     */
    public String contactName() {
        return this.contactName;
    }
    /**
     * @return List of Email-ids to be notified about job progress.
     * 
     */
    public List<String> emailList() {
        return this.emailList;
    }
    /**
     * @return Mobile number of the contact person.
     * 
     */
    public Optional<String> mobile() {
        return Optional.ofNullable(this.mobile);
    }
    /**
     * @return Notification preference for a job stage.
     * 
     */
    public List<NotificationPreferenceResponse> notificationPreference() {
        return this.notificationPreference == null ? List.of() : this.notificationPreference;
    }
    /**
     * @return Phone number of the contact person.
     * 
     */
    public String phone() {
        return this.phone;
    }
    /**
     * @return Phone extension number of the contact person.
     * 
     */
    public Optional<String> phoneExtension() {
        return Optional.ofNullable(this.phoneExtension);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ContactDetailsResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String contactName;
        private List<String> emailList;
        private @Nullable String mobile;
        private @Nullable List<NotificationPreferenceResponse> notificationPreference;
        private String phone;
        private @Nullable String phoneExtension;
        public Builder() {}
        public Builder(ContactDetailsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.contactName = defaults.contactName;
    	      this.emailList = defaults.emailList;
    	      this.mobile = defaults.mobile;
    	      this.notificationPreference = defaults.notificationPreference;
    	      this.phone = defaults.phone;
    	      this.phoneExtension = defaults.phoneExtension;
        }

        @CustomType.Setter
        public Builder contactName(String contactName) {
            this.contactName = Objects.requireNonNull(contactName);
            return this;
        }
        @CustomType.Setter
        public Builder emailList(List<String> emailList) {
            this.emailList = Objects.requireNonNull(emailList);
            return this;
        }
        public Builder emailList(String... emailList) {
            return emailList(List.of(emailList));
        }
        @CustomType.Setter
        public Builder mobile(@Nullable String mobile) {
            this.mobile = mobile;
            return this;
        }
        @CustomType.Setter
        public Builder notificationPreference(@Nullable List<NotificationPreferenceResponse> notificationPreference) {
            this.notificationPreference = notificationPreference;
            return this;
        }
        public Builder notificationPreference(NotificationPreferenceResponse... notificationPreference) {
            return notificationPreference(List.of(notificationPreference));
        }
        @CustomType.Setter
        public Builder phone(String phone) {
            this.phone = Objects.requireNonNull(phone);
            return this;
        }
        @CustomType.Setter
        public Builder phoneExtension(@Nullable String phoneExtension) {
            this.phoneExtension = phoneExtension;
            return this;
        }
        public ContactDetailsResponse build() {
            final var o = new ContactDetailsResponse();
            o.contactName = contactName;
            o.emailList = emailList;
            o.mobile = mobile;
            o.notificationPreference = notificationPreference;
            o.phone = phone;
            o.phoneExtension = phoneExtension;
            return o;
        }
    }
}
