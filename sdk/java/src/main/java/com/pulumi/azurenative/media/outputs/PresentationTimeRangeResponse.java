// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.media.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Double;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PresentationTimeRangeResponse {
    /**
     * @return The absolute end time boundary.
     * 
     */
    private @Nullable Double endTimestamp;
    /**
     * @return The indicator of forcing existing of end time stamp.
     * 
     */
    private @Nullable Boolean forceEndTimestamp;
    /**
     * @return The relative to end right edge.
     * 
     */
    private @Nullable Double liveBackoffDuration;
    /**
     * @return The relative to end sliding window.
     * 
     */
    private @Nullable Double presentationWindowDuration;
    /**
     * @return The absolute start time boundary.
     * 
     */
    private @Nullable Double startTimestamp;
    /**
     * @return The time scale of time stamps.
     * 
     */
    private @Nullable Double timescale;

    private PresentationTimeRangeResponse() {}
    /**
     * @return The absolute end time boundary.
     * 
     */
    public Optional<Double> endTimestamp() {
        return Optional.ofNullable(this.endTimestamp);
    }
    /**
     * @return The indicator of forcing existing of end time stamp.
     * 
     */
    public Optional<Boolean> forceEndTimestamp() {
        return Optional.ofNullable(this.forceEndTimestamp);
    }
    /**
     * @return The relative to end right edge.
     * 
     */
    public Optional<Double> liveBackoffDuration() {
        return Optional.ofNullable(this.liveBackoffDuration);
    }
    /**
     * @return The relative to end sliding window.
     * 
     */
    public Optional<Double> presentationWindowDuration() {
        return Optional.ofNullable(this.presentationWindowDuration);
    }
    /**
     * @return The absolute start time boundary.
     * 
     */
    public Optional<Double> startTimestamp() {
        return Optional.ofNullable(this.startTimestamp);
    }
    /**
     * @return The time scale of time stamps.
     * 
     */
    public Optional<Double> timescale() {
        return Optional.ofNullable(this.timescale);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PresentationTimeRangeResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Double endTimestamp;
        private @Nullable Boolean forceEndTimestamp;
        private @Nullable Double liveBackoffDuration;
        private @Nullable Double presentationWindowDuration;
        private @Nullable Double startTimestamp;
        private @Nullable Double timescale;
        public Builder() {}
        public Builder(PresentationTimeRangeResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.endTimestamp = defaults.endTimestamp;
    	      this.forceEndTimestamp = defaults.forceEndTimestamp;
    	      this.liveBackoffDuration = defaults.liveBackoffDuration;
    	      this.presentationWindowDuration = defaults.presentationWindowDuration;
    	      this.startTimestamp = defaults.startTimestamp;
    	      this.timescale = defaults.timescale;
        }

        @CustomType.Setter
        public Builder endTimestamp(@Nullable Double endTimestamp) {
            this.endTimestamp = endTimestamp;
            return this;
        }
        @CustomType.Setter
        public Builder forceEndTimestamp(@Nullable Boolean forceEndTimestamp) {
            this.forceEndTimestamp = forceEndTimestamp;
            return this;
        }
        @CustomType.Setter
        public Builder liveBackoffDuration(@Nullable Double liveBackoffDuration) {
            this.liveBackoffDuration = liveBackoffDuration;
            return this;
        }
        @CustomType.Setter
        public Builder presentationWindowDuration(@Nullable Double presentationWindowDuration) {
            this.presentationWindowDuration = presentationWindowDuration;
            return this;
        }
        @CustomType.Setter
        public Builder startTimestamp(@Nullable Double startTimestamp) {
            this.startTimestamp = startTimestamp;
            return this;
        }
        @CustomType.Setter
        public Builder timescale(@Nullable Double timescale) {
            this.timescale = timescale;
            return this;
        }
        public PresentationTimeRangeResponse build() {
            final var o = new PresentationTimeRangeResponse();
            o.endTimestamp = endTimestamp;
            o.forceEndTimestamp = forceEndTimestamp;
            o.liveBackoffDuration = liveBackoffDuration;
            o.presentationWindowDuration = presentationWindowDuration;
            o.startTimestamp = startTimestamp;
            o.timescale = timescale;
            return o;
        }
    }
}
