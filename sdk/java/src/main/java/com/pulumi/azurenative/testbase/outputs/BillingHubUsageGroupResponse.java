// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.testbase.outputs;

import com.pulumi.azurenative.testbase.outputs.BillingHubExecutionUsageDetailResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class BillingHubUsageGroupResponse {
    private @Nullable List<BillingHubExecutionUsageDetailResponse> executionUsageDetails;
    private @Nullable String osBuild;
    private @Nullable String productFamily;
    private @Nullable String release;
    private @Nullable String releaseBuildDate;
    private @Nullable Double releaseBuildNumber;
    private @Nullable Double releaseBuildRevision;
    private @Nullable String testType;
    private @Nullable Double totalCharges;
    private @Nullable Double totalUsedBillableHours;
    private @Nullable Double totalUsedFreeHours;

    private BillingHubUsageGroupResponse() {}
    public List<BillingHubExecutionUsageDetailResponse> executionUsageDetails() {
        return this.executionUsageDetails == null ? List.of() : this.executionUsageDetails;
    }
    public Optional<String> osBuild() {
        return Optional.ofNullable(this.osBuild);
    }
    public Optional<String> productFamily() {
        return Optional.ofNullable(this.productFamily);
    }
    public Optional<String> release() {
        return Optional.ofNullable(this.release);
    }
    public Optional<String> releaseBuildDate() {
        return Optional.ofNullable(this.releaseBuildDate);
    }
    public Optional<Double> releaseBuildNumber() {
        return Optional.ofNullable(this.releaseBuildNumber);
    }
    public Optional<Double> releaseBuildRevision() {
        return Optional.ofNullable(this.releaseBuildRevision);
    }
    public Optional<String> testType() {
        return Optional.ofNullable(this.testType);
    }
    public Optional<Double> totalCharges() {
        return Optional.ofNullable(this.totalCharges);
    }
    public Optional<Double> totalUsedBillableHours() {
        return Optional.ofNullable(this.totalUsedBillableHours);
    }
    public Optional<Double> totalUsedFreeHours() {
        return Optional.ofNullable(this.totalUsedFreeHours);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BillingHubUsageGroupResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<BillingHubExecutionUsageDetailResponse> executionUsageDetails;
        private @Nullable String osBuild;
        private @Nullable String productFamily;
        private @Nullable String release;
        private @Nullable String releaseBuildDate;
        private @Nullable Double releaseBuildNumber;
        private @Nullable Double releaseBuildRevision;
        private @Nullable String testType;
        private @Nullable Double totalCharges;
        private @Nullable Double totalUsedBillableHours;
        private @Nullable Double totalUsedFreeHours;
        public Builder() {}
        public Builder(BillingHubUsageGroupResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.executionUsageDetails = defaults.executionUsageDetails;
    	      this.osBuild = defaults.osBuild;
    	      this.productFamily = defaults.productFamily;
    	      this.release = defaults.release;
    	      this.releaseBuildDate = defaults.releaseBuildDate;
    	      this.releaseBuildNumber = defaults.releaseBuildNumber;
    	      this.releaseBuildRevision = defaults.releaseBuildRevision;
    	      this.testType = defaults.testType;
    	      this.totalCharges = defaults.totalCharges;
    	      this.totalUsedBillableHours = defaults.totalUsedBillableHours;
    	      this.totalUsedFreeHours = defaults.totalUsedFreeHours;
        }

        @CustomType.Setter
        public Builder executionUsageDetails(@Nullable List<BillingHubExecutionUsageDetailResponse> executionUsageDetails) {
            this.executionUsageDetails = executionUsageDetails;
            return this;
        }
        public Builder executionUsageDetails(BillingHubExecutionUsageDetailResponse... executionUsageDetails) {
            return executionUsageDetails(List.of(executionUsageDetails));
        }
        @CustomType.Setter
        public Builder osBuild(@Nullable String osBuild) {
            this.osBuild = osBuild;
            return this;
        }
        @CustomType.Setter
        public Builder productFamily(@Nullable String productFamily) {
            this.productFamily = productFamily;
            return this;
        }
        @CustomType.Setter
        public Builder release(@Nullable String release) {
            this.release = release;
            return this;
        }
        @CustomType.Setter
        public Builder releaseBuildDate(@Nullable String releaseBuildDate) {
            this.releaseBuildDate = releaseBuildDate;
            return this;
        }
        @CustomType.Setter
        public Builder releaseBuildNumber(@Nullable Double releaseBuildNumber) {
            this.releaseBuildNumber = releaseBuildNumber;
            return this;
        }
        @CustomType.Setter
        public Builder releaseBuildRevision(@Nullable Double releaseBuildRevision) {
            this.releaseBuildRevision = releaseBuildRevision;
            return this;
        }
        @CustomType.Setter
        public Builder testType(@Nullable String testType) {
            this.testType = testType;
            return this;
        }
        @CustomType.Setter
        public Builder totalCharges(@Nullable Double totalCharges) {
            this.totalCharges = totalCharges;
            return this;
        }
        @CustomType.Setter
        public Builder totalUsedBillableHours(@Nullable Double totalUsedBillableHours) {
            this.totalUsedBillableHours = totalUsedBillableHours;
            return this;
        }
        @CustomType.Setter
        public Builder totalUsedFreeHours(@Nullable Double totalUsedFreeHours) {
            this.totalUsedFreeHours = totalUsedFreeHours;
            return this;
        }
        public BillingHubUsageGroupResponse build() {
            final var o = new BillingHubUsageGroupResponse();
            o.executionUsageDetails = executionUsageDetails;
            o.osBuild = osBuild;
            o.productFamily = productFamily;
            o.release = release;
            o.releaseBuildDate = releaseBuildDate;
            o.releaseBuildNumber = releaseBuildNumber;
            o.releaseBuildRevision = releaseBuildRevision;
            o.testType = testType;
            o.totalCharges = totalCharges;
            o.totalUsedBillableHours = totalUsedBillableHours;
            o.totalUsedFreeHours = totalUsedFreeHours;
            return o;
        }
    }
}
