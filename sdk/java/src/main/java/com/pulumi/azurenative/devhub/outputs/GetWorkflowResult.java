// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.devhub.outputs;

import com.pulumi.azurenative.devhub.outputs.ACRResponse;
import com.pulumi.azurenative.devhub.outputs.DeploymentPropertiesResponse;
import com.pulumi.azurenative.devhub.outputs.GitHubWorkflowProfileResponseOidcCredentials;
import com.pulumi.azurenative.devhub.outputs.SystemDataResponse;
import com.pulumi.azurenative.devhub.outputs.WorkflowRunResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetWorkflowResult {
    /**
     * @return Information on the azure container registry
     * 
     */
    private @Nullable ACRResponse acr;
    /**
     * @return The Azure Kubernetes Cluster Resource the application will be deployed to.
     * 
     */
    private @Nullable String aksResourceId;
    /**
     * @return Determines the authorization status of requests.
     * 
     */
    private String authStatus;
    /**
     * @return Repository Branch Name
     * 
     */
    private @Nullable String branchName;
    private @Nullable DeploymentPropertiesResponse deploymentProperties;
    /**
     * @return Path to Dockerfile Build Context within the repository.
     * 
     */
    private @Nullable String dockerBuildContext;
    /**
     * @return Path to the Dockerfile within the repository.
     * 
     */
    private @Nullable String dockerfile;
    /**
     * @return Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    private String id;
    private @Nullable WorkflowRunResponse lastWorkflowRun;
    /**
     * @return The geo-location where the resource lives
     * 
     */
    private String location;
    /**
     * @return The name of the resource
     * 
     */
    private String name;
    /**
     * @return Kubernetes namespace the application is deployed to.
     * 
     */
    private @Nullable String namespace;
    /**
     * @return The fields needed for OIDC with GitHub.
     * 
     */
    private @Nullable GitHubWorkflowProfileResponseOidcCredentials oidcCredentials;
    /**
     * @return The status of the Pull Request submitted against the users repository.
     * 
     */
    private String prStatus;
    /**
     * @return The URL to the Pull Request submitted against the users repository.
     * 
     */
    private String prURL;
    /**
     * @return The number associated with the submitted pull request.
     * 
     */
    private Integer pullNumber;
    /**
     * @return Repository Name
     * 
     */
    private @Nullable String repositoryName;
    /**
     * @return Repository Owner
     * 
     */
    private @Nullable String repositoryOwner;
    /**
     * @return Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     */
    private SystemDataResponse systemData;
    /**
     * @return Resource tags.
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    private String type;

    private GetWorkflowResult() {}
    /**
     * @return Information on the azure container registry
     * 
     */
    public Optional<ACRResponse> acr() {
        return Optional.ofNullable(this.acr);
    }
    /**
     * @return The Azure Kubernetes Cluster Resource the application will be deployed to.
     * 
     */
    public Optional<String> aksResourceId() {
        return Optional.ofNullable(this.aksResourceId);
    }
    /**
     * @return Determines the authorization status of requests.
     * 
     */
    public String authStatus() {
        return this.authStatus;
    }
    /**
     * @return Repository Branch Name
     * 
     */
    public Optional<String> branchName() {
        return Optional.ofNullable(this.branchName);
    }
    public Optional<DeploymentPropertiesResponse> deploymentProperties() {
        return Optional.ofNullable(this.deploymentProperties);
    }
    /**
     * @return Path to Dockerfile Build Context within the repository.
     * 
     */
    public Optional<String> dockerBuildContext() {
        return Optional.ofNullable(this.dockerBuildContext);
    }
    /**
     * @return Path to the Dockerfile within the repository.
     * 
     */
    public Optional<String> dockerfile() {
        return Optional.ofNullable(this.dockerfile);
    }
    /**
     * @return Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<WorkflowRunResponse> lastWorkflowRun() {
        return Optional.ofNullable(this.lastWorkflowRun);
    }
    /**
     * @return The geo-location where the resource lives
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return The name of the resource
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Kubernetes namespace the application is deployed to.
     * 
     */
    public Optional<String> namespace() {
        return Optional.ofNullable(this.namespace);
    }
    /**
     * @return The fields needed for OIDC with GitHub.
     * 
     */
    public Optional<GitHubWorkflowProfileResponseOidcCredentials> oidcCredentials() {
        return Optional.ofNullable(this.oidcCredentials);
    }
    /**
     * @return The status of the Pull Request submitted against the users repository.
     * 
     */
    public String prStatus() {
        return this.prStatus;
    }
    /**
     * @return The URL to the Pull Request submitted against the users repository.
     * 
     */
    public String prURL() {
        return this.prURL;
    }
    /**
     * @return The number associated with the submitted pull request.
     * 
     */
    public Integer pullNumber() {
        return this.pullNumber;
    }
    /**
     * @return Repository Name
     * 
     */
    public Optional<String> repositoryName() {
        return Optional.ofNullable(this.repositoryName);
    }
    /**
     * @return Repository Owner
     * 
     */
    public Optional<String> repositoryOwner() {
        return Optional.ofNullable(this.repositoryOwner);
    }
    /**
     * @return Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     */
    public SystemDataResponse systemData() {
        return this.systemData;
    }
    /**
     * @return Resource tags.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWorkflowResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable ACRResponse acr;
        private @Nullable String aksResourceId;
        private String authStatus;
        private @Nullable String branchName;
        private @Nullable DeploymentPropertiesResponse deploymentProperties;
        private @Nullable String dockerBuildContext;
        private @Nullable String dockerfile;
        private String id;
        private @Nullable WorkflowRunResponse lastWorkflowRun;
        private String location;
        private String name;
        private @Nullable String namespace;
        private @Nullable GitHubWorkflowProfileResponseOidcCredentials oidcCredentials;
        private String prStatus;
        private String prURL;
        private Integer pullNumber;
        private @Nullable String repositoryName;
        private @Nullable String repositoryOwner;
        private SystemDataResponse systemData;
        private @Nullable Map<String,String> tags;
        private String type;
        public Builder() {}
        public Builder(GetWorkflowResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.acr = defaults.acr;
    	      this.aksResourceId = defaults.aksResourceId;
    	      this.authStatus = defaults.authStatus;
    	      this.branchName = defaults.branchName;
    	      this.deploymentProperties = defaults.deploymentProperties;
    	      this.dockerBuildContext = defaults.dockerBuildContext;
    	      this.dockerfile = defaults.dockerfile;
    	      this.id = defaults.id;
    	      this.lastWorkflowRun = defaults.lastWorkflowRun;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.namespace = defaults.namespace;
    	      this.oidcCredentials = defaults.oidcCredentials;
    	      this.prStatus = defaults.prStatus;
    	      this.prURL = defaults.prURL;
    	      this.pullNumber = defaults.pullNumber;
    	      this.repositoryName = defaults.repositoryName;
    	      this.repositoryOwner = defaults.repositoryOwner;
    	      this.systemData = defaults.systemData;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder acr(@Nullable ACRResponse acr) {
            this.acr = acr;
            return this;
        }
        @CustomType.Setter
        public Builder aksResourceId(@Nullable String aksResourceId) {
            this.aksResourceId = aksResourceId;
            return this;
        }
        @CustomType.Setter
        public Builder authStatus(String authStatus) {
            this.authStatus = Objects.requireNonNull(authStatus);
            return this;
        }
        @CustomType.Setter
        public Builder branchName(@Nullable String branchName) {
            this.branchName = branchName;
            return this;
        }
        @CustomType.Setter
        public Builder deploymentProperties(@Nullable DeploymentPropertiesResponse deploymentProperties) {
            this.deploymentProperties = deploymentProperties;
            return this;
        }
        @CustomType.Setter
        public Builder dockerBuildContext(@Nullable String dockerBuildContext) {
            this.dockerBuildContext = dockerBuildContext;
            return this;
        }
        @CustomType.Setter
        public Builder dockerfile(@Nullable String dockerfile) {
            this.dockerfile = dockerfile;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder lastWorkflowRun(@Nullable WorkflowRunResponse lastWorkflowRun) {
            this.lastWorkflowRun = lastWorkflowRun;
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder namespace(@Nullable String namespace) {
            this.namespace = namespace;
            return this;
        }
        @CustomType.Setter
        public Builder oidcCredentials(@Nullable GitHubWorkflowProfileResponseOidcCredentials oidcCredentials) {
            this.oidcCredentials = oidcCredentials;
            return this;
        }
        @CustomType.Setter
        public Builder prStatus(String prStatus) {
            this.prStatus = Objects.requireNonNull(prStatus);
            return this;
        }
        @CustomType.Setter
        public Builder prURL(String prURL) {
            this.prURL = Objects.requireNonNull(prURL);
            return this;
        }
        @CustomType.Setter
        public Builder pullNumber(Integer pullNumber) {
            this.pullNumber = Objects.requireNonNull(pullNumber);
            return this;
        }
        @CustomType.Setter
        public Builder repositoryName(@Nullable String repositoryName) {
            this.repositoryName = repositoryName;
            return this;
        }
        @CustomType.Setter
        public Builder repositoryOwner(@Nullable String repositoryOwner) {
            this.repositoryOwner = repositoryOwner;
            return this;
        }
        @CustomType.Setter
        public Builder systemData(SystemDataResponse systemData) {
            this.systemData = Objects.requireNonNull(systemData);
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetWorkflowResult build() {
            final var o = new GetWorkflowResult();
            o.acr = acr;
            o.aksResourceId = aksResourceId;
            o.authStatus = authStatus;
            o.branchName = branchName;
            o.deploymentProperties = deploymentProperties;
            o.dockerBuildContext = dockerBuildContext;
            o.dockerfile = dockerfile;
            o.id = id;
            o.lastWorkflowRun = lastWorkflowRun;
            o.location = location;
            o.name = name;
            o.namespace = namespace;
            o.oidcCredentials = oidcCredentials;
            o.prStatus = prStatus;
            o.prURL = prURL;
            o.pullNumber = pullNumber;
            o.repositoryName = repositoryName;
            o.repositoryOwner = repositoryOwner;
            o.systemData = systemData;
            o.tags = tags;
            o.type = type;
            return o;
        }
    }
}
