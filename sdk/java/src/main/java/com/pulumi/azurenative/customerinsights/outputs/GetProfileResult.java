// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.customerinsights.outputs;

import com.pulumi.azurenative.customerinsights.outputs.PropertyDefinitionResponse;
import com.pulumi.azurenative.customerinsights.outputs.StrongIdResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetProfileResult {
    /**
     * @return The api entity set name. This becomes the odata entity set name for the entity Type being referred in this object.
     * 
     */
    private @Nullable String apiEntitySetName;
    /**
     * @return The attributes for the Type.
     * 
     */
    private @Nullable Map<String,List<String>> attributes;
    /**
     * @return Localized descriptions for the property.
     * 
     */
    private @Nullable Map<String,String> description;
    /**
     * @return Localized display names for the property.
     * 
     */
    private @Nullable Map<String,String> displayName;
    /**
     * @return Type of entity.
     * 
     */
    private @Nullable String entityType;
    /**
     * @return The properties of the Profile.
     * 
     */
    private @Nullable List<PropertyDefinitionResponse> fields;
    /**
     * @return Resource ID.
     * 
     */
    private String id;
    /**
     * @return The instance count.
     * 
     */
    private @Nullable Integer instancesCount;
    /**
     * @return Large Image associated with the Property or EntityType.
     * 
     */
    private @Nullable String largeImage;
    /**
     * @return The last changed time for the type definition.
     * 
     */
    private String lastChangedUtc;
    /**
     * @return Any custom localized attributes for the Type.
     * 
     */
    private @Nullable Map<String,Map<String,String>> localizedAttributes;
    /**
     * @return Medium Image associated with the Property or EntityType.
     * 
     */
    private @Nullable String mediumImage;
    /**
     * @return Resource name.
     * 
     */
    private String name;
    /**
     * @return Provisioning state.
     * 
     */
    private String provisioningState;
    /**
     * @return The schema org link. This helps ACI identify and suggest semantic models.
     * 
     */
    private @Nullable String schemaItemTypeLink;
    /**
     * @return Small Image associated with the Property or EntityType.
     * 
     */
    private @Nullable String smallImage;
    /**
     * @return The strong IDs.
     * 
     */
    private @Nullable List<StrongIdResponse> strongIds;
    /**
     * @return The hub name.
     * 
     */
    private String tenantId;
    /**
     * @return The timestamp property name. Represents the time when the interaction or profile update happened.
     * 
     */
    private @Nullable String timestampFieldName;
    /**
     * @return Resource type.
     * 
     */
    private String type;
    /**
     * @return The name of the entity.
     * 
     */
    private @Nullable String typeName;

    private GetProfileResult() {}
    /**
     * @return The api entity set name. This becomes the odata entity set name for the entity Type being referred in this object.
     * 
     */
    public Optional<String> apiEntitySetName() {
        return Optional.ofNullable(this.apiEntitySetName);
    }
    /**
     * @return The attributes for the Type.
     * 
     */
    public Map<String,List<String>> attributes() {
        return this.attributes == null ? Map.of() : this.attributes;
    }
    /**
     * @return Localized descriptions for the property.
     * 
     */
    public Map<String,String> description() {
        return this.description == null ? Map.of() : this.description;
    }
    /**
     * @return Localized display names for the property.
     * 
     */
    public Map<String,String> displayName() {
        return this.displayName == null ? Map.of() : this.displayName;
    }
    /**
     * @return Type of entity.
     * 
     */
    public Optional<String> entityType() {
        return Optional.ofNullable(this.entityType);
    }
    /**
     * @return The properties of the Profile.
     * 
     */
    public List<PropertyDefinitionResponse> fields() {
        return this.fields == null ? List.of() : this.fields;
    }
    /**
     * @return Resource ID.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The instance count.
     * 
     */
    public Optional<Integer> instancesCount() {
        return Optional.ofNullable(this.instancesCount);
    }
    /**
     * @return Large Image associated with the Property or EntityType.
     * 
     */
    public Optional<String> largeImage() {
        return Optional.ofNullable(this.largeImage);
    }
    /**
     * @return The last changed time for the type definition.
     * 
     */
    public String lastChangedUtc() {
        return this.lastChangedUtc;
    }
    /**
     * @return Any custom localized attributes for the Type.
     * 
     */
    public Map<String,Map<String,String>> localizedAttributes() {
        return this.localizedAttributes == null ? Map.of() : this.localizedAttributes;
    }
    /**
     * @return Medium Image associated with the Property or EntityType.
     * 
     */
    public Optional<String> mediumImage() {
        return Optional.ofNullable(this.mediumImage);
    }
    /**
     * @return Resource name.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Provisioning state.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * @return The schema org link. This helps ACI identify and suggest semantic models.
     * 
     */
    public Optional<String> schemaItemTypeLink() {
        return Optional.ofNullable(this.schemaItemTypeLink);
    }
    /**
     * @return Small Image associated with the Property or EntityType.
     * 
     */
    public Optional<String> smallImage() {
        return Optional.ofNullable(this.smallImage);
    }
    /**
     * @return The strong IDs.
     * 
     */
    public List<StrongIdResponse> strongIds() {
        return this.strongIds == null ? List.of() : this.strongIds;
    }
    /**
     * @return The hub name.
     * 
     */
    public String tenantId() {
        return this.tenantId;
    }
    /**
     * @return The timestamp property name. Represents the time when the interaction or profile update happened.
     * 
     */
    public Optional<String> timestampFieldName() {
        return Optional.ofNullable(this.timestampFieldName);
    }
    /**
     * @return Resource type.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return The name of the entity.
     * 
     */
    public Optional<String> typeName() {
        return Optional.ofNullable(this.typeName);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetProfileResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String apiEntitySetName;
        private @Nullable Map<String,List<String>> attributes;
        private @Nullable Map<String,String> description;
        private @Nullable Map<String,String> displayName;
        private @Nullable String entityType;
        private @Nullable List<PropertyDefinitionResponse> fields;
        private String id;
        private @Nullable Integer instancesCount;
        private @Nullable String largeImage;
        private String lastChangedUtc;
        private @Nullable Map<String,Map<String,String>> localizedAttributes;
        private @Nullable String mediumImage;
        private String name;
        private String provisioningState;
        private @Nullable String schemaItemTypeLink;
        private @Nullable String smallImage;
        private @Nullable List<StrongIdResponse> strongIds;
        private String tenantId;
        private @Nullable String timestampFieldName;
        private String type;
        private @Nullable String typeName;
        public Builder() {}
        public Builder(GetProfileResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apiEntitySetName = defaults.apiEntitySetName;
    	      this.attributes = defaults.attributes;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.entityType = defaults.entityType;
    	      this.fields = defaults.fields;
    	      this.id = defaults.id;
    	      this.instancesCount = defaults.instancesCount;
    	      this.largeImage = defaults.largeImage;
    	      this.lastChangedUtc = defaults.lastChangedUtc;
    	      this.localizedAttributes = defaults.localizedAttributes;
    	      this.mediumImage = defaults.mediumImage;
    	      this.name = defaults.name;
    	      this.provisioningState = defaults.provisioningState;
    	      this.schemaItemTypeLink = defaults.schemaItemTypeLink;
    	      this.smallImage = defaults.smallImage;
    	      this.strongIds = defaults.strongIds;
    	      this.tenantId = defaults.tenantId;
    	      this.timestampFieldName = defaults.timestampFieldName;
    	      this.type = defaults.type;
    	      this.typeName = defaults.typeName;
        }

        @CustomType.Setter
        public Builder apiEntitySetName(@Nullable String apiEntitySetName) {
            this.apiEntitySetName = apiEntitySetName;
            return this;
        }
        @CustomType.Setter
        public Builder attributes(@Nullable Map<String,List<String>> attributes) {
            this.attributes = attributes;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable Map<String,String> description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable Map<String,String> displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder entityType(@Nullable String entityType) {
            this.entityType = entityType;
            return this;
        }
        @CustomType.Setter
        public Builder fields(@Nullable List<PropertyDefinitionResponse> fields) {
            this.fields = fields;
            return this;
        }
        public Builder fields(PropertyDefinitionResponse... fields) {
            return fields(List.of(fields));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder instancesCount(@Nullable Integer instancesCount) {
            this.instancesCount = instancesCount;
            return this;
        }
        @CustomType.Setter
        public Builder largeImage(@Nullable String largeImage) {
            this.largeImage = largeImage;
            return this;
        }
        @CustomType.Setter
        public Builder lastChangedUtc(String lastChangedUtc) {
            this.lastChangedUtc = Objects.requireNonNull(lastChangedUtc);
            return this;
        }
        @CustomType.Setter
        public Builder localizedAttributes(@Nullable Map<String,Map<String,String>> localizedAttributes) {
            this.localizedAttributes = localizedAttributes;
            return this;
        }
        @CustomType.Setter
        public Builder mediumImage(@Nullable String mediumImage) {
            this.mediumImage = mediumImage;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        @CustomType.Setter
        public Builder schemaItemTypeLink(@Nullable String schemaItemTypeLink) {
            this.schemaItemTypeLink = schemaItemTypeLink;
            return this;
        }
        @CustomType.Setter
        public Builder smallImage(@Nullable String smallImage) {
            this.smallImage = smallImage;
            return this;
        }
        @CustomType.Setter
        public Builder strongIds(@Nullable List<StrongIdResponse> strongIds) {
            this.strongIds = strongIds;
            return this;
        }
        public Builder strongIds(StrongIdResponse... strongIds) {
            return strongIds(List.of(strongIds));
        }
        @CustomType.Setter
        public Builder tenantId(String tenantId) {
            this.tenantId = Objects.requireNonNull(tenantId);
            return this;
        }
        @CustomType.Setter
        public Builder timestampFieldName(@Nullable String timestampFieldName) {
            this.timestampFieldName = timestampFieldName;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder typeName(@Nullable String typeName) {
            this.typeName = typeName;
            return this;
        }
        public GetProfileResult build() {
            final var o = new GetProfileResult();
            o.apiEntitySetName = apiEntitySetName;
            o.attributes = attributes;
            o.description = description;
            o.displayName = displayName;
            o.entityType = entityType;
            o.fields = fields;
            o.id = id;
            o.instancesCount = instancesCount;
            o.largeImage = largeImage;
            o.lastChangedUtc = lastChangedUtc;
            o.localizedAttributes = localizedAttributes;
            o.mediumImage = mediumImage;
            o.name = name;
            o.provisioningState = provisioningState;
            o.schemaItemTypeLink = schemaItemTypeLink;
            o.smallImage = smallImage;
            o.strongIds = strongIds;
            o.tenantId = tenantId;
            o.timestampFieldName = timestampFieldName;
            o.type = type;
            o.typeName = typeName;
            return o;
        }
    }
}
