// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.providerhub.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SkuCostResponse {
    private @Nullable String extendedUnit;
    private String meterId;
    private @Nullable Integer quantity;

    private SkuCostResponse() {}
    public Optional<String> extendedUnit() {
        return Optional.ofNullable(this.extendedUnit);
    }
    public String meterId() {
        return this.meterId;
    }
    public Optional<Integer> quantity() {
        return Optional.ofNullable(this.quantity);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SkuCostResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String extendedUnit;
        private String meterId;
        private @Nullable Integer quantity;
        public Builder() {}
        public Builder(SkuCostResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.extendedUnit = defaults.extendedUnit;
    	      this.meterId = defaults.meterId;
    	      this.quantity = defaults.quantity;
        }

        @CustomType.Setter
        public Builder extendedUnit(@Nullable String extendedUnit) {
            this.extendedUnit = extendedUnit;
            return this;
        }
        @CustomType.Setter
        public Builder meterId(String meterId) {
            this.meterId = Objects.requireNonNull(meterId);
            return this;
        }
        @CustomType.Setter
        public Builder quantity(@Nullable Integer quantity) {
            this.quantity = quantity;
            return this;
        }
        public SkuCostResponse build() {
            final var o = new SkuCostResponse();
            o.extendedUnit = extendedUnit;
            o.meterId = meterId;
            o.quantity = quantity;
            return o;
        }
    }
}
