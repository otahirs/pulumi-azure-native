// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.testbase.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class BillingHubFreeHourIncrementEntryResponse {
    private @Nullable String createTimeStamp;
    private @Nullable String expirationTimeStamp;
    private @Nullable Double incrementalFreeHours;
    private @Nullable Double remainingFreeHours;

    private BillingHubFreeHourIncrementEntryResponse() {}
    public Optional<String> createTimeStamp() {
        return Optional.ofNullable(this.createTimeStamp);
    }
    public Optional<String> expirationTimeStamp() {
        return Optional.ofNullable(this.expirationTimeStamp);
    }
    public Optional<Double> incrementalFreeHours() {
        return Optional.ofNullable(this.incrementalFreeHours);
    }
    public Optional<Double> remainingFreeHours() {
        return Optional.ofNullable(this.remainingFreeHours);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BillingHubFreeHourIncrementEntryResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String createTimeStamp;
        private @Nullable String expirationTimeStamp;
        private @Nullable Double incrementalFreeHours;
        private @Nullable Double remainingFreeHours;
        public Builder() {}
        public Builder(BillingHubFreeHourIncrementEntryResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createTimeStamp = defaults.createTimeStamp;
    	      this.expirationTimeStamp = defaults.expirationTimeStamp;
    	      this.incrementalFreeHours = defaults.incrementalFreeHours;
    	      this.remainingFreeHours = defaults.remainingFreeHours;
        }

        @CustomType.Setter
        public Builder createTimeStamp(@Nullable String createTimeStamp) {
            this.createTimeStamp = createTimeStamp;
            return this;
        }
        @CustomType.Setter
        public Builder expirationTimeStamp(@Nullable String expirationTimeStamp) {
            this.expirationTimeStamp = expirationTimeStamp;
            return this;
        }
        @CustomType.Setter
        public Builder incrementalFreeHours(@Nullable Double incrementalFreeHours) {
            this.incrementalFreeHours = incrementalFreeHours;
            return this;
        }
        @CustomType.Setter
        public Builder remainingFreeHours(@Nullable Double remainingFreeHours) {
            this.remainingFreeHours = remainingFreeHours;
            return this;
        }
        public BillingHubFreeHourIncrementEntryResponse build() {
            final var o = new BillingHubFreeHourIncrementEntryResponse();
            o.createTimeStamp = createTimeStamp;
            o.expirationTimeStamp = expirationTimeStamp;
            o.incrementalFreeHours = incrementalFreeHours;
            o.remainingFreeHours = remainingFreeHours;
            return o;
        }
    }
}
