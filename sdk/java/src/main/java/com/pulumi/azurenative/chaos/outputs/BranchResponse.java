// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.chaos.outputs;

import com.pulumi.azurenative.chaos.outputs.ContinuousActionResponse;
import com.pulumi.azurenative.chaos.outputs.DelayActionResponse;
import com.pulumi.azurenative.chaos.outputs.DiscreteActionResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class BranchResponse {
    /**
     * @return List of actions.
     * 
     */
    private List<Object> actions;
    /**
     * @return String of the branch name.
     * 
     */
    private String name;

    private BranchResponse() {}
    /**
     * @return List of actions.
     * 
     */
    public List<Object> actions() {
        return this.actions;
    }
    /**
     * @return String of the branch name.
     * 
     */
    public String name() {
        return this.name;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BranchResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<Object> actions;
        private String name;
        public Builder() {}
        public Builder(BranchResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.actions = defaults.actions;
    	      this.name = defaults.name;
        }

        @CustomType.Setter
        public Builder actions(List<Object> actions) {
            this.actions = Objects.requireNonNull(actions);
            return this;
        }
        public Builder actions(Object... actions) {
            return actions(List.of(actions));
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public BranchResponse build() {
            final var o = new BranchResponse();
            o.actions = actions;
            o.name = name;
            return o;
        }
    }
}
