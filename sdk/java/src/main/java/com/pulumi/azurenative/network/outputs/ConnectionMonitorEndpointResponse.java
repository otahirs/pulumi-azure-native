// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.outputs;

import com.pulumi.azurenative.network.outputs.ConnectionMonitorEndpointFilterResponse;
import com.pulumi.azurenative.network.outputs.ConnectionMonitorEndpointScopeResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ConnectionMonitorEndpointResponse {
    /**
     * @return Address of the connection monitor endpoint (IP or domain name).
     * 
     */
    private @Nullable String address;
    /**
     * @return Test coverage for the endpoint.
     * 
     */
    private @Nullable String coverageLevel;
    /**
     * @return Filter for sub-items within the endpoint.
     * 
     */
    private @Nullable ConnectionMonitorEndpointFilterResponse filter;
    /**
     * @return The name of the connection monitor endpoint.
     * 
     */
    private String name;
    /**
     * @return Resource ID of the connection monitor endpoint.
     * 
     */
    private @Nullable String resourceId;
    /**
     * @return Endpoint scope.
     * 
     */
    private @Nullable ConnectionMonitorEndpointScopeResponse scope;
    /**
     * @return The endpoint type.
     * 
     */
    private @Nullable String type;

    private ConnectionMonitorEndpointResponse() {}
    /**
     * @return Address of the connection monitor endpoint (IP or domain name).
     * 
     */
    public Optional<String> address() {
        return Optional.ofNullable(this.address);
    }
    /**
     * @return Test coverage for the endpoint.
     * 
     */
    public Optional<String> coverageLevel() {
        return Optional.ofNullable(this.coverageLevel);
    }
    /**
     * @return Filter for sub-items within the endpoint.
     * 
     */
    public Optional<ConnectionMonitorEndpointFilterResponse> filter() {
        return Optional.ofNullable(this.filter);
    }
    /**
     * @return The name of the connection monitor endpoint.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Resource ID of the connection monitor endpoint.
     * 
     */
    public Optional<String> resourceId() {
        return Optional.ofNullable(this.resourceId);
    }
    /**
     * @return Endpoint scope.
     * 
     */
    public Optional<ConnectionMonitorEndpointScopeResponse> scope() {
        return Optional.ofNullable(this.scope);
    }
    /**
     * @return The endpoint type.
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConnectionMonitorEndpointResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String address;
        private @Nullable String coverageLevel;
        private @Nullable ConnectionMonitorEndpointFilterResponse filter;
        private String name;
        private @Nullable String resourceId;
        private @Nullable ConnectionMonitorEndpointScopeResponse scope;
        private @Nullable String type;
        public Builder() {}
        public Builder(ConnectionMonitorEndpointResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.address = defaults.address;
    	      this.coverageLevel = defaults.coverageLevel;
    	      this.filter = defaults.filter;
    	      this.name = defaults.name;
    	      this.resourceId = defaults.resourceId;
    	      this.scope = defaults.scope;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder address(@Nullable String address) {
            this.address = address;
            return this;
        }
        @CustomType.Setter
        public Builder coverageLevel(@Nullable String coverageLevel) {
            this.coverageLevel = coverageLevel;
            return this;
        }
        @CustomType.Setter
        public Builder filter(@Nullable ConnectionMonitorEndpointFilterResponse filter) {
            this.filter = filter;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder resourceId(@Nullable String resourceId) {
            this.resourceId = resourceId;
            return this;
        }
        @CustomType.Setter
        public Builder scope(@Nullable ConnectionMonitorEndpointScopeResponse scope) {
            this.scope = scope;
            return this;
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {
            this.type = type;
            return this;
        }
        public ConnectionMonitorEndpointResponse build() {
            final var o = new ConnectionMonitorEndpointResponse();
            o.address = address;
            o.coverageLevel = coverageLevel;
            o.filter = filter;
            o.name = name;
            o.resourceId = resourceId;
            o.scope = scope;
            o.type = type;
            return o;
        }
    }
}
