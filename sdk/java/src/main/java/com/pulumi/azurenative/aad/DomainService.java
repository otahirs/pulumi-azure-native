// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.aad;

import com.pulumi.azurenative.Utilities;
import com.pulumi.azurenative.aad.DomainServiceArgs;
import com.pulumi.azurenative.aad.outputs.DomainSecuritySettingsResponse;
import com.pulumi.azurenative.aad.outputs.LdapsSettingsResponse;
import com.pulumi.azurenative.aad.outputs.MigrationPropertiesResponse;
import com.pulumi.azurenative.aad.outputs.NotificationSettingsResponse;
import com.pulumi.azurenative.aad.outputs.ReplicaSetResponse;
import com.pulumi.azurenative.aad.outputs.ResourceForestSettingsResponse;
import com.pulumi.azurenative.aad.outputs.SystemDataResponse;
import com.pulumi.core.Alias;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Domain service.
 * API Version: 2021-03-01.
 * 
 * ## Example Usage
 * ### Create Domain Service
 * 
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var domainService = new DomainService(&#34;domainService&#34;, DomainServiceArgs.builder()        
 *             .domainName(&#34;TestDomainService.com&#34;)
 *             .domainSecuritySettings(Map.ofEntries(
 *                 Map.entry(&#34;ntlmV1&#34;, &#34;Enabled&#34;),
 *                 Map.entry(&#34;syncNtlmPasswords&#34;, &#34;Enabled&#34;),
 *                 Map.entry(&#34;tlsV1&#34;, &#34;Disabled&#34;)
 *             ))
 *             .domainServiceName(&#34;TestDomainService.com&#34;)
 *             .filteredSync(&#34;Enabled&#34;)
 *             .ldapsSettings(Map.ofEntries(
 *                 Map.entry(&#34;externalAccess&#34;, &#34;Enabled&#34;),
 *                 Map.entry(&#34;ldaps&#34;, &#34;Enabled&#34;),
 *                 Map.entry(&#34;pfxCertificate&#34;, &#34;MIIDPDCCAiSgAwIBAgIQQUI9P6tq2p9OFIJa7DLNvTANBgkqhkiG9w0BAQsFADAgMR4w...&#34;),
 *                 Map.entry(&#34;pfxCertificatePassword&#34;, &#34;&lt;pfxCertificatePassword&gt;&#34;)
 *             ))
 *             .notificationSettings(Map.ofEntries(
 *                 Map.entry(&#34;additionalRecipients&#34;,                 
 *                     &#34;jicha@microsoft.com&#34;,
 *                     &#34;caalmont@microsoft.com&#34;),
 *                 Map.entry(&#34;notifyDcAdmins&#34;, &#34;Enabled&#34;),
 *                 Map.entry(&#34;notifyGlobalAdmins&#34;, &#34;Enabled&#34;)
 *             ))
 *             .replicaSets(Map.ofEntries(
 *                 Map.entry(&#34;location&#34;, &#34;West US&#34;),
 *                 Map.entry(&#34;subnetId&#34;, &#34;/subscriptions/1639790a-76a2-4ac4-98d9-8562f5dfcb4d/resourceGroups/TestNetworkResourceGroup/providers/Microsoft.Network/virtualNetworks/TestVnetWUS/subnets/TestSubnetWUS&#34;)
 *             ))
 *             .resourceGroupName(&#34;TestResourceGroup&#34;)
 *             .build());
 * 
 *     }
 * }
 * 
 * ```
 * 
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:aad:DomainService TestDomainService.com /subscriptions/1639790a-76a2-4ac4-98d9-8562f5dfcb4d/resourceGroups/TestResourceGroup/providers/Microsoft.AAD/DomainServices/TestDomainService.com 
 * ```
 * 
 */
@ResourceType(type="azure-native:aad:DomainService")
public class DomainService extends com.pulumi.resources.CustomResource {
    /**
     * Deployment Id
     * 
     */
    @Export(name="deploymentId", type=String.class, parameters={})
    private Output<String> deploymentId;

    /**
     * @return Deployment Id
     * 
     */
    public Output<String> deploymentId() {
        return this.deploymentId;
    }
    /**
     * Domain Configuration Type
     * 
     */
    @Export(name="domainConfigurationType", type=String.class, parameters={})
    private Output</* @Nullable */ String> domainConfigurationType;

    /**
     * @return Domain Configuration Type
     * 
     */
    public Output<Optional<String>> domainConfigurationType() {
        return Codegen.optional(this.domainConfigurationType);
    }
    /**
     * The name of the Azure domain that the user would like to deploy Domain Services to.
     * 
     */
    @Export(name="domainName", type=String.class, parameters={})
    private Output</* @Nullable */ String> domainName;

    /**
     * @return The name of the Azure domain that the user would like to deploy Domain Services to.
     * 
     */
    public Output<Optional<String>> domainName() {
        return Codegen.optional(this.domainName);
    }
    /**
     * DomainSecurity Settings
     * 
     */
    @Export(name="domainSecuritySettings", type=DomainSecuritySettingsResponse.class, parameters={})
    private Output</* @Nullable */ DomainSecuritySettingsResponse> domainSecuritySettings;

    /**
     * @return DomainSecurity Settings
     * 
     */
    public Output<Optional<DomainSecuritySettingsResponse>> domainSecuritySettings() {
        return Codegen.optional(this.domainSecuritySettings);
    }
    /**
     * Resource etag
     * 
     */
    @Export(name="etag", type=String.class, parameters={})
    private Output</* @Nullable */ String> etag;

    /**
     * @return Resource etag
     * 
     */
    public Output<Optional<String>> etag() {
        return Codegen.optional(this.etag);
    }
    /**
     * Enabled or Disabled flag to turn on Group-based filtered sync
     * 
     */
    @Export(name="filteredSync", type=String.class, parameters={})
    private Output</* @Nullable */ String> filteredSync;

    /**
     * @return Enabled or Disabled flag to turn on Group-based filtered sync
     * 
     */
    public Output<Optional<String>> filteredSync() {
        return Codegen.optional(this.filteredSync);
    }
    /**
     * Secure LDAP Settings
     * 
     */
    @Export(name="ldapsSettings", type=LdapsSettingsResponse.class, parameters={})
    private Output</* @Nullable */ LdapsSettingsResponse> ldapsSettings;

    /**
     * @return Secure LDAP Settings
     * 
     */
    public Output<Optional<LdapsSettingsResponse>> ldapsSettings() {
        return Codegen.optional(this.ldapsSettings);
    }
    /**
     * Resource location
     * 
     */
    @Export(name="location", type=String.class, parameters={})
    private Output</* @Nullable */ String> location;

    /**
     * @return Resource location
     * 
     */
    public Output<Optional<String>> location() {
        return Codegen.optional(this.location);
    }
    /**
     * Migration Properties
     * 
     */
    @Export(name="migrationProperties", type=MigrationPropertiesResponse.class, parameters={})
    private Output<MigrationPropertiesResponse> migrationProperties;

    /**
     * @return Migration Properties
     * 
     */
    public Output<MigrationPropertiesResponse> migrationProperties() {
        return this.migrationProperties;
    }
    /**
     * Resource name
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Resource name
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Notification Settings
     * 
     */
    @Export(name="notificationSettings", type=NotificationSettingsResponse.class, parameters={})
    private Output</* @Nullable */ NotificationSettingsResponse> notificationSettings;

    /**
     * @return Notification Settings
     * 
     */
    public Output<Optional<NotificationSettingsResponse>> notificationSettings() {
        return Codegen.optional(this.notificationSettings);
    }
    /**
     * the current deployment or provisioning state, which only appears in the response.
     * 
     */
    @Export(name="provisioningState", type=String.class, parameters={})
    private Output<String> provisioningState;

    /**
     * @return the current deployment or provisioning state, which only appears in the response.
     * 
     */
    public Output<String> provisioningState() {
        return this.provisioningState;
    }
    /**
     * List of ReplicaSets
     * 
     */
    @Export(name="replicaSets", type=List.class, parameters={ReplicaSetResponse.class})
    private Output</* @Nullable */ List<ReplicaSetResponse>> replicaSets;

    /**
     * @return List of ReplicaSets
     * 
     */
    public Output<Optional<List<ReplicaSetResponse>>> replicaSets() {
        return Codegen.optional(this.replicaSets);
    }
    /**
     * Resource Forest Settings
     * 
     */
    @Export(name="resourceForestSettings", type=ResourceForestSettingsResponse.class, parameters={})
    private Output</* @Nullable */ ResourceForestSettingsResponse> resourceForestSettings;

    /**
     * @return Resource Forest Settings
     * 
     */
    public Output<Optional<ResourceForestSettingsResponse>> resourceForestSettings() {
        return Codegen.optional(this.resourceForestSettings);
    }
    /**
     * Sku Type
     * 
     */
    @Export(name="sku", type=String.class, parameters={})
    private Output</* @Nullable */ String> sku;

    /**
     * @return Sku Type
     * 
     */
    public Output<Optional<String>> sku() {
        return Codegen.optional(this.sku);
    }
    /**
     * SyncOwner ReplicaSet Id
     * 
     */
    @Export(name="syncOwner", type=String.class, parameters={})
    private Output<String> syncOwner;

    /**
     * @return SyncOwner ReplicaSet Id
     * 
     */
    public Output<String> syncOwner() {
        return this.syncOwner;
    }
    /**
     * The system meta data relating to this resource.
     * 
     */
    @Export(name="systemData", type=SystemDataResponse.class, parameters={})
    private Output<SystemDataResponse> systemData;

    /**
     * @return The system meta data relating to this resource.
     * 
     */
    public Output<SystemDataResponse> systemData() {
        return this.systemData;
    }
    /**
     * Resource tags
     * 
     */
    @Export(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return Resource tags
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * Azure Active Directory Tenant Id
     * 
     */
    @Export(name="tenantId", type=String.class, parameters={})
    private Output<String> tenantId;

    /**
     * @return Azure Active Directory Tenant Id
     * 
     */
    public Output<String> tenantId() {
        return this.tenantId;
    }
    /**
     * Resource type
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return Resource type
     * 
     */
    public Output<String> type() {
        return this.type;
    }
    /**
     * Data Model Version
     * 
     */
    @Export(name="version", type=Integer.class, parameters={})
    private Output<Integer> version;

    /**
     * @return Data Model Version
     * 
     */
    public Output<Integer> version() {
        return this.version;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public DomainService(String name) {
        this(name, DomainServiceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public DomainService(String name, DomainServiceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public DomainService(String name, DomainServiceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:aad:DomainService", name, args == null ? DomainServiceArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private DomainService(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:aad:DomainService", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("azure-native:aad/v20170101:DomainService").build()),
                Output.of(Alias.builder().type("azure-native:aad/v20170601:DomainService").build()),
                Output.of(Alias.builder().type("azure-native:aad/v20200101:DomainService").build()),
                Output.of(Alias.builder().type("azure-native:aad/v20210301:DomainService").build()),
                Output.of(Alias.builder().type("azure-native:aad/v20210501:DomainService").build())
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static DomainService get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new DomainService(name, id, options);
    }
}
