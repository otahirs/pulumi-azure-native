// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.costmanagement.outputs;

import com.pulumi.azurenative.costmanagement.outputs.ConnectorCollectionInfoResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetCloudConnectorResult {
    /**
     * @return Connector billing model
     * 
     */
    private @Nullable String billingModel;
    /**
     * @return Collection information
     * 
     */
    private ConnectorCollectionInfoResponse collectionInfo;
    /**
     * @return Connector definition creation datetime
     * 
     */
    private String createdOn;
    /**
     * @return Credentials authentication key (eg AWS ARN)
     * 
     */
    private @Nullable String credentialsKey;
    /**
     * @return Number of days remaining of trial
     * 
     */
    private Integer daysTrialRemaining;
    /**
     * @return Default ManagementGroupId
     * 
     */
    private @Nullable String defaultManagementGroupId;
    /**
     * @return Connector DisplayName
     * 
     */
    private @Nullable String displayName;
    /**
     * @return Associated ExternalBillingAccountId
     * 
     */
    private String externalBillingAccountId;
    /**
     * @return Connector id
     * 
     */
    private String id;
    /**
     * @return Connector kind (eg aws)
     * 
     */
    private @Nullable String kind;
    /**
     * @return Connector last modified datetime
     * 
     */
    private String modifiedOn;
    /**
     * @return Connector name
     * 
     */
    private String name;
    /**
     * @return The display name of the providerBillingAccountId as defined on the external provider
     * 
     */
    private String providerBillingAccountDisplayName;
    /**
     * @return Connector providerBillingAccountId, determined from credentials (eg AWS Consolidated account number)
     * 
     */
    private String providerBillingAccountId;
    /**
     * @return Identifying source report. (For AWS this is a CUR report name, defined with Daily and with Resources)
     * 
     */
    private @Nullable String reportId;
    /**
     * @return Connector status
     * 
     */
    private String status;
    /**
     * @return Billing SubscriptionId
     * 
     */
    private @Nullable String subscriptionId;
    /**
     * @return Connector type
     * 
     */
    private String type;

    private GetCloudConnectorResult() {}
    /**
     * @return Connector billing model
     * 
     */
    public Optional<String> billingModel() {
        return Optional.ofNullable(this.billingModel);
    }
    /**
     * @return Collection information
     * 
     */
    public ConnectorCollectionInfoResponse collectionInfo() {
        return this.collectionInfo;
    }
    /**
     * @return Connector definition creation datetime
     * 
     */
    public String createdOn() {
        return this.createdOn;
    }
    /**
     * @return Credentials authentication key (eg AWS ARN)
     * 
     */
    public Optional<String> credentialsKey() {
        return Optional.ofNullable(this.credentialsKey);
    }
    /**
     * @return Number of days remaining of trial
     * 
     */
    public Integer daysTrialRemaining() {
        return this.daysTrialRemaining;
    }
    /**
     * @return Default ManagementGroupId
     * 
     */
    public Optional<String> defaultManagementGroupId() {
        return Optional.ofNullable(this.defaultManagementGroupId);
    }
    /**
     * @return Connector DisplayName
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return Associated ExternalBillingAccountId
     * 
     */
    public String externalBillingAccountId() {
        return this.externalBillingAccountId;
    }
    /**
     * @return Connector id
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Connector kind (eg aws)
     * 
     */
    public Optional<String> kind() {
        return Optional.ofNullable(this.kind);
    }
    /**
     * @return Connector last modified datetime
     * 
     */
    public String modifiedOn() {
        return this.modifiedOn;
    }
    /**
     * @return Connector name
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The display name of the providerBillingAccountId as defined on the external provider
     * 
     */
    public String providerBillingAccountDisplayName() {
        return this.providerBillingAccountDisplayName;
    }
    /**
     * @return Connector providerBillingAccountId, determined from credentials (eg AWS Consolidated account number)
     * 
     */
    public String providerBillingAccountId() {
        return this.providerBillingAccountId;
    }
    /**
     * @return Identifying source report. (For AWS this is a CUR report name, defined with Daily and with Resources)
     * 
     */
    public Optional<String> reportId() {
        return Optional.ofNullable(this.reportId);
    }
    /**
     * @return Connector status
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return Billing SubscriptionId
     * 
     */
    public Optional<String> subscriptionId() {
        return Optional.ofNullable(this.subscriptionId);
    }
    /**
     * @return Connector type
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCloudConnectorResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String billingModel;
        private ConnectorCollectionInfoResponse collectionInfo;
        private String createdOn;
        private @Nullable String credentialsKey;
        private Integer daysTrialRemaining;
        private @Nullable String defaultManagementGroupId;
        private @Nullable String displayName;
        private String externalBillingAccountId;
        private String id;
        private @Nullable String kind;
        private String modifiedOn;
        private String name;
        private String providerBillingAccountDisplayName;
        private String providerBillingAccountId;
        private @Nullable String reportId;
        private String status;
        private @Nullable String subscriptionId;
        private String type;
        public Builder() {}
        public Builder(GetCloudConnectorResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.billingModel = defaults.billingModel;
    	      this.collectionInfo = defaults.collectionInfo;
    	      this.createdOn = defaults.createdOn;
    	      this.credentialsKey = defaults.credentialsKey;
    	      this.daysTrialRemaining = defaults.daysTrialRemaining;
    	      this.defaultManagementGroupId = defaults.defaultManagementGroupId;
    	      this.displayName = defaults.displayName;
    	      this.externalBillingAccountId = defaults.externalBillingAccountId;
    	      this.id = defaults.id;
    	      this.kind = defaults.kind;
    	      this.modifiedOn = defaults.modifiedOn;
    	      this.name = defaults.name;
    	      this.providerBillingAccountDisplayName = defaults.providerBillingAccountDisplayName;
    	      this.providerBillingAccountId = defaults.providerBillingAccountId;
    	      this.reportId = defaults.reportId;
    	      this.status = defaults.status;
    	      this.subscriptionId = defaults.subscriptionId;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder billingModel(@Nullable String billingModel) {
            this.billingModel = billingModel;
            return this;
        }
        @CustomType.Setter
        public Builder collectionInfo(ConnectorCollectionInfoResponse collectionInfo) {
            this.collectionInfo = Objects.requireNonNull(collectionInfo);
            return this;
        }
        @CustomType.Setter
        public Builder createdOn(String createdOn) {
            this.createdOn = Objects.requireNonNull(createdOn);
            return this;
        }
        @CustomType.Setter
        public Builder credentialsKey(@Nullable String credentialsKey) {
            this.credentialsKey = credentialsKey;
            return this;
        }
        @CustomType.Setter
        public Builder daysTrialRemaining(Integer daysTrialRemaining) {
            this.daysTrialRemaining = Objects.requireNonNull(daysTrialRemaining);
            return this;
        }
        @CustomType.Setter
        public Builder defaultManagementGroupId(@Nullable String defaultManagementGroupId) {
            this.defaultManagementGroupId = defaultManagementGroupId;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder externalBillingAccountId(String externalBillingAccountId) {
            this.externalBillingAccountId = Objects.requireNonNull(externalBillingAccountId);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder kind(@Nullable String kind) {
            this.kind = kind;
            return this;
        }
        @CustomType.Setter
        public Builder modifiedOn(String modifiedOn) {
            this.modifiedOn = Objects.requireNonNull(modifiedOn);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder providerBillingAccountDisplayName(String providerBillingAccountDisplayName) {
            this.providerBillingAccountDisplayName = Objects.requireNonNull(providerBillingAccountDisplayName);
            return this;
        }
        @CustomType.Setter
        public Builder providerBillingAccountId(String providerBillingAccountId) {
            this.providerBillingAccountId = Objects.requireNonNull(providerBillingAccountId);
            return this;
        }
        @CustomType.Setter
        public Builder reportId(@Nullable String reportId) {
            this.reportId = reportId;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        @CustomType.Setter
        public Builder subscriptionId(@Nullable String subscriptionId) {
            this.subscriptionId = subscriptionId;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetCloudConnectorResult build() {
            final var o = new GetCloudConnectorResult();
            o.billingModel = billingModel;
            o.collectionInfo = collectionInfo;
            o.createdOn = createdOn;
            o.credentialsKey = credentialsKey;
            o.daysTrialRemaining = daysTrialRemaining;
            o.defaultManagementGroupId = defaultManagementGroupId;
            o.displayName = displayName;
            o.externalBillingAccountId = externalBillingAccountId;
            o.id = id;
            o.kind = kind;
            o.modifiedOn = modifiedOn;
            o.name = name;
            o.providerBillingAccountDisplayName = providerBillingAccountDisplayName;
            o.providerBillingAccountId = providerBillingAccountId;
            o.reportId = reportId;
            o.status = status;
            o.subscriptionId = subscriptionId;
            o.type = type;
            return o;
        }
    }
}
