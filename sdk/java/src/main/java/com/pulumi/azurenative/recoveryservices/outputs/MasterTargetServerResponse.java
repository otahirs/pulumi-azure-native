// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.recoveryservices.outputs;

import com.pulumi.azurenative.recoveryservices.outputs.DataStoreResponse;
import com.pulumi.azurenative.recoveryservices.outputs.HealthErrorResponse;
import com.pulumi.azurenative.recoveryservices.outputs.RetentionVolumeResponse;
import com.pulumi.azurenative.recoveryservices.outputs.VersionDetailsResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class MasterTargetServerResponse {
    /**
     * @return Agent expiry date.
     * 
     */
    private @Nullable String agentExpiryDate;
    /**
     * @return The version of the scout component on the server.
     * 
     */
    private @Nullable String agentVersion;
    /**
     * @return Agent version details.
     * 
     */
    private @Nullable VersionDetailsResponse agentVersionDetails;
    /**
     * @return The list of data stores in the fabric.
     * 
     */
    private @Nullable List<DataStoreResponse> dataStores;
    /**
     * @return Disk count of the master target.
     * 
     */
    private @Nullable Integer diskCount;
    /**
     * @return Health errors.
     * 
     */
    private @Nullable List<HealthErrorResponse> healthErrors;
    /**
     * @return The server Id.
     * 
     */
    private @Nullable String id;
    /**
     * @return The IP address of the server.
     * 
     */
    private @Nullable String ipAddress;
    /**
     * @return The last heartbeat received from the server.
     * 
     */
    private @Nullable String lastHeartbeat;
    /**
     * @return MARS agent expiry date.
     * 
     */
    private @Nullable String marsAgentExpiryDate;
    /**
     * @return MARS agent version.
     * 
     */
    private @Nullable String marsAgentVersion;
    /**
     * @return Mars agent version details.
     * 
     */
    private @Nullable VersionDetailsResponse marsAgentVersionDetails;
    /**
     * @return The server name.
     * 
     */
    private @Nullable String name;
    /**
     * @return The OS type of the server.
     * 
     */
    private @Nullable String osType;
    /**
     * @return OS Version of the master target.
     * 
     */
    private @Nullable String osVersion;
    /**
     * @return The retention volumes of Master target Server.
     * 
     */
    private @Nullable List<RetentionVolumeResponse> retentionVolumes;
    /**
     * @return Validation errors.
     * 
     */
    private @Nullable List<HealthErrorResponse> validationErrors;
    /**
     * @return Version status
     * 
     */
    private @Nullable String versionStatus;

    private MasterTargetServerResponse() {}
    /**
     * @return Agent expiry date.
     * 
     */
    public Optional<String> agentExpiryDate() {
        return Optional.ofNullable(this.agentExpiryDate);
    }
    /**
     * @return The version of the scout component on the server.
     * 
     */
    public Optional<String> agentVersion() {
        return Optional.ofNullable(this.agentVersion);
    }
    /**
     * @return Agent version details.
     * 
     */
    public Optional<VersionDetailsResponse> agentVersionDetails() {
        return Optional.ofNullable(this.agentVersionDetails);
    }
    /**
     * @return The list of data stores in the fabric.
     * 
     */
    public List<DataStoreResponse> dataStores() {
        return this.dataStores == null ? List.of() : this.dataStores;
    }
    /**
     * @return Disk count of the master target.
     * 
     */
    public Optional<Integer> diskCount() {
        return Optional.ofNullable(this.diskCount);
    }
    /**
     * @return Health errors.
     * 
     */
    public List<HealthErrorResponse> healthErrors() {
        return this.healthErrors == null ? List.of() : this.healthErrors;
    }
    /**
     * @return The server Id.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The IP address of the server.
     * 
     */
    public Optional<String> ipAddress() {
        return Optional.ofNullable(this.ipAddress);
    }
    /**
     * @return The last heartbeat received from the server.
     * 
     */
    public Optional<String> lastHeartbeat() {
        return Optional.ofNullable(this.lastHeartbeat);
    }
    /**
     * @return MARS agent expiry date.
     * 
     */
    public Optional<String> marsAgentExpiryDate() {
        return Optional.ofNullable(this.marsAgentExpiryDate);
    }
    /**
     * @return MARS agent version.
     * 
     */
    public Optional<String> marsAgentVersion() {
        return Optional.ofNullable(this.marsAgentVersion);
    }
    /**
     * @return Mars agent version details.
     * 
     */
    public Optional<VersionDetailsResponse> marsAgentVersionDetails() {
        return Optional.ofNullable(this.marsAgentVersionDetails);
    }
    /**
     * @return The server name.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return The OS type of the server.
     * 
     */
    public Optional<String> osType() {
        return Optional.ofNullable(this.osType);
    }
    /**
     * @return OS Version of the master target.
     * 
     */
    public Optional<String> osVersion() {
        return Optional.ofNullable(this.osVersion);
    }
    /**
     * @return The retention volumes of Master target Server.
     * 
     */
    public List<RetentionVolumeResponse> retentionVolumes() {
        return this.retentionVolumes == null ? List.of() : this.retentionVolumes;
    }
    /**
     * @return Validation errors.
     * 
     */
    public List<HealthErrorResponse> validationErrors() {
        return this.validationErrors == null ? List.of() : this.validationErrors;
    }
    /**
     * @return Version status
     * 
     */
    public Optional<String> versionStatus() {
        return Optional.ofNullable(this.versionStatus);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MasterTargetServerResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String agentExpiryDate;
        private @Nullable String agentVersion;
        private @Nullable VersionDetailsResponse agentVersionDetails;
        private @Nullable List<DataStoreResponse> dataStores;
        private @Nullable Integer diskCount;
        private @Nullable List<HealthErrorResponse> healthErrors;
        private @Nullable String id;
        private @Nullable String ipAddress;
        private @Nullable String lastHeartbeat;
        private @Nullable String marsAgentExpiryDate;
        private @Nullable String marsAgentVersion;
        private @Nullable VersionDetailsResponse marsAgentVersionDetails;
        private @Nullable String name;
        private @Nullable String osType;
        private @Nullable String osVersion;
        private @Nullable List<RetentionVolumeResponse> retentionVolumes;
        private @Nullable List<HealthErrorResponse> validationErrors;
        private @Nullable String versionStatus;
        public Builder() {}
        public Builder(MasterTargetServerResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.agentExpiryDate = defaults.agentExpiryDate;
    	      this.agentVersion = defaults.agentVersion;
    	      this.agentVersionDetails = defaults.agentVersionDetails;
    	      this.dataStores = defaults.dataStores;
    	      this.diskCount = defaults.diskCount;
    	      this.healthErrors = defaults.healthErrors;
    	      this.id = defaults.id;
    	      this.ipAddress = defaults.ipAddress;
    	      this.lastHeartbeat = defaults.lastHeartbeat;
    	      this.marsAgentExpiryDate = defaults.marsAgentExpiryDate;
    	      this.marsAgentVersion = defaults.marsAgentVersion;
    	      this.marsAgentVersionDetails = defaults.marsAgentVersionDetails;
    	      this.name = defaults.name;
    	      this.osType = defaults.osType;
    	      this.osVersion = defaults.osVersion;
    	      this.retentionVolumes = defaults.retentionVolumes;
    	      this.validationErrors = defaults.validationErrors;
    	      this.versionStatus = defaults.versionStatus;
        }

        @CustomType.Setter
        public Builder agentExpiryDate(@Nullable String agentExpiryDate) {
            this.agentExpiryDate = agentExpiryDate;
            return this;
        }
        @CustomType.Setter
        public Builder agentVersion(@Nullable String agentVersion) {
            this.agentVersion = agentVersion;
            return this;
        }
        @CustomType.Setter
        public Builder agentVersionDetails(@Nullable VersionDetailsResponse agentVersionDetails) {
            this.agentVersionDetails = agentVersionDetails;
            return this;
        }
        @CustomType.Setter
        public Builder dataStores(@Nullable List<DataStoreResponse> dataStores) {
            this.dataStores = dataStores;
            return this;
        }
        public Builder dataStores(DataStoreResponse... dataStores) {
            return dataStores(List.of(dataStores));
        }
        @CustomType.Setter
        public Builder diskCount(@Nullable Integer diskCount) {
            this.diskCount = diskCount;
            return this;
        }
        @CustomType.Setter
        public Builder healthErrors(@Nullable List<HealthErrorResponse> healthErrors) {
            this.healthErrors = healthErrors;
            return this;
        }
        public Builder healthErrors(HealthErrorResponse... healthErrors) {
            return healthErrors(List.of(healthErrors));
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ipAddress(@Nullable String ipAddress) {
            this.ipAddress = ipAddress;
            return this;
        }
        @CustomType.Setter
        public Builder lastHeartbeat(@Nullable String lastHeartbeat) {
            this.lastHeartbeat = lastHeartbeat;
            return this;
        }
        @CustomType.Setter
        public Builder marsAgentExpiryDate(@Nullable String marsAgentExpiryDate) {
            this.marsAgentExpiryDate = marsAgentExpiryDate;
            return this;
        }
        @CustomType.Setter
        public Builder marsAgentVersion(@Nullable String marsAgentVersion) {
            this.marsAgentVersion = marsAgentVersion;
            return this;
        }
        @CustomType.Setter
        public Builder marsAgentVersionDetails(@Nullable VersionDetailsResponse marsAgentVersionDetails) {
            this.marsAgentVersionDetails = marsAgentVersionDetails;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder osType(@Nullable String osType) {
            this.osType = osType;
            return this;
        }
        @CustomType.Setter
        public Builder osVersion(@Nullable String osVersion) {
            this.osVersion = osVersion;
            return this;
        }
        @CustomType.Setter
        public Builder retentionVolumes(@Nullable List<RetentionVolumeResponse> retentionVolumes) {
            this.retentionVolumes = retentionVolumes;
            return this;
        }
        public Builder retentionVolumes(RetentionVolumeResponse... retentionVolumes) {
            return retentionVolumes(List.of(retentionVolumes));
        }
        @CustomType.Setter
        public Builder validationErrors(@Nullable List<HealthErrorResponse> validationErrors) {
            this.validationErrors = validationErrors;
            return this;
        }
        public Builder validationErrors(HealthErrorResponse... validationErrors) {
            return validationErrors(List.of(validationErrors));
        }
        @CustomType.Setter
        public Builder versionStatus(@Nullable String versionStatus) {
            this.versionStatus = versionStatus;
            return this;
        }
        public MasterTargetServerResponse build() {
            final var o = new MasterTargetServerResponse();
            o.agentExpiryDate = agentExpiryDate;
            o.agentVersion = agentVersion;
            o.agentVersionDetails = agentVersionDetails;
            o.dataStores = dataStores;
            o.diskCount = diskCount;
            o.healthErrors = healthErrors;
            o.id = id;
            o.ipAddress = ipAddress;
            o.lastHeartbeat = lastHeartbeat;
            o.marsAgentExpiryDate = marsAgentExpiryDate;
            o.marsAgentVersion = marsAgentVersion;
            o.marsAgentVersionDetails = marsAgentVersionDetails;
            o.name = name;
            o.osType = osType;
            o.osVersion = osVersion;
            o.retentionVolumes = retentionVolumes;
            o.validationErrors = validationErrors;
            o.versionStatus = versionStatus;
            return o;
        }
    }
}
