// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datafactory.outputs;

import com.pulumi.azurenative.datafactory.outputs.AmazonS3CompatibleReadSettingsResponse;
import com.pulumi.azurenative.datafactory.outputs.AmazonS3ReadSettingsResponse;
import com.pulumi.azurenative.datafactory.outputs.AzureBlobFSReadSettingsResponse;
import com.pulumi.azurenative.datafactory.outputs.AzureBlobStorageReadSettingsResponse;
import com.pulumi.azurenative.datafactory.outputs.AzureDataLakeStoreReadSettingsResponse;
import com.pulumi.azurenative.datafactory.outputs.AzureFileStorageReadSettingsResponse;
import com.pulumi.azurenative.datafactory.outputs.FileServerReadSettingsResponse;
import com.pulumi.azurenative.datafactory.outputs.FtpReadSettingsResponse;
import com.pulumi.azurenative.datafactory.outputs.GoogleCloudStorageReadSettingsResponse;
import com.pulumi.azurenative.datafactory.outputs.HdfsReadSettingsResponse;
import com.pulumi.azurenative.datafactory.outputs.HttpReadSettingsResponse;
import com.pulumi.azurenative.datafactory.outputs.OracleCloudStorageReadSettingsResponse;
import com.pulumi.azurenative.datafactory.outputs.SftpReadSettingsResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ExcelSourceResponse {
    /**
     * @return Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects).
     * 
     */
    private @Nullable Object additionalColumns;
    /**
     * @return If true, disable data store metrics collection. Default is false. Type: boolean (or Expression with resultType boolean).
     * 
     */
    private @Nullable Object disableMetricsCollection;
    /**
     * @return The maximum concurrent connection count for the source data store. Type: integer (or Expression with resultType integer).
     * 
     */
    private @Nullable Object maxConcurrentConnections;
    /**
     * @return Source retry count. Type: integer (or Expression with resultType integer).
     * 
     */
    private @Nullable Object sourceRetryCount;
    /**
     * @return Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
     * 
     */
    private @Nullable Object sourceRetryWait;
    /**
     * @return Excel store settings.
     * 
     */
    private @Nullable Object storeSettings;
    /**
     * @return Copy source type.
     * Expected value is &#39;ExcelSource&#39;.
     * 
     */
    private String type;

    private ExcelSourceResponse() {}
    /**
     * @return Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects).
     * 
     */
    public Optional<Object> additionalColumns() {
        return Optional.ofNullable(this.additionalColumns);
    }
    /**
     * @return If true, disable data store metrics collection. Default is false. Type: boolean (or Expression with resultType boolean).
     * 
     */
    public Optional<Object> disableMetricsCollection() {
        return Optional.ofNullable(this.disableMetricsCollection);
    }
    /**
     * @return The maximum concurrent connection count for the source data store. Type: integer (or Expression with resultType integer).
     * 
     */
    public Optional<Object> maxConcurrentConnections() {
        return Optional.ofNullable(this.maxConcurrentConnections);
    }
    /**
     * @return Source retry count. Type: integer (or Expression with resultType integer).
     * 
     */
    public Optional<Object> sourceRetryCount() {
        return Optional.ofNullable(this.sourceRetryCount);
    }
    /**
     * @return Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
     * 
     */
    public Optional<Object> sourceRetryWait() {
        return Optional.ofNullable(this.sourceRetryWait);
    }
    /**
     * @return Excel store settings.
     * 
     */
    public Optional<Object> storeSettings() {
        return Optional.ofNullable(this.storeSettings);
    }
    /**
     * @return Copy source type.
     * Expected value is &#39;ExcelSource&#39;.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ExcelSourceResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Object additionalColumns;
        private @Nullable Object disableMetricsCollection;
        private @Nullable Object maxConcurrentConnections;
        private @Nullable Object sourceRetryCount;
        private @Nullable Object sourceRetryWait;
        private @Nullable Object storeSettings;
        private String type;
        public Builder() {}
        public Builder(ExcelSourceResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.additionalColumns = defaults.additionalColumns;
    	      this.disableMetricsCollection = defaults.disableMetricsCollection;
    	      this.maxConcurrentConnections = defaults.maxConcurrentConnections;
    	      this.sourceRetryCount = defaults.sourceRetryCount;
    	      this.sourceRetryWait = defaults.sourceRetryWait;
    	      this.storeSettings = defaults.storeSettings;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder additionalColumns(@Nullable Object additionalColumns) {
            this.additionalColumns = additionalColumns;
            return this;
        }
        @CustomType.Setter
        public Builder disableMetricsCollection(@Nullable Object disableMetricsCollection) {
            this.disableMetricsCollection = disableMetricsCollection;
            return this;
        }
        @CustomType.Setter
        public Builder maxConcurrentConnections(@Nullable Object maxConcurrentConnections) {
            this.maxConcurrentConnections = maxConcurrentConnections;
            return this;
        }
        @CustomType.Setter
        public Builder sourceRetryCount(@Nullable Object sourceRetryCount) {
            this.sourceRetryCount = sourceRetryCount;
            return this;
        }
        @CustomType.Setter
        public Builder sourceRetryWait(@Nullable Object sourceRetryWait) {
            this.sourceRetryWait = sourceRetryWait;
            return this;
        }
        @CustomType.Setter
        public Builder storeSettings(@Nullable Object storeSettings) {
            this.storeSettings = storeSettings;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public ExcelSourceResponse build() {
            final var o = new ExcelSourceResponse();
            o.additionalColumns = additionalColumns;
            o.disableMetricsCollection = disableMetricsCollection;
            o.maxConcurrentConnections = maxConcurrentConnections;
            o.sourceRetryCount = sourceRetryCount;
            o.sourceRetryWait = sourceRetryWait;
            o.storeSettings = storeSettings;
            o.type = type;
            return o;
        }
    }
}
