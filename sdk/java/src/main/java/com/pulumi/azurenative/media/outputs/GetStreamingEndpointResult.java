// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.media.outputs;

import com.pulumi.azurenative.media.outputs.CrossSiteAccessPoliciesResponse;
import com.pulumi.azurenative.media.outputs.StreamingEndpointAccessControlResponse;
import com.pulumi.azurenative.media.outputs.SystemDataResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetStreamingEndpointResult {
    /**
     * @return The access control definition of the streaming endpoint.
     * 
     */
    private @Nullable StreamingEndpointAccessControlResponse accessControl;
    /**
     * @return This feature is deprecated, do not set a value for this property.
     * 
     */
    private @Nullable String availabilitySetName;
    /**
     * @return The CDN enabled flag.
     * 
     */
    private @Nullable Boolean cdnEnabled;
    /**
     * @return The CDN profile name.
     * 
     */
    private @Nullable String cdnProfile;
    /**
     * @return The CDN provider name.
     * 
     */
    private @Nullable String cdnProvider;
    /**
     * @return The exact time the streaming endpoint was created.
     * 
     */
    private String created;
    /**
     * @return The streaming endpoint access policies.
     * 
     */
    private @Nullable CrossSiteAccessPoliciesResponse crossSiteAccessPolicies;
    /**
     * @return The custom host names of the streaming endpoint
     * 
     */
    private @Nullable List<String> customHostNames;
    /**
     * @return The streaming endpoint description.
     * 
     */
    private @Nullable String description;
    /**
     * @return The free trial expiration time.
     * 
     */
    private String freeTrialEndTime;
    /**
     * @return The streaming endpoint host name.
     * 
     */
    private String hostName;
    /**
     * @return Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    private String id;
    /**
     * @return The exact time the streaming endpoint was last modified.
     * 
     */
    private String lastModified;
    /**
     * @return The geo-location where the resource lives
     * 
     */
    private String location;
    /**
     * @return Max cache age
     * 
     */
    private @Nullable Double maxCacheAge;
    /**
     * @return The name of the resource
     * 
     */
    private String name;
    /**
     * @return The provisioning state of the streaming endpoint.
     * 
     */
    private String provisioningState;
    /**
     * @return The resource state of the streaming endpoint.
     * 
     */
    private String resourceState;
    /**
     * @return The number of scale units. Use the Scale operation to adjust this value.
     * 
     */
    private Integer scaleUnits;
    /**
     * @return The system metadata relating to this resource.
     * 
     */
    private SystemDataResponse systemData;
    /**
     * @return Resource tags.
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    private String type;

    private GetStreamingEndpointResult() {}
    /**
     * @return The access control definition of the streaming endpoint.
     * 
     */
    public Optional<StreamingEndpointAccessControlResponse> accessControl() {
        return Optional.ofNullable(this.accessControl);
    }
    /**
     * @return This feature is deprecated, do not set a value for this property.
     * 
     */
    public Optional<String> availabilitySetName() {
        return Optional.ofNullable(this.availabilitySetName);
    }
    /**
     * @return The CDN enabled flag.
     * 
     */
    public Optional<Boolean> cdnEnabled() {
        return Optional.ofNullable(this.cdnEnabled);
    }
    /**
     * @return The CDN profile name.
     * 
     */
    public Optional<String> cdnProfile() {
        return Optional.ofNullable(this.cdnProfile);
    }
    /**
     * @return The CDN provider name.
     * 
     */
    public Optional<String> cdnProvider() {
        return Optional.ofNullable(this.cdnProvider);
    }
    /**
     * @return The exact time the streaming endpoint was created.
     * 
     */
    public String created() {
        return this.created;
    }
    /**
     * @return The streaming endpoint access policies.
     * 
     */
    public Optional<CrossSiteAccessPoliciesResponse> crossSiteAccessPolicies() {
        return Optional.ofNullable(this.crossSiteAccessPolicies);
    }
    /**
     * @return The custom host names of the streaming endpoint
     * 
     */
    public List<String> customHostNames() {
        return this.customHostNames == null ? List.of() : this.customHostNames;
    }
    /**
     * @return The streaming endpoint description.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return The free trial expiration time.
     * 
     */
    public String freeTrialEndTime() {
        return this.freeTrialEndTime;
    }
    /**
     * @return The streaming endpoint host name.
     * 
     */
    public String hostName() {
        return this.hostName;
    }
    /**
     * @return Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The exact time the streaming endpoint was last modified.
     * 
     */
    public String lastModified() {
        return this.lastModified;
    }
    /**
     * @return The geo-location where the resource lives
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return Max cache age
     * 
     */
    public Optional<Double> maxCacheAge() {
        return Optional.ofNullable(this.maxCacheAge);
    }
    /**
     * @return The name of the resource
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The provisioning state of the streaming endpoint.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * @return The resource state of the streaming endpoint.
     * 
     */
    public String resourceState() {
        return this.resourceState;
    }
    /**
     * @return The number of scale units. Use the Scale operation to adjust this value.
     * 
     */
    public Integer scaleUnits() {
        return this.scaleUnits;
    }
    /**
     * @return The system metadata relating to this resource.
     * 
     */
    public SystemDataResponse systemData() {
        return this.systemData;
    }
    /**
     * @return Resource tags.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetStreamingEndpointResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable StreamingEndpointAccessControlResponse accessControl;
        private @Nullable String availabilitySetName;
        private @Nullable Boolean cdnEnabled;
        private @Nullable String cdnProfile;
        private @Nullable String cdnProvider;
        private String created;
        private @Nullable CrossSiteAccessPoliciesResponse crossSiteAccessPolicies;
        private @Nullable List<String> customHostNames;
        private @Nullable String description;
        private String freeTrialEndTime;
        private String hostName;
        private String id;
        private String lastModified;
        private String location;
        private @Nullable Double maxCacheAge;
        private String name;
        private String provisioningState;
        private String resourceState;
        private Integer scaleUnits;
        private SystemDataResponse systemData;
        private @Nullable Map<String,String> tags;
        private String type;
        public Builder() {}
        public Builder(GetStreamingEndpointResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessControl = defaults.accessControl;
    	      this.availabilitySetName = defaults.availabilitySetName;
    	      this.cdnEnabled = defaults.cdnEnabled;
    	      this.cdnProfile = defaults.cdnProfile;
    	      this.cdnProvider = defaults.cdnProvider;
    	      this.created = defaults.created;
    	      this.crossSiteAccessPolicies = defaults.crossSiteAccessPolicies;
    	      this.customHostNames = defaults.customHostNames;
    	      this.description = defaults.description;
    	      this.freeTrialEndTime = defaults.freeTrialEndTime;
    	      this.hostName = defaults.hostName;
    	      this.id = defaults.id;
    	      this.lastModified = defaults.lastModified;
    	      this.location = defaults.location;
    	      this.maxCacheAge = defaults.maxCacheAge;
    	      this.name = defaults.name;
    	      this.provisioningState = defaults.provisioningState;
    	      this.resourceState = defaults.resourceState;
    	      this.scaleUnits = defaults.scaleUnits;
    	      this.systemData = defaults.systemData;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder accessControl(@Nullable StreamingEndpointAccessControlResponse accessControl) {
            this.accessControl = accessControl;
            return this;
        }
        @CustomType.Setter
        public Builder availabilitySetName(@Nullable String availabilitySetName) {
            this.availabilitySetName = availabilitySetName;
            return this;
        }
        @CustomType.Setter
        public Builder cdnEnabled(@Nullable Boolean cdnEnabled) {
            this.cdnEnabled = cdnEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder cdnProfile(@Nullable String cdnProfile) {
            this.cdnProfile = cdnProfile;
            return this;
        }
        @CustomType.Setter
        public Builder cdnProvider(@Nullable String cdnProvider) {
            this.cdnProvider = cdnProvider;
            return this;
        }
        @CustomType.Setter
        public Builder created(String created) {
            this.created = Objects.requireNonNull(created);
            return this;
        }
        @CustomType.Setter
        public Builder crossSiteAccessPolicies(@Nullable CrossSiteAccessPoliciesResponse crossSiteAccessPolicies) {
            this.crossSiteAccessPolicies = crossSiteAccessPolicies;
            return this;
        }
        @CustomType.Setter
        public Builder customHostNames(@Nullable List<String> customHostNames) {
            this.customHostNames = customHostNames;
            return this;
        }
        public Builder customHostNames(String... customHostNames) {
            return customHostNames(List.of(customHostNames));
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder freeTrialEndTime(String freeTrialEndTime) {
            this.freeTrialEndTime = Objects.requireNonNull(freeTrialEndTime);
            return this;
        }
        @CustomType.Setter
        public Builder hostName(String hostName) {
            this.hostName = Objects.requireNonNull(hostName);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder lastModified(String lastModified) {
            this.lastModified = Objects.requireNonNull(lastModified);
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        @CustomType.Setter
        public Builder maxCacheAge(@Nullable Double maxCacheAge) {
            this.maxCacheAge = maxCacheAge;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        @CustomType.Setter
        public Builder resourceState(String resourceState) {
            this.resourceState = Objects.requireNonNull(resourceState);
            return this;
        }
        @CustomType.Setter
        public Builder scaleUnits(Integer scaleUnits) {
            this.scaleUnits = Objects.requireNonNull(scaleUnits);
            return this;
        }
        @CustomType.Setter
        public Builder systemData(SystemDataResponse systemData) {
            this.systemData = Objects.requireNonNull(systemData);
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetStreamingEndpointResult build() {
            final var o = new GetStreamingEndpointResult();
            o.accessControl = accessControl;
            o.availabilitySetName = availabilitySetName;
            o.cdnEnabled = cdnEnabled;
            o.cdnProfile = cdnProfile;
            o.cdnProvider = cdnProvider;
            o.created = created;
            o.crossSiteAccessPolicies = crossSiteAccessPolicies;
            o.customHostNames = customHostNames;
            o.description = description;
            o.freeTrialEndTime = freeTrialEndTime;
            o.hostName = hostName;
            o.id = id;
            o.lastModified = lastModified;
            o.location = location;
            o.maxCacheAge = maxCacheAge;
            o.name = name;
            o.provisioningState = provisioningState;
            o.resourceState = resourceState;
            o.scaleUnits = scaleUnits;
            o.systemData = systemData;
            o.tags = tags;
            o.type = type;
            return o;
        }
    }
}
