// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.workloads.outputs;

import com.pulumi.azurenative.workloads.outputs.VirtualMachineConfigurationResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class CentralServerConfigurationResponse {
    /**
     * @return The number of central server VMs.
     * 
     */
    private Double instanceCount;
    /**
     * @return The subnet id.
     * 
     */
    private String subnetId;
    /**
     * @return Gets or sets the virtual machine configuration.
     * 
     */
    private VirtualMachineConfigurationResponse virtualMachineConfiguration;

    private CentralServerConfigurationResponse() {}
    /**
     * @return The number of central server VMs.
     * 
     */
    public Double instanceCount() {
        return this.instanceCount;
    }
    /**
     * @return The subnet id.
     * 
     */
    public String subnetId() {
        return this.subnetId;
    }
    /**
     * @return Gets or sets the virtual machine configuration.
     * 
     */
    public VirtualMachineConfigurationResponse virtualMachineConfiguration() {
        return this.virtualMachineConfiguration;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CentralServerConfigurationResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Double instanceCount;
        private String subnetId;
        private VirtualMachineConfigurationResponse virtualMachineConfiguration;
        public Builder() {}
        public Builder(CentralServerConfigurationResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.instanceCount = defaults.instanceCount;
    	      this.subnetId = defaults.subnetId;
    	      this.virtualMachineConfiguration = defaults.virtualMachineConfiguration;
        }

        @CustomType.Setter
        public Builder instanceCount(Double instanceCount) {
            this.instanceCount = Objects.requireNonNull(instanceCount);
            return this;
        }
        @CustomType.Setter
        public Builder subnetId(String subnetId) {
            this.subnetId = Objects.requireNonNull(subnetId);
            return this;
        }
        @CustomType.Setter
        public Builder virtualMachineConfiguration(VirtualMachineConfigurationResponse virtualMachineConfiguration) {
            this.virtualMachineConfiguration = Objects.requireNonNull(virtualMachineConfiguration);
            return this;
        }
        public CentralServerConfigurationResponse build() {
            final var o = new CentralServerConfigurationResponse();
            o.instanceCount = instanceCount;
            o.subnetId = subnetId;
            o.virtualMachineConfiguration = virtualMachineConfiguration;
            return o;
        }
    }
}
