// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.media;

import com.pulumi.azurenative.Utilities;
import com.pulumi.azurenative.media.ContentKeyPolicyArgs;
import com.pulumi.azurenative.media.outputs.ContentKeyPolicyOptionResponse;
import com.pulumi.azurenative.media.outputs.SystemDataResponse;
import com.pulumi.core.Alias;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * A Content Key Policy resource.
 * API Version: 2020-05-01.
 * 
 * ## Example Usage
 * ### Creates a Content Key Policy with ClearKey option and Token Restriction
 * 
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var contentKeyPolicy = new ContentKeyPolicy(&#34;contentKeyPolicy&#34;, ContentKeyPolicyArgs.builder()        
 *             .accountName(&#34;contosomedia&#34;)
 *             .contentKeyPolicyName(&#34;PolicyWithClearKeyOptionAndSwtTokenRestriction&#34;)
 *             .description(&#34;ArmPolicyDescription&#34;)
 *             .options(Map.ofEntries(
 *                 Map.entry(&#34;configuration&#34;, Map.of(&#34;odataType&#34;, &#34;#Microsoft.Media.ContentKeyPolicyClearKeyConfiguration&#34;)),
 *                 Map.entry(&#34;name&#34;, &#34;ClearKeyOption&#34;),
 *                 Map.entry(&#34;restriction&#34;, Map.ofEntries(
 *                     Map.entry(&#34;audience&#34;, &#34;urn:audience&#34;),
 *                     Map.entry(&#34;issuer&#34;, &#34;urn:issuer&#34;),
 *                     Map.entry(&#34;odataType&#34;, &#34;#Microsoft.Media.ContentKeyPolicyTokenRestriction&#34;),
 *                     Map.entry(&#34;primaryVerificationKey&#34;, Map.ofEntries(
 *                         Map.entry(&#34;keyValue&#34;, &#34;AAAAAAAAAAAAAAAAAAAAAA==&#34;),
 *                         Map.entry(&#34;odataType&#34;, &#34;#Microsoft.Media.ContentKeyPolicySymmetricTokenKey&#34;)
 *                     )),
 *                     Map.entry(&#34;restrictionTokenType&#34;, &#34;Swt&#34;)
 *                 ))
 *             ))
 *             .resourceGroupName(&#34;contoso&#34;)
 *             .build());
 * 
 *     }
 * }
 * 
 * ```
 * ### Creates a Content Key Policy with PlayReady option and Open Restriction
 * 
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var contentKeyPolicy = new ContentKeyPolicy(&#34;contentKeyPolicy&#34;, ContentKeyPolicyArgs.builder()        
 *             .accountName(&#34;contosomedia&#34;)
 *             .contentKeyPolicyName(&#34;PolicyWithPlayReadyOptionAndOpenRestriction&#34;)
 *             .description(&#34;ArmPolicyDescription&#34;)
 *             .options(Map.ofEntries(
 *                 Map.entry(&#34;configuration&#34;, Map.ofEntries(
 *                     Map.entry(&#34;licenses&#34;, Map.ofEntries(
 *                         Map.entry(&#34;allowTestDevices&#34;, true),
 *                         Map.entry(&#34;beginDate&#34;, &#34;2017-10-16T18:22:53.46Z&#34;),
 *                         Map.entry(&#34;contentKeyLocation&#34;, Map.of(&#34;odataType&#34;, &#34;#Microsoft.Media.ContentKeyPolicyPlayReadyContentEncryptionKeyFromHeader&#34;)),
 *                         Map.entry(&#34;contentType&#34;, &#34;UltraVioletDownload&#34;),
 *                         Map.entry(&#34;licenseType&#34;, &#34;Persistent&#34;),
 *                         Map.entry(&#34;playRight&#34;, Map.ofEntries(
 *                             Map.entry(&#34;allowPassingVideoContentToUnknownOutput&#34;, &#34;NotAllowed&#34;),
 *                             Map.entry(&#34;digitalVideoOnlyContentRestriction&#34;, false),
 *                             Map.entry(&#34;imageConstraintForAnalogComponentVideoRestriction&#34;, true),
 *                             Map.entry(&#34;imageConstraintForAnalogComputerMonitorRestriction&#34;, false),
 *                             Map.entry(&#34;scmsRestriction&#34;, 2)
 *                         ))
 *                     )),
 *                     Map.entry(&#34;odataType&#34;, &#34;#Microsoft.Media.ContentKeyPolicyPlayReadyConfiguration&#34;)
 *                 )),
 *                 Map.entry(&#34;name&#34;, &#34;ArmPolicyOptionName&#34;),
 *                 Map.entry(&#34;restriction&#34;, Map.of(&#34;odataType&#34;, &#34;#Microsoft.Media.ContentKeyPolicyOpenRestriction&#34;))
 *             ))
 *             .resourceGroupName(&#34;contoso&#34;)
 *             .build());
 * 
 *     }
 * }
 * 
 * ```
 * ### Creates a Content Key Policy with Widevine option and Token Restriction
 * 
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var contentKeyPolicy = new ContentKeyPolicy(&#34;contentKeyPolicy&#34;, ContentKeyPolicyArgs.builder()        
 *             .accountName(&#34;contosomedia&#34;)
 *             .contentKeyPolicyName(&#34;PolicyWithWidevineOptionAndJwtTokenRestriction&#34;)
 *             .description(&#34;ArmPolicyDescription&#34;)
 *             .options(Map.ofEntries(
 *                 Map.entry(&#34;configuration&#34;, Map.ofEntries(
 *                     Map.entry(&#34;odataType&#34;, &#34;#Microsoft.Media.ContentKeyPolicyWidevineConfiguration&#34;),
 *                     Map.entry(&#34;widevineTemplate&#34;, &#34;{\&#34;allowed_track_types\&#34;:\&#34;SD_HD\&#34;,\&#34;content_key_specs\&#34;:[{\&#34;track_type\&#34;:\&#34;SD\&#34;,\&#34;security_level\&#34;:1,\&#34;required_output_protection\&#34;:{\&#34;hdcp\&#34;:\&#34;HDCP_V2\&#34;}}],\&#34;policy_overrides\&#34;:{\&#34;can_play\&#34;:true,\&#34;can_persist\&#34;:true,\&#34;can_renew\&#34;:false}}&#34;)
 *                 )),
 *                 Map.entry(&#34;name&#34;, &#34;widevineoption&#34;),
 *                 Map.entry(&#34;restriction&#34;, Map.ofEntries(
 *                     Map.entry(&#34;alternateVerificationKeys&#34;, Map.ofEntries(
 *                         Map.entry(&#34;keyValue&#34;, &#34;AAAAAAAAAAAAAAAAAAAAAA==&#34;),
 *                         Map.entry(&#34;odataType&#34;, &#34;#Microsoft.Media.ContentKeyPolicySymmetricTokenKey&#34;)
 *                     )),
 *                     Map.entry(&#34;audience&#34;, &#34;urn:audience&#34;),
 *                     Map.entry(&#34;issuer&#34;, &#34;urn:issuer&#34;),
 *                     Map.entry(&#34;odataType&#34;, &#34;#Microsoft.Media.ContentKeyPolicyTokenRestriction&#34;),
 *                     Map.entry(&#34;primaryVerificationKey&#34;, Map.ofEntries(
 *                         Map.entry(&#34;exponent&#34;, &#34;AQAB&#34;),
 *                         Map.entry(&#34;modulus&#34;, &#34;AQAD&#34;),
 *                         Map.entry(&#34;odataType&#34;, &#34;#Microsoft.Media.ContentKeyPolicyRsaTokenKey&#34;)
 *                     )),
 *                     Map.entry(&#34;restrictionTokenType&#34;, &#34;Jwt&#34;)
 *                 ))
 *             ))
 *             .resourceGroupName(&#34;contoso&#34;)
 *             .build());
 * 
 *     }
 * }
 * 
 * ```
 * ### Creates a Content Key Policy with multiple options
 * 
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var contentKeyPolicy = new ContentKeyPolicy(&#34;contentKeyPolicy&#34;, ContentKeyPolicyArgs.builder()        
 *             .accountName(&#34;contosomedia&#34;)
 *             .contentKeyPolicyName(&#34;PolicyCreatedWithMultipleOptions&#34;)
 *             .description(&#34;ArmPolicyDescription&#34;)
 *             .options(            
 *                 Map.ofEntries(
 *                     Map.entry(&#34;configuration&#34;, Map.of(&#34;odataType&#34;, &#34;#Microsoft.Media.ContentKeyPolicyClearKeyConfiguration&#34;)),
 *                     Map.entry(&#34;name&#34;, &#34;ClearKeyOption&#34;),
 *                     Map.entry(&#34;restriction&#34;, Map.ofEntries(
 *                         Map.entry(&#34;audience&#34;, &#34;urn:audience&#34;),
 *                         Map.entry(&#34;issuer&#34;, &#34;urn:issuer&#34;),
 *                         Map.entry(&#34;odataType&#34;, &#34;#Microsoft.Media.ContentKeyPolicyTokenRestriction&#34;),
 *                         Map.entry(&#34;primaryVerificationKey&#34;, Map.ofEntries(
 *                             Map.entry(&#34;keyValue&#34;, &#34;AAAAAAAAAAAAAAAAAAAAAA==&#34;),
 *                             Map.entry(&#34;odataType&#34;, &#34;#Microsoft.Media.ContentKeyPolicySymmetricTokenKey&#34;)
 *                         )),
 *                         Map.entry(&#34;restrictionTokenType&#34;, &#34;Swt&#34;)
 *                     ))
 *                 ),
 *                 Map.ofEntries(
 *                     Map.entry(&#34;configuration&#34;, Map.ofEntries(
 *                         Map.entry(&#34;odataType&#34;, &#34;#Microsoft.Media.ContentKeyPolicyWidevineConfiguration&#34;),
 *                         Map.entry(&#34;widevineTemplate&#34;, &#34;{\&#34;allowed_track_types\&#34;:\&#34;SD_HD\&#34;,\&#34;content_key_specs\&#34;:[{\&#34;track_type\&#34;:\&#34;SD\&#34;,\&#34;security_level\&#34;:1,\&#34;required_output_protection\&#34;:{\&#34;hdcp\&#34;:\&#34;HDCP_V2\&#34;}}],\&#34;policy_overrides\&#34;:{\&#34;can_play\&#34;:true,\&#34;can_persist\&#34;:true,\&#34;can_renew\&#34;:false}}&#34;)
 *                     )),
 *                     Map.entry(&#34;name&#34;, &#34;widevineoption&#34;),
 *                     Map.entry(&#34;restriction&#34;, Map.of(&#34;odataType&#34;, &#34;#Microsoft.Media.ContentKeyPolicyOpenRestriction&#34;))
 *                 ))
 *             .resourceGroupName(&#34;contoso&#34;)
 *             .build());
 * 
 *     }
 * }
 * 
 * ```
 * 
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:media:ContentKeyPolicy PolicyCreatedWithMultipleOptions /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contoso/providers/Microsoft.Media/mediaservices/contosomedia/contentKeyPolicies/PolicyCreatedWithMultipleOptions 
 * ```
 * 
 */
@ResourceType(type="azure-native:media:ContentKeyPolicy")
public class ContentKeyPolicy extends com.pulumi.resources.CustomResource {
    /**
     * The creation date of the Policy
     * 
     */
    @Export(name="created", type=String.class, parameters={})
    private Output<String> created;

    /**
     * @return The creation date of the Policy
     * 
     */
    public Output<String> created() {
        return this.created;
    }
    /**
     * A description for the Policy.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return A description for the Policy.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * The last modified date of the Policy
     * 
     */
    @Export(name="lastModified", type=String.class, parameters={})
    private Output<String> lastModified;

    /**
     * @return The last modified date of the Policy
     * 
     */
    public Output<String> lastModified() {
        return this.lastModified;
    }
    /**
     * The name of the resource
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the resource
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The Key Policy options.
     * 
     */
    @Export(name="options", type=List.class, parameters={ContentKeyPolicyOptionResponse.class})
    private Output<List<ContentKeyPolicyOptionResponse>> options;

    /**
     * @return The Key Policy options.
     * 
     */
    public Output<List<ContentKeyPolicyOptionResponse>> options() {
        return this.options;
    }
    /**
     * The legacy Policy ID.
     * 
     */
    @Export(name="policyId", type=String.class, parameters={})
    private Output<String> policyId;

    /**
     * @return The legacy Policy ID.
     * 
     */
    public Output<String> policyId() {
        return this.policyId;
    }
    /**
     * The system metadata relating to this resource.
     * 
     */
    @Export(name="systemData", type=SystemDataResponse.class, parameters={})
    private Output<SystemDataResponse> systemData;

    /**
     * @return The system metadata relating to this resource.
     * 
     */
    public Output<SystemDataResponse> systemData() {
        return this.systemData;
    }
    /**
     * The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ContentKeyPolicy(String name) {
        this(name, ContentKeyPolicyArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ContentKeyPolicy(String name, ContentKeyPolicyArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ContentKeyPolicy(String name, ContentKeyPolicyArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:media:ContentKeyPolicy", name, args == null ? ContentKeyPolicyArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ContentKeyPolicy(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:media:ContentKeyPolicy", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("azure-native:media/v20180330preview:ContentKeyPolicy").build()),
                Output.of(Alias.builder().type("azure-native:media/v20180601preview:ContentKeyPolicy").build()),
                Output.of(Alias.builder().type("azure-native:media/v20180701:ContentKeyPolicy").build()),
                Output.of(Alias.builder().type("azure-native:media/v20200501:ContentKeyPolicy").build()),
                Output.of(Alias.builder().type("azure-native:media/v20210601:ContentKeyPolicy").build()),
                Output.of(Alias.builder().type("azure-native:media/v20211101:ContentKeyPolicy").build())
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ContentKeyPolicy get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ContentKeyPolicy(name, id, options);
    }
}
