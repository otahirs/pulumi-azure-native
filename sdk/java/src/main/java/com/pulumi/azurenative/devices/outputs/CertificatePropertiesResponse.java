// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.devices.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class CertificatePropertiesResponse {
    /**
     * @return base-64 representation of X509 certificate .cer file or just .pem file content.
     * 
     */
    private String certificate;
    /**
     * @return The certificate&#39;s creation date and time.
     * 
     */
    private String created;
    /**
     * @return The certificate&#39;s expiration date and time.
     * 
     */
    private String expiry;
    /**
     * @return Determines whether certificate has been verified.
     * 
     */
    private Boolean isVerified;
    /**
     * @return The certificate&#39;s subject name.
     * 
     */
    private String subject;
    /**
     * @return The certificate&#39;s thumbprint.
     * 
     */
    private String thumbprint;
    /**
     * @return The certificate&#39;s last update date and time.
     * 
     */
    private String updated;

    private CertificatePropertiesResponse() {}
    /**
     * @return base-64 representation of X509 certificate .cer file or just .pem file content.
     * 
     */
    public String certificate() {
        return this.certificate;
    }
    /**
     * @return The certificate&#39;s creation date and time.
     * 
     */
    public String created() {
        return this.created;
    }
    /**
     * @return The certificate&#39;s expiration date and time.
     * 
     */
    public String expiry() {
        return this.expiry;
    }
    /**
     * @return Determines whether certificate has been verified.
     * 
     */
    public Boolean isVerified() {
        return this.isVerified;
    }
    /**
     * @return The certificate&#39;s subject name.
     * 
     */
    public String subject() {
        return this.subject;
    }
    /**
     * @return The certificate&#39;s thumbprint.
     * 
     */
    public String thumbprint() {
        return this.thumbprint;
    }
    /**
     * @return The certificate&#39;s last update date and time.
     * 
     */
    public String updated() {
        return this.updated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CertificatePropertiesResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String certificate;
        private String created;
        private String expiry;
        private Boolean isVerified;
        private String subject;
        private String thumbprint;
        private String updated;
        public Builder() {}
        public Builder(CertificatePropertiesResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.certificate = defaults.certificate;
    	      this.created = defaults.created;
    	      this.expiry = defaults.expiry;
    	      this.isVerified = defaults.isVerified;
    	      this.subject = defaults.subject;
    	      this.thumbprint = defaults.thumbprint;
    	      this.updated = defaults.updated;
        }

        @CustomType.Setter
        public Builder certificate(String certificate) {
            this.certificate = Objects.requireNonNull(certificate);
            return this;
        }
        @CustomType.Setter
        public Builder created(String created) {
            this.created = Objects.requireNonNull(created);
            return this;
        }
        @CustomType.Setter
        public Builder expiry(String expiry) {
            this.expiry = Objects.requireNonNull(expiry);
            return this;
        }
        @CustomType.Setter
        public Builder isVerified(Boolean isVerified) {
            this.isVerified = Objects.requireNonNull(isVerified);
            return this;
        }
        @CustomType.Setter
        public Builder subject(String subject) {
            this.subject = Objects.requireNonNull(subject);
            return this;
        }
        @CustomType.Setter
        public Builder thumbprint(String thumbprint) {
            this.thumbprint = Objects.requireNonNull(thumbprint);
            return this;
        }
        @CustomType.Setter
        public Builder updated(String updated) {
            this.updated = Objects.requireNonNull(updated);
            return this;
        }
        public CertificatePropertiesResponse build() {
            final var o = new CertificatePropertiesResponse();
            o.certificate = certificate;
            o.created = created;
            o.expiry = expiry;
            o.isVerified = isVerified;
            o.subject = subject;
            o.thumbprint = thumbprint;
            o.updated = updated;
            return o;
        }
    }
}
