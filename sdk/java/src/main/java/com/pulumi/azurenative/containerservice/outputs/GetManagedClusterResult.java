// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.containerservice.outputs;

import com.pulumi.azurenative.containerservice.outputs.ContainerServiceLinuxProfileResponse;
import com.pulumi.azurenative.containerservice.outputs.ContainerServiceNetworkProfileResponse;
import com.pulumi.azurenative.containerservice.outputs.ExtendedLocationResponse;
import com.pulumi.azurenative.containerservice.outputs.ManagedClusterAADProfileResponse;
import com.pulumi.azurenative.containerservice.outputs.ManagedClusterAPIServerAccessProfileResponse;
import com.pulumi.azurenative.containerservice.outputs.ManagedClusterAddonProfileResponse;
import com.pulumi.azurenative.containerservice.outputs.ManagedClusterAgentPoolProfileResponse;
import com.pulumi.azurenative.containerservice.outputs.ManagedClusterAutoUpgradeProfileResponse;
import com.pulumi.azurenative.containerservice.outputs.ManagedClusterHTTPProxyConfigResponse;
import com.pulumi.azurenative.containerservice.outputs.ManagedClusterIdentityResponse;
import com.pulumi.azurenative.containerservice.outputs.ManagedClusterPodIdentityProfileResponse;
import com.pulumi.azurenative.containerservice.outputs.ManagedClusterPropertiesResponseAutoScalerProfile;
import com.pulumi.azurenative.containerservice.outputs.ManagedClusterPropertiesResponseIdentityProfile;
import com.pulumi.azurenative.containerservice.outputs.ManagedClusterSKUResponse;
import com.pulumi.azurenative.containerservice.outputs.ManagedClusterServicePrincipalProfileResponse;
import com.pulumi.azurenative.containerservice.outputs.ManagedClusterWindowsProfileResponse;
import com.pulumi.azurenative.containerservice.outputs.PowerStateResponse;
import com.pulumi.azurenative.containerservice.outputs.PrivateLinkResourceResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetManagedClusterResult {
    /**
     * @return Profile of Azure Active Directory configuration.
     * 
     */
    private @Nullable ManagedClusterAADProfileResponse aadProfile;
    /**
     * @return Profile of managed cluster add-on.
     * 
     */
    private @Nullable Map<String,ManagedClusterAddonProfileResponse> addonProfiles;
    /**
     * @return Properties of the agent pool.
     * 
     */
    private @Nullable List<ManagedClusterAgentPoolProfileResponse> agentPoolProfiles;
    /**
     * @return Access profile for managed cluster API server.
     * 
     */
    private @Nullable ManagedClusterAPIServerAccessProfileResponse apiServerAccessProfile;
    /**
     * @return Parameters to be applied to the cluster-autoscaler when enabled
     * 
     */
    private @Nullable ManagedClusterPropertiesResponseAutoScalerProfile autoScalerProfile;
    /**
     * @return Profile of auto upgrade configuration.
     * 
     */
    private @Nullable ManagedClusterAutoUpgradeProfileResponse autoUpgradeProfile;
    /**
     * @return FQDN for the master pool which used by proxy config.
     * 
     */
    private String azurePortalFQDN;
    /**
     * @return If set to true, getting static credential will be disabled for this cluster. Expected to only be used for AAD clusters.
     * 
     */
    private @Nullable Boolean disableLocalAccounts;
    /**
     * @return ResourceId of the disk encryption set to use for enabling encryption at rest.
     * 
     */
    private @Nullable String diskEncryptionSetID;
    /**
     * @return DNS prefix specified when creating the managed cluster.
     * 
     */
    private @Nullable String dnsPrefix;
    /**
     * @return (DEPRECATING) Whether to enable Kubernetes pod security policy (preview). This feature is set for removal on October 15th, 2020. Learn more at aka.ms/aks/azpodpolicy.
     * 
     */
    private @Nullable Boolean enablePodSecurityPolicy;
    /**
     * @return Whether to enable Kubernetes Role-Based Access Control.
     * 
     */
    private @Nullable Boolean enableRBAC;
    /**
     * @return The extended location of the Virtual Machine.
     * 
     */
    private @Nullable ExtendedLocationResponse extendedLocation;
    /**
     * @return FQDN for the master pool.
     * 
     */
    private String fqdn;
    /**
     * @return FQDN subdomain specified when creating private cluster with custom private dns zone.
     * 
     */
    private @Nullable String fqdnSubdomain;
    /**
     * @return Configurations for provisioning the cluster with HTTP proxy servers.
     * 
     */
    private @Nullable ManagedClusterHTTPProxyConfigResponse httpProxyConfig;
    /**
     * @return Resource Id
     * 
     */
    private String id;
    /**
     * @return The identity of the managed cluster, if configured.
     * 
     */
    private @Nullable ManagedClusterIdentityResponse identity;
    /**
     * @return Identities associated with the cluster.
     * 
     */
    private @Nullable Map<String,ManagedClusterPropertiesResponseIdentityProfile> identityProfile;
    /**
     * @return Version of Kubernetes specified when creating the managed cluster.
     * 
     */
    private @Nullable String kubernetesVersion;
    /**
     * @return Profile for Linux VMs in the container service cluster.
     * 
     */
    private @Nullable ContainerServiceLinuxProfileResponse linuxProfile;
    /**
     * @return Resource location
     * 
     */
    private String location;
    /**
     * @return The max number of agent pools for the managed cluster.
     * 
     */
    private Integer maxAgentPools;
    /**
     * @return Resource name
     * 
     */
    private String name;
    /**
     * @return Profile of network configuration.
     * 
     */
    private @Nullable ContainerServiceNetworkProfileResponse networkProfile;
    /**
     * @return Name of the resource group containing agent pool nodes.
     * 
     */
    private @Nullable String nodeResourceGroup;
    /**
     * @return Profile of managed cluster pod identity.
     * 
     */
    private @Nullable ManagedClusterPodIdentityProfileResponse podIdentityProfile;
    /**
     * @return Represents the Power State of the cluster
     * 
     */
    private PowerStateResponse powerState;
    /**
     * @return FQDN of private cluster.
     * 
     */
    private String privateFQDN;
    /**
     * @return Private link resources associated with the cluster.
     * 
     */
    private @Nullable List<PrivateLinkResourceResponse> privateLinkResources;
    /**
     * @return The current deployment or provisioning state, which only appears in the response.
     * 
     */
    private String provisioningState;
    /**
     * @return Information about a service principal identity for the cluster to use for manipulating Azure APIs.
     * 
     */
    private @Nullable ManagedClusterServicePrincipalProfileResponse servicePrincipalProfile;
    /**
     * @return The managed cluster SKU.
     * 
     */
    private @Nullable ManagedClusterSKUResponse sku;
    /**
     * @return Resource tags
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return Resource type
     * 
     */
    private String type;
    /**
     * @return Profile for Windows VMs in the container service cluster.
     * 
     */
    private @Nullable ManagedClusterWindowsProfileResponse windowsProfile;

    private GetManagedClusterResult() {}
    /**
     * @return Profile of Azure Active Directory configuration.
     * 
     */
    public Optional<ManagedClusterAADProfileResponse> aadProfile() {
        return Optional.ofNullable(this.aadProfile);
    }
    /**
     * @return Profile of managed cluster add-on.
     * 
     */
    public Map<String,ManagedClusterAddonProfileResponse> addonProfiles() {
        return this.addonProfiles == null ? Map.of() : this.addonProfiles;
    }
    /**
     * @return Properties of the agent pool.
     * 
     */
    public List<ManagedClusterAgentPoolProfileResponse> agentPoolProfiles() {
        return this.agentPoolProfiles == null ? List.of() : this.agentPoolProfiles;
    }
    /**
     * @return Access profile for managed cluster API server.
     * 
     */
    public Optional<ManagedClusterAPIServerAccessProfileResponse> apiServerAccessProfile() {
        return Optional.ofNullable(this.apiServerAccessProfile);
    }
    /**
     * @return Parameters to be applied to the cluster-autoscaler when enabled
     * 
     */
    public Optional<ManagedClusterPropertiesResponseAutoScalerProfile> autoScalerProfile() {
        return Optional.ofNullable(this.autoScalerProfile);
    }
    /**
     * @return Profile of auto upgrade configuration.
     * 
     */
    public Optional<ManagedClusterAutoUpgradeProfileResponse> autoUpgradeProfile() {
        return Optional.ofNullable(this.autoUpgradeProfile);
    }
    /**
     * @return FQDN for the master pool which used by proxy config.
     * 
     */
    public String azurePortalFQDN() {
        return this.azurePortalFQDN;
    }
    /**
     * @return If set to true, getting static credential will be disabled for this cluster. Expected to only be used for AAD clusters.
     * 
     */
    public Optional<Boolean> disableLocalAccounts() {
        return Optional.ofNullable(this.disableLocalAccounts);
    }
    /**
     * @return ResourceId of the disk encryption set to use for enabling encryption at rest.
     * 
     */
    public Optional<String> diskEncryptionSetID() {
        return Optional.ofNullable(this.diskEncryptionSetID);
    }
    /**
     * @return DNS prefix specified when creating the managed cluster.
     * 
     */
    public Optional<String> dnsPrefix() {
        return Optional.ofNullable(this.dnsPrefix);
    }
    /**
     * @return (DEPRECATING) Whether to enable Kubernetes pod security policy (preview). This feature is set for removal on October 15th, 2020. Learn more at aka.ms/aks/azpodpolicy.
     * 
     */
    public Optional<Boolean> enablePodSecurityPolicy() {
        return Optional.ofNullable(this.enablePodSecurityPolicy);
    }
    /**
     * @return Whether to enable Kubernetes Role-Based Access Control.
     * 
     */
    public Optional<Boolean> enableRBAC() {
        return Optional.ofNullable(this.enableRBAC);
    }
    /**
     * @return The extended location of the Virtual Machine.
     * 
     */
    public Optional<ExtendedLocationResponse> extendedLocation() {
        return Optional.ofNullable(this.extendedLocation);
    }
    /**
     * @return FQDN for the master pool.
     * 
     */
    public String fqdn() {
        return this.fqdn;
    }
    /**
     * @return FQDN subdomain specified when creating private cluster with custom private dns zone.
     * 
     */
    public Optional<String> fqdnSubdomain() {
        return Optional.ofNullable(this.fqdnSubdomain);
    }
    /**
     * @return Configurations for provisioning the cluster with HTTP proxy servers.
     * 
     */
    public Optional<ManagedClusterHTTPProxyConfigResponse> httpProxyConfig() {
        return Optional.ofNullable(this.httpProxyConfig);
    }
    /**
     * @return Resource Id
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The identity of the managed cluster, if configured.
     * 
     */
    public Optional<ManagedClusterIdentityResponse> identity() {
        return Optional.ofNullable(this.identity);
    }
    /**
     * @return Identities associated with the cluster.
     * 
     */
    public Map<String,ManagedClusterPropertiesResponseIdentityProfile> identityProfile() {
        return this.identityProfile == null ? Map.of() : this.identityProfile;
    }
    /**
     * @return Version of Kubernetes specified when creating the managed cluster.
     * 
     */
    public Optional<String> kubernetesVersion() {
        return Optional.ofNullable(this.kubernetesVersion);
    }
    /**
     * @return Profile for Linux VMs in the container service cluster.
     * 
     */
    public Optional<ContainerServiceLinuxProfileResponse> linuxProfile() {
        return Optional.ofNullable(this.linuxProfile);
    }
    /**
     * @return Resource location
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return The max number of agent pools for the managed cluster.
     * 
     */
    public Integer maxAgentPools() {
        return this.maxAgentPools;
    }
    /**
     * @return Resource name
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Profile of network configuration.
     * 
     */
    public Optional<ContainerServiceNetworkProfileResponse> networkProfile() {
        return Optional.ofNullable(this.networkProfile);
    }
    /**
     * @return Name of the resource group containing agent pool nodes.
     * 
     */
    public Optional<String> nodeResourceGroup() {
        return Optional.ofNullable(this.nodeResourceGroup);
    }
    /**
     * @return Profile of managed cluster pod identity.
     * 
     */
    public Optional<ManagedClusterPodIdentityProfileResponse> podIdentityProfile() {
        return Optional.ofNullable(this.podIdentityProfile);
    }
    /**
     * @return Represents the Power State of the cluster
     * 
     */
    public PowerStateResponse powerState() {
        return this.powerState;
    }
    /**
     * @return FQDN of private cluster.
     * 
     */
    public String privateFQDN() {
        return this.privateFQDN;
    }
    /**
     * @return Private link resources associated with the cluster.
     * 
     */
    public List<PrivateLinkResourceResponse> privateLinkResources() {
        return this.privateLinkResources == null ? List.of() : this.privateLinkResources;
    }
    /**
     * @return The current deployment or provisioning state, which only appears in the response.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * @return Information about a service principal identity for the cluster to use for manipulating Azure APIs.
     * 
     */
    public Optional<ManagedClusterServicePrincipalProfileResponse> servicePrincipalProfile() {
        return Optional.ofNullable(this.servicePrincipalProfile);
    }
    /**
     * @return The managed cluster SKU.
     * 
     */
    public Optional<ManagedClusterSKUResponse> sku() {
        return Optional.ofNullable(this.sku);
    }
    /**
     * @return Resource tags
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return Resource type
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return Profile for Windows VMs in the container service cluster.
     * 
     */
    public Optional<ManagedClusterWindowsProfileResponse> windowsProfile() {
        return Optional.ofNullable(this.windowsProfile);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetManagedClusterResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable ManagedClusterAADProfileResponse aadProfile;
        private @Nullable Map<String,ManagedClusterAddonProfileResponse> addonProfiles;
        private @Nullable List<ManagedClusterAgentPoolProfileResponse> agentPoolProfiles;
        private @Nullable ManagedClusterAPIServerAccessProfileResponse apiServerAccessProfile;
        private @Nullable ManagedClusterPropertiesResponseAutoScalerProfile autoScalerProfile;
        private @Nullable ManagedClusterAutoUpgradeProfileResponse autoUpgradeProfile;
        private String azurePortalFQDN;
        private @Nullable Boolean disableLocalAccounts;
        private @Nullable String diskEncryptionSetID;
        private @Nullable String dnsPrefix;
        private @Nullable Boolean enablePodSecurityPolicy;
        private @Nullable Boolean enableRBAC;
        private @Nullable ExtendedLocationResponse extendedLocation;
        private String fqdn;
        private @Nullable String fqdnSubdomain;
        private @Nullable ManagedClusterHTTPProxyConfigResponse httpProxyConfig;
        private String id;
        private @Nullable ManagedClusterIdentityResponse identity;
        private @Nullable Map<String,ManagedClusterPropertiesResponseIdentityProfile> identityProfile;
        private @Nullable String kubernetesVersion;
        private @Nullable ContainerServiceLinuxProfileResponse linuxProfile;
        private String location;
        private Integer maxAgentPools;
        private String name;
        private @Nullable ContainerServiceNetworkProfileResponse networkProfile;
        private @Nullable String nodeResourceGroup;
        private @Nullable ManagedClusterPodIdentityProfileResponse podIdentityProfile;
        private PowerStateResponse powerState;
        private String privateFQDN;
        private @Nullable List<PrivateLinkResourceResponse> privateLinkResources;
        private String provisioningState;
        private @Nullable ManagedClusterServicePrincipalProfileResponse servicePrincipalProfile;
        private @Nullable ManagedClusterSKUResponse sku;
        private @Nullable Map<String,String> tags;
        private String type;
        private @Nullable ManagedClusterWindowsProfileResponse windowsProfile;
        public Builder() {}
        public Builder(GetManagedClusterResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aadProfile = defaults.aadProfile;
    	      this.addonProfiles = defaults.addonProfiles;
    	      this.agentPoolProfiles = defaults.agentPoolProfiles;
    	      this.apiServerAccessProfile = defaults.apiServerAccessProfile;
    	      this.autoScalerProfile = defaults.autoScalerProfile;
    	      this.autoUpgradeProfile = defaults.autoUpgradeProfile;
    	      this.azurePortalFQDN = defaults.azurePortalFQDN;
    	      this.disableLocalAccounts = defaults.disableLocalAccounts;
    	      this.diskEncryptionSetID = defaults.diskEncryptionSetID;
    	      this.dnsPrefix = defaults.dnsPrefix;
    	      this.enablePodSecurityPolicy = defaults.enablePodSecurityPolicy;
    	      this.enableRBAC = defaults.enableRBAC;
    	      this.extendedLocation = defaults.extendedLocation;
    	      this.fqdn = defaults.fqdn;
    	      this.fqdnSubdomain = defaults.fqdnSubdomain;
    	      this.httpProxyConfig = defaults.httpProxyConfig;
    	      this.id = defaults.id;
    	      this.identity = defaults.identity;
    	      this.identityProfile = defaults.identityProfile;
    	      this.kubernetesVersion = defaults.kubernetesVersion;
    	      this.linuxProfile = defaults.linuxProfile;
    	      this.location = defaults.location;
    	      this.maxAgentPools = defaults.maxAgentPools;
    	      this.name = defaults.name;
    	      this.networkProfile = defaults.networkProfile;
    	      this.nodeResourceGroup = defaults.nodeResourceGroup;
    	      this.podIdentityProfile = defaults.podIdentityProfile;
    	      this.powerState = defaults.powerState;
    	      this.privateFQDN = defaults.privateFQDN;
    	      this.privateLinkResources = defaults.privateLinkResources;
    	      this.provisioningState = defaults.provisioningState;
    	      this.servicePrincipalProfile = defaults.servicePrincipalProfile;
    	      this.sku = defaults.sku;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
    	      this.windowsProfile = defaults.windowsProfile;
        }

        @CustomType.Setter
        public Builder aadProfile(@Nullable ManagedClusterAADProfileResponse aadProfile) {
            this.aadProfile = aadProfile;
            return this;
        }
        @CustomType.Setter
        public Builder addonProfiles(@Nullable Map<String,ManagedClusterAddonProfileResponse> addonProfiles) {
            this.addonProfiles = addonProfiles;
            return this;
        }
        @CustomType.Setter
        public Builder agentPoolProfiles(@Nullable List<ManagedClusterAgentPoolProfileResponse> agentPoolProfiles) {
            this.agentPoolProfiles = agentPoolProfiles;
            return this;
        }
        public Builder agentPoolProfiles(ManagedClusterAgentPoolProfileResponse... agentPoolProfiles) {
            return agentPoolProfiles(List.of(agentPoolProfiles));
        }
        @CustomType.Setter
        public Builder apiServerAccessProfile(@Nullable ManagedClusterAPIServerAccessProfileResponse apiServerAccessProfile) {
            this.apiServerAccessProfile = apiServerAccessProfile;
            return this;
        }
        @CustomType.Setter
        public Builder autoScalerProfile(@Nullable ManagedClusterPropertiesResponseAutoScalerProfile autoScalerProfile) {
            this.autoScalerProfile = autoScalerProfile;
            return this;
        }
        @CustomType.Setter
        public Builder autoUpgradeProfile(@Nullable ManagedClusterAutoUpgradeProfileResponse autoUpgradeProfile) {
            this.autoUpgradeProfile = autoUpgradeProfile;
            return this;
        }
        @CustomType.Setter
        public Builder azurePortalFQDN(String azurePortalFQDN) {
            this.azurePortalFQDN = Objects.requireNonNull(azurePortalFQDN);
            return this;
        }
        @CustomType.Setter
        public Builder disableLocalAccounts(@Nullable Boolean disableLocalAccounts) {
            this.disableLocalAccounts = disableLocalAccounts;
            return this;
        }
        @CustomType.Setter
        public Builder diskEncryptionSetID(@Nullable String diskEncryptionSetID) {
            this.diskEncryptionSetID = diskEncryptionSetID;
            return this;
        }
        @CustomType.Setter
        public Builder dnsPrefix(@Nullable String dnsPrefix) {
            this.dnsPrefix = dnsPrefix;
            return this;
        }
        @CustomType.Setter
        public Builder enablePodSecurityPolicy(@Nullable Boolean enablePodSecurityPolicy) {
            this.enablePodSecurityPolicy = enablePodSecurityPolicy;
            return this;
        }
        @CustomType.Setter
        public Builder enableRBAC(@Nullable Boolean enableRBAC) {
            this.enableRBAC = enableRBAC;
            return this;
        }
        @CustomType.Setter
        public Builder extendedLocation(@Nullable ExtendedLocationResponse extendedLocation) {
            this.extendedLocation = extendedLocation;
            return this;
        }
        @CustomType.Setter
        public Builder fqdn(String fqdn) {
            this.fqdn = Objects.requireNonNull(fqdn);
            return this;
        }
        @CustomType.Setter
        public Builder fqdnSubdomain(@Nullable String fqdnSubdomain) {
            this.fqdnSubdomain = fqdnSubdomain;
            return this;
        }
        @CustomType.Setter
        public Builder httpProxyConfig(@Nullable ManagedClusterHTTPProxyConfigResponse httpProxyConfig) {
            this.httpProxyConfig = httpProxyConfig;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder identity(@Nullable ManagedClusterIdentityResponse identity) {
            this.identity = identity;
            return this;
        }
        @CustomType.Setter
        public Builder identityProfile(@Nullable Map<String,ManagedClusterPropertiesResponseIdentityProfile> identityProfile) {
            this.identityProfile = identityProfile;
            return this;
        }
        @CustomType.Setter
        public Builder kubernetesVersion(@Nullable String kubernetesVersion) {
            this.kubernetesVersion = kubernetesVersion;
            return this;
        }
        @CustomType.Setter
        public Builder linuxProfile(@Nullable ContainerServiceLinuxProfileResponse linuxProfile) {
            this.linuxProfile = linuxProfile;
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        @CustomType.Setter
        public Builder maxAgentPools(Integer maxAgentPools) {
            this.maxAgentPools = Objects.requireNonNull(maxAgentPools);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder networkProfile(@Nullable ContainerServiceNetworkProfileResponse networkProfile) {
            this.networkProfile = networkProfile;
            return this;
        }
        @CustomType.Setter
        public Builder nodeResourceGroup(@Nullable String nodeResourceGroup) {
            this.nodeResourceGroup = nodeResourceGroup;
            return this;
        }
        @CustomType.Setter
        public Builder podIdentityProfile(@Nullable ManagedClusterPodIdentityProfileResponse podIdentityProfile) {
            this.podIdentityProfile = podIdentityProfile;
            return this;
        }
        @CustomType.Setter
        public Builder powerState(PowerStateResponse powerState) {
            this.powerState = Objects.requireNonNull(powerState);
            return this;
        }
        @CustomType.Setter
        public Builder privateFQDN(String privateFQDN) {
            this.privateFQDN = Objects.requireNonNull(privateFQDN);
            return this;
        }
        @CustomType.Setter
        public Builder privateLinkResources(@Nullable List<PrivateLinkResourceResponse> privateLinkResources) {
            this.privateLinkResources = privateLinkResources;
            return this;
        }
        public Builder privateLinkResources(PrivateLinkResourceResponse... privateLinkResources) {
            return privateLinkResources(List.of(privateLinkResources));
        }
        @CustomType.Setter
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        @CustomType.Setter
        public Builder servicePrincipalProfile(@Nullable ManagedClusterServicePrincipalProfileResponse servicePrincipalProfile) {
            this.servicePrincipalProfile = servicePrincipalProfile;
            return this;
        }
        @CustomType.Setter
        public Builder sku(@Nullable ManagedClusterSKUResponse sku) {
            this.sku = sku;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder windowsProfile(@Nullable ManagedClusterWindowsProfileResponse windowsProfile) {
            this.windowsProfile = windowsProfile;
            return this;
        }
        public GetManagedClusterResult build() {
            final var o = new GetManagedClusterResult();
            o.aadProfile = aadProfile;
            o.addonProfiles = addonProfiles;
            o.agentPoolProfiles = agentPoolProfiles;
            o.apiServerAccessProfile = apiServerAccessProfile;
            o.autoScalerProfile = autoScalerProfile;
            o.autoUpgradeProfile = autoUpgradeProfile;
            o.azurePortalFQDN = azurePortalFQDN;
            o.disableLocalAccounts = disableLocalAccounts;
            o.diskEncryptionSetID = diskEncryptionSetID;
            o.dnsPrefix = dnsPrefix;
            o.enablePodSecurityPolicy = enablePodSecurityPolicy;
            o.enableRBAC = enableRBAC;
            o.extendedLocation = extendedLocation;
            o.fqdn = fqdn;
            o.fqdnSubdomain = fqdnSubdomain;
            o.httpProxyConfig = httpProxyConfig;
            o.id = id;
            o.identity = identity;
            o.identityProfile = identityProfile;
            o.kubernetesVersion = kubernetesVersion;
            o.linuxProfile = linuxProfile;
            o.location = location;
            o.maxAgentPools = maxAgentPools;
            o.name = name;
            o.networkProfile = networkProfile;
            o.nodeResourceGroup = nodeResourceGroup;
            o.podIdentityProfile = podIdentityProfile;
            o.powerState = powerState;
            o.privateFQDN = privateFQDN;
            o.privateLinkResources = privateLinkResources;
            o.provisioningState = provisioningState;
            o.servicePrincipalProfile = servicePrincipalProfile;
            o.sku = sku;
            o.tags = tags;
            o.type = type;
            o.windowsProfile = windowsProfile;
            return o;
        }
    }
}
