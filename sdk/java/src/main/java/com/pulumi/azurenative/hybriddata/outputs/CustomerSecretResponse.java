// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.hybriddata.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class CustomerSecretResponse {
    /**
     * @return The encryption algorithm used to encrypt data.
     * 
     */
    private String algorithm;
    /**
     * @return The identifier to the data service input object which this secret corresponds to.
     * 
     */
    private String keyIdentifier;
    /**
     * @return It contains the encrypted customer secret.
     * 
     */
    private String keyValue;

    private CustomerSecretResponse() {}
    /**
     * @return The encryption algorithm used to encrypt data.
     * 
     */
    public String algorithm() {
        return this.algorithm;
    }
    /**
     * @return The identifier to the data service input object which this secret corresponds to.
     * 
     */
    public String keyIdentifier() {
        return this.keyIdentifier;
    }
    /**
     * @return It contains the encrypted customer secret.
     * 
     */
    public String keyValue() {
        return this.keyValue;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CustomerSecretResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String algorithm;
        private String keyIdentifier;
        private String keyValue;
        public Builder() {}
        public Builder(CustomerSecretResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.algorithm = defaults.algorithm;
    	      this.keyIdentifier = defaults.keyIdentifier;
    	      this.keyValue = defaults.keyValue;
        }

        @CustomType.Setter
        public Builder algorithm(String algorithm) {
            this.algorithm = Objects.requireNonNull(algorithm);
            return this;
        }
        @CustomType.Setter
        public Builder keyIdentifier(String keyIdentifier) {
            this.keyIdentifier = Objects.requireNonNull(keyIdentifier);
            return this;
        }
        @CustomType.Setter
        public Builder keyValue(String keyValue) {
            this.keyValue = Objects.requireNonNull(keyValue);
            return this;
        }
        public CustomerSecretResponse build() {
            final var o = new CustomerSecretResponse();
            o.algorithm = algorithm;
            o.keyIdentifier = keyIdentifier;
            o.keyValue = keyValue;
            return o;
        }
    }
}
