// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.blueprint;

import com.pulumi.azurenative.Utilities;
import com.pulumi.azurenative.blueprint.TemplateArtifactArgs;
import com.pulumi.azurenative.blueprint.outputs.ParameterValueResponse;
import com.pulumi.core.Alias;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Blueprint artifact that deploys a Resource Manager template.
 * API Version: 2018-11-01-preview.
 * 
 * ## Example Usage
 * ### MG-ARMTemplateArtifact
 * 
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var templateArtifact = new TemplateArtifact(&#34;templateArtifact&#34;, TemplateArtifactArgs.builder()        
 *             .artifactName(&#34;storageTemplate&#34;)
 *             .blueprintName(&#34;simpleBlueprint&#34;)
 *             .kind(&#34;template&#34;)
 *             .parameters(Map.of(&#34;storageAccountType&#34;, Map.of(&#34;value&#34;, &#34;[parameters(&#39;storageAccountType&#39;)]&#34;)))
 *             .resourceGroup(&#34;storageRG&#34;)
 *             .resourceScope(&#34;providers/Microsoft.Management/managementGroups/ContosoOnlineGroup&#34;)
 *             .template(Map.ofEntries(
 *                 Map.entry(&#34;contentVersion&#34;, &#34;1.0.0.0&#34;),
 *                 Map.entry(&#34;outputs&#34;, Map.of(&#34;storageAccountName&#34;, Map.ofEntries(
 *                     Map.entry(&#34;type&#34;, &#34;string&#34;),
 *                     Map.entry(&#34;value&#34;, &#34;[variables(&#39;storageAccountName&#39;)]&#34;)
 *                 ))),
 *                 Map.entry(&#34;parameters&#34;, Map.of(&#34;storageAccountType&#34;, Map.ofEntries(
 *                     Map.entry(&#34;allowedValues&#34;,                     
 *                         &#34;Standard_LRS&#34;,
 *                         &#34;Standard_GRS&#34;,
 *                         &#34;Standard_ZRS&#34;,
 *                         &#34;Premium_LRS&#34;),
 *                     Map.entry(&#34;defaultValue&#34;, &#34;Standard_LRS&#34;),
 *                     Map.entry(&#34;metadata&#34;, Map.of(&#34;description&#34;, &#34;Storage Account type&#34;)),
 *                     Map.entry(&#34;type&#34;, &#34;string&#34;)
 *                 ))),
 *                 Map.entry(&#34;resources&#34;, Map.ofEntries(
 *                     Map.entry(&#34;apiVersion&#34;, &#34;2016-01-01&#34;),
 *                     Map.entry(&#34;kind&#34;, &#34;Storage&#34;),
 *                     Map.entry(&#34;location&#34;, &#34;[resourceGroup().location]&#34;),
 *                     Map.entry(&#34;name&#34;, &#34;[variables(&#39;storageAccountName&#39;)]&#34;),
 *                     Map.entry(&#34;properties&#34;, ),
 *                     Map.entry(&#34;sku&#34;, Map.of(&#34;name&#34;, &#34;[parameters(&#39;storageAccountType&#39;)]&#34;)),
 *                     Map.entry(&#34;type&#34;, &#34;Microsoft.Storage/storageAccounts&#34;)
 *                 )),
 *                 Map.entry(&#34;variables&#34;, Map.of(&#34;storageAccountName&#34;, &#34;[concat(uniquestring(resourceGroup().id), &#39;standardsa&#39;)]&#34;))
 *             ))
 *             .build());
 * 
 *     }
 * }
 * 
 * ```
 * ### MG-PolicyAssignmentArtifact
 * 
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var templateArtifact = new TemplateArtifact(&#34;templateArtifact&#34;, TemplateArtifactArgs.builder()        
 *             .artifactName(&#34;costCenterPolicy&#34;)
 *             .blueprintName(&#34;simpleBlueprint&#34;)
 *             .resourceScope(&#34;providers/Microsoft.Management/managementGroups/ContosoOnlineGroup&#34;)
 *             .build());
 * 
 *     }
 * }
 * 
 * ```
 * ### MG-RoleAssignmentArtifact
 * 
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var templateArtifact = new TemplateArtifact(&#34;templateArtifact&#34;, TemplateArtifactArgs.builder()        
 *             .artifactName(&#34;ownerAssignment&#34;)
 *             .blueprintName(&#34;simpleBlueprint&#34;)
 *             .resourceScope(&#34;providers/Microsoft.Management/managementGroups/ContosoOnlineGroup&#34;)
 *             .build());
 * 
 *     }
 * }
 * 
 * ```
 * ### Sub-ARMTemplateArtifact
 * 
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var templateArtifact = new TemplateArtifact(&#34;templateArtifact&#34;, TemplateArtifactArgs.builder()        
 *             .artifactName(&#34;storageTemplate&#34;)
 *             .blueprintName(&#34;simpleBlueprint&#34;)
 *             .kind(&#34;template&#34;)
 *             .parameters(Map.of(&#34;storageAccountType&#34;, Map.of(&#34;value&#34;, &#34;[parameters(&#39;storageAccountType&#39;)]&#34;)))
 *             .resourceGroup(&#34;storageRG&#34;)
 *             .resourceScope(&#34;subscriptions/00000000-0000-0000-0000-000000000000&#34;)
 *             .template(Map.ofEntries(
 *                 Map.entry(&#34;contentVersion&#34;, &#34;1.0.0.0&#34;),
 *                 Map.entry(&#34;outputs&#34;, Map.of(&#34;storageAccountName&#34;, Map.ofEntries(
 *                     Map.entry(&#34;type&#34;, &#34;string&#34;),
 *                     Map.entry(&#34;value&#34;, &#34;[variables(&#39;storageAccountName&#39;)]&#34;)
 *                 ))),
 *                 Map.entry(&#34;parameters&#34;, Map.of(&#34;storageAccountType&#34;, Map.ofEntries(
 *                     Map.entry(&#34;allowedValues&#34;,                     
 *                         &#34;Standard_LRS&#34;,
 *                         &#34;Standard_GRS&#34;,
 *                         &#34;Standard_ZRS&#34;,
 *                         &#34;Premium_LRS&#34;),
 *                     Map.entry(&#34;defaultValue&#34;, &#34;Standard_LRS&#34;),
 *                     Map.entry(&#34;metadata&#34;, Map.of(&#34;description&#34;, &#34;Storage Account type&#34;)),
 *                     Map.entry(&#34;type&#34;, &#34;string&#34;)
 *                 ))),
 *                 Map.entry(&#34;resources&#34;, Map.ofEntries(
 *                     Map.entry(&#34;apiVersion&#34;, &#34;2016-01-01&#34;),
 *                     Map.entry(&#34;kind&#34;, &#34;Storage&#34;),
 *                     Map.entry(&#34;location&#34;, &#34;[resourceGroup().location]&#34;),
 *                     Map.entry(&#34;name&#34;, &#34;[variables(&#39;storageAccountName&#39;)]&#34;),
 *                     Map.entry(&#34;properties&#34;, ),
 *                     Map.entry(&#34;sku&#34;, Map.of(&#34;name&#34;, &#34;[parameters(&#39;storageAccountType&#39;)]&#34;)),
 *                     Map.entry(&#34;type&#34;, &#34;Microsoft.Storage/storageAccounts&#34;)
 *                 )),
 *                 Map.entry(&#34;variables&#34;, Map.of(&#34;storageAccountName&#34;, &#34;[concat(uniquestring(resourceGroup().id), &#39;standardsa&#39;)]&#34;))
 *             ))
 *             .build());
 * 
 *     }
 * }
 * 
 * ```
 * ### Sub-PolicyAssignmentArtifact
 * 
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var templateArtifact = new TemplateArtifact(&#34;templateArtifact&#34;, TemplateArtifactArgs.builder()        
 *             .artifactName(&#34;costCenterPolicy&#34;)
 *             .blueprintName(&#34;simpleBlueprint&#34;)
 *             .resourceScope(&#34;subscriptions/00000000-0000-0000-0000-000000000000&#34;)
 *             .build());
 * 
 *     }
 * }
 * 
 * ```
 * ### Sub-RoleAssignmentArtifact
 * 
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var templateArtifact = new TemplateArtifact(&#34;templateArtifact&#34;, TemplateArtifactArgs.builder()        
 *             .artifactName(&#34;ownerAssignment&#34;)
 *             .blueprintName(&#34;simpleBlueprint&#34;)
 *             .resourceScope(&#34;subscriptions/00000000-0000-0000-0000-000000000000&#34;)
 *             .build());
 * 
 *     }
 * }
 * 
 * ```
 * 
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:blueprint:TemplateArtifact ownerAssignment /subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Blueprint/blueprints/simpleBlueprint/artifacts/ownerAssignment 
 * ```
 * 
 */
@ResourceType(type="azure-native:blueprint:TemplateArtifact")
public class TemplateArtifact extends com.pulumi.resources.CustomResource {
    /**
     * Artifacts which need to be deployed before the specified artifact.
     * 
     */
    @Export(name="dependsOn", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> dependsOn;

    /**
     * @return Artifacts which need to be deployed before the specified artifact.
     * 
     */
    public Output<Optional<List<String>>> dependsOn() {
        return Codegen.optional(this.dependsOn);
    }
    /**
     * Multi-line explain this resource.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return Multi-line explain this resource.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * One-liner string explain this resource.
     * 
     */
    @Export(name="displayName", type=String.class, parameters={})
    private Output</* @Nullable */ String> displayName;

    /**
     * @return One-liner string explain this resource.
     * 
     */
    public Output<Optional<String>> displayName() {
        return Codegen.optional(this.displayName);
    }
    /**
     * Specifies the kind of blueprint artifact.
     * Expected value is &#39;template&#39;.
     * 
     */
    @Export(name="kind", type=String.class, parameters={})
    private Output<String> kind;

    /**
     * @return Specifies the kind of blueprint artifact.
     * Expected value is &#39;template&#39;.
     * 
     */
    public Output<String> kind() {
        return this.kind;
    }
    /**
     * Name of this resource.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Name of this resource.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Resource Manager template blueprint artifact parameter values.
     * 
     */
    @Export(name="parameters", type=Map.class, parameters={String.class, ParameterValueResponse.class})
    private Output<Map<String,ParameterValueResponse>> parameters;

    /**
     * @return Resource Manager template blueprint artifact parameter values.
     * 
     */
    public Output<Map<String,ParameterValueResponse>> parameters() {
        return this.parameters;
    }
    /**
     * If applicable, the name of the resource group placeholder to which the Resource Manager template blueprint artifact will be deployed.
     * 
     */
    @Export(name="resourceGroup", type=String.class, parameters={})
    private Output</* @Nullable */ String> resourceGroup;

    /**
     * @return If applicable, the name of the resource group placeholder to which the Resource Manager template blueprint artifact will be deployed.
     * 
     */
    public Output<Optional<String>> resourceGroup() {
        return Codegen.optional(this.resourceGroup);
    }
    /**
     * The Resource Manager template blueprint artifact body.
     * 
     */
    @Export(name="template", type=Object.class, parameters={})
    private Output<Object> template;

    /**
     * @return The Resource Manager template blueprint artifact body.
     * 
     */
    public Output<Object> template() {
        return this.template;
    }
    /**
     * Type of this resource.
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return Type of this resource.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public TemplateArtifact(String name) {
        this(name, TemplateArtifactArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public TemplateArtifact(String name, TemplateArtifactArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public TemplateArtifact(String name, TemplateArtifactArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:blueprint:TemplateArtifact", name, makeArgs(args), makeResourceOptions(options, Codegen.empty()));
    }

    private TemplateArtifact(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:blueprint:TemplateArtifact", name, null, makeResourceOptions(options, id));
    }

    private static TemplateArtifactArgs makeArgs(TemplateArtifactArgs args) {
        var builder = args == null ? TemplateArtifactArgs.builder() : TemplateArtifactArgs.builder(args);
        return builder
            .kind("template")
            .build();
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("azure-native:blueprint/v20181101preview:TemplateArtifact").build())
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static TemplateArtifact get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new TemplateArtifact(name, id, options);
    }
}
