// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearningservices.outputs;

import com.pulumi.azurenative.machinelearningservices.outputs.DockerBuildResponse;
import com.pulumi.azurenative.machinelearningservices.outputs.DockerImageResponse;
import com.pulumi.azurenative.machinelearningservices.outputs.InferenceContainerPropertiesResponse;
import com.pulumi.core.Either;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class EnvironmentSpecificationVersionResponse {
    /**
     * @return Standard configuration file used by Conda that lets you install any kind of package, including Python, R, and C/C++ packages.
     * &lt;see href=&#34;https://repo2docker.readthedocs.io/en/latest/config_files.html#environment-yml-install-a-conda-environment&#34; /&gt;
     * 
     */
    private @Nullable String condaFile;
    /**
     * @return The asset description text.
     * 
     */
    private @Nullable String description;
    /**
     * @return Configuration settings for Docker.
     * 
     */
    private @Nullable Either<DockerBuildResponse,DockerImageResponse> docker;
    /**
     * @return Environment specification is either user managed or curated by the Azure ML service
     * &lt;see href=&#34;https://docs.microsoft.com/en-us/azure/machine-learning/resource-curated-environments&#34; /&gt;
     * 
     */
    private String environmentSpecificationType;
    /**
     * @return Defines configuration specific to inference.
     * 
     */
    private @Nullable InferenceContainerPropertiesResponse inferenceContainerProperties;
    /**
     * @return If the name version are system generated (anonymous registration).
     * 
     */
    private @Nullable Boolean isAnonymous;
    /**
     * @return The asset property dictionary.
     * 
     */
    private @Nullable Map<String,String> properties;
    /**
     * @return Tag dictionary. Tags can be added, removed, and updated.
     * 
     */
    private @Nullable Map<String,String> tags;

    private EnvironmentSpecificationVersionResponse() {}
    /**
     * @return Standard configuration file used by Conda that lets you install any kind of package, including Python, R, and C/C++ packages.
     * &lt;see href=&#34;https://repo2docker.readthedocs.io/en/latest/config_files.html#environment-yml-install-a-conda-environment&#34; /&gt;
     * 
     */
    public Optional<String> condaFile() {
        return Optional.ofNullable(this.condaFile);
    }
    /**
     * @return The asset description text.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return Configuration settings for Docker.
     * 
     */
    public Optional<Either<DockerBuildResponse,DockerImageResponse>> docker() {
        return Optional.ofNullable(this.docker);
    }
    /**
     * @return Environment specification is either user managed or curated by the Azure ML service
     * &lt;see href=&#34;https://docs.microsoft.com/en-us/azure/machine-learning/resource-curated-environments&#34; /&gt;
     * 
     */
    public String environmentSpecificationType() {
        return this.environmentSpecificationType;
    }
    /**
     * @return Defines configuration specific to inference.
     * 
     */
    public Optional<InferenceContainerPropertiesResponse> inferenceContainerProperties() {
        return Optional.ofNullable(this.inferenceContainerProperties);
    }
    /**
     * @return If the name version are system generated (anonymous registration).
     * 
     */
    public Optional<Boolean> isAnonymous() {
        return Optional.ofNullable(this.isAnonymous);
    }
    /**
     * @return The asset property dictionary.
     * 
     */
    public Map<String,String> properties() {
        return this.properties == null ? Map.of() : this.properties;
    }
    /**
     * @return Tag dictionary. Tags can be added, removed, and updated.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EnvironmentSpecificationVersionResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String condaFile;
        private @Nullable String description;
        private @Nullable Either<DockerBuildResponse,DockerImageResponse> docker;
        private String environmentSpecificationType;
        private @Nullable InferenceContainerPropertiesResponse inferenceContainerProperties;
        private @Nullable Boolean isAnonymous;
        private @Nullable Map<String,String> properties;
        private @Nullable Map<String,String> tags;
        public Builder() {}
        public Builder(EnvironmentSpecificationVersionResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.condaFile = defaults.condaFile;
    	      this.description = defaults.description;
    	      this.docker = defaults.docker;
    	      this.environmentSpecificationType = defaults.environmentSpecificationType;
    	      this.inferenceContainerProperties = defaults.inferenceContainerProperties;
    	      this.isAnonymous = defaults.isAnonymous;
    	      this.properties = defaults.properties;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder condaFile(@Nullable String condaFile) {
            this.condaFile = condaFile;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder docker(@Nullable Either<DockerBuildResponse,DockerImageResponse> docker) {
            this.docker = docker;
            return this;
        }
        @CustomType.Setter
        public Builder environmentSpecificationType(String environmentSpecificationType) {
            this.environmentSpecificationType = Objects.requireNonNull(environmentSpecificationType);
            return this;
        }
        @CustomType.Setter
        public Builder inferenceContainerProperties(@Nullable InferenceContainerPropertiesResponse inferenceContainerProperties) {
            this.inferenceContainerProperties = inferenceContainerProperties;
            return this;
        }
        @CustomType.Setter
        public Builder isAnonymous(@Nullable Boolean isAnonymous) {
            this.isAnonymous = isAnonymous;
            return this;
        }
        @CustomType.Setter
        public Builder properties(@Nullable Map<String,String> properties) {
            this.properties = properties;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        public EnvironmentSpecificationVersionResponse build() {
            final var o = new EnvironmentSpecificationVersionResponse();
            o.condaFile = condaFile;
            o.description = description;
            o.docker = docker;
            o.environmentSpecificationType = environmentSpecificationType;
            o.inferenceContainerProperties = inferenceContainerProperties;
            o.isAnonymous = isAnonymous;
            o.properties = properties;
            o.tags = tags;
            return o;
        }
    }
}
