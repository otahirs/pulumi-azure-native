// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.recoveryservices.outputs;

import com.pulumi.azurenative.recoveryservices.outputs.DPMContainerExtendedInfoResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AzureBackupServerContainerResponse {
    /**
     * @return Type of backup management for the container.
     * 
     */
    private @Nullable String backupManagementType;
    /**
     * @return Specifies whether the container is re-registrable.
     * 
     */
    private @Nullable Boolean canReRegister;
    /**
     * @return ID of container.
     * 
     */
    private @Nullable String containerId;
    /**
     * @return Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
     * Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
     * Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
     * Backup is VMAppContainer
     * Expected value is &#39;AzureBackupServerContainer&#39;.
     * 
     */
    private String containerType;
    /**
     * @return Backup engine Agent version
     * 
     */
    private @Nullable String dpmAgentVersion;
    /**
     * @return List of BackupEngines protecting the container
     * 
     */
    private @Nullable List<String> dpmServers;
    /**
     * @return Extended Info of the container.
     * 
     */
    private @Nullable DPMContainerExtendedInfoResponse extendedInfo;
    /**
     * @return Friendly name of the container.
     * 
     */
    private @Nullable String friendlyName;
    /**
     * @return Status of health of the container.
     * 
     */
    private @Nullable String healthStatus;
    /**
     * @return Number of protected items in the BackupEngine
     * 
     */
    private @Nullable Double protectedItemCount;
    /**
     * @return Protection status of the container.
     * 
     */
    private @Nullable String protectionStatus;
    /**
     * @return Status of registration of the container with the Recovery Services Vault.
     * 
     */
    private @Nullable String registrationStatus;
    /**
     * @return To check if upgrade available
     * 
     */
    private @Nullable Boolean upgradeAvailable;

    private AzureBackupServerContainerResponse() {}
    /**
     * @return Type of backup management for the container.
     * 
     */
    public Optional<String> backupManagementType() {
        return Optional.ofNullable(this.backupManagementType);
    }
    /**
     * @return Specifies whether the container is re-registrable.
     * 
     */
    public Optional<Boolean> canReRegister() {
        return Optional.ofNullable(this.canReRegister);
    }
    /**
     * @return ID of container.
     * 
     */
    public Optional<String> containerId() {
        return Optional.ofNullable(this.containerId);
    }
    /**
     * @return Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.
     * Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is
     * Windows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload
     * Backup is VMAppContainer
     * Expected value is &#39;AzureBackupServerContainer&#39;.
     * 
     */
    public String containerType() {
        return this.containerType;
    }
    /**
     * @return Backup engine Agent version
     * 
     */
    public Optional<String> dpmAgentVersion() {
        return Optional.ofNullable(this.dpmAgentVersion);
    }
    /**
     * @return List of BackupEngines protecting the container
     * 
     */
    public List<String> dpmServers() {
        return this.dpmServers == null ? List.of() : this.dpmServers;
    }
    /**
     * @return Extended Info of the container.
     * 
     */
    public Optional<DPMContainerExtendedInfoResponse> extendedInfo() {
        return Optional.ofNullable(this.extendedInfo);
    }
    /**
     * @return Friendly name of the container.
     * 
     */
    public Optional<String> friendlyName() {
        return Optional.ofNullable(this.friendlyName);
    }
    /**
     * @return Status of health of the container.
     * 
     */
    public Optional<String> healthStatus() {
        return Optional.ofNullable(this.healthStatus);
    }
    /**
     * @return Number of protected items in the BackupEngine
     * 
     */
    public Optional<Double> protectedItemCount() {
        return Optional.ofNullable(this.protectedItemCount);
    }
    /**
     * @return Protection status of the container.
     * 
     */
    public Optional<String> protectionStatus() {
        return Optional.ofNullable(this.protectionStatus);
    }
    /**
     * @return Status of registration of the container with the Recovery Services Vault.
     * 
     */
    public Optional<String> registrationStatus() {
        return Optional.ofNullable(this.registrationStatus);
    }
    /**
     * @return To check if upgrade available
     * 
     */
    public Optional<Boolean> upgradeAvailable() {
        return Optional.ofNullable(this.upgradeAvailable);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AzureBackupServerContainerResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String backupManagementType;
        private @Nullable Boolean canReRegister;
        private @Nullable String containerId;
        private String containerType;
        private @Nullable String dpmAgentVersion;
        private @Nullable List<String> dpmServers;
        private @Nullable DPMContainerExtendedInfoResponse extendedInfo;
        private @Nullable String friendlyName;
        private @Nullable String healthStatus;
        private @Nullable Double protectedItemCount;
        private @Nullable String protectionStatus;
        private @Nullable String registrationStatus;
        private @Nullable Boolean upgradeAvailable;
        public Builder() {}
        public Builder(AzureBackupServerContainerResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backupManagementType = defaults.backupManagementType;
    	      this.canReRegister = defaults.canReRegister;
    	      this.containerId = defaults.containerId;
    	      this.containerType = defaults.containerType;
    	      this.dpmAgentVersion = defaults.dpmAgentVersion;
    	      this.dpmServers = defaults.dpmServers;
    	      this.extendedInfo = defaults.extendedInfo;
    	      this.friendlyName = defaults.friendlyName;
    	      this.healthStatus = defaults.healthStatus;
    	      this.protectedItemCount = defaults.protectedItemCount;
    	      this.protectionStatus = defaults.protectionStatus;
    	      this.registrationStatus = defaults.registrationStatus;
    	      this.upgradeAvailable = defaults.upgradeAvailable;
        }

        @CustomType.Setter
        public Builder backupManagementType(@Nullable String backupManagementType) {
            this.backupManagementType = backupManagementType;
            return this;
        }
        @CustomType.Setter
        public Builder canReRegister(@Nullable Boolean canReRegister) {
            this.canReRegister = canReRegister;
            return this;
        }
        @CustomType.Setter
        public Builder containerId(@Nullable String containerId) {
            this.containerId = containerId;
            return this;
        }
        @CustomType.Setter
        public Builder containerType(String containerType) {
            this.containerType = Objects.requireNonNull(containerType);
            return this;
        }
        @CustomType.Setter
        public Builder dpmAgentVersion(@Nullable String dpmAgentVersion) {
            this.dpmAgentVersion = dpmAgentVersion;
            return this;
        }
        @CustomType.Setter
        public Builder dpmServers(@Nullable List<String> dpmServers) {
            this.dpmServers = dpmServers;
            return this;
        }
        public Builder dpmServers(String... dpmServers) {
            return dpmServers(List.of(dpmServers));
        }
        @CustomType.Setter
        public Builder extendedInfo(@Nullable DPMContainerExtendedInfoResponse extendedInfo) {
            this.extendedInfo = extendedInfo;
            return this;
        }
        @CustomType.Setter
        public Builder friendlyName(@Nullable String friendlyName) {
            this.friendlyName = friendlyName;
            return this;
        }
        @CustomType.Setter
        public Builder healthStatus(@Nullable String healthStatus) {
            this.healthStatus = healthStatus;
            return this;
        }
        @CustomType.Setter
        public Builder protectedItemCount(@Nullable Double protectedItemCount) {
            this.protectedItemCount = protectedItemCount;
            return this;
        }
        @CustomType.Setter
        public Builder protectionStatus(@Nullable String protectionStatus) {
            this.protectionStatus = protectionStatus;
            return this;
        }
        @CustomType.Setter
        public Builder registrationStatus(@Nullable String registrationStatus) {
            this.registrationStatus = registrationStatus;
            return this;
        }
        @CustomType.Setter
        public Builder upgradeAvailable(@Nullable Boolean upgradeAvailable) {
            this.upgradeAvailable = upgradeAvailable;
            return this;
        }
        public AzureBackupServerContainerResponse build() {
            final var o = new AzureBackupServerContainerResponse();
            o.backupManagementType = backupManagementType;
            o.canReRegister = canReRegister;
            o.containerId = containerId;
            o.containerType = containerType;
            o.dpmAgentVersion = dpmAgentVersion;
            o.dpmServers = dpmServers;
            o.extendedInfo = extendedInfo;
            o.friendlyName = friendlyName;
            o.healthStatus = healthStatus;
            o.protectedItemCount = protectedItemCount;
            o.protectionStatus = protectionStatus;
            o.registrationStatus = registrationStatus;
            o.upgradeAvailable = upgradeAvailable;
            return o;
        }
    }
}
