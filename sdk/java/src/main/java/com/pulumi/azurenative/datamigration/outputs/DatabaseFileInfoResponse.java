// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datamigration.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DatabaseFileInfoResponse {
    /**
     * @return Name of the database
     * 
     */
    private @Nullable String databaseName;
    /**
     * @return Database file type
     * 
     */
    private @Nullable String fileType;
    /**
     * @return Unique identifier for database file
     * 
     */
    private @Nullable String id;
    /**
     * @return Logical name of the file
     * 
     */
    private @Nullable String logicalName;
    /**
     * @return Operating-system full path of the file
     * 
     */
    private @Nullable String physicalFullName;
    /**
     * @return Suggested full path of the file for restoring
     * 
     */
    private @Nullable String restoreFullName;
    /**
     * @return Size of the file in megabytes
     * 
     */
    private @Nullable Double sizeMB;

    private DatabaseFileInfoResponse() {}
    /**
     * @return Name of the database
     * 
     */
    public Optional<String> databaseName() {
        return Optional.ofNullable(this.databaseName);
    }
    /**
     * @return Database file type
     * 
     */
    public Optional<String> fileType() {
        return Optional.ofNullable(this.fileType);
    }
    /**
     * @return Unique identifier for database file
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Logical name of the file
     * 
     */
    public Optional<String> logicalName() {
        return Optional.ofNullable(this.logicalName);
    }
    /**
     * @return Operating-system full path of the file
     * 
     */
    public Optional<String> physicalFullName() {
        return Optional.ofNullable(this.physicalFullName);
    }
    /**
     * @return Suggested full path of the file for restoring
     * 
     */
    public Optional<String> restoreFullName() {
        return Optional.ofNullable(this.restoreFullName);
    }
    /**
     * @return Size of the file in megabytes
     * 
     */
    public Optional<Double> sizeMB() {
        return Optional.ofNullable(this.sizeMB);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DatabaseFileInfoResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String databaseName;
        private @Nullable String fileType;
        private @Nullable String id;
        private @Nullable String logicalName;
        private @Nullable String physicalFullName;
        private @Nullable String restoreFullName;
        private @Nullable Double sizeMB;
        public Builder() {}
        public Builder(DatabaseFileInfoResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.databaseName = defaults.databaseName;
    	      this.fileType = defaults.fileType;
    	      this.id = defaults.id;
    	      this.logicalName = defaults.logicalName;
    	      this.physicalFullName = defaults.physicalFullName;
    	      this.restoreFullName = defaults.restoreFullName;
    	      this.sizeMB = defaults.sizeMB;
        }

        @CustomType.Setter
        public Builder databaseName(@Nullable String databaseName) {
            this.databaseName = databaseName;
            return this;
        }
        @CustomType.Setter
        public Builder fileType(@Nullable String fileType) {
            this.fileType = fileType;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder logicalName(@Nullable String logicalName) {
            this.logicalName = logicalName;
            return this;
        }
        @CustomType.Setter
        public Builder physicalFullName(@Nullable String physicalFullName) {
            this.physicalFullName = physicalFullName;
            return this;
        }
        @CustomType.Setter
        public Builder restoreFullName(@Nullable String restoreFullName) {
            this.restoreFullName = restoreFullName;
            return this;
        }
        @CustomType.Setter
        public Builder sizeMB(@Nullable Double sizeMB) {
            this.sizeMB = sizeMB;
            return this;
        }
        public DatabaseFileInfoResponse build() {
            final var o = new DatabaseFileInfoResponse();
            o.databaseName = databaseName;
            o.fileType = fileType;
            o.id = id;
            o.logicalName = logicalName;
            o.physicalFullName = physicalFullName;
            o.restoreFullName = restoreFullName;
            o.sizeMB = sizeMB;
            return o;
        }
    }
}
