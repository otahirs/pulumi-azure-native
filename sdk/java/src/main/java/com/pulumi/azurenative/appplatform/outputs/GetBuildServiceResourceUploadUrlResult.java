// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.appplatform.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetBuildServiceResourceUploadUrlResult {
    /**
     * @return Source relative path
     * 
     */
    private @Nullable String relativePath;
    /**
     * @return Upload URL
     * 
     */
    private @Nullable String uploadUrl;

    private GetBuildServiceResourceUploadUrlResult() {}
    /**
     * @return Source relative path
     * 
     */
    public Optional<String> relativePath() {
        return Optional.ofNullable(this.relativePath);
    }
    /**
     * @return Upload URL
     * 
     */
    public Optional<String> uploadUrl() {
        return Optional.ofNullable(this.uploadUrl);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBuildServiceResourceUploadUrlResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String relativePath;
        private @Nullable String uploadUrl;
        public Builder() {}
        public Builder(GetBuildServiceResourceUploadUrlResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.relativePath = defaults.relativePath;
    	      this.uploadUrl = defaults.uploadUrl;
        }

        @CustomType.Setter
        public Builder relativePath(@Nullable String relativePath) {
            this.relativePath = relativePath;
            return this;
        }
        @CustomType.Setter
        public Builder uploadUrl(@Nullable String uploadUrl) {
            this.uploadUrl = uploadUrl;
            return this;
        }
        public GetBuildServiceResourceUploadUrlResult build() {
            final var o = new GetBuildServiceResourceUploadUrlResult();
            o.relativePath = relativePath;
            o.uploadUrl = uploadUrl;
            return o;
        }
    }
}
