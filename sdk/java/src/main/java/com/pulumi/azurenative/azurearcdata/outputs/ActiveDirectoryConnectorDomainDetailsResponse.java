// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.azurearcdata.outputs;

import com.pulumi.azurenative.azurearcdata.outputs.ActiveDirectoryDomainControllersResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ActiveDirectoryConnectorDomainDetailsResponse {
    /**
     * @return null
     * 
     */
    private ActiveDirectoryDomainControllersResponse domainControllers;
    /**
     * @return NETBIOS name of the Active Directory domain.
     * 
     */
    private @Nullable String netbiosDomainName;
    /**
     * @return The distinguished name of the Active Directory Organizational Unit.
     * 
     */
    private @Nullable String ouDistinguishedName;
    /**
     * @return Name (uppercase) of the Active Directory domain that this AD connector will be associated with.
     * 
     */
    private String realm;
    /**
     * @return The service account provisioning mode for this Active Directory connector.
     * 
     */
    private @Nullable String serviceAccountProvisioning;

    private ActiveDirectoryConnectorDomainDetailsResponse() {}
    /**
     * @return null
     * 
     */
    public ActiveDirectoryDomainControllersResponse domainControllers() {
        return this.domainControllers;
    }
    /**
     * @return NETBIOS name of the Active Directory domain.
     * 
     */
    public Optional<String> netbiosDomainName() {
        return Optional.ofNullable(this.netbiosDomainName);
    }
    /**
     * @return The distinguished name of the Active Directory Organizational Unit.
     * 
     */
    public Optional<String> ouDistinguishedName() {
        return Optional.ofNullable(this.ouDistinguishedName);
    }
    /**
     * @return Name (uppercase) of the Active Directory domain that this AD connector will be associated with.
     * 
     */
    public String realm() {
        return this.realm;
    }
    /**
     * @return The service account provisioning mode for this Active Directory connector.
     * 
     */
    public Optional<String> serviceAccountProvisioning() {
        return Optional.ofNullable(this.serviceAccountProvisioning);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ActiveDirectoryConnectorDomainDetailsResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private ActiveDirectoryDomainControllersResponse domainControllers;
        private @Nullable String netbiosDomainName;
        private @Nullable String ouDistinguishedName;
        private String realm;
        private @Nullable String serviceAccountProvisioning;
        public Builder() {}
        public Builder(ActiveDirectoryConnectorDomainDetailsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.domainControllers = defaults.domainControllers;
    	      this.netbiosDomainName = defaults.netbiosDomainName;
    	      this.ouDistinguishedName = defaults.ouDistinguishedName;
    	      this.realm = defaults.realm;
    	      this.serviceAccountProvisioning = defaults.serviceAccountProvisioning;
        }

        @CustomType.Setter
        public Builder domainControllers(ActiveDirectoryDomainControllersResponse domainControllers) {
            this.domainControllers = Objects.requireNonNull(domainControllers);
            return this;
        }
        @CustomType.Setter
        public Builder netbiosDomainName(@Nullable String netbiosDomainName) {
            this.netbiosDomainName = netbiosDomainName;
            return this;
        }
        @CustomType.Setter
        public Builder ouDistinguishedName(@Nullable String ouDistinguishedName) {
            this.ouDistinguishedName = ouDistinguishedName;
            return this;
        }
        @CustomType.Setter
        public Builder realm(String realm) {
            this.realm = Objects.requireNonNull(realm);
            return this;
        }
        @CustomType.Setter
        public Builder serviceAccountProvisioning(@Nullable String serviceAccountProvisioning) {
            this.serviceAccountProvisioning = serviceAccountProvisioning;
            return this;
        }
        public ActiveDirectoryConnectorDomainDetailsResponse build() {
            final var o = new ActiveDirectoryConnectorDomainDetailsResponse();
            o.domainControllers = domainControllers;
            o.netbiosDomainName = netbiosDomainName;
            o.ouDistinguishedName = ouDistinguishedName;
            o.realm = realm;
            o.serviceAccountProvisioning = serviceAccountProvisioning;
            return o;
        }
    }
}
