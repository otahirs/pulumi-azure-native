// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.storagesync.outputs;

import com.pulumi.azurenative.storagesync.outputs.ServerEndpointSyncActivityStatusResponse;
import com.pulumi.azurenative.storagesync.outputs.ServerEndpointSyncSessionStatusResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class ServerEndpointSyncStatusResponse {
    /**
     * @return Combined Health Status.
     * 
     */
    private String combinedHealth;
    /**
     * @return Download sync activity
     * 
     */
    private ServerEndpointSyncActivityStatusResponse downloadActivity;
    /**
     * @return Download Health Status.
     * 
     */
    private String downloadHealth;
    /**
     * @return Download Status
     * 
     */
    private ServerEndpointSyncSessionStatusResponse downloadStatus;
    /**
     * @return Last Updated Timestamp
     * 
     */
    private String lastUpdatedTimestamp;
    /**
     * @return Offline Data Transfer State
     * 
     */
    private String offlineDataTransferStatus;
    /**
     * @return Sync activity
     * 
     */
    private String syncActivity;
    /**
     * @return Total count of persistent files not syncing (combined upload + download).
     * 
     */
    private Double totalPersistentFilesNotSyncingCount;
    /**
     * @return Upload sync activity
     * 
     */
    private ServerEndpointSyncActivityStatusResponse uploadActivity;
    /**
     * @return Upload Health Status.
     * 
     */
    private String uploadHealth;
    /**
     * @return Upload Status
     * 
     */
    private ServerEndpointSyncSessionStatusResponse uploadStatus;

    private ServerEndpointSyncStatusResponse() {}
    /**
     * @return Combined Health Status.
     * 
     */
    public String combinedHealth() {
        return this.combinedHealth;
    }
    /**
     * @return Download sync activity
     * 
     */
    public ServerEndpointSyncActivityStatusResponse downloadActivity() {
        return this.downloadActivity;
    }
    /**
     * @return Download Health Status.
     * 
     */
    public String downloadHealth() {
        return this.downloadHealth;
    }
    /**
     * @return Download Status
     * 
     */
    public ServerEndpointSyncSessionStatusResponse downloadStatus() {
        return this.downloadStatus;
    }
    /**
     * @return Last Updated Timestamp
     * 
     */
    public String lastUpdatedTimestamp() {
        return this.lastUpdatedTimestamp;
    }
    /**
     * @return Offline Data Transfer State
     * 
     */
    public String offlineDataTransferStatus() {
        return this.offlineDataTransferStatus;
    }
    /**
     * @return Sync activity
     * 
     */
    public String syncActivity() {
        return this.syncActivity;
    }
    /**
     * @return Total count of persistent files not syncing (combined upload + download).
     * 
     */
    public Double totalPersistentFilesNotSyncingCount() {
        return this.totalPersistentFilesNotSyncingCount;
    }
    /**
     * @return Upload sync activity
     * 
     */
    public ServerEndpointSyncActivityStatusResponse uploadActivity() {
        return this.uploadActivity;
    }
    /**
     * @return Upload Health Status.
     * 
     */
    public String uploadHealth() {
        return this.uploadHealth;
    }
    /**
     * @return Upload Status
     * 
     */
    public ServerEndpointSyncSessionStatusResponse uploadStatus() {
        return this.uploadStatus;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServerEndpointSyncStatusResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String combinedHealth;
        private ServerEndpointSyncActivityStatusResponse downloadActivity;
        private String downloadHealth;
        private ServerEndpointSyncSessionStatusResponse downloadStatus;
        private String lastUpdatedTimestamp;
        private String offlineDataTransferStatus;
        private String syncActivity;
        private Double totalPersistentFilesNotSyncingCount;
        private ServerEndpointSyncActivityStatusResponse uploadActivity;
        private String uploadHealth;
        private ServerEndpointSyncSessionStatusResponse uploadStatus;
        public Builder() {}
        public Builder(ServerEndpointSyncStatusResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.combinedHealth = defaults.combinedHealth;
    	      this.downloadActivity = defaults.downloadActivity;
    	      this.downloadHealth = defaults.downloadHealth;
    	      this.downloadStatus = defaults.downloadStatus;
    	      this.lastUpdatedTimestamp = defaults.lastUpdatedTimestamp;
    	      this.offlineDataTransferStatus = defaults.offlineDataTransferStatus;
    	      this.syncActivity = defaults.syncActivity;
    	      this.totalPersistentFilesNotSyncingCount = defaults.totalPersistentFilesNotSyncingCount;
    	      this.uploadActivity = defaults.uploadActivity;
    	      this.uploadHealth = defaults.uploadHealth;
    	      this.uploadStatus = defaults.uploadStatus;
        }

        @CustomType.Setter
        public Builder combinedHealth(String combinedHealth) {
            this.combinedHealth = Objects.requireNonNull(combinedHealth);
            return this;
        }
        @CustomType.Setter
        public Builder downloadActivity(ServerEndpointSyncActivityStatusResponse downloadActivity) {
            this.downloadActivity = Objects.requireNonNull(downloadActivity);
            return this;
        }
        @CustomType.Setter
        public Builder downloadHealth(String downloadHealth) {
            this.downloadHealth = Objects.requireNonNull(downloadHealth);
            return this;
        }
        @CustomType.Setter
        public Builder downloadStatus(ServerEndpointSyncSessionStatusResponse downloadStatus) {
            this.downloadStatus = Objects.requireNonNull(downloadStatus);
            return this;
        }
        @CustomType.Setter
        public Builder lastUpdatedTimestamp(String lastUpdatedTimestamp) {
            this.lastUpdatedTimestamp = Objects.requireNonNull(lastUpdatedTimestamp);
            return this;
        }
        @CustomType.Setter
        public Builder offlineDataTransferStatus(String offlineDataTransferStatus) {
            this.offlineDataTransferStatus = Objects.requireNonNull(offlineDataTransferStatus);
            return this;
        }
        @CustomType.Setter
        public Builder syncActivity(String syncActivity) {
            this.syncActivity = Objects.requireNonNull(syncActivity);
            return this;
        }
        @CustomType.Setter
        public Builder totalPersistentFilesNotSyncingCount(Double totalPersistentFilesNotSyncingCount) {
            this.totalPersistentFilesNotSyncingCount = Objects.requireNonNull(totalPersistentFilesNotSyncingCount);
            return this;
        }
        @CustomType.Setter
        public Builder uploadActivity(ServerEndpointSyncActivityStatusResponse uploadActivity) {
            this.uploadActivity = Objects.requireNonNull(uploadActivity);
            return this;
        }
        @CustomType.Setter
        public Builder uploadHealth(String uploadHealth) {
            this.uploadHealth = Objects.requireNonNull(uploadHealth);
            return this;
        }
        @CustomType.Setter
        public Builder uploadStatus(ServerEndpointSyncSessionStatusResponse uploadStatus) {
            this.uploadStatus = Objects.requireNonNull(uploadStatus);
            return this;
        }
        public ServerEndpointSyncStatusResponse build() {
            final var o = new ServerEndpointSyncStatusResponse();
            o.combinedHealth = combinedHealth;
            o.downloadActivity = downloadActivity;
            o.downloadHealth = downloadHealth;
            o.downloadStatus = downloadStatus;
            o.lastUpdatedTimestamp = lastUpdatedTimestamp;
            o.offlineDataTransferStatus = offlineDataTransferStatus;
            o.syncActivity = syncActivity;
            o.totalPersistentFilesNotSyncingCount = totalPersistentFilesNotSyncingCount;
            o.uploadActivity = uploadActivity;
            o.uploadHealth = uploadHealth;
            o.uploadStatus = uploadStatus;
            return o;
        }
    }
}
