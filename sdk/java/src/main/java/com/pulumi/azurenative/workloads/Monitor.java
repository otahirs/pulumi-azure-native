// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.workloads;

import com.pulumi.azurenative.Utilities;
import com.pulumi.azurenative.workloads.MonitorArgs;
import com.pulumi.azurenative.workloads.outputs.ManagedRGConfigurationResponse;
import com.pulumi.azurenative.workloads.outputs.MonitorPropertiesResponseErrors;
import com.pulumi.azurenative.workloads.outputs.SystemDataResponse;
import com.pulumi.azurenative.workloads.outputs.UserAssignedServiceIdentityResponse;
import com.pulumi.core.Alias;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * SAP monitor info on Azure (ARM properties and SAP monitor properties)
 * API Version: 2021-12-01-preview.
 * 
 * ## Example Usage
 * ### Create a SAP monitor
 * 
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var monitor = new Monitor(&#34;monitor&#34;, MonitorArgs.builder()        
 *             .appLocation(&#34;westus&#34;)
 *             .location(&#34;westus&#34;)
 *             .logAnalyticsWorkspaceArmId(&#34;/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/myResourceGroup/providers/microsoft.operationalinsights/workspaces/myWorkspace&#34;)
 *             .managedResourceGroupConfiguration(Map.of(&#34;name&#34;, &#34;myManagedRg&#34;))
 *             .monitorName(&#34;mySapMonitor&#34;)
 *             .monitorSubnet(&#34;/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/myVnet/subnets/mySubnet&#34;)
 *             .resourceGroupName(&#34;myResourceGroup&#34;)
 *             .routingPreference(&#34;RouteAll&#34;)
 *             .tags(Map.of(&#34;key&#34;, &#34;value&#34;))
 *             .build());
 * 
 *     }
 * }
 * 
 * ```
 * 
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:workloads:monitor mySapMonitor /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.Workloads/workloads/mySapMonitor 
 * ```
 * 
 */
@ResourceType(type="azure-native:workloads:monitor")
public class Monitor extends com.pulumi.resources.CustomResource {
    /**
     * The SAP monitor resources will be deployed in the SAP monitoring region. The subnet region should be same as the SAP monitoring region.
     * 
     */
    @Export(name="appLocation", type=String.class, parameters={})
    private Output</* @Nullable */ String> appLocation;

    /**
     * @return The SAP monitor resources will be deployed in the SAP monitoring region. The subnet region should be same as the SAP monitoring region.
     * 
     */
    public Output<Optional<String>> appLocation() {
        return Codegen.optional(this.appLocation);
    }
    /**
     * Defines the SAP monitor errors.
     * 
     */
    @Export(name="errors", type=MonitorPropertiesResponseErrors.class, parameters={})
    private Output<MonitorPropertiesResponseErrors> errors;

    /**
     * @return Defines the SAP monitor errors.
     * 
     */
    public Output<MonitorPropertiesResponseErrors> errors() {
        return this.errors;
    }
    /**
     * Managed service identity (user assigned identities)
     * 
     */
    @Export(name="identity", type=UserAssignedServiceIdentityResponse.class, parameters={})
    private Output</* @Nullable */ UserAssignedServiceIdentityResponse> identity;

    /**
     * @return Managed service identity (user assigned identities)
     * 
     */
    public Output<Optional<UserAssignedServiceIdentityResponse>> identity() {
        return Codegen.optional(this.identity);
    }
    /**
     * The geo-location where the resource lives
     * 
     */
    @Export(name="location", type=String.class, parameters={})
    private Output<String> location;

    /**
     * @return The geo-location where the resource lives
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * The ARM ID of the Log Analytics Workspace that is used for SAP monitoring.
     * 
     */
    @Export(name="logAnalyticsWorkspaceArmId", type=String.class, parameters={})
    private Output</* @Nullable */ String> logAnalyticsWorkspaceArmId;

    /**
     * @return The ARM ID of the Log Analytics Workspace that is used for SAP monitoring.
     * 
     */
    public Output<Optional<String>> logAnalyticsWorkspaceArmId() {
        return Codegen.optional(this.logAnalyticsWorkspaceArmId);
    }
    /**
     * Managed resource group configuration
     * 
     */
    @Export(name="managedResourceGroupConfiguration", type=ManagedRGConfigurationResponse.class, parameters={})
    private Output</* @Nullable */ ManagedRGConfigurationResponse> managedResourceGroupConfiguration;

    /**
     * @return Managed resource group configuration
     * 
     */
    public Output<Optional<ManagedRGConfigurationResponse>> managedResourceGroupConfiguration() {
        return Codegen.optional(this.managedResourceGroupConfiguration);
    }
    /**
     * The subnet which the SAP monitor will be deployed in
     * 
     */
    @Export(name="monitorSubnet", type=String.class, parameters={})
    private Output</* @Nullable */ String> monitorSubnet;

    /**
     * @return The subnet which the SAP monitor will be deployed in
     * 
     */
    public Output<Optional<String>> monitorSubnet() {
        return Codegen.optional(this.monitorSubnet);
    }
    /**
     * The ARM ID of the MSI used for SAP monitoring.
     * 
     */
    @Export(name="msiArmId", type=String.class, parameters={})
    private Output<String> msiArmId;

    /**
     * @return The ARM ID of the MSI used for SAP monitoring.
     * 
     */
    public Output<String> msiArmId() {
        return this.msiArmId;
    }
    /**
     * The name of the resource
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the resource
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * State of provisioning of the SAP monitor.
     * 
     */
    @Export(name="provisioningState", type=String.class, parameters={})
    private Output<String> provisioningState;

    /**
     * @return State of provisioning of the SAP monitor.
     * 
     */
    public Output<String> provisioningState() {
        return this.provisioningState;
    }
    /**
     * Sets the routing preference of the SAP monitor. By default only RFC1918 traffic is routed to the customer VNET.
     * 
     */
    @Export(name="routingPreference", type=String.class, parameters={})
    private Output</* @Nullable */ String> routingPreference;

    /**
     * @return Sets the routing preference of the SAP monitor. By default only RFC1918 traffic is routed to the customer VNET.
     * 
     */
    public Output<Optional<String>> routingPreference() {
        return Codegen.optional(this.routingPreference);
    }
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     */
    @Export(name="systemData", type=SystemDataResponse.class, parameters={})
    private Output<SystemDataResponse> systemData;

    /**
     * @return Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     */
    public Output<SystemDataResponse> systemData() {
        return this.systemData;
    }
    /**
     * Resource tags.
     * 
     */
    @Export(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return Resource tags.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Monitor(String name) {
        this(name, MonitorArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Monitor(String name, MonitorArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Monitor(String name, MonitorArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:workloads:monitor", name, args == null ? MonitorArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Monitor(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:workloads:monitor", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("azure-native:workloads/v20211201preview:monitor").build())
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Monitor get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Monitor(name, id, options);
    }
}
