// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.customerinsights.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Double;
import java.util.Objects;

@CustomType
public final class KpiThresholdsResponse {
    /**
     * @return Whether or not the KPI is an increasing KPI.
     * 
     */
    private Boolean increasingKpi;
    /**
     * @return The lower threshold limit.
     * 
     */
    private Double lowerLimit;
    /**
     * @return The upper threshold limit.
     * 
     */
    private Double upperLimit;

    private KpiThresholdsResponse() {}
    /**
     * @return Whether or not the KPI is an increasing KPI.
     * 
     */
    public Boolean increasingKpi() {
        return this.increasingKpi;
    }
    /**
     * @return The lower threshold limit.
     * 
     */
    public Double lowerLimit() {
        return this.lowerLimit;
    }
    /**
     * @return The upper threshold limit.
     * 
     */
    public Double upperLimit() {
        return this.upperLimit;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(KpiThresholdsResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean increasingKpi;
        private Double lowerLimit;
        private Double upperLimit;
        public Builder() {}
        public Builder(KpiThresholdsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.increasingKpi = defaults.increasingKpi;
    	      this.lowerLimit = defaults.lowerLimit;
    	      this.upperLimit = defaults.upperLimit;
        }

        @CustomType.Setter
        public Builder increasingKpi(Boolean increasingKpi) {
            this.increasingKpi = Objects.requireNonNull(increasingKpi);
            return this;
        }
        @CustomType.Setter
        public Builder lowerLimit(Double lowerLimit) {
            this.lowerLimit = Objects.requireNonNull(lowerLimit);
            return this;
        }
        @CustomType.Setter
        public Builder upperLimit(Double upperLimit) {
            this.upperLimit = Objects.requireNonNull(upperLimit);
            return this;
        }
        public KpiThresholdsResponse build() {
            final var o = new KpiThresholdsResponse();
            o.increasingKpi = increasingKpi;
            o.lowerLimit = lowerLimit;
            o.upperLimit = upperLimit;
            return o;
        }
    }
}
