// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.recoveryservices.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DPMProtectedItemExtendedInfoResponse {
    /**
     * @return Used Disk storage in bytes.
     * 
     */
    private @Nullable String diskStorageUsedInBytes;
    /**
     * @return To check if backup item is collocated.
     * 
     */
    private @Nullable Boolean isCollocated;
    /**
     * @return To check if backup item is cloud protected.
     * 
     */
    private @Nullable Boolean isPresentOnCloud;
    /**
     * @return Last backup status information on backup item.
     * 
     */
    private @Nullable String lastBackupStatus;
    /**
     * @return Last refresh time on backup item.
     * 
     */
    private @Nullable String lastRefreshedAt;
    /**
     * @return Oldest cloud recovery point time.
     * 
     */
    private @Nullable String oldestRecoveryPoint;
    /**
     * @return latest disk recovery point time.
     * 
     */
    private @Nullable String onPremiseLatestRecoveryPoint;
    /**
     * @return Oldest disk recovery point time.
     * 
     */
    private @Nullable String onPremiseOldestRecoveryPoint;
    /**
     * @return disk recovery point count.
     * 
     */
    private @Nullable Integer onPremiseRecoveryPointCount;
    /**
     * @return Attribute to provide information on various DBs.
     * 
     */
    private @Nullable Map<String,String> protectableObjectLoadPath;
    /**
     * @return To check if backup item is disk protected.
     * 
     */
    private @Nullable Boolean protected_;
    /**
     * @return Protection group name of the backup item.
     * 
     */
    private @Nullable String protectionGroupName;
    /**
     * @return cloud recovery point count.
     * 
     */
    private @Nullable Integer recoveryPointCount;
    /**
     * @return total Disk storage in bytes.
     * 
     */
    private @Nullable String totalDiskStorageSizeInBytes;

    private DPMProtectedItemExtendedInfoResponse() {}
    /**
     * @return Used Disk storage in bytes.
     * 
     */
    public Optional<String> diskStorageUsedInBytes() {
        return Optional.ofNullable(this.diskStorageUsedInBytes);
    }
    /**
     * @return To check if backup item is collocated.
     * 
     */
    public Optional<Boolean> isCollocated() {
        return Optional.ofNullable(this.isCollocated);
    }
    /**
     * @return To check if backup item is cloud protected.
     * 
     */
    public Optional<Boolean> isPresentOnCloud() {
        return Optional.ofNullable(this.isPresentOnCloud);
    }
    /**
     * @return Last backup status information on backup item.
     * 
     */
    public Optional<String> lastBackupStatus() {
        return Optional.ofNullable(this.lastBackupStatus);
    }
    /**
     * @return Last refresh time on backup item.
     * 
     */
    public Optional<String> lastRefreshedAt() {
        return Optional.ofNullable(this.lastRefreshedAt);
    }
    /**
     * @return Oldest cloud recovery point time.
     * 
     */
    public Optional<String> oldestRecoveryPoint() {
        return Optional.ofNullable(this.oldestRecoveryPoint);
    }
    /**
     * @return latest disk recovery point time.
     * 
     */
    public Optional<String> onPremiseLatestRecoveryPoint() {
        return Optional.ofNullable(this.onPremiseLatestRecoveryPoint);
    }
    /**
     * @return Oldest disk recovery point time.
     * 
     */
    public Optional<String> onPremiseOldestRecoveryPoint() {
        return Optional.ofNullable(this.onPremiseOldestRecoveryPoint);
    }
    /**
     * @return disk recovery point count.
     * 
     */
    public Optional<Integer> onPremiseRecoveryPointCount() {
        return Optional.ofNullable(this.onPremiseRecoveryPointCount);
    }
    /**
     * @return Attribute to provide information on various DBs.
     * 
     */
    public Map<String,String> protectableObjectLoadPath() {
        return this.protectableObjectLoadPath == null ? Map.of() : this.protectableObjectLoadPath;
    }
    /**
     * @return To check if backup item is disk protected.
     * 
     */
    public Optional<Boolean> protected_() {
        return Optional.ofNullable(this.protected_);
    }
    /**
     * @return Protection group name of the backup item.
     * 
     */
    public Optional<String> protectionGroupName() {
        return Optional.ofNullable(this.protectionGroupName);
    }
    /**
     * @return cloud recovery point count.
     * 
     */
    public Optional<Integer> recoveryPointCount() {
        return Optional.ofNullable(this.recoveryPointCount);
    }
    /**
     * @return total Disk storage in bytes.
     * 
     */
    public Optional<String> totalDiskStorageSizeInBytes() {
        return Optional.ofNullable(this.totalDiskStorageSizeInBytes);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DPMProtectedItemExtendedInfoResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String diskStorageUsedInBytes;
        private @Nullable Boolean isCollocated;
        private @Nullable Boolean isPresentOnCloud;
        private @Nullable String lastBackupStatus;
        private @Nullable String lastRefreshedAt;
        private @Nullable String oldestRecoveryPoint;
        private @Nullable String onPremiseLatestRecoveryPoint;
        private @Nullable String onPremiseOldestRecoveryPoint;
        private @Nullable Integer onPremiseRecoveryPointCount;
        private @Nullable Map<String,String> protectableObjectLoadPath;
        private @Nullable Boolean protected_;
        private @Nullable String protectionGroupName;
        private @Nullable Integer recoveryPointCount;
        private @Nullable String totalDiskStorageSizeInBytes;
        public Builder() {}
        public Builder(DPMProtectedItemExtendedInfoResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.diskStorageUsedInBytes = defaults.diskStorageUsedInBytes;
    	      this.isCollocated = defaults.isCollocated;
    	      this.isPresentOnCloud = defaults.isPresentOnCloud;
    	      this.lastBackupStatus = defaults.lastBackupStatus;
    	      this.lastRefreshedAt = defaults.lastRefreshedAt;
    	      this.oldestRecoveryPoint = defaults.oldestRecoveryPoint;
    	      this.onPremiseLatestRecoveryPoint = defaults.onPremiseLatestRecoveryPoint;
    	      this.onPremiseOldestRecoveryPoint = defaults.onPremiseOldestRecoveryPoint;
    	      this.onPremiseRecoveryPointCount = defaults.onPremiseRecoveryPointCount;
    	      this.protectableObjectLoadPath = defaults.protectableObjectLoadPath;
    	      this.protected_ = defaults.protected_;
    	      this.protectionGroupName = defaults.protectionGroupName;
    	      this.recoveryPointCount = defaults.recoveryPointCount;
    	      this.totalDiskStorageSizeInBytes = defaults.totalDiskStorageSizeInBytes;
        }

        @CustomType.Setter
        public Builder diskStorageUsedInBytes(@Nullable String diskStorageUsedInBytes) {
            this.diskStorageUsedInBytes = diskStorageUsedInBytes;
            return this;
        }
        @CustomType.Setter
        public Builder isCollocated(@Nullable Boolean isCollocated) {
            this.isCollocated = isCollocated;
            return this;
        }
        @CustomType.Setter
        public Builder isPresentOnCloud(@Nullable Boolean isPresentOnCloud) {
            this.isPresentOnCloud = isPresentOnCloud;
            return this;
        }
        @CustomType.Setter
        public Builder lastBackupStatus(@Nullable String lastBackupStatus) {
            this.lastBackupStatus = lastBackupStatus;
            return this;
        }
        @CustomType.Setter
        public Builder lastRefreshedAt(@Nullable String lastRefreshedAt) {
            this.lastRefreshedAt = lastRefreshedAt;
            return this;
        }
        @CustomType.Setter
        public Builder oldestRecoveryPoint(@Nullable String oldestRecoveryPoint) {
            this.oldestRecoveryPoint = oldestRecoveryPoint;
            return this;
        }
        @CustomType.Setter
        public Builder onPremiseLatestRecoveryPoint(@Nullable String onPremiseLatestRecoveryPoint) {
            this.onPremiseLatestRecoveryPoint = onPremiseLatestRecoveryPoint;
            return this;
        }
        @CustomType.Setter
        public Builder onPremiseOldestRecoveryPoint(@Nullable String onPremiseOldestRecoveryPoint) {
            this.onPremiseOldestRecoveryPoint = onPremiseOldestRecoveryPoint;
            return this;
        }
        @CustomType.Setter
        public Builder onPremiseRecoveryPointCount(@Nullable Integer onPremiseRecoveryPointCount) {
            this.onPremiseRecoveryPointCount = onPremiseRecoveryPointCount;
            return this;
        }
        @CustomType.Setter
        public Builder protectableObjectLoadPath(@Nullable Map<String,String> protectableObjectLoadPath) {
            this.protectableObjectLoadPath = protectableObjectLoadPath;
            return this;
        }
        @CustomType.Setter("protected")
        public Builder protected_(@Nullable Boolean protected_) {
            this.protected_ = protected_;
            return this;
        }
        @CustomType.Setter
        public Builder protectionGroupName(@Nullable String protectionGroupName) {
            this.protectionGroupName = protectionGroupName;
            return this;
        }
        @CustomType.Setter
        public Builder recoveryPointCount(@Nullable Integer recoveryPointCount) {
            this.recoveryPointCount = recoveryPointCount;
            return this;
        }
        @CustomType.Setter
        public Builder totalDiskStorageSizeInBytes(@Nullable String totalDiskStorageSizeInBytes) {
            this.totalDiskStorageSizeInBytes = totalDiskStorageSizeInBytes;
            return this;
        }
        public DPMProtectedItemExtendedInfoResponse build() {
            final var o = new DPMProtectedItemExtendedInfoResponse();
            o.diskStorageUsedInBytes = diskStorageUsedInBytes;
            o.isCollocated = isCollocated;
            o.isPresentOnCloud = isPresentOnCloud;
            o.lastBackupStatus = lastBackupStatus;
            o.lastRefreshedAt = lastRefreshedAt;
            o.oldestRecoveryPoint = oldestRecoveryPoint;
            o.onPremiseLatestRecoveryPoint = onPremiseLatestRecoveryPoint;
            o.onPremiseOldestRecoveryPoint = onPremiseOldestRecoveryPoint;
            o.onPremiseRecoveryPointCount = onPremiseRecoveryPointCount;
            o.protectableObjectLoadPath = protectableObjectLoadPath;
            o.protected_ = protected_;
            o.protectionGroupName = protectionGroupName;
            o.recoveryPointCount = recoveryPointCount;
            o.totalDiskStorageSizeInBytes = totalDiskStorageSizeInBytes;
            return o;
        }
    }
}
