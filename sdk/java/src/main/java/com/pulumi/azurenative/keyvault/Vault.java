// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.keyvault;

import com.pulumi.azurenative.Utilities;
import com.pulumi.azurenative.keyvault.VaultArgs;
import com.pulumi.azurenative.keyvault.outputs.VaultPropertiesResponse;
import com.pulumi.core.Alias;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Resource information with extended details.
 * API Version: 2019-09-01.
 * 
 * ## Example Usage
 * ### Create a new vault or update an existing vault
 * 
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var vault = new Vault(&#34;vault&#34;, VaultArgs.builder()        
 *             .location(&#34;westus&#34;)
 *             .properties(Map.ofEntries(
 *                 Map.entry(&#34;accessPolicies&#34;, Map.ofEntries(
 *                     Map.entry(&#34;objectId&#34;, &#34;00000000-0000-0000-0000-000000000000&#34;),
 *                     Map.entry(&#34;permissions&#34;, Map.ofEntries(
 *                         Map.entry(&#34;certificates&#34;,                         
 *                             &#34;get&#34;,
 *                             &#34;list&#34;,
 *                             &#34;delete&#34;,
 *                             &#34;create&#34;,
 *                             &#34;import&#34;,
 *                             &#34;update&#34;,
 *                             &#34;managecontacts&#34;,
 *                             &#34;getissuers&#34;,
 *                             &#34;listissuers&#34;,
 *                             &#34;setissuers&#34;,
 *                             &#34;deleteissuers&#34;,
 *                             &#34;manageissuers&#34;,
 *                             &#34;recover&#34;,
 *                             &#34;purge&#34;),
 *                         Map.entry(&#34;keys&#34;,                         
 *                             &#34;encrypt&#34;,
 *                             &#34;decrypt&#34;,
 *                             &#34;wrapKey&#34;,
 *                             &#34;unwrapKey&#34;,
 *                             &#34;sign&#34;,
 *                             &#34;verify&#34;,
 *                             &#34;get&#34;,
 *                             &#34;list&#34;,
 *                             &#34;create&#34;,
 *                             &#34;update&#34;,
 *                             &#34;import&#34;,
 *                             &#34;delete&#34;,
 *                             &#34;backup&#34;,
 *                             &#34;restore&#34;,
 *                             &#34;recover&#34;,
 *                             &#34;purge&#34;),
 *                         Map.entry(&#34;secrets&#34;,                         
 *                             &#34;get&#34;,
 *                             &#34;list&#34;,
 *                             &#34;set&#34;,
 *                             &#34;delete&#34;,
 *                             &#34;backup&#34;,
 *                             &#34;restore&#34;,
 *                             &#34;recover&#34;,
 *                             &#34;purge&#34;)
 *                     )),
 *                     Map.entry(&#34;tenantId&#34;, &#34;00000000-0000-0000-0000-000000000000&#34;)
 *                 )),
 *                 Map.entry(&#34;enabledForDeployment&#34;, true),
 *                 Map.entry(&#34;enabledForDiskEncryption&#34;, true),
 *                 Map.entry(&#34;enabledForTemplateDeployment&#34;, true),
 *                 Map.entry(&#34;sku&#34;, Map.ofEntries(
 *                     Map.entry(&#34;family&#34;, &#34;A&#34;),
 *                     Map.entry(&#34;name&#34;, &#34;standard&#34;)
 *                 )),
 *                 Map.entry(&#34;tenantId&#34;, &#34;00000000-0000-0000-0000-000000000000&#34;)
 *             ))
 *             .resourceGroupName(&#34;sample-resource-group&#34;)
 *             .vaultName(&#34;sample-vault&#34;)
 *             .build());
 * 
 *     }
 * }
 * 
 * ```
 * ### Create or update a vault with network acls
 * 
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var vault = new Vault(&#34;vault&#34;, VaultArgs.builder()        
 *             .location(&#34;westus&#34;)
 *             .properties(Map.ofEntries(
 *                 Map.entry(&#34;enabledForDeployment&#34;, true),
 *                 Map.entry(&#34;enabledForDiskEncryption&#34;, true),
 *                 Map.entry(&#34;enabledForTemplateDeployment&#34;, true),
 *                 Map.entry(&#34;networkAcls&#34;, Map.ofEntries(
 *                     Map.entry(&#34;bypass&#34;, &#34;AzureServices&#34;),
 *                     Map.entry(&#34;defaultAction&#34;, &#34;Deny&#34;),
 *                     Map.entry(&#34;ipRules&#34;,                     
 *                         Map.of(&#34;value&#34;, &#34;124.56.78.91&#34;),
 *                         Map.of(&#34;value&#34;, &#34;&#39;10.91.4.0/24&#39;&#34;)),
 *                     Map.entry(&#34;virtualNetworkRules&#34;, Map.of(&#34;id&#34;, &#34;/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/test-vnet/subnets/subnet1&#34;))
 *                 )),
 *                 Map.entry(&#34;sku&#34;, Map.ofEntries(
 *                     Map.entry(&#34;family&#34;, &#34;A&#34;),
 *                     Map.entry(&#34;name&#34;, &#34;standard&#34;)
 *                 )),
 *                 Map.entry(&#34;tenantId&#34;, &#34;00000000-0000-0000-0000-000000000000&#34;)
 *             ))
 *             .resourceGroupName(&#34;sample-resource-group&#34;)
 *             .vaultName(&#34;sample-vault&#34;)
 *             .build());
 * 
 *     }
 * }
 * 
 * ```
 * 
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:keyvault:Vault sample-vault /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/sample-resource-group/providers/Microsoft.KeyVault/vaults/sample-vault 
 * ```
 * 
 */
@ResourceType(type="azure-native:keyvault:Vault")
public class Vault extends com.pulumi.resources.CustomResource {
    /**
     * Azure location of the key vault resource.
     * 
     */
    @Export(name="location", type=String.class, parameters={})
    private Output</* @Nullable */ String> location;

    /**
     * @return Azure location of the key vault resource.
     * 
     */
    public Output<Optional<String>> location() {
        return Codegen.optional(this.location);
    }
    /**
     * Name of the key vault resource.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Name of the key vault resource.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Properties of the vault
     * 
     */
    @Export(name="properties", type=VaultPropertiesResponse.class, parameters={})
    private Output<VaultPropertiesResponse> properties;

    /**
     * @return Properties of the vault
     * 
     */
    public Output<VaultPropertiesResponse> properties() {
        return this.properties;
    }
    /**
     * Tags assigned to the key vault resource.
     * 
     */
    @Export(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return Tags assigned to the key vault resource.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * Resource type of the key vault resource.
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return Resource type of the key vault resource.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Vault(String name) {
        this(name, VaultArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Vault(String name, VaultArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Vault(String name, VaultArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:keyvault:Vault", name, args == null ? VaultArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Vault(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:keyvault:Vault", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("azure-native:keyvault/v20150601:Vault").build()),
                Output.of(Alias.builder().type("azure-native:keyvault/v20161001:Vault").build()),
                Output.of(Alias.builder().type("azure-native:keyvault/v20180214:Vault").build()),
                Output.of(Alias.builder().type("azure-native:keyvault/v20180214preview:Vault").build()),
                Output.of(Alias.builder().type("azure-native:keyvault/v20190901:Vault").build()),
                Output.of(Alias.builder().type("azure-native:keyvault/v20200401preview:Vault").build()),
                Output.of(Alias.builder().type("azure-native:keyvault/v20210401preview:Vault").build()),
                Output.of(Alias.builder().type("azure-native:keyvault/v20210601preview:Vault").build()),
                Output.of(Alias.builder().type("azure-native:keyvault/v20211001:Vault").build()),
                Output.of(Alias.builder().type("azure-native:keyvault/v20211101preview:Vault").build()),
                Output.of(Alias.builder().type("azure-native:keyvault/v20220701:Vault").build())
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Vault get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Vault(name, id, options);
    }
}
