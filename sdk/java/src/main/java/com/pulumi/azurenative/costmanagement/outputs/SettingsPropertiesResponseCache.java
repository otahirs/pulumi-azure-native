// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.costmanagement.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SettingsPropertiesResponseCache {
    /**
     * @return Indicates the account type. Allowed values include: EA, PAYG, Modern, Internal, Unknown.
     * 
     */
    private String channel;
    /**
     * @return Resource ID used by Resource Manager to uniquely identify the scope.
     * 
     */
    private String id;
    /**
     * @return Display name for the scope.
     * 
     */
    private String name;
    /**
     * @return Resource ID of the parent scope. For instance, subscription&#39;s resource ID for a resource group or a management group resource ID for a subscription.
     * 
     */
    private @Nullable String parent;
    /**
     * @return Indicates the status of the scope. Status only applies to subscriptions and billing accounts.
     * 
     */
    private @Nullable String status;
    /**
     * @return Indicates the type of modern account. Allowed values include: Individual, Enterprise, Partner, Indirect, NotApplicable
     * 
     */
    private String subchannel;

    private SettingsPropertiesResponseCache() {}
    /**
     * @return Indicates the account type. Allowed values include: EA, PAYG, Modern, Internal, Unknown.
     * 
     */
    public String channel() {
        return this.channel;
    }
    /**
     * @return Resource ID used by Resource Manager to uniquely identify the scope.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Display name for the scope.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Resource ID of the parent scope. For instance, subscription&#39;s resource ID for a resource group or a management group resource ID for a subscription.
     * 
     */
    public Optional<String> parent() {
        return Optional.ofNullable(this.parent);
    }
    /**
     * @return Indicates the status of the scope. Status only applies to subscriptions and billing accounts.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }
    /**
     * @return Indicates the type of modern account. Allowed values include: Individual, Enterprise, Partner, Indirect, NotApplicable
     * 
     */
    public String subchannel() {
        return this.subchannel;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SettingsPropertiesResponseCache defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String channel;
        private String id;
        private String name;
        private @Nullable String parent;
        private @Nullable String status;
        private String subchannel;
        public Builder() {}
        public Builder(SettingsPropertiesResponseCache defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.channel = defaults.channel;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.parent = defaults.parent;
    	      this.status = defaults.status;
    	      this.subchannel = defaults.subchannel;
        }

        @CustomType.Setter
        public Builder channel(String channel) {
            this.channel = Objects.requireNonNull(channel);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder parent(@Nullable String parent) {
            this.parent = parent;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder subchannel(String subchannel) {
            this.subchannel = Objects.requireNonNull(subchannel);
            return this;
        }
        public SettingsPropertiesResponseCache build() {
            final var o = new SettingsPropertiesResponseCache();
            o.channel = channel;
            o.id = id;
            o.name = name;
            o.parent = parent;
            o.status = status;
            o.subchannel = subchannel;
            return o;
        }
    }
}
