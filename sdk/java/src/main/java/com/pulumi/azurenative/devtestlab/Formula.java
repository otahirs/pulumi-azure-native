// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.devtestlab;

import com.pulumi.azurenative.Utilities;
import com.pulumi.azurenative.devtestlab.FormulaArgs;
import com.pulumi.azurenative.devtestlab.outputs.FormulaPropertiesFromVmResponse;
import com.pulumi.azurenative.devtestlab.outputs.LabVirtualMachineCreationParameterResponse;
import com.pulumi.core.Alias;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * A formula for creating a VM, specifying an image base and other parameters
 * API Version: 2018-09-15.
 * 
 * ## Example Usage
 * ### Formulas_CreateOrUpdate
 * 
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var formula = new Formula(&#34;formula&#34;, FormulaArgs.builder()        
 *             .description(&#34;Formula using a Linux base&#34;)
 *             .formulaContent(Map.ofEntries(
 *                 Map.entry(&#34;allowClaim&#34;, false),
 *                 Map.entry(&#34;artifacts&#34;, Map.ofEntries(
 *                     Map.entry(&#34;artifactId&#34;, &#34;/artifactsources/{artifactSourceName}/artifacts/linux-install-nodejs&#34;),
 *                     Map.entry(&#34;parameters&#34;, )
 *                 )),
 *                 Map.entry(&#34;disallowPublicIpAddress&#34;, true),
 *                 Map.entry(&#34;galleryImageReference&#34;, Map.ofEntries(
 *                     Map.entry(&#34;offer&#34;, &#34;0001-com-ubuntu-server-groovy&#34;),
 *                     Map.entry(&#34;osType&#34;, &#34;Linux&#34;),
 *                     Map.entry(&#34;publisher&#34;, &#34;canonical&#34;),
 *                     Map.entry(&#34;sku&#34;, &#34;20_10&#34;),
 *                     Map.entry(&#34;version&#34;, &#34;latest&#34;)
 *                 )),
 *                 Map.entry(&#34;isAuthenticationWithSshKey&#34;, false),
 *                 Map.entry(&#34;labSubnetName&#34;, &#34;Dtl{labName}Subnet&#34;),
 *                 Map.entry(&#34;labVirtualNetworkId&#34;, &#34;/virtualnetworks/dtl{labName}&#34;),
 *                 Map.entry(&#34;location&#34;, &#34;{location}&#34;),
 *                 Map.entry(&#34;networkInterface&#34;, Map.of(&#34;sharedPublicIpAddressConfiguration&#34;, Map.of(&#34;inboundNatRules&#34;, Map.ofEntries(
 *                     Map.entry(&#34;backendPort&#34;, 22),
 *                     Map.entry(&#34;transportProtocol&#34;, &#34;Tcp&#34;)
 *                 )))),
 *                 Map.entry(&#34;notes&#34;, &#34;Ubuntu Server 20.10&#34;),
 *                 Map.entry(&#34;size&#34;, &#34;Standard_B1ms&#34;),
 *                 Map.entry(&#34;storageType&#34;, &#34;Standard&#34;),
 *                 Map.entry(&#34;userName&#34;, &#34;user&#34;)
 *             ))
 *             .labName(&#34;{labName}&#34;)
 *             .location(&#34;{location}&#34;)
 *             .name(&#34;{formulaName}&#34;)
 *             .resourceGroupName(&#34;resourceGroupName&#34;)
 *             .build());
 * 
 *     }
 * }
 * 
 * ```
 * 
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:devtestlab:Formula {formulaName} /subscriptions/{subscriptionId}/resourcegroups/resourceGroupName/providers/microsoft.devtestlab/labs/{labName}/formulas/{formulaName} 
 * ```
 * 
 */
@ResourceType(type="azure-native:devtestlab:Formula")
public class Formula extends com.pulumi.resources.CustomResource {
    /**
     * The author of the formula.
     * 
     */
    @Export(name="author", type=String.class, parameters={})
    private Output<String> author;

    /**
     * @return The author of the formula.
     * 
     */
    public Output<String> author() {
        return this.author;
    }
    /**
     * The creation date of the formula.
     * 
     */
    @Export(name="creationDate", type=String.class, parameters={})
    private Output<String> creationDate;

    /**
     * @return The creation date of the formula.
     * 
     */
    public Output<String> creationDate() {
        return this.creationDate;
    }
    /**
     * The description of the formula.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return The description of the formula.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * The content of the formula.
     * 
     */
    @Export(name="formulaContent", type=LabVirtualMachineCreationParameterResponse.class, parameters={})
    private Output</* @Nullable */ LabVirtualMachineCreationParameterResponse> formulaContent;

    /**
     * @return The content of the formula.
     * 
     */
    public Output<Optional<LabVirtualMachineCreationParameterResponse>> formulaContent() {
        return Codegen.optional(this.formulaContent);
    }
    /**
     * The location of the resource.
     * 
     */
    @Export(name="location", type=String.class, parameters={})
    private Output</* @Nullable */ String> location;

    /**
     * @return The location of the resource.
     * 
     */
    public Output<Optional<String>> location() {
        return Codegen.optional(this.location);
    }
    /**
     * The name of the resource.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the resource.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The OS type of the formula.
     * 
     */
    @Export(name="osType", type=String.class, parameters={})
    private Output</* @Nullable */ String> osType;

    /**
     * @return The OS type of the formula.
     * 
     */
    public Output<Optional<String>> osType() {
        return Codegen.optional(this.osType);
    }
    /**
     * The provisioning status of the resource.
     * 
     */
    @Export(name="provisioningState", type=String.class, parameters={})
    private Output<String> provisioningState;

    /**
     * @return The provisioning status of the resource.
     * 
     */
    public Output<String> provisioningState() {
        return this.provisioningState;
    }
    /**
     * The tags of the resource.
     * 
     */
    @Export(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return The tags of the resource.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * The type of the resource.
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return The type of the resource.
     * 
     */
    public Output<String> type() {
        return this.type;
    }
    /**
     * The unique immutable identifier of a resource (Guid).
     * 
     */
    @Export(name="uniqueIdentifier", type=String.class, parameters={})
    private Output<String> uniqueIdentifier;

    /**
     * @return The unique immutable identifier of a resource (Guid).
     * 
     */
    public Output<String> uniqueIdentifier() {
        return this.uniqueIdentifier;
    }
    /**
     * Information about a VM from which a formula is to be created.
     * 
     */
    @Export(name="vm", type=FormulaPropertiesFromVmResponse.class, parameters={})
    private Output</* @Nullable */ FormulaPropertiesFromVmResponse> vm;

    /**
     * @return Information about a VM from which a formula is to be created.
     * 
     */
    public Output<Optional<FormulaPropertiesFromVmResponse>> vm() {
        return Codegen.optional(this.vm);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Formula(String name) {
        this(name, FormulaArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Formula(String name, FormulaArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Formula(String name, FormulaArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:devtestlab:Formula", name, args == null ? FormulaArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Formula(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:devtestlab:Formula", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("azure-native:devtestlab/v20150521preview:Formula").build()),
                Output.of(Alias.builder().type("azure-native:devtestlab/v20160515:Formula").build()),
                Output.of(Alias.builder().type("azure-native:devtestlab/v20180915:Formula").build())
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Formula get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Formula(name, id, options);
    }
}
