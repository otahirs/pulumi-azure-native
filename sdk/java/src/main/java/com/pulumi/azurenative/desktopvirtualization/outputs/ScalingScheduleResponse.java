// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.desktopvirtualization.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ScalingScheduleResponse {
    /**
     * @return Set of days of the week on which this schedule is active.
     * 
     */
    private @Nullable List<String> daysOfWeek;
    /**
     * @return Name of the scaling schedule.
     * 
     */
    private @Nullable String name;
    /**
     * @return Load balancing algorithm for off-peak period.
     * 
     */
    private @Nullable String offPeakLoadBalancingAlgorithm;
    /**
     * @return Starting time for off-peak period.
     * 
     */
    private @Nullable String offPeakStartTime;
    /**
     * @return Load balancing algorithm for peak period.
     * 
     */
    private @Nullable String peakLoadBalancingAlgorithm;
    /**
     * @return Starting time for peak period.
     * 
     */
    private @Nullable String peakStartTime;
    /**
     * @return Capacity threshold for ramp down period.
     * 
     */
    private @Nullable Integer rampDownCapacityThresholdPct;
    /**
     * @return Should users be logged off forcefully from hosts.
     * 
     */
    private @Nullable Boolean rampDownForceLogoffUsers;
    /**
     * @return Load balancing algorithm for ramp down period.
     * 
     */
    private @Nullable String rampDownLoadBalancingAlgorithm;
    /**
     * @return Minimum host percentage for ramp down period.
     * 
     */
    private @Nullable Integer rampDownMinimumHostsPct;
    /**
     * @return Notification message for users during ramp down period.
     * 
     */
    private @Nullable String rampDownNotificationMessage;
    /**
     * @return Starting time for ramp down period.
     * 
     */
    private @Nullable String rampDownStartTime;
    /**
     * @return Specifies when to stop hosts during ramp down period.
     * 
     */
    private @Nullable String rampDownStopHostsWhen;
    /**
     * @return Number of minutes to wait to stop hosts during ramp down period.
     * 
     */
    private @Nullable Integer rampDownWaitTimeMinutes;
    /**
     * @return Capacity threshold for ramp up period.
     * 
     */
    private @Nullable Integer rampUpCapacityThresholdPct;
    /**
     * @return Load balancing algorithm for ramp up period.
     * 
     */
    private @Nullable String rampUpLoadBalancingAlgorithm;
    /**
     * @return Minimum host percentage for ramp up period.
     * 
     */
    private @Nullable Integer rampUpMinimumHostsPct;
    /**
     * @return Starting time for ramp up period.
     * 
     */
    private @Nullable String rampUpStartTime;

    private ScalingScheduleResponse() {}
    /**
     * @return Set of days of the week on which this schedule is active.
     * 
     */
    public List<String> daysOfWeek() {
        return this.daysOfWeek == null ? List.of() : this.daysOfWeek;
    }
    /**
     * @return Name of the scaling schedule.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return Load balancing algorithm for off-peak period.
     * 
     */
    public Optional<String> offPeakLoadBalancingAlgorithm() {
        return Optional.ofNullable(this.offPeakLoadBalancingAlgorithm);
    }
    /**
     * @return Starting time for off-peak period.
     * 
     */
    public Optional<String> offPeakStartTime() {
        return Optional.ofNullable(this.offPeakStartTime);
    }
    /**
     * @return Load balancing algorithm for peak period.
     * 
     */
    public Optional<String> peakLoadBalancingAlgorithm() {
        return Optional.ofNullable(this.peakLoadBalancingAlgorithm);
    }
    /**
     * @return Starting time for peak period.
     * 
     */
    public Optional<String> peakStartTime() {
        return Optional.ofNullable(this.peakStartTime);
    }
    /**
     * @return Capacity threshold for ramp down period.
     * 
     */
    public Optional<Integer> rampDownCapacityThresholdPct() {
        return Optional.ofNullable(this.rampDownCapacityThresholdPct);
    }
    /**
     * @return Should users be logged off forcefully from hosts.
     * 
     */
    public Optional<Boolean> rampDownForceLogoffUsers() {
        return Optional.ofNullable(this.rampDownForceLogoffUsers);
    }
    /**
     * @return Load balancing algorithm for ramp down period.
     * 
     */
    public Optional<String> rampDownLoadBalancingAlgorithm() {
        return Optional.ofNullable(this.rampDownLoadBalancingAlgorithm);
    }
    /**
     * @return Minimum host percentage for ramp down period.
     * 
     */
    public Optional<Integer> rampDownMinimumHostsPct() {
        return Optional.ofNullable(this.rampDownMinimumHostsPct);
    }
    /**
     * @return Notification message for users during ramp down period.
     * 
     */
    public Optional<String> rampDownNotificationMessage() {
        return Optional.ofNullable(this.rampDownNotificationMessage);
    }
    /**
     * @return Starting time for ramp down period.
     * 
     */
    public Optional<String> rampDownStartTime() {
        return Optional.ofNullable(this.rampDownStartTime);
    }
    /**
     * @return Specifies when to stop hosts during ramp down period.
     * 
     */
    public Optional<String> rampDownStopHostsWhen() {
        return Optional.ofNullable(this.rampDownStopHostsWhen);
    }
    /**
     * @return Number of minutes to wait to stop hosts during ramp down period.
     * 
     */
    public Optional<Integer> rampDownWaitTimeMinutes() {
        return Optional.ofNullable(this.rampDownWaitTimeMinutes);
    }
    /**
     * @return Capacity threshold for ramp up period.
     * 
     */
    public Optional<Integer> rampUpCapacityThresholdPct() {
        return Optional.ofNullable(this.rampUpCapacityThresholdPct);
    }
    /**
     * @return Load balancing algorithm for ramp up period.
     * 
     */
    public Optional<String> rampUpLoadBalancingAlgorithm() {
        return Optional.ofNullable(this.rampUpLoadBalancingAlgorithm);
    }
    /**
     * @return Minimum host percentage for ramp up period.
     * 
     */
    public Optional<Integer> rampUpMinimumHostsPct() {
        return Optional.ofNullable(this.rampUpMinimumHostsPct);
    }
    /**
     * @return Starting time for ramp up period.
     * 
     */
    public Optional<String> rampUpStartTime() {
        return Optional.ofNullable(this.rampUpStartTime);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ScalingScheduleResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> daysOfWeek;
        private @Nullable String name;
        private @Nullable String offPeakLoadBalancingAlgorithm;
        private @Nullable String offPeakStartTime;
        private @Nullable String peakLoadBalancingAlgorithm;
        private @Nullable String peakStartTime;
        private @Nullable Integer rampDownCapacityThresholdPct;
        private @Nullable Boolean rampDownForceLogoffUsers;
        private @Nullable String rampDownLoadBalancingAlgorithm;
        private @Nullable Integer rampDownMinimumHostsPct;
        private @Nullable String rampDownNotificationMessage;
        private @Nullable String rampDownStartTime;
        private @Nullable String rampDownStopHostsWhen;
        private @Nullable Integer rampDownWaitTimeMinutes;
        private @Nullable Integer rampUpCapacityThresholdPct;
        private @Nullable String rampUpLoadBalancingAlgorithm;
        private @Nullable Integer rampUpMinimumHostsPct;
        private @Nullable String rampUpStartTime;
        public Builder() {}
        public Builder(ScalingScheduleResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.daysOfWeek = defaults.daysOfWeek;
    	      this.name = defaults.name;
    	      this.offPeakLoadBalancingAlgorithm = defaults.offPeakLoadBalancingAlgorithm;
    	      this.offPeakStartTime = defaults.offPeakStartTime;
    	      this.peakLoadBalancingAlgorithm = defaults.peakLoadBalancingAlgorithm;
    	      this.peakStartTime = defaults.peakStartTime;
    	      this.rampDownCapacityThresholdPct = defaults.rampDownCapacityThresholdPct;
    	      this.rampDownForceLogoffUsers = defaults.rampDownForceLogoffUsers;
    	      this.rampDownLoadBalancingAlgorithm = defaults.rampDownLoadBalancingAlgorithm;
    	      this.rampDownMinimumHostsPct = defaults.rampDownMinimumHostsPct;
    	      this.rampDownNotificationMessage = defaults.rampDownNotificationMessage;
    	      this.rampDownStartTime = defaults.rampDownStartTime;
    	      this.rampDownStopHostsWhen = defaults.rampDownStopHostsWhen;
    	      this.rampDownWaitTimeMinutes = defaults.rampDownWaitTimeMinutes;
    	      this.rampUpCapacityThresholdPct = defaults.rampUpCapacityThresholdPct;
    	      this.rampUpLoadBalancingAlgorithm = defaults.rampUpLoadBalancingAlgorithm;
    	      this.rampUpMinimumHostsPct = defaults.rampUpMinimumHostsPct;
    	      this.rampUpStartTime = defaults.rampUpStartTime;
        }

        @CustomType.Setter
        public Builder daysOfWeek(@Nullable List<String> daysOfWeek) {
            this.daysOfWeek = daysOfWeek;
            return this;
        }
        public Builder daysOfWeek(String... daysOfWeek) {
            return daysOfWeek(List.of(daysOfWeek));
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder offPeakLoadBalancingAlgorithm(@Nullable String offPeakLoadBalancingAlgorithm) {
            this.offPeakLoadBalancingAlgorithm = offPeakLoadBalancingAlgorithm;
            return this;
        }
        @CustomType.Setter
        public Builder offPeakStartTime(@Nullable String offPeakStartTime) {
            this.offPeakStartTime = offPeakStartTime;
            return this;
        }
        @CustomType.Setter
        public Builder peakLoadBalancingAlgorithm(@Nullable String peakLoadBalancingAlgorithm) {
            this.peakLoadBalancingAlgorithm = peakLoadBalancingAlgorithm;
            return this;
        }
        @CustomType.Setter
        public Builder peakStartTime(@Nullable String peakStartTime) {
            this.peakStartTime = peakStartTime;
            return this;
        }
        @CustomType.Setter
        public Builder rampDownCapacityThresholdPct(@Nullable Integer rampDownCapacityThresholdPct) {
            this.rampDownCapacityThresholdPct = rampDownCapacityThresholdPct;
            return this;
        }
        @CustomType.Setter
        public Builder rampDownForceLogoffUsers(@Nullable Boolean rampDownForceLogoffUsers) {
            this.rampDownForceLogoffUsers = rampDownForceLogoffUsers;
            return this;
        }
        @CustomType.Setter
        public Builder rampDownLoadBalancingAlgorithm(@Nullable String rampDownLoadBalancingAlgorithm) {
            this.rampDownLoadBalancingAlgorithm = rampDownLoadBalancingAlgorithm;
            return this;
        }
        @CustomType.Setter
        public Builder rampDownMinimumHostsPct(@Nullable Integer rampDownMinimumHostsPct) {
            this.rampDownMinimumHostsPct = rampDownMinimumHostsPct;
            return this;
        }
        @CustomType.Setter
        public Builder rampDownNotificationMessage(@Nullable String rampDownNotificationMessage) {
            this.rampDownNotificationMessage = rampDownNotificationMessage;
            return this;
        }
        @CustomType.Setter
        public Builder rampDownStartTime(@Nullable String rampDownStartTime) {
            this.rampDownStartTime = rampDownStartTime;
            return this;
        }
        @CustomType.Setter
        public Builder rampDownStopHostsWhen(@Nullable String rampDownStopHostsWhen) {
            this.rampDownStopHostsWhen = rampDownStopHostsWhen;
            return this;
        }
        @CustomType.Setter
        public Builder rampDownWaitTimeMinutes(@Nullable Integer rampDownWaitTimeMinutes) {
            this.rampDownWaitTimeMinutes = rampDownWaitTimeMinutes;
            return this;
        }
        @CustomType.Setter
        public Builder rampUpCapacityThresholdPct(@Nullable Integer rampUpCapacityThresholdPct) {
            this.rampUpCapacityThresholdPct = rampUpCapacityThresholdPct;
            return this;
        }
        @CustomType.Setter
        public Builder rampUpLoadBalancingAlgorithm(@Nullable String rampUpLoadBalancingAlgorithm) {
            this.rampUpLoadBalancingAlgorithm = rampUpLoadBalancingAlgorithm;
            return this;
        }
        @CustomType.Setter
        public Builder rampUpMinimumHostsPct(@Nullable Integer rampUpMinimumHostsPct) {
            this.rampUpMinimumHostsPct = rampUpMinimumHostsPct;
            return this;
        }
        @CustomType.Setter
        public Builder rampUpStartTime(@Nullable String rampUpStartTime) {
            this.rampUpStartTime = rampUpStartTime;
            return this;
        }
        public ScalingScheduleResponse build() {
            final var o = new ScalingScheduleResponse();
            o.daysOfWeek = daysOfWeek;
            o.name = name;
            o.offPeakLoadBalancingAlgorithm = offPeakLoadBalancingAlgorithm;
            o.offPeakStartTime = offPeakStartTime;
            o.peakLoadBalancingAlgorithm = peakLoadBalancingAlgorithm;
            o.peakStartTime = peakStartTime;
            o.rampDownCapacityThresholdPct = rampDownCapacityThresholdPct;
            o.rampDownForceLogoffUsers = rampDownForceLogoffUsers;
            o.rampDownLoadBalancingAlgorithm = rampDownLoadBalancingAlgorithm;
            o.rampDownMinimumHostsPct = rampDownMinimumHostsPct;
            o.rampDownNotificationMessage = rampDownNotificationMessage;
            o.rampDownStartTime = rampDownStartTime;
            o.rampDownStopHostsWhen = rampDownStopHostsWhen;
            o.rampDownWaitTimeMinutes = rampDownWaitTimeMinutes;
            o.rampUpCapacityThresholdPct = rampUpCapacityThresholdPct;
            o.rampUpLoadBalancingAlgorithm = rampUpLoadBalancingAlgorithm;
            o.rampUpMinimumHostsPct = rampUpMinimumHostsPct;
            o.rampUpStartTime = rampUpStartTime;
            return o;
        }
    }
}
