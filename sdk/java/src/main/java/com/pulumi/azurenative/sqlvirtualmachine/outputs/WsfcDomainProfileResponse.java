// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.sqlvirtualmachine.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class WsfcDomainProfileResponse {
    /**
     * @return Account name used for creating cluster (at minimum needs permissions to &#39;Create Computer Objects&#39; in domain).
     * 
     */
    private @Nullable String clusterBootstrapAccount;
    /**
     * @return Account name used for operating cluster i.e. will be part of administrators group on all the participating virtual machines in the cluster.
     * 
     */
    private @Nullable String clusterOperatorAccount;
    /**
     * @return Fully qualified name of the domain.
     * 
     */
    private @Nullable String domainFqdn;
    /**
     * @return Optional path for fileshare witness.
     * 
     */
    private @Nullable String fileShareWitnessPath;
    /**
     * @return Organizational Unit path in which the nodes and cluster will be present.
     * 
     */
    private @Nullable String ouPath;
    /**
     * @return Account name under which SQL service will run on all participating SQL virtual machines in the cluster.
     * 
     */
    private @Nullable String sqlServiceAccount;
    /**
     * @return Fully qualified ARM resource id of the witness storage account.
     * 
     */
    private @Nullable String storageAccountUrl;

    private WsfcDomainProfileResponse() {}
    /**
     * @return Account name used for creating cluster (at minimum needs permissions to &#39;Create Computer Objects&#39; in domain).
     * 
     */
    public Optional<String> clusterBootstrapAccount() {
        return Optional.ofNullable(this.clusterBootstrapAccount);
    }
    /**
     * @return Account name used for operating cluster i.e. will be part of administrators group on all the participating virtual machines in the cluster.
     * 
     */
    public Optional<String> clusterOperatorAccount() {
        return Optional.ofNullable(this.clusterOperatorAccount);
    }
    /**
     * @return Fully qualified name of the domain.
     * 
     */
    public Optional<String> domainFqdn() {
        return Optional.ofNullable(this.domainFqdn);
    }
    /**
     * @return Optional path for fileshare witness.
     * 
     */
    public Optional<String> fileShareWitnessPath() {
        return Optional.ofNullable(this.fileShareWitnessPath);
    }
    /**
     * @return Organizational Unit path in which the nodes and cluster will be present.
     * 
     */
    public Optional<String> ouPath() {
        return Optional.ofNullable(this.ouPath);
    }
    /**
     * @return Account name under which SQL service will run on all participating SQL virtual machines in the cluster.
     * 
     */
    public Optional<String> sqlServiceAccount() {
        return Optional.ofNullable(this.sqlServiceAccount);
    }
    /**
     * @return Fully qualified ARM resource id of the witness storage account.
     * 
     */
    public Optional<String> storageAccountUrl() {
        return Optional.ofNullable(this.storageAccountUrl);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WsfcDomainProfileResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String clusterBootstrapAccount;
        private @Nullable String clusterOperatorAccount;
        private @Nullable String domainFqdn;
        private @Nullable String fileShareWitnessPath;
        private @Nullable String ouPath;
        private @Nullable String sqlServiceAccount;
        private @Nullable String storageAccountUrl;
        public Builder() {}
        public Builder(WsfcDomainProfileResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clusterBootstrapAccount = defaults.clusterBootstrapAccount;
    	      this.clusterOperatorAccount = defaults.clusterOperatorAccount;
    	      this.domainFqdn = defaults.domainFqdn;
    	      this.fileShareWitnessPath = defaults.fileShareWitnessPath;
    	      this.ouPath = defaults.ouPath;
    	      this.sqlServiceAccount = defaults.sqlServiceAccount;
    	      this.storageAccountUrl = defaults.storageAccountUrl;
        }

        @CustomType.Setter
        public Builder clusterBootstrapAccount(@Nullable String clusterBootstrapAccount) {
            this.clusterBootstrapAccount = clusterBootstrapAccount;
            return this;
        }
        @CustomType.Setter
        public Builder clusterOperatorAccount(@Nullable String clusterOperatorAccount) {
            this.clusterOperatorAccount = clusterOperatorAccount;
            return this;
        }
        @CustomType.Setter
        public Builder domainFqdn(@Nullable String domainFqdn) {
            this.domainFqdn = domainFqdn;
            return this;
        }
        @CustomType.Setter
        public Builder fileShareWitnessPath(@Nullable String fileShareWitnessPath) {
            this.fileShareWitnessPath = fileShareWitnessPath;
            return this;
        }
        @CustomType.Setter
        public Builder ouPath(@Nullable String ouPath) {
            this.ouPath = ouPath;
            return this;
        }
        @CustomType.Setter
        public Builder sqlServiceAccount(@Nullable String sqlServiceAccount) {
            this.sqlServiceAccount = sqlServiceAccount;
            return this;
        }
        @CustomType.Setter
        public Builder storageAccountUrl(@Nullable String storageAccountUrl) {
            this.storageAccountUrl = storageAccountUrl;
            return this;
        }
        public WsfcDomainProfileResponse build() {
            final var o = new WsfcDomainProfileResponse();
            o.clusterBootstrapAccount = clusterBootstrapAccount;
            o.clusterOperatorAccount = clusterOperatorAccount;
            o.domainFqdn = domainFqdn;
            o.fileShareWitnessPath = fileShareWitnessPath;
            o.ouPath = ouPath;
            o.sqlServiceAccount = sqlServiceAccount;
            o.storageAccountUrl = storageAccountUrl;
            return o;
        }
    }
}
