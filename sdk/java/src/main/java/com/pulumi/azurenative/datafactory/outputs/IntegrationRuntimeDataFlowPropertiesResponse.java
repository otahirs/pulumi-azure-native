// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datafactory.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class IntegrationRuntimeDataFlowPropertiesResponse {
    /**
     * @return Cluster will not be recycled and it will be used in next data flow activity run until TTL (time to live) is reached if this is set as false. Default is true.
     * 
     */
    private @Nullable Boolean cleanup;
    /**
     * @return Compute type of the cluster which will execute data flow job.
     * 
     */
    private @Nullable String computeType;
    /**
     * @return Core count of the cluster which will execute data flow job. Supported values are: 8, 16, 32, 48, 80, 144 and 272.
     * 
     */
    private @Nullable Integer coreCount;
    /**
     * @return Time to live (in minutes) setting of the cluster which will execute data flow job.
     * 
     */
    private @Nullable Integer timeToLive;

    private IntegrationRuntimeDataFlowPropertiesResponse() {}
    /**
     * @return Cluster will not be recycled and it will be used in next data flow activity run until TTL (time to live) is reached if this is set as false. Default is true.
     * 
     */
    public Optional<Boolean> cleanup() {
        return Optional.ofNullable(this.cleanup);
    }
    /**
     * @return Compute type of the cluster which will execute data flow job.
     * 
     */
    public Optional<String> computeType() {
        return Optional.ofNullable(this.computeType);
    }
    /**
     * @return Core count of the cluster which will execute data flow job. Supported values are: 8, 16, 32, 48, 80, 144 and 272.
     * 
     */
    public Optional<Integer> coreCount() {
        return Optional.ofNullable(this.coreCount);
    }
    /**
     * @return Time to live (in minutes) setting of the cluster which will execute data flow job.
     * 
     */
    public Optional<Integer> timeToLive() {
        return Optional.ofNullable(this.timeToLive);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IntegrationRuntimeDataFlowPropertiesResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean cleanup;
        private @Nullable String computeType;
        private @Nullable Integer coreCount;
        private @Nullable Integer timeToLive;
        public Builder() {}
        public Builder(IntegrationRuntimeDataFlowPropertiesResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cleanup = defaults.cleanup;
    	      this.computeType = defaults.computeType;
    	      this.coreCount = defaults.coreCount;
    	      this.timeToLive = defaults.timeToLive;
        }

        @CustomType.Setter
        public Builder cleanup(@Nullable Boolean cleanup) {
            this.cleanup = cleanup;
            return this;
        }
        @CustomType.Setter
        public Builder computeType(@Nullable String computeType) {
            this.computeType = computeType;
            return this;
        }
        @CustomType.Setter
        public Builder coreCount(@Nullable Integer coreCount) {
            this.coreCount = coreCount;
            return this;
        }
        @CustomType.Setter
        public Builder timeToLive(@Nullable Integer timeToLive) {
            this.timeToLive = timeToLive;
            return this;
        }
        public IntegrationRuntimeDataFlowPropertiesResponse build() {
            final var o = new IntegrationRuntimeDataFlowPropertiesResponse();
            o.cleanup = cleanup;
            o.computeType = computeType;
            o.coreCount = coreCount;
            o.timeToLive = timeToLive;
            return o;
        }
    }
}
