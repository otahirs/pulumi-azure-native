// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.portal.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class ConsolePropertiesResponse {
    /**
     * @return The operating system type of the cloud shell.
     * 
     */
    private String osType;
    /**
     * @return Provisioning state of the console.
     * 
     */
    private String provisioningState;
    /**
     * @return Uri of the console.
     * 
     */
    private String uri;

    private ConsolePropertiesResponse() {}
    /**
     * @return The operating system type of the cloud shell.
     * 
     */
    public String osType() {
        return this.osType;
    }
    /**
     * @return Provisioning state of the console.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * @return Uri of the console.
     * 
     */
    public String uri() {
        return this.uri;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConsolePropertiesResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String osType;
        private String provisioningState;
        private String uri;
        public Builder() {}
        public Builder(ConsolePropertiesResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.osType = defaults.osType;
    	      this.provisioningState = defaults.provisioningState;
    	      this.uri = defaults.uri;
        }

        @CustomType.Setter
        public Builder osType(String osType) {
            this.osType = Objects.requireNonNull(osType);
            return this;
        }
        @CustomType.Setter
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        @CustomType.Setter
        public Builder uri(String uri) {
            this.uri = Objects.requireNonNull(uri);
            return this;
        }
        public ConsolePropertiesResponse build() {
            final var o = new ConsolePropertiesResponse();
            o.osType = osType;
            o.provisioningState = provisioningState;
            o.uri = uri;
            return o;
        }
    }
}
