// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.storagecache.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class CacheUpgradeStatusResponse {
    /**
     * @return Version string of the firmware currently installed on this Cache.
     * 
     */
    private String currentFirmwareVersion;
    /**
     * @return Time at which the pending firmware update will automatically be installed on the Cache.
     * 
     */
    private String firmwareUpdateDeadline;
    /**
     * @return True if there is a firmware update ready to install on this Cache. The firmware will automatically be installed after firmwareUpdateDeadline if not triggered earlier via the upgrade operation.
     * 
     */
    private String firmwareUpdateStatus;
    /**
     * @return Time of the last successful firmware update.
     * 
     */
    private String lastFirmwareUpdate;
    /**
     * @return When firmwareUpdateAvailable is true, this field holds the version string for the update.
     * 
     */
    private String pendingFirmwareVersion;

    private CacheUpgradeStatusResponse() {}
    /**
     * @return Version string of the firmware currently installed on this Cache.
     * 
     */
    public String currentFirmwareVersion() {
        return this.currentFirmwareVersion;
    }
    /**
     * @return Time at which the pending firmware update will automatically be installed on the Cache.
     * 
     */
    public String firmwareUpdateDeadline() {
        return this.firmwareUpdateDeadline;
    }
    /**
     * @return True if there is a firmware update ready to install on this Cache. The firmware will automatically be installed after firmwareUpdateDeadline if not triggered earlier via the upgrade operation.
     * 
     */
    public String firmwareUpdateStatus() {
        return this.firmwareUpdateStatus;
    }
    /**
     * @return Time of the last successful firmware update.
     * 
     */
    public String lastFirmwareUpdate() {
        return this.lastFirmwareUpdate;
    }
    /**
     * @return When firmwareUpdateAvailable is true, this field holds the version string for the update.
     * 
     */
    public String pendingFirmwareVersion() {
        return this.pendingFirmwareVersion;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CacheUpgradeStatusResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String currentFirmwareVersion;
        private String firmwareUpdateDeadline;
        private String firmwareUpdateStatus;
        private String lastFirmwareUpdate;
        private String pendingFirmwareVersion;
        public Builder() {}
        public Builder(CacheUpgradeStatusResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.currentFirmwareVersion = defaults.currentFirmwareVersion;
    	      this.firmwareUpdateDeadline = defaults.firmwareUpdateDeadline;
    	      this.firmwareUpdateStatus = defaults.firmwareUpdateStatus;
    	      this.lastFirmwareUpdate = defaults.lastFirmwareUpdate;
    	      this.pendingFirmwareVersion = defaults.pendingFirmwareVersion;
        }

        @CustomType.Setter
        public Builder currentFirmwareVersion(String currentFirmwareVersion) {
            this.currentFirmwareVersion = Objects.requireNonNull(currentFirmwareVersion);
            return this;
        }
        @CustomType.Setter
        public Builder firmwareUpdateDeadline(String firmwareUpdateDeadline) {
            this.firmwareUpdateDeadline = Objects.requireNonNull(firmwareUpdateDeadline);
            return this;
        }
        @CustomType.Setter
        public Builder firmwareUpdateStatus(String firmwareUpdateStatus) {
            this.firmwareUpdateStatus = Objects.requireNonNull(firmwareUpdateStatus);
            return this;
        }
        @CustomType.Setter
        public Builder lastFirmwareUpdate(String lastFirmwareUpdate) {
            this.lastFirmwareUpdate = Objects.requireNonNull(lastFirmwareUpdate);
            return this;
        }
        @CustomType.Setter
        public Builder pendingFirmwareVersion(String pendingFirmwareVersion) {
            this.pendingFirmwareVersion = Objects.requireNonNull(pendingFirmwareVersion);
            return this;
        }
        public CacheUpgradeStatusResponse build() {
            final var o = new CacheUpgradeStatusResponse();
            o.currentFirmwareVersion = currentFirmwareVersion;
            o.firmwareUpdateDeadline = firmwareUpdateDeadline;
            o.firmwareUpdateStatus = firmwareUpdateStatus;
            o.lastFirmwareUpdate = lastFirmwareUpdate;
            o.pendingFirmwareVersion = pendingFirmwareVersion;
            return o;
        }
    }
}
