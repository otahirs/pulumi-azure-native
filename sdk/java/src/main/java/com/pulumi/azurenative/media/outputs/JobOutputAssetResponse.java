// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.media.outputs;

import com.pulumi.azurenative.media.outputs.JobErrorResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class JobOutputAssetResponse {
    /**
     * @return The name of the output Asset.
     * 
     */
    private String assetName;
    /**
     * @return The UTC date and time at which this Job Output finished processing.
     * 
     */
    private String endTime;
    /**
     * @return If the JobOutput is in the Error state, it contains the details of the error.
     * 
     */
    private JobErrorResponse error;
    /**
     * @return A label that is assigned to a JobOutput in order to help uniquely identify it. This is useful when your Transform has more than one TransformOutput, whereby your Job has more than one JobOutput. In such cases, when you submit the Job, you will add two or more JobOutputs, in the same order as TransformOutputs in the Transform. Subsequently, when you retrieve the Job, either through events or on a GET request, you can use the label to easily identify the JobOutput. If a label is not provided, a default value of &#39;{presetName}_{outputIndex}&#39; will be used, where the preset name is the name of the preset in the corresponding TransformOutput and the output index is the relative index of the this JobOutput within the Job. Note that this index is the same as the relative index of the corresponding TransformOutput within its Transform.
     * 
     */
    private @Nullable String label;
    /**
     * @return The discriminator for derived types.
     * Expected value is &#39;#Microsoft.Media.JobOutputAsset&#39;.
     * 
     */
    private String odataType;
    /**
     * @return If the JobOutput is in a Processing state, this contains the Job completion percentage. The value is an estimate and not intended to be used to predict Job completion times. To determine if the JobOutput is complete, use the State property.
     * 
     */
    private Integer progress;
    /**
     * @return The UTC date and time at which this Job Output began processing.
     * 
     */
    private String startTime;
    /**
     * @return Describes the state of the JobOutput.
     * 
     */
    private String state;

    private JobOutputAssetResponse() {}
    /**
     * @return The name of the output Asset.
     * 
     */
    public String assetName() {
        return this.assetName;
    }
    /**
     * @return The UTC date and time at which this Job Output finished processing.
     * 
     */
    public String endTime() {
        return this.endTime;
    }
    /**
     * @return If the JobOutput is in the Error state, it contains the details of the error.
     * 
     */
    public JobErrorResponse error() {
        return this.error;
    }
    /**
     * @return A label that is assigned to a JobOutput in order to help uniquely identify it. This is useful when your Transform has more than one TransformOutput, whereby your Job has more than one JobOutput. In such cases, when you submit the Job, you will add two or more JobOutputs, in the same order as TransformOutputs in the Transform. Subsequently, when you retrieve the Job, either through events or on a GET request, you can use the label to easily identify the JobOutput. If a label is not provided, a default value of &#39;{presetName}_{outputIndex}&#39; will be used, where the preset name is the name of the preset in the corresponding TransformOutput and the output index is the relative index of the this JobOutput within the Job. Note that this index is the same as the relative index of the corresponding TransformOutput within its Transform.
     * 
     */
    public Optional<String> label() {
        return Optional.ofNullable(this.label);
    }
    /**
     * @return The discriminator for derived types.
     * Expected value is &#39;#Microsoft.Media.JobOutputAsset&#39;.
     * 
     */
    public String odataType() {
        return this.odataType;
    }
    /**
     * @return If the JobOutput is in a Processing state, this contains the Job completion percentage. The value is an estimate and not intended to be used to predict Job completion times. To determine if the JobOutput is complete, use the State property.
     * 
     */
    public Integer progress() {
        return this.progress;
    }
    /**
     * @return The UTC date and time at which this Job Output began processing.
     * 
     */
    public String startTime() {
        return this.startTime;
    }
    /**
     * @return Describes the state of the JobOutput.
     * 
     */
    public String state() {
        return this.state;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(JobOutputAssetResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String assetName;
        private String endTime;
        private JobErrorResponse error;
        private @Nullable String label;
        private String odataType;
        private Integer progress;
        private String startTime;
        private String state;
        public Builder() {}
        public Builder(JobOutputAssetResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.assetName = defaults.assetName;
    	      this.endTime = defaults.endTime;
    	      this.error = defaults.error;
    	      this.label = defaults.label;
    	      this.odataType = defaults.odataType;
    	      this.progress = defaults.progress;
    	      this.startTime = defaults.startTime;
    	      this.state = defaults.state;
        }

        @CustomType.Setter
        public Builder assetName(String assetName) {
            this.assetName = Objects.requireNonNull(assetName);
            return this;
        }
        @CustomType.Setter
        public Builder endTime(String endTime) {
            this.endTime = Objects.requireNonNull(endTime);
            return this;
        }
        @CustomType.Setter
        public Builder error(JobErrorResponse error) {
            this.error = Objects.requireNonNull(error);
            return this;
        }
        @CustomType.Setter
        public Builder label(@Nullable String label) {
            this.label = label;
            return this;
        }
        @CustomType.Setter
        public Builder odataType(String odataType) {
            this.odataType = Objects.requireNonNull(odataType);
            return this;
        }
        @CustomType.Setter
        public Builder progress(Integer progress) {
            this.progress = Objects.requireNonNull(progress);
            return this;
        }
        @CustomType.Setter
        public Builder startTime(String startTime) {
            this.startTime = Objects.requireNonNull(startTime);
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        public JobOutputAssetResponse build() {
            final var o = new JobOutputAssetResponse();
            o.assetName = assetName;
            o.endTime = endTime;
            o.error = error;
            o.label = label;
            o.odataType = odataType;
            o.progress = progress;
            o.startTime = startTime;
            o.state = state;
            return o;
        }
    }
}
