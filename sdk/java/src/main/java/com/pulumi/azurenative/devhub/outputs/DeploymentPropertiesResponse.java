// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.devhub.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DeploymentPropertiesResponse {
    /**
     * @return Helm chart directory path in repository.
     * 
     */
    private @Nullable String helmChartPath;
    /**
     * @return Helm Values.yaml file location in repository.
     * 
     */
    private @Nullable String helmValues;
    private @Nullable List<String> kubeManifestLocations;
    /**
     * @return Determines the type of manifests within the repository.
     * 
     */
    private @Nullable String manifestType;
    /**
     * @return Manifest override values.
     * 
     */
    private @Nullable Map<String,String> overrides;

    private DeploymentPropertiesResponse() {}
    /**
     * @return Helm chart directory path in repository.
     * 
     */
    public Optional<String> helmChartPath() {
        return Optional.ofNullable(this.helmChartPath);
    }
    /**
     * @return Helm Values.yaml file location in repository.
     * 
     */
    public Optional<String> helmValues() {
        return Optional.ofNullable(this.helmValues);
    }
    public List<String> kubeManifestLocations() {
        return this.kubeManifestLocations == null ? List.of() : this.kubeManifestLocations;
    }
    /**
     * @return Determines the type of manifests within the repository.
     * 
     */
    public Optional<String> manifestType() {
        return Optional.ofNullable(this.manifestType);
    }
    /**
     * @return Manifest override values.
     * 
     */
    public Map<String,String> overrides() {
        return this.overrides == null ? Map.of() : this.overrides;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DeploymentPropertiesResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String helmChartPath;
        private @Nullable String helmValues;
        private @Nullable List<String> kubeManifestLocations;
        private @Nullable String manifestType;
        private @Nullable Map<String,String> overrides;
        public Builder() {}
        public Builder(DeploymentPropertiesResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.helmChartPath = defaults.helmChartPath;
    	      this.helmValues = defaults.helmValues;
    	      this.kubeManifestLocations = defaults.kubeManifestLocations;
    	      this.manifestType = defaults.manifestType;
    	      this.overrides = defaults.overrides;
        }

        @CustomType.Setter
        public Builder helmChartPath(@Nullable String helmChartPath) {
            this.helmChartPath = helmChartPath;
            return this;
        }
        @CustomType.Setter
        public Builder helmValues(@Nullable String helmValues) {
            this.helmValues = helmValues;
            return this;
        }
        @CustomType.Setter
        public Builder kubeManifestLocations(@Nullable List<String> kubeManifestLocations) {
            this.kubeManifestLocations = kubeManifestLocations;
            return this;
        }
        public Builder kubeManifestLocations(String... kubeManifestLocations) {
            return kubeManifestLocations(List.of(kubeManifestLocations));
        }
        @CustomType.Setter
        public Builder manifestType(@Nullable String manifestType) {
            this.manifestType = manifestType;
            return this;
        }
        @CustomType.Setter
        public Builder overrides(@Nullable Map<String,String> overrides) {
            this.overrides = overrides;
            return this;
        }
        public DeploymentPropertiesResponse build() {
            final var o = new DeploymentPropertiesResponse();
            o.helmChartPath = helmChartPath;
            o.helmValues = helmValues;
            o.kubeManifestLocations = kubeManifestLocations;
            o.manifestType = manifestType;
            o.overrides = overrides;
            return o;
        }
    }
}
