// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearningservices.outputs;

import com.pulumi.azurenative.machinelearningservices.outputs.ModelEnvironmentDefinitionResponseResponseDocker;
import com.pulumi.azurenative.machinelearningservices.outputs.ModelEnvironmentDefinitionResponseResponsePython;
import com.pulumi.azurenative.machinelearningservices.outputs.ModelEnvironmentDefinitionResponseResponseR;
import com.pulumi.azurenative.machinelearningservices.outputs.ModelEnvironmentDefinitionResponseResponseSpark;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class EnvironmentImageResponseResponseEnvironment {
    /**
     * @return The definition of a Docker container.
     * 
     */
    private @Nullable ModelEnvironmentDefinitionResponseResponseDocker docker;
    /**
     * @return Definition of environment variables to be defined in the environment.
     * 
     */
    private @Nullable Map<String,String> environmentVariables;
    /**
     * @return The inferencing stack version added to the image. To avoid adding an inferencing stack, do not set this value. Valid values: &#34;latest&#34;.
     * 
     */
    private @Nullable String inferencingStackVersion;
    /**
     * @return The name of the environment.
     * 
     */
    private @Nullable String name;
    /**
     * @return Settings for a Python environment.
     * 
     */
    private @Nullable ModelEnvironmentDefinitionResponseResponsePython python;
    /**
     * @return Settings for a R environment.
     * 
     */
    private @Nullable ModelEnvironmentDefinitionResponseResponseR r;
    /**
     * @return The configuration for a Spark environment.
     * 
     */
    private @Nullable ModelEnvironmentDefinitionResponseResponseSpark spark;
    /**
     * @return The environment version.
     * 
     */
    private @Nullable String version;

    private EnvironmentImageResponseResponseEnvironment() {}
    /**
     * @return The definition of a Docker container.
     * 
     */
    public Optional<ModelEnvironmentDefinitionResponseResponseDocker> docker() {
        return Optional.ofNullable(this.docker);
    }
    /**
     * @return Definition of environment variables to be defined in the environment.
     * 
     */
    public Map<String,String> environmentVariables() {
        return this.environmentVariables == null ? Map.of() : this.environmentVariables;
    }
    /**
     * @return The inferencing stack version added to the image. To avoid adding an inferencing stack, do not set this value. Valid values: &#34;latest&#34;.
     * 
     */
    public Optional<String> inferencingStackVersion() {
        return Optional.ofNullable(this.inferencingStackVersion);
    }
    /**
     * @return The name of the environment.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return Settings for a Python environment.
     * 
     */
    public Optional<ModelEnvironmentDefinitionResponseResponsePython> python() {
        return Optional.ofNullable(this.python);
    }
    /**
     * @return Settings for a R environment.
     * 
     */
    public Optional<ModelEnvironmentDefinitionResponseResponseR> r() {
        return Optional.ofNullable(this.r);
    }
    /**
     * @return The configuration for a Spark environment.
     * 
     */
    public Optional<ModelEnvironmentDefinitionResponseResponseSpark> spark() {
        return Optional.ofNullable(this.spark);
    }
    /**
     * @return The environment version.
     * 
     */
    public Optional<String> version() {
        return Optional.ofNullable(this.version);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EnvironmentImageResponseResponseEnvironment defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable ModelEnvironmentDefinitionResponseResponseDocker docker;
        private @Nullable Map<String,String> environmentVariables;
        private @Nullable String inferencingStackVersion;
        private @Nullable String name;
        private @Nullable ModelEnvironmentDefinitionResponseResponsePython python;
        private @Nullable ModelEnvironmentDefinitionResponseResponseR r;
        private @Nullable ModelEnvironmentDefinitionResponseResponseSpark spark;
        private @Nullable String version;
        public Builder() {}
        public Builder(EnvironmentImageResponseResponseEnvironment defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.docker = defaults.docker;
    	      this.environmentVariables = defaults.environmentVariables;
    	      this.inferencingStackVersion = defaults.inferencingStackVersion;
    	      this.name = defaults.name;
    	      this.python = defaults.python;
    	      this.r = defaults.r;
    	      this.spark = defaults.spark;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder docker(@Nullable ModelEnvironmentDefinitionResponseResponseDocker docker) {
            this.docker = docker;
            return this;
        }
        @CustomType.Setter
        public Builder environmentVariables(@Nullable Map<String,String> environmentVariables) {
            this.environmentVariables = environmentVariables;
            return this;
        }
        @CustomType.Setter
        public Builder inferencingStackVersion(@Nullable String inferencingStackVersion) {
            this.inferencingStackVersion = inferencingStackVersion;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder python(@Nullable ModelEnvironmentDefinitionResponseResponsePython python) {
            this.python = python;
            return this;
        }
        @CustomType.Setter
        public Builder r(@Nullable ModelEnvironmentDefinitionResponseResponseR r) {
            this.r = r;
            return this;
        }
        @CustomType.Setter
        public Builder spark(@Nullable ModelEnvironmentDefinitionResponseResponseSpark spark) {
            this.spark = spark;
            return this;
        }
        @CustomType.Setter
        public Builder version(@Nullable String version) {
            this.version = version;
            return this;
        }
        public EnvironmentImageResponseResponseEnvironment build() {
            final var o = new EnvironmentImageResponseResponseEnvironment();
            o.docker = docker;
            o.environmentVariables = environmentVariables;
            o.inferencingStackVersion = inferencingStackVersion;
            o.name = name;
            o.python = python;
            o.r = r;
            o.spark = spark;
            o.version = version;
            return o;
        }
    }
}
