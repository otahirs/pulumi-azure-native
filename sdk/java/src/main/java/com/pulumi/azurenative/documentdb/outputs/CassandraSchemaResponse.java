// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.documentdb.outputs;

import com.pulumi.azurenative.documentdb.outputs.CassandraPartitionKeyResponse;
import com.pulumi.azurenative.documentdb.outputs.ClusterKeyResponse;
import com.pulumi.azurenative.documentdb.outputs.ColumnResponse;
import com.pulumi.core.annotations.CustomType;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class CassandraSchemaResponse {
    /**
     * @return List of cluster key.
     * 
     */
    private @Nullable List<ClusterKeyResponse> clusterKeys;
    /**
     * @return List of Cassandra table columns.
     * 
     */
    private @Nullable List<ColumnResponse> columns;
    /**
     * @return List of partition key.
     * 
     */
    private @Nullable List<CassandraPartitionKeyResponse> partitionKeys;

    private CassandraSchemaResponse() {}
    /**
     * @return List of cluster key.
     * 
     */
    public List<ClusterKeyResponse> clusterKeys() {
        return this.clusterKeys == null ? List.of() : this.clusterKeys;
    }
    /**
     * @return List of Cassandra table columns.
     * 
     */
    public List<ColumnResponse> columns() {
        return this.columns == null ? List.of() : this.columns;
    }
    /**
     * @return List of partition key.
     * 
     */
    public List<CassandraPartitionKeyResponse> partitionKeys() {
        return this.partitionKeys == null ? List.of() : this.partitionKeys;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CassandraSchemaResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<ClusterKeyResponse> clusterKeys;
        private @Nullable List<ColumnResponse> columns;
        private @Nullable List<CassandraPartitionKeyResponse> partitionKeys;
        public Builder() {}
        public Builder(CassandraSchemaResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clusterKeys = defaults.clusterKeys;
    	      this.columns = defaults.columns;
    	      this.partitionKeys = defaults.partitionKeys;
        }

        @CustomType.Setter
        public Builder clusterKeys(@Nullable List<ClusterKeyResponse> clusterKeys) {
            this.clusterKeys = clusterKeys;
            return this;
        }
        public Builder clusterKeys(ClusterKeyResponse... clusterKeys) {
            return clusterKeys(List.of(clusterKeys));
        }
        @CustomType.Setter
        public Builder columns(@Nullable List<ColumnResponse> columns) {
            this.columns = columns;
            return this;
        }
        public Builder columns(ColumnResponse... columns) {
            return columns(List.of(columns));
        }
        @CustomType.Setter
        public Builder partitionKeys(@Nullable List<CassandraPartitionKeyResponse> partitionKeys) {
            this.partitionKeys = partitionKeys;
            return this;
        }
        public Builder partitionKeys(CassandraPartitionKeyResponse... partitionKeys) {
            return partitionKeys(List.of(partitionKeys));
        }
        public CassandraSchemaResponse build() {
            final var o = new CassandraSchemaResponse();
            o.clusterKeys = clusterKeys;
            o.columns = columns;
            o.partitionKeys = partitionKeys;
            return o;
        }
    }
}
