// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.app.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class VolumeMountResponse {
    /**
     * @return Path within the container at which the volume should be mounted.Must not contain &#39;:&#39;.
     * 
     */
    private @Nullable String mountPath;
    /**
     * @return This must match the Name of a Volume.
     * 
     */
    private @Nullable String volumeName;

    private VolumeMountResponse() {}
    /**
     * @return Path within the container at which the volume should be mounted.Must not contain &#39;:&#39;.
     * 
     */
    public Optional<String> mountPath() {
        return Optional.ofNullable(this.mountPath);
    }
    /**
     * @return This must match the Name of a Volume.
     * 
     */
    public Optional<String> volumeName() {
        return Optional.ofNullable(this.volumeName);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VolumeMountResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String mountPath;
        private @Nullable String volumeName;
        public Builder() {}
        public Builder(VolumeMountResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.mountPath = defaults.mountPath;
    	      this.volumeName = defaults.volumeName;
        }

        @CustomType.Setter
        public Builder mountPath(@Nullable String mountPath) {
            this.mountPath = mountPath;
            return this;
        }
        @CustomType.Setter
        public Builder volumeName(@Nullable String volumeName) {
            this.volumeName = volumeName;
            return this;
        }
        public VolumeMountResponse build() {
            final var o = new VolumeMountResponse();
            o.mountPath = mountPath;
            o.volumeName = volumeName;
            return o;
        }
    }
}
