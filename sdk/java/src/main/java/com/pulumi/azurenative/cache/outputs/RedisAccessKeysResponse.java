// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.cache.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class RedisAccessKeysResponse {
    /**
     * @return The current primary key that clients can use to authenticate with Redis cache.
     * 
     */
    private String primaryKey;
    /**
     * @return The current secondary key that clients can use to authenticate with Redis cache.
     * 
     */
    private String secondaryKey;

    private RedisAccessKeysResponse() {}
    /**
     * @return The current primary key that clients can use to authenticate with Redis cache.
     * 
     */
    public String primaryKey() {
        return this.primaryKey;
    }
    /**
     * @return The current secondary key that clients can use to authenticate with Redis cache.
     * 
     */
    public String secondaryKey() {
        return this.secondaryKey;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RedisAccessKeysResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String primaryKey;
        private String secondaryKey;
        public Builder() {}
        public Builder(RedisAccessKeysResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.primaryKey = defaults.primaryKey;
    	      this.secondaryKey = defaults.secondaryKey;
        }

        @CustomType.Setter
        public Builder primaryKey(String primaryKey) {
            this.primaryKey = Objects.requireNonNull(primaryKey);
            return this;
        }
        @CustomType.Setter
        public Builder secondaryKey(String secondaryKey) {
            this.secondaryKey = Objects.requireNonNull(secondaryKey);
            return this;
        }
        public RedisAccessKeysResponse build() {
            final var o = new RedisAccessKeysResponse();
            o.primaryKey = primaryKey;
            o.secondaryKey = secondaryKey;
            return o;
        }
    }
}
