// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.security.inputs;

import com.pulumi.azurenative.security.enums.ApplicationConditionOperator;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Application&#39;s condition
 * 
 */
public final class ApplicationConditionArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationConditionArgs Empty = new ApplicationConditionArgs();

    /**
     * The application Condition&#39;s Operator, for example Contains for id or In for list of possible IDs, see examples
     * 
     */
    @Import(name="operator")
    private @Nullable Output<Either<String,ApplicationConditionOperator>> operator;

    /**
     * @return The application Condition&#39;s Operator, for example Contains for id or In for list of possible IDs, see examples
     * 
     */
    public Optional<Output<Either<String,ApplicationConditionOperator>>> operator() {
        return Optional.ofNullable(this.operator);
    }

    /**
     * The application Condition&#39;s Property, e.g. ID, see examples
     * 
     */
    @Import(name="property")
    private @Nullable Output<String> property;

    /**
     * @return The application Condition&#39;s Property, e.g. ID, see examples
     * 
     */
    public Optional<Output<String>> property() {
        return Optional.ofNullable(this.property);
    }

    /**
     * The application Condition&#39;s Value like IDs that contain some string, see examples
     * 
     */
    @Import(name="value")
    private @Nullable Output<String> value;

    /**
     * @return The application Condition&#39;s Value like IDs that contain some string, see examples
     * 
     */
    public Optional<Output<String>> value() {
        return Optional.ofNullable(this.value);
    }

    private ApplicationConditionArgs() {}

    private ApplicationConditionArgs(ApplicationConditionArgs $) {
        this.operator = $.operator;
        this.property = $.property;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationConditionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationConditionArgs $;

        public Builder() {
            $ = new ApplicationConditionArgs();
        }

        public Builder(ApplicationConditionArgs defaults) {
            $ = new ApplicationConditionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param operator The application Condition&#39;s Operator, for example Contains for id or In for list of possible IDs, see examples
         * 
         * @return builder
         * 
         */
        public Builder operator(@Nullable Output<Either<String,ApplicationConditionOperator>> operator) {
            $.operator = operator;
            return this;
        }

        /**
         * @param operator The application Condition&#39;s Operator, for example Contains for id or In for list of possible IDs, see examples
         * 
         * @return builder
         * 
         */
        public Builder operator(Either<String,ApplicationConditionOperator> operator) {
            return operator(Output.of(operator));
        }

        /**
         * @param operator The application Condition&#39;s Operator, for example Contains for id or In for list of possible IDs, see examples
         * 
         * @return builder
         * 
         */
        public Builder operator(String operator) {
            return operator(Either.ofLeft(operator));
        }

        /**
         * @param operator The application Condition&#39;s Operator, for example Contains for id or In for list of possible IDs, see examples
         * 
         * @return builder
         * 
         */
        public Builder operator(ApplicationConditionOperator operator) {
            return operator(Either.ofRight(operator));
        }

        /**
         * @param property The application Condition&#39;s Property, e.g. ID, see examples
         * 
         * @return builder
         * 
         */
        public Builder property(@Nullable Output<String> property) {
            $.property = property;
            return this;
        }

        /**
         * @param property The application Condition&#39;s Property, e.g. ID, see examples
         * 
         * @return builder
         * 
         */
        public Builder property(String property) {
            return property(Output.of(property));
        }

        /**
         * @param value The application Condition&#39;s Value like IDs that contain some string, see examples
         * 
         * @return builder
         * 
         */
        public Builder value(@Nullable Output<String> value) {
            $.value = value;
            return this;
        }

        /**
         * @param value The application Condition&#39;s Value like IDs that contain some string, see examples
         * 
         * @return builder
         * 
         */
        public Builder value(String value) {
            return value(Output.of(value));
        }

        public ApplicationConditionArgs build() {
            return $;
        }
    }

}
