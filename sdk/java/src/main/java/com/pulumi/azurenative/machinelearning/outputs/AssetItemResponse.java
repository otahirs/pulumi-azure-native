// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearning.outputs;

import com.pulumi.azurenative.machinelearning.outputs.BlobLocationResponse;
import com.pulumi.azurenative.machinelearning.outputs.InputPortResponse;
import com.pulumi.azurenative.machinelearning.outputs.ModuleAssetParameterResponse;
import com.pulumi.azurenative.machinelearning.outputs.OutputPortResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AssetItemResponse {
    /**
     * @return Asset&#39;s Id.
     * 
     */
    private @Nullable String id;
    /**
     * @return Information about the asset&#39;s input ports.
     * 
     */
    private @Nullable Map<String,InputPortResponse> inputPorts;
    /**
     * @return Access information for the asset.
     * 
     */
    private BlobLocationResponse locationInfo;
    /**
     * @return If the asset is a custom module, this holds the module&#39;s metadata.
     * 
     */
    private @Nullable Map<String,String> metadata;
    /**
     * @return Asset&#39;s friendly name.
     * 
     */
    private String name;
    /**
     * @return Information about the asset&#39;s output ports.
     * 
     */
    private @Nullable Map<String,OutputPortResponse> outputPorts;
    /**
     * @return If the asset is a custom module, this holds the module&#39;s parameters.
     * 
     */
    private @Nullable List<ModuleAssetParameterResponse> parameters;
    /**
     * @return Asset&#39;s type.
     * 
     */
    private String type;

    private AssetItemResponse() {}
    /**
     * @return Asset&#39;s Id.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Information about the asset&#39;s input ports.
     * 
     */
    public Map<String,InputPortResponse> inputPorts() {
        return this.inputPorts == null ? Map.of() : this.inputPorts;
    }
    /**
     * @return Access information for the asset.
     * 
     */
    public BlobLocationResponse locationInfo() {
        return this.locationInfo;
    }
    /**
     * @return If the asset is a custom module, this holds the module&#39;s metadata.
     * 
     */
    public Map<String,String> metadata() {
        return this.metadata == null ? Map.of() : this.metadata;
    }
    /**
     * @return Asset&#39;s friendly name.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Information about the asset&#39;s output ports.
     * 
     */
    public Map<String,OutputPortResponse> outputPorts() {
        return this.outputPorts == null ? Map.of() : this.outputPorts;
    }
    /**
     * @return If the asset is a custom module, this holds the module&#39;s parameters.
     * 
     */
    public List<ModuleAssetParameterResponse> parameters() {
        return this.parameters == null ? List.of() : this.parameters;
    }
    /**
     * @return Asset&#39;s type.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AssetItemResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String id;
        private @Nullable Map<String,InputPortResponse> inputPorts;
        private BlobLocationResponse locationInfo;
        private @Nullable Map<String,String> metadata;
        private String name;
        private @Nullable Map<String,OutputPortResponse> outputPorts;
        private @Nullable List<ModuleAssetParameterResponse> parameters;
        private String type;
        public Builder() {}
        public Builder(AssetItemResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.inputPorts = defaults.inputPorts;
    	      this.locationInfo = defaults.locationInfo;
    	      this.metadata = defaults.metadata;
    	      this.name = defaults.name;
    	      this.outputPorts = defaults.outputPorts;
    	      this.parameters = defaults.parameters;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder inputPorts(@Nullable Map<String,InputPortResponse> inputPorts) {
            this.inputPorts = inputPorts;
            return this;
        }
        @CustomType.Setter
        public Builder locationInfo(BlobLocationResponse locationInfo) {
            this.locationInfo = Objects.requireNonNull(locationInfo);
            return this;
        }
        @CustomType.Setter
        public Builder metadata(@Nullable Map<String,String> metadata) {
            this.metadata = metadata;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder outputPorts(@Nullable Map<String,OutputPortResponse> outputPorts) {
            this.outputPorts = outputPorts;
            return this;
        }
        @CustomType.Setter
        public Builder parameters(@Nullable List<ModuleAssetParameterResponse> parameters) {
            this.parameters = parameters;
            return this;
        }
        public Builder parameters(ModuleAssetParameterResponse... parameters) {
            return parameters(List.of(parameters));
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public AssetItemResponse build() {
            final var o = new AssetItemResponse();
            o.id = id;
            o.inputPorts = inputPorts;
            o.locationInfo = locationInfo;
            o.metadata = metadata;
            o.name = name;
            o.outputPorts = outputPorts;
            o.parameters = parameters;
            o.type = type;
            return o;
        }
    }
}
