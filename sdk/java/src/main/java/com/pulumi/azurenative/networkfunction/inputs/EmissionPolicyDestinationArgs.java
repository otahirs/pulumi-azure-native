// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.networkfunction.inputs;

import com.pulumi.azurenative.networkfunction.enums.DestinationType;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Emission policy destination properties.
 * 
 */
public final class EmissionPolicyDestinationArgs extends com.pulumi.resources.ResourceArgs {

    public static final EmissionPolicyDestinationArgs Empty = new EmissionPolicyDestinationArgs();

    /**
     * Emission destination type.
     * 
     */
    @Import(name="destinationType")
    private @Nullable Output<Either<String,DestinationType>> destinationType;

    /**
     * @return Emission destination type.
     * 
     */
    public Optional<Output<Either<String,DestinationType>>> destinationType() {
        return Optional.ofNullable(this.destinationType);
    }

    private EmissionPolicyDestinationArgs() {}

    private EmissionPolicyDestinationArgs(EmissionPolicyDestinationArgs $) {
        this.destinationType = $.destinationType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EmissionPolicyDestinationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EmissionPolicyDestinationArgs $;

        public Builder() {
            $ = new EmissionPolicyDestinationArgs();
        }

        public Builder(EmissionPolicyDestinationArgs defaults) {
            $ = new EmissionPolicyDestinationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param destinationType Emission destination type.
         * 
         * @return builder
         * 
         */
        public Builder destinationType(@Nullable Output<Either<String,DestinationType>> destinationType) {
            $.destinationType = destinationType;
            return this;
        }

        /**
         * @param destinationType Emission destination type.
         * 
         * @return builder
         * 
         */
        public Builder destinationType(Either<String,DestinationType> destinationType) {
            return destinationType(Output.of(destinationType));
        }

        /**
         * @param destinationType Emission destination type.
         * 
         * @return builder
         * 
         */
        public Builder destinationType(String destinationType) {
            return destinationType(Either.ofLeft(destinationType));
        }

        /**
         * @param destinationType Emission destination type.
         * 
         * @return builder
         * 
         */
        public Builder destinationType(DestinationType destinationType) {
            return destinationType(Either.ofRight(destinationType));
        }

        public EmissionPolicyDestinationArgs build() {
            return $;
        }
    }

}
