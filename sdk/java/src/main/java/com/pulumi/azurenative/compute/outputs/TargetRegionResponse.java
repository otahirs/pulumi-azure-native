// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.compute.outputs;

import com.pulumi.azurenative.compute.outputs.EncryptionImagesResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class TargetRegionResponse {
    /**
     * @return Optional. Allows users to provide customer managed keys for encrypting the OS and data disks in the gallery artifact.
     * 
     */
    private @Nullable EncryptionImagesResponse encryption;
    /**
     * @return The name of the region.
     * 
     */
    private String name;
    /**
     * @return The number of replicas of the Image Version to be created per region. This property is updatable.
     * 
     */
    private @Nullable Integer regionalReplicaCount;
    /**
     * @return Specifies the storage account type to be used to store the image. This property is not updatable.
     * 
     */
    private @Nullable String storageAccountType;

    private TargetRegionResponse() {}
    /**
     * @return Optional. Allows users to provide customer managed keys for encrypting the OS and data disks in the gallery artifact.
     * 
     */
    public Optional<EncryptionImagesResponse> encryption() {
        return Optional.ofNullable(this.encryption);
    }
    /**
     * @return The name of the region.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The number of replicas of the Image Version to be created per region. This property is updatable.
     * 
     */
    public Optional<Integer> regionalReplicaCount() {
        return Optional.ofNullable(this.regionalReplicaCount);
    }
    /**
     * @return Specifies the storage account type to be used to store the image. This property is not updatable.
     * 
     */
    public Optional<String> storageAccountType() {
        return Optional.ofNullable(this.storageAccountType);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TargetRegionResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable EncryptionImagesResponse encryption;
        private String name;
        private @Nullable Integer regionalReplicaCount;
        private @Nullable String storageAccountType;
        public Builder() {}
        public Builder(TargetRegionResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.encryption = defaults.encryption;
    	      this.name = defaults.name;
    	      this.regionalReplicaCount = defaults.regionalReplicaCount;
    	      this.storageAccountType = defaults.storageAccountType;
        }

        @CustomType.Setter
        public Builder encryption(@Nullable EncryptionImagesResponse encryption) {
            this.encryption = encryption;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder regionalReplicaCount(@Nullable Integer regionalReplicaCount) {
            this.regionalReplicaCount = regionalReplicaCount;
            return this;
        }
        @CustomType.Setter
        public Builder storageAccountType(@Nullable String storageAccountType) {
            this.storageAccountType = storageAccountType;
            return this;
        }
        public TargetRegionResponse build() {
            final var o = new TargetRegionResponse();
            o.encryption = encryption;
            o.name = name;
            o.regionalReplicaCount = regionalReplicaCount;
            o.storageAccountType = storageAccountType;
            return o;
        }
    }
}
