// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.outputs;

import com.pulumi.azurenative.network.outputs.DdosSettingsResponse;
import com.pulumi.azurenative.network.outputs.ExtendedLocationResponse;
import com.pulumi.azurenative.network.outputs.IPConfigurationResponse;
import com.pulumi.azurenative.network.outputs.IpTagResponse;
import com.pulumi.azurenative.network.outputs.NatGatewayResponse;
import com.pulumi.azurenative.network.outputs.PublicIPAddressDnsSettingsResponse;
import com.pulumi.azurenative.network.outputs.PublicIPAddressSkuResponse;
import com.pulumi.azurenative.network.outputs.SubResourceResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PublicIPAddressResponse {
    /**
     * @return The DDoS protection custom policy associated with the public IP address.
     * 
     */
    private @Nullable DdosSettingsResponse ddosSettings;
    /**
     * @return The FQDN of the DNS record associated with the public IP address.
     * 
     */
    private @Nullable PublicIPAddressDnsSettingsResponse dnsSettings;
    /**
     * @return A unique read-only string that changes whenever the resource is updated.
     * 
     */
    private String etag;
    /**
     * @return The extended location of the public ip address.
     * 
     */
    private @Nullable ExtendedLocationResponse extendedLocation;
    /**
     * @return Resource ID.
     * 
     */
    private @Nullable String id;
    /**
     * @return The idle timeout of the public IP address.
     * 
     */
    private @Nullable Integer idleTimeoutInMinutes;
    /**
     * @return The IP address associated with the public IP address resource.
     * 
     */
    private @Nullable String ipAddress;
    /**
     * @return The IP configuration associated with the public IP address.
     * 
     */
    private IPConfigurationResponse ipConfiguration;
    /**
     * @return The list of tags associated with the public IP address.
     * 
     */
    private @Nullable List<IpTagResponse> ipTags;
    /**
     * @return The linked public IP address of the public IP address resource.
     * 
     */
    private @Nullable PublicIPAddressResponse linkedPublicIPAddress;
    /**
     * @return Resource location.
     * 
     */
    private @Nullable String location;
    /**
     * @return Migration phase of Public IP Address.
     * 
     */
    private @Nullable String migrationPhase;
    /**
     * @return Resource name.
     * 
     */
    private String name;
    /**
     * @return The NatGateway for the Public IP address.
     * 
     */
    private @Nullable NatGatewayResponse natGateway;
    /**
     * @return The provisioning state of the public IP address resource.
     * 
     */
    private String provisioningState;
    /**
     * @return The public IP address version.
     * 
     */
    private @Nullable String publicIPAddressVersion;
    /**
     * @return The public IP address allocation method.
     * 
     */
    private @Nullable String publicIPAllocationMethod;
    /**
     * @return The Public IP Prefix this Public IP Address should be allocated from.
     * 
     */
    private @Nullable SubResourceResponse publicIPPrefix;
    /**
     * @return The resource GUID property of the public IP address resource.
     * 
     */
    private String resourceGuid;
    /**
     * @return The service public IP address of the public IP address resource.
     * 
     */
    private @Nullable PublicIPAddressResponse servicePublicIPAddress;
    /**
     * @return The public IP address SKU.
     * 
     */
    private @Nullable PublicIPAddressSkuResponse sku;
    /**
     * @return Resource tags.
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return Resource type.
     * 
     */
    private String type;
    /**
     * @return A list of availability zones denoting the IP allocated for the resource needs to come from.
     * 
     */
    private @Nullable List<String> zones;

    private PublicIPAddressResponse() {}
    /**
     * @return The DDoS protection custom policy associated with the public IP address.
     * 
     */
    public Optional<DdosSettingsResponse> ddosSettings() {
        return Optional.ofNullable(this.ddosSettings);
    }
    /**
     * @return The FQDN of the DNS record associated with the public IP address.
     * 
     */
    public Optional<PublicIPAddressDnsSettingsResponse> dnsSettings() {
        return Optional.ofNullable(this.dnsSettings);
    }
    /**
     * @return A unique read-only string that changes whenever the resource is updated.
     * 
     */
    public String etag() {
        return this.etag;
    }
    /**
     * @return The extended location of the public ip address.
     * 
     */
    public Optional<ExtendedLocationResponse> extendedLocation() {
        return Optional.ofNullable(this.extendedLocation);
    }
    /**
     * @return Resource ID.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The idle timeout of the public IP address.
     * 
     */
    public Optional<Integer> idleTimeoutInMinutes() {
        return Optional.ofNullable(this.idleTimeoutInMinutes);
    }
    /**
     * @return The IP address associated with the public IP address resource.
     * 
     */
    public Optional<String> ipAddress() {
        return Optional.ofNullable(this.ipAddress);
    }
    /**
     * @return The IP configuration associated with the public IP address.
     * 
     */
    public IPConfigurationResponse ipConfiguration() {
        return this.ipConfiguration;
    }
    /**
     * @return The list of tags associated with the public IP address.
     * 
     */
    public List<IpTagResponse> ipTags() {
        return this.ipTags == null ? List.of() : this.ipTags;
    }
    /**
     * @return The linked public IP address of the public IP address resource.
     * 
     */
    public Optional<PublicIPAddressResponse> linkedPublicIPAddress() {
        return Optional.ofNullable(this.linkedPublicIPAddress);
    }
    /**
     * @return Resource location.
     * 
     */
    public Optional<String> location() {
        return Optional.ofNullable(this.location);
    }
    /**
     * @return Migration phase of Public IP Address.
     * 
     */
    public Optional<String> migrationPhase() {
        return Optional.ofNullable(this.migrationPhase);
    }
    /**
     * @return Resource name.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The NatGateway for the Public IP address.
     * 
     */
    public Optional<NatGatewayResponse> natGateway() {
        return Optional.ofNullable(this.natGateway);
    }
    /**
     * @return The provisioning state of the public IP address resource.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * @return The public IP address version.
     * 
     */
    public Optional<String> publicIPAddressVersion() {
        return Optional.ofNullable(this.publicIPAddressVersion);
    }
    /**
     * @return The public IP address allocation method.
     * 
     */
    public Optional<String> publicIPAllocationMethod() {
        return Optional.ofNullable(this.publicIPAllocationMethod);
    }
    /**
     * @return The Public IP Prefix this Public IP Address should be allocated from.
     * 
     */
    public Optional<SubResourceResponse> publicIPPrefix() {
        return Optional.ofNullable(this.publicIPPrefix);
    }
    /**
     * @return The resource GUID property of the public IP address resource.
     * 
     */
    public String resourceGuid() {
        return this.resourceGuid;
    }
    /**
     * @return The service public IP address of the public IP address resource.
     * 
     */
    public Optional<PublicIPAddressResponse> servicePublicIPAddress() {
        return Optional.ofNullable(this.servicePublicIPAddress);
    }
    /**
     * @return The public IP address SKU.
     * 
     */
    public Optional<PublicIPAddressSkuResponse> sku() {
        return Optional.ofNullable(this.sku);
    }
    /**
     * @return Resource tags.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return Resource type.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return A list of availability zones denoting the IP allocated for the resource needs to come from.
     * 
     */
    public List<String> zones() {
        return this.zones == null ? List.of() : this.zones;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PublicIPAddressResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable DdosSettingsResponse ddosSettings;
        private @Nullable PublicIPAddressDnsSettingsResponse dnsSettings;
        private String etag;
        private @Nullable ExtendedLocationResponse extendedLocation;
        private @Nullable String id;
        private @Nullable Integer idleTimeoutInMinutes;
        private @Nullable String ipAddress;
        private IPConfigurationResponse ipConfiguration;
        private @Nullable List<IpTagResponse> ipTags;
        private @Nullable PublicIPAddressResponse linkedPublicIPAddress;
        private @Nullable String location;
        private @Nullable String migrationPhase;
        private String name;
        private @Nullable NatGatewayResponse natGateway;
        private String provisioningState;
        private @Nullable String publicIPAddressVersion;
        private @Nullable String publicIPAllocationMethod;
        private @Nullable SubResourceResponse publicIPPrefix;
        private String resourceGuid;
        private @Nullable PublicIPAddressResponse servicePublicIPAddress;
        private @Nullable PublicIPAddressSkuResponse sku;
        private @Nullable Map<String,String> tags;
        private String type;
        private @Nullable List<String> zones;
        public Builder() {}
        public Builder(PublicIPAddressResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ddosSettings = defaults.ddosSettings;
    	      this.dnsSettings = defaults.dnsSettings;
    	      this.etag = defaults.etag;
    	      this.extendedLocation = defaults.extendedLocation;
    	      this.id = defaults.id;
    	      this.idleTimeoutInMinutes = defaults.idleTimeoutInMinutes;
    	      this.ipAddress = defaults.ipAddress;
    	      this.ipConfiguration = defaults.ipConfiguration;
    	      this.ipTags = defaults.ipTags;
    	      this.linkedPublicIPAddress = defaults.linkedPublicIPAddress;
    	      this.location = defaults.location;
    	      this.migrationPhase = defaults.migrationPhase;
    	      this.name = defaults.name;
    	      this.natGateway = defaults.natGateway;
    	      this.provisioningState = defaults.provisioningState;
    	      this.publicIPAddressVersion = defaults.publicIPAddressVersion;
    	      this.publicIPAllocationMethod = defaults.publicIPAllocationMethod;
    	      this.publicIPPrefix = defaults.publicIPPrefix;
    	      this.resourceGuid = defaults.resourceGuid;
    	      this.servicePublicIPAddress = defaults.servicePublicIPAddress;
    	      this.sku = defaults.sku;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
    	      this.zones = defaults.zones;
        }

        @CustomType.Setter
        public Builder ddosSettings(@Nullable DdosSettingsResponse ddosSettings) {
            this.ddosSettings = ddosSettings;
            return this;
        }
        @CustomType.Setter
        public Builder dnsSettings(@Nullable PublicIPAddressDnsSettingsResponse dnsSettings) {
            this.dnsSettings = dnsSettings;
            return this;
        }
        @CustomType.Setter
        public Builder etag(String etag) {
            this.etag = Objects.requireNonNull(etag);
            return this;
        }
        @CustomType.Setter
        public Builder extendedLocation(@Nullable ExtendedLocationResponse extendedLocation) {
            this.extendedLocation = extendedLocation;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder idleTimeoutInMinutes(@Nullable Integer idleTimeoutInMinutes) {
            this.idleTimeoutInMinutes = idleTimeoutInMinutes;
            return this;
        }
        @CustomType.Setter
        public Builder ipAddress(@Nullable String ipAddress) {
            this.ipAddress = ipAddress;
            return this;
        }
        @CustomType.Setter
        public Builder ipConfiguration(IPConfigurationResponse ipConfiguration) {
            this.ipConfiguration = Objects.requireNonNull(ipConfiguration);
            return this;
        }
        @CustomType.Setter
        public Builder ipTags(@Nullable List<IpTagResponse> ipTags) {
            this.ipTags = ipTags;
            return this;
        }
        public Builder ipTags(IpTagResponse... ipTags) {
            return ipTags(List.of(ipTags));
        }
        @CustomType.Setter
        public Builder linkedPublicIPAddress(@Nullable PublicIPAddressResponse linkedPublicIPAddress) {
            this.linkedPublicIPAddress = linkedPublicIPAddress;
            return this;
        }
        @CustomType.Setter
        public Builder location(@Nullable String location) {
            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder migrationPhase(@Nullable String migrationPhase) {
            this.migrationPhase = migrationPhase;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder natGateway(@Nullable NatGatewayResponse natGateway) {
            this.natGateway = natGateway;
            return this;
        }
        @CustomType.Setter
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        @CustomType.Setter
        public Builder publicIPAddressVersion(@Nullable String publicIPAddressVersion) {
            this.publicIPAddressVersion = publicIPAddressVersion;
            return this;
        }
        @CustomType.Setter
        public Builder publicIPAllocationMethod(@Nullable String publicIPAllocationMethod) {
            this.publicIPAllocationMethod = publicIPAllocationMethod;
            return this;
        }
        @CustomType.Setter
        public Builder publicIPPrefix(@Nullable SubResourceResponse publicIPPrefix) {
            this.publicIPPrefix = publicIPPrefix;
            return this;
        }
        @CustomType.Setter
        public Builder resourceGuid(String resourceGuid) {
            this.resourceGuid = Objects.requireNonNull(resourceGuid);
            return this;
        }
        @CustomType.Setter
        public Builder servicePublicIPAddress(@Nullable PublicIPAddressResponse servicePublicIPAddress) {
            this.servicePublicIPAddress = servicePublicIPAddress;
            return this;
        }
        @CustomType.Setter
        public Builder sku(@Nullable PublicIPAddressSkuResponse sku) {
            this.sku = sku;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder zones(@Nullable List<String> zones) {
            this.zones = zones;
            return this;
        }
        public Builder zones(String... zones) {
            return zones(List.of(zones));
        }
        public PublicIPAddressResponse build() {
            final var o = new PublicIPAddressResponse();
            o.ddosSettings = ddosSettings;
            o.dnsSettings = dnsSettings;
            o.etag = etag;
            o.extendedLocation = extendedLocation;
            o.id = id;
            o.idleTimeoutInMinutes = idleTimeoutInMinutes;
            o.ipAddress = ipAddress;
            o.ipConfiguration = ipConfiguration;
            o.ipTags = ipTags;
            o.linkedPublicIPAddress = linkedPublicIPAddress;
            o.location = location;
            o.migrationPhase = migrationPhase;
            o.name = name;
            o.natGateway = natGateway;
            o.provisioningState = provisioningState;
            o.publicIPAddressVersion = publicIPAddressVersion;
            o.publicIPAllocationMethod = publicIPAllocationMethod;
            o.publicIPPrefix = publicIPPrefix;
            o.resourceGuid = resourceGuid;
            o.servicePublicIPAddress = servicePublicIPAddress;
            o.sku = sku;
            o.tags = tags;
            o.type = type;
            o.zones = zones;
            return o;
        }
    }
}
