// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.outputs;

import com.pulumi.azurenative.network.outputs.CacheConfigurationResponse;
import com.pulumi.azurenative.network.outputs.SubResourceResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ForwardingConfigurationResponse {
    /**
     * @return A reference to the BackendPool which this rule routes to.
     * 
     */
    private @Nullable SubResourceResponse backendPool;
    /**
     * @return The caching configuration associated with this rule.
     * 
     */
    private @Nullable CacheConfigurationResponse cacheConfiguration;
    /**
     * @return A custom path used to rewrite resource paths matched by this rule. Leave empty to use incoming path.
     * 
     */
    private @Nullable String customForwardingPath;
    /**
     * @return Protocol this rule will use when forwarding traffic to backends.
     * 
     */
    private @Nullable String forwardingProtocol;
    /**
     * @return
     * Expected value is &#39;#Microsoft.Azure.FrontDoor.Models.FrontdoorForwardingConfiguration&#39;.
     * 
     */
    private String odataType;

    private ForwardingConfigurationResponse() {}
    /**
     * @return A reference to the BackendPool which this rule routes to.
     * 
     */
    public Optional<SubResourceResponse> backendPool() {
        return Optional.ofNullable(this.backendPool);
    }
    /**
     * @return The caching configuration associated with this rule.
     * 
     */
    public Optional<CacheConfigurationResponse> cacheConfiguration() {
        return Optional.ofNullable(this.cacheConfiguration);
    }
    /**
     * @return A custom path used to rewrite resource paths matched by this rule. Leave empty to use incoming path.
     * 
     */
    public Optional<String> customForwardingPath() {
        return Optional.ofNullable(this.customForwardingPath);
    }
    /**
     * @return Protocol this rule will use when forwarding traffic to backends.
     * 
     */
    public Optional<String> forwardingProtocol() {
        return Optional.ofNullable(this.forwardingProtocol);
    }
    /**
     * @return
     * Expected value is &#39;#Microsoft.Azure.FrontDoor.Models.FrontdoorForwardingConfiguration&#39;.
     * 
     */
    public String odataType() {
        return this.odataType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ForwardingConfigurationResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable SubResourceResponse backendPool;
        private @Nullable CacheConfigurationResponse cacheConfiguration;
        private @Nullable String customForwardingPath;
        private @Nullable String forwardingProtocol;
        private String odataType;
        public Builder() {}
        public Builder(ForwardingConfigurationResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backendPool = defaults.backendPool;
    	      this.cacheConfiguration = defaults.cacheConfiguration;
    	      this.customForwardingPath = defaults.customForwardingPath;
    	      this.forwardingProtocol = defaults.forwardingProtocol;
    	      this.odataType = defaults.odataType;
        }

        @CustomType.Setter
        public Builder backendPool(@Nullable SubResourceResponse backendPool) {
            this.backendPool = backendPool;
            return this;
        }
        @CustomType.Setter
        public Builder cacheConfiguration(@Nullable CacheConfigurationResponse cacheConfiguration) {
            this.cacheConfiguration = cacheConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder customForwardingPath(@Nullable String customForwardingPath) {
            this.customForwardingPath = customForwardingPath;
            return this;
        }
        @CustomType.Setter
        public Builder forwardingProtocol(@Nullable String forwardingProtocol) {
            this.forwardingProtocol = forwardingProtocol;
            return this;
        }
        @CustomType.Setter
        public Builder odataType(String odataType) {
            this.odataType = Objects.requireNonNull(odataType);
            return this;
        }
        public ForwardingConfigurationResponse build() {
            final var o = new ForwardingConfigurationResponse();
            o.backendPool = backendPool;
            o.cacheConfiguration = cacheConfiguration;
            o.customForwardingPath = customForwardingPath;
            o.forwardingProtocol = forwardingProtocol;
            o.odataType = odataType;
            return o;
        }
    }
}
