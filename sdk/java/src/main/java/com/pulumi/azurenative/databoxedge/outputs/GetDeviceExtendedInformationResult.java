// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.databoxedge.outputs;

import com.pulumi.azurenative.databoxedge.outputs.DeviceSecretsResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDeviceExtendedInformationResult {
    /**
     * @return The name of Channel Integrity Key stored in the Client Key Vault
     * 
     */
    private @Nullable String channelIntegrityKeyName;
    /**
     * @return The version of Channel Integrity Key stored in the Client Key Vault
     * 
     */
    private @Nullable String channelIntegrityKeyVersion;
    /**
     * @return The Key Vault ARM Id for client secrets
     * 
     */
    private @Nullable String clientSecretStoreId;
    /**
     * @return The url to access the Client Key Vault
     * 
     */
    private @Nullable String clientSecretStoreUrl;
    /**
     * @return Device secrets, will be returned only with ODataFilter $expand=deviceSecrets
     * 
     */
    private DeviceSecretsResponse deviceSecrets;
    /**
     * @return The public part of the encryption certificate. Client uses this to encrypt any secret.
     * 
     */
    private @Nullable String encryptionKey;
    /**
     * @return The digital signature of encrypted certificate.
     * 
     */
    private @Nullable String encryptionKeyThumbprint;
    /**
     * @return The path ID that uniquely identifies the object.
     * 
     */
    private String id;
    /**
     * @return Key vault sync status
     * 
     */
    private @Nullable String keyVaultSyncStatus;
    /**
     * @return The object name.
     * 
     */
    private String name;
    /**
     * @return The Resource ID of the Resource.
     * 
     */
    private String resourceKey;
    /**
     * @return The hierarchical type of the object.
     * 
     */
    private String type;

    private GetDeviceExtendedInformationResult() {}
    /**
     * @return The name of Channel Integrity Key stored in the Client Key Vault
     * 
     */
    public Optional<String> channelIntegrityKeyName() {
        return Optional.ofNullable(this.channelIntegrityKeyName);
    }
    /**
     * @return The version of Channel Integrity Key stored in the Client Key Vault
     * 
     */
    public Optional<String> channelIntegrityKeyVersion() {
        return Optional.ofNullable(this.channelIntegrityKeyVersion);
    }
    /**
     * @return The Key Vault ARM Id for client secrets
     * 
     */
    public Optional<String> clientSecretStoreId() {
        return Optional.ofNullable(this.clientSecretStoreId);
    }
    /**
     * @return The url to access the Client Key Vault
     * 
     */
    public Optional<String> clientSecretStoreUrl() {
        return Optional.ofNullable(this.clientSecretStoreUrl);
    }
    /**
     * @return Device secrets, will be returned only with ODataFilter $expand=deviceSecrets
     * 
     */
    public DeviceSecretsResponse deviceSecrets() {
        return this.deviceSecrets;
    }
    /**
     * @return The public part of the encryption certificate. Client uses this to encrypt any secret.
     * 
     */
    public Optional<String> encryptionKey() {
        return Optional.ofNullable(this.encryptionKey);
    }
    /**
     * @return The digital signature of encrypted certificate.
     * 
     */
    public Optional<String> encryptionKeyThumbprint() {
        return Optional.ofNullable(this.encryptionKeyThumbprint);
    }
    /**
     * @return The path ID that uniquely identifies the object.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Key vault sync status
     * 
     */
    public Optional<String> keyVaultSyncStatus() {
        return Optional.ofNullable(this.keyVaultSyncStatus);
    }
    /**
     * @return The object name.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The Resource ID of the Resource.
     * 
     */
    public String resourceKey() {
        return this.resourceKey;
    }
    /**
     * @return The hierarchical type of the object.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDeviceExtendedInformationResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String channelIntegrityKeyName;
        private @Nullable String channelIntegrityKeyVersion;
        private @Nullable String clientSecretStoreId;
        private @Nullable String clientSecretStoreUrl;
        private DeviceSecretsResponse deviceSecrets;
        private @Nullable String encryptionKey;
        private @Nullable String encryptionKeyThumbprint;
        private String id;
        private @Nullable String keyVaultSyncStatus;
        private String name;
        private String resourceKey;
        private String type;
        public Builder() {}
        public Builder(GetDeviceExtendedInformationResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.channelIntegrityKeyName = defaults.channelIntegrityKeyName;
    	      this.channelIntegrityKeyVersion = defaults.channelIntegrityKeyVersion;
    	      this.clientSecretStoreId = defaults.clientSecretStoreId;
    	      this.clientSecretStoreUrl = defaults.clientSecretStoreUrl;
    	      this.deviceSecrets = defaults.deviceSecrets;
    	      this.encryptionKey = defaults.encryptionKey;
    	      this.encryptionKeyThumbprint = defaults.encryptionKeyThumbprint;
    	      this.id = defaults.id;
    	      this.keyVaultSyncStatus = defaults.keyVaultSyncStatus;
    	      this.name = defaults.name;
    	      this.resourceKey = defaults.resourceKey;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder channelIntegrityKeyName(@Nullable String channelIntegrityKeyName) {
            this.channelIntegrityKeyName = channelIntegrityKeyName;
            return this;
        }
        @CustomType.Setter
        public Builder channelIntegrityKeyVersion(@Nullable String channelIntegrityKeyVersion) {
            this.channelIntegrityKeyVersion = channelIntegrityKeyVersion;
            return this;
        }
        @CustomType.Setter
        public Builder clientSecretStoreId(@Nullable String clientSecretStoreId) {
            this.clientSecretStoreId = clientSecretStoreId;
            return this;
        }
        @CustomType.Setter
        public Builder clientSecretStoreUrl(@Nullable String clientSecretStoreUrl) {
            this.clientSecretStoreUrl = clientSecretStoreUrl;
            return this;
        }
        @CustomType.Setter
        public Builder deviceSecrets(DeviceSecretsResponse deviceSecrets) {
            this.deviceSecrets = Objects.requireNonNull(deviceSecrets);
            return this;
        }
        @CustomType.Setter
        public Builder encryptionKey(@Nullable String encryptionKey) {
            this.encryptionKey = encryptionKey;
            return this;
        }
        @CustomType.Setter
        public Builder encryptionKeyThumbprint(@Nullable String encryptionKeyThumbprint) {
            this.encryptionKeyThumbprint = encryptionKeyThumbprint;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder keyVaultSyncStatus(@Nullable String keyVaultSyncStatus) {
            this.keyVaultSyncStatus = keyVaultSyncStatus;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder resourceKey(String resourceKey) {
            this.resourceKey = Objects.requireNonNull(resourceKey);
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetDeviceExtendedInformationResult build() {
            final var o = new GetDeviceExtendedInformationResult();
            o.channelIntegrityKeyName = channelIntegrityKeyName;
            o.channelIntegrityKeyVersion = channelIntegrityKeyVersion;
            o.clientSecretStoreId = clientSecretStoreId;
            o.clientSecretStoreUrl = clientSecretStoreUrl;
            o.deviceSecrets = deviceSecrets;
            o.encryptionKey = encryptionKey;
            o.encryptionKeyThumbprint = encryptionKeyThumbprint;
            o.id = id;
            o.keyVaultSyncStatus = keyVaultSyncStatus;
            o.name = name;
            o.resourceKey = resourceKey;
            o.type = type;
            return o;
        }
    }
}
