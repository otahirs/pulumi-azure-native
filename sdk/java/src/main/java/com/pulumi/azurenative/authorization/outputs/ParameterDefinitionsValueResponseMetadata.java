// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.authorization.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ParameterDefinitionsValueResponseMetadata {
    /**
     * @return Set to true to have Azure portal create role assignments on the resource ID or resource scope value of this parameter during policy assignment. This property is useful in case you wish to assign permissions outside the assignment scope.
     * 
     */
    private @Nullable Boolean assignPermissions;
    /**
     * @return The description of the parameter.
     * 
     */
    private @Nullable String description;
    /**
     * @return The display name for the parameter.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return Used when assigning the policy definition through the portal. Provides a context aware list of values for the user to choose from.
     * 
     */
    private @Nullable String strongType;

    private ParameterDefinitionsValueResponseMetadata() {}
    /**
     * @return Set to true to have Azure portal create role assignments on the resource ID or resource scope value of this parameter during policy assignment. This property is useful in case you wish to assign permissions outside the assignment scope.
     * 
     */
    public Optional<Boolean> assignPermissions() {
        return Optional.ofNullable(this.assignPermissions);
    }
    /**
     * @return The description of the parameter.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return The display name for the parameter.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return Used when assigning the policy definition through the portal. Provides a context aware list of values for the user to choose from.
     * 
     */
    public Optional<String> strongType() {
        return Optional.ofNullable(this.strongType);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ParameterDefinitionsValueResponseMetadata defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean assignPermissions;
        private @Nullable String description;
        private @Nullable String displayName;
        private @Nullable String strongType;
        public Builder() {}
        public Builder(ParameterDefinitionsValueResponseMetadata defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.assignPermissions = defaults.assignPermissions;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.strongType = defaults.strongType;
        }

        @CustomType.Setter
        public Builder assignPermissions(@Nullable Boolean assignPermissions) {
            this.assignPermissions = assignPermissions;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder strongType(@Nullable String strongType) {
            this.strongType = strongType;
            return this;
        }
        public ParameterDefinitionsValueResponseMetadata build() {
            final var o = new ParameterDefinitionsValueResponseMetadata();
            o.assignPermissions = assignPermissions;
            o.description = description;
            o.displayName = displayName;
            o.strongType = strongType;
            return o;
        }
    }
}
