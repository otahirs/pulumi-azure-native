// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.workloads.outputs;

import com.pulumi.azurenative.workloads.outputs.DeploymentConfigurationResponse;
import com.pulumi.azurenative.workloads.outputs.DeploymentWithOSConfigurationResponse;
import com.pulumi.azurenative.workloads.outputs.DiscoveryConfigurationResponse;
import com.pulumi.azurenative.workloads.outputs.ManagedRGConfigurationResponse;
import com.pulumi.azurenative.workloads.outputs.SAPVirtualInstanceErrorResponse;
import com.pulumi.azurenative.workloads.outputs.SystemDataResponse;
import com.pulumi.azurenative.workloads.outputs.UserAssignedServiceIdentityResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetSAPVirtualInstanceResult {
    /**
     * @return Defines if an existing SAP system is being registered or a new SAP system is being created
     * 
     */
    private Object configuration;
    /**
     * @return Defines the environment type - Production/Non Production.
     * 
     */
    private String environment;
    /**
     * @return Defines the Virtual Instance for SAP errors.
     * 
     */
    private SAPVirtualInstanceErrorResponse errors;
    /**
     * @return Defines the SAP Instance health.
     * 
     */
    private String health;
    /**
     * @return Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    private String id;
    /**
     * @return Managed service identity (user assigned identities)
     * 
     */
    private @Nullable UserAssignedServiceIdentityResponse identity;
    /**
     * @return The geo-location where the resource lives
     * 
     */
    private String location;
    /**
     * @return Managed resource group configuration
     * 
     */
    private @Nullable ManagedRGConfigurationResponse managedResourceGroupConfiguration;
    /**
     * @return The name of the resource
     * 
     */
    private String name;
    /**
     * @return Defines the provisioning states.
     * 
     */
    private String provisioningState;
    /**
     * @return Defines the SAP Product type.
     * 
     */
    private String sapProduct;
    /**
     * @return Defines the Virtual Instance for SAP state.
     * 
     */
    private String state;
    /**
     * @return Defines the SAP Instance status.
     * 
     */
    private String status;
    /**
     * @return Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     */
    private SystemDataResponse systemData;
    /**
     * @return Resource tags.
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    private String type;

    private GetSAPVirtualInstanceResult() {}
    /**
     * @return Defines if an existing SAP system is being registered or a new SAP system is being created
     * 
     */
    public Object configuration() {
        return this.configuration;
    }
    /**
     * @return Defines the environment type - Production/Non Production.
     * 
     */
    public String environment() {
        return this.environment;
    }
    /**
     * @return Defines the Virtual Instance for SAP errors.
     * 
     */
    public SAPVirtualInstanceErrorResponse errors() {
        return this.errors;
    }
    /**
     * @return Defines the SAP Instance health.
     * 
     */
    public String health() {
        return this.health;
    }
    /**
     * @return Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Managed service identity (user assigned identities)
     * 
     */
    public Optional<UserAssignedServiceIdentityResponse> identity() {
        return Optional.ofNullable(this.identity);
    }
    /**
     * @return The geo-location where the resource lives
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return Managed resource group configuration
     * 
     */
    public Optional<ManagedRGConfigurationResponse> managedResourceGroupConfiguration() {
        return Optional.ofNullable(this.managedResourceGroupConfiguration);
    }
    /**
     * @return The name of the resource
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Defines the provisioning states.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * @return Defines the SAP Product type.
     * 
     */
    public String sapProduct() {
        return this.sapProduct;
    }
    /**
     * @return Defines the Virtual Instance for SAP state.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return Defines the SAP Instance status.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     */
    public SystemDataResponse systemData() {
        return this.systemData;
    }
    /**
     * @return Resource tags.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSAPVirtualInstanceResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Object configuration;
        private String environment;
        private SAPVirtualInstanceErrorResponse errors;
        private String health;
        private String id;
        private @Nullable UserAssignedServiceIdentityResponse identity;
        private String location;
        private @Nullable ManagedRGConfigurationResponse managedResourceGroupConfiguration;
        private String name;
        private String provisioningState;
        private String sapProduct;
        private String state;
        private String status;
        private SystemDataResponse systemData;
        private @Nullable Map<String,String> tags;
        private String type;
        public Builder() {}
        public Builder(GetSAPVirtualInstanceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.configuration = defaults.configuration;
    	      this.environment = defaults.environment;
    	      this.errors = defaults.errors;
    	      this.health = defaults.health;
    	      this.id = defaults.id;
    	      this.identity = defaults.identity;
    	      this.location = defaults.location;
    	      this.managedResourceGroupConfiguration = defaults.managedResourceGroupConfiguration;
    	      this.name = defaults.name;
    	      this.provisioningState = defaults.provisioningState;
    	      this.sapProduct = defaults.sapProduct;
    	      this.state = defaults.state;
    	      this.status = defaults.status;
    	      this.systemData = defaults.systemData;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder configuration(Object configuration) {
            this.configuration = Objects.requireNonNull(configuration);
            return this;
        }
        @CustomType.Setter
        public Builder environment(String environment) {
            this.environment = Objects.requireNonNull(environment);
            return this;
        }
        @CustomType.Setter
        public Builder errors(SAPVirtualInstanceErrorResponse errors) {
            this.errors = Objects.requireNonNull(errors);
            return this;
        }
        @CustomType.Setter
        public Builder health(String health) {
            this.health = Objects.requireNonNull(health);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder identity(@Nullable UserAssignedServiceIdentityResponse identity) {
            this.identity = identity;
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        @CustomType.Setter
        public Builder managedResourceGroupConfiguration(@Nullable ManagedRGConfigurationResponse managedResourceGroupConfiguration) {
            this.managedResourceGroupConfiguration = managedResourceGroupConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        @CustomType.Setter
        public Builder sapProduct(String sapProduct) {
            this.sapProduct = Objects.requireNonNull(sapProduct);
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        @CustomType.Setter
        public Builder systemData(SystemDataResponse systemData) {
            this.systemData = Objects.requireNonNull(systemData);
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetSAPVirtualInstanceResult build() {
            final var o = new GetSAPVirtualInstanceResult();
            o.configuration = configuration;
            o.environment = environment;
            o.errors = errors;
            o.health = health;
            o.id = id;
            o.identity = identity;
            o.location = location;
            o.managedResourceGroupConfiguration = managedResourceGroupConfiguration;
            o.name = name;
            o.provisioningState = provisioningState;
            o.sapProduct = sapProduct;
            o.state = state;
            o.status = status;
            o.systemData = systemData;
            o.tags = tags;
            o.type = type;
            return o;
        }
    }
}
