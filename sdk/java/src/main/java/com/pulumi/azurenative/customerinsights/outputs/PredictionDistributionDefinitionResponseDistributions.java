// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.customerinsights.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PredictionDistributionDefinitionResponseDistributions {
    /**
     * @return Number of negatives.
     * 
     */
    private @Nullable Double negatives;
    /**
     * @return Number of negatives above threshold.
     * 
     */
    private @Nullable Double negativesAboveThreshold;
    /**
     * @return Number of positives.
     * 
     */
    private @Nullable Double positives;
    /**
     * @return Number of positives above threshold.
     * 
     */
    private @Nullable Double positivesAboveThreshold;
    /**
     * @return Score threshold.
     * 
     */
    private @Nullable Integer scoreThreshold;

    private PredictionDistributionDefinitionResponseDistributions() {}
    /**
     * @return Number of negatives.
     * 
     */
    public Optional<Double> negatives() {
        return Optional.ofNullable(this.negatives);
    }
    /**
     * @return Number of negatives above threshold.
     * 
     */
    public Optional<Double> negativesAboveThreshold() {
        return Optional.ofNullable(this.negativesAboveThreshold);
    }
    /**
     * @return Number of positives.
     * 
     */
    public Optional<Double> positives() {
        return Optional.ofNullable(this.positives);
    }
    /**
     * @return Number of positives above threshold.
     * 
     */
    public Optional<Double> positivesAboveThreshold() {
        return Optional.ofNullable(this.positivesAboveThreshold);
    }
    /**
     * @return Score threshold.
     * 
     */
    public Optional<Integer> scoreThreshold() {
        return Optional.ofNullable(this.scoreThreshold);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PredictionDistributionDefinitionResponseDistributions defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Double negatives;
        private @Nullable Double negativesAboveThreshold;
        private @Nullable Double positives;
        private @Nullable Double positivesAboveThreshold;
        private @Nullable Integer scoreThreshold;
        public Builder() {}
        public Builder(PredictionDistributionDefinitionResponseDistributions defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.negatives = defaults.negatives;
    	      this.negativesAboveThreshold = defaults.negativesAboveThreshold;
    	      this.positives = defaults.positives;
    	      this.positivesAboveThreshold = defaults.positivesAboveThreshold;
    	      this.scoreThreshold = defaults.scoreThreshold;
        }

        @CustomType.Setter
        public Builder negatives(@Nullable Double negatives) {
            this.negatives = negatives;
            return this;
        }
        @CustomType.Setter
        public Builder negativesAboveThreshold(@Nullable Double negativesAboveThreshold) {
            this.negativesAboveThreshold = negativesAboveThreshold;
            return this;
        }
        @CustomType.Setter
        public Builder positives(@Nullable Double positives) {
            this.positives = positives;
            return this;
        }
        @CustomType.Setter
        public Builder positivesAboveThreshold(@Nullable Double positivesAboveThreshold) {
            this.positivesAboveThreshold = positivesAboveThreshold;
            return this;
        }
        @CustomType.Setter
        public Builder scoreThreshold(@Nullable Integer scoreThreshold) {
            this.scoreThreshold = scoreThreshold;
            return this;
        }
        public PredictionDistributionDefinitionResponseDistributions build() {
            final var o = new PredictionDistributionDefinitionResponseDistributions();
            o.negatives = negatives;
            o.negativesAboveThreshold = negativesAboveThreshold;
            o.positives = positives;
            o.positivesAboveThreshold = positivesAboveThreshold;
            o.scoreThreshold = scoreThreshold;
            return o;
        }
    }
}
