// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.recoveryservices.outputs;

import com.pulumi.azurenative.recoveryservices.outputs.AzureVmDiskDetailsResponse;
import com.pulumi.azurenative.recoveryservices.outputs.InitialReplicationDetailsResponse;
import com.pulumi.azurenative.recoveryservices.outputs.OSDetailsResponse;
import com.pulumi.azurenative.recoveryservices.outputs.VMNicDetailsResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class HyperVReplicaAzureReplicationDetailsResponse {
    /**
     * @return Azure VM Disk details.
     * 
     */
    private @Nullable List<AzureVmDiskDetailsResponse> azureVmDiskDetails;
    /**
     * @return The selected option to enable RDP\SSH on target vm after failover. String value of {SrsDataContract.EnableRDPOnTargetOption} enum.
     * 
     */
    private @Nullable String enableRdpOnTargetOption;
    /**
     * @return The encryption info.
     * 
     */
    private @Nullable String encryption;
    /**
     * @return Initial replication details.
     * 
     */
    private @Nullable InitialReplicationDetailsResponse initialReplicationDetails;
    /**
     * @return Gets the Instance type.
     * Expected value is &#39;HyperVReplicaAzure&#39;.
     * 
     */
    private String instanceType;
    /**
     * @return The Last replication time.
     * 
     */
    private @Nullable String lastReplicatedTime;
    /**
     * @return The last RPO calculated time.
     * 
     */
    private @Nullable String lastRpoCalculatedTime;
    /**
     * @return License Type of the VM to be used.
     * 
     */
    private @Nullable String licenseType;
    /**
     * @return The operating system info.
     * 
     */
    private @Nullable OSDetailsResponse oSDetails;
    /**
     * @return The recovery availability set Id.
     * 
     */
    private @Nullable String recoveryAvailabilitySetId;
    /**
     * @return The ARM id of the log storage account used for replication. This will be set to null if no log storage account was provided during enable protection.
     * 
     */
    private @Nullable String recoveryAzureLogStorageAccountId;
    /**
     * @return The target resource group Id.
     * 
     */
    private @Nullable String recoveryAzureResourceGroupId;
    /**
     * @return The recovery Azure storage account.
     * 
     */
    private @Nullable String recoveryAzureStorageAccount;
    /**
     * @return The Recovery Azure VM size.
     * 
     */
    private @Nullable String recoveryAzureVMSize;
    /**
     * @return Recovery Azure given name.
     * 
     */
    private @Nullable String recoveryAzureVmName;
    /**
     * @return Last RPO value.
     * 
     */
    private @Nullable Double rpoInSeconds;
    /**
     * @return The selected recovery azure network Id.
     * 
     */
    private @Nullable String selectedRecoveryAzureNetworkId;
    /**
     * @return The selected source nic Id which will be used as the primary nic during failover.
     * 
     */
    private @Nullable String selectedSourceNicId;
    /**
     * @return The CPU count of the VM on the primary side.
     * 
     */
    private @Nullable Integer sourceVmCpuCount;
    /**
     * @return The RAM size of the VM on the primary side.
     * 
     */
    private @Nullable Integer sourceVmRamSizeInMB;
    /**
     * @return The target availability zone.
     * 
     */
    private @Nullable String targetAvailabilityZone;
    /**
     * @return The target proximity placement group Id.
     * 
     */
    private @Nullable String targetProximityPlacementGroupId;
    /**
     * @return A value indicating whether managed disks should be used during failover.
     * 
     */
    private @Nullable String useManagedDisks;
    /**
     * @return The virtual machine Id.
     * 
     */
    private @Nullable String vmId;
    /**
     * @return The PE Network details.
     * 
     */
    private @Nullable List<VMNicDetailsResponse> vmNics;
    /**
     * @return The protection state for the vm.
     * 
     */
    private @Nullable String vmProtectionState;
    /**
     * @return The protection state description for the vm.
     * 
     */
    private @Nullable String vmProtectionStateDescription;

    private HyperVReplicaAzureReplicationDetailsResponse() {}
    /**
     * @return Azure VM Disk details.
     * 
     */
    public List<AzureVmDiskDetailsResponse> azureVmDiskDetails() {
        return this.azureVmDiskDetails == null ? List.of() : this.azureVmDiskDetails;
    }
    /**
     * @return The selected option to enable RDP\SSH on target vm after failover. String value of {SrsDataContract.EnableRDPOnTargetOption} enum.
     * 
     */
    public Optional<String> enableRdpOnTargetOption() {
        return Optional.ofNullable(this.enableRdpOnTargetOption);
    }
    /**
     * @return The encryption info.
     * 
     */
    public Optional<String> encryption() {
        return Optional.ofNullable(this.encryption);
    }
    /**
     * @return Initial replication details.
     * 
     */
    public Optional<InitialReplicationDetailsResponse> initialReplicationDetails() {
        return Optional.ofNullable(this.initialReplicationDetails);
    }
    /**
     * @return Gets the Instance type.
     * Expected value is &#39;HyperVReplicaAzure&#39;.
     * 
     */
    public String instanceType() {
        return this.instanceType;
    }
    /**
     * @return The Last replication time.
     * 
     */
    public Optional<String> lastReplicatedTime() {
        return Optional.ofNullable(this.lastReplicatedTime);
    }
    /**
     * @return The last RPO calculated time.
     * 
     */
    public Optional<String> lastRpoCalculatedTime() {
        return Optional.ofNullable(this.lastRpoCalculatedTime);
    }
    /**
     * @return License Type of the VM to be used.
     * 
     */
    public Optional<String> licenseType() {
        return Optional.ofNullable(this.licenseType);
    }
    /**
     * @return The operating system info.
     * 
     */
    public Optional<OSDetailsResponse> oSDetails() {
        return Optional.ofNullable(this.oSDetails);
    }
    /**
     * @return The recovery availability set Id.
     * 
     */
    public Optional<String> recoveryAvailabilitySetId() {
        return Optional.ofNullable(this.recoveryAvailabilitySetId);
    }
    /**
     * @return The ARM id of the log storage account used for replication. This will be set to null if no log storage account was provided during enable protection.
     * 
     */
    public Optional<String> recoveryAzureLogStorageAccountId() {
        return Optional.ofNullable(this.recoveryAzureLogStorageAccountId);
    }
    /**
     * @return The target resource group Id.
     * 
     */
    public Optional<String> recoveryAzureResourceGroupId() {
        return Optional.ofNullable(this.recoveryAzureResourceGroupId);
    }
    /**
     * @return The recovery Azure storage account.
     * 
     */
    public Optional<String> recoveryAzureStorageAccount() {
        return Optional.ofNullable(this.recoveryAzureStorageAccount);
    }
    /**
     * @return The Recovery Azure VM size.
     * 
     */
    public Optional<String> recoveryAzureVMSize() {
        return Optional.ofNullable(this.recoveryAzureVMSize);
    }
    /**
     * @return Recovery Azure given name.
     * 
     */
    public Optional<String> recoveryAzureVmName() {
        return Optional.ofNullable(this.recoveryAzureVmName);
    }
    /**
     * @return Last RPO value.
     * 
     */
    public Optional<Double> rpoInSeconds() {
        return Optional.ofNullable(this.rpoInSeconds);
    }
    /**
     * @return The selected recovery azure network Id.
     * 
     */
    public Optional<String> selectedRecoveryAzureNetworkId() {
        return Optional.ofNullable(this.selectedRecoveryAzureNetworkId);
    }
    /**
     * @return The selected source nic Id which will be used as the primary nic during failover.
     * 
     */
    public Optional<String> selectedSourceNicId() {
        return Optional.ofNullable(this.selectedSourceNicId);
    }
    /**
     * @return The CPU count of the VM on the primary side.
     * 
     */
    public Optional<Integer> sourceVmCpuCount() {
        return Optional.ofNullable(this.sourceVmCpuCount);
    }
    /**
     * @return The RAM size of the VM on the primary side.
     * 
     */
    public Optional<Integer> sourceVmRamSizeInMB() {
        return Optional.ofNullable(this.sourceVmRamSizeInMB);
    }
    /**
     * @return The target availability zone.
     * 
     */
    public Optional<String> targetAvailabilityZone() {
        return Optional.ofNullable(this.targetAvailabilityZone);
    }
    /**
     * @return The target proximity placement group Id.
     * 
     */
    public Optional<String> targetProximityPlacementGroupId() {
        return Optional.ofNullable(this.targetProximityPlacementGroupId);
    }
    /**
     * @return A value indicating whether managed disks should be used during failover.
     * 
     */
    public Optional<String> useManagedDisks() {
        return Optional.ofNullable(this.useManagedDisks);
    }
    /**
     * @return The virtual machine Id.
     * 
     */
    public Optional<String> vmId() {
        return Optional.ofNullable(this.vmId);
    }
    /**
     * @return The PE Network details.
     * 
     */
    public List<VMNicDetailsResponse> vmNics() {
        return this.vmNics == null ? List.of() : this.vmNics;
    }
    /**
     * @return The protection state for the vm.
     * 
     */
    public Optional<String> vmProtectionState() {
        return Optional.ofNullable(this.vmProtectionState);
    }
    /**
     * @return The protection state description for the vm.
     * 
     */
    public Optional<String> vmProtectionStateDescription() {
        return Optional.ofNullable(this.vmProtectionStateDescription);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(HyperVReplicaAzureReplicationDetailsResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<AzureVmDiskDetailsResponse> azureVmDiskDetails;
        private @Nullable String enableRdpOnTargetOption;
        private @Nullable String encryption;
        private @Nullable InitialReplicationDetailsResponse initialReplicationDetails;
        private String instanceType;
        private @Nullable String lastReplicatedTime;
        private @Nullable String lastRpoCalculatedTime;
        private @Nullable String licenseType;
        private @Nullable OSDetailsResponse oSDetails;
        private @Nullable String recoveryAvailabilitySetId;
        private @Nullable String recoveryAzureLogStorageAccountId;
        private @Nullable String recoveryAzureResourceGroupId;
        private @Nullable String recoveryAzureStorageAccount;
        private @Nullable String recoveryAzureVMSize;
        private @Nullable String recoveryAzureVmName;
        private @Nullable Double rpoInSeconds;
        private @Nullable String selectedRecoveryAzureNetworkId;
        private @Nullable String selectedSourceNicId;
        private @Nullable Integer sourceVmCpuCount;
        private @Nullable Integer sourceVmRamSizeInMB;
        private @Nullable String targetAvailabilityZone;
        private @Nullable String targetProximityPlacementGroupId;
        private @Nullable String useManagedDisks;
        private @Nullable String vmId;
        private @Nullable List<VMNicDetailsResponse> vmNics;
        private @Nullable String vmProtectionState;
        private @Nullable String vmProtectionStateDescription;
        public Builder() {}
        public Builder(HyperVReplicaAzureReplicationDetailsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.azureVmDiskDetails = defaults.azureVmDiskDetails;
    	      this.enableRdpOnTargetOption = defaults.enableRdpOnTargetOption;
    	      this.encryption = defaults.encryption;
    	      this.initialReplicationDetails = defaults.initialReplicationDetails;
    	      this.instanceType = defaults.instanceType;
    	      this.lastReplicatedTime = defaults.lastReplicatedTime;
    	      this.lastRpoCalculatedTime = defaults.lastRpoCalculatedTime;
    	      this.licenseType = defaults.licenseType;
    	      this.oSDetails = defaults.oSDetails;
    	      this.recoveryAvailabilitySetId = defaults.recoveryAvailabilitySetId;
    	      this.recoveryAzureLogStorageAccountId = defaults.recoveryAzureLogStorageAccountId;
    	      this.recoveryAzureResourceGroupId = defaults.recoveryAzureResourceGroupId;
    	      this.recoveryAzureStorageAccount = defaults.recoveryAzureStorageAccount;
    	      this.recoveryAzureVMSize = defaults.recoveryAzureVMSize;
    	      this.recoveryAzureVmName = defaults.recoveryAzureVmName;
    	      this.rpoInSeconds = defaults.rpoInSeconds;
    	      this.selectedRecoveryAzureNetworkId = defaults.selectedRecoveryAzureNetworkId;
    	      this.selectedSourceNicId = defaults.selectedSourceNicId;
    	      this.sourceVmCpuCount = defaults.sourceVmCpuCount;
    	      this.sourceVmRamSizeInMB = defaults.sourceVmRamSizeInMB;
    	      this.targetAvailabilityZone = defaults.targetAvailabilityZone;
    	      this.targetProximityPlacementGroupId = defaults.targetProximityPlacementGroupId;
    	      this.useManagedDisks = defaults.useManagedDisks;
    	      this.vmId = defaults.vmId;
    	      this.vmNics = defaults.vmNics;
    	      this.vmProtectionState = defaults.vmProtectionState;
    	      this.vmProtectionStateDescription = defaults.vmProtectionStateDescription;
        }

        @CustomType.Setter
        public Builder azureVmDiskDetails(@Nullable List<AzureVmDiskDetailsResponse> azureVmDiskDetails) {
            this.azureVmDiskDetails = azureVmDiskDetails;
            return this;
        }
        public Builder azureVmDiskDetails(AzureVmDiskDetailsResponse... azureVmDiskDetails) {
            return azureVmDiskDetails(List.of(azureVmDiskDetails));
        }
        @CustomType.Setter
        public Builder enableRdpOnTargetOption(@Nullable String enableRdpOnTargetOption) {
            this.enableRdpOnTargetOption = enableRdpOnTargetOption;
            return this;
        }
        @CustomType.Setter
        public Builder encryption(@Nullable String encryption) {
            this.encryption = encryption;
            return this;
        }
        @CustomType.Setter
        public Builder initialReplicationDetails(@Nullable InitialReplicationDetailsResponse initialReplicationDetails) {
            this.initialReplicationDetails = initialReplicationDetails;
            return this;
        }
        @CustomType.Setter
        public Builder instanceType(String instanceType) {
            this.instanceType = Objects.requireNonNull(instanceType);
            return this;
        }
        @CustomType.Setter
        public Builder lastReplicatedTime(@Nullable String lastReplicatedTime) {
            this.lastReplicatedTime = lastReplicatedTime;
            return this;
        }
        @CustomType.Setter
        public Builder lastRpoCalculatedTime(@Nullable String lastRpoCalculatedTime) {
            this.lastRpoCalculatedTime = lastRpoCalculatedTime;
            return this;
        }
        @CustomType.Setter
        public Builder licenseType(@Nullable String licenseType) {
            this.licenseType = licenseType;
            return this;
        }
        @CustomType.Setter
        public Builder oSDetails(@Nullable OSDetailsResponse oSDetails) {
            this.oSDetails = oSDetails;
            return this;
        }
        @CustomType.Setter
        public Builder recoveryAvailabilitySetId(@Nullable String recoveryAvailabilitySetId) {
            this.recoveryAvailabilitySetId = recoveryAvailabilitySetId;
            return this;
        }
        @CustomType.Setter
        public Builder recoveryAzureLogStorageAccountId(@Nullable String recoveryAzureLogStorageAccountId) {
            this.recoveryAzureLogStorageAccountId = recoveryAzureLogStorageAccountId;
            return this;
        }
        @CustomType.Setter
        public Builder recoveryAzureResourceGroupId(@Nullable String recoveryAzureResourceGroupId) {
            this.recoveryAzureResourceGroupId = recoveryAzureResourceGroupId;
            return this;
        }
        @CustomType.Setter
        public Builder recoveryAzureStorageAccount(@Nullable String recoveryAzureStorageAccount) {
            this.recoveryAzureStorageAccount = recoveryAzureStorageAccount;
            return this;
        }
        @CustomType.Setter
        public Builder recoveryAzureVMSize(@Nullable String recoveryAzureVMSize) {
            this.recoveryAzureVMSize = recoveryAzureVMSize;
            return this;
        }
        @CustomType.Setter
        public Builder recoveryAzureVmName(@Nullable String recoveryAzureVmName) {
            this.recoveryAzureVmName = recoveryAzureVmName;
            return this;
        }
        @CustomType.Setter
        public Builder rpoInSeconds(@Nullable Double rpoInSeconds) {
            this.rpoInSeconds = rpoInSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder selectedRecoveryAzureNetworkId(@Nullable String selectedRecoveryAzureNetworkId) {
            this.selectedRecoveryAzureNetworkId = selectedRecoveryAzureNetworkId;
            return this;
        }
        @CustomType.Setter
        public Builder selectedSourceNicId(@Nullable String selectedSourceNicId) {
            this.selectedSourceNicId = selectedSourceNicId;
            return this;
        }
        @CustomType.Setter
        public Builder sourceVmCpuCount(@Nullable Integer sourceVmCpuCount) {
            this.sourceVmCpuCount = sourceVmCpuCount;
            return this;
        }
        @CustomType.Setter
        public Builder sourceVmRamSizeInMB(@Nullable Integer sourceVmRamSizeInMB) {
            this.sourceVmRamSizeInMB = sourceVmRamSizeInMB;
            return this;
        }
        @CustomType.Setter
        public Builder targetAvailabilityZone(@Nullable String targetAvailabilityZone) {
            this.targetAvailabilityZone = targetAvailabilityZone;
            return this;
        }
        @CustomType.Setter
        public Builder targetProximityPlacementGroupId(@Nullable String targetProximityPlacementGroupId) {
            this.targetProximityPlacementGroupId = targetProximityPlacementGroupId;
            return this;
        }
        @CustomType.Setter
        public Builder useManagedDisks(@Nullable String useManagedDisks) {
            this.useManagedDisks = useManagedDisks;
            return this;
        }
        @CustomType.Setter
        public Builder vmId(@Nullable String vmId) {
            this.vmId = vmId;
            return this;
        }
        @CustomType.Setter
        public Builder vmNics(@Nullable List<VMNicDetailsResponse> vmNics) {
            this.vmNics = vmNics;
            return this;
        }
        public Builder vmNics(VMNicDetailsResponse... vmNics) {
            return vmNics(List.of(vmNics));
        }
        @CustomType.Setter
        public Builder vmProtectionState(@Nullable String vmProtectionState) {
            this.vmProtectionState = vmProtectionState;
            return this;
        }
        @CustomType.Setter
        public Builder vmProtectionStateDescription(@Nullable String vmProtectionStateDescription) {
            this.vmProtectionStateDescription = vmProtectionStateDescription;
            return this;
        }
        public HyperVReplicaAzureReplicationDetailsResponse build() {
            final var o = new HyperVReplicaAzureReplicationDetailsResponse();
            o.azureVmDiskDetails = azureVmDiskDetails;
            o.enableRdpOnTargetOption = enableRdpOnTargetOption;
            o.encryption = encryption;
            o.initialReplicationDetails = initialReplicationDetails;
            o.instanceType = instanceType;
            o.lastReplicatedTime = lastReplicatedTime;
            o.lastRpoCalculatedTime = lastRpoCalculatedTime;
            o.licenseType = licenseType;
            o.oSDetails = oSDetails;
            o.recoveryAvailabilitySetId = recoveryAvailabilitySetId;
            o.recoveryAzureLogStorageAccountId = recoveryAzureLogStorageAccountId;
            o.recoveryAzureResourceGroupId = recoveryAzureResourceGroupId;
            o.recoveryAzureStorageAccount = recoveryAzureStorageAccount;
            o.recoveryAzureVMSize = recoveryAzureVMSize;
            o.recoveryAzureVmName = recoveryAzureVmName;
            o.rpoInSeconds = rpoInSeconds;
            o.selectedRecoveryAzureNetworkId = selectedRecoveryAzureNetworkId;
            o.selectedSourceNicId = selectedSourceNicId;
            o.sourceVmCpuCount = sourceVmCpuCount;
            o.sourceVmRamSizeInMB = sourceVmRamSizeInMB;
            o.targetAvailabilityZone = targetAvailabilityZone;
            o.targetProximityPlacementGroupId = targetProximityPlacementGroupId;
            o.useManagedDisks = useManagedDisks;
            o.vmId = vmId;
            o.vmNics = vmNics;
            o.vmProtectionState = vmProtectionState;
            o.vmProtectionStateDescription = vmProtectionStateDescription;
            return o;
        }
    }
}
