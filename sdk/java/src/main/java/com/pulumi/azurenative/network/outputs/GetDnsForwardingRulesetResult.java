// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.outputs;

import com.pulumi.azurenative.network.outputs.SubResourceResponse;
import com.pulumi.azurenative.network.outputs.SystemDataResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetDnsForwardingRulesetResult {
    /**
     * @return The reference to the DNS resolver outbound endpoints that are used to route DNS queries matching the forwarding rules in the ruleset to the target DNS servers.
     * 
     */
    private @Nullable List<SubResourceResponse> dnsResolverOutboundEndpoints;
    /**
     * @return ETag of the DNS forwarding ruleset.
     * 
     */
    private String etag;
    /**
     * @return Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    private String id;
    /**
     * @return The geo-location where the resource lives
     * 
     */
    private String location;
    /**
     * @return The name of the resource
     * 
     */
    private String name;
    /**
     * @return The current provisioning state of the DNS forwarding ruleset. This is a read-only property and any attempt to set this value will be ignored.
     * 
     */
    private String provisioningState;
    /**
     * @return The resourceGuid for the DNS forwarding ruleset.
     * 
     */
    private String resourceGuid;
    /**
     * @return Metadata pertaining to creation and last modification of the resource.
     * 
     */
    private SystemDataResponse systemData;
    /**
     * @return Resource tags.
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    private String type;

    private GetDnsForwardingRulesetResult() {}
    /**
     * @return The reference to the DNS resolver outbound endpoints that are used to route DNS queries matching the forwarding rules in the ruleset to the target DNS servers.
     * 
     */
    public List<SubResourceResponse> dnsResolverOutboundEndpoints() {
        return this.dnsResolverOutboundEndpoints == null ? List.of() : this.dnsResolverOutboundEndpoints;
    }
    /**
     * @return ETag of the DNS forwarding ruleset.
     * 
     */
    public String etag() {
        return this.etag;
    }
    /**
     * @return Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The geo-location where the resource lives
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return The name of the resource
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The current provisioning state of the DNS forwarding ruleset. This is a read-only property and any attempt to set this value will be ignored.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * @return The resourceGuid for the DNS forwarding ruleset.
     * 
     */
    public String resourceGuid() {
        return this.resourceGuid;
    }
    /**
     * @return Metadata pertaining to creation and last modification of the resource.
     * 
     */
    public SystemDataResponse systemData() {
        return this.systemData;
    }
    /**
     * @return Resource tags.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDnsForwardingRulesetResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<SubResourceResponse> dnsResolverOutboundEndpoints;
        private String etag;
        private String id;
        private String location;
        private String name;
        private String provisioningState;
        private String resourceGuid;
        private SystemDataResponse systemData;
        private @Nullable Map<String,String> tags;
        private String type;
        public Builder() {}
        public Builder(GetDnsForwardingRulesetResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dnsResolverOutboundEndpoints = defaults.dnsResolverOutboundEndpoints;
    	      this.etag = defaults.etag;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.provisioningState = defaults.provisioningState;
    	      this.resourceGuid = defaults.resourceGuid;
    	      this.systemData = defaults.systemData;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder dnsResolverOutboundEndpoints(@Nullable List<SubResourceResponse> dnsResolverOutboundEndpoints) {
            this.dnsResolverOutboundEndpoints = dnsResolverOutboundEndpoints;
            return this;
        }
        public Builder dnsResolverOutboundEndpoints(SubResourceResponse... dnsResolverOutboundEndpoints) {
            return dnsResolverOutboundEndpoints(List.of(dnsResolverOutboundEndpoints));
        }
        @CustomType.Setter
        public Builder etag(String etag) {
            this.etag = Objects.requireNonNull(etag);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        @CustomType.Setter
        public Builder resourceGuid(String resourceGuid) {
            this.resourceGuid = Objects.requireNonNull(resourceGuid);
            return this;
        }
        @CustomType.Setter
        public Builder systemData(SystemDataResponse systemData) {
            this.systemData = Objects.requireNonNull(systemData);
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetDnsForwardingRulesetResult build() {
            final var o = new GetDnsForwardingRulesetResult();
            o.dnsResolverOutboundEndpoints = dnsResolverOutboundEndpoints;
            o.etag = etag;
            o.id = id;
            o.location = location;
            o.name = name;
            o.provisioningState = provisioningState;
            o.resourceGuid = resourceGuid;
            o.systemData = systemData;
            o.tags = tags;
            o.type = type;
            return o;
        }
    }
}
