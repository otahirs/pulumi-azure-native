// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.workloads.outputs;

import com.pulumi.azurenative.workloads.outputs.DiskInfoResponse;
import com.pulumi.azurenative.workloads.outputs.OsImageProfileResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class VmssNodesProfileResponse {
    /**
     * @return Maximum number of nodes for autoscale
     * 
     */
    private @Nullable Integer autoScaleMaxCount;
    /**
     * @return Minimum number of nodes for autoscale
     * 
     */
    private @Nullable Integer autoScaleMinCount;
    /**
     * @return Data disks details. This property is not in use right now
     * 
     */
    private @Nullable List<DiskInfoResponse> dataDisks;
    /**
     * @return VM or VMSS name
     * 
     */
    private @Nullable String name;
    /**
     * @return VM/VMSS resource ARM Ids
     * 
     */
    private List<String> nodeResourceIds;
    /**
     * @return VM SKU for node(s)
     * 
     */
    private String nodeSku;
    /**
     * @return OS disk details
     * 
     */
    private DiskInfoResponse osDisk;
    /**
     * @return OS image used for creating the nodes
     * 
     */
    private OsImageProfileResponse osImage;

    private VmssNodesProfileResponse() {}
    /**
     * @return Maximum number of nodes for autoscale
     * 
     */
    public Optional<Integer> autoScaleMaxCount() {
        return Optional.ofNullable(this.autoScaleMaxCount);
    }
    /**
     * @return Minimum number of nodes for autoscale
     * 
     */
    public Optional<Integer> autoScaleMinCount() {
        return Optional.ofNullable(this.autoScaleMinCount);
    }
    /**
     * @return Data disks details. This property is not in use right now
     * 
     */
    public List<DiskInfoResponse> dataDisks() {
        return this.dataDisks == null ? List.of() : this.dataDisks;
    }
    /**
     * @return VM or VMSS name
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return VM/VMSS resource ARM Ids
     * 
     */
    public List<String> nodeResourceIds() {
        return this.nodeResourceIds;
    }
    /**
     * @return VM SKU for node(s)
     * 
     */
    public String nodeSku() {
        return this.nodeSku;
    }
    /**
     * @return OS disk details
     * 
     */
    public DiskInfoResponse osDisk() {
        return this.osDisk;
    }
    /**
     * @return OS image used for creating the nodes
     * 
     */
    public OsImageProfileResponse osImage() {
        return this.osImage;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VmssNodesProfileResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer autoScaleMaxCount;
        private @Nullable Integer autoScaleMinCount;
        private @Nullable List<DiskInfoResponse> dataDisks;
        private @Nullable String name;
        private List<String> nodeResourceIds;
        private String nodeSku;
        private DiskInfoResponse osDisk;
        private OsImageProfileResponse osImage;
        public Builder() {}
        public Builder(VmssNodesProfileResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoScaleMaxCount = defaults.autoScaleMaxCount;
    	      this.autoScaleMinCount = defaults.autoScaleMinCount;
    	      this.dataDisks = defaults.dataDisks;
    	      this.name = defaults.name;
    	      this.nodeResourceIds = defaults.nodeResourceIds;
    	      this.nodeSku = defaults.nodeSku;
    	      this.osDisk = defaults.osDisk;
    	      this.osImage = defaults.osImage;
        }

        @CustomType.Setter
        public Builder autoScaleMaxCount(@Nullable Integer autoScaleMaxCount) {
            this.autoScaleMaxCount = autoScaleMaxCount;
            return this;
        }
        @CustomType.Setter
        public Builder autoScaleMinCount(@Nullable Integer autoScaleMinCount) {
            this.autoScaleMinCount = autoScaleMinCount;
            return this;
        }
        @CustomType.Setter
        public Builder dataDisks(@Nullable List<DiskInfoResponse> dataDisks) {
            this.dataDisks = dataDisks;
            return this;
        }
        public Builder dataDisks(DiskInfoResponse... dataDisks) {
            return dataDisks(List.of(dataDisks));
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder nodeResourceIds(List<String> nodeResourceIds) {
            this.nodeResourceIds = Objects.requireNonNull(nodeResourceIds);
            return this;
        }
        public Builder nodeResourceIds(String... nodeResourceIds) {
            return nodeResourceIds(List.of(nodeResourceIds));
        }
        @CustomType.Setter
        public Builder nodeSku(String nodeSku) {
            this.nodeSku = Objects.requireNonNull(nodeSku);
            return this;
        }
        @CustomType.Setter
        public Builder osDisk(DiskInfoResponse osDisk) {
            this.osDisk = Objects.requireNonNull(osDisk);
            return this;
        }
        @CustomType.Setter
        public Builder osImage(OsImageProfileResponse osImage) {
            this.osImage = Objects.requireNonNull(osImage);
            return this;
        }
        public VmssNodesProfileResponse build() {
            final var o = new VmssNodesProfileResponse();
            o.autoScaleMaxCount = autoScaleMaxCount;
            o.autoScaleMinCount = autoScaleMinCount;
            o.dataDisks = dataDisks;
            o.name = name;
            o.nodeResourceIds = nodeResourceIds;
            o.nodeSku = nodeSku;
            o.osDisk = osDisk;
            o.osImage = osImage;
            return o;
        }
    }
}
