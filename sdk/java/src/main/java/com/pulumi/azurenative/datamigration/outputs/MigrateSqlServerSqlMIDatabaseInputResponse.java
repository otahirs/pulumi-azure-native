// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datamigration.outputs;

import com.pulumi.azurenative.datamigration.outputs.FileShareResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class MigrateSqlServerSqlMIDatabaseInputResponse {
    /**
     * @return The list of backup files to be used in case of existing backups.
     * 
     */
    private @Nullable List<String> backupFilePaths;
    /**
     * @return Backup file share information for backing up this database.
     * 
     */
    private @Nullable FileShareResponse backupFileShare;
    /**
     * @return Name of the database
     * 
     */
    private String name;
    /**
     * @return Name of the database at destination
     * 
     */
    private String restoreDatabaseName;

    private MigrateSqlServerSqlMIDatabaseInputResponse() {}
    /**
     * @return The list of backup files to be used in case of existing backups.
     * 
     */
    public List<String> backupFilePaths() {
        return this.backupFilePaths == null ? List.of() : this.backupFilePaths;
    }
    /**
     * @return Backup file share information for backing up this database.
     * 
     */
    public Optional<FileShareResponse> backupFileShare() {
        return Optional.ofNullable(this.backupFileShare);
    }
    /**
     * @return Name of the database
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Name of the database at destination
     * 
     */
    public String restoreDatabaseName() {
        return this.restoreDatabaseName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MigrateSqlServerSqlMIDatabaseInputResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> backupFilePaths;
        private @Nullable FileShareResponse backupFileShare;
        private String name;
        private String restoreDatabaseName;
        public Builder() {}
        public Builder(MigrateSqlServerSqlMIDatabaseInputResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backupFilePaths = defaults.backupFilePaths;
    	      this.backupFileShare = defaults.backupFileShare;
    	      this.name = defaults.name;
    	      this.restoreDatabaseName = defaults.restoreDatabaseName;
        }

        @CustomType.Setter
        public Builder backupFilePaths(@Nullable List<String> backupFilePaths) {
            this.backupFilePaths = backupFilePaths;
            return this;
        }
        public Builder backupFilePaths(String... backupFilePaths) {
            return backupFilePaths(List.of(backupFilePaths));
        }
        @CustomType.Setter
        public Builder backupFileShare(@Nullable FileShareResponse backupFileShare) {
            this.backupFileShare = backupFileShare;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder restoreDatabaseName(String restoreDatabaseName) {
            this.restoreDatabaseName = Objects.requireNonNull(restoreDatabaseName);
            return this;
        }
        public MigrateSqlServerSqlMIDatabaseInputResponse build() {
            final var o = new MigrateSqlServerSqlMIDatabaseInputResponse();
            o.backupFilePaths = backupFilePaths;
            o.backupFileShare = backupFileShare;
            o.name = name;
            o.restoreDatabaseName = restoreDatabaseName;
            return o;
        }
    }
}
