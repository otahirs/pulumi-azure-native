// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.media.outputs;

import com.pulumi.azurenative.media.outputs.AudioTrackDescriptorResponse;
import com.pulumi.azurenative.media.outputs.SelectAudioTrackByAttributeResponse;
import com.pulumi.azurenative.media.outputs.SelectAudioTrackByIdResponse;
import com.pulumi.azurenative.media.outputs.SelectVideoTrackByAttributeResponse;
import com.pulumi.azurenative.media.outputs.SelectVideoTrackByIdResponse;
import com.pulumi.azurenative.media.outputs.VideoTrackDescriptorResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class FromAllInputFileResponse {
    /**
     * @return The list of TrackDescriptors which define the metadata and selection of tracks in the input.
     * 
     */
    private @Nullable List<Object> includedTracks;
    /**
     * @return The discriminator for derived types.
     * Expected value is &#39;#Microsoft.Media.FromAllInputFile&#39;.
     * 
     */
    private String odataType;

    private FromAllInputFileResponse() {}
    /**
     * @return The list of TrackDescriptors which define the metadata and selection of tracks in the input.
     * 
     */
    public List<Object> includedTracks() {
        return this.includedTracks == null ? List.of() : this.includedTracks;
    }
    /**
     * @return The discriminator for derived types.
     * Expected value is &#39;#Microsoft.Media.FromAllInputFile&#39;.
     * 
     */
    public String odataType() {
        return this.odataType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FromAllInputFileResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<Object> includedTracks;
        private String odataType;
        public Builder() {}
        public Builder(FromAllInputFileResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.includedTracks = defaults.includedTracks;
    	      this.odataType = defaults.odataType;
        }

        @CustomType.Setter
        public Builder includedTracks(@Nullable List<Object> includedTracks) {
            this.includedTracks = includedTracks;
            return this;
        }
        public Builder includedTracks(Object... includedTracks) {
            return includedTracks(List.of(includedTracks));
        }
        @CustomType.Setter
        public Builder odataType(String odataType) {
            this.odataType = Objects.requireNonNull(odataType);
            return this;
        }
        public FromAllInputFileResponse build() {
            final var o = new FromAllInputFileResponse();
            o.includedTracks = includedTracks;
            o.odataType = odataType;
            return o;
        }
    }
}
