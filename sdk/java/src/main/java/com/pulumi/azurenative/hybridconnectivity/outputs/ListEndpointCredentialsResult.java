// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.hybridconnectivity.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ListEndpointCredentialsResult {
    /**
     * @return Access key for hybrid connection.
     * 
     */
    private String accessKey;
    /**
     * @return The expiration of access key in unix time.
     * 
     */
    private @Nullable Double expiresOn;
    /**
     * @return Azure Relay hybrid connection name for the resource.
     * 
     */
    private String hybridConnectionName;
    /**
     * @return The namespace name.
     * 
     */
    private String namespaceName;
    /**
     * @return The suffix domain name of relay namespace.
     * 
     */
    private String namespaceNameSuffix;

    private ListEndpointCredentialsResult() {}
    /**
     * @return Access key for hybrid connection.
     * 
     */
    public String accessKey() {
        return this.accessKey;
    }
    /**
     * @return The expiration of access key in unix time.
     * 
     */
    public Optional<Double> expiresOn() {
        return Optional.ofNullable(this.expiresOn);
    }
    /**
     * @return Azure Relay hybrid connection name for the resource.
     * 
     */
    public String hybridConnectionName() {
        return this.hybridConnectionName;
    }
    /**
     * @return The namespace name.
     * 
     */
    public String namespaceName() {
        return this.namespaceName;
    }
    /**
     * @return The suffix domain name of relay namespace.
     * 
     */
    public String namespaceNameSuffix() {
        return this.namespaceNameSuffix;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ListEndpointCredentialsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accessKey;
        private @Nullable Double expiresOn;
        private String hybridConnectionName;
        private String namespaceName;
        private String namespaceNameSuffix;
        public Builder() {}
        public Builder(ListEndpointCredentialsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessKey = defaults.accessKey;
    	      this.expiresOn = defaults.expiresOn;
    	      this.hybridConnectionName = defaults.hybridConnectionName;
    	      this.namespaceName = defaults.namespaceName;
    	      this.namespaceNameSuffix = defaults.namespaceNameSuffix;
        }

        @CustomType.Setter
        public Builder accessKey(String accessKey) {
            this.accessKey = Objects.requireNonNull(accessKey);
            return this;
        }
        @CustomType.Setter
        public Builder expiresOn(@Nullable Double expiresOn) {
            this.expiresOn = expiresOn;
            return this;
        }
        @CustomType.Setter
        public Builder hybridConnectionName(String hybridConnectionName) {
            this.hybridConnectionName = Objects.requireNonNull(hybridConnectionName);
            return this;
        }
        @CustomType.Setter
        public Builder namespaceName(String namespaceName) {
            this.namespaceName = Objects.requireNonNull(namespaceName);
            return this;
        }
        @CustomType.Setter
        public Builder namespaceNameSuffix(String namespaceNameSuffix) {
            this.namespaceNameSuffix = Objects.requireNonNull(namespaceNameSuffix);
            return this;
        }
        public ListEndpointCredentialsResult build() {
            final var o = new ListEndpointCredentialsResult();
            o.accessKey = accessKey;
            o.expiresOn = expiresOn;
            o.hybridConnectionName = hybridConnectionName;
            o.namespaceName = namespaceName;
            o.namespaceNameSuffix = namespaceNameSuffix;
            return o;
        }
    }
}
