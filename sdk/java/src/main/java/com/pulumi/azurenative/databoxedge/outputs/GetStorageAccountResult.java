// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.databoxedge.outputs;

import com.pulumi.azurenative.databoxedge.outputs.SystemDataResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetStorageAccountResult {
    /**
     * @return BlobEndpoint of Storage Account
     * 
     */
    private String blobEndpoint;
    /**
     * @return The Container Count. Present only for Storage Accounts with DataPolicy set to Cloud.
     * 
     */
    private Integer containerCount;
    /**
     * @return Data policy of the storage Account.
     * 
     */
    private String dataPolicy;
    /**
     * @return Description for the storage Account.
     * 
     */
    private @Nullable String description;
    /**
     * @return The path ID that uniquely identifies the object.
     * 
     */
    private String id;
    /**
     * @return The object name.
     * 
     */
    private String name;
    /**
     * @return Storage Account Credential Id
     * 
     */
    private @Nullable String storageAccountCredentialId;
    /**
     * @return Current status of the storage account
     * 
     */
    private @Nullable String storageAccountStatus;
    /**
     * @return StorageAccount object on ASE device
     * 
     */
    private SystemDataResponse systemData;
    /**
     * @return The hierarchical type of the object.
     * 
     */
    private String type;

    private GetStorageAccountResult() {}
    /**
     * @return BlobEndpoint of Storage Account
     * 
     */
    public String blobEndpoint() {
        return this.blobEndpoint;
    }
    /**
     * @return The Container Count. Present only for Storage Accounts with DataPolicy set to Cloud.
     * 
     */
    public Integer containerCount() {
        return this.containerCount;
    }
    /**
     * @return Data policy of the storage Account.
     * 
     */
    public String dataPolicy() {
        return this.dataPolicy;
    }
    /**
     * @return Description for the storage Account.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return The path ID that uniquely identifies the object.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The object name.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Storage Account Credential Id
     * 
     */
    public Optional<String> storageAccountCredentialId() {
        return Optional.ofNullable(this.storageAccountCredentialId);
    }
    /**
     * @return Current status of the storage account
     * 
     */
    public Optional<String> storageAccountStatus() {
        return Optional.ofNullable(this.storageAccountStatus);
    }
    /**
     * @return StorageAccount object on ASE device
     * 
     */
    public SystemDataResponse systemData() {
        return this.systemData;
    }
    /**
     * @return The hierarchical type of the object.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetStorageAccountResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String blobEndpoint;
        private Integer containerCount;
        private String dataPolicy;
        private @Nullable String description;
        private String id;
        private String name;
        private @Nullable String storageAccountCredentialId;
        private @Nullable String storageAccountStatus;
        private SystemDataResponse systemData;
        private String type;
        public Builder() {}
        public Builder(GetStorageAccountResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.blobEndpoint = defaults.blobEndpoint;
    	      this.containerCount = defaults.containerCount;
    	      this.dataPolicy = defaults.dataPolicy;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.storageAccountCredentialId = defaults.storageAccountCredentialId;
    	      this.storageAccountStatus = defaults.storageAccountStatus;
    	      this.systemData = defaults.systemData;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder blobEndpoint(String blobEndpoint) {
            this.blobEndpoint = Objects.requireNonNull(blobEndpoint);
            return this;
        }
        @CustomType.Setter
        public Builder containerCount(Integer containerCount) {
            this.containerCount = Objects.requireNonNull(containerCount);
            return this;
        }
        @CustomType.Setter
        public Builder dataPolicy(String dataPolicy) {
            this.dataPolicy = Objects.requireNonNull(dataPolicy);
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder storageAccountCredentialId(@Nullable String storageAccountCredentialId) {
            this.storageAccountCredentialId = storageAccountCredentialId;
            return this;
        }
        @CustomType.Setter
        public Builder storageAccountStatus(@Nullable String storageAccountStatus) {
            this.storageAccountStatus = storageAccountStatus;
            return this;
        }
        @CustomType.Setter
        public Builder systemData(SystemDataResponse systemData) {
            this.systemData = Objects.requireNonNull(systemData);
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetStorageAccountResult build() {
            final var o = new GetStorageAccountResult();
            o.blobEndpoint = blobEndpoint;
            o.containerCount = containerCount;
            o.dataPolicy = dataPolicy;
            o.description = description;
            o.id = id;
            o.name = name;
            o.storageAccountCredentialId = storageAccountCredentialId;
            o.storageAccountStatus = storageAccountStatus;
            o.systemData = systemData;
            o.type = type;
            return o;
        }
    }
}
