// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearningservices;

import com.pulumi.azurenative.Utilities;
import com.pulumi.azurenative.machinelearningservices.MachineLearningComputeArgs;
import com.pulumi.azurenative.machinelearningservices.outputs.AKSResponse;
import com.pulumi.azurenative.machinelearningservices.outputs.AmlComputeResponse;
import com.pulumi.azurenative.machinelearningservices.outputs.ComputeInstanceResponse;
import com.pulumi.azurenative.machinelearningservices.outputs.DataFactoryResponse;
import com.pulumi.azurenative.machinelearningservices.outputs.DataLakeAnalyticsResponse;
import com.pulumi.azurenative.machinelearningservices.outputs.DatabricksResponse;
import com.pulumi.azurenative.machinelearningservices.outputs.HDInsightResponse;
import com.pulumi.azurenative.machinelearningservices.outputs.IdentityResponse;
import com.pulumi.azurenative.machinelearningservices.outputs.SkuResponse;
import com.pulumi.azurenative.machinelearningservices.outputs.SystemDataResponse;
import com.pulumi.azurenative.machinelearningservices.outputs.VirtualMachineResponse;
import com.pulumi.core.Alias;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Machine Learning compute object wrapped into ARM resource envelope.
 * API Version: 2021-01-01.
 * 
 * ## Example Usage
 * ### Create AKS Compute
 * 
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var machineLearningCompute = new MachineLearningCompute(&#34;machineLearningCompute&#34;, MachineLearningComputeArgs.builder()        
 *             .computeName(&#34;compute123&#34;)
 *             .location(&#34;eastus&#34;)
 *             .properties(Map.of(&#34;computeType&#34;, &#34;AKS&#34;))
 *             .resourceGroupName(&#34;testrg123&#34;)
 *             .workspaceName(&#34;workspaces123&#34;)
 *             .build());
 * 
 *     }
 * }
 * 
 * ```
 * ### Create a AML Compute
 * 
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var machineLearningCompute = new MachineLearningCompute(&#34;machineLearningCompute&#34;, MachineLearningComputeArgs.builder()        
 *             .computeName(&#34;compute123&#34;)
 *             .location(&#34;eastus&#34;)
 *             .properties(Map.ofEntries(
 *                 Map.entry(&#34;computeType&#34;, &#34;AmlCompute&#34;),
 *                 Map.entry(&#34;properties&#34;, Map.ofEntries(
 *                     Map.entry(&#34;enableNodePublicIp&#34;, true),
 *                     Map.entry(&#34;isolatedNetwork&#34;, false),
 *                     Map.entry(&#34;osType&#34;, &#34;Windows&#34;),
 *                     Map.entry(&#34;remoteLoginPortPublicAccess&#34;, &#34;NotSpecified&#34;),
 *                     Map.entry(&#34;scaleSettings&#34;, Map.ofEntries(
 *                         Map.entry(&#34;maxNodeCount&#34;, 1),
 *                         Map.entry(&#34;minNodeCount&#34;, 0),
 *                         Map.entry(&#34;nodeIdleTimeBeforeScaleDown&#34;, &#34;PT5M&#34;)
 *                     )),
 *                     Map.entry(&#34;virtualMachineImage&#34;, Map.of(&#34;id&#34;, &#34;/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.Compute/galleries/myImageGallery/images/myImageDefinition/versions/0.0.1&#34;)),
 *                     Map.entry(&#34;vmPriority&#34;, &#34;Dedicated&#34;),
 *                     Map.entry(&#34;vmSize&#34;, &#34;STANDARD_NC6&#34;)
 *                 ))
 *             ))
 *             .resourceGroupName(&#34;testrg123&#34;)
 *             .workspaceName(&#34;workspaces123&#34;)
 *             .build());
 * 
 *     }
 * }
 * 
 * ```
 * ### Create a DataFactory Compute
 * 
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var machineLearningCompute = new MachineLearningCompute(&#34;machineLearningCompute&#34;, MachineLearningComputeArgs.builder()        
 *             .computeName(&#34;compute123&#34;)
 *             .location(&#34;eastus&#34;)
 *             .properties(Map.of(&#34;computeType&#34;, &#34;DataFactory&#34;))
 *             .resourceGroupName(&#34;testrg123&#34;)
 *             .workspaceName(&#34;workspaces123&#34;)
 *             .build());
 * 
 *     }
 * }
 * 
 * ```
 * ### Create an ComputeInstance Compute
 * 
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var machineLearningCompute = new MachineLearningCompute(&#34;machineLearningCompute&#34;, MachineLearningComputeArgs.builder()        
 *             .computeName(&#34;compute123&#34;)
 *             .location(&#34;eastus&#34;)
 *             .properties(Map.ofEntries(
 *                 Map.entry(&#34;computeType&#34;, &#34;ComputeInstance&#34;),
 *                 Map.entry(&#34;properties&#34;, Map.ofEntries(
 *                     Map.entry(&#34;applicationSharingPolicy&#34;, &#34;Personal&#34;),
 *                     Map.entry(&#34;computeInstanceAuthorizationType&#34;, &#34;personal&#34;),
 *                     Map.entry(&#34;personalComputeInstanceSettings&#34;, Map.of(&#34;assignedUser&#34;, Map.ofEntries(
 *                         Map.entry(&#34;objectId&#34;, &#34;00000000-0000-0000-0000-000000000000&#34;),
 *                         Map.entry(&#34;tenantId&#34;, &#34;00000000-0000-0000-0000-000000000000&#34;)
 *                     ))),
 *                     Map.entry(&#34;sshSettings&#34;, Map.of(&#34;sshPublicAccess&#34;, &#34;Disabled&#34;)),
 *                     Map.entry(&#34;subnet&#34;, &#34;test-subnet-resource-id&#34;),
 *                     Map.entry(&#34;vmSize&#34;, &#34;STANDARD_NC6&#34;)
 *                 ))
 *             ))
 *             .resourceGroupName(&#34;testrg123&#34;)
 *             .workspaceName(&#34;workspaces123&#34;)
 *             .build());
 * 
 *     }
 * }
 * 
 * ```
 * ### Create an ComputeInstance Compute with minimal inputs
 * 
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var machineLearningCompute = new MachineLearningCompute(&#34;machineLearningCompute&#34;, MachineLearningComputeArgs.builder()        
 *             .computeName(&#34;compute123&#34;)
 *             .location(&#34;eastus&#34;)
 *             .properties(Map.ofEntries(
 *                 Map.entry(&#34;computeType&#34;, &#34;ComputeInstance&#34;),
 *                 Map.entry(&#34;properties&#34;, Map.of(&#34;vmSize&#34;, &#34;STANDARD_NC6&#34;))
 *             ))
 *             .resourceGroupName(&#34;testrg123&#34;)
 *             .workspaceName(&#34;workspaces123&#34;)
 *             .build());
 * 
 *     }
 * }
 * 
 * ```
 * ### Update a AKS Compute
 * 
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var machineLearningCompute = new MachineLearningCompute(&#34;machineLearningCompute&#34;, MachineLearningComputeArgs.builder()        
 *             .computeName(&#34;compute123&#34;)
 *             .location(&#34;eastus&#34;)
 *             .properties(Map.ofEntries(
 *                 Map.entry(&#34;computeType&#34;, &#34;AKS&#34;),
 *                 Map.entry(&#34;description&#34;, &#34;some compute&#34;),
 *                 Map.entry(&#34;properties&#34;, Map.of(&#34;agentCount&#34;, 4)),
 *                 Map.entry(&#34;resourceId&#34;, &#34;/subscriptions/34adfa4f-cedf-4dc0-ba29-b6d1a69ab345/resourcegroups/testrg123/providers/Microsoft.ContainerService/managedClusters/compute123-56826-c9b00420020b2&#34;)
 *             ))
 *             .resourceGroupName(&#34;testrg123&#34;)
 *             .workspaceName(&#34;workspaces123&#34;)
 *             .build());
 * 
 *     }
 * }
 * 
 * ```
 * ### Update a AML Compute
 * 
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var machineLearningCompute = new MachineLearningCompute(&#34;machineLearningCompute&#34;, MachineLearningComputeArgs.builder()        
 *             .computeName(&#34;compute123&#34;)
 *             .location(&#34;eastus&#34;)
 *             .properties(Map.ofEntries(
 *                 Map.entry(&#34;computeType&#34;, &#34;AmlCompute&#34;),
 *                 Map.entry(&#34;description&#34;, &#34;some compute&#34;),
 *                 Map.entry(&#34;properties&#34;, Map.of(&#34;scaleSettings&#34;, Map.ofEntries(
 *                     Map.entry(&#34;maxNodeCount&#34;, 4),
 *                     Map.entry(&#34;minNodeCount&#34;, 4),
 *                     Map.entry(&#34;nodeIdleTimeBeforeScaleDown&#34;, &#34;PT5M&#34;)
 *                 )))
 *             ))
 *             .resourceGroupName(&#34;testrg123&#34;)
 *             .workspaceName(&#34;workspaces123&#34;)
 *             .build());
 * 
 *     }
 * }
 * 
 * ```
 * 
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:machinelearningservices:MachineLearningCompute compute123 /subscriptions/34adfa4f-cedf-4dc0-ba29-b6d1a69ab345/resourceGroups/testrg123/providers/Microsoft.MachineLearningServices/workspaces/workspaces123/computes/compute123 
 * ```
 * 
 */
@ResourceType(type="azure-native:machinelearningservices:MachineLearningCompute")
public class MachineLearningCompute extends com.pulumi.resources.CustomResource {
    /**
     * The identity of the resource.
     * 
     */
    @Export(name="identity", type=IdentityResponse.class, parameters={})
    private Output</* @Nullable */ IdentityResponse> identity;

    /**
     * @return The identity of the resource.
     * 
     */
    public Output<Optional<IdentityResponse>> identity() {
        return Codegen.optional(this.identity);
    }
    /**
     * Specifies the location of the resource.
     * 
     */
    @Export(name="location", type=String.class, parameters={})
    private Output</* @Nullable */ String> location;

    /**
     * @return Specifies the location of the resource.
     * 
     */
    public Output<Optional<String>> location() {
        return Codegen.optional(this.location);
    }
    /**
     * Specifies the name of the resource.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Specifies the name of the resource.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Compute properties
     * 
     */
    @Export(name="properties", type=Object.class, parameters={})
    private Output<Object> properties;

    /**
     * @return Compute properties
     * 
     */
    public Output<Object> properties() {
        return this.properties;
    }
    /**
     * The sku of the workspace.
     * 
     */
    @Export(name="sku", type=SkuResponse.class, parameters={})
    private Output</* @Nullable */ SkuResponse> sku;

    /**
     * @return The sku of the workspace.
     * 
     */
    public Output<Optional<SkuResponse>> sku() {
        return Codegen.optional(this.sku);
    }
    /**
     * Read only system data
     * 
     */
    @Export(name="systemData", type=SystemDataResponse.class, parameters={})
    private Output<SystemDataResponse> systemData;

    /**
     * @return Read only system data
     * 
     */
    public Output<SystemDataResponse> systemData() {
        return this.systemData;
    }
    /**
     * Contains resource tags defined as key/value pairs.
     * 
     */
    @Export(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return Contains resource tags defined as key/value pairs.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * Specifies the type of the resource.
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return Specifies the type of the resource.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public MachineLearningCompute(String name) {
        this(name, MachineLearningComputeArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public MachineLearningCompute(String name, MachineLearningComputeArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public MachineLearningCompute(String name, MachineLearningComputeArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:machinelearningservices:MachineLearningCompute", name, args == null ? MachineLearningComputeArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private MachineLearningCompute(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:machinelearningservices:MachineLearningCompute", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("azure-native:machinelearningservices/v20180301preview:MachineLearningCompute").build()),
                Output.of(Alias.builder().type("azure-native:machinelearningservices/v20181119:MachineLearningCompute").build()),
                Output.of(Alias.builder().type("azure-native:machinelearningservices/v20190501:MachineLearningCompute").build()),
                Output.of(Alias.builder().type("azure-native:machinelearningservices/v20190601:MachineLearningCompute").build()),
                Output.of(Alias.builder().type("azure-native:machinelearningservices/v20191101:MachineLearningCompute").build()),
                Output.of(Alias.builder().type("azure-native:machinelearningservices/v20200101:MachineLearningCompute").build()),
                Output.of(Alias.builder().type("azure-native:machinelearningservices/v20200218preview:MachineLearningCompute").build()),
                Output.of(Alias.builder().type("azure-native:machinelearningservices/v20200301:MachineLearningCompute").build()),
                Output.of(Alias.builder().type("azure-native:machinelearningservices/v20200401:MachineLearningCompute").build()),
                Output.of(Alias.builder().type("azure-native:machinelearningservices/v20200501preview:MachineLearningCompute").build()),
                Output.of(Alias.builder().type("azure-native:machinelearningservices/v20200515preview:MachineLearningCompute").build()),
                Output.of(Alias.builder().type("azure-native:machinelearningservices/v20200601:MachineLearningCompute").build()),
                Output.of(Alias.builder().type("azure-native:machinelearningservices/v20200801:MachineLearningCompute").build()),
                Output.of(Alias.builder().type("azure-native:machinelearningservices/v20200901preview:MachineLearningCompute").build()),
                Output.of(Alias.builder().type("azure-native:machinelearningservices/v20210101:MachineLearningCompute").build()),
                Output.of(Alias.builder().type("azure-native:machinelearningservices/v20210301preview:MachineLearningCompute").build()),
                Output.of(Alias.builder().type("azure-native:machinelearningservices/v20210401:MachineLearningCompute").build()),
                Output.of(Alias.builder().type("azure-native:machinelearningservices/v20210701:MachineLearningCompute").build()),
                Output.of(Alias.builder().type("azure-native:machinelearningservices/v20220101preview:MachineLearningCompute").build()),
                Output.of(Alias.builder().type("azure-native:machinelearningservices/v20220201preview:MachineLearningCompute").build()),
                Output.of(Alias.builder().type("azure-native:machinelearningservices/v20220501:MachineLearningCompute").build())
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static MachineLearningCompute get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new MachineLearningCompute(name, id, options);
    }
}
