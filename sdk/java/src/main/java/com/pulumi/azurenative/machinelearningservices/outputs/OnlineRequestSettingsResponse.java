// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearningservices.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class OnlineRequestSettingsResponse {
    /**
     * @return The number of requests allowed to queue at once for this deployment.
     * 
     */
    private @Nullable Integer maxConcurrentRequestsPerInstance;
    /**
     * @return The maximum queue wait time in ISO 8601 format. Supports millisecond precision.
     * 
     */
    private @Nullable String maxQueueWait;
    /**
     * @return The request timeout in ISO 8601 format. Supports millisecond precision.
     * 
     */
    private @Nullable String requestTimeout;

    private OnlineRequestSettingsResponse() {}
    /**
     * @return The number of requests allowed to queue at once for this deployment.
     * 
     */
    public Optional<Integer> maxConcurrentRequestsPerInstance() {
        return Optional.ofNullable(this.maxConcurrentRequestsPerInstance);
    }
    /**
     * @return The maximum queue wait time in ISO 8601 format. Supports millisecond precision.
     * 
     */
    public Optional<String> maxQueueWait() {
        return Optional.ofNullable(this.maxQueueWait);
    }
    /**
     * @return The request timeout in ISO 8601 format. Supports millisecond precision.
     * 
     */
    public Optional<String> requestTimeout() {
        return Optional.ofNullable(this.requestTimeout);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OnlineRequestSettingsResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer maxConcurrentRequestsPerInstance;
        private @Nullable String maxQueueWait;
        private @Nullable String requestTimeout;
        public Builder() {}
        public Builder(OnlineRequestSettingsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.maxConcurrentRequestsPerInstance = defaults.maxConcurrentRequestsPerInstance;
    	      this.maxQueueWait = defaults.maxQueueWait;
    	      this.requestTimeout = defaults.requestTimeout;
        }

        @CustomType.Setter
        public Builder maxConcurrentRequestsPerInstance(@Nullable Integer maxConcurrentRequestsPerInstance) {
            this.maxConcurrentRequestsPerInstance = maxConcurrentRequestsPerInstance;
            return this;
        }
        @CustomType.Setter
        public Builder maxQueueWait(@Nullable String maxQueueWait) {
            this.maxQueueWait = maxQueueWait;
            return this;
        }
        @CustomType.Setter
        public Builder requestTimeout(@Nullable String requestTimeout) {
            this.requestTimeout = requestTimeout;
            return this;
        }
        public OnlineRequestSettingsResponse build() {
            final var o = new OnlineRequestSettingsResponse();
            o.maxConcurrentRequestsPerInstance = maxConcurrentRequestsPerInstance;
            o.maxQueueWait = maxQueueWait;
            o.requestTimeout = requestTimeout;
            return o;
        }
    }
}
