// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.databox.outputs;

import com.pulumi.azurenative.databox.outputs.AzureFileFilterDetailsResponse;
import com.pulumi.azurenative.databox.outputs.BlobFilterDetailsResponse;
import com.pulumi.azurenative.databox.outputs.FilterFileDetailsResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class TransferFilterDetailsResponse {
    /**
     * @return Filter details to transfer Azure files.
     * 
     */
    private @Nullable AzureFileFilterDetailsResponse azureFileFilterDetails;
    /**
     * @return Filter details to transfer blobs.
     * 
     */
    private @Nullable BlobFilterDetailsResponse blobFilterDetails;
    /**
     * @return Type of the account of data.
     * 
     */
    private String dataAccountType;
    /**
     * @return Details of the filter files to be used for data transfer.
     * 
     */
    private @Nullable List<FilterFileDetailsResponse> filterFileDetails;

    private TransferFilterDetailsResponse() {}
    /**
     * @return Filter details to transfer Azure files.
     * 
     */
    public Optional<AzureFileFilterDetailsResponse> azureFileFilterDetails() {
        return Optional.ofNullable(this.azureFileFilterDetails);
    }
    /**
     * @return Filter details to transfer blobs.
     * 
     */
    public Optional<BlobFilterDetailsResponse> blobFilterDetails() {
        return Optional.ofNullable(this.blobFilterDetails);
    }
    /**
     * @return Type of the account of data.
     * 
     */
    public String dataAccountType() {
        return this.dataAccountType;
    }
    /**
     * @return Details of the filter files to be used for data transfer.
     * 
     */
    public List<FilterFileDetailsResponse> filterFileDetails() {
        return this.filterFileDetails == null ? List.of() : this.filterFileDetails;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TransferFilterDetailsResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable AzureFileFilterDetailsResponse azureFileFilterDetails;
        private @Nullable BlobFilterDetailsResponse blobFilterDetails;
        private String dataAccountType;
        private @Nullable List<FilterFileDetailsResponse> filterFileDetails;
        public Builder() {}
        public Builder(TransferFilterDetailsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.azureFileFilterDetails = defaults.azureFileFilterDetails;
    	      this.blobFilterDetails = defaults.blobFilterDetails;
    	      this.dataAccountType = defaults.dataAccountType;
    	      this.filterFileDetails = defaults.filterFileDetails;
        }

        @CustomType.Setter
        public Builder azureFileFilterDetails(@Nullable AzureFileFilterDetailsResponse azureFileFilterDetails) {
            this.azureFileFilterDetails = azureFileFilterDetails;
            return this;
        }
        @CustomType.Setter
        public Builder blobFilterDetails(@Nullable BlobFilterDetailsResponse blobFilterDetails) {
            this.blobFilterDetails = blobFilterDetails;
            return this;
        }
        @CustomType.Setter
        public Builder dataAccountType(String dataAccountType) {
            this.dataAccountType = Objects.requireNonNull(dataAccountType);
            return this;
        }
        @CustomType.Setter
        public Builder filterFileDetails(@Nullable List<FilterFileDetailsResponse> filterFileDetails) {
            this.filterFileDetails = filterFileDetails;
            return this;
        }
        public Builder filterFileDetails(FilterFileDetailsResponse... filterFileDetails) {
            return filterFileDetails(List.of(filterFileDetails));
        }
        public TransferFilterDetailsResponse build() {
            final var o = new TransferFilterDetailsResponse();
            o.azureFileFilterDetails = azureFileFilterDetails;
            o.blobFilterDetails = blobFilterDetails;
            o.dataAccountType = dataAccountType;
            o.filterFileDetails = filterFileDetails;
            return o;
        }
    }
}
