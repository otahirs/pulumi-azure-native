// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.timeseriesinsights.outputs;

import com.pulumi.azurenative.timeseriesinsights.outputs.EnvironmentStatusResponse;
import com.pulumi.azurenative.timeseriesinsights.outputs.Gen2StorageConfigurationOutputResponse;
import com.pulumi.azurenative.timeseriesinsights.outputs.SkuResponse;
import com.pulumi.azurenative.timeseriesinsights.outputs.TimeSeriesIdPropertyResponse;
import com.pulumi.azurenative.timeseriesinsights.outputs.WarmStoreConfigurationPropertiesResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetGen2EnvironmentResult {
    /**
     * @return The time the resource was created.
     * 
     */
    private String creationTime;
    /**
     * @return The fully qualified domain name used to access the environment data, e.g. to query the environment&#39;s events or upload reference data for the environment.
     * 
     */
    private String dataAccessFqdn;
    /**
     * @return An id used to access the environment data, e.g. to query the environment&#39;s events or upload reference data for the environment.
     * 
     */
    private String dataAccessId;
    /**
     * @return Resource Id
     * 
     */
    private String id;
    /**
     * @return The kind of the environment.
     * Expected value is &#39;Gen2&#39;.
     * 
     */
    private String kind;
    /**
     * @return Resource location
     * 
     */
    private String location;
    /**
     * @return Resource name
     * 
     */
    private String name;
    /**
     * @return Provisioning state of the resource.
     * 
     */
    private String provisioningState;
    /**
     * @return The sku determines the type of environment, either Gen1 (S1 or S2) or Gen2 (L1). For Gen1 environments the sku determines the capacity of the environment, the ingress rate, and the billing rate.
     * 
     */
    private SkuResponse sku;
    /**
     * @return An object that represents the status of the environment, and its internal state in the Time Series Insights service.
     * 
     */
    private EnvironmentStatusResponse status;
    /**
     * @return The storage configuration provides the connection details that allows the Time Series Insights service to connect to the customer storage account that is used to store the environment&#39;s data.
     * 
     */
    private Gen2StorageConfigurationOutputResponse storageConfiguration;
    /**
     * @return Resource tags
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return The list of event properties which will be used to define the environment&#39;s time series id.
     * 
     */
    private List<TimeSeriesIdPropertyResponse> timeSeriesIdProperties;
    /**
     * @return Resource type
     * 
     */
    private String type;
    /**
     * @return The warm store configuration provides the details to create a warm store cache that will retain a copy of the environment&#39;s data available for faster query.
     * 
     */
    private @Nullable WarmStoreConfigurationPropertiesResponse warmStoreConfiguration;

    private GetGen2EnvironmentResult() {}
    /**
     * @return The time the resource was created.
     * 
     */
    public String creationTime() {
        return this.creationTime;
    }
    /**
     * @return The fully qualified domain name used to access the environment data, e.g. to query the environment&#39;s events or upload reference data for the environment.
     * 
     */
    public String dataAccessFqdn() {
        return this.dataAccessFqdn;
    }
    /**
     * @return An id used to access the environment data, e.g. to query the environment&#39;s events or upload reference data for the environment.
     * 
     */
    public String dataAccessId() {
        return this.dataAccessId;
    }
    /**
     * @return Resource Id
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The kind of the environment.
     * Expected value is &#39;Gen2&#39;.
     * 
     */
    public String kind() {
        return this.kind;
    }
    /**
     * @return Resource location
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return Resource name
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Provisioning state of the resource.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * @return The sku determines the type of environment, either Gen1 (S1 or S2) or Gen2 (L1). For Gen1 environments the sku determines the capacity of the environment, the ingress rate, and the billing rate.
     * 
     */
    public SkuResponse sku() {
        return this.sku;
    }
    /**
     * @return An object that represents the status of the environment, and its internal state in the Time Series Insights service.
     * 
     */
    public EnvironmentStatusResponse status() {
        return this.status;
    }
    /**
     * @return The storage configuration provides the connection details that allows the Time Series Insights service to connect to the customer storage account that is used to store the environment&#39;s data.
     * 
     */
    public Gen2StorageConfigurationOutputResponse storageConfiguration() {
        return this.storageConfiguration;
    }
    /**
     * @return Resource tags
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return The list of event properties which will be used to define the environment&#39;s time series id.
     * 
     */
    public List<TimeSeriesIdPropertyResponse> timeSeriesIdProperties() {
        return this.timeSeriesIdProperties;
    }
    /**
     * @return Resource type
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return The warm store configuration provides the details to create a warm store cache that will retain a copy of the environment&#39;s data available for faster query.
     * 
     */
    public Optional<WarmStoreConfigurationPropertiesResponse> warmStoreConfiguration() {
        return Optional.ofNullable(this.warmStoreConfiguration);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGen2EnvironmentResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String creationTime;
        private String dataAccessFqdn;
        private String dataAccessId;
        private String id;
        private String kind;
        private String location;
        private String name;
        private String provisioningState;
        private SkuResponse sku;
        private EnvironmentStatusResponse status;
        private Gen2StorageConfigurationOutputResponse storageConfiguration;
        private @Nullable Map<String,String> tags;
        private List<TimeSeriesIdPropertyResponse> timeSeriesIdProperties;
        private String type;
        private @Nullable WarmStoreConfigurationPropertiesResponse warmStoreConfiguration;
        public Builder() {}
        public Builder(GetGen2EnvironmentResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.creationTime = defaults.creationTime;
    	      this.dataAccessFqdn = defaults.dataAccessFqdn;
    	      this.dataAccessId = defaults.dataAccessId;
    	      this.id = defaults.id;
    	      this.kind = defaults.kind;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.provisioningState = defaults.provisioningState;
    	      this.sku = defaults.sku;
    	      this.status = defaults.status;
    	      this.storageConfiguration = defaults.storageConfiguration;
    	      this.tags = defaults.tags;
    	      this.timeSeriesIdProperties = defaults.timeSeriesIdProperties;
    	      this.type = defaults.type;
    	      this.warmStoreConfiguration = defaults.warmStoreConfiguration;
        }

        @CustomType.Setter
        public Builder creationTime(String creationTime) {
            this.creationTime = Objects.requireNonNull(creationTime);
            return this;
        }
        @CustomType.Setter
        public Builder dataAccessFqdn(String dataAccessFqdn) {
            this.dataAccessFqdn = Objects.requireNonNull(dataAccessFqdn);
            return this;
        }
        @CustomType.Setter
        public Builder dataAccessId(String dataAccessId) {
            this.dataAccessId = Objects.requireNonNull(dataAccessId);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder kind(String kind) {
            this.kind = Objects.requireNonNull(kind);
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        @CustomType.Setter
        public Builder sku(SkuResponse sku) {
            this.sku = Objects.requireNonNull(sku);
            return this;
        }
        @CustomType.Setter
        public Builder status(EnvironmentStatusResponse status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        @CustomType.Setter
        public Builder storageConfiguration(Gen2StorageConfigurationOutputResponse storageConfiguration) {
            this.storageConfiguration = Objects.requireNonNull(storageConfiguration);
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder timeSeriesIdProperties(List<TimeSeriesIdPropertyResponse> timeSeriesIdProperties) {
            this.timeSeriesIdProperties = Objects.requireNonNull(timeSeriesIdProperties);
            return this;
        }
        public Builder timeSeriesIdProperties(TimeSeriesIdPropertyResponse... timeSeriesIdProperties) {
            return timeSeriesIdProperties(List.of(timeSeriesIdProperties));
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder warmStoreConfiguration(@Nullable WarmStoreConfigurationPropertiesResponse warmStoreConfiguration) {
            this.warmStoreConfiguration = warmStoreConfiguration;
            return this;
        }
        public GetGen2EnvironmentResult build() {
            final var o = new GetGen2EnvironmentResult();
            o.creationTime = creationTime;
            o.dataAccessFqdn = dataAccessFqdn;
            o.dataAccessId = dataAccessId;
            o.id = id;
            o.kind = kind;
            o.location = location;
            o.name = name;
            o.provisioningState = provisioningState;
            o.sku = sku;
            o.status = status;
            o.storageConfiguration = storageConfiguration;
            o.tags = tags;
            o.timeSeriesIdProperties = timeSeriesIdProperties;
            o.type = type;
            o.warmStoreConfiguration = warmStoreConfiguration;
            return o;
        }
    }
}
