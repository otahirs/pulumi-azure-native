// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.media;

import com.pulumi.azurenative.Utilities;
import com.pulumi.azurenative.media.MediaGraphArgs;
import com.pulumi.azurenative.media.outputs.MediaGraphAssetSinkResponse;
import com.pulumi.azurenative.media.outputs.MediaGraphRtspSourceResponse;
import com.pulumi.core.Alias;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * The Media Graph.
 * API Version: 2020-02-01-preview.
 * 
 * ## Example Usage
 * ### Create or update a Media Graph with a clear RTSP Source
 * 
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var mediaGraph = new MediaGraph(&#34;mediaGraph&#34;, MediaGraphArgs.builder()        
 *             .accountName(&#34;contosomedia&#34;)
 *             .description(&#34;updated description&#34;)
 *             .mediaGraphName(&#34;SampleMediaGraph&#34;)
 *             .resourceGroupName(&#34;contoso&#34;)
 *             .sinks(Map.ofEntries(
 *                 Map.entry(&#34;assetName&#34;, &#34;SampleAsset&#34;),
 *                 Map.entry(&#34;inputs&#34;, &#34;rtspSource&#34;),
 *                 Map.entry(&#34;name&#34;, &#34;AssetSink&#34;),
 *                 Map.entry(&#34;odataType&#34;, &#34;#Microsoft.Media.MediaGraphAssetSink&#34;)
 *             ))
 *             .sources(Map.ofEntries(
 *                 Map.entry(&#34;endpoint&#34;, Map.ofEntries(
 *                     Map.entry(&#34;credentials&#34;, Map.ofEntries(
 *                         Map.entry(&#34;odataType&#34;, &#34;#Microsoft.Media.MediaGraphUsernamePasswordCredentials&#34;),
 *                         Map.entry(&#34;password&#34;, &#34;examplepassword&#34;),
 *                         Map.entry(&#34;username&#34;, &#34;exampleusername&#34;)
 *                     )),
 *                     Map.entry(&#34;odataType&#34;, &#34;#Microsoft.Media.MediaGraphClearEndpoint&#34;),
 *                     Map.entry(&#34;url&#34;, &#34;rtsp://contoso.com:554/stream1&#34;)
 *                 )),
 *                 Map.entry(&#34;name&#34;, &#34;rtspSource&#34;),
 *                 Map.entry(&#34;odataType&#34;, &#34;#Microsoft.Media.MediaGraphRtspSource&#34;),
 *                 Map.entry(&#34;transport&#34;, &#34;Http&#34;)
 *             ))
 *             .build());
 * 
 *     }
 * }
 * 
 * ```
 * ### Create or update a Media Graph with an encrypted RTSP Source
 * 
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var mediaGraph = new MediaGraph(&#34;mediaGraph&#34;, MediaGraphArgs.builder()        
 *             .accountName(&#34;contosomedia&#34;)
 *             .description(&#34;updated description&#34;)
 *             .mediaGraphName(&#34;SampleMediaGraph&#34;)
 *             .resourceGroupName(&#34;contoso&#34;)
 *             .sinks(Map.ofEntries(
 *                 Map.entry(&#34;assetName&#34;, &#34;SampleAsset&#34;),
 *                 Map.entry(&#34;inputs&#34;, &#34;rtspSource&#34;),
 *                 Map.entry(&#34;name&#34;, &#34;AssetSink&#34;),
 *                 Map.entry(&#34;odataType&#34;, &#34;#Microsoft.Media.MediaGraphAssetSink&#34;)
 *             ))
 *             .sources(Map.ofEntries(
 *                 Map.entry(&#34;endpoint&#34;, Map.ofEntries(
 *                     Map.entry(&#34;credentials&#34;, Map.ofEntries(
 *                         Map.entry(&#34;odataType&#34;, &#34;#Microsoft.Media.MediaGraphUsernamePasswordCredentials&#34;),
 *                         Map.entry(&#34;password&#34;, &#34;examplepassword&#34;),
 *                         Map.entry(&#34;username&#34;, &#34;exampleusername&#34;)
 *                     )),
 *                     Map.entry(&#34;odataType&#34;, &#34;#Microsoft.Media.MediaGraphTlsEndpoint&#34;),
 *                     Map.entry(&#34;trustedCertificates&#34;, Map.ofEntries(
 *                         Map.entry(&#34;certificates&#34;, &#34;&#34;&#34;
 * -----BEGIN CERTIFICATE-----
 * MIIDhTCCAm2gAwIBAgIUajvPKmoO+8qaO89/ZGATl7ZYnTswDQYJKoZIhvcNAQEL
 * BQAwUTESMBAGA1UECgwJTWljcm9zb2Z0MRQwEgYDVQQLDAtBenVyZSBNZWRpYTEl
 * MCMGA1UEAwwcKFVudHJ1c3RlZCkgVGVzdCBDZXJ0aWZpY2F0ZTAgFw0yMDAyMDYy
 * MTI5MTlaGA8zMDE5MDYwOTIxMjkxOVowUTESMBAGA1UECgwJTWljcm9zb2Z0MRQw
 * EgYDVQQLDAtBenVyZSBNZWRpYTElMCMGA1UEAwwcKFVudHJ1c3RlZCkgVGVzdCBD
 * ZXJ0aWZpY2F0ZTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAK2lg5ff
 * 7xXPaBZXHl/zrTukdiBtu7BNIOchHba51eloruPRzpvQx7Pedk3CVTut7LYinijf
 * uol0EwkQ2FLt2i2jOqiva9nXR95ujIZHcKsEeMC4RSNSP4++k6SpP8FgyYVdv5ru
 * f8GC+HyYQ4j0TqpR/cJs53l/LGRSldaFZ6fcDde1jeyca4VivAbAH1/WDIOvmjzo
 * 9XIGxZ10VSS5l5+DIgdkJZ+mDMLJIuVZ0YVF16ZGEB3beq1trk5lItvmSjQLTllH
 * qMFm9UGY8jKZSo/BY8ewHEtnGSAFQK0TVuRx1HhUWwu6C9jk+2zmRS2090BNpQWa
 * JMKFJrSPzFDPRX8CAwEAAaNTMFEwHQYDVR0OBBYEFIumbhu0lYk0EFDThEg0yyIn
 * /wZZMB8GA1UdIwQYMBaAFIumbhu0lYk0EFDThEg0yyIn/wZZMA8GA1UdEwEB/wQF
 * MAMBAf8wDQYJKoZIhvcNAQELBQADggEBADUNw+/NGNVtigq9tMJKqlk39MTpDn1s
 * Z1BVIAuAWSQjlevYZJeDIPUiWNWFhRe+xN7oOLnn2+NIXEKKeMSyuPoZYbN0mBkB
 * 99oS3XVipSANpmDvIepNdCrOnjfqDFIifRF1Dqjtb6i1hb6v/qYKVPLQvcrgGur7
 * PKKkAu9p4YRZ3RBdwwaUuMgojrj/l6DGbeJY6IRVnVMY39rryMnZjA5xUlhCu55n
 * oB3t/jsJLwnQN+JbAjLAeuqgOWtgARsEFzvpt+VvDsaj0YLOJPhyJwTvHgaa/slB
 * nECzd3TuyFKYeGssSni/QQ1e7yZcLapQqz66g5otdriw0IRdOfDxm5M=
 * -----END CERTIFICATE-----                        &#34;&#34;&#34;),
 *                         Map.entry(&#34;odataType&#34;, &#34;#Microsoft.Media.MediaGraphPemCertificateList&#34;)
 *                     )),
 *                     Map.entry(&#34;url&#34;, &#34;rtsps://contoso.com:443/stream1&#34;),
 *                     Map.entry(&#34;validationOptions&#34;, Map.ofEntries(
 *                         Map.entry(&#34;ignoreHostname&#34;, true),
 *                         Map.entry(&#34;ignoreSignature&#34;, false)
 *                     ))
 *                 )),
 *                 Map.entry(&#34;name&#34;, &#34;rtspSource&#34;),
 *                 Map.entry(&#34;odataType&#34;, &#34;#Microsoft.Media.MediaGraphRtspSource&#34;),
 *                 Map.entry(&#34;transport&#34;, &#34;Http&#34;)
 *             ))
 *             .build());
 * 
 *     }
 * }
 * 
 * ```
 * 
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:media:MediaGraph SampleMediaGraph /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/mediaGraphs/{mediaGraphName} 
 * ```
 * 
 */
@ResourceType(type="azure-native:media:MediaGraph")
public class MediaGraph extends com.pulumi.resources.CustomResource {
    /**
     * Date the Media Graph was created.
     * 
     */
    @Export(name="created", type=String.class, parameters={})
    private Output<String> created;

    /**
     * @return Date the Media Graph was created.
     * 
     */
    public Output<String> created() {
        return this.created;
    }
    /**
     * Media Graph description.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return Media Graph description.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Date the Media Graph was last modified.
     * 
     */
    @Export(name="lastModified", type=String.class, parameters={})
    private Output<String> lastModified;

    /**
     * @return Date the Media Graph was last modified.
     * 
     */
    public Output<String> lastModified() {
        return this.lastModified;
    }
    /**
     * The name of the resource.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the resource.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Media Graph sinks.
     * 
     */
    @Export(name="sinks", type=List.class, parameters={MediaGraphAssetSinkResponse.class})
    private Output<List<MediaGraphAssetSinkResponse>> sinks;

    /**
     * @return Media Graph sinks.
     * 
     */
    public Output<List<MediaGraphAssetSinkResponse>> sinks() {
        return this.sinks;
    }
    /**
     * Media Graph sources.
     * 
     */
    @Export(name="sources", type=List.class, parameters={MediaGraphRtspSourceResponse.class})
    private Output<List<MediaGraphRtspSourceResponse>> sources;

    /**
     * @return Media Graph sources.
     * 
     */
    public Output<List<MediaGraphRtspSourceResponse>> sources() {
        return this.sources;
    }
    /**
     * Media Graph state which indicates the resource allocation status for running the media graph pipeline.
     * 
     */
    @Export(name="state", type=String.class, parameters={})
    private Output<String> state;

    /**
     * @return Media Graph state which indicates the resource allocation status for running the media graph pipeline.
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * The type of the resource.
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return The type of the resource.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public MediaGraph(String name) {
        this(name, MediaGraphArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public MediaGraph(String name, MediaGraphArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public MediaGraph(String name, MediaGraphArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:media:MediaGraph", name, args == null ? MediaGraphArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private MediaGraph(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:media:MediaGraph", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("azure-native:media/v20190901preview:MediaGraph").build()),
                Output.of(Alias.builder().type("azure-native:media/v20200201preview:MediaGraph").build())
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static MediaGraph get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new MediaGraph(name, id, options);
    }
}
