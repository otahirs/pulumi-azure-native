// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearningcompute.outputs;

import com.pulumi.azurenative.machinelearningcompute.outputs.AppInsightsCredentialsResponse;
import com.pulumi.azurenative.machinelearningcompute.outputs.ContainerRegistryCredentialsResponse;
import com.pulumi.azurenative.machinelearningcompute.outputs.ContainerServiceCredentialsResponse;
import com.pulumi.azurenative.machinelearningcompute.outputs.ServiceAuthConfigurationResponse;
import com.pulumi.azurenative.machinelearningcompute.outputs.SslConfigurationResponse;
import com.pulumi.azurenative.machinelearningcompute.outputs.StorageAccountCredentialsResponse;
import com.pulumi.core.annotations.CustomType;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ListOperationalizationClusterKeysResult {
    /**
     * @return Credentials for Azure AppInsights.
     * 
     */
    private @Nullable AppInsightsCredentialsResponse appInsights;
    /**
     * @return Credentials for Azure Container Registry.
     * 
     */
    private @Nullable ContainerRegistryCredentialsResponse containerRegistry;
    /**
     * @return Credentials for Azure Container Service.
     * 
     */
    private @Nullable ContainerServiceCredentialsResponse containerService;
    /**
     * @return Global authorization keys for all user services deployed in cluster. These are used if the service does not have auth keys.
     * 
     */
    private @Nullable ServiceAuthConfigurationResponse serviceAuthConfiguration;
    /**
     * @return The SSL configuration for the services.
     * 
     */
    private @Nullable SslConfigurationResponse sslConfiguration;
    /**
     * @return Credentials for the Storage Account.
     * 
     */
    private @Nullable StorageAccountCredentialsResponse storageAccount;

    private ListOperationalizationClusterKeysResult() {}
    /**
     * @return Credentials for Azure AppInsights.
     * 
     */
    public Optional<AppInsightsCredentialsResponse> appInsights() {
        return Optional.ofNullable(this.appInsights);
    }
    /**
     * @return Credentials for Azure Container Registry.
     * 
     */
    public Optional<ContainerRegistryCredentialsResponse> containerRegistry() {
        return Optional.ofNullable(this.containerRegistry);
    }
    /**
     * @return Credentials for Azure Container Service.
     * 
     */
    public Optional<ContainerServiceCredentialsResponse> containerService() {
        return Optional.ofNullable(this.containerService);
    }
    /**
     * @return Global authorization keys for all user services deployed in cluster. These are used if the service does not have auth keys.
     * 
     */
    public Optional<ServiceAuthConfigurationResponse> serviceAuthConfiguration() {
        return Optional.ofNullable(this.serviceAuthConfiguration);
    }
    /**
     * @return The SSL configuration for the services.
     * 
     */
    public Optional<SslConfigurationResponse> sslConfiguration() {
        return Optional.ofNullable(this.sslConfiguration);
    }
    /**
     * @return Credentials for the Storage Account.
     * 
     */
    public Optional<StorageAccountCredentialsResponse> storageAccount() {
        return Optional.ofNullable(this.storageAccount);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ListOperationalizationClusterKeysResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable AppInsightsCredentialsResponse appInsights;
        private @Nullable ContainerRegistryCredentialsResponse containerRegistry;
        private @Nullable ContainerServiceCredentialsResponse containerService;
        private @Nullable ServiceAuthConfigurationResponse serviceAuthConfiguration;
        private @Nullable SslConfigurationResponse sslConfiguration;
        private @Nullable StorageAccountCredentialsResponse storageAccount;
        public Builder() {}
        public Builder(ListOperationalizationClusterKeysResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.appInsights = defaults.appInsights;
    	      this.containerRegistry = defaults.containerRegistry;
    	      this.containerService = defaults.containerService;
    	      this.serviceAuthConfiguration = defaults.serviceAuthConfiguration;
    	      this.sslConfiguration = defaults.sslConfiguration;
    	      this.storageAccount = defaults.storageAccount;
        }

        @CustomType.Setter
        public Builder appInsights(@Nullable AppInsightsCredentialsResponse appInsights) {
            this.appInsights = appInsights;
            return this;
        }
        @CustomType.Setter
        public Builder containerRegistry(@Nullable ContainerRegistryCredentialsResponse containerRegistry) {
            this.containerRegistry = containerRegistry;
            return this;
        }
        @CustomType.Setter
        public Builder containerService(@Nullable ContainerServiceCredentialsResponse containerService) {
            this.containerService = containerService;
            return this;
        }
        @CustomType.Setter
        public Builder serviceAuthConfiguration(@Nullable ServiceAuthConfigurationResponse serviceAuthConfiguration) {
            this.serviceAuthConfiguration = serviceAuthConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder sslConfiguration(@Nullable SslConfigurationResponse sslConfiguration) {
            this.sslConfiguration = sslConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder storageAccount(@Nullable StorageAccountCredentialsResponse storageAccount) {
            this.storageAccount = storageAccount;
            return this;
        }
        public ListOperationalizationClusterKeysResult build() {
            final var o = new ListOperationalizationClusterKeysResult();
            o.appInsights = appInsights;
            o.containerRegistry = containerRegistry;
            o.containerService = containerService;
            o.serviceAuthConfiguration = serviceAuthConfiguration;
            o.sslConfiguration = sslConfiguration;
            o.storageAccount = storageAccount;
            return o;
        }
    }
}
