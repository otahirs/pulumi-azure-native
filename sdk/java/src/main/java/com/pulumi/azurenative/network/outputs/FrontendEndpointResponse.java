// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.outputs;

import com.pulumi.azurenative.network.outputs.CustomHttpsConfigurationResponse;
import com.pulumi.azurenative.network.outputs.FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLink;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class FrontendEndpointResponse {
    /**
     * @return The configuration specifying how to enable HTTPS
     * 
     */
    private CustomHttpsConfigurationResponse customHttpsConfiguration;
    /**
     * @return Provisioning status of Custom Https of the frontendEndpoint.
     * 
     */
    private String customHttpsProvisioningState;
    /**
     * @return Provisioning substate shows the progress of custom HTTPS enabling/disabling process step by step.
     * 
     */
    private String customHttpsProvisioningSubstate;
    /**
     * @return The host name of the frontendEndpoint. Must be a domain name.
     * 
     */
    private @Nullable String hostName;
    /**
     * @return Resource ID.
     * 
     */
    private @Nullable String id;
    /**
     * @return Resource name.
     * 
     */
    private @Nullable String name;
    /**
     * @return Resource status.
     * 
     */
    private String resourceState;
    /**
     * @return Whether to allow session affinity on this host. Valid options are &#39;Enabled&#39; or &#39;Disabled&#39;
     * 
     */
    private @Nullable String sessionAffinityEnabledState;
    /**
     * @return UNUSED. This field will be ignored. The TTL to use in seconds for session affinity, if applicable.
     * 
     */
    private @Nullable Integer sessionAffinityTtlSeconds;
    /**
     * @return Resource type.
     * 
     */
    private String type;
    /**
     * @return Defines the Web Application Firewall policy for each host (if applicable)
     * 
     */
    private @Nullable FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLink webApplicationFirewallPolicyLink;

    private FrontendEndpointResponse() {}
    /**
     * @return The configuration specifying how to enable HTTPS
     * 
     */
    public CustomHttpsConfigurationResponse customHttpsConfiguration() {
        return this.customHttpsConfiguration;
    }
    /**
     * @return Provisioning status of Custom Https of the frontendEndpoint.
     * 
     */
    public String customHttpsProvisioningState() {
        return this.customHttpsProvisioningState;
    }
    /**
     * @return Provisioning substate shows the progress of custom HTTPS enabling/disabling process step by step.
     * 
     */
    public String customHttpsProvisioningSubstate() {
        return this.customHttpsProvisioningSubstate;
    }
    /**
     * @return The host name of the frontendEndpoint. Must be a domain name.
     * 
     */
    public Optional<String> hostName() {
        return Optional.ofNullable(this.hostName);
    }
    /**
     * @return Resource ID.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Resource name.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return Resource status.
     * 
     */
    public String resourceState() {
        return this.resourceState;
    }
    /**
     * @return Whether to allow session affinity on this host. Valid options are &#39;Enabled&#39; or &#39;Disabled&#39;
     * 
     */
    public Optional<String> sessionAffinityEnabledState() {
        return Optional.ofNullable(this.sessionAffinityEnabledState);
    }
    /**
     * @return UNUSED. This field will be ignored. The TTL to use in seconds for session affinity, if applicable.
     * 
     */
    public Optional<Integer> sessionAffinityTtlSeconds() {
        return Optional.ofNullable(this.sessionAffinityTtlSeconds);
    }
    /**
     * @return Resource type.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return Defines the Web Application Firewall policy for each host (if applicable)
     * 
     */
    public Optional<FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLink> webApplicationFirewallPolicyLink() {
        return Optional.ofNullable(this.webApplicationFirewallPolicyLink);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FrontendEndpointResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private CustomHttpsConfigurationResponse customHttpsConfiguration;
        private String customHttpsProvisioningState;
        private String customHttpsProvisioningSubstate;
        private @Nullable String hostName;
        private @Nullable String id;
        private @Nullable String name;
        private String resourceState;
        private @Nullable String sessionAffinityEnabledState;
        private @Nullable Integer sessionAffinityTtlSeconds;
        private String type;
        private @Nullable FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLink webApplicationFirewallPolicyLink;
        public Builder() {}
        public Builder(FrontendEndpointResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.customHttpsConfiguration = defaults.customHttpsConfiguration;
    	      this.customHttpsProvisioningState = defaults.customHttpsProvisioningState;
    	      this.customHttpsProvisioningSubstate = defaults.customHttpsProvisioningSubstate;
    	      this.hostName = defaults.hostName;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.resourceState = defaults.resourceState;
    	      this.sessionAffinityEnabledState = defaults.sessionAffinityEnabledState;
    	      this.sessionAffinityTtlSeconds = defaults.sessionAffinityTtlSeconds;
    	      this.type = defaults.type;
    	      this.webApplicationFirewallPolicyLink = defaults.webApplicationFirewallPolicyLink;
        }

        @CustomType.Setter
        public Builder customHttpsConfiguration(CustomHttpsConfigurationResponse customHttpsConfiguration) {
            this.customHttpsConfiguration = Objects.requireNonNull(customHttpsConfiguration);
            return this;
        }
        @CustomType.Setter
        public Builder customHttpsProvisioningState(String customHttpsProvisioningState) {
            this.customHttpsProvisioningState = Objects.requireNonNull(customHttpsProvisioningState);
            return this;
        }
        @CustomType.Setter
        public Builder customHttpsProvisioningSubstate(String customHttpsProvisioningSubstate) {
            this.customHttpsProvisioningSubstate = Objects.requireNonNull(customHttpsProvisioningSubstate);
            return this;
        }
        @CustomType.Setter
        public Builder hostName(@Nullable String hostName) {
            this.hostName = hostName;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder resourceState(String resourceState) {
            this.resourceState = Objects.requireNonNull(resourceState);
            return this;
        }
        @CustomType.Setter
        public Builder sessionAffinityEnabledState(@Nullable String sessionAffinityEnabledState) {
            this.sessionAffinityEnabledState = sessionAffinityEnabledState;
            return this;
        }
        @CustomType.Setter
        public Builder sessionAffinityTtlSeconds(@Nullable Integer sessionAffinityTtlSeconds) {
            this.sessionAffinityTtlSeconds = sessionAffinityTtlSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder webApplicationFirewallPolicyLink(@Nullable FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLink webApplicationFirewallPolicyLink) {
            this.webApplicationFirewallPolicyLink = webApplicationFirewallPolicyLink;
            return this;
        }
        public FrontendEndpointResponse build() {
            final var o = new FrontendEndpointResponse();
            o.customHttpsConfiguration = customHttpsConfiguration;
            o.customHttpsProvisioningState = customHttpsProvisioningState;
            o.customHttpsProvisioningSubstate = customHttpsProvisioningSubstate;
            o.hostName = hostName;
            o.id = id;
            o.name = name;
            o.resourceState = resourceState;
            o.sessionAffinityEnabledState = sessionAffinityEnabledState;
            o.sessionAffinityTtlSeconds = sessionAffinityTtlSeconds;
            o.type = type;
            o.webApplicationFirewallPolicyLink = webApplicationFirewallPolicyLink;
            return o;
        }
    }
}
