// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.eventgrid.outputs;

import com.pulumi.azurenative.eventgrid.outputs.SystemDataResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetPartnerRegistrationResult {
    /**
     * @return List of Azure subscription Ids that are authorized to create a partner namespace
     * associated with this partner registration. This is an optional property. Creating
     * partner namespaces is always permitted under the same Azure subscription as the one used
     * for creating the partner registration.
     * 
     */
    private @Nullable List<String> authorizedAzureSubscriptionIds;
    /**
     * @return The extension of the customer service URI of the publisher.
     * 
     */
    private @Nullable String customerServiceUri;
    /**
     * @return Fully qualified identifier of the resource.
     * 
     */
    private String id;
    /**
     * @return Location of the resource.
     * 
     */
    private String location;
    /**
     * @return URI of the logo.
     * 
     */
    private @Nullable String logoUri;
    /**
     * @return Long description for the custom scenarios and integration to be displayed in the portal if needed.
     * Length of this description should not exceed 2048 characters.
     * 
     */
    private @Nullable String longDescription;
    /**
     * @return Name of the resource.
     * 
     */
    private String name;
    /**
     * @return The extension of the customer service number of the publisher. Only digits are allowed and number of digits should not exceed 10.
     * 
     */
    private @Nullable String partnerCustomerServiceExtension;
    /**
     * @return The customer service number of the publisher. The expected phone format should start with a &#39;+&#39; sign
     * followed by the country code. The remaining digits are then followed. Only digits and spaces are allowed and its
     * length cannot exceed 16 digits including country code. Examples of valid phone numbers are: +1 515 123 4567 and
     * +966 7 5115 2471. Examples of invalid phone numbers are: +1 (515) 123-4567, 1 515 123 4567 and +966 121 5115 24 7 551 1234 43
     * 
     */
    private @Nullable String partnerCustomerServiceNumber;
    /**
     * @return Official name of the partner name. For example: &#34;Contoso&#34;.
     * 
     */
    private @Nullable String partnerName;
    /**
     * @return Short description of the partner resource type. The length of this description should not exceed 256 characters.
     * 
     */
    private @Nullable String partnerResourceTypeDescription;
    /**
     * @return Display name of the partner resource type.
     * 
     */
    private @Nullable String partnerResourceTypeDisplayName;
    /**
     * @return Name of the partner resource type.
     * 
     */
    private @Nullable String partnerResourceTypeName;
    /**
     * @return Provisioning state of the partner registration.
     * 
     */
    private String provisioningState;
    /**
     * @return URI of the partner website that can be used by Azure customers to setup Event Grid
     * integration on an event source.
     * 
     */
    private @Nullable String setupUri;
    /**
     * @return The system metadata relating to Partner Registration resource.
     * 
     */
    private SystemDataResponse systemData;
    /**
     * @return Tags of the resource.
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return Type of the resource.
     * 
     */
    private String type;
    /**
     * @return Visibility state of the partner registration.
     * 
     */
    private @Nullable String visibilityState;

    private GetPartnerRegistrationResult() {}
    /**
     * @return List of Azure subscription Ids that are authorized to create a partner namespace
     * associated with this partner registration. This is an optional property. Creating
     * partner namespaces is always permitted under the same Azure subscription as the one used
     * for creating the partner registration.
     * 
     */
    public List<String> authorizedAzureSubscriptionIds() {
        return this.authorizedAzureSubscriptionIds == null ? List.of() : this.authorizedAzureSubscriptionIds;
    }
    /**
     * @return The extension of the customer service URI of the publisher.
     * 
     */
    public Optional<String> customerServiceUri() {
        return Optional.ofNullable(this.customerServiceUri);
    }
    /**
     * @return Fully qualified identifier of the resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Location of the resource.
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return URI of the logo.
     * 
     */
    public Optional<String> logoUri() {
        return Optional.ofNullable(this.logoUri);
    }
    /**
     * @return Long description for the custom scenarios and integration to be displayed in the portal if needed.
     * Length of this description should not exceed 2048 characters.
     * 
     */
    public Optional<String> longDescription() {
        return Optional.ofNullable(this.longDescription);
    }
    /**
     * @return Name of the resource.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The extension of the customer service number of the publisher. Only digits are allowed and number of digits should not exceed 10.
     * 
     */
    public Optional<String> partnerCustomerServiceExtension() {
        return Optional.ofNullable(this.partnerCustomerServiceExtension);
    }
    /**
     * @return The customer service number of the publisher. The expected phone format should start with a &#39;+&#39; sign
     * followed by the country code. The remaining digits are then followed. Only digits and spaces are allowed and its
     * length cannot exceed 16 digits including country code. Examples of valid phone numbers are: +1 515 123 4567 and
     * +966 7 5115 2471. Examples of invalid phone numbers are: +1 (515) 123-4567, 1 515 123 4567 and +966 121 5115 24 7 551 1234 43
     * 
     */
    public Optional<String> partnerCustomerServiceNumber() {
        return Optional.ofNullable(this.partnerCustomerServiceNumber);
    }
    /**
     * @return Official name of the partner name. For example: &#34;Contoso&#34;.
     * 
     */
    public Optional<String> partnerName() {
        return Optional.ofNullable(this.partnerName);
    }
    /**
     * @return Short description of the partner resource type. The length of this description should not exceed 256 characters.
     * 
     */
    public Optional<String> partnerResourceTypeDescription() {
        return Optional.ofNullable(this.partnerResourceTypeDescription);
    }
    /**
     * @return Display name of the partner resource type.
     * 
     */
    public Optional<String> partnerResourceTypeDisplayName() {
        return Optional.ofNullable(this.partnerResourceTypeDisplayName);
    }
    /**
     * @return Name of the partner resource type.
     * 
     */
    public Optional<String> partnerResourceTypeName() {
        return Optional.ofNullable(this.partnerResourceTypeName);
    }
    /**
     * @return Provisioning state of the partner registration.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * @return URI of the partner website that can be used by Azure customers to setup Event Grid
     * integration on an event source.
     * 
     */
    public Optional<String> setupUri() {
        return Optional.ofNullable(this.setupUri);
    }
    /**
     * @return The system metadata relating to Partner Registration resource.
     * 
     */
    public SystemDataResponse systemData() {
        return this.systemData;
    }
    /**
     * @return Tags of the resource.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return Type of the resource.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return Visibility state of the partner registration.
     * 
     */
    public Optional<String> visibilityState() {
        return Optional.ofNullable(this.visibilityState);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPartnerRegistrationResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> authorizedAzureSubscriptionIds;
        private @Nullable String customerServiceUri;
        private String id;
        private String location;
        private @Nullable String logoUri;
        private @Nullable String longDescription;
        private String name;
        private @Nullable String partnerCustomerServiceExtension;
        private @Nullable String partnerCustomerServiceNumber;
        private @Nullable String partnerName;
        private @Nullable String partnerResourceTypeDescription;
        private @Nullable String partnerResourceTypeDisplayName;
        private @Nullable String partnerResourceTypeName;
        private String provisioningState;
        private @Nullable String setupUri;
        private SystemDataResponse systemData;
        private @Nullable Map<String,String> tags;
        private String type;
        private @Nullable String visibilityState;
        public Builder() {}
        public Builder(GetPartnerRegistrationResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authorizedAzureSubscriptionIds = defaults.authorizedAzureSubscriptionIds;
    	      this.customerServiceUri = defaults.customerServiceUri;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.logoUri = defaults.logoUri;
    	      this.longDescription = defaults.longDescription;
    	      this.name = defaults.name;
    	      this.partnerCustomerServiceExtension = defaults.partnerCustomerServiceExtension;
    	      this.partnerCustomerServiceNumber = defaults.partnerCustomerServiceNumber;
    	      this.partnerName = defaults.partnerName;
    	      this.partnerResourceTypeDescription = defaults.partnerResourceTypeDescription;
    	      this.partnerResourceTypeDisplayName = defaults.partnerResourceTypeDisplayName;
    	      this.partnerResourceTypeName = defaults.partnerResourceTypeName;
    	      this.provisioningState = defaults.provisioningState;
    	      this.setupUri = defaults.setupUri;
    	      this.systemData = defaults.systemData;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
    	      this.visibilityState = defaults.visibilityState;
        }

        @CustomType.Setter
        public Builder authorizedAzureSubscriptionIds(@Nullable List<String> authorizedAzureSubscriptionIds) {
            this.authorizedAzureSubscriptionIds = authorizedAzureSubscriptionIds;
            return this;
        }
        public Builder authorizedAzureSubscriptionIds(String... authorizedAzureSubscriptionIds) {
            return authorizedAzureSubscriptionIds(List.of(authorizedAzureSubscriptionIds));
        }
        @CustomType.Setter
        public Builder customerServiceUri(@Nullable String customerServiceUri) {
            this.customerServiceUri = customerServiceUri;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        @CustomType.Setter
        public Builder logoUri(@Nullable String logoUri) {
            this.logoUri = logoUri;
            return this;
        }
        @CustomType.Setter
        public Builder longDescription(@Nullable String longDescription) {
            this.longDescription = longDescription;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder partnerCustomerServiceExtension(@Nullable String partnerCustomerServiceExtension) {
            this.partnerCustomerServiceExtension = partnerCustomerServiceExtension;
            return this;
        }
        @CustomType.Setter
        public Builder partnerCustomerServiceNumber(@Nullable String partnerCustomerServiceNumber) {
            this.partnerCustomerServiceNumber = partnerCustomerServiceNumber;
            return this;
        }
        @CustomType.Setter
        public Builder partnerName(@Nullable String partnerName) {
            this.partnerName = partnerName;
            return this;
        }
        @CustomType.Setter
        public Builder partnerResourceTypeDescription(@Nullable String partnerResourceTypeDescription) {
            this.partnerResourceTypeDescription = partnerResourceTypeDescription;
            return this;
        }
        @CustomType.Setter
        public Builder partnerResourceTypeDisplayName(@Nullable String partnerResourceTypeDisplayName) {
            this.partnerResourceTypeDisplayName = partnerResourceTypeDisplayName;
            return this;
        }
        @CustomType.Setter
        public Builder partnerResourceTypeName(@Nullable String partnerResourceTypeName) {
            this.partnerResourceTypeName = partnerResourceTypeName;
            return this;
        }
        @CustomType.Setter
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        @CustomType.Setter
        public Builder setupUri(@Nullable String setupUri) {
            this.setupUri = setupUri;
            return this;
        }
        @CustomType.Setter
        public Builder systemData(SystemDataResponse systemData) {
            this.systemData = Objects.requireNonNull(systemData);
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder visibilityState(@Nullable String visibilityState) {
            this.visibilityState = visibilityState;
            return this;
        }
        public GetPartnerRegistrationResult build() {
            final var o = new GetPartnerRegistrationResult();
            o.authorizedAzureSubscriptionIds = authorizedAzureSubscriptionIds;
            o.customerServiceUri = customerServiceUri;
            o.id = id;
            o.location = location;
            o.logoUri = logoUri;
            o.longDescription = longDescription;
            o.name = name;
            o.partnerCustomerServiceExtension = partnerCustomerServiceExtension;
            o.partnerCustomerServiceNumber = partnerCustomerServiceNumber;
            o.partnerName = partnerName;
            o.partnerResourceTypeDescription = partnerResourceTypeDescription;
            o.partnerResourceTypeDisplayName = partnerResourceTypeDisplayName;
            o.partnerResourceTypeName = partnerResourceTypeName;
            o.provisioningState = provisioningState;
            o.setupUri = setupUri;
            o.systemData = systemData;
            o.tags = tags;
            o.type = type;
            o.visibilityState = visibilityState;
            return o;
        }
    }
}
