// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.kusto.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetIotHubDataConnectionResult {
    /**
     * @return The iot hub consumer group.
     * 
     */
    private String consumerGroup;
    /**
     * @return The data format of the message. Optionally the data format can be added to each message.
     * 
     */
    private @Nullable String dataFormat;
    /**
     * @return System properties of the iot hub
     * 
     */
    private @Nullable List<String> eventSystemProperties;
    /**
     * @return Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    private String id;
    /**
     * @return The resource ID of the Iot hub to be used to create a data connection.
     * 
     */
    private String iotHubResourceId;
    /**
     * @return Kind of the endpoint for the data connection
     * Expected value is &#39;IotHub&#39;.
     * 
     */
    private String kind;
    /**
     * @return Resource location.
     * 
     */
    private @Nullable String location;
    /**
     * @return The mapping rule to be used to ingest the data. Optionally the mapping information can be added to each message.
     * 
     */
    private @Nullable String mappingRuleName;
    /**
     * @return The name of the resource
     * 
     */
    private String name;
    /**
     * @return The provisioned state of the resource.
     * 
     */
    private String provisioningState;
    /**
     * @return The name of the share access policy
     * 
     */
    private String sharedAccessPolicyName;
    /**
     * @return The table where the data should be ingested. Optionally the table information can be added to each message.
     * 
     */
    private @Nullable String tableName;
    /**
     * @return The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    private String type;

    private GetIotHubDataConnectionResult() {}
    /**
     * @return The iot hub consumer group.
     * 
     */
    public String consumerGroup() {
        return this.consumerGroup;
    }
    /**
     * @return The data format of the message. Optionally the data format can be added to each message.
     * 
     */
    public Optional<String> dataFormat() {
        return Optional.ofNullable(this.dataFormat);
    }
    /**
     * @return System properties of the iot hub
     * 
     */
    public List<String> eventSystemProperties() {
        return this.eventSystemProperties == null ? List.of() : this.eventSystemProperties;
    }
    /**
     * @return Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The resource ID of the Iot hub to be used to create a data connection.
     * 
     */
    public String iotHubResourceId() {
        return this.iotHubResourceId;
    }
    /**
     * @return Kind of the endpoint for the data connection
     * Expected value is &#39;IotHub&#39;.
     * 
     */
    public String kind() {
        return this.kind;
    }
    /**
     * @return Resource location.
     * 
     */
    public Optional<String> location() {
        return Optional.ofNullable(this.location);
    }
    /**
     * @return The mapping rule to be used to ingest the data. Optionally the mapping information can be added to each message.
     * 
     */
    public Optional<String> mappingRuleName() {
        return Optional.ofNullable(this.mappingRuleName);
    }
    /**
     * @return The name of the resource
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The provisioned state of the resource.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * @return The name of the share access policy
     * 
     */
    public String sharedAccessPolicyName() {
        return this.sharedAccessPolicyName;
    }
    /**
     * @return The table where the data should be ingested. Optionally the table information can be added to each message.
     * 
     */
    public Optional<String> tableName() {
        return Optional.ofNullable(this.tableName);
    }
    /**
     * @return The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetIotHubDataConnectionResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String consumerGroup;
        private @Nullable String dataFormat;
        private @Nullable List<String> eventSystemProperties;
        private String id;
        private String iotHubResourceId;
        private String kind;
        private @Nullable String location;
        private @Nullable String mappingRuleName;
        private String name;
        private String provisioningState;
        private String sharedAccessPolicyName;
        private @Nullable String tableName;
        private String type;
        public Builder() {}
        public Builder(GetIotHubDataConnectionResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.consumerGroup = defaults.consumerGroup;
    	      this.dataFormat = defaults.dataFormat;
    	      this.eventSystemProperties = defaults.eventSystemProperties;
    	      this.id = defaults.id;
    	      this.iotHubResourceId = defaults.iotHubResourceId;
    	      this.kind = defaults.kind;
    	      this.location = defaults.location;
    	      this.mappingRuleName = defaults.mappingRuleName;
    	      this.name = defaults.name;
    	      this.provisioningState = defaults.provisioningState;
    	      this.sharedAccessPolicyName = defaults.sharedAccessPolicyName;
    	      this.tableName = defaults.tableName;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder consumerGroup(String consumerGroup) {
            this.consumerGroup = Objects.requireNonNull(consumerGroup);
            return this;
        }
        @CustomType.Setter
        public Builder dataFormat(@Nullable String dataFormat) {
            this.dataFormat = dataFormat;
            return this;
        }
        @CustomType.Setter
        public Builder eventSystemProperties(@Nullable List<String> eventSystemProperties) {
            this.eventSystemProperties = eventSystemProperties;
            return this;
        }
        public Builder eventSystemProperties(String... eventSystemProperties) {
            return eventSystemProperties(List.of(eventSystemProperties));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder iotHubResourceId(String iotHubResourceId) {
            this.iotHubResourceId = Objects.requireNonNull(iotHubResourceId);
            return this;
        }
        @CustomType.Setter
        public Builder kind(String kind) {
            this.kind = Objects.requireNonNull(kind);
            return this;
        }
        @CustomType.Setter
        public Builder location(@Nullable String location) {
            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder mappingRuleName(@Nullable String mappingRuleName) {
            this.mappingRuleName = mappingRuleName;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        @CustomType.Setter
        public Builder sharedAccessPolicyName(String sharedAccessPolicyName) {
            this.sharedAccessPolicyName = Objects.requireNonNull(sharedAccessPolicyName);
            return this;
        }
        @CustomType.Setter
        public Builder tableName(@Nullable String tableName) {
            this.tableName = tableName;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetIotHubDataConnectionResult build() {
            final var o = new GetIotHubDataConnectionResult();
            o.consumerGroup = consumerGroup;
            o.dataFormat = dataFormat;
            o.eventSystemProperties = eventSystemProperties;
            o.id = id;
            o.iotHubResourceId = iotHubResourceId;
            o.kind = kind;
            o.location = location;
            o.mappingRuleName = mappingRuleName;
            o.name = name;
            o.provisioningState = provisioningState;
            o.sharedAccessPolicyName = sharedAccessPolicyName;
            o.tableName = tableName;
            o.type = type;
            return o;
        }
    }
}
