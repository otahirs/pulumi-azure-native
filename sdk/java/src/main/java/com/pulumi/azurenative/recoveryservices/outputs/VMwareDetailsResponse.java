// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.recoveryservices.outputs;

import com.pulumi.azurenative.recoveryservices.outputs.MasterTargetServerResponse;
import com.pulumi.azurenative.recoveryservices.outputs.ProcessServerResponse;
import com.pulumi.azurenative.recoveryservices.outputs.RunAsAccountResponse;
import com.pulumi.azurenative.recoveryservices.outputs.VersionDetailsResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class VMwareDetailsResponse {
    /**
     * @return The number of source and target servers configured to talk to this CS.
     * 
     */
    private @Nullable String agentCount;
    /**
     * @return Agent expiry date.
     * 
     */
    private @Nullable String agentExpiryDate;
    /**
     * @return The agent Version.
     * 
     */
    private @Nullable String agentVersion;
    /**
     * @return The agent version details.
     * 
     */
    private @Nullable VersionDetailsResponse agentVersionDetails;
    /**
     * @return The available memory.
     * 
     */
    private @Nullable Double availableMemoryInBytes;
    /**
     * @return The available space.
     * 
     */
    private @Nullable Double availableSpaceInBytes;
    /**
     * @return The percentage of the CPU load.
     * 
     */
    private @Nullable String cpuLoad;
    /**
     * @return The CPU load status.
     * 
     */
    private @Nullable String cpuLoadStatus;
    /**
     * @return The CS service status.
     * 
     */
    private @Nullable String csServiceStatus;
    /**
     * @return The database server load.
     * 
     */
    private @Nullable String databaseServerLoad;
    /**
     * @return The database server load status.
     * 
     */
    private @Nullable String databaseServerLoadStatus;
    /**
     * @return The host name.
     * 
     */
    private @Nullable String hostName;
    /**
     * @return Gets the class type. Overridden in derived classes.
     * Expected value is &#39;VMware&#39;.
     * 
     */
    private String instanceType;
    /**
     * @return The IP address.
     * 
     */
    private @Nullable String ipAddress;
    /**
     * @return The last heartbeat received from CS server.
     * 
     */
    private @Nullable String lastHeartbeat;
    /**
     * @return The list of Master Target servers associated with the fabric.
     * 
     */
    private @Nullable List<MasterTargetServerResponse> masterTargetServers;
    /**
     * @return The memory usage status.
     * 
     */
    private @Nullable String memoryUsageStatus;
    /**
     * @return The number of process servers.
     * 
     */
    private @Nullable String processServerCount;
    /**
     * @return The list of Process Servers associated with the fabric.
     * 
     */
    private @Nullable List<ProcessServerResponse> processServers;
    /**
     * @return The number of protected servers.
     * 
     */
    private @Nullable String protectedServers;
    /**
     * @return PS template version.
     * 
     */
    private @Nullable String psTemplateVersion;
    /**
     * @return The number of replication pairs configured in this CS.
     * 
     */
    private @Nullable String replicationPairCount;
    /**
     * @return The list of run as accounts created on the server.
     * 
     */
    private @Nullable List<RunAsAccountResponse> runAsAccounts;
    /**
     * @return The space usage status.
     * 
     */
    private @Nullable String spaceUsageStatus;
    /**
     * @return CS SSL cert expiry date.
     * 
     */
    private @Nullable String sslCertExpiryDate;
    /**
     * @return CS SSL cert expiry date.
     * 
     */
    private @Nullable Integer sslCertExpiryRemainingDays;
    /**
     * @return The percentage of the system load.
     * 
     */
    private @Nullable String systemLoad;
    /**
     * @return The system load status.
     * 
     */
    private @Nullable String systemLoadStatus;
    /**
     * @return The total memory.
     * 
     */
    private @Nullable Double totalMemoryInBytes;
    /**
     * @return The total space.
     * 
     */
    private @Nullable Double totalSpaceInBytes;
    /**
     * @return Version status
     * 
     */
    private @Nullable String versionStatus;
    /**
     * @return The web load.
     * 
     */
    private @Nullable String webLoad;
    /**
     * @return The web load status.
     * 
     */
    private @Nullable String webLoadStatus;

    private VMwareDetailsResponse() {}
    /**
     * @return The number of source and target servers configured to talk to this CS.
     * 
     */
    public Optional<String> agentCount() {
        return Optional.ofNullable(this.agentCount);
    }
    /**
     * @return Agent expiry date.
     * 
     */
    public Optional<String> agentExpiryDate() {
        return Optional.ofNullable(this.agentExpiryDate);
    }
    /**
     * @return The agent Version.
     * 
     */
    public Optional<String> agentVersion() {
        return Optional.ofNullable(this.agentVersion);
    }
    /**
     * @return The agent version details.
     * 
     */
    public Optional<VersionDetailsResponse> agentVersionDetails() {
        return Optional.ofNullable(this.agentVersionDetails);
    }
    /**
     * @return The available memory.
     * 
     */
    public Optional<Double> availableMemoryInBytes() {
        return Optional.ofNullable(this.availableMemoryInBytes);
    }
    /**
     * @return The available space.
     * 
     */
    public Optional<Double> availableSpaceInBytes() {
        return Optional.ofNullable(this.availableSpaceInBytes);
    }
    /**
     * @return The percentage of the CPU load.
     * 
     */
    public Optional<String> cpuLoad() {
        return Optional.ofNullable(this.cpuLoad);
    }
    /**
     * @return The CPU load status.
     * 
     */
    public Optional<String> cpuLoadStatus() {
        return Optional.ofNullable(this.cpuLoadStatus);
    }
    /**
     * @return The CS service status.
     * 
     */
    public Optional<String> csServiceStatus() {
        return Optional.ofNullable(this.csServiceStatus);
    }
    /**
     * @return The database server load.
     * 
     */
    public Optional<String> databaseServerLoad() {
        return Optional.ofNullable(this.databaseServerLoad);
    }
    /**
     * @return The database server load status.
     * 
     */
    public Optional<String> databaseServerLoadStatus() {
        return Optional.ofNullable(this.databaseServerLoadStatus);
    }
    /**
     * @return The host name.
     * 
     */
    public Optional<String> hostName() {
        return Optional.ofNullable(this.hostName);
    }
    /**
     * @return Gets the class type. Overridden in derived classes.
     * Expected value is &#39;VMware&#39;.
     * 
     */
    public String instanceType() {
        return this.instanceType;
    }
    /**
     * @return The IP address.
     * 
     */
    public Optional<String> ipAddress() {
        return Optional.ofNullable(this.ipAddress);
    }
    /**
     * @return The last heartbeat received from CS server.
     * 
     */
    public Optional<String> lastHeartbeat() {
        return Optional.ofNullable(this.lastHeartbeat);
    }
    /**
     * @return The list of Master Target servers associated with the fabric.
     * 
     */
    public List<MasterTargetServerResponse> masterTargetServers() {
        return this.masterTargetServers == null ? List.of() : this.masterTargetServers;
    }
    /**
     * @return The memory usage status.
     * 
     */
    public Optional<String> memoryUsageStatus() {
        return Optional.ofNullable(this.memoryUsageStatus);
    }
    /**
     * @return The number of process servers.
     * 
     */
    public Optional<String> processServerCount() {
        return Optional.ofNullable(this.processServerCount);
    }
    /**
     * @return The list of Process Servers associated with the fabric.
     * 
     */
    public List<ProcessServerResponse> processServers() {
        return this.processServers == null ? List.of() : this.processServers;
    }
    /**
     * @return The number of protected servers.
     * 
     */
    public Optional<String> protectedServers() {
        return Optional.ofNullable(this.protectedServers);
    }
    /**
     * @return PS template version.
     * 
     */
    public Optional<String> psTemplateVersion() {
        return Optional.ofNullable(this.psTemplateVersion);
    }
    /**
     * @return The number of replication pairs configured in this CS.
     * 
     */
    public Optional<String> replicationPairCount() {
        return Optional.ofNullable(this.replicationPairCount);
    }
    /**
     * @return The list of run as accounts created on the server.
     * 
     */
    public List<RunAsAccountResponse> runAsAccounts() {
        return this.runAsAccounts == null ? List.of() : this.runAsAccounts;
    }
    /**
     * @return The space usage status.
     * 
     */
    public Optional<String> spaceUsageStatus() {
        return Optional.ofNullable(this.spaceUsageStatus);
    }
    /**
     * @return CS SSL cert expiry date.
     * 
     */
    public Optional<String> sslCertExpiryDate() {
        return Optional.ofNullable(this.sslCertExpiryDate);
    }
    /**
     * @return CS SSL cert expiry date.
     * 
     */
    public Optional<Integer> sslCertExpiryRemainingDays() {
        return Optional.ofNullable(this.sslCertExpiryRemainingDays);
    }
    /**
     * @return The percentage of the system load.
     * 
     */
    public Optional<String> systemLoad() {
        return Optional.ofNullable(this.systemLoad);
    }
    /**
     * @return The system load status.
     * 
     */
    public Optional<String> systemLoadStatus() {
        return Optional.ofNullable(this.systemLoadStatus);
    }
    /**
     * @return The total memory.
     * 
     */
    public Optional<Double> totalMemoryInBytes() {
        return Optional.ofNullable(this.totalMemoryInBytes);
    }
    /**
     * @return The total space.
     * 
     */
    public Optional<Double> totalSpaceInBytes() {
        return Optional.ofNullable(this.totalSpaceInBytes);
    }
    /**
     * @return Version status
     * 
     */
    public Optional<String> versionStatus() {
        return Optional.ofNullable(this.versionStatus);
    }
    /**
     * @return The web load.
     * 
     */
    public Optional<String> webLoad() {
        return Optional.ofNullable(this.webLoad);
    }
    /**
     * @return The web load status.
     * 
     */
    public Optional<String> webLoadStatus() {
        return Optional.ofNullable(this.webLoadStatus);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VMwareDetailsResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String agentCount;
        private @Nullable String agentExpiryDate;
        private @Nullable String agentVersion;
        private @Nullable VersionDetailsResponse agentVersionDetails;
        private @Nullable Double availableMemoryInBytes;
        private @Nullable Double availableSpaceInBytes;
        private @Nullable String cpuLoad;
        private @Nullable String cpuLoadStatus;
        private @Nullable String csServiceStatus;
        private @Nullable String databaseServerLoad;
        private @Nullable String databaseServerLoadStatus;
        private @Nullable String hostName;
        private String instanceType;
        private @Nullable String ipAddress;
        private @Nullable String lastHeartbeat;
        private @Nullable List<MasterTargetServerResponse> masterTargetServers;
        private @Nullable String memoryUsageStatus;
        private @Nullable String processServerCount;
        private @Nullable List<ProcessServerResponse> processServers;
        private @Nullable String protectedServers;
        private @Nullable String psTemplateVersion;
        private @Nullable String replicationPairCount;
        private @Nullable List<RunAsAccountResponse> runAsAccounts;
        private @Nullable String spaceUsageStatus;
        private @Nullable String sslCertExpiryDate;
        private @Nullable Integer sslCertExpiryRemainingDays;
        private @Nullable String systemLoad;
        private @Nullable String systemLoadStatus;
        private @Nullable Double totalMemoryInBytes;
        private @Nullable Double totalSpaceInBytes;
        private @Nullable String versionStatus;
        private @Nullable String webLoad;
        private @Nullable String webLoadStatus;
        public Builder() {}
        public Builder(VMwareDetailsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.agentCount = defaults.agentCount;
    	      this.agentExpiryDate = defaults.agentExpiryDate;
    	      this.agentVersion = defaults.agentVersion;
    	      this.agentVersionDetails = defaults.agentVersionDetails;
    	      this.availableMemoryInBytes = defaults.availableMemoryInBytes;
    	      this.availableSpaceInBytes = defaults.availableSpaceInBytes;
    	      this.cpuLoad = defaults.cpuLoad;
    	      this.cpuLoadStatus = defaults.cpuLoadStatus;
    	      this.csServiceStatus = defaults.csServiceStatus;
    	      this.databaseServerLoad = defaults.databaseServerLoad;
    	      this.databaseServerLoadStatus = defaults.databaseServerLoadStatus;
    	      this.hostName = defaults.hostName;
    	      this.instanceType = defaults.instanceType;
    	      this.ipAddress = defaults.ipAddress;
    	      this.lastHeartbeat = defaults.lastHeartbeat;
    	      this.masterTargetServers = defaults.masterTargetServers;
    	      this.memoryUsageStatus = defaults.memoryUsageStatus;
    	      this.processServerCount = defaults.processServerCount;
    	      this.processServers = defaults.processServers;
    	      this.protectedServers = defaults.protectedServers;
    	      this.psTemplateVersion = defaults.psTemplateVersion;
    	      this.replicationPairCount = defaults.replicationPairCount;
    	      this.runAsAccounts = defaults.runAsAccounts;
    	      this.spaceUsageStatus = defaults.spaceUsageStatus;
    	      this.sslCertExpiryDate = defaults.sslCertExpiryDate;
    	      this.sslCertExpiryRemainingDays = defaults.sslCertExpiryRemainingDays;
    	      this.systemLoad = defaults.systemLoad;
    	      this.systemLoadStatus = defaults.systemLoadStatus;
    	      this.totalMemoryInBytes = defaults.totalMemoryInBytes;
    	      this.totalSpaceInBytes = defaults.totalSpaceInBytes;
    	      this.versionStatus = defaults.versionStatus;
    	      this.webLoad = defaults.webLoad;
    	      this.webLoadStatus = defaults.webLoadStatus;
        }

        @CustomType.Setter
        public Builder agentCount(@Nullable String agentCount) {
            this.agentCount = agentCount;
            return this;
        }
        @CustomType.Setter
        public Builder agentExpiryDate(@Nullable String agentExpiryDate) {
            this.agentExpiryDate = agentExpiryDate;
            return this;
        }
        @CustomType.Setter
        public Builder agentVersion(@Nullable String agentVersion) {
            this.agentVersion = agentVersion;
            return this;
        }
        @CustomType.Setter
        public Builder agentVersionDetails(@Nullable VersionDetailsResponse agentVersionDetails) {
            this.agentVersionDetails = agentVersionDetails;
            return this;
        }
        @CustomType.Setter
        public Builder availableMemoryInBytes(@Nullable Double availableMemoryInBytes) {
            this.availableMemoryInBytes = availableMemoryInBytes;
            return this;
        }
        @CustomType.Setter
        public Builder availableSpaceInBytes(@Nullable Double availableSpaceInBytes) {
            this.availableSpaceInBytes = availableSpaceInBytes;
            return this;
        }
        @CustomType.Setter
        public Builder cpuLoad(@Nullable String cpuLoad) {
            this.cpuLoad = cpuLoad;
            return this;
        }
        @CustomType.Setter
        public Builder cpuLoadStatus(@Nullable String cpuLoadStatus) {
            this.cpuLoadStatus = cpuLoadStatus;
            return this;
        }
        @CustomType.Setter
        public Builder csServiceStatus(@Nullable String csServiceStatus) {
            this.csServiceStatus = csServiceStatus;
            return this;
        }
        @CustomType.Setter
        public Builder databaseServerLoad(@Nullable String databaseServerLoad) {
            this.databaseServerLoad = databaseServerLoad;
            return this;
        }
        @CustomType.Setter
        public Builder databaseServerLoadStatus(@Nullable String databaseServerLoadStatus) {
            this.databaseServerLoadStatus = databaseServerLoadStatus;
            return this;
        }
        @CustomType.Setter
        public Builder hostName(@Nullable String hostName) {
            this.hostName = hostName;
            return this;
        }
        @CustomType.Setter
        public Builder instanceType(String instanceType) {
            this.instanceType = Objects.requireNonNull(instanceType);
            return this;
        }
        @CustomType.Setter
        public Builder ipAddress(@Nullable String ipAddress) {
            this.ipAddress = ipAddress;
            return this;
        }
        @CustomType.Setter
        public Builder lastHeartbeat(@Nullable String lastHeartbeat) {
            this.lastHeartbeat = lastHeartbeat;
            return this;
        }
        @CustomType.Setter
        public Builder masterTargetServers(@Nullable List<MasterTargetServerResponse> masterTargetServers) {
            this.masterTargetServers = masterTargetServers;
            return this;
        }
        public Builder masterTargetServers(MasterTargetServerResponse... masterTargetServers) {
            return masterTargetServers(List.of(masterTargetServers));
        }
        @CustomType.Setter
        public Builder memoryUsageStatus(@Nullable String memoryUsageStatus) {
            this.memoryUsageStatus = memoryUsageStatus;
            return this;
        }
        @CustomType.Setter
        public Builder processServerCount(@Nullable String processServerCount) {
            this.processServerCount = processServerCount;
            return this;
        }
        @CustomType.Setter
        public Builder processServers(@Nullable List<ProcessServerResponse> processServers) {
            this.processServers = processServers;
            return this;
        }
        public Builder processServers(ProcessServerResponse... processServers) {
            return processServers(List.of(processServers));
        }
        @CustomType.Setter
        public Builder protectedServers(@Nullable String protectedServers) {
            this.protectedServers = protectedServers;
            return this;
        }
        @CustomType.Setter
        public Builder psTemplateVersion(@Nullable String psTemplateVersion) {
            this.psTemplateVersion = psTemplateVersion;
            return this;
        }
        @CustomType.Setter
        public Builder replicationPairCount(@Nullable String replicationPairCount) {
            this.replicationPairCount = replicationPairCount;
            return this;
        }
        @CustomType.Setter
        public Builder runAsAccounts(@Nullable List<RunAsAccountResponse> runAsAccounts) {
            this.runAsAccounts = runAsAccounts;
            return this;
        }
        public Builder runAsAccounts(RunAsAccountResponse... runAsAccounts) {
            return runAsAccounts(List.of(runAsAccounts));
        }
        @CustomType.Setter
        public Builder spaceUsageStatus(@Nullable String spaceUsageStatus) {
            this.spaceUsageStatus = spaceUsageStatus;
            return this;
        }
        @CustomType.Setter
        public Builder sslCertExpiryDate(@Nullable String sslCertExpiryDate) {
            this.sslCertExpiryDate = sslCertExpiryDate;
            return this;
        }
        @CustomType.Setter
        public Builder sslCertExpiryRemainingDays(@Nullable Integer sslCertExpiryRemainingDays) {
            this.sslCertExpiryRemainingDays = sslCertExpiryRemainingDays;
            return this;
        }
        @CustomType.Setter
        public Builder systemLoad(@Nullable String systemLoad) {
            this.systemLoad = systemLoad;
            return this;
        }
        @CustomType.Setter
        public Builder systemLoadStatus(@Nullable String systemLoadStatus) {
            this.systemLoadStatus = systemLoadStatus;
            return this;
        }
        @CustomType.Setter
        public Builder totalMemoryInBytes(@Nullable Double totalMemoryInBytes) {
            this.totalMemoryInBytes = totalMemoryInBytes;
            return this;
        }
        @CustomType.Setter
        public Builder totalSpaceInBytes(@Nullable Double totalSpaceInBytes) {
            this.totalSpaceInBytes = totalSpaceInBytes;
            return this;
        }
        @CustomType.Setter
        public Builder versionStatus(@Nullable String versionStatus) {
            this.versionStatus = versionStatus;
            return this;
        }
        @CustomType.Setter
        public Builder webLoad(@Nullable String webLoad) {
            this.webLoad = webLoad;
            return this;
        }
        @CustomType.Setter
        public Builder webLoadStatus(@Nullable String webLoadStatus) {
            this.webLoadStatus = webLoadStatus;
            return this;
        }
        public VMwareDetailsResponse build() {
            final var o = new VMwareDetailsResponse();
            o.agentCount = agentCount;
            o.agentExpiryDate = agentExpiryDate;
            o.agentVersion = agentVersion;
            o.agentVersionDetails = agentVersionDetails;
            o.availableMemoryInBytes = availableMemoryInBytes;
            o.availableSpaceInBytes = availableSpaceInBytes;
            o.cpuLoad = cpuLoad;
            o.cpuLoadStatus = cpuLoadStatus;
            o.csServiceStatus = csServiceStatus;
            o.databaseServerLoad = databaseServerLoad;
            o.databaseServerLoadStatus = databaseServerLoadStatus;
            o.hostName = hostName;
            o.instanceType = instanceType;
            o.ipAddress = ipAddress;
            o.lastHeartbeat = lastHeartbeat;
            o.masterTargetServers = masterTargetServers;
            o.memoryUsageStatus = memoryUsageStatus;
            o.processServerCount = processServerCount;
            o.processServers = processServers;
            o.protectedServers = protectedServers;
            o.psTemplateVersion = psTemplateVersion;
            o.replicationPairCount = replicationPairCount;
            o.runAsAccounts = runAsAccounts;
            o.spaceUsageStatus = spaceUsageStatus;
            o.sslCertExpiryDate = sslCertExpiryDate;
            o.sslCertExpiryRemainingDays = sslCertExpiryRemainingDays;
            o.systemLoad = systemLoad;
            o.systemLoadStatus = systemLoadStatus;
            o.totalMemoryInBytes = totalMemoryInBytes;
            o.totalSpaceInBytes = totalSpaceInBytes;
            o.versionStatus = versionStatus;
            o.webLoad = webLoad;
            o.webLoadStatus = webLoadStatus;
            return o;
        }
    }
}
