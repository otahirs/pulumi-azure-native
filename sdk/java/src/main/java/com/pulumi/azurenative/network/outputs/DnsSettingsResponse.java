// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DnsSettingsResponse {
    /**
     * @return Enable DNS Proxy on Firewalls attached to the Firewall Policy.
     * 
     */
    private @Nullable Boolean enableProxy;
    /**
     * @return FQDNs in Network Rules are supported when set to true.
     * 
     */
    private @Nullable Boolean requireProxyForNetworkRules;
    /**
     * @return List of Custom DNS Servers.
     * 
     */
    private @Nullable List<String> servers;

    private DnsSettingsResponse() {}
    /**
     * @return Enable DNS Proxy on Firewalls attached to the Firewall Policy.
     * 
     */
    public Optional<Boolean> enableProxy() {
        return Optional.ofNullable(this.enableProxy);
    }
    /**
     * @return FQDNs in Network Rules are supported when set to true.
     * 
     */
    public Optional<Boolean> requireProxyForNetworkRules() {
        return Optional.ofNullable(this.requireProxyForNetworkRules);
    }
    /**
     * @return List of Custom DNS Servers.
     * 
     */
    public List<String> servers() {
        return this.servers == null ? List.of() : this.servers;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DnsSettingsResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean enableProxy;
        private @Nullable Boolean requireProxyForNetworkRules;
        private @Nullable List<String> servers;
        public Builder() {}
        public Builder(DnsSettingsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enableProxy = defaults.enableProxy;
    	      this.requireProxyForNetworkRules = defaults.requireProxyForNetworkRules;
    	      this.servers = defaults.servers;
        }

        @CustomType.Setter
        public Builder enableProxy(@Nullable Boolean enableProxy) {
            this.enableProxy = enableProxy;
            return this;
        }
        @CustomType.Setter
        public Builder requireProxyForNetworkRules(@Nullable Boolean requireProxyForNetworkRules) {
            this.requireProxyForNetworkRules = requireProxyForNetworkRules;
            return this;
        }
        @CustomType.Setter
        public Builder servers(@Nullable List<String> servers) {
            this.servers = servers;
            return this;
        }
        public Builder servers(String... servers) {
            return servers(List.of(servers));
        }
        public DnsSettingsResponse build() {
            final var o = new DnsSettingsResponse();
            o.enableProxy = enableProxy;
            o.requireProxyForNetworkRules = requireProxyForNetworkRules;
            o.servers = servers;
            return o;
        }
    }
}
