// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.compute.outputs;

import com.pulumi.azurenative.compute.outputs.InstanceViewStatusResponse;
import com.pulumi.azurenative.compute.outputs.SubResourceWithColocationStatusResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetProximityPlacementGroupResult {
    /**
     * @return A list of references to all availability sets in the proximity placement group.
     * 
     */
    private List<SubResourceWithColocationStatusResponse> availabilitySets;
    /**
     * @return Describes colocation status of the Proximity Placement Group.
     * 
     */
    private @Nullable InstanceViewStatusResponse colocationStatus;
    /**
     * @return Resource Id
     * 
     */
    private String id;
    /**
     * @return Resource location
     * 
     */
    private String location;
    /**
     * @return Resource name
     * 
     */
    private String name;
    /**
     * @return Specifies the type of the proximity placement group. &lt;br&gt;&lt;br&gt; Possible values are: &lt;br&gt;&lt;br&gt; **Standard** : Co-locate resources within an Azure region or Availability Zone. &lt;br&gt;&lt;br&gt; **Ultra** : For future use.
     * 
     */
    private @Nullable String proximityPlacementGroupType;
    /**
     * @return Resource tags
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return Resource type
     * 
     */
    private String type;
    /**
     * @return A list of references to all virtual machine scale sets in the proximity placement group.
     * 
     */
    private List<SubResourceWithColocationStatusResponse> virtualMachineScaleSets;
    /**
     * @return A list of references to all virtual machines in the proximity placement group.
     * 
     */
    private List<SubResourceWithColocationStatusResponse> virtualMachines;

    private GetProximityPlacementGroupResult() {}
    /**
     * @return A list of references to all availability sets in the proximity placement group.
     * 
     */
    public List<SubResourceWithColocationStatusResponse> availabilitySets() {
        return this.availabilitySets;
    }
    /**
     * @return Describes colocation status of the Proximity Placement Group.
     * 
     */
    public Optional<InstanceViewStatusResponse> colocationStatus() {
        return Optional.ofNullable(this.colocationStatus);
    }
    /**
     * @return Resource Id
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Resource location
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return Resource name
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Specifies the type of the proximity placement group. &lt;br&gt;&lt;br&gt; Possible values are: &lt;br&gt;&lt;br&gt; **Standard** : Co-locate resources within an Azure region or Availability Zone. &lt;br&gt;&lt;br&gt; **Ultra** : For future use.
     * 
     */
    public Optional<String> proximityPlacementGroupType() {
        return Optional.ofNullable(this.proximityPlacementGroupType);
    }
    /**
     * @return Resource tags
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return Resource type
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return A list of references to all virtual machine scale sets in the proximity placement group.
     * 
     */
    public List<SubResourceWithColocationStatusResponse> virtualMachineScaleSets() {
        return this.virtualMachineScaleSets;
    }
    /**
     * @return A list of references to all virtual machines in the proximity placement group.
     * 
     */
    public List<SubResourceWithColocationStatusResponse> virtualMachines() {
        return this.virtualMachines;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetProximityPlacementGroupResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<SubResourceWithColocationStatusResponse> availabilitySets;
        private @Nullable InstanceViewStatusResponse colocationStatus;
        private String id;
        private String location;
        private String name;
        private @Nullable String proximityPlacementGroupType;
        private @Nullable Map<String,String> tags;
        private String type;
        private List<SubResourceWithColocationStatusResponse> virtualMachineScaleSets;
        private List<SubResourceWithColocationStatusResponse> virtualMachines;
        public Builder() {}
        public Builder(GetProximityPlacementGroupResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availabilitySets = defaults.availabilitySets;
    	      this.colocationStatus = defaults.colocationStatus;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.proximityPlacementGroupType = defaults.proximityPlacementGroupType;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
    	      this.virtualMachineScaleSets = defaults.virtualMachineScaleSets;
    	      this.virtualMachines = defaults.virtualMachines;
        }

        @CustomType.Setter
        public Builder availabilitySets(List<SubResourceWithColocationStatusResponse> availabilitySets) {
            this.availabilitySets = Objects.requireNonNull(availabilitySets);
            return this;
        }
        public Builder availabilitySets(SubResourceWithColocationStatusResponse... availabilitySets) {
            return availabilitySets(List.of(availabilitySets));
        }
        @CustomType.Setter
        public Builder colocationStatus(@Nullable InstanceViewStatusResponse colocationStatus) {
            this.colocationStatus = colocationStatus;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder proximityPlacementGroupType(@Nullable String proximityPlacementGroupType) {
            this.proximityPlacementGroupType = proximityPlacementGroupType;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder virtualMachineScaleSets(List<SubResourceWithColocationStatusResponse> virtualMachineScaleSets) {
            this.virtualMachineScaleSets = Objects.requireNonNull(virtualMachineScaleSets);
            return this;
        }
        public Builder virtualMachineScaleSets(SubResourceWithColocationStatusResponse... virtualMachineScaleSets) {
            return virtualMachineScaleSets(List.of(virtualMachineScaleSets));
        }
        @CustomType.Setter
        public Builder virtualMachines(List<SubResourceWithColocationStatusResponse> virtualMachines) {
            this.virtualMachines = Objects.requireNonNull(virtualMachines);
            return this;
        }
        public Builder virtualMachines(SubResourceWithColocationStatusResponse... virtualMachines) {
            return virtualMachines(List.of(virtualMachines));
        }
        public GetProximityPlacementGroupResult build() {
            final var o = new GetProximityPlacementGroupResult();
            o.availabilitySets = availabilitySets;
            o.colocationStatus = colocationStatus;
            o.id = id;
            o.location = location;
            o.name = name;
            o.proximityPlacementGroupType = proximityPlacementGroupType;
            o.tags = tags;
            o.type = type;
            o.virtualMachineScaleSets = virtualMachineScaleSets;
            o.virtualMachines = virtualMachines;
            return o;
        }
    }
}
