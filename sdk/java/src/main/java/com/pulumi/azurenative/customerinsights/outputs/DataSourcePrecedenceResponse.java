// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.customerinsights.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DataSourcePrecedenceResponse {
    /**
     * @return The data source reference id.
     * 
     */
    private String dataSourceReferenceId;
    /**
     * @return The data source type.
     * 
     */
    private String dataSourceType;
    /**
     * @return The data source ID.
     * 
     */
    private Integer id;
    /**
     * @return The data source name
     * 
     */
    private String name;
    /**
     * @return the precedence value.
     * 
     */
    private @Nullable Integer precedence;
    /**
     * @return The data source status.
     * 
     */
    private String status;

    private DataSourcePrecedenceResponse() {}
    /**
     * @return The data source reference id.
     * 
     */
    public String dataSourceReferenceId() {
        return this.dataSourceReferenceId;
    }
    /**
     * @return The data source type.
     * 
     */
    public String dataSourceType() {
        return this.dataSourceType;
    }
    /**
     * @return The data source ID.
     * 
     */
    public Integer id() {
        return this.id;
    }
    /**
     * @return The data source name
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return the precedence value.
     * 
     */
    public Optional<Integer> precedence() {
        return Optional.ofNullable(this.precedence);
    }
    /**
     * @return The data source status.
     * 
     */
    public String status() {
        return this.status;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DataSourcePrecedenceResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String dataSourceReferenceId;
        private String dataSourceType;
        private Integer id;
        private String name;
        private @Nullable Integer precedence;
        private String status;
        public Builder() {}
        public Builder(DataSourcePrecedenceResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dataSourceReferenceId = defaults.dataSourceReferenceId;
    	      this.dataSourceType = defaults.dataSourceType;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.precedence = defaults.precedence;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder dataSourceReferenceId(String dataSourceReferenceId) {
            this.dataSourceReferenceId = Objects.requireNonNull(dataSourceReferenceId);
            return this;
        }
        @CustomType.Setter
        public Builder dataSourceType(String dataSourceType) {
            this.dataSourceType = Objects.requireNonNull(dataSourceType);
            return this;
        }
        @CustomType.Setter
        public Builder id(Integer id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder precedence(@Nullable Integer precedence) {
            this.precedence = precedence;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        public DataSourcePrecedenceResponse build() {
            final var o = new DataSourcePrecedenceResponse();
            o.dataSourceReferenceId = dataSourceReferenceId;
            o.dataSourceType = dataSourceType;
            o.id = id;
            o.name = name;
            o.precedence = precedence;
            o.status = status;
            return o;
        }
    }
}
