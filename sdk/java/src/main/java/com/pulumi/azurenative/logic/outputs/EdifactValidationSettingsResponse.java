// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.logic.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class EdifactValidationSettingsResponse {
    /**
     * @return The value indicating whether to allow leading and trailing spaces and zeroes.
     * 
     */
    private Boolean allowLeadingAndTrailingSpacesAndZeroes;
    /**
     * @return The value indicating whether to check for duplicate group control number.
     * 
     */
    private Boolean checkDuplicateGroupControlNumber;
    /**
     * @return The value indicating whether to check for duplicate interchange control number.
     * 
     */
    private Boolean checkDuplicateInterchangeControlNumber;
    /**
     * @return The value indicating whether to check for duplicate transaction set control number.
     * 
     */
    private Boolean checkDuplicateTransactionSetControlNumber;
    /**
     * @return The validity period of interchange control number.
     * 
     */
    private Integer interchangeControlNumberValidityDays;
    /**
     * @return The trailing separator policy.
     * 
     */
    private String trailingSeparatorPolicy;
    /**
     * @return The value indicating whether to trim leading and trailing spaces and zeroes.
     * 
     */
    private Boolean trimLeadingAndTrailingSpacesAndZeroes;
    /**
     * @return The value indicating whether to validate character set in the message.
     * 
     */
    private Boolean validateCharacterSet;
    /**
     * @return The value indicating whether to Whether to validate EDI types.
     * 
     */
    private Boolean validateEDITypes;
    /**
     * @return The value indicating whether to Whether to validate XSD types.
     * 
     */
    private Boolean validateXSDTypes;

    private EdifactValidationSettingsResponse() {}
    /**
     * @return The value indicating whether to allow leading and trailing spaces and zeroes.
     * 
     */
    public Boolean allowLeadingAndTrailingSpacesAndZeroes() {
        return this.allowLeadingAndTrailingSpacesAndZeroes;
    }
    /**
     * @return The value indicating whether to check for duplicate group control number.
     * 
     */
    public Boolean checkDuplicateGroupControlNumber() {
        return this.checkDuplicateGroupControlNumber;
    }
    /**
     * @return The value indicating whether to check for duplicate interchange control number.
     * 
     */
    public Boolean checkDuplicateInterchangeControlNumber() {
        return this.checkDuplicateInterchangeControlNumber;
    }
    /**
     * @return The value indicating whether to check for duplicate transaction set control number.
     * 
     */
    public Boolean checkDuplicateTransactionSetControlNumber() {
        return this.checkDuplicateTransactionSetControlNumber;
    }
    /**
     * @return The validity period of interchange control number.
     * 
     */
    public Integer interchangeControlNumberValidityDays() {
        return this.interchangeControlNumberValidityDays;
    }
    /**
     * @return The trailing separator policy.
     * 
     */
    public String trailingSeparatorPolicy() {
        return this.trailingSeparatorPolicy;
    }
    /**
     * @return The value indicating whether to trim leading and trailing spaces and zeroes.
     * 
     */
    public Boolean trimLeadingAndTrailingSpacesAndZeroes() {
        return this.trimLeadingAndTrailingSpacesAndZeroes;
    }
    /**
     * @return The value indicating whether to validate character set in the message.
     * 
     */
    public Boolean validateCharacterSet() {
        return this.validateCharacterSet;
    }
    /**
     * @return The value indicating whether to Whether to validate EDI types.
     * 
     */
    public Boolean validateEDITypes() {
        return this.validateEDITypes;
    }
    /**
     * @return The value indicating whether to Whether to validate XSD types.
     * 
     */
    public Boolean validateXSDTypes() {
        return this.validateXSDTypes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EdifactValidationSettingsResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean allowLeadingAndTrailingSpacesAndZeroes;
        private Boolean checkDuplicateGroupControlNumber;
        private Boolean checkDuplicateInterchangeControlNumber;
        private Boolean checkDuplicateTransactionSetControlNumber;
        private Integer interchangeControlNumberValidityDays;
        private String trailingSeparatorPolicy;
        private Boolean trimLeadingAndTrailingSpacesAndZeroes;
        private Boolean validateCharacterSet;
        private Boolean validateEDITypes;
        private Boolean validateXSDTypes;
        public Builder() {}
        public Builder(EdifactValidationSettingsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowLeadingAndTrailingSpacesAndZeroes = defaults.allowLeadingAndTrailingSpacesAndZeroes;
    	      this.checkDuplicateGroupControlNumber = defaults.checkDuplicateGroupControlNumber;
    	      this.checkDuplicateInterchangeControlNumber = defaults.checkDuplicateInterchangeControlNumber;
    	      this.checkDuplicateTransactionSetControlNumber = defaults.checkDuplicateTransactionSetControlNumber;
    	      this.interchangeControlNumberValidityDays = defaults.interchangeControlNumberValidityDays;
    	      this.trailingSeparatorPolicy = defaults.trailingSeparatorPolicy;
    	      this.trimLeadingAndTrailingSpacesAndZeroes = defaults.trimLeadingAndTrailingSpacesAndZeroes;
    	      this.validateCharacterSet = defaults.validateCharacterSet;
    	      this.validateEDITypes = defaults.validateEDITypes;
    	      this.validateXSDTypes = defaults.validateXSDTypes;
        }

        @CustomType.Setter
        public Builder allowLeadingAndTrailingSpacesAndZeroes(Boolean allowLeadingAndTrailingSpacesAndZeroes) {
            this.allowLeadingAndTrailingSpacesAndZeroes = Objects.requireNonNull(allowLeadingAndTrailingSpacesAndZeroes);
            return this;
        }
        @CustomType.Setter
        public Builder checkDuplicateGroupControlNumber(Boolean checkDuplicateGroupControlNumber) {
            this.checkDuplicateGroupControlNumber = Objects.requireNonNull(checkDuplicateGroupControlNumber);
            return this;
        }
        @CustomType.Setter
        public Builder checkDuplicateInterchangeControlNumber(Boolean checkDuplicateInterchangeControlNumber) {
            this.checkDuplicateInterchangeControlNumber = Objects.requireNonNull(checkDuplicateInterchangeControlNumber);
            return this;
        }
        @CustomType.Setter
        public Builder checkDuplicateTransactionSetControlNumber(Boolean checkDuplicateTransactionSetControlNumber) {
            this.checkDuplicateTransactionSetControlNumber = Objects.requireNonNull(checkDuplicateTransactionSetControlNumber);
            return this;
        }
        @CustomType.Setter
        public Builder interchangeControlNumberValidityDays(Integer interchangeControlNumberValidityDays) {
            this.interchangeControlNumberValidityDays = Objects.requireNonNull(interchangeControlNumberValidityDays);
            return this;
        }
        @CustomType.Setter
        public Builder trailingSeparatorPolicy(String trailingSeparatorPolicy) {
            this.trailingSeparatorPolicy = Objects.requireNonNull(trailingSeparatorPolicy);
            return this;
        }
        @CustomType.Setter
        public Builder trimLeadingAndTrailingSpacesAndZeroes(Boolean trimLeadingAndTrailingSpacesAndZeroes) {
            this.trimLeadingAndTrailingSpacesAndZeroes = Objects.requireNonNull(trimLeadingAndTrailingSpacesAndZeroes);
            return this;
        }
        @CustomType.Setter
        public Builder validateCharacterSet(Boolean validateCharacterSet) {
            this.validateCharacterSet = Objects.requireNonNull(validateCharacterSet);
            return this;
        }
        @CustomType.Setter
        public Builder validateEDITypes(Boolean validateEDITypes) {
            this.validateEDITypes = Objects.requireNonNull(validateEDITypes);
            return this;
        }
        @CustomType.Setter
        public Builder validateXSDTypes(Boolean validateXSDTypes) {
            this.validateXSDTypes = Objects.requireNonNull(validateXSDTypes);
            return this;
        }
        public EdifactValidationSettingsResponse build() {
            final var o = new EdifactValidationSettingsResponse();
            o.allowLeadingAndTrailingSpacesAndZeroes = allowLeadingAndTrailingSpacesAndZeroes;
            o.checkDuplicateGroupControlNumber = checkDuplicateGroupControlNumber;
            o.checkDuplicateInterchangeControlNumber = checkDuplicateInterchangeControlNumber;
            o.checkDuplicateTransactionSetControlNumber = checkDuplicateTransactionSetControlNumber;
            o.interchangeControlNumberValidityDays = interchangeControlNumberValidityDays;
            o.trailingSeparatorPolicy = trailingSeparatorPolicy;
            o.trimLeadingAndTrailingSpacesAndZeroes = trimLeadingAndTrailingSpacesAndZeroes;
            o.validateCharacterSet = validateCharacterSet;
            o.validateEDITypes = validateEDITypes;
            o.validateXSDTypes = validateXSDTypes;
            return o;
        }
    }
}
