// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.batch.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetApplicationResult {
    /**
     * @return A value indicating whether packages within the application may be overwritten using the same version string.
     * 
     */
    private @Nullable Boolean allowUpdates;
    /**
     * @return The package to use if a client requests the application but does not specify a version. This property can only be set to the name of an existing package.
     * 
     */
    private @Nullable String defaultVersion;
    /**
     * @return The display name for the application.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return The ETag of the resource, used for concurrency statements.
     * 
     */
    private String etag;
    /**
     * @return The ID of the resource.
     * 
     */
    private String id;
    /**
     * @return The name of the resource.
     * 
     */
    private String name;
    /**
     * @return The type of the resource.
     * 
     */
    private String type;

    private GetApplicationResult() {}
    /**
     * @return A value indicating whether packages within the application may be overwritten using the same version string.
     * 
     */
    public Optional<Boolean> allowUpdates() {
        return Optional.ofNullable(this.allowUpdates);
    }
    /**
     * @return The package to use if a client requests the application but does not specify a version. This property can only be set to the name of an existing package.
     * 
     */
    public Optional<String> defaultVersion() {
        return Optional.ofNullable(this.defaultVersion);
    }
    /**
     * @return The display name for the application.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return The ETag of the resource, used for concurrency statements.
     * 
     */
    public String etag() {
        return this.etag;
    }
    /**
     * @return The ID of the resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The name of the resource.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The type of the resource.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetApplicationResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean allowUpdates;
        private @Nullable String defaultVersion;
        private @Nullable String displayName;
        private String etag;
        private String id;
        private String name;
        private String type;
        public Builder() {}
        public Builder(GetApplicationResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowUpdates = defaults.allowUpdates;
    	      this.defaultVersion = defaults.defaultVersion;
    	      this.displayName = defaults.displayName;
    	      this.etag = defaults.etag;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder allowUpdates(@Nullable Boolean allowUpdates) {
            this.allowUpdates = allowUpdates;
            return this;
        }
        @CustomType.Setter
        public Builder defaultVersion(@Nullable String defaultVersion) {
            this.defaultVersion = defaultVersion;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder etag(String etag) {
            this.etag = Objects.requireNonNull(etag);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetApplicationResult build() {
            final var o = new GetApplicationResult();
            o.allowUpdates = allowUpdates;
            o.defaultVersion = defaultVersion;
            o.displayName = displayName;
            o.etag = etag;
            o.id = id;
            o.name = name;
            o.type = type;
            return o;
        }
    }
}
