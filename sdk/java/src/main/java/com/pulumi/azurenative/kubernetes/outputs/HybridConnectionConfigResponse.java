// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.kubernetes.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class HybridConnectionConfigResponse {
    /**
     * @return Timestamp when this token will be expired.
     * 
     */
    private Double expirationTime;
    /**
     * @return Name of the connection
     * 
     */
    private String hybridConnectionName;
    /**
     * @return Name of the relay.
     * 
     */
    private String relay;
    /**
     * @return Sender access token
     * 
     */
    private String token;

    private HybridConnectionConfigResponse() {}
    /**
     * @return Timestamp when this token will be expired.
     * 
     */
    public Double expirationTime() {
        return this.expirationTime;
    }
    /**
     * @return Name of the connection
     * 
     */
    public String hybridConnectionName() {
        return this.hybridConnectionName;
    }
    /**
     * @return Name of the relay.
     * 
     */
    public String relay() {
        return this.relay;
    }
    /**
     * @return Sender access token
     * 
     */
    public String token() {
        return this.token;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(HybridConnectionConfigResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Double expirationTime;
        private String hybridConnectionName;
        private String relay;
        private String token;
        public Builder() {}
        public Builder(HybridConnectionConfigResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.expirationTime = defaults.expirationTime;
    	      this.hybridConnectionName = defaults.hybridConnectionName;
    	      this.relay = defaults.relay;
    	      this.token = defaults.token;
        }

        @CustomType.Setter
        public Builder expirationTime(Double expirationTime) {
            this.expirationTime = Objects.requireNonNull(expirationTime);
            return this;
        }
        @CustomType.Setter
        public Builder hybridConnectionName(String hybridConnectionName) {
            this.hybridConnectionName = Objects.requireNonNull(hybridConnectionName);
            return this;
        }
        @CustomType.Setter
        public Builder relay(String relay) {
            this.relay = Objects.requireNonNull(relay);
            return this;
        }
        @CustomType.Setter
        public Builder token(String token) {
            this.token = Objects.requireNonNull(token);
            return this;
        }
        public HybridConnectionConfigResponse build() {
            final var o = new HybridConnectionConfigResponse();
            o.expirationTime = expirationTime;
            o.hybridConnectionName = hybridConnectionName;
            o.relay = relay;
            o.token = token;
            return o;
        }
    }
}
