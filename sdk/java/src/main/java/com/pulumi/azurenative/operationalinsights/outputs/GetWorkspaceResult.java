// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.operationalinsights.outputs;

import com.pulumi.azurenative.operationalinsights.outputs.PrivateLinkScopedResourceResponse;
import com.pulumi.azurenative.operationalinsights.outputs.WorkspaceCappingResponse;
import com.pulumi.azurenative.operationalinsights.outputs.WorkspaceFeaturesResponse;
import com.pulumi.azurenative.operationalinsights.outputs.WorkspaceSkuResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetWorkspaceResult {
    /**
     * @return Workspace creation date.
     * 
     */
    private String createdDate;
    /**
     * @return This is a read-only property. Represents the ID associated with the workspace.
     * 
     */
    private String customerId;
    /**
     * @return The ETag of the workspace.
     * 
     */
    private @Nullable String eTag;
    /**
     * @return Workspace features.
     * 
     */
    private @Nullable WorkspaceFeaturesResponse features;
    /**
     * @return Indicates whether customer managed storage is mandatory for query management.
     * 
     */
    private @Nullable Boolean forceCmkForQuery;
    /**
     * @return Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    private String id;
    /**
     * @return The geo-location where the resource lives
     * 
     */
    private String location;
    /**
     * @return Workspace modification date.
     * 
     */
    private String modifiedDate;
    /**
     * @return The name of the resource
     * 
     */
    private String name;
    /**
     * @return List of linked private link scope resources.
     * 
     */
    private List<PrivateLinkScopedResourceResponse> privateLinkScopedResources;
    /**
     * @return The provisioning state of the workspace.
     * 
     */
    private @Nullable String provisioningState;
    /**
     * @return The network access type for accessing Log Analytics ingestion.
     * 
     */
    private @Nullable String publicNetworkAccessForIngestion;
    /**
     * @return The network access type for accessing Log Analytics query.
     * 
     */
    private @Nullable String publicNetworkAccessForQuery;
    /**
     * @return The workspace data retention in days. Allowed values are per pricing plan. See pricing tiers documentation for details.
     * 
     */
    private @Nullable Integer retentionInDays;
    /**
     * @return The SKU of the workspace.
     * 
     */
    private @Nullable WorkspaceSkuResponse sku;
    /**
     * @return Resource tags.
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    private String type;
    /**
     * @return The daily volume cap for ingestion.
     * 
     */
    private @Nullable WorkspaceCappingResponse workspaceCapping;

    private GetWorkspaceResult() {}
    /**
     * @return Workspace creation date.
     * 
     */
    public String createdDate() {
        return this.createdDate;
    }
    /**
     * @return This is a read-only property. Represents the ID associated with the workspace.
     * 
     */
    public String customerId() {
        return this.customerId;
    }
    /**
     * @return The ETag of the workspace.
     * 
     */
    public Optional<String> eTag() {
        return Optional.ofNullable(this.eTag);
    }
    /**
     * @return Workspace features.
     * 
     */
    public Optional<WorkspaceFeaturesResponse> features() {
        return Optional.ofNullable(this.features);
    }
    /**
     * @return Indicates whether customer managed storage is mandatory for query management.
     * 
     */
    public Optional<Boolean> forceCmkForQuery() {
        return Optional.ofNullable(this.forceCmkForQuery);
    }
    /**
     * @return Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The geo-location where the resource lives
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return Workspace modification date.
     * 
     */
    public String modifiedDate() {
        return this.modifiedDate;
    }
    /**
     * @return The name of the resource
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return List of linked private link scope resources.
     * 
     */
    public List<PrivateLinkScopedResourceResponse> privateLinkScopedResources() {
        return this.privateLinkScopedResources;
    }
    /**
     * @return The provisioning state of the workspace.
     * 
     */
    public Optional<String> provisioningState() {
        return Optional.ofNullable(this.provisioningState);
    }
    /**
     * @return The network access type for accessing Log Analytics ingestion.
     * 
     */
    public Optional<String> publicNetworkAccessForIngestion() {
        return Optional.ofNullable(this.publicNetworkAccessForIngestion);
    }
    /**
     * @return The network access type for accessing Log Analytics query.
     * 
     */
    public Optional<String> publicNetworkAccessForQuery() {
        return Optional.ofNullable(this.publicNetworkAccessForQuery);
    }
    /**
     * @return The workspace data retention in days. Allowed values are per pricing plan. See pricing tiers documentation for details.
     * 
     */
    public Optional<Integer> retentionInDays() {
        return Optional.ofNullable(this.retentionInDays);
    }
    /**
     * @return The SKU of the workspace.
     * 
     */
    public Optional<WorkspaceSkuResponse> sku() {
        return Optional.ofNullable(this.sku);
    }
    /**
     * @return Resource tags.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return The daily volume cap for ingestion.
     * 
     */
    public Optional<WorkspaceCappingResponse> workspaceCapping() {
        return Optional.ofNullable(this.workspaceCapping);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWorkspaceResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String createdDate;
        private String customerId;
        private @Nullable String eTag;
        private @Nullable WorkspaceFeaturesResponse features;
        private @Nullable Boolean forceCmkForQuery;
        private String id;
        private String location;
        private String modifiedDate;
        private String name;
        private List<PrivateLinkScopedResourceResponse> privateLinkScopedResources;
        private @Nullable String provisioningState;
        private @Nullable String publicNetworkAccessForIngestion;
        private @Nullable String publicNetworkAccessForQuery;
        private @Nullable Integer retentionInDays;
        private @Nullable WorkspaceSkuResponse sku;
        private @Nullable Map<String,String> tags;
        private String type;
        private @Nullable WorkspaceCappingResponse workspaceCapping;
        public Builder() {}
        public Builder(GetWorkspaceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createdDate = defaults.createdDate;
    	      this.customerId = defaults.customerId;
    	      this.eTag = defaults.eTag;
    	      this.features = defaults.features;
    	      this.forceCmkForQuery = defaults.forceCmkForQuery;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.modifiedDate = defaults.modifiedDate;
    	      this.name = defaults.name;
    	      this.privateLinkScopedResources = defaults.privateLinkScopedResources;
    	      this.provisioningState = defaults.provisioningState;
    	      this.publicNetworkAccessForIngestion = defaults.publicNetworkAccessForIngestion;
    	      this.publicNetworkAccessForQuery = defaults.publicNetworkAccessForQuery;
    	      this.retentionInDays = defaults.retentionInDays;
    	      this.sku = defaults.sku;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
    	      this.workspaceCapping = defaults.workspaceCapping;
        }

        @CustomType.Setter
        public Builder createdDate(String createdDate) {
            this.createdDate = Objects.requireNonNull(createdDate);
            return this;
        }
        @CustomType.Setter
        public Builder customerId(String customerId) {
            this.customerId = Objects.requireNonNull(customerId);
            return this;
        }
        @CustomType.Setter
        public Builder eTag(@Nullable String eTag) {
            this.eTag = eTag;
            return this;
        }
        @CustomType.Setter
        public Builder features(@Nullable WorkspaceFeaturesResponse features) {
            this.features = features;
            return this;
        }
        @CustomType.Setter
        public Builder forceCmkForQuery(@Nullable Boolean forceCmkForQuery) {
            this.forceCmkForQuery = forceCmkForQuery;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        @CustomType.Setter
        public Builder modifiedDate(String modifiedDate) {
            this.modifiedDate = Objects.requireNonNull(modifiedDate);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder privateLinkScopedResources(List<PrivateLinkScopedResourceResponse> privateLinkScopedResources) {
            this.privateLinkScopedResources = Objects.requireNonNull(privateLinkScopedResources);
            return this;
        }
        public Builder privateLinkScopedResources(PrivateLinkScopedResourceResponse... privateLinkScopedResources) {
            return privateLinkScopedResources(List.of(privateLinkScopedResources));
        }
        @CustomType.Setter
        public Builder provisioningState(@Nullable String provisioningState) {
            this.provisioningState = provisioningState;
            return this;
        }
        @CustomType.Setter
        public Builder publicNetworkAccessForIngestion(@Nullable String publicNetworkAccessForIngestion) {
            this.publicNetworkAccessForIngestion = publicNetworkAccessForIngestion;
            return this;
        }
        @CustomType.Setter
        public Builder publicNetworkAccessForQuery(@Nullable String publicNetworkAccessForQuery) {
            this.publicNetworkAccessForQuery = publicNetworkAccessForQuery;
            return this;
        }
        @CustomType.Setter
        public Builder retentionInDays(@Nullable Integer retentionInDays) {
            this.retentionInDays = retentionInDays;
            return this;
        }
        @CustomType.Setter
        public Builder sku(@Nullable WorkspaceSkuResponse sku) {
            this.sku = sku;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder workspaceCapping(@Nullable WorkspaceCappingResponse workspaceCapping) {
            this.workspaceCapping = workspaceCapping;
            return this;
        }
        public GetWorkspaceResult build() {
            final var o = new GetWorkspaceResult();
            o.createdDate = createdDate;
            o.customerId = customerId;
            o.eTag = eTag;
            o.features = features;
            o.forceCmkForQuery = forceCmkForQuery;
            o.id = id;
            o.location = location;
            o.modifiedDate = modifiedDate;
            o.name = name;
            o.privateLinkScopedResources = privateLinkScopedResources;
            o.provisioningState = provisioningState;
            o.publicNetworkAccessForIngestion = publicNetworkAccessForIngestion;
            o.publicNetworkAccessForQuery = publicNetworkAccessForQuery;
            o.retentionInDays = retentionInDays;
            o.sku = sku;
            o.tags = tags;
            o.type = type;
            o.workspaceCapping = workspaceCapping;
            return o;
        }
    }
}
