// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.workloads.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class FileshareProfileResponse {
    /**
     * @return File share name
     * 
     */
    private String shareName;
    /**
     * @return File share size in GB
     * 
     */
    private @Nullable Double shareSizeInGB;
    /**
     * @return Share type
     * 
     */
    private String shareType;
    /**
     * @return File share storage resource id
     * 
     */
    private String storageResourceId;
    /**
     * @return File share backing storage type
     * 
     */
    private String storageType;

    private FileshareProfileResponse() {}
    /**
     * @return File share name
     * 
     */
    public String shareName() {
        return this.shareName;
    }
    /**
     * @return File share size in GB
     * 
     */
    public Optional<Double> shareSizeInGB() {
        return Optional.ofNullable(this.shareSizeInGB);
    }
    /**
     * @return Share type
     * 
     */
    public String shareType() {
        return this.shareType;
    }
    /**
     * @return File share storage resource id
     * 
     */
    public String storageResourceId() {
        return this.storageResourceId;
    }
    /**
     * @return File share backing storage type
     * 
     */
    public String storageType() {
        return this.storageType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FileshareProfileResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String shareName;
        private @Nullable Double shareSizeInGB;
        private String shareType;
        private String storageResourceId;
        private String storageType;
        public Builder() {}
        public Builder(FileshareProfileResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.shareName = defaults.shareName;
    	      this.shareSizeInGB = defaults.shareSizeInGB;
    	      this.shareType = defaults.shareType;
    	      this.storageResourceId = defaults.storageResourceId;
    	      this.storageType = defaults.storageType;
        }

        @CustomType.Setter
        public Builder shareName(String shareName) {
            this.shareName = Objects.requireNonNull(shareName);
            return this;
        }
        @CustomType.Setter
        public Builder shareSizeInGB(@Nullable Double shareSizeInGB) {
            this.shareSizeInGB = shareSizeInGB;
            return this;
        }
        @CustomType.Setter
        public Builder shareType(String shareType) {
            this.shareType = Objects.requireNonNull(shareType);
            return this;
        }
        @CustomType.Setter
        public Builder storageResourceId(String storageResourceId) {
            this.storageResourceId = Objects.requireNonNull(storageResourceId);
            return this;
        }
        @CustomType.Setter
        public Builder storageType(String storageType) {
            this.storageType = Objects.requireNonNull(storageType);
            return this;
        }
        public FileshareProfileResponse build() {
            final var o = new FileshareProfileResponse();
            o.shareName = shareName;
            o.shareSizeInGB = shareSizeInGB;
            o.shareType = shareType;
            o.storageResourceId = storageResourceId;
            o.storageType = storageType;
            return o;
        }
    }
}
