// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datamigration.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class MigrationValidationDatabaseSummaryResultResponse {
    /**
     * @return Validation end time
     * 
     */
    private String endedOn;
    /**
     * @return Result identifier
     * 
     */
    private String id;
    /**
     * @return Migration Identifier
     * 
     */
    private String migrationId;
    /**
     * @return Name of the source database
     * 
     */
    private String sourceDatabaseName;
    /**
     * @return Validation start time
     * 
     */
    private String startedOn;
    /**
     * @return Current status of validation at the database level
     * 
     */
    private String status;
    /**
     * @return Name of the target database
     * 
     */
    private String targetDatabaseName;

    private MigrationValidationDatabaseSummaryResultResponse() {}
    /**
     * @return Validation end time
     * 
     */
    public String endedOn() {
        return this.endedOn;
    }
    /**
     * @return Result identifier
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Migration Identifier
     * 
     */
    public String migrationId() {
        return this.migrationId;
    }
    /**
     * @return Name of the source database
     * 
     */
    public String sourceDatabaseName() {
        return this.sourceDatabaseName;
    }
    /**
     * @return Validation start time
     * 
     */
    public String startedOn() {
        return this.startedOn;
    }
    /**
     * @return Current status of validation at the database level
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return Name of the target database
     * 
     */
    public String targetDatabaseName() {
        return this.targetDatabaseName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MigrationValidationDatabaseSummaryResultResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String endedOn;
        private String id;
        private String migrationId;
        private String sourceDatabaseName;
        private String startedOn;
        private String status;
        private String targetDatabaseName;
        public Builder() {}
        public Builder(MigrationValidationDatabaseSummaryResultResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.endedOn = defaults.endedOn;
    	      this.id = defaults.id;
    	      this.migrationId = defaults.migrationId;
    	      this.sourceDatabaseName = defaults.sourceDatabaseName;
    	      this.startedOn = defaults.startedOn;
    	      this.status = defaults.status;
    	      this.targetDatabaseName = defaults.targetDatabaseName;
        }

        @CustomType.Setter
        public Builder endedOn(String endedOn) {
            this.endedOn = Objects.requireNonNull(endedOn);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder migrationId(String migrationId) {
            this.migrationId = Objects.requireNonNull(migrationId);
            return this;
        }
        @CustomType.Setter
        public Builder sourceDatabaseName(String sourceDatabaseName) {
            this.sourceDatabaseName = Objects.requireNonNull(sourceDatabaseName);
            return this;
        }
        @CustomType.Setter
        public Builder startedOn(String startedOn) {
            this.startedOn = Objects.requireNonNull(startedOn);
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        @CustomType.Setter
        public Builder targetDatabaseName(String targetDatabaseName) {
            this.targetDatabaseName = Objects.requireNonNull(targetDatabaseName);
            return this;
        }
        public MigrationValidationDatabaseSummaryResultResponse build() {
            final var o = new MigrationValidationDatabaseSummaryResultResponse();
            o.endedOn = endedOn;
            o.id = id;
            o.migrationId = migrationId;
            o.sourceDatabaseName = sourceDatabaseName;
            o.startedOn = startedOn;
            o.status = status;
            o.targetDatabaseName = targetDatabaseName;
            return o;
        }
    }
}
