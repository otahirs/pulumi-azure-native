// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.customerinsights.outputs;

import com.pulumi.azurenative.customerinsights.outputs.CanonicalProfileDefinitionResponse;
import com.pulumi.azurenative.customerinsights.outputs.PredictionDistributionDefinitionResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetPredictionTrainingResultsResult {
    /**
     * @return Canonical profiles.
     * 
     */
    private List<CanonicalProfileDefinitionResponse> canonicalProfiles;
    /**
     * @return Prediction distribution.
     * 
     */
    private PredictionDistributionDefinitionResponse predictionDistribution;
    /**
     * @return Instance count of the primary profile.
     * 
     */
    private Double primaryProfileInstanceCount;
    /**
     * @return Score name.
     * 
     */
    private String scoreName;
    /**
     * @return The hub name.
     * 
     */
    private String tenantId;

    private GetPredictionTrainingResultsResult() {}
    /**
     * @return Canonical profiles.
     * 
     */
    public List<CanonicalProfileDefinitionResponse> canonicalProfiles() {
        return this.canonicalProfiles;
    }
    /**
     * @return Prediction distribution.
     * 
     */
    public PredictionDistributionDefinitionResponse predictionDistribution() {
        return this.predictionDistribution;
    }
    /**
     * @return Instance count of the primary profile.
     * 
     */
    public Double primaryProfileInstanceCount() {
        return this.primaryProfileInstanceCount;
    }
    /**
     * @return Score name.
     * 
     */
    public String scoreName() {
        return this.scoreName;
    }
    /**
     * @return The hub name.
     * 
     */
    public String tenantId() {
        return this.tenantId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPredictionTrainingResultsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<CanonicalProfileDefinitionResponse> canonicalProfiles;
        private PredictionDistributionDefinitionResponse predictionDistribution;
        private Double primaryProfileInstanceCount;
        private String scoreName;
        private String tenantId;
        public Builder() {}
        public Builder(GetPredictionTrainingResultsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.canonicalProfiles = defaults.canonicalProfiles;
    	      this.predictionDistribution = defaults.predictionDistribution;
    	      this.primaryProfileInstanceCount = defaults.primaryProfileInstanceCount;
    	      this.scoreName = defaults.scoreName;
    	      this.tenantId = defaults.tenantId;
        }

        @CustomType.Setter
        public Builder canonicalProfiles(List<CanonicalProfileDefinitionResponse> canonicalProfiles) {
            this.canonicalProfiles = Objects.requireNonNull(canonicalProfiles);
            return this;
        }
        public Builder canonicalProfiles(CanonicalProfileDefinitionResponse... canonicalProfiles) {
            return canonicalProfiles(List.of(canonicalProfiles));
        }
        @CustomType.Setter
        public Builder predictionDistribution(PredictionDistributionDefinitionResponse predictionDistribution) {
            this.predictionDistribution = Objects.requireNonNull(predictionDistribution);
            return this;
        }
        @CustomType.Setter
        public Builder primaryProfileInstanceCount(Double primaryProfileInstanceCount) {
            this.primaryProfileInstanceCount = Objects.requireNonNull(primaryProfileInstanceCount);
            return this;
        }
        @CustomType.Setter
        public Builder scoreName(String scoreName) {
            this.scoreName = Objects.requireNonNull(scoreName);
            return this;
        }
        @CustomType.Setter
        public Builder tenantId(String tenantId) {
            this.tenantId = Objects.requireNonNull(tenantId);
            return this;
        }
        public GetPredictionTrainingResultsResult build() {
            final var o = new GetPredictionTrainingResultsResult();
            o.canonicalProfiles = canonicalProfiles;
            o.predictionDistribution = predictionDistribution;
            o.primaryProfileInstanceCount = primaryProfileInstanceCount;
            o.scoreName = scoreName;
            o.tenantId = tenantId;
            return o;
        }
    }
}
