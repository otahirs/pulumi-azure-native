// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.devops.outputs;

import com.pulumi.azurenative.devops.outputs.BootstrapConfigurationResponse;
import com.pulumi.azurenative.devops.outputs.SystemDataResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetPipelineResult {
    /**
     * @return Configuration used to bootstrap the Pipeline.
     * 
     */
    private BootstrapConfigurationResponse bootstrapConfiguration;
    /**
     * @return Resource Id
     * 
     */
    private String id;
    /**
     * @return Resource Location
     * 
     */
    private @Nullable String location;
    /**
     * @return Resource Name
     * 
     */
    private String name;
    /**
     * @return Unique identifier of the Pipeline
     * 
     */
    private Integer pipelineId;
    /**
     * @return Specifies which CI/CD provider to use. Valid options are &#39;azurePipeline&#39;, &#39;githubWorkflow&#39;.
     * 
     */
    private String pipelineType;
    /**
     * @return The system metadata pertaining to this resource.
     * 
     */
    private SystemDataResponse systemData;
    /**
     * @return Resource Tags
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return Resource Type
     * 
     */
    private String type;

    private GetPipelineResult() {}
    /**
     * @return Configuration used to bootstrap the Pipeline.
     * 
     */
    public BootstrapConfigurationResponse bootstrapConfiguration() {
        return this.bootstrapConfiguration;
    }
    /**
     * @return Resource Id
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Resource Location
     * 
     */
    public Optional<String> location() {
        return Optional.ofNullable(this.location);
    }
    /**
     * @return Resource Name
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Unique identifier of the Pipeline
     * 
     */
    public Integer pipelineId() {
        return this.pipelineId;
    }
    /**
     * @return Specifies which CI/CD provider to use. Valid options are &#39;azurePipeline&#39;, &#39;githubWorkflow&#39;.
     * 
     */
    public String pipelineType() {
        return this.pipelineType;
    }
    /**
     * @return The system metadata pertaining to this resource.
     * 
     */
    public SystemDataResponse systemData() {
        return this.systemData;
    }
    /**
     * @return Resource Tags
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return Resource Type
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPipelineResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private BootstrapConfigurationResponse bootstrapConfiguration;
        private String id;
        private @Nullable String location;
        private String name;
        private Integer pipelineId;
        private String pipelineType;
        private SystemDataResponse systemData;
        private @Nullable Map<String,String> tags;
        private String type;
        public Builder() {}
        public Builder(GetPipelineResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bootstrapConfiguration = defaults.bootstrapConfiguration;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.pipelineId = defaults.pipelineId;
    	      this.pipelineType = defaults.pipelineType;
    	      this.systemData = defaults.systemData;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder bootstrapConfiguration(BootstrapConfigurationResponse bootstrapConfiguration) {
            this.bootstrapConfiguration = Objects.requireNonNull(bootstrapConfiguration);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder location(@Nullable String location) {
            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder pipelineId(Integer pipelineId) {
            this.pipelineId = Objects.requireNonNull(pipelineId);
            return this;
        }
        @CustomType.Setter
        public Builder pipelineType(String pipelineType) {
            this.pipelineType = Objects.requireNonNull(pipelineType);
            return this;
        }
        @CustomType.Setter
        public Builder systemData(SystemDataResponse systemData) {
            this.systemData = Objects.requireNonNull(systemData);
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetPipelineResult build() {
            final var o = new GetPipelineResult();
            o.bootstrapConfiguration = bootstrapConfiguration;
            o.id = id;
            o.location = location;
            o.name = name;
            o.pipelineId = pipelineId;
            o.pipelineType = pipelineType;
            o.systemData = systemData;
            o.tags = tags;
            o.type = type;
            return o;
        }
    }
}
