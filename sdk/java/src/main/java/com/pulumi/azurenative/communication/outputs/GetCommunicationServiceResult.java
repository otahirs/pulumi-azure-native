// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.communication.outputs;

import com.pulumi.azurenative.communication.outputs.SystemDataResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetCommunicationServiceResult {
    /**
     * @return The location where the communication service stores its data at rest.
     * 
     */
    private String dataLocation;
    /**
     * @return FQDN of the CommunicationService instance.
     * 
     */
    private String hostName;
    /**
     * @return Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    private String id;
    /**
     * @return The immutable resource Id of the communication service.
     * 
     */
    private String immutableResourceId;
    /**
     * @return The Azure location where the CommunicationService is running.
     * 
     */
    private @Nullable String location;
    /**
     * @return The name of the resource
     * 
     */
    private String name;
    /**
     * @return Resource ID of an Azure Notification Hub linked to this resource.
     * 
     */
    private String notificationHubId;
    /**
     * @return Provisioning state of the resource.
     * 
     */
    private String provisioningState;
    /**
     * @return Metadata pertaining to creation and last modification of the resource.
     * 
     */
    private SystemDataResponse systemData;
    /**
     * @return Tags of the service which is a list of key value pairs that describe the resource.
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    private String type;
    /**
     * @return Version of the CommunicationService resource. Probably you need the same or higher version of client SDKs.
     * 
     */
    private String version;

    private GetCommunicationServiceResult() {}
    /**
     * @return The location where the communication service stores its data at rest.
     * 
     */
    public String dataLocation() {
        return this.dataLocation;
    }
    /**
     * @return FQDN of the CommunicationService instance.
     * 
     */
    public String hostName() {
        return this.hostName;
    }
    /**
     * @return Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The immutable resource Id of the communication service.
     * 
     */
    public String immutableResourceId() {
        return this.immutableResourceId;
    }
    /**
     * @return The Azure location where the CommunicationService is running.
     * 
     */
    public Optional<String> location() {
        return Optional.ofNullable(this.location);
    }
    /**
     * @return The name of the resource
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Resource ID of an Azure Notification Hub linked to this resource.
     * 
     */
    public String notificationHubId() {
        return this.notificationHubId;
    }
    /**
     * @return Provisioning state of the resource.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * @return Metadata pertaining to creation and last modification of the resource.
     * 
     */
    public SystemDataResponse systemData() {
        return this.systemData;
    }
    /**
     * @return Tags of the service which is a list of key value pairs that describe the resource.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return Version of the CommunicationService resource. Probably you need the same or higher version of client SDKs.
     * 
     */
    public String version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCommunicationServiceResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String dataLocation;
        private String hostName;
        private String id;
        private String immutableResourceId;
        private @Nullable String location;
        private String name;
        private String notificationHubId;
        private String provisioningState;
        private SystemDataResponse systemData;
        private @Nullable Map<String,String> tags;
        private String type;
        private String version;
        public Builder() {}
        public Builder(GetCommunicationServiceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dataLocation = defaults.dataLocation;
    	      this.hostName = defaults.hostName;
    	      this.id = defaults.id;
    	      this.immutableResourceId = defaults.immutableResourceId;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.notificationHubId = defaults.notificationHubId;
    	      this.provisioningState = defaults.provisioningState;
    	      this.systemData = defaults.systemData;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder dataLocation(String dataLocation) {
            this.dataLocation = Objects.requireNonNull(dataLocation);
            return this;
        }
        @CustomType.Setter
        public Builder hostName(String hostName) {
            this.hostName = Objects.requireNonNull(hostName);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder immutableResourceId(String immutableResourceId) {
            this.immutableResourceId = Objects.requireNonNull(immutableResourceId);
            return this;
        }
        @CustomType.Setter
        public Builder location(@Nullable String location) {
            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder notificationHubId(String notificationHubId) {
            this.notificationHubId = Objects.requireNonNull(notificationHubId);
            return this;
        }
        @CustomType.Setter
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        @CustomType.Setter
        public Builder systemData(SystemDataResponse systemData) {
            this.systemData = Objects.requireNonNull(systemData);
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder version(String version) {
            this.version = Objects.requireNonNull(version);
            return this;
        }
        public GetCommunicationServiceResult build() {
            final var o = new GetCommunicationServiceResult();
            o.dataLocation = dataLocation;
            o.hostName = hostName;
            o.id = id;
            o.immutableResourceId = immutableResourceId;
            o.location = location;
            o.name = name;
            o.notificationHubId = notificationHubId;
            o.provisioningState = provisioningState;
            o.systemData = systemData;
            o.tags = tags;
            o.type = type;
            o.version = version;
            return o;
        }
    }
}
