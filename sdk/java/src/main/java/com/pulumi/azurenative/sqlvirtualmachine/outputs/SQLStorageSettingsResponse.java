// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.sqlvirtualmachine.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SQLStorageSettingsResponse {
    /**
     * @return SQL Server default file path
     * 
     */
    private @Nullable String defaultFilePath;
    /**
     * @return Logical Unit Numbers for the disks.
     * 
     */
    private @Nullable List<Integer> luns;

    private SQLStorageSettingsResponse() {}
    /**
     * @return SQL Server default file path
     * 
     */
    public Optional<String> defaultFilePath() {
        return Optional.ofNullable(this.defaultFilePath);
    }
    /**
     * @return Logical Unit Numbers for the disks.
     * 
     */
    public List<Integer> luns() {
        return this.luns == null ? List.of() : this.luns;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SQLStorageSettingsResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String defaultFilePath;
        private @Nullable List<Integer> luns;
        public Builder() {}
        public Builder(SQLStorageSettingsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.defaultFilePath = defaults.defaultFilePath;
    	      this.luns = defaults.luns;
        }

        @CustomType.Setter
        public Builder defaultFilePath(@Nullable String defaultFilePath) {
            this.defaultFilePath = defaultFilePath;
            return this;
        }
        @CustomType.Setter
        public Builder luns(@Nullable List<Integer> luns) {
            this.luns = luns;
            return this;
        }
        public Builder luns(Integer... luns) {
            return luns(List.of(luns));
        }
        public SQLStorageSettingsResponse build() {
            final var o = new SQLStorageSettingsResponse();
            o.defaultFilePath = defaultFilePath;
            o.luns = luns;
            return o;
        }
    }
}
