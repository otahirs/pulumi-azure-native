// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.testbase.outputs;

import com.pulumi.azurenative.testbase.outputs.BillingHubGetUsageRequestResponse;
import com.pulumi.azurenative.testbase.outputs.BillingHubPackageUsageResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetBillingHubServiceUsageResult {
    private @Nullable BillingHubGetUsageRequestResponse nextRequest;
    private @Nullable List<BillingHubPackageUsageResponse> packageUsageEntries;
    private @Nullable Double totalCharges;
    private @Nullable Double totalUsedBillableHours;
    private @Nullable Double totalUsedFreeHours;

    private GetBillingHubServiceUsageResult() {}
    public Optional<BillingHubGetUsageRequestResponse> nextRequest() {
        return Optional.ofNullable(this.nextRequest);
    }
    public List<BillingHubPackageUsageResponse> packageUsageEntries() {
        return this.packageUsageEntries == null ? List.of() : this.packageUsageEntries;
    }
    public Optional<Double> totalCharges() {
        return Optional.ofNullable(this.totalCharges);
    }
    public Optional<Double> totalUsedBillableHours() {
        return Optional.ofNullable(this.totalUsedBillableHours);
    }
    public Optional<Double> totalUsedFreeHours() {
        return Optional.ofNullable(this.totalUsedFreeHours);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBillingHubServiceUsageResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable BillingHubGetUsageRequestResponse nextRequest;
        private @Nullable List<BillingHubPackageUsageResponse> packageUsageEntries;
        private @Nullable Double totalCharges;
        private @Nullable Double totalUsedBillableHours;
        private @Nullable Double totalUsedFreeHours;
        public Builder() {}
        public Builder(GetBillingHubServiceUsageResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.nextRequest = defaults.nextRequest;
    	      this.packageUsageEntries = defaults.packageUsageEntries;
    	      this.totalCharges = defaults.totalCharges;
    	      this.totalUsedBillableHours = defaults.totalUsedBillableHours;
    	      this.totalUsedFreeHours = defaults.totalUsedFreeHours;
        }

        @CustomType.Setter
        public Builder nextRequest(@Nullable BillingHubGetUsageRequestResponse nextRequest) {
            this.nextRequest = nextRequest;
            return this;
        }
        @CustomType.Setter
        public Builder packageUsageEntries(@Nullable List<BillingHubPackageUsageResponse> packageUsageEntries) {
            this.packageUsageEntries = packageUsageEntries;
            return this;
        }
        public Builder packageUsageEntries(BillingHubPackageUsageResponse... packageUsageEntries) {
            return packageUsageEntries(List.of(packageUsageEntries));
        }
        @CustomType.Setter
        public Builder totalCharges(@Nullable Double totalCharges) {
            this.totalCharges = totalCharges;
            return this;
        }
        @CustomType.Setter
        public Builder totalUsedBillableHours(@Nullable Double totalUsedBillableHours) {
            this.totalUsedBillableHours = totalUsedBillableHours;
            return this;
        }
        @CustomType.Setter
        public Builder totalUsedFreeHours(@Nullable Double totalUsedFreeHours) {
            this.totalUsedFreeHours = totalUsedFreeHours;
            return this;
        }
        public GetBillingHubServiceUsageResult build() {
            final var o = new GetBillingHubServiceUsageResult();
            o.nextRequest = nextRequest;
            o.packageUsageEntries = packageUsageEntries;
            o.totalCharges = totalCharges;
            o.totalUsedBillableHours = totalUsedBillableHours;
            o.totalUsedFreeHours = totalUsedFreeHours;
            return o;
        }
    }
}
