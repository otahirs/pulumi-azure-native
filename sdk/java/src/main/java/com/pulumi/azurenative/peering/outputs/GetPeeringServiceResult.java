// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.peering.outputs;

import com.pulumi.azurenative.peering.outputs.PeeringServiceSkuResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetPeeringServiceResult {
    /**
     * @return The ID of the resource.
     * 
     */
    private String id;
    /**
     * @return The location of the resource.
     * 
     */
    private String location;
    /**
     * @return The name of the resource.
     * 
     */
    private String name;
    /**
     * @return The location (state/province) of the customer.
     * 
     */
    private @Nullable String peeringServiceLocation;
    /**
     * @return The name of the service provider.
     * 
     */
    private @Nullable String peeringServiceProvider;
    /**
     * @return The backup peering (Microsoft/service provider) location to be used for customer traffic.
     * 
     */
    private @Nullable String providerBackupPeeringLocation;
    /**
     * @return The primary peering (Microsoft/service provider) location to be used for customer traffic.
     * 
     */
    private @Nullable String providerPrimaryPeeringLocation;
    /**
     * @return The provisioning state of the resource.
     * 
     */
    private String provisioningState;
    /**
     * @return The SKU that defines the type of the peering service.
     * 
     */
    private @Nullable PeeringServiceSkuResponse sku;
    /**
     * @return The resource tags.
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return The type of the resource.
     * 
     */
    private String type;

    private GetPeeringServiceResult() {}
    /**
     * @return The ID of the resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The location of the resource.
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return The name of the resource.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The location (state/province) of the customer.
     * 
     */
    public Optional<String> peeringServiceLocation() {
        return Optional.ofNullable(this.peeringServiceLocation);
    }
    /**
     * @return The name of the service provider.
     * 
     */
    public Optional<String> peeringServiceProvider() {
        return Optional.ofNullable(this.peeringServiceProvider);
    }
    /**
     * @return The backup peering (Microsoft/service provider) location to be used for customer traffic.
     * 
     */
    public Optional<String> providerBackupPeeringLocation() {
        return Optional.ofNullable(this.providerBackupPeeringLocation);
    }
    /**
     * @return The primary peering (Microsoft/service provider) location to be used for customer traffic.
     * 
     */
    public Optional<String> providerPrimaryPeeringLocation() {
        return Optional.ofNullable(this.providerPrimaryPeeringLocation);
    }
    /**
     * @return The provisioning state of the resource.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * @return The SKU that defines the type of the peering service.
     * 
     */
    public Optional<PeeringServiceSkuResponse> sku() {
        return Optional.ofNullable(this.sku);
    }
    /**
     * @return The resource tags.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return The type of the resource.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPeeringServiceResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private String location;
        private String name;
        private @Nullable String peeringServiceLocation;
        private @Nullable String peeringServiceProvider;
        private @Nullable String providerBackupPeeringLocation;
        private @Nullable String providerPrimaryPeeringLocation;
        private String provisioningState;
        private @Nullable PeeringServiceSkuResponse sku;
        private @Nullable Map<String,String> tags;
        private String type;
        public Builder() {}
        public Builder(GetPeeringServiceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.peeringServiceLocation = defaults.peeringServiceLocation;
    	      this.peeringServiceProvider = defaults.peeringServiceProvider;
    	      this.providerBackupPeeringLocation = defaults.providerBackupPeeringLocation;
    	      this.providerPrimaryPeeringLocation = defaults.providerPrimaryPeeringLocation;
    	      this.provisioningState = defaults.provisioningState;
    	      this.sku = defaults.sku;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder peeringServiceLocation(@Nullable String peeringServiceLocation) {
            this.peeringServiceLocation = peeringServiceLocation;
            return this;
        }
        @CustomType.Setter
        public Builder peeringServiceProvider(@Nullable String peeringServiceProvider) {
            this.peeringServiceProvider = peeringServiceProvider;
            return this;
        }
        @CustomType.Setter
        public Builder providerBackupPeeringLocation(@Nullable String providerBackupPeeringLocation) {
            this.providerBackupPeeringLocation = providerBackupPeeringLocation;
            return this;
        }
        @CustomType.Setter
        public Builder providerPrimaryPeeringLocation(@Nullable String providerPrimaryPeeringLocation) {
            this.providerPrimaryPeeringLocation = providerPrimaryPeeringLocation;
            return this;
        }
        @CustomType.Setter
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        @CustomType.Setter
        public Builder sku(@Nullable PeeringServiceSkuResponse sku) {
            this.sku = sku;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetPeeringServiceResult build() {
            final var o = new GetPeeringServiceResult();
            o.id = id;
            o.location = location;
            o.name = name;
            o.peeringServiceLocation = peeringServiceLocation;
            o.peeringServiceProvider = peeringServiceProvider;
            o.providerBackupPeeringLocation = providerBackupPeeringLocation;
            o.providerPrimaryPeeringLocation = providerPrimaryPeeringLocation;
            o.provisioningState = provisioningState;
            o.sku = sku;
            o.tags = tags;
            o.type = type;
            return o;
        }
    }
}
