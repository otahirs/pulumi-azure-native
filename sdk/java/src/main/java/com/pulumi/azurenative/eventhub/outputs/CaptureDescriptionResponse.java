// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.eventhub.outputs;

import com.pulumi.azurenative.eventhub.outputs.DestinationResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class CaptureDescriptionResponse {
    /**
     * @return Properties of Destination where capture will be stored. (Storage Account, Blob Names)
     * 
     */
    private @Nullable DestinationResponse destination;
    /**
     * @return A value that indicates whether capture description is enabled.
     * 
     */
    private @Nullable Boolean enabled;
    /**
     * @return Enumerates the possible values for the encoding format of capture description. Note: &#39;AvroDeflate&#39; will be deprecated in New API Version
     * 
     */
    private @Nullable String encoding;
    /**
     * @return The time window allows you to set the frequency with which the capture to Azure Blobs will happen, value should between 60 to 900 seconds
     * 
     */
    private @Nullable Integer intervalInSeconds;
    /**
     * @return The size window defines the amount of data built up in your Event Hub before an capture operation, value should be between 10485760 to 524288000 bytes
     * 
     */
    private @Nullable Integer sizeLimitInBytes;
    /**
     * @return A value that indicates whether to Skip Empty Archives
     * 
     */
    private @Nullable Boolean skipEmptyArchives;

    private CaptureDescriptionResponse() {}
    /**
     * @return Properties of Destination where capture will be stored. (Storage Account, Blob Names)
     * 
     */
    public Optional<DestinationResponse> destination() {
        return Optional.ofNullable(this.destination);
    }
    /**
     * @return A value that indicates whether capture description is enabled.
     * 
     */
    public Optional<Boolean> enabled() {
        return Optional.ofNullable(this.enabled);
    }
    /**
     * @return Enumerates the possible values for the encoding format of capture description. Note: &#39;AvroDeflate&#39; will be deprecated in New API Version
     * 
     */
    public Optional<String> encoding() {
        return Optional.ofNullable(this.encoding);
    }
    /**
     * @return The time window allows you to set the frequency with which the capture to Azure Blobs will happen, value should between 60 to 900 seconds
     * 
     */
    public Optional<Integer> intervalInSeconds() {
        return Optional.ofNullable(this.intervalInSeconds);
    }
    /**
     * @return The size window defines the amount of data built up in your Event Hub before an capture operation, value should be between 10485760 to 524288000 bytes
     * 
     */
    public Optional<Integer> sizeLimitInBytes() {
        return Optional.ofNullable(this.sizeLimitInBytes);
    }
    /**
     * @return A value that indicates whether to Skip Empty Archives
     * 
     */
    public Optional<Boolean> skipEmptyArchives() {
        return Optional.ofNullable(this.skipEmptyArchives);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CaptureDescriptionResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable DestinationResponse destination;
        private @Nullable Boolean enabled;
        private @Nullable String encoding;
        private @Nullable Integer intervalInSeconds;
        private @Nullable Integer sizeLimitInBytes;
        private @Nullable Boolean skipEmptyArchives;
        public Builder() {}
        public Builder(CaptureDescriptionResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.destination = defaults.destination;
    	      this.enabled = defaults.enabled;
    	      this.encoding = defaults.encoding;
    	      this.intervalInSeconds = defaults.intervalInSeconds;
    	      this.sizeLimitInBytes = defaults.sizeLimitInBytes;
    	      this.skipEmptyArchives = defaults.skipEmptyArchives;
        }

        @CustomType.Setter
        public Builder destination(@Nullable DestinationResponse destination) {
            this.destination = destination;
            return this;
        }
        @CustomType.Setter
        public Builder enabled(@Nullable Boolean enabled) {
            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder encoding(@Nullable String encoding) {
            this.encoding = encoding;
            return this;
        }
        @CustomType.Setter
        public Builder intervalInSeconds(@Nullable Integer intervalInSeconds) {
            this.intervalInSeconds = intervalInSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder sizeLimitInBytes(@Nullable Integer sizeLimitInBytes) {
            this.sizeLimitInBytes = sizeLimitInBytes;
            return this;
        }
        @CustomType.Setter
        public Builder skipEmptyArchives(@Nullable Boolean skipEmptyArchives) {
            this.skipEmptyArchives = skipEmptyArchives;
            return this;
        }
        public CaptureDescriptionResponse build() {
            final var o = new CaptureDescriptionResponse();
            o.destination = destination;
            o.enabled = enabled;
            o.encoding = encoding;
            o.intervalInSeconds = intervalInSeconds;
            o.sizeLimitInBytes = sizeLimitInBytes;
            o.skipEmptyArchives = skipEmptyArchives;
            return o;
        }
    }
}
