// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.streamanalytics.outputs;

import com.pulumi.azurenative.streamanalytics.outputs.AvroSerializationResponse;
import com.pulumi.azurenative.streamanalytics.outputs.BlobStreamInputDataSourceResponse;
import com.pulumi.azurenative.streamanalytics.outputs.CsvSerializationResponse;
import com.pulumi.azurenative.streamanalytics.outputs.DiagnosticsResponse;
import com.pulumi.azurenative.streamanalytics.outputs.EventHubStreamInputDataSourceResponse;
import com.pulumi.azurenative.streamanalytics.outputs.IoTHubStreamInputDataSourceResponse;
import com.pulumi.azurenative.streamanalytics.outputs.JsonSerializationResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class StreamInputPropertiesResponse {
    /**
     * @return Describes an input data source that contains stream data. Required on PUT (CreateOrReplace) requests.
     * 
     */
    private @Nullable Object datasource;
    /**
     * @return Describes conditions applicable to the Input, Output, or the job overall, that warrant customer attention.
     * 
     */
    private DiagnosticsResponse diagnostics;
    /**
     * @return The current entity tag for the input. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
     * 
     */
    private String etag;
    /**
     * @return Describes how data from an input is serialized or how data is serialized when written to an output. Required on PUT (CreateOrReplace) requests.
     * 
     */
    private @Nullable Object serialization;
    /**
     * @return Indicates whether the input is a source of reference data or stream data. Required on PUT (CreateOrReplace) requests.
     * Expected value is &#39;Stream&#39;.
     * 
     */
    private String type;

    private StreamInputPropertiesResponse() {}
    /**
     * @return Describes an input data source that contains stream data. Required on PUT (CreateOrReplace) requests.
     * 
     */
    public Optional<Object> datasource() {
        return Optional.ofNullable(this.datasource);
    }
    /**
     * @return Describes conditions applicable to the Input, Output, or the job overall, that warrant customer attention.
     * 
     */
    public DiagnosticsResponse diagnostics() {
        return this.diagnostics;
    }
    /**
     * @return The current entity tag for the input. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
     * 
     */
    public String etag() {
        return this.etag;
    }
    /**
     * @return Describes how data from an input is serialized or how data is serialized when written to an output. Required on PUT (CreateOrReplace) requests.
     * 
     */
    public Optional<Object> serialization() {
        return Optional.ofNullable(this.serialization);
    }
    /**
     * @return Indicates whether the input is a source of reference data or stream data. Required on PUT (CreateOrReplace) requests.
     * Expected value is &#39;Stream&#39;.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(StreamInputPropertiesResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Object datasource;
        private DiagnosticsResponse diagnostics;
        private String etag;
        private @Nullable Object serialization;
        private String type;
        public Builder() {}
        public Builder(StreamInputPropertiesResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.datasource = defaults.datasource;
    	      this.diagnostics = defaults.diagnostics;
    	      this.etag = defaults.etag;
    	      this.serialization = defaults.serialization;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder datasource(@Nullable Object datasource) {
            this.datasource = datasource;
            return this;
        }
        @CustomType.Setter
        public Builder diagnostics(DiagnosticsResponse diagnostics) {
            this.diagnostics = Objects.requireNonNull(diagnostics);
            return this;
        }
        @CustomType.Setter
        public Builder etag(String etag) {
            this.etag = Objects.requireNonNull(etag);
            return this;
        }
        @CustomType.Setter
        public Builder serialization(@Nullable Object serialization) {
            this.serialization = serialization;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public StreamInputPropertiesResponse build() {
            final var o = new StreamInputPropertiesResponse();
            o.datasource = datasource;
            o.diagnostics = diagnostics;
            o.etag = etag;
            o.serialization = serialization;
            o.type = type;
            return o;
        }
    }
}
