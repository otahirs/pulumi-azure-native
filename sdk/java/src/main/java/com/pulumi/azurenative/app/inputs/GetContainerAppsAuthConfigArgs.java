// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.app.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetContainerAppsAuthConfigArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetContainerAppsAuthConfigArgs Empty = new GetContainerAppsAuthConfigArgs();

    /**
     * Name of the Container App AuthConfig.
     * 
     */
    @Import(name="authConfigName", required=true)
    private Output<String> authConfigName;

    /**
     * @return Name of the Container App AuthConfig.
     * 
     */
    public Output<String> authConfigName() {
        return this.authConfigName;
    }

    /**
     * Name of the Container App.
     * 
     */
    @Import(name="containerAppName", required=true)
    private Output<String> containerAppName;

    /**
     * @return Name of the Container App.
     * 
     */
    public Output<String> containerAppName() {
        return this.containerAppName;
    }

    /**
     * The name of the resource group. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group. The name is case insensitive.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    private GetContainerAppsAuthConfigArgs() {}

    private GetContainerAppsAuthConfigArgs(GetContainerAppsAuthConfigArgs $) {
        this.authConfigName = $.authConfigName;
        this.containerAppName = $.containerAppName;
        this.resourceGroupName = $.resourceGroupName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetContainerAppsAuthConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetContainerAppsAuthConfigArgs $;

        public Builder() {
            $ = new GetContainerAppsAuthConfigArgs();
        }

        public Builder(GetContainerAppsAuthConfigArgs defaults) {
            $ = new GetContainerAppsAuthConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param authConfigName Name of the Container App AuthConfig.
         * 
         * @return builder
         * 
         */
        public Builder authConfigName(Output<String> authConfigName) {
            $.authConfigName = authConfigName;
            return this;
        }

        /**
         * @param authConfigName Name of the Container App AuthConfig.
         * 
         * @return builder
         * 
         */
        public Builder authConfigName(String authConfigName) {
            return authConfigName(Output.of(authConfigName));
        }

        /**
         * @param containerAppName Name of the Container App.
         * 
         * @return builder
         * 
         */
        public Builder containerAppName(Output<String> containerAppName) {
            $.containerAppName = containerAppName;
            return this;
        }

        /**
         * @param containerAppName Name of the Container App.
         * 
         * @return builder
         * 
         */
        public Builder containerAppName(String containerAppName) {
            return containerAppName(Output.of(containerAppName));
        }

        /**
         * @param resourceGroupName The name of the resource group. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public GetContainerAppsAuthConfigArgs build() {
            $.authConfigName = Objects.requireNonNull($.authConfigName, "expected parameter 'authConfigName' to be non-null");
            $.containerAppName = Objects.requireNonNull($.containerAppName, "expected parameter 'containerAppName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
