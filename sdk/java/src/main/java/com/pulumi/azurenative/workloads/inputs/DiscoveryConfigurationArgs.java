// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.workloads.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Discovery Details.
 * 
 */
public final class DiscoveryConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final DiscoveryConfigurationArgs Empty = new DiscoveryConfigurationArgs();

    /**
     * The virtual machine ID of the Central Server.
     * 
     */
    @Import(name="centralServerVmId")
    private @Nullable Output<String> centralServerVmId;

    /**
     * @return The virtual machine ID of the Central Server.
     * 
     */
    public Optional<Output<String>> centralServerVmId() {
        return Optional.ofNullable(this.centralServerVmId);
    }

    /**
     * The configuration Type.
     * Expected value is &#39;Discovery&#39;.
     * 
     */
    @Import(name="configurationType", required=true)
    private Output<String> configurationType;

    /**
     * @return The configuration Type.
     * Expected value is &#39;Discovery&#39;.
     * 
     */
    public Output<String> configurationType() {
        return this.configurationType;
    }

    private DiscoveryConfigurationArgs() {}

    private DiscoveryConfigurationArgs(DiscoveryConfigurationArgs $) {
        this.centralServerVmId = $.centralServerVmId;
        this.configurationType = $.configurationType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DiscoveryConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DiscoveryConfigurationArgs $;

        public Builder() {
            $ = new DiscoveryConfigurationArgs();
        }

        public Builder(DiscoveryConfigurationArgs defaults) {
            $ = new DiscoveryConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param centralServerVmId The virtual machine ID of the Central Server.
         * 
         * @return builder
         * 
         */
        public Builder centralServerVmId(@Nullable Output<String> centralServerVmId) {
            $.centralServerVmId = centralServerVmId;
            return this;
        }

        /**
         * @param centralServerVmId The virtual machine ID of the Central Server.
         * 
         * @return builder
         * 
         */
        public Builder centralServerVmId(String centralServerVmId) {
            return centralServerVmId(Output.of(centralServerVmId));
        }

        /**
         * @param configurationType The configuration Type.
         * Expected value is &#39;Discovery&#39;.
         * 
         * @return builder
         * 
         */
        public Builder configurationType(Output<String> configurationType) {
            $.configurationType = configurationType;
            return this;
        }

        /**
         * @param configurationType The configuration Type.
         * Expected value is &#39;Discovery&#39;.
         * 
         * @return builder
         * 
         */
        public Builder configurationType(String configurationType) {
            return configurationType(Output.of(configurationType));
        }

        public DiscoveryConfigurationArgs build() {
            $.configurationType = Codegen.stringProp("configurationType").output().arg($.configurationType).require();
            return $;
        }
    }

}
