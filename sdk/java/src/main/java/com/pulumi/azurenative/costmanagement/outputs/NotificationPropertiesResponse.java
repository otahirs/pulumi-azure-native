// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.costmanagement.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class NotificationPropertiesResponse {
    /**
     * @return Optional message to be added in the email. Length is limited to 250 characters.
     * 
     */
    private @Nullable String message;
    /**
     * @return Subject of the email. Length is limited to 70 characters.
     * 
     */
    private String subject;
    /**
     * @return Array of email addresses.
     * 
     */
    private List<String> to;

    private NotificationPropertiesResponse() {}
    /**
     * @return Optional message to be added in the email. Length is limited to 250 characters.
     * 
     */
    public Optional<String> message() {
        return Optional.ofNullable(this.message);
    }
    /**
     * @return Subject of the email. Length is limited to 70 characters.
     * 
     */
    public String subject() {
        return this.subject;
    }
    /**
     * @return Array of email addresses.
     * 
     */
    public List<String> to() {
        return this.to;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NotificationPropertiesResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String message;
        private String subject;
        private List<String> to;
        public Builder() {}
        public Builder(NotificationPropertiesResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.message = defaults.message;
    	      this.subject = defaults.subject;
    	      this.to = defaults.to;
        }

        @CustomType.Setter
        public Builder message(@Nullable String message) {
            this.message = message;
            return this;
        }
        @CustomType.Setter
        public Builder subject(String subject) {
            this.subject = Objects.requireNonNull(subject);
            return this;
        }
        @CustomType.Setter
        public Builder to(List<String> to) {
            this.to = Objects.requireNonNull(to);
            return this;
        }
        public Builder to(String... to) {
            return to(List.of(to));
        }
        public NotificationPropertiesResponse build() {
            final var o = new NotificationPropertiesResponse();
            o.message = message;
            o.subject = subject;
            o.to = to;
            return o;
        }
    }
}
