// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.storagepool.outputs;

import com.pulumi.azurenative.storagepool.outputs.TargetPortalGroupResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetIscsiTargetResult {
    /**
     * @return Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    private String id;
    /**
     * @return The name of the resource
     * 
     */
    private String name;
    /**
     * @return State of the operation on the resource.
     * 
     */
    private String provisioningState;
    /**
     * @return Operational status of the iSCSI target.
     * 
     */
    private String status;
    /**
     * @return iSCSI target IQN (iSCSI Qualified Name); example: &#34;iqn.2005-03.org.iscsi:server&#34;.
     * 
     */
    private String targetIqn;
    /**
     * @return List of iSCSI target portal groups. Can have 1 portal group at most.
     * 
     */
    private List<TargetPortalGroupResponse> tpgs;
    /**
     * @return The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
     * 
     */
    private String type;

    private GetIscsiTargetResult() {}
    /**
     * @return Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The name of the resource
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return State of the operation on the resource.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * @return Operational status of the iSCSI target.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return iSCSI target IQN (iSCSI Qualified Name); example: &#34;iqn.2005-03.org.iscsi:server&#34;.
     * 
     */
    public String targetIqn() {
        return this.targetIqn;
    }
    /**
     * @return List of iSCSI target portal groups. Can have 1 portal group at most.
     * 
     */
    public List<TargetPortalGroupResponse> tpgs() {
        return this.tpgs;
    }
    /**
     * @return The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetIscsiTargetResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private String name;
        private String provisioningState;
        private String status;
        private String targetIqn;
        private List<TargetPortalGroupResponse> tpgs;
        private String type;
        public Builder() {}
        public Builder(GetIscsiTargetResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.provisioningState = defaults.provisioningState;
    	      this.status = defaults.status;
    	      this.targetIqn = defaults.targetIqn;
    	      this.tpgs = defaults.tpgs;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        @CustomType.Setter
        public Builder targetIqn(String targetIqn) {
            this.targetIqn = Objects.requireNonNull(targetIqn);
            return this;
        }
        @CustomType.Setter
        public Builder tpgs(List<TargetPortalGroupResponse> tpgs) {
            this.tpgs = Objects.requireNonNull(tpgs);
            return this;
        }
        public Builder tpgs(TargetPortalGroupResponse... tpgs) {
            return tpgs(List.of(tpgs));
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetIscsiTargetResult build() {
            final var o = new GetIscsiTargetResult();
            o.id = id;
            o.name = name;
            o.provisioningState = provisioningState;
            o.status = status;
            o.targetIqn = targetIqn;
            o.tpgs = tpgs;
            o.type = type;
            return o;
        }
    }
}
