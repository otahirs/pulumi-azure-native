// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetRouteResult {
    /**
     * @return The destination CIDR to which the route applies.
     * 
     */
    private @Nullable String addressPrefix;
    /**
     * @return A unique read-only string that changes whenever the resource is updated.
     * 
     */
    private String etag;
    /**
     * @return A value indicating whether this route overrides overlapping BGP routes regardless of LPM.
     * 
     */
    private @Nullable Boolean hasBgpOverride;
    /**
     * @return Resource ID.
     * 
     */
    private @Nullable String id;
    /**
     * @return The name of the resource that is unique within a resource group. This name can be used to access the resource.
     * 
     */
    private @Nullable String name;
    /**
     * @return The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
     * 
     */
    private @Nullable String nextHopIpAddress;
    /**
     * @return The type of Azure hop the packet should be sent to.
     * 
     */
    private String nextHopType;
    /**
     * @return The provisioning state of the route resource.
     * 
     */
    private String provisioningState;
    /**
     * @return The type of the resource.
     * 
     */
    private @Nullable String type;

    private GetRouteResult() {}
    /**
     * @return The destination CIDR to which the route applies.
     * 
     */
    public Optional<String> addressPrefix() {
        return Optional.ofNullable(this.addressPrefix);
    }
    /**
     * @return A unique read-only string that changes whenever the resource is updated.
     * 
     */
    public String etag() {
        return this.etag;
    }
    /**
     * @return A value indicating whether this route overrides overlapping BGP routes regardless of LPM.
     * 
     */
    public Optional<Boolean> hasBgpOverride() {
        return Optional.ofNullable(this.hasBgpOverride);
    }
    /**
     * @return Resource ID.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The name of the resource that is unique within a resource group. This name can be used to access the resource.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
     * 
     */
    public Optional<String> nextHopIpAddress() {
        return Optional.ofNullable(this.nextHopIpAddress);
    }
    /**
     * @return The type of Azure hop the packet should be sent to.
     * 
     */
    public String nextHopType() {
        return this.nextHopType;
    }
    /**
     * @return The provisioning state of the route resource.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * @return The type of the resource.
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRouteResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String addressPrefix;
        private String etag;
        private @Nullable Boolean hasBgpOverride;
        private @Nullable String id;
        private @Nullable String name;
        private @Nullable String nextHopIpAddress;
        private String nextHopType;
        private String provisioningState;
        private @Nullable String type;
        public Builder() {}
        public Builder(GetRouteResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.addressPrefix = defaults.addressPrefix;
    	      this.etag = defaults.etag;
    	      this.hasBgpOverride = defaults.hasBgpOverride;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.nextHopIpAddress = defaults.nextHopIpAddress;
    	      this.nextHopType = defaults.nextHopType;
    	      this.provisioningState = defaults.provisioningState;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder addressPrefix(@Nullable String addressPrefix) {
            this.addressPrefix = addressPrefix;
            return this;
        }
        @CustomType.Setter
        public Builder etag(String etag) {
            this.etag = Objects.requireNonNull(etag);
            return this;
        }
        @CustomType.Setter
        public Builder hasBgpOverride(@Nullable Boolean hasBgpOverride) {
            this.hasBgpOverride = hasBgpOverride;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder nextHopIpAddress(@Nullable String nextHopIpAddress) {
            this.nextHopIpAddress = nextHopIpAddress;
            return this;
        }
        @CustomType.Setter
        public Builder nextHopType(String nextHopType) {
            this.nextHopType = Objects.requireNonNull(nextHopType);
            return this;
        }
        @CustomType.Setter
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {
            this.type = type;
            return this;
        }
        public GetRouteResult build() {
            final var o = new GetRouteResult();
            o.addressPrefix = addressPrefix;
            o.etag = etag;
            o.hasBgpOverride = hasBgpOverride;
            o.id = id;
            o.name = name;
            o.nextHopIpAddress = nextHopIpAddress;
            o.nextHopType = nextHopType;
            o.provisioningState = provisioningState;
            o.type = type;
            return o;
        }
    }
}
