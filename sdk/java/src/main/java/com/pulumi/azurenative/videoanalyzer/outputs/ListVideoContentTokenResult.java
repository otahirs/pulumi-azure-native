// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.videoanalyzer.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class ListVideoContentTokenResult {
    /**
     * @return The content token expiration date in ISO8601 format (eg. 2021-01-01T00:00:00Z).
     * 
     */
    private String expirationDate;
    /**
     * @return The content token value to be added to the video content URL as the value for the &#34;token&#34; query string parameter. The token is specific to a single video.
     * 
     */
    private String token;

    private ListVideoContentTokenResult() {}
    /**
     * @return The content token expiration date in ISO8601 format (eg. 2021-01-01T00:00:00Z).
     * 
     */
    public String expirationDate() {
        return this.expirationDate;
    }
    /**
     * @return The content token value to be added to the video content URL as the value for the &#34;token&#34; query string parameter. The token is specific to a single video.
     * 
     */
    public String token() {
        return this.token;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ListVideoContentTokenResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String expirationDate;
        private String token;
        public Builder() {}
        public Builder(ListVideoContentTokenResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.expirationDate = defaults.expirationDate;
    	      this.token = defaults.token;
        }

        @CustomType.Setter
        public Builder expirationDate(String expirationDate) {
            this.expirationDate = Objects.requireNonNull(expirationDate);
            return this;
        }
        @CustomType.Setter
        public Builder token(String token) {
            this.token = Objects.requireNonNull(token);
            return this;
        }
        public ListVideoContentTokenResult build() {
            final var o = new ListVideoContentTokenResult();
            o.expirationDate = expirationDate;
            o.token = token;
            return o;
        }
    }
}
