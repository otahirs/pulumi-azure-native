// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.compute.outputs;

import com.pulumi.azurenative.compute.outputs.SubResourceResponse;
import com.pulumi.azurenative.compute.outputs.VirtualMachineNetworkInterfaceDnsSettingsConfigurationResponse;
import com.pulumi.azurenative.compute.outputs.VirtualMachineNetworkInterfaceIPConfigurationResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class VirtualMachineNetworkInterfaceConfigurationResponse {
    /**
     * @return Specify what happens to the network interface when the VM is deleted
     * 
     */
    private @Nullable String deleteOption;
    /**
     * @return The dns settings to be applied on the network interfaces.
     * 
     */
    private @Nullable VirtualMachineNetworkInterfaceDnsSettingsConfigurationResponse dnsSettings;
    private @Nullable SubResourceResponse dscpConfiguration;
    /**
     * @return Specifies whether the network interface is accelerated networking-enabled.
     * 
     */
    private @Nullable Boolean enableAcceleratedNetworking;
    /**
     * @return Specifies whether the network interface is FPGA networking-enabled.
     * 
     */
    private @Nullable Boolean enableFpga;
    /**
     * @return Whether IP forwarding enabled on this NIC.
     * 
     */
    private @Nullable Boolean enableIPForwarding;
    /**
     * @return Specifies the IP configurations of the network interface.
     * 
     */
    private List<VirtualMachineNetworkInterfaceIPConfigurationResponse> ipConfigurations;
    /**
     * @return The network interface configuration name.
     * 
     */
    private String name;
    /**
     * @return The network security group.
     * 
     */
    private @Nullable SubResourceResponse networkSecurityGroup;
    /**
     * @return Specifies the primary network interface in case the virtual machine has more than 1 network interface.
     * 
     */
    private @Nullable Boolean primary;

    private VirtualMachineNetworkInterfaceConfigurationResponse() {}
    /**
     * @return Specify what happens to the network interface when the VM is deleted
     * 
     */
    public Optional<String> deleteOption() {
        return Optional.ofNullable(this.deleteOption);
    }
    /**
     * @return The dns settings to be applied on the network interfaces.
     * 
     */
    public Optional<VirtualMachineNetworkInterfaceDnsSettingsConfigurationResponse> dnsSettings() {
        return Optional.ofNullable(this.dnsSettings);
    }
    public Optional<SubResourceResponse> dscpConfiguration() {
        return Optional.ofNullable(this.dscpConfiguration);
    }
    /**
     * @return Specifies whether the network interface is accelerated networking-enabled.
     * 
     */
    public Optional<Boolean> enableAcceleratedNetworking() {
        return Optional.ofNullable(this.enableAcceleratedNetworking);
    }
    /**
     * @return Specifies whether the network interface is FPGA networking-enabled.
     * 
     */
    public Optional<Boolean> enableFpga() {
        return Optional.ofNullable(this.enableFpga);
    }
    /**
     * @return Whether IP forwarding enabled on this NIC.
     * 
     */
    public Optional<Boolean> enableIPForwarding() {
        return Optional.ofNullable(this.enableIPForwarding);
    }
    /**
     * @return Specifies the IP configurations of the network interface.
     * 
     */
    public List<VirtualMachineNetworkInterfaceIPConfigurationResponse> ipConfigurations() {
        return this.ipConfigurations;
    }
    /**
     * @return The network interface configuration name.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The network security group.
     * 
     */
    public Optional<SubResourceResponse> networkSecurityGroup() {
        return Optional.ofNullable(this.networkSecurityGroup);
    }
    /**
     * @return Specifies the primary network interface in case the virtual machine has more than 1 network interface.
     * 
     */
    public Optional<Boolean> primary() {
        return Optional.ofNullable(this.primary);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VirtualMachineNetworkInterfaceConfigurationResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String deleteOption;
        private @Nullable VirtualMachineNetworkInterfaceDnsSettingsConfigurationResponse dnsSettings;
        private @Nullable SubResourceResponse dscpConfiguration;
        private @Nullable Boolean enableAcceleratedNetworking;
        private @Nullable Boolean enableFpga;
        private @Nullable Boolean enableIPForwarding;
        private List<VirtualMachineNetworkInterfaceIPConfigurationResponse> ipConfigurations;
        private String name;
        private @Nullable SubResourceResponse networkSecurityGroup;
        private @Nullable Boolean primary;
        public Builder() {}
        public Builder(VirtualMachineNetworkInterfaceConfigurationResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.deleteOption = defaults.deleteOption;
    	      this.dnsSettings = defaults.dnsSettings;
    	      this.dscpConfiguration = defaults.dscpConfiguration;
    	      this.enableAcceleratedNetworking = defaults.enableAcceleratedNetworking;
    	      this.enableFpga = defaults.enableFpga;
    	      this.enableIPForwarding = defaults.enableIPForwarding;
    	      this.ipConfigurations = defaults.ipConfigurations;
    	      this.name = defaults.name;
    	      this.networkSecurityGroup = defaults.networkSecurityGroup;
    	      this.primary = defaults.primary;
        }

        @CustomType.Setter
        public Builder deleteOption(@Nullable String deleteOption) {
            this.deleteOption = deleteOption;
            return this;
        }
        @CustomType.Setter
        public Builder dnsSettings(@Nullable VirtualMachineNetworkInterfaceDnsSettingsConfigurationResponse dnsSettings) {
            this.dnsSettings = dnsSettings;
            return this;
        }
        @CustomType.Setter
        public Builder dscpConfiguration(@Nullable SubResourceResponse dscpConfiguration) {
            this.dscpConfiguration = dscpConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder enableAcceleratedNetworking(@Nullable Boolean enableAcceleratedNetworking) {
            this.enableAcceleratedNetworking = enableAcceleratedNetworking;
            return this;
        }
        @CustomType.Setter
        public Builder enableFpga(@Nullable Boolean enableFpga) {
            this.enableFpga = enableFpga;
            return this;
        }
        @CustomType.Setter
        public Builder enableIPForwarding(@Nullable Boolean enableIPForwarding) {
            this.enableIPForwarding = enableIPForwarding;
            return this;
        }
        @CustomType.Setter
        public Builder ipConfigurations(List<VirtualMachineNetworkInterfaceIPConfigurationResponse> ipConfigurations) {
            this.ipConfigurations = Objects.requireNonNull(ipConfigurations);
            return this;
        }
        public Builder ipConfigurations(VirtualMachineNetworkInterfaceIPConfigurationResponse... ipConfigurations) {
            return ipConfigurations(List.of(ipConfigurations));
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder networkSecurityGroup(@Nullable SubResourceResponse networkSecurityGroup) {
            this.networkSecurityGroup = networkSecurityGroup;
            return this;
        }
        @CustomType.Setter
        public Builder primary(@Nullable Boolean primary) {
            this.primary = primary;
            return this;
        }
        public VirtualMachineNetworkInterfaceConfigurationResponse build() {
            final var o = new VirtualMachineNetworkInterfaceConfigurationResponse();
            o.deleteOption = deleteOption;
            o.dnsSettings = dnsSettings;
            o.dscpConfiguration = dscpConfiguration;
            o.enableAcceleratedNetworking = enableAcceleratedNetworking;
            o.enableFpga = enableFpga;
            o.enableIPForwarding = enableIPForwarding;
            o.ipConfigurations = ipConfigurations;
            o.name = name;
            o.networkSecurityGroup = networkSecurityGroup;
            o.primary = primary;
            return o;
        }
    }
}
