// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.delegatednetwork.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetControllerDetailsResult {
    /**
     * @return dnc application id should be used by customer to authenticate with dnc gateway.
     * 
     */
    private String dncAppId;
    /**
     * @return dnc endpoint url that customers can use to connect to
     * 
     */
    private String dncEndpoint;
    /**
     * @return tenant id of dnc application id
     * 
     */
    private String dncTenantId;
    /**
     * @return An identifier that represents the resource.
     * 
     */
    private String id;
    /**
     * @return Location of the resource.
     * 
     */
    private @Nullable String location;
    /**
     * @return The name of the resource.
     * 
     */
    private String name;
    /**
     * @return The current state of dnc controller resource.
     * 
     */
    private String provisioningState;
    /**
     * @return Resource guid.
     * 
     */
    private String resourceGuid;
    /**
     * @return The resource tags.
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return The type of resource.
     * 
     */
    private String type;

    private GetControllerDetailsResult() {}
    /**
     * @return dnc application id should be used by customer to authenticate with dnc gateway.
     * 
     */
    public String dncAppId() {
        return this.dncAppId;
    }
    /**
     * @return dnc endpoint url that customers can use to connect to
     * 
     */
    public String dncEndpoint() {
        return this.dncEndpoint;
    }
    /**
     * @return tenant id of dnc application id
     * 
     */
    public String dncTenantId() {
        return this.dncTenantId;
    }
    /**
     * @return An identifier that represents the resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Location of the resource.
     * 
     */
    public Optional<String> location() {
        return Optional.ofNullable(this.location);
    }
    /**
     * @return The name of the resource.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The current state of dnc controller resource.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * @return Resource guid.
     * 
     */
    public String resourceGuid() {
        return this.resourceGuid;
    }
    /**
     * @return The resource tags.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return The type of resource.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetControllerDetailsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String dncAppId;
        private String dncEndpoint;
        private String dncTenantId;
        private String id;
        private @Nullable String location;
        private String name;
        private String provisioningState;
        private String resourceGuid;
        private @Nullable Map<String,String> tags;
        private String type;
        public Builder() {}
        public Builder(GetControllerDetailsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dncAppId = defaults.dncAppId;
    	      this.dncEndpoint = defaults.dncEndpoint;
    	      this.dncTenantId = defaults.dncTenantId;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.provisioningState = defaults.provisioningState;
    	      this.resourceGuid = defaults.resourceGuid;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder dncAppId(String dncAppId) {
            this.dncAppId = Objects.requireNonNull(dncAppId);
            return this;
        }
        @CustomType.Setter
        public Builder dncEndpoint(String dncEndpoint) {
            this.dncEndpoint = Objects.requireNonNull(dncEndpoint);
            return this;
        }
        @CustomType.Setter
        public Builder dncTenantId(String dncTenantId) {
            this.dncTenantId = Objects.requireNonNull(dncTenantId);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder location(@Nullable String location) {
            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        @CustomType.Setter
        public Builder resourceGuid(String resourceGuid) {
            this.resourceGuid = Objects.requireNonNull(resourceGuid);
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetControllerDetailsResult build() {
            final var o = new GetControllerDetailsResult();
            o.dncAppId = dncAppId;
            o.dncEndpoint = dncEndpoint;
            o.dncTenantId = dncTenantId;
            o.id = id;
            o.location = location;
            o.name = name;
            o.provisioningState = provisioningState;
            o.resourceGuid = resourceGuid;
            o.tags = tags;
            o.type = type;
            return o;
        }
    }
}
