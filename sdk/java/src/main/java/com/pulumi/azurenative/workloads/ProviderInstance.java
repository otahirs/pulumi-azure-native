// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.workloads;

import com.pulumi.azurenative.Utilities;
import com.pulumi.azurenative.workloads.ProviderInstanceArgs;
import com.pulumi.azurenative.workloads.outputs.DB2ProviderInstancePropertiesResponse;
import com.pulumi.azurenative.workloads.outputs.HanaDbProviderInstancePropertiesResponse;
import com.pulumi.azurenative.workloads.outputs.MsSqlServerProviderInstancePropertiesResponse;
import com.pulumi.azurenative.workloads.outputs.PrometheusHaClusterProviderInstancePropertiesResponse;
import com.pulumi.azurenative.workloads.outputs.PrometheusOSProviderInstancePropertiesResponse;
import com.pulumi.azurenative.workloads.outputs.ProviderInstancePropertiesResponseErrors;
import com.pulumi.azurenative.workloads.outputs.SapNetWeaverProviderInstancePropertiesResponse;
import com.pulumi.azurenative.workloads.outputs.SystemDataResponse;
import com.pulumi.azurenative.workloads.outputs.UserAssignedServiceIdentityResponse;
import com.pulumi.core.Alias;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * A provider instance associated with SAP monitor.
 * API Version: 2021-12-01-preview.
 * 
 * ## Example Usage
 * ### Create a Db2 provider
 * 
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var providerInstance = new ProviderInstance(&#34;providerInstance&#34;, ProviderInstanceArgs.builder()        
 *             .monitorName(&#34;mySapMonitor&#34;)
 *             .providerInstanceName(&#34;myProviderInstance&#34;)
 *             .providerSettings(Map.ofEntries(
 *                 Map.entry(&#34;dbName&#34;, &#34;dbName&#34;),
 *                 Map.entry(&#34;dbPassword&#34;, &#34;password&#34;),
 *                 Map.entry(&#34;dbPasswordUri&#34;, &#34;&#34;),
 *                 Map.entry(&#34;dbPort&#34;, &#34;dbPort&#34;),
 *                 Map.entry(&#34;dbUsername&#34;, &#34;username&#34;),
 *                 Map.entry(&#34;hostname&#34;, &#34;hostname&#34;),
 *                 Map.entry(&#34;providerType&#34;, &#34;Db2&#34;),
 *                 Map.entry(&#34;sapSid&#34;, &#34;SID&#34;)
 *             ))
 *             .resourceGroupName(&#34;myResourceGroup&#34;)
 *             .build());
 * 
 *     }
 * }
 * 
 * ```
 * ### Create a MsSqlServer provider
 * 
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var providerInstance = new ProviderInstance(&#34;providerInstance&#34;, ProviderInstanceArgs.builder()        
 *             .monitorName(&#34;mySapMonitor&#34;)
 *             .providerInstanceName(&#34;myProviderInstance&#34;)
 *             .providerSettings(Map.ofEntries(
 *                 Map.entry(&#34;dbPassword&#34;, &#34;****&#34;),
 *                 Map.entry(&#34;dbPasswordUri&#34;, &#34;&#34;),
 *                 Map.entry(&#34;dbPort&#34;, &#34;5912&#34;),
 *                 Map.entry(&#34;dbUsername&#34;, &#34;user&#34;),
 *                 Map.entry(&#34;hostname&#34;, &#34;hostname&#34;),
 *                 Map.entry(&#34;providerType&#34;, &#34;MsSqlServer&#34;),
 *                 Map.entry(&#34;sapSid&#34;, &#34;sid&#34;)
 *             ))
 *             .resourceGroupName(&#34;myResourceGroup&#34;)
 *             .build());
 * 
 *     }
 * }
 * 
 * ```
 * ### Create a OS provider
 * 
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var providerInstance = new ProviderInstance(&#34;providerInstance&#34;, ProviderInstanceArgs.builder()        
 *             .monitorName(&#34;mySapMonitor&#34;)
 *             .providerInstanceName(&#34;myProviderInstance&#34;)
 *             .providerSettings(Map.ofEntries(
 *                 Map.entry(&#34;prometheusUrl&#34;, &#34;http://192.168.0.0:9090/metrics&#34;),
 *                 Map.entry(&#34;providerType&#34;, &#34;PrometheusOS&#34;)
 *             ))
 *             .resourceGroupName(&#34;myResourceGroup&#34;)
 *             .build());
 * 
 *     }
 * }
 * 
 * ```
 * ### Create a PrometheusHaCluster provider
 * 
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var providerInstance = new ProviderInstance(&#34;providerInstance&#34;, ProviderInstanceArgs.builder()        
 *             .monitorName(&#34;mySapMonitor&#34;)
 *             .providerInstanceName(&#34;myProviderInstance&#34;)
 *             .providerSettings(Map.ofEntries(
 *                 Map.entry(&#34;clusterName&#34;, &#34;clusterName&#34;),
 *                 Map.entry(&#34;hostname&#34;, &#34;hostname&#34;),
 *                 Map.entry(&#34;prometheusUrl&#34;, &#34;http://192.168.0.0:9090/metrics&#34;),
 *                 Map.entry(&#34;providerType&#34;, &#34;PrometheusHaCluster&#34;),
 *                 Map.entry(&#34;sid&#34;, &#34;sid&#34;)
 *             ))
 *             .resourceGroupName(&#34;myResourceGroup&#34;)
 *             .build());
 * 
 *     }
 * }
 * 
 * ```
 * ### Create a SAP monitor Hana provider
 * 
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var providerInstance = new ProviderInstance(&#34;providerInstance&#34;, ProviderInstanceArgs.builder()        
 *             .monitorName(&#34;mySapMonitor&#34;)
 *             .providerInstanceName(&#34;myProviderInstance&#34;)
 *             .providerSettings(Map.ofEntries(
 *                 Map.entry(&#34;dbName&#34;, &#34;db&#34;),
 *                 Map.entry(&#34;dbPassword&#34;, &#34;****&#34;),
 *                 Map.entry(&#34;dbPasswordUri&#34;, &#34;&#34;),
 *                 Map.entry(&#34;dbSslCertificateUri&#34;, &#34;https://storageaccount.blob.core.windows.net/containername/filename&#34;),
 *                 Map.entry(&#34;dbUsername&#34;, &#34;user&#34;),
 *                 Map.entry(&#34;hostname&#34;, &#34;name&#34;),
 *                 Map.entry(&#34;instanceNumber&#34;, &#34;00&#34;),
 *                 Map.entry(&#34;providerType&#34;, &#34;SapHana&#34;),
 *                 Map.entry(&#34;sqlPort&#34;, &#34;0000&#34;),
 *                 Map.entry(&#34;sslHostNameInCertificate&#34;, &#34;xyz.domain.com&#34;)
 *             ))
 *             .resourceGroupName(&#34;myResourceGroup&#34;)
 *             .build());
 * 
 *     }
 * }
 * 
 * ```
 * ### Create a SAP monitor NetWeaver provider
 * 
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var providerInstance = new ProviderInstance(&#34;providerInstance&#34;, ProviderInstanceArgs.builder()        
 *             .monitorName(&#34;mySapMonitor&#34;)
 *             .providerInstanceName(&#34;myProviderInstance&#34;)
 *             .providerSettings(Map.ofEntries(
 *                 Map.entry(&#34;providerType&#34;, &#34;SapNetWeaver&#34;),
 *                 Map.entry(&#34;sapClientId&#34;, &#34;111&#34;),
 *                 Map.entry(&#34;sapHostFileEntries&#34;, &#34;127.0.0.1 name fqdn&#34;),
 *                 Map.entry(&#34;sapHostname&#34;, &#34;name&#34;),
 *                 Map.entry(&#34;sapInstanceNr&#34;, &#34;00&#34;),
 *                 Map.entry(&#34;sapPassword&#34;, &#34;****&#34;),
 *                 Map.entry(&#34;sapPasswordUri&#34;, &#34;&#34;),
 *                 Map.entry(&#34;sapPortNumber&#34;, &#34;1234&#34;),
 *                 Map.entry(&#34;sapSid&#34;, &#34;SID&#34;),
 *                 Map.entry(&#34;sapSslCertificateUri&#34;, &#34;https://storageaccount.blob.core.windows.net/containername/filename&#34;),
 *                 Map.entry(&#34;sapUsername&#34;, &#34;username&#34;)
 *             ))
 *             .resourceGroupName(&#34;myResourceGroup&#34;)
 *             .build());
 * 
 *     }
 * }
 * 
 * ```
 * 
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:workloads:ProviderInstance myProviderInstance /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.Workloads/workloads/mySapMonitor/providerInstances/myProviderInstance 
 * ```
 * 
 */
@ResourceType(type="azure-native:workloads:ProviderInstance")
public class ProviderInstance extends com.pulumi.resources.CustomResource {
    /**
     * Defines the provider instance errors.
     * 
     */
    @Export(name="errors", type=ProviderInstancePropertiesResponseErrors.class, parameters={})
    private Output<ProviderInstancePropertiesResponseErrors> errors;

    /**
     * @return Defines the provider instance errors.
     * 
     */
    public Output<ProviderInstancePropertiesResponseErrors> errors() {
        return this.errors;
    }
    /**
     * Managed service identity (user assigned identities)
     * 
     */
    @Export(name="identity", type=UserAssignedServiceIdentityResponse.class, parameters={})
    private Output</* @Nullable */ UserAssignedServiceIdentityResponse> identity;

    /**
     * @return Managed service identity (user assigned identities)
     * 
     */
    public Output<Optional<UserAssignedServiceIdentityResponse>> identity() {
        return Codegen.optional(this.identity);
    }
    /**
     * The name of the resource
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the resource
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Defines the provider instance errors.
     * 
     */
    @Export(name="providerSettings", type=Object.class, parameters={})
    private Output</* @Nullable */ Object> providerSettings;

    /**
     * @return Defines the provider instance errors.
     * 
     */
    public Output<Optional<Object>> providerSettings() {
        return Codegen.optional(this.providerSettings);
    }
    /**
     * State of provisioning of the provider instance
     * 
     */
    @Export(name="provisioningState", type=String.class, parameters={})
    private Output<String> provisioningState;

    /**
     * @return State of provisioning of the provider instance
     * 
     */
    public Output<String> provisioningState() {
        return this.provisioningState;
    }
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     */
    @Export(name="systemData", type=SystemDataResponse.class, parameters={})
    private Output<SystemDataResponse> systemData;

    /**
     * @return Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     */
    public Output<SystemDataResponse> systemData() {
        return this.systemData;
    }
    /**
     * The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ProviderInstance(String name) {
        this(name, ProviderInstanceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ProviderInstance(String name, ProviderInstanceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ProviderInstance(String name, ProviderInstanceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:workloads:ProviderInstance", name, args == null ? ProviderInstanceArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ProviderInstance(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:workloads:ProviderInstance", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("azure-native:workloads/v20211201preview:ProviderInstance").build())
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ProviderInstance get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ProviderInstance(name, id, options);
    }
}
