// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearning.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class PlanQuantityResponse {
    /**
     * @return The quantity added to the commitment plan at an interval specified by its allowance frequency.
     * 
     */
    private Double allowance;
    /**
     * @return The quantity available to the plan the last time usage was calculated.
     * 
     */
    private Double amount;
    /**
     * @return The Azure meter for usage against included quantities.
     * 
     */
    private String includedQuantityMeter;
    /**
     * @return The Azure meter for usage which exceeds included quantities.
     * 
     */
    private String overageMeter;

    private PlanQuantityResponse() {}
    /**
     * @return The quantity added to the commitment plan at an interval specified by its allowance frequency.
     * 
     */
    public Double allowance() {
        return this.allowance;
    }
    /**
     * @return The quantity available to the plan the last time usage was calculated.
     * 
     */
    public Double amount() {
        return this.amount;
    }
    /**
     * @return The Azure meter for usage against included quantities.
     * 
     */
    public String includedQuantityMeter() {
        return this.includedQuantityMeter;
    }
    /**
     * @return The Azure meter for usage which exceeds included quantities.
     * 
     */
    public String overageMeter() {
        return this.overageMeter;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PlanQuantityResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Double allowance;
        private Double amount;
        private String includedQuantityMeter;
        private String overageMeter;
        public Builder() {}
        public Builder(PlanQuantityResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowance = defaults.allowance;
    	      this.amount = defaults.amount;
    	      this.includedQuantityMeter = defaults.includedQuantityMeter;
    	      this.overageMeter = defaults.overageMeter;
        }

        @CustomType.Setter
        public Builder allowance(Double allowance) {
            this.allowance = Objects.requireNonNull(allowance);
            return this;
        }
        @CustomType.Setter
        public Builder amount(Double amount) {
            this.amount = Objects.requireNonNull(amount);
            return this;
        }
        @CustomType.Setter
        public Builder includedQuantityMeter(String includedQuantityMeter) {
            this.includedQuantityMeter = Objects.requireNonNull(includedQuantityMeter);
            return this;
        }
        @CustomType.Setter
        public Builder overageMeter(String overageMeter) {
            this.overageMeter = Objects.requireNonNull(overageMeter);
            return this;
        }
        public PlanQuantityResponse build() {
            final var o = new PlanQuantityResponse();
            o.allowance = allowance;
            o.amount = amount;
            o.includedQuantityMeter = includedQuantityMeter;
            o.overageMeter = overageMeter;
            return o;
        }
    }
}
