// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datashare.outputs;

import com.pulumi.azurenative.datashare.outputs.SystemDataResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetInvitationResult {
    /**
     * @return The expiration date for the invitation and share subscription.
     * 
     */
    private @Nullable String expirationDate;
    /**
     * @return The resource id of the azure resource
     * 
     */
    private String id;
    /**
     * @return unique invitation id
     * 
     */
    private String invitationId;
    /**
     * @return The status of the invitation.
     * 
     */
    private String invitationStatus;
    /**
     * @return Name of the azure resource
     * 
     */
    private String name;
    /**
     * @return The time the recipient responded to the invitation.
     * 
     */
    private String respondedAt;
    /**
     * @return Gets the time at which the invitation was sent.
     * 
     */
    private String sentAt;
    /**
     * @return System Data of the Azure resource.
     * 
     */
    private SystemDataResponse systemData;
    /**
     * @return The target Azure AD Id. Can&#39;t be combined with email.
     * 
     */
    private @Nullable String targetActiveDirectoryId;
    /**
     * @return The email the invitation is directed to.
     * 
     */
    private @Nullable String targetEmail;
    /**
     * @return The target user or application Id that invitation is being sent to.
     * Must be specified along TargetActiveDirectoryId. This enables sending
     * invitations to specific users or applications in an AD tenant.
     * 
     */
    private @Nullable String targetObjectId;
    /**
     * @return Type of the azure resource
     * 
     */
    private String type;
    /**
     * @return Email of the user who created the resource
     * 
     */
    private String userEmail;
    /**
     * @return Name of the user who created the resource
     * 
     */
    private String userName;

    private GetInvitationResult() {}
    /**
     * @return The expiration date for the invitation and share subscription.
     * 
     */
    public Optional<String> expirationDate() {
        return Optional.ofNullable(this.expirationDate);
    }
    /**
     * @return The resource id of the azure resource
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return unique invitation id
     * 
     */
    public String invitationId() {
        return this.invitationId;
    }
    /**
     * @return The status of the invitation.
     * 
     */
    public String invitationStatus() {
        return this.invitationStatus;
    }
    /**
     * @return Name of the azure resource
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The time the recipient responded to the invitation.
     * 
     */
    public String respondedAt() {
        return this.respondedAt;
    }
    /**
     * @return Gets the time at which the invitation was sent.
     * 
     */
    public String sentAt() {
        return this.sentAt;
    }
    /**
     * @return System Data of the Azure resource.
     * 
     */
    public SystemDataResponse systemData() {
        return this.systemData;
    }
    /**
     * @return The target Azure AD Id. Can&#39;t be combined with email.
     * 
     */
    public Optional<String> targetActiveDirectoryId() {
        return Optional.ofNullable(this.targetActiveDirectoryId);
    }
    /**
     * @return The email the invitation is directed to.
     * 
     */
    public Optional<String> targetEmail() {
        return Optional.ofNullable(this.targetEmail);
    }
    /**
     * @return The target user or application Id that invitation is being sent to.
     * Must be specified along TargetActiveDirectoryId. This enables sending
     * invitations to specific users or applications in an AD tenant.
     * 
     */
    public Optional<String> targetObjectId() {
        return Optional.ofNullable(this.targetObjectId);
    }
    /**
     * @return Type of the azure resource
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return Email of the user who created the resource
     * 
     */
    public String userEmail() {
        return this.userEmail;
    }
    /**
     * @return Name of the user who created the resource
     * 
     */
    public String userName() {
        return this.userName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInvitationResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String expirationDate;
        private String id;
        private String invitationId;
        private String invitationStatus;
        private String name;
        private String respondedAt;
        private String sentAt;
        private SystemDataResponse systemData;
        private @Nullable String targetActiveDirectoryId;
        private @Nullable String targetEmail;
        private @Nullable String targetObjectId;
        private String type;
        private String userEmail;
        private String userName;
        public Builder() {}
        public Builder(GetInvitationResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.expirationDate = defaults.expirationDate;
    	      this.id = defaults.id;
    	      this.invitationId = defaults.invitationId;
    	      this.invitationStatus = defaults.invitationStatus;
    	      this.name = defaults.name;
    	      this.respondedAt = defaults.respondedAt;
    	      this.sentAt = defaults.sentAt;
    	      this.systemData = defaults.systemData;
    	      this.targetActiveDirectoryId = defaults.targetActiveDirectoryId;
    	      this.targetEmail = defaults.targetEmail;
    	      this.targetObjectId = defaults.targetObjectId;
    	      this.type = defaults.type;
    	      this.userEmail = defaults.userEmail;
    	      this.userName = defaults.userName;
        }

        @CustomType.Setter
        public Builder expirationDate(@Nullable String expirationDate) {
            this.expirationDate = expirationDate;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder invitationId(String invitationId) {
            this.invitationId = Objects.requireNonNull(invitationId);
            return this;
        }
        @CustomType.Setter
        public Builder invitationStatus(String invitationStatus) {
            this.invitationStatus = Objects.requireNonNull(invitationStatus);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder respondedAt(String respondedAt) {
            this.respondedAt = Objects.requireNonNull(respondedAt);
            return this;
        }
        @CustomType.Setter
        public Builder sentAt(String sentAt) {
            this.sentAt = Objects.requireNonNull(sentAt);
            return this;
        }
        @CustomType.Setter
        public Builder systemData(SystemDataResponse systemData) {
            this.systemData = Objects.requireNonNull(systemData);
            return this;
        }
        @CustomType.Setter
        public Builder targetActiveDirectoryId(@Nullable String targetActiveDirectoryId) {
            this.targetActiveDirectoryId = targetActiveDirectoryId;
            return this;
        }
        @CustomType.Setter
        public Builder targetEmail(@Nullable String targetEmail) {
            this.targetEmail = targetEmail;
            return this;
        }
        @CustomType.Setter
        public Builder targetObjectId(@Nullable String targetObjectId) {
            this.targetObjectId = targetObjectId;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder userEmail(String userEmail) {
            this.userEmail = Objects.requireNonNull(userEmail);
            return this;
        }
        @CustomType.Setter
        public Builder userName(String userName) {
            this.userName = Objects.requireNonNull(userName);
            return this;
        }
        public GetInvitationResult build() {
            final var o = new GetInvitationResult();
            o.expirationDate = expirationDate;
            o.id = id;
            o.invitationId = invitationId;
            o.invitationStatus = invitationStatus;
            o.name = name;
            o.respondedAt = respondedAt;
            o.sentAt = sentAt;
            o.systemData = systemData;
            o.targetActiveDirectoryId = targetActiveDirectoryId;
            o.targetEmail = targetEmail;
            o.targetObjectId = targetObjectId;
            o.type = type;
            o.userEmail = userEmail;
            o.userName = userName;
            return o;
        }
    }
}
