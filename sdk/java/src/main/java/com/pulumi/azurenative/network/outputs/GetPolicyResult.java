// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.outputs;

import com.pulumi.azurenative.network.outputs.CustomRuleListResponse;
import com.pulumi.azurenative.network.outputs.FrontDoorPolicySettingsResponse;
import com.pulumi.azurenative.network.outputs.FrontendEndpointLinkResponse;
import com.pulumi.azurenative.network.outputs.ManagedRuleSetListResponse;
import com.pulumi.azurenative.network.outputs.RoutingRuleLinkResponse;
import com.pulumi.azurenative.network.outputs.SecurityPolicyLinkResponse;
import com.pulumi.azurenative.network.outputs.SkuResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetPolicyResult {
    /**
     * @return Describes custom rules inside the policy.
     * 
     */
    private @Nullable CustomRuleListResponse customRules;
    /**
     * @return Gets a unique read-only string that changes whenever the resource is updated.
     * 
     */
    private @Nullable String etag;
    /**
     * @return Describes Frontend Endpoints associated with this Web Application Firewall policy.
     * 
     */
    private List<FrontendEndpointLinkResponse> frontendEndpointLinks;
    /**
     * @return Resource ID.
     * 
     */
    private String id;
    /**
     * @return Resource location.
     * 
     */
    private @Nullable String location;
    /**
     * @return Describes managed rules inside the policy.
     * 
     */
    private @Nullable ManagedRuleSetListResponse managedRules;
    /**
     * @return Resource name.
     * 
     */
    private String name;
    /**
     * @return Describes settings for the policy.
     * 
     */
    private @Nullable FrontDoorPolicySettingsResponse policySettings;
    /**
     * @return Provisioning state of the policy.
     * 
     */
    private String provisioningState;
    private String resourceState;
    /**
     * @return Describes Routing Rules associated with this Web Application Firewall policy.
     * 
     */
    private List<RoutingRuleLinkResponse> routingRuleLinks;
    /**
     * @return Describes Security Policy associated with this Web Application Firewall policy.
     * 
     */
    private List<SecurityPolicyLinkResponse> securityPolicyLinks;
    /**
     * @return The pricing tier of web application firewall policy. Defaults to Classic_AzureFrontDoor if not specified.
     * 
     */
    private @Nullable SkuResponse sku;
    /**
     * @return Resource tags.
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return Resource type.
     * 
     */
    private String type;

    private GetPolicyResult() {}
    /**
     * @return Describes custom rules inside the policy.
     * 
     */
    public Optional<CustomRuleListResponse> customRules() {
        return Optional.ofNullable(this.customRules);
    }
    /**
     * @return Gets a unique read-only string that changes whenever the resource is updated.
     * 
     */
    public Optional<String> etag() {
        return Optional.ofNullable(this.etag);
    }
    /**
     * @return Describes Frontend Endpoints associated with this Web Application Firewall policy.
     * 
     */
    public List<FrontendEndpointLinkResponse> frontendEndpointLinks() {
        return this.frontendEndpointLinks;
    }
    /**
     * @return Resource ID.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Resource location.
     * 
     */
    public Optional<String> location() {
        return Optional.ofNullable(this.location);
    }
    /**
     * @return Describes managed rules inside the policy.
     * 
     */
    public Optional<ManagedRuleSetListResponse> managedRules() {
        return Optional.ofNullable(this.managedRules);
    }
    /**
     * @return Resource name.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Describes settings for the policy.
     * 
     */
    public Optional<FrontDoorPolicySettingsResponse> policySettings() {
        return Optional.ofNullable(this.policySettings);
    }
    /**
     * @return Provisioning state of the policy.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }
    public String resourceState() {
        return this.resourceState;
    }
    /**
     * @return Describes Routing Rules associated with this Web Application Firewall policy.
     * 
     */
    public List<RoutingRuleLinkResponse> routingRuleLinks() {
        return this.routingRuleLinks;
    }
    /**
     * @return Describes Security Policy associated with this Web Application Firewall policy.
     * 
     */
    public List<SecurityPolicyLinkResponse> securityPolicyLinks() {
        return this.securityPolicyLinks;
    }
    /**
     * @return The pricing tier of web application firewall policy. Defaults to Classic_AzureFrontDoor if not specified.
     * 
     */
    public Optional<SkuResponse> sku() {
        return Optional.ofNullable(this.sku);
    }
    /**
     * @return Resource tags.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return Resource type.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPolicyResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable CustomRuleListResponse customRules;
        private @Nullable String etag;
        private List<FrontendEndpointLinkResponse> frontendEndpointLinks;
        private String id;
        private @Nullable String location;
        private @Nullable ManagedRuleSetListResponse managedRules;
        private String name;
        private @Nullable FrontDoorPolicySettingsResponse policySettings;
        private String provisioningState;
        private String resourceState;
        private List<RoutingRuleLinkResponse> routingRuleLinks;
        private List<SecurityPolicyLinkResponse> securityPolicyLinks;
        private @Nullable SkuResponse sku;
        private @Nullable Map<String,String> tags;
        private String type;
        public Builder() {}
        public Builder(GetPolicyResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.customRules = defaults.customRules;
    	      this.etag = defaults.etag;
    	      this.frontendEndpointLinks = defaults.frontendEndpointLinks;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.managedRules = defaults.managedRules;
    	      this.name = defaults.name;
    	      this.policySettings = defaults.policySettings;
    	      this.provisioningState = defaults.provisioningState;
    	      this.resourceState = defaults.resourceState;
    	      this.routingRuleLinks = defaults.routingRuleLinks;
    	      this.securityPolicyLinks = defaults.securityPolicyLinks;
    	      this.sku = defaults.sku;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder customRules(@Nullable CustomRuleListResponse customRules) {
            this.customRules = customRules;
            return this;
        }
        @CustomType.Setter
        public Builder etag(@Nullable String etag) {
            this.etag = etag;
            return this;
        }
        @CustomType.Setter
        public Builder frontendEndpointLinks(List<FrontendEndpointLinkResponse> frontendEndpointLinks) {
            this.frontendEndpointLinks = Objects.requireNonNull(frontendEndpointLinks);
            return this;
        }
        public Builder frontendEndpointLinks(FrontendEndpointLinkResponse... frontendEndpointLinks) {
            return frontendEndpointLinks(List.of(frontendEndpointLinks));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder location(@Nullable String location) {
            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder managedRules(@Nullable ManagedRuleSetListResponse managedRules) {
            this.managedRules = managedRules;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder policySettings(@Nullable FrontDoorPolicySettingsResponse policySettings) {
            this.policySettings = policySettings;
            return this;
        }
        @CustomType.Setter
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        @CustomType.Setter
        public Builder resourceState(String resourceState) {
            this.resourceState = Objects.requireNonNull(resourceState);
            return this;
        }
        @CustomType.Setter
        public Builder routingRuleLinks(List<RoutingRuleLinkResponse> routingRuleLinks) {
            this.routingRuleLinks = Objects.requireNonNull(routingRuleLinks);
            return this;
        }
        public Builder routingRuleLinks(RoutingRuleLinkResponse... routingRuleLinks) {
            return routingRuleLinks(List.of(routingRuleLinks));
        }
        @CustomType.Setter
        public Builder securityPolicyLinks(List<SecurityPolicyLinkResponse> securityPolicyLinks) {
            this.securityPolicyLinks = Objects.requireNonNull(securityPolicyLinks);
            return this;
        }
        public Builder securityPolicyLinks(SecurityPolicyLinkResponse... securityPolicyLinks) {
            return securityPolicyLinks(List.of(securityPolicyLinks));
        }
        @CustomType.Setter
        public Builder sku(@Nullable SkuResponse sku) {
            this.sku = sku;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetPolicyResult build() {
            final var o = new GetPolicyResult();
            o.customRules = customRules;
            o.etag = etag;
            o.frontendEndpointLinks = frontendEndpointLinks;
            o.id = id;
            o.location = location;
            o.managedRules = managedRules;
            o.name = name;
            o.policySettings = policySettings;
            o.provisioningState = provisioningState;
            o.resourceState = resourceState;
            o.routingRuleLinks = routingRuleLinks;
            o.securityPolicyLinks = securityPolicyLinks;
            o.sku = sku;
            o.tags = tags;
            o.type = type;
            return o;
        }
    }
}
