// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearningcompute.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AutoScaleConfigurationResponse {
    /**
     * @return The maximum number of replicas for each service.
     * 
     */
    private @Nullable Integer maxReplicas;
    /**
     * @return The minimum number of replicas for each service.
     * 
     */
    private @Nullable Integer minReplicas;
    /**
     * @return Refresh period in seconds.
     * 
     */
    private @Nullable Integer refreshPeriodInSeconds;
    /**
     * @return If auto-scale is enabled for all services. Each service can turn it off individually.
     * 
     */
    private @Nullable String status;
    /**
     * @return The target utilization.
     * 
     */
    private @Nullable Double targetUtilization;

    private AutoScaleConfigurationResponse() {}
    /**
     * @return The maximum number of replicas for each service.
     * 
     */
    public Optional<Integer> maxReplicas() {
        return Optional.ofNullable(this.maxReplicas);
    }
    /**
     * @return The minimum number of replicas for each service.
     * 
     */
    public Optional<Integer> minReplicas() {
        return Optional.ofNullable(this.minReplicas);
    }
    /**
     * @return Refresh period in seconds.
     * 
     */
    public Optional<Integer> refreshPeriodInSeconds() {
        return Optional.ofNullable(this.refreshPeriodInSeconds);
    }
    /**
     * @return If auto-scale is enabled for all services. Each service can turn it off individually.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }
    /**
     * @return The target utilization.
     * 
     */
    public Optional<Double> targetUtilization() {
        return Optional.ofNullable(this.targetUtilization);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AutoScaleConfigurationResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer maxReplicas;
        private @Nullable Integer minReplicas;
        private @Nullable Integer refreshPeriodInSeconds;
        private @Nullable String status;
        private @Nullable Double targetUtilization;
        public Builder() {}
        public Builder(AutoScaleConfigurationResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.maxReplicas = defaults.maxReplicas;
    	      this.minReplicas = defaults.minReplicas;
    	      this.refreshPeriodInSeconds = defaults.refreshPeriodInSeconds;
    	      this.status = defaults.status;
    	      this.targetUtilization = defaults.targetUtilization;
        }

        @CustomType.Setter
        public Builder maxReplicas(@Nullable Integer maxReplicas) {
            this.maxReplicas = maxReplicas;
            return this;
        }
        @CustomType.Setter
        public Builder minReplicas(@Nullable Integer minReplicas) {
            this.minReplicas = minReplicas;
            return this;
        }
        @CustomType.Setter
        public Builder refreshPeriodInSeconds(@Nullable Integer refreshPeriodInSeconds) {
            this.refreshPeriodInSeconds = refreshPeriodInSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder targetUtilization(@Nullable Double targetUtilization) {
            this.targetUtilization = targetUtilization;
            return this;
        }
        public AutoScaleConfigurationResponse build() {
            final var o = new AutoScaleConfigurationResponse();
            o.maxReplicas = maxReplicas;
            o.minReplicas = minReplicas;
            o.refreshPeriodInSeconds = refreshPeriodInSeconds;
            o.status = status;
            o.targetUtilization = targetUtilization;
            return o;
        }
    }
}
