// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.cdn.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ManagedRuleOverrideResponse {
    /**
     * @return Describes the override action to be applied when rule matches.
     * 
     */
    private @Nullable String action;
    /**
     * @return Describes if the managed rule is in enabled or disabled state. Defaults to Disabled if not specified.
     * 
     */
    private @Nullable String enabledState;
    /**
     * @return Identifier for the managed rule.
     * 
     */
    private String ruleId;

    private ManagedRuleOverrideResponse() {}
    /**
     * @return Describes the override action to be applied when rule matches.
     * 
     */
    public Optional<String> action() {
        return Optional.ofNullable(this.action);
    }
    /**
     * @return Describes if the managed rule is in enabled or disabled state. Defaults to Disabled if not specified.
     * 
     */
    public Optional<String> enabledState() {
        return Optional.ofNullable(this.enabledState);
    }
    /**
     * @return Identifier for the managed rule.
     * 
     */
    public String ruleId() {
        return this.ruleId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ManagedRuleOverrideResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String action;
        private @Nullable String enabledState;
        private String ruleId;
        public Builder() {}
        public Builder(ManagedRuleOverrideResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.action = defaults.action;
    	      this.enabledState = defaults.enabledState;
    	      this.ruleId = defaults.ruleId;
        }

        @CustomType.Setter
        public Builder action(@Nullable String action) {
            this.action = action;
            return this;
        }
        @CustomType.Setter
        public Builder enabledState(@Nullable String enabledState) {
            this.enabledState = enabledState;
            return this;
        }
        @CustomType.Setter
        public Builder ruleId(String ruleId) {
            this.ruleId = Objects.requireNonNull(ruleId);
            return this;
        }
        public ManagedRuleOverrideResponse build() {
            final var o = new ManagedRuleOverrideResponse();
            o.action = action;
            o.enabledState = enabledState;
            o.ruleId = ruleId;
            return o;
        }
    }
}
