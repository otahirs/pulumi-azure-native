// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearningservices.outputs;

import com.pulumi.azurenative.machinelearningservices.outputs.AKSServiceResponseResponseAutoScaler;
import com.pulumi.azurenative.machinelearningservices.outputs.AKSServiceResponseResponseDataCollection;
import com.pulumi.azurenative.machinelearningservices.outputs.AKSServiceResponseResponseDeploymentStatus;
import com.pulumi.azurenative.machinelearningservices.outputs.AKSServiceResponseResponseEnvironmentImageRequest;
import com.pulumi.azurenative.machinelearningservices.outputs.AKSServiceResponseResponseLivenessProbeRequirements;
import com.pulumi.azurenative.machinelearningservices.outputs.ContainerResourceRequirementsResponse;
import com.pulumi.azurenative.machinelearningservices.outputs.ModelResponse;
import com.pulumi.azurenative.machinelearningservices.outputs.ServiceResponseBaseResponseError;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AKSServiceResponseResponse {
    /**
     * @return Whether or not AAD authentication is enabled.
     * 
     */
    private @Nullable Boolean aadAuthEnabled;
    /**
     * @return Whether or not Application Insights is enabled.
     * 
     */
    private @Nullable Boolean appInsightsEnabled;
    /**
     * @return Whether or not authentication is enabled.
     * 
     */
    private @Nullable Boolean authEnabled;
    /**
     * @return The auto scaler properties.
     * 
     */
    private @Nullable AKSServiceResponseResponseAutoScaler autoScaler;
    /**
     * @return The name of the compute resource.
     * 
     */
    private @Nullable String computeName;
    /**
     * @return The compute environment type for the service.
     * Expected value is &#39;AKS&#39;.
     * 
     */
    private String computeType;
    /**
     * @return The container resource requirements.
     * 
     */
    private @Nullable ContainerResourceRequirementsResponse containerResourceRequirements;
    /**
     * @return Details of the data collection options specified.
     * 
     */
    private @Nullable AKSServiceResponseResponseDataCollection dataCollection;
    /**
     * @return The deployment status.
     * 
     */
    private AKSServiceResponseResponseDeploymentStatus deploymentStatus;
    /**
     * @return The deployment type for the service.
     * 
     */
    private @Nullable String deploymentType;
    /**
     * @return The service description.
     * 
     */
    private @Nullable String description;
    /**
     * @return The Environment, models and assets used for inferencing.
     * 
     */
    private @Nullable AKSServiceResponseResponseEnvironmentImageRequest environmentImageRequest;
    /**
     * @return The error details.
     * 
     */
    private ServiceResponseBaseResponseError error;
    /**
     * @return Is this the default variant.
     * 
     */
    private @Nullable Boolean isDefault;
    /**
     * @return The service tag dictionary. Tags are mutable.
     * 
     */
    private @Nullable Map<String,String> kvTags;
    /**
     * @return The liveness probe requirements.
     * 
     */
    private @Nullable AKSServiceResponseResponseLivenessProbeRequirements livenessProbeRequirements;
    /**
     * @return The maximum number of concurrent requests per container.
     * 
     */
    private @Nullable Integer maxConcurrentRequestsPerContainer;
    /**
     * @return Maximum time a request will wait in the queue (in milliseconds). After this time, the service will return 503 (Service Unavailable)
     * 
     */
    private @Nullable Integer maxQueueWaitMs;
    /**
     * @return Details on the models and configurations.
     * 
     */
    private Map<String,Object> modelConfigMap;
    /**
     * @return The list of models.
     * 
     */
    private @Nullable List<ModelResponse> models;
    /**
     * @return The Kubernetes namespace of the deployment.
     * 
     */
    private @Nullable String namespace;
    /**
     * @return The number of replicas on the cluster.
     * 
     */
    private @Nullable Integer numReplicas;
    /**
     * @return The service property dictionary. Properties are immutable.
     * 
     */
    private @Nullable Map<String,String> properties;
    /**
     * @return The scoring timeout in milliseconds.
     * 
     */
    private @Nullable Integer scoringTimeoutMs;
    /**
     * @return The Uri for sending scoring requests.
     * 
     */
    private String scoringUri;
    /**
     * @return The current state of the service.
     * 
     */
    private String state;
    /**
     * @return The Uri for sending swagger requests.
     * 
     */
    private String swaggerUri;
    /**
     * @return The amount of traffic variant receives.
     * 
     */
    private @Nullable Double trafficPercentile;
    /**
     * @return The type of the variant.
     * 
     */
    private @Nullable String type;

    private AKSServiceResponseResponse() {}
    /**
     * @return Whether or not AAD authentication is enabled.
     * 
     */
    public Optional<Boolean> aadAuthEnabled() {
        return Optional.ofNullable(this.aadAuthEnabled);
    }
    /**
     * @return Whether or not Application Insights is enabled.
     * 
     */
    public Optional<Boolean> appInsightsEnabled() {
        return Optional.ofNullable(this.appInsightsEnabled);
    }
    /**
     * @return Whether or not authentication is enabled.
     * 
     */
    public Optional<Boolean> authEnabled() {
        return Optional.ofNullable(this.authEnabled);
    }
    /**
     * @return The auto scaler properties.
     * 
     */
    public Optional<AKSServiceResponseResponseAutoScaler> autoScaler() {
        return Optional.ofNullable(this.autoScaler);
    }
    /**
     * @return The name of the compute resource.
     * 
     */
    public Optional<String> computeName() {
        return Optional.ofNullable(this.computeName);
    }
    /**
     * @return The compute environment type for the service.
     * Expected value is &#39;AKS&#39;.
     * 
     */
    public String computeType() {
        return this.computeType;
    }
    /**
     * @return The container resource requirements.
     * 
     */
    public Optional<ContainerResourceRequirementsResponse> containerResourceRequirements() {
        return Optional.ofNullable(this.containerResourceRequirements);
    }
    /**
     * @return Details of the data collection options specified.
     * 
     */
    public Optional<AKSServiceResponseResponseDataCollection> dataCollection() {
        return Optional.ofNullable(this.dataCollection);
    }
    /**
     * @return The deployment status.
     * 
     */
    public AKSServiceResponseResponseDeploymentStatus deploymentStatus() {
        return this.deploymentStatus;
    }
    /**
     * @return The deployment type for the service.
     * 
     */
    public Optional<String> deploymentType() {
        return Optional.ofNullable(this.deploymentType);
    }
    /**
     * @return The service description.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return The Environment, models and assets used for inferencing.
     * 
     */
    public Optional<AKSServiceResponseResponseEnvironmentImageRequest> environmentImageRequest() {
        return Optional.ofNullable(this.environmentImageRequest);
    }
    /**
     * @return The error details.
     * 
     */
    public ServiceResponseBaseResponseError error() {
        return this.error;
    }
    /**
     * @return Is this the default variant.
     * 
     */
    public Optional<Boolean> isDefault() {
        return Optional.ofNullable(this.isDefault);
    }
    /**
     * @return The service tag dictionary. Tags are mutable.
     * 
     */
    public Map<String,String> kvTags() {
        return this.kvTags == null ? Map.of() : this.kvTags;
    }
    /**
     * @return The liveness probe requirements.
     * 
     */
    public Optional<AKSServiceResponseResponseLivenessProbeRequirements> livenessProbeRequirements() {
        return Optional.ofNullable(this.livenessProbeRequirements);
    }
    /**
     * @return The maximum number of concurrent requests per container.
     * 
     */
    public Optional<Integer> maxConcurrentRequestsPerContainer() {
        return Optional.ofNullable(this.maxConcurrentRequestsPerContainer);
    }
    /**
     * @return Maximum time a request will wait in the queue (in milliseconds). After this time, the service will return 503 (Service Unavailable)
     * 
     */
    public Optional<Integer> maxQueueWaitMs() {
        return Optional.ofNullable(this.maxQueueWaitMs);
    }
    /**
     * @return Details on the models and configurations.
     * 
     */
    public Map<String,Object> modelConfigMap() {
        return this.modelConfigMap;
    }
    /**
     * @return The list of models.
     * 
     */
    public List<ModelResponse> models() {
        return this.models == null ? List.of() : this.models;
    }
    /**
     * @return The Kubernetes namespace of the deployment.
     * 
     */
    public Optional<String> namespace() {
        return Optional.ofNullable(this.namespace);
    }
    /**
     * @return The number of replicas on the cluster.
     * 
     */
    public Optional<Integer> numReplicas() {
        return Optional.ofNullable(this.numReplicas);
    }
    /**
     * @return The service property dictionary. Properties are immutable.
     * 
     */
    public Map<String,String> properties() {
        return this.properties == null ? Map.of() : this.properties;
    }
    /**
     * @return The scoring timeout in milliseconds.
     * 
     */
    public Optional<Integer> scoringTimeoutMs() {
        return Optional.ofNullable(this.scoringTimeoutMs);
    }
    /**
     * @return The Uri for sending scoring requests.
     * 
     */
    public String scoringUri() {
        return this.scoringUri;
    }
    /**
     * @return The current state of the service.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The Uri for sending swagger requests.
     * 
     */
    public String swaggerUri() {
        return this.swaggerUri;
    }
    /**
     * @return The amount of traffic variant receives.
     * 
     */
    public Optional<Double> trafficPercentile() {
        return Optional.ofNullable(this.trafficPercentile);
    }
    /**
     * @return The type of the variant.
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AKSServiceResponseResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean aadAuthEnabled;
        private @Nullable Boolean appInsightsEnabled;
        private @Nullable Boolean authEnabled;
        private @Nullable AKSServiceResponseResponseAutoScaler autoScaler;
        private @Nullable String computeName;
        private String computeType;
        private @Nullable ContainerResourceRequirementsResponse containerResourceRequirements;
        private @Nullable AKSServiceResponseResponseDataCollection dataCollection;
        private AKSServiceResponseResponseDeploymentStatus deploymentStatus;
        private @Nullable String deploymentType;
        private @Nullable String description;
        private @Nullable AKSServiceResponseResponseEnvironmentImageRequest environmentImageRequest;
        private ServiceResponseBaseResponseError error;
        private @Nullable Boolean isDefault;
        private @Nullable Map<String,String> kvTags;
        private @Nullable AKSServiceResponseResponseLivenessProbeRequirements livenessProbeRequirements;
        private @Nullable Integer maxConcurrentRequestsPerContainer;
        private @Nullable Integer maxQueueWaitMs;
        private Map<String,Object> modelConfigMap;
        private @Nullable List<ModelResponse> models;
        private @Nullable String namespace;
        private @Nullable Integer numReplicas;
        private @Nullable Map<String,String> properties;
        private @Nullable Integer scoringTimeoutMs;
        private String scoringUri;
        private String state;
        private String swaggerUri;
        private @Nullable Double trafficPercentile;
        private @Nullable String type;
        public Builder() {}
        public Builder(AKSServiceResponseResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aadAuthEnabled = defaults.aadAuthEnabled;
    	      this.appInsightsEnabled = defaults.appInsightsEnabled;
    	      this.authEnabled = defaults.authEnabled;
    	      this.autoScaler = defaults.autoScaler;
    	      this.computeName = defaults.computeName;
    	      this.computeType = defaults.computeType;
    	      this.containerResourceRequirements = defaults.containerResourceRequirements;
    	      this.dataCollection = defaults.dataCollection;
    	      this.deploymentStatus = defaults.deploymentStatus;
    	      this.deploymentType = defaults.deploymentType;
    	      this.description = defaults.description;
    	      this.environmentImageRequest = defaults.environmentImageRequest;
    	      this.error = defaults.error;
    	      this.isDefault = defaults.isDefault;
    	      this.kvTags = defaults.kvTags;
    	      this.livenessProbeRequirements = defaults.livenessProbeRequirements;
    	      this.maxConcurrentRequestsPerContainer = defaults.maxConcurrentRequestsPerContainer;
    	      this.maxQueueWaitMs = defaults.maxQueueWaitMs;
    	      this.modelConfigMap = defaults.modelConfigMap;
    	      this.models = defaults.models;
    	      this.namespace = defaults.namespace;
    	      this.numReplicas = defaults.numReplicas;
    	      this.properties = defaults.properties;
    	      this.scoringTimeoutMs = defaults.scoringTimeoutMs;
    	      this.scoringUri = defaults.scoringUri;
    	      this.state = defaults.state;
    	      this.swaggerUri = defaults.swaggerUri;
    	      this.trafficPercentile = defaults.trafficPercentile;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder aadAuthEnabled(@Nullable Boolean aadAuthEnabled) {
            this.aadAuthEnabled = aadAuthEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder appInsightsEnabled(@Nullable Boolean appInsightsEnabled) {
            this.appInsightsEnabled = appInsightsEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder authEnabled(@Nullable Boolean authEnabled) {
            this.authEnabled = authEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder autoScaler(@Nullable AKSServiceResponseResponseAutoScaler autoScaler) {
            this.autoScaler = autoScaler;
            return this;
        }
        @CustomType.Setter
        public Builder computeName(@Nullable String computeName) {
            this.computeName = computeName;
            return this;
        }
        @CustomType.Setter
        public Builder computeType(String computeType) {
            this.computeType = Objects.requireNonNull(computeType);
            return this;
        }
        @CustomType.Setter
        public Builder containerResourceRequirements(@Nullable ContainerResourceRequirementsResponse containerResourceRequirements) {
            this.containerResourceRequirements = containerResourceRequirements;
            return this;
        }
        @CustomType.Setter
        public Builder dataCollection(@Nullable AKSServiceResponseResponseDataCollection dataCollection) {
            this.dataCollection = dataCollection;
            return this;
        }
        @CustomType.Setter
        public Builder deploymentStatus(AKSServiceResponseResponseDeploymentStatus deploymentStatus) {
            this.deploymentStatus = Objects.requireNonNull(deploymentStatus);
            return this;
        }
        @CustomType.Setter
        public Builder deploymentType(@Nullable String deploymentType) {
            this.deploymentType = deploymentType;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder environmentImageRequest(@Nullable AKSServiceResponseResponseEnvironmentImageRequest environmentImageRequest) {
            this.environmentImageRequest = environmentImageRequest;
            return this;
        }
        @CustomType.Setter
        public Builder error(ServiceResponseBaseResponseError error) {
            this.error = Objects.requireNonNull(error);
            return this;
        }
        @CustomType.Setter
        public Builder isDefault(@Nullable Boolean isDefault) {
            this.isDefault = isDefault;
            return this;
        }
        @CustomType.Setter
        public Builder kvTags(@Nullable Map<String,String> kvTags) {
            this.kvTags = kvTags;
            return this;
        }
        @CustomType.Setter
        public Builder livenessProbeRequirements(@Nullable AKSServiceResponseResponseLivenessProbeRequirements livenessProbeRequirements) {
            this.livenessProbeRequirements = livenessProbeRequirements;
            return this;
        }
        @CustomType.Setter
        public Builder maxConcurrentRequestsPerContainer(@Nullable Integer maxConcurrentRequestsPerContainer) {
            this.maxConcurrentRequestsPerContainer = maxConcurrentRequestsPerContainer;
            return this;
        }
        @CustomType.Setter
        public Builder maxQueueWaitMs(@Nullable Integer maxQueueWaitMs) {
            this.maxQueueWaitMs = maxQueueWaitMs;
            return this;
        }
        @CustomType.Setter
        public Builder modelConfigMap(Map<String,Object> modelConfigMap) {
            this.modelConfigMap = Objects.requireNonNull(modelConfigMap);
            return this;
        }
        @CustomType.Setter
        public Builder models(@Nullable List<ModelResponse> models) {
            this.models = models;
            return this;
        }
        public Builder models(ModelResponse... models) {
            return models(List.of(models));
        }
        @CustomType.Setter
        public Builder namespace(@Nullable String namespace) {
            this.namespace = namespace;
            return this;
        }
        @CustomType.Setter
        public Builder numReplicas(@Nullable Integer numReplicas) {
            this.numReplicas = numReplicas;
            return this;
        }
        @CustomType.Setter
        public Builder properties(@Nullable Map<String,String> properties) {
            this.properties = properties;
            return this;
        }
        @CustomType.Setter
        public Builder scoringTimeoutMs(@Nullable Integer scoringTimeoutMs) {
            this.scoringTimeoutMs = scoringTimeoutMs;
            return this;
        }
        @CustomType.Setter
        public Builder scoringUri(String scoringUri) {
            this.scoringUri = Objects.requireNonNull(scoringUri);
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        @CustomType.Setter
        public Builder swaggerUri(String swaggerUri) {
            this.swaggerUri = Objects.requireNonNull(swaggerUri);
            return this;
        }
        @CustomType.Setter
        public Builder trafficPercentile(@Nullable Double trafficPercentile) {
            this.trafficPercentile = trafficPercentile;
            return this;
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {
            this.type = type;
            return this;
        }
        public AKSServiceResponseResponse build() {
            final var o = new AKSServiceResponseResponse();
            o.aadAuthEnabled = aadAuthEnabled;
            o.appInsightsEnabled = appInsightsEnabled;
            o.authEnabled = authEnabled;
            o.autoScaler = autoScaler;
            o.computeName = computeName;
            o.computeType = computeType;
            o.containerResourceRequirements = containerResourceRequirements;
            o.dataCollection = dataCollection;
            o.deploymentStatus = deploymentStatus;
            o.deploymentType = deploymentType;
            o.description = description;
            o.environmentImageRequest = environmentImageRequest;
            o.error = error;
            o.isDefault = isDefault;
            o.kvTags = kvTags;
            o.livenessProbeRequirements = livenessProbeRequirements;
            o.maxConcurrentRequestsPerContainer = maxConcurrentRequestsPerContainer;
            o.maxQueueWaitMs = maxQueueWaitMs;
            o.modelConfigMap = modelConfigMap;
            o.models = models;
            o.namespace = namespace;
            o.numReplicas = numReplicas;
            o.properties = properties;
            o.scoringTimeoutMs = scoringTimeoutMs;
            o.scoringUri = scoringUri;
            o.state = state;
            o.swaggerUri = swaggerUri;
            o.trafficPercentile = trafficPercentile;
            o.type = type;
            return o;
        }
    }
}
