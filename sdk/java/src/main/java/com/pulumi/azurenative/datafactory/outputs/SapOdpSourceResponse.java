// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datafactory.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SapOdpSourceResponse {
    /**
     * @return Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects).
     * 
     */
    private @Nullable Object additionalColumns;
    /**
     * @return If true, disable data store metrics collection. Default is false. Type: boolean (or Expression with resultType boolean).
     * 
     */
    private @Nullable Object disableMetricsCollection;
    /**
     * @return The extraction mode. Allowed value include: Full, Delta and Recovery. The default value is Full. Type: string (or Expression with resultType string).
     * 
     */
    private @Nullable Object extractionMode;
    /**
     * @return The maximum concurrent connection count for the source data store. Type: integer (or Expression with resultType integer).
     * 
     */
    private @Nullable Object maxConcurrentConnections;
    /**
     * @return Specifies the columns to be selected from source data. Type: array of objects(projection) (or Expression with resultType array of objects).
     * 
     */
    private @Nullable Object projection;
    /**
     * @return Query timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
     * 
     */
    private @Nullable Object queryTimeout;
    /**
     * @return Specifies the selection conditions from source data. Type: array of objects(selection) (or Expression with resultType array of objects).
     * 
     */
    private @Nullable Object selection;
    /**
     * @return Source retry count. Type: integer (or Expression with resultType integer).
     * 
     */
    private @Nullable Object sourceRetryCount;
    /**
     * @return Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
     * 
     */
    private @Nullable Object sourceRetryWait;
    /**
     * @return The subscriber process to manage the delta process. Type: string (or Expression with resultType string).
     * 
     */
    private @Nullable Object subscriberProcess;
    /**
     * @return Copy source type.
     * Expected value is &#39;SapOdpSource&#39;.
     * 
     */
    private String type;

    private SapOdpSourceResponse() {}
    /**
     * @return Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects).
     * 
     */
    public Optional<Object> additionalColumns() {
        return Optional.ofNullable(this.additionalColumns);
    }
    /**
     * @return If true, disable data store metrics collection. Default is false. Type: boolean (or Expression with resultType boolean).
     * 
     */
    public Optional<Object> disableMetricsCollection() {
        return Optional.ofNullable(this.disableMetricsCollection);
    }
    /**
     * @return The extraction mode. Allowed value include: Full, Delta and Recovery. The default value is Full. Type: string (or Expression with resultType string).
     * 
     */
    public Optional<Object> extractionMode() {
        return Optional.ofNullable(this.extractionMode);
    }
    /**
     * @return The maximum concurrent connection count for the source data store. Type: integer (or Expression with resultType integer).
     * 
     */
    public Optional<Object> maxConcurrentConnections() {
        return Optional.ofNullable(this.maxConcurrentConnections);
    }
    /**
     * @return Specifies the columns to be selected from source data. Type: array of objects(projection) (or Expression with resultType array of objects).
     * 
     */
    public Optional<Object> projection() {
        return Optional.ofNullable(this.projection);
    }
    /**
     * @return Query timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
     * 
     */
    public Optional<Object> queryTimeout() {
        return Optional.ofNullable(this.queryTimeout);
    }
    /**
     * @return Specifies the selection conditions from source data. Type: array of objects(selection) (or Expression with resultType array of objects).
     * 
     */
    public Optional<Object> selection() {
        return Optional.ofNullable(this.selection);
    }
    /**
     * @return Source retry count. Type: integer (or Expression with resultType integer).
     * 
     */
    public Optional<Object> sourceRetryCount() {
        return Optional.ofNullable(this.sourceRetryCount);
    }
    /**
     * @return Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
     * 
     */
    public Optional<Object> sourceRetryWait() {
        return Optional.ofNullable(this.sourceRetryWait);
    }
    /**
     * @return The subscriber process to manage the delta process. Type: string (or Expression with resultType string).
     * 
     */
    public Optional<Object> subscriberProcess() {
        return Optional.ofNullable(this.subscriberProcess);
    }
    /**
     * @return Copy source type.
     * Expected value is &#39;SapOdpSource&#39;.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SapOdpSourceResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Object additionalColumns;
        private @Nullable Object disableMetricsCollection;
        private @Nullable Object extractionMode;
        private @Nullable Object maxConcurrentConnections;
        private @Nullable Object projection;
        private @Nullable Object queryTimeout;
        private @Nullable Object selection;
        private @Nullable Object sourceRetryCount;
        private @Nullable Object sourceRetryWait;
        private @Nullable Object subscriberProcess;
        private String type;
        public Builder() {}
        public Builder(SapOdpSourceResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.additionalColumns = defaults.additionalColumns;
    	      this.disableMetricsCollection = defaults.disableMetricsCollection;
    	      this.extractionMode = defaults.extractionMode;
    	      this.maxConcurrentConnections = defaults.maxConcurrentConnections;
    	      this.projection = defaults.projection;
    	      this.queryTimeout = defaults.queryTimeout;
    	      this.selection = defaults.selection;
    	      this.sourceRetryCount = defaults.sourceRetryCount;
    	      this.sourceRetryWait = defaults.sourceRetryWait;
    	      this.subscriberProcess = defaults.subscriberProcess;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder additionalColumns(@Nullable Object additionalColumns) {
            this.additionalColumns = additionalColumns;
            return this;
        }
        @CustomType.Setter
        public Builder disableMetricsCollection(@Nullable Object disableMetricsCollection) {
            this.disableMetricsCollection = disableMetricsCollection;
            return this;
        }
        @CustomType.Setter
        public Builder extractionMode(@Nullable Object extractionMode) {
            this.extractionMode = extractionMode;
            return this;
        }
        @CustomType.Setter
        public Builder maxConcurrentConnections(@Nullable Object maxConcurrentConnections) {
            this.maxConcurrentConnections = maxConcurrentConnections;
            return this;
        }
        @CustomType.Setter
        public Builder projection(@Nullable Object projection) {
            this.projection = projection;
            return this;
        }
        @CustomType.Setter
        public Builder queryTimeout(@Nullable Object queryTimeout) {
            this.queryTimeout = queryTimeout;
            return this;
        }
        @CustomType.Setter
        public Builder selection(@Nullable Object selection) {
            this.selection = selection;
            return this;
        }
        @CustomType.Setter
        public Builder sourceRetryCount(@Nullable Object sourceRetryCount) {
            this.sourceRetryCount = sourceRetryCount;
            return this;
        }
        @CustomType.Setter
        public Builder sourceRetryWait(@Nullable Object sourceRetryWait) {
            this.sourceRetryWait = sourceRetryWait;
            return this;
        }
        @CustomType.Setter
        public Builder subscriberProcess(@Nullable Object subscriberProcess) {
            this.subscriberProcess = subscriberProcess;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public SapOdpSourceResponse build() {
            final var o = new SapOdpSourceResponse();
            o.additionalColumns = additionalColumns;
            o.disableMetricsCollection = disableMetricsCollection;
            o.extractionMode = extractionMode;
            o.maxConcurrentConnections = maxConcurrentConnections;
            o.projection = projection;
            o.queryTimeout = queryTimeout;
            o.selection = selection;
            o.sourceRetryCount = sourceRetryCount;
            o.sourceRetryWait = sourceRetryWait;
            o.subscriberProcess = subscriberProcess;
            o.type = type;
            return o;
        }
    }
}
