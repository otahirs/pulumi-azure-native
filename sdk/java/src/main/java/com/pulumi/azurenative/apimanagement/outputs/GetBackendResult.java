// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.apimanagement.outputs;

import com.pulumi.azurenative.apimanagement.outputs.BackendCredentialsContractResponse;
import com.pulumi.azurenative.apimanagement.outputs.BackendPropertiesResponse;
import com.pulumi.azurenative.apimanagement.outputs.BackendProxyContractResponse;
import com.pulumi.azurenative.apimanagement.outputs.BackendTlsPropertiesResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetBackendResult {
    /**
     * @return Backend Credentials Contract Properties
     * 
     */
    private @Nullable BackendCredentialsContractResponse credentials;
    /**
     * @return Backend Description.
     * 
     */
    private @Nullable String description;
    /**
     * @return Resource ID.
     * 
     */
    private String id;
    /**
     * @return Resource name.
     * 
     */
    private String name;
    /**
     * @return Backend Properties contract
     * 
     */
    private BackendPropertiesResponse properties;
    /**
     * @return Backend communication protocol.
     * 
     */
    private String protocol;
    /**
     * @return Backend Proxy Contract Properties
     * 
     */
    private @Nullable BackendProxyContractResponse proxy;
    /**
     * @return Management Uri of the Resource in External System. This url can be the Arm Resource Id of Logic Apps, Function Apps or Api Apps.
     * 
     */
    private @Nullable String resourceId;
    /**
     * @return Backend Title.
     * 
     */
    private @Nullable String title;
    /**
     * @return Backend TLS Properties
     * 
     */
    private @Nullable BackendTlsPropertiesResponse tls;
    /**
     * @return Resource type for API Management resource.
     * 
     */
    private String type;
    /**
     * @return Runtime Url of the Backend.
     * 
     */
    private String url;

    private GetBackendResult() {}
    /**
     * @return Backend Credentials Contract Properties
     * 
     */
    public Optional<BackendCredentialsContractResponse> credentials() {
        return Optional.ofNullable(this.credentials);
    }
    /**
     * @return Backend Description.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return Resource ID.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Resource name.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Backend Properties contract
     * 
     */
    public BackendPropertiesResponse properties() {
        return this.properties;
    }
    /**
     * @return Backend communication protocol.
     * 
     */
    public String protocol() {
        return this.protocol;
    }
    /**
     * @return Backend Proxy Contract Properties
     * 
     */
    public Optional<BackendProxyContractResponse> proxy() {
        return Optional.ofNullable(this.proxy);
    }
    /**
     * @return Management Uri of the Resource in External System. This url can be the Arm Resource Id of Logic Apps, Function Apps or Api Apps.
     * 
     */
    public Optional<String> resourceId() {
        return Optional.ofNullable(this.resourceId);
    }
    /**
     * @return Backend Title.
     * 
     */
    public Optional<String> title() {
        return Optional.ofNullable(this.title);
    }
    /**
     * @return Backend TLS Properties
     * 
     */
    public Optional<BackendTlsPropertiesResponse> tls() {
        return Optional.ofNullable(this.tls);
    }
    /**
     * @return Resource type for API Management resource.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return Runtime Url of the Backend.
     * 
     */
    public String url() {
        return this.url;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBackendResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable BackendCredentialsContractResponse credentials;
        private @Nullable String description;
        private String id;
        private String name;
        private BackendPropertiesResponse properties;
        private String protocol;
        private @Nullable BackendProxyContractResponse proxy;
        private @Nullable String resourceId;
        private @Nullable String title;
        private @Nullable BackendTlsPropertiesResponse tls;
        private String type;
        private String url;
        public Builder() {}
        public Builder(GetBackendResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.credentials = defaults.credentials;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.properties = defaults.properties;
    	      this.protocol = defaults.protocol;
    	      this.proxy = defaults.proxy;
    	      this.resourceId = defaults.resourceId;
    	      this.title = defaults.title;
    	      this.tls = defaults.tls;
    	      this.type = defaults.type;
    	      this.url = defaults.url;
        }

        @CustomType.Setter
        public Builder credentials(@Nullable BackendCredentialsContractResponse credentials) {
            this.credentials = credentials;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder properties(BackendPropertiesResponse properties) {
            this.properties = Objects.requireNonNull(properties);
            return this;
        }
        @CustomType.Setter
        public Builder protocol(String protocol) {
            this.protocol = Objects.requireNonNull(protocol);
            return this;
        }
        @CustomType.Setter
        public Builder proxy(@Nullable BackendProxyContractResponse proxy) {
            this.proxy = proxy;
            return this;
        }
        @CustomType.Setter
        public Builder resourceId(@Nullable String resourceId) {
            this.resourceId = resourceId;
            return this;
        }
        @CustomType.Setter
        public Builder title(@Nullable String title) {
            this.title = title;
            return this;
        }
        @CustomType.Setter
        public Builder tls(@Nullable BackendTlsPropertiesResponse tls) {
            this.tls = tls;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder url(String url) {
            this.url = Objects.requireNonNull(url);
            return this;
        }
        public GetBackendResult build() {
            final var o = new GetBackendResult();
            o.credentials = credentials;
            o.description = description;
            o.id = id;
            o.name = name;
            o.properties = properties;
            o.protocol = protocol;
            o.proxy = proxy;
            o.resourceId = resourceId;
            o.title = title;
            o.tls = tls;
            o.type = type;
            o.url = url;
            return o;
        }
    }
}
