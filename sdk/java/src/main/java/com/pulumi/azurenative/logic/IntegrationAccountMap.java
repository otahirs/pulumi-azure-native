// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.logic;

import com.pulumi.azurenative.Utilities;
import com.pulumi.azurenative.logic.IntegrationAccountMapArgs;
import com.pulumi.azurenative.logic.outputs.ContentLinkResponse;
import com.pulumi.azurenative.logic.outputs.IntegrationAccountMapPropertiesResponseParametersSchema;
import com.pulumi.core.Alias;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * The integration account map.
 * API Version: 2019-05-01.
 * 
 * ## Example Usage
 * ### Create or update a map
 * 
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var integrationAccountMap = new IntegrationAccountMap(&#34;integrationAccountMap&#34;, IntegrationAccountMapArgs.builder()        
 *             .content(&#34;&#34;&#34;
 * &lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-16&#34;?&gt;
 * &lt;xsl:stylesheet xmlns:xsl=&#34;http://www.w3.org/1999/XSL/Transform&#34; xmlns:msxsl=&#34;urn:schemas-microsoft-com:xslt&#34; xmlns:var=&#34;http://schemas.microsoft.com/BizTalk/2003/var&#34; exclude-result-prefixes=&#34;msxsl var s0 userCSharp&#34; version=&#34;1.0&#34; xmlns:ns0=&#34;http://BizTalk_Server_Project4.StringFunctoidsDestinationSchema&#34; xmlns:s0=&#34;http://BizTalk_Server_Project4.StringFunctoidsSourceSchema&#34; xmlns:userCSharp=&#34;http://schemas.microsoft.com/BizTalk/2003/userCSharp&#34;&gt;
 *   &lt;xsl:import href=&#34;http://btsfunctoids.blob.core.windows.net/functoids/functoids.xslt&#34; /&gt;
 *   &lt;xsl:output omit-xml-declaration=&#34;yes&#34; method=&#34;xml&#34; version=&#34;1.0&#34; /&gt;
 *   &lt;xsl:template match=&#34;/&#34;&gt;
 *     &lt;xsl:apply-templates select=&#34;/s0:Root&#34; /&gt;
 *   &lt;/xsl:template&gt;
 *   &lt;xsl:template match=&#34;/s0:Root&#34;&gt;
 *     &lt;xsl:variable name=&#34;var:v1&#34; select=&#34;userCSharp:StringFind(string(StringFindSource/text()) , &amp;quot;SearchString&amp;quot;)&#34; /&gt;
 *     &lt;xsl:variable name=&#34;var:v2&#34; select=&#34;userCSharp:StringLeft(string(StringLeftSource/text()) , &amp;quot;2&amp;quot;)&#34; /&gt;
 *     &lt;xsl:variable name=&#34;var:v3&#34; select=&#34;userCSharp:StringRight(string(StringRightSource/text()) , &amp;quot;2&amp;quot;)&#34; /&gt;
 *     &lt;xsl:variable name=&#34;var:v4&#34; select=&#34;userCSharp:StringUpperCase(string(UppercaseSource/text()))&#34; /&gt;
 *     &lt;xsl:variable name=&#34;var:v5&#34; select=&#34;userCSharp:StringLowerCase(string(LowercaseSource/text()))&#34; /&gt;
 *     &lt;xsl:variable name=&#34;var:v6&#34; select=&#34;userCSharp:StringSize(string(SizeSource/text()))&#34; /&gt;
 *     &lt;xsl:variable name=&#34;var:v7&#34; select=&#34;userCSharp:StringSubstring(string(StringExtractSource/text()) , &amp;quot;0&amp;quot; , &amp;quot;2&amp;quot;)&#34; /&gt;
 *     &lt;xsl:variable name=&#34;var:v8&#34; select=&#34;userCSharp:StringConcat(string(StringConcatSource/text()))&#34; /&gt;
 *     &lt;xsl:variable name=&#34;var:v9&#34; select=&#34;userCSharp:StringTrimLeft(string(StringLeftTrimSource/text()))&#34; /&gt;
 *     &lt;xsl:variable name=&#34;var:v10&#34; select=&#34;userCSharp:StringTrimRight(string(StringRightTrimSource/text()))&#34; /&gt;
 *     &lt;ns0:Root&gt;
 *       &lt;StringFindDestination&gt;
 *         &lt;xsl:value-of select=&#34;$var:v1&#34; /&gt;
 *       &lt;/StringFindDestination&gt;
 *       &lt;StringLeftDestination&gt;
 *         &lt;xsl:value-of select=&#34;$var:v2&#34; /&gt;
 *       &lt;/StringLeftDestination&gt;
 *       &lt;StringRightDestination&gt;
 *         &lt;xsl:value-of select=&#34;$var:v3&#34; /&gt;
 *       &lt;/StringRightDestination&gt;
 *       &lt;UppercaseDestination&gt;
 *         &lt;xsl:value-of select=&#34;$var:v4&#34; /&gt;
 *       &lt;/UppercaseDestination&gt;
 *       &lt;LowercaseDestination&gt;
 *         &lt;xsl:value-of select=&#34;$var:v5&#34; /&gt;
 *       &lt;/LowercaseDestination&gt;
 *       &lt;SizeDestination&gt;
 *         &lt;xsl:value-of select=&#34;$var:v6&#34; /&gt;
 *       &lt;/SizeDestination&gt;
 *       &lt;StringExtractDestination&gt;
 *         &lt;xsl:value-of select=&#34;$var:v7&#34; /&gt;
 *       &lt;/StringExtractDestination&gt;
 *       &lt;StringConcatDestination&gt;
 *         &lt;xsl:value-of select=&#34;$var:v8&#34; /&gt;
 *       &lt;/StringConcatDestination&gt;
 *       &lt;StringLeftTrimDestination&gt;
 *         &lt;xsl:value-of select=&#34;$var:v9&#34; /&gt;
 *       &lt;/StringLeftTrimDestination&gt;
 *       &lt;StringRightTrimDestination&gt;
 *         &lt;xsl:value-of select=&#34;$var:v10&#34; /&gt;
 *       &lt;/StringRightTrimDestination&gt;
 *     &lt;/ns0:Root&gt;
 *   &lt;/xsl:template&gt;
 * &lt;/xsl:stylesheet&gt;            &#34;&#34;&#34;)
 *             .contentType(&#34;application/xml&#34;)
 *             .integrationAccountName(&#34;testIntegrationAccount&#34;)
 *             .location(&#34;westus&#34;)
 *             .mapName(&#34;testMap&#34;)
 *             .mapType(&#34;Xslt&#34;)
 *             .metadata()
 *             .resourceGroupName(&#34;testResourceGroup&#34;)
 *             .build());
 * 
 *     }
 * }
 * 
 * ```
 * ### Create or update a map larger than 4 MB
 * 
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var integrationAccountMap = new IntegrationAccountMap(&#34;integrationAccountMap&#34;, IntegrationAccountMapArgs.builder()        
 *             .contentType(&#34;application/xml&#34;)
 *             .integrationAccountName(&#34;testIntegrationAccount&#34;)
 *             .location(&#34;westus&#34;)
 *             .mapName(&#34;testMap&#34;)
 *             .mapType(&#34;Xslt&#34;)
 *             .metadata()
 *             .resourceGroupName(&#34;testResourceGroup&#34;)
 *             .build());
 * 
 *     }
 * }
 * 
 * ```
 * 
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:logic:IntegrationAccountMap testMap /subscriptions/&lt;Azure-subscription-ID&gt;/resourceGroups/refresh/providers/Microsoft.Logic/integrationAccounts/testIntegrationAccount/maps/testMap 
 * ```
 * 
 */
@ResourceType(type="azure-native:logic:IntegrationAccountMap")
public class IntegrationAccountMap extends com.pulumi.resources.CustomResource {
    /**
     * The changed time.
     * 
     */
    @Export(name="changedTime", type=String.class, parameters={})
    private Output<String> changedTime;

    /**
     * @return The changed time.
     * 
     */
    public Output<String> changedTime() {
        return this.changedTime;
    }
    /**
     * The content.
     * 
     */
    @Export(name="content", type=String.class, parameters={})
    private Output</* @Nullable */ String> content;

    /**
     * @return The content.
     * 
     */
    public Output<Optional<String>> content() {
        return Codegen.optional(this.content);
    }
    /**
     * The content link.
     * 
     */
    @Export(name="contentLink", type=ContentLinkResponse.class, parameters={})
    private Output<ContentLinkResponse> contentLink;

    /**
     * @return The content link.
     * 
     */
    public Output<ContentLinkResponse> contentLink() {
        return this.contentLink;
    }
    /**
     * The content type.
     * 
     */
    @Export(name="contentType", type=String.class, parameters={})
    private Output</* @Nullable */ String> contentType;

    /**
     * @return The content type.
     * 
     */
    public Output<Optional<String>> contentType() {
        return Codegen.optional(this.contentType);
    }
    /**
     * The created time.
     * 
     */
    @Export(name="createdTime", type=String.class, parameters={})
    private Output<String> createdTime;

    /**
     * @return The created time.
     * 
     */
    public Output<String> createdTime() {
        return this.createdTime;
    }
    /**
     * The resource location.
     * 
     */
    @Export(name="location", type=String.class, parameters={})
    private Output</* @Nullable */ String> location;

    /**
     * @return The resource location.
     * 
     */
    public Output<Optional<String>> location() {
        return Codegen.optional(this.location);
    }
    /**
     * The map type.
     * 
     */
    @Export(name="mapType", type=String.class, parameters={})
    private Output<String> mapType;

    /**
     * @return The map type.
     * 
     */
    public Output<String> mapType() {
        return this.mapType;
    }
    /**
     * The metadata.
     * 
     */
    @Export(name="metadata", type=Object.class, parameters={})
    private Output</* @Nullable */ Object> metadata;

    /**
     * @return The metadata.
     * 
     */
    public Output<Optional<Object>> metadata() {
        return Codegen.optional(this.metadata);
    }
    /**
     * Gets the resource name.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Gets the resource name.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The parameters schema of integration account map.
     * 
     */
    @Export(name="parametersSchema", type=IntegrationAccountMapPropertiesResponseParametersSchema.class, parameters={})
    private Output</* @Nullable */ IntegrationAccountMapPropertiesResponseParametersSchema> parametersSchema;

    /**
     * @return The parameters schema of integration account map.
     * 
     */
    public Output<Optional<IntegrationAccountMapPropertiesResponseParametersSchema>> parametersSchema() {
        return Codegen.optional(this.parametersSchema);
    }
    /**
     * The resource tags.
     * 
     */
    @Export(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return The resource tags.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * Gets the resource type.
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return Gets the resource type.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public IntegrationAccountMap(String name) {
        this(name, IntegrationAccountMapArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public IntegrationAccountMap(String name, IntegrationAccountMapArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public IntegrationAccountMap(String name, IntegrationAccountMapArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:logic:IntegrationAccountMap", name, args == null ? IntegrationAccountMapArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private IntegrationAccountMap(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:logic:IntegrationAccountMap", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("azure-native:logic/v20150801preview:IntegrationAccountMap").build()),
                Output.of(Alias.builder().type("azure-native:logic/v20160601:IntegrationAccountMap").build()),
                Output.of(Alias.builder().type("azure-native:logic/v20180701preview:IntegrationAccountMap").build()),
                Output.of(Alias.builder().type("azure-native:logic/v20190501:IntegrationAccountMap").build())
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static IntegrationAccountMap get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new IntegrationAccountMap(name, id, options);
    }
}
