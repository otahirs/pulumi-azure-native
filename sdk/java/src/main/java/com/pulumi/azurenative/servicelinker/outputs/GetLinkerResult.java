// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.servicelinker.outputs;

import com.pulumi.azurenative.servicelinker.outputs.SecretAuthInfoResponse;
import com.pulumi.azurenative.servicelinker.outputs.SecretStoreResponse;
import com.pulumi.azurenative.servicelinker.outputs.ServicePrincipalCertificateAuthInfoResponse;
import com.pulumi.azurenative.servicelinker.outputs.ServicePrincipalSecretAuthInfoResponse;
import com.pulumi.azurenative.servicelinker.outputs.SystemAssignedIdentityAuthInfoResponse;
import com.pulumi.azurenative.servicelinker.outputs.SystemDataResponse;
import com.pulumi.azurenative.servicelinker.outputs.UserAssignedIdentityAuthInfoResponse;
import com.pulumi.azurenative.servicelinker.outputs.VNetSolutionResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetLinkerResult {
    /**
     * @return The authentication type.
     * 
     */
    private @Nullable Object authInfo;
    /**
     * @return The application client type
     * 
     */
    private @Nullable String clientType;
    /**
     * @return Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    private String id;
    /**
     * @return The name of the resource
     * 
     */
    private String name;
    /**
     * @return The provisioning state.
     * 
     */
    private String provisioningState;
    /**
     * @return An option to store secret value in secure place
     * 
     */
    private @Nullable SecretStoreResponse secretStore;
    /**
     * @return The system data.
     * 
     */
    private SystemDataResponse systemData;
    /**
     * @return The resource Id of target service.
     * 
     */
    private @Nullable String targetId;
    /**
     * @return The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    private String type;
    /**
     * @return The VNet solution.
     * 
     */
    private @Nullable VNetSolutionResponse vNetSolution;

    private GetLinkerResult() {}
    /**
     * @return The authentication type.
     * 
     */
    public Optional<Object> authInfo() {
        return Optional.ofNullable(this.authInfo);
    }
    /**
     * @return The application client type
     * 
     */
    public Optional<String> clientType() {
        return Optional.ofNullable(this.clientType);
    }
    /**
     * @return Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The name of the resource
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The provisioning state.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * @return An option to store secret value in secure place
     * 
     */
    public Optional<SecretStoreResponse> secretStore() {
        return Optional.ofNullable(this.secretStore);
    }
    /**
     * @return The system data.
     * 
     */
    public SystemDataResponse systemData() {
        return this.systemData;
    }
    /**
     * @return The resource Id of target service.
     * 
     */
    public Optional<String> targetId() {
        return Optional.ofNullable(this.targetId);
    }
    /**
     * @return The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return The VNet solution.
     * 
     */
    public Optional<VNetSolutionResponse> vNetSolution() {
        return Optional.ofNullable(this.vNetSolution);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLinkerResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Object authInfo;
        private @Nullable String clientType;
        private String id;
        private String name;
        private String provisioningState;
        private @Nullable SecretStoreResponse secretStore;
        private SystemDataResponse systemData;
        private @Nullable String targetId;
        private String type;
        private @Nullable VNetSolutionResponse vNetSolution;
        public Builder() {}
        public Builder(GetLinkerResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authInfo = defaults.authInfo;
    	      this.clientType = defaults.clientType;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.provisioningState = defaults.provisioningState;
    	      this.secretStore = defaults.secretStore;
    	      this.systemData = defaults.systemData;
    	      this.targetId = defaults.targetId;
    	      this.type = defaults.type;
    	      this.vNetSolution = defaults.vNetSolution;
        }

        @CustomType.Setter
        public Builder authInfo(@Nullable Object authInfo) {
            this.authInfo = authInfo;
            return this;
        }
        @CustomType.Setter
        public Builder clientType(@Nullable String clientType) {
            this.clientType = clientType;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        @CustomType.Setter
        public Builder secretStore(@Nullable SecretStoreResponse secretStore) {
            this.secretStore = secretStore;
            return this;
        }
        @CustomType.Setter
        public Builder systemData(SystemDataResponse systemData) {
            this.systemData = Objects.requireNonNull(systemData);
            return this;
        }
        @CustomType.Setter
        public Builder targetId(@Nullable String targetId) {
            this.targetId = targetId;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder vNetSolution(@Nullable VNetSolutionResponse vNetSolution) {
            this.vNetSolution = vNetSolution;
            return this;
        }
        public GetLinkerResult build() {
            final var o = new GetLinkerResult();
            o.authInfo = authInfo;
            o.clientType = clientType;
            o.id = id;
            o.name = name;
            o.provisioningState = provisioningState;
            o.secretStore = secretStore;
            o.systemData = systemData;
            o.targetId = targetId;
            o.type = type;
            o.vNetSolution = vNetSolution;
            return o;
        }
    }
}
