// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.workloads.outputs;

import com.pulumi.azurenative.workloads.outputs.DatabaseVmDetailsResponse;
import com.pulumi.azurenative.workloads.outputs.SAPVirtualInstanceErrorResponse;
import com.pulumi.azurenative.workloads.outputs.SystemDataResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetSAPDatabaseInstanceResult {
    /**
     * @return The database SID.
     * 
     */
    private String databaseSid;
    /**
     * @return The SAP database type.
     * 
     */
    private String databaseType;
    /**
     * @return Defines the Database Instance errors.
     * 
     */
    private SAPVirtualInstanceErrorResponse errors;
    /**
     * @return Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    private String id;
    /**
     * @return The database IP Address.
     * 
     */
    private String ipAddress;
    /**
     * @return The geo-location where the resource lives
     * 
     */
    private String location;
    /**
     * @return The name of the resource
     * 
     */
    private String name;
    /**
     * @return Defines the provisioning states.
     * 
     */
    private String provisioningState;
    /**
     * @return Defines the SAP Instance status.
     * 
     */
    private String status;
    /**
     * @return The database subnet.
     * 
     */
    private String subnet;
    /**
     * @return Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     */
    private SystemDataResponse systemData;
    /**
     * @return Resource tags.
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    private String type;
    /**
     * @return The list of virtual machines.
     * 
     */
    private List<DatabaseVmDetailsResponse> vmDetails;

    private GetSAPDatabaseInstanceResult() {}
    /**
     * @return The database SID.
     * 
     */
    public String databaseSid() {
        return this.databaseSid;
    }
    /**
     * @return The SAP database type.
     * 
     */
    public String databaseType() {
        return this.databaseType;
    }
    /**
     * @return Defines the Database Instance errors.
     * 
     */
    public SAPVirtualInstanceErrorResponse errors() {
        return this.errors;
    }
    /**
     * @return Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The database IP Address.
     * 
     */
    public String ipAddress() {
        return this.ipAddress;
    }
    /**
     * @return The geo-location where the resource lives
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return The name of the resource
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Defines the provisioning states.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * @return Defines the SAP Instance status.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return The database subnet.
     * 
     */
    public String subnet() {
        return this.subnet;
    }
    /**
     * @return Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     */
    public SystemDataResponse systemData() {
        return this.systemData;
    }
    /**
     * @return Resource tags.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return The list of virtual machines.
     * 
     */
    public List<DatabaseVmDetailsResponse> vmDetails() {
        return this.vmDetails;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSAPDatabaseInstanceResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String databaseSid;
        private String databaseType;
        private SAPVirtualInstanceErrorResponse errors;
        private String id;
        private String ipAddress;
        private String location;
        private String name;
        private String provisioningState;
        private String status;
        private String subnet;
        private SystemDataResponse systemData;
        private @Nullable Map<String,String> tags;
        private String type;
        private List<DatabaseVmDetailsResponse> vmDetails;
        public Builder() {}
        public Builder(GetSAPDatabaseInstanceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.databaseSid = defaults.databaseSid;
    	      this.databaseType = defaults.databaseType;
    	      this.errors = defaults.errors;
    	      this.id = defaults.id;
    	      this.ipAddress = defaults.ipAddress;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.provisioningState = defaults.provisioningState;
    	      this.status = defaults.status;
    	      this.subnet = defaults.subnet;
    	      this.systemData = defaults.systemData;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
    	      this.vmDetails = defaults.vmDetails;
        }

        @CustomType.Setter
        public Builder databaseSid(String databaseSid) {
            this.databaseSid = Objects.requireNonNull(databaseSid);
            return this;
        }
        @CustomType.Setter
        public Builder databaseType(String databaseType) {
            this.databaseType = Objects.requireNonNull(databaseType);
            return this;
        }
        @CustomType.Setter
        public Builder errors(SAPVirtualInstanceErrorResponse errors) {
            this.errors = Objects.requireNonNull(errors);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder ipAddress(String ipAddress) {
            this.ipAddress = Objects.requireNonNull(ipAddress);
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        @CustomType.Setter
        public Builder subnet(String subnet) {
            this.subnet = Objects.requireNonNull(subnet);
            return this;
        }
        @CustomType.Setter
        public Builder systemData(SystemDataResponse systemData) {
            this.systemData = Objects.requireNonNull(systemData);
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder vmDetails(List<DatabaseVmDetailsResponse> vmDetails) {
            this.vmDetails = Objects.requireNonNull(vmDetails);
            return this;
        }
        public Builder vmDetails(DatabaseVmDetailsResponse... vmDetails) {
            return vmDetails(List.of(vmDetails));
        }
        public GetSAPDatabaseInstanceResult build() {
            final var o = new GetSAPDatabaseInstanceResult();
            o.databaseSid = databaseSid;
            o.databaseType = databaseType;
            o.errors = errors;
            o.id = id;
            o.ipAddress = ipAddress;
            o.location = location;
            o.name = name;
            o.provisioningState = provisioningState;
            o.status = status;
            o.subnet = subnet;
            o.systemData = systemData;
            o.tags = tags;
            o.type = type;
            o.vmDetails = vmDetails;
            return o;
        }
    }
}
