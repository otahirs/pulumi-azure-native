// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.app.outputs;

import com.pulumi.azurenative.app.outputs.AppLogsConfigurationResponse;
import com.pulumi.azurenative.app.outputs.SystemDataResponse;
import com.pulumi.azurenative.app.outputs.VnetConfigurationResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetManagedEnvironmentResult {
    /**
     * @return Cluster configuration which enables the log daemon to export
     * app logs to a destination. Currently only &#34;log-analytics&#34; is
     * supported
     * 
     */
    private @Nullable AppLogsConfigurationResponse appLogsConfiguration;
    /**
     * @return Application Insights connection string used by Dapr to export Service to Service communication telemetry
     * 
     */
    private @Nullable String daprAIConnectionString;
    /**
     * @return Azure Monitor instrumentation key used by Dapr to export Service to Service communication telemetry
     * 
     */
    private @Nullable String daprAIInstrumentationKey;
    /**
     * @return Default Domain Name for the cluster
     * 
     */
    private String defaultDomain;
    /**
     * @return Any errors that occurred during deployment or deployment validation
     * 
     */
    private String deploymentErrors;
    /**
     * @return Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    private String id;
    /**
     * @return The geo-location where the resource lives
     * 
     */
    private String location;
    /**
     * @return The name of the resource
     * 
     */
    private String name;
    /**
     * @return Provisioning state of the Environment.
     * 
     */
    private String provisioningState;
    /**
     * @return Static IP of the Environment
     * 
     */
    private String staticIp;
    /**
     * @return Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     */
    private SystemDataResponse systemData;
    /**
     * @return Resource tags.
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    private String type;
    /**
     * @return Vnet configuration for the environment
     * 
     */
    private @Nullable VnetConfigurationResponse vnetConfiguration;
    /**
     * @return Whether or not this Managed Environment is zone-redundant.
     * 
     */
    private @Nullable Boolean zoneRedundant;

    private GetManagedEnvironmentResult() {}
    /**
     * @return Cluster configuration which enables the log daemon to export
     * app logs to a destination. Currently only &#34;log-analytics&#34; is
     * supported
     * 
     */
    public Optional<AppLogsConfigurationResponse> appLogsConfiguration() {
        return Optional.ofNullable(this.appLogsConfiguration);
    }
    /**
     * @return Application Insights connection string used by Dapr to export Service to Service communication telemetry
     * 
     */
    public Optional<String> daprAIConnectionString() {
        return Optional.ofNullable(this.daprAIConnectionString);
    }
    /**
     * @return Azure Monitor instrumentation key used by Dapr to export Service to Service communication telemetry
     * 
     */
    public Optional<String> daprAIInstrumentationKey() {
        return Optional.ofNullable(this.daprAIInstrumentationKey);
    }
    /**
     * @return Default Domain Name for the cluster
     * 
     */
    public String defaultDomain() {
        return this.defaultDomain;
    }
    /**
     * @return Any errors that occurred during deployment or deployment validation
     * 
     */
    public String deploymentErrors() {
        return this.deploymentErrors;
    }
    /**
     * @return Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The geo-location where the resource lives
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return The name of the resource
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Provisioning state of the Environment.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * @return Static IP of the Environment
     * 
     */
    public String staticIp() {
        return this.staticIp;
    }
    /**
     * @return Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     */
    public SystemDataResponse systemData() {
        return this.systemData;
    }
    /**
     * @return Resource tags.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return Vnet configuration for the environment
     * 
     */
    public Optional<VnetConfigurationResponse> vnetConfiguration() {
        return Optional.ofNullable(this.vnetConfiguration);
    }
    /**
     * @return Whether or not this Managed Environment is zone-redundant.
     * 
     */
    public Optional<Boolean> zoneRedundant() {
        return Optional.ofNullable(this.zoneRedundant);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetManagedEnvironmentResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable AppLogsConfigurationResponse appLogsConfiguration;
        private @Nullable String daprAIConnectionString;
        private @Nullable String daprAIInstrumentationKey;
        private String defaultDomain;
        private String deploymentErrors;
        private String id;
        private String location;
        private String name;
        private String provisioningState;
        private String staticIp;
        private SystemDataResponse systemData;
        private @Nullable Map<String,String> tags;
        private String type;
        private @Nullable VnetConfigurationResponse vnetConfiguration;
        private @Nullable Boolean zoneRedundant;
        public Builder() {}
        public Builder(GetManagedEnvironmentResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.appLogsConfiguration = defaults.appLogsConfiguration;
    	      this.daprAIConnectionString = defaults.daprAIConnectionString;
    	      this.daprAIInstrumentationKey = defaults.daprAIInstrumentationKey;
    	      this.defaultDomain = defaults.defaultDomain;
    	      this.deploymentErrors = defaults.deploymentErrors;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.provisioningState = defaults.provisioningState;
    	      this.staticIp = defaults.staticIp;
    	      this.systemData = defaults.systemData;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
    	      this.vnetConfiguration = defaults.vnetConfiguration;
    	      this.zoneRedundant = defaults.zoneRedundant;
        }

        @CustomType.Setter
        public Builder appLogsConfiguration(@Nullable AppLogsConfigurationResponse appLogsConfiguration) {
            this.appLogsConfiguration = appLogsConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder daprAIConnectionString(@Nullable String daprAIConnectionString) {
            this.daprAIConnectionString = daprAIConnectionString;
            return this;
        }
        @CustomType.Setter
        public Builder daprAIInstrumentationKey(@Nullable String daprAIInstrumentationKey) {
            this.daprAIInstrumentationKey = daprAIInstrumentationKey;
            return this;
        }
        @CustomType.Setter
        public Builder defaultDomain(String defaultDomain) {
            this.defaultDomain = Objects.requireNonNull(defaultDomain);
            return this;
        }
        @CustomType.Setter
        public Builder deploymentErrors(String deploymentErrors) {
            this.deploymentErrors = Objects.requireNonNull(deploymentErrors);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        @CustomType.Setter
        public Builder staticIp(String staticIp) {
            this.staticIp = Objects.requireNonNull(staticIp);
            return this;
        }
        @CustomType.Setter
        public Builder systemData(SystemDataResponse systemData) {
            this.systemData = Objects.requireNonNull(systemData);
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder vnetConfiguration(@Nullable VnetConfigurationResponse vnetConfiguration) {
            this.vnetConfiguration = vnetConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder zoneRedundant(@Nullable Boolean zoneRedundant) {
            this.zoneRedundant = zoneRedundant;
            return this;
        }
        public GetManagedEnvironmentResult build() {
            final var o = new GetManagedEnvironmentResult();
            o.appLogsConfiguration = appLogsConfiguration;
            o.daprAIConnectionString = daprAIConnectionString;
            o.daprAIInstrumentationKey = daprAIInstrumentationKey;
            o.defaultDomain = defaultDomain;
            o.deploymentErrors = deploymentErrors;
            o.id = id;
            o.location = location;
            o.name = name;
            o.provisioningState = provisioningState;
            o.staticIp = staticIp;
            o.systemData = systemData;
            o.tags = tags;
            o.type = type;
            o.vnetConfiguration = vnetConfiguration;
            o.zoneRedundant = zoneRedundant;
            return o;
        }
    }
}
