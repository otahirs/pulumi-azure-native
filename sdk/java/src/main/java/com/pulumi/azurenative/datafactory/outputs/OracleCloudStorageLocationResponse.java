// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datafactory.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class OracleCloudStorageLocationResponse {
    /**
     * @return Specify the bucketName of Oracle Cloud Storage. Type: string (or Expression with resultType string)
     * 
     */
    private @Nullable Object bucketName;
    /**
     * @return Specify the file name of dataset. Type: string (or Expression with resultType string).
     * 
     */
    private @Nullable Object fileName;
    /**
     * @return Specify the folder path of dataset. Type: string (or Expression with resultType string)
     * 
     */
    private @Nullable Object folderPath;
    /**
     * @return Type of dataset storage location.
     * Expected value is &#39;OracleCloudStorageLocation&#39;.
     * 
     */
    private String type;
    /**
     * @return Specify the version of Oracle Cloud Storage. Type: string (or Expression with resultType string).
     * 
     */
    private @Nullable Object version;

    private OracleCloudStorageLocationResponse() {}
    /**
     * @return Specify the bucketName of Oracle Cloud Storage. Type: string (or Expression with resultType string)
     * 
     */
    public Optional<Object> bucketName() {
        return Optional.ofNullable(this.bucketName);
    }
    /**
     * @return Specify the file name of dataset. Type: string (or Expression with resultType string).
     * 
     */
    public Optional<Object> fileName() {
        return Optional.ofNullable(this.fileName);
    }
    /**
     * @return Specify the folder path of dataset. Type: string (or Expression with resultType string)
     * 
     */
    public Optional<Object> folderPath() {
        return Optional.ofNullable(this.folderPath);
    }
    /**
     * @return Type of dataset storage location.
     * Expected value is &#39;OracleCloudStorageLocation&#39;.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return Specify the version of Oracle Cloud Storage. Type: string (or Expression with resultType string).
     * 
     */
    public Optional<Object> version() {
        return Optional.ofNullable(this.version);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OracleCloudStorageLocationResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Object bucketName;
        private @Nullable Object fileName;
        private @Nullable Object folderPath;
        private String type;
        private @Nullable Object version;
        public Builder() {}
        public Builder(OracleCloudStorageLocationResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bucketName = defaults.bucketName;
    	      this.fileName = defaults.fileName;
    	      this.folderPath = defaults.folderPath;
    	      this.type = defaults.type;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder bucketName(@Nullable Object bucketName) {
            this.bucketName = bucketName;
            return this;
        }
        @CustomType.Setter
        public Builder fileName(@Nullable Object fileName) {
            this.fileName = fileName;
            return this;
        }
        @CustomType.Setter
        public Builder folderPath(@Nullable Object folderPath) {
            this.folderPath = folderPath;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder version(@Nullable Object version) {
            this.version = version;
            return this;
        }
        public OracleCloudStorageLocationResponse build() {
            final var o = new OracleCloudStorageLocationResponse();
            o.bucketName = bucketName;
            o.fileName = fileName;
            o.folderPath = folderPath;
            o.type = type;
            o.version = version;
            return o;
        }
    }
}
