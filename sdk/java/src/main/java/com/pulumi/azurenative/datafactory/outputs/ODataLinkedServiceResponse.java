// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datafactory.outputs;

import com.pulumi.azurenative.datafactory.outputs.AzureKeyVaultSecretReferenceResponse;
import com.pulumi.azurenative.datafactory.outputs.IntegrationRuntimeReferenceResponse;
import com.pulumi.azurenative.datafactory.outputs.ParameterSpecificationResponse;
import com.pulumi.azurenative.datafactory.outputs.SecureStringResponse;
import com.pulumi.core.Either;
import com.pulumi.core.annotations.CustomType;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ODataLinkedServiceResponse {
    /**
     * @return Specify the resource you are requesting authorization to use Directory. Type: string (or Expression with resultType string).
     * 
     */
    private @Nullable Object aadResourceId;
    /**
     * @return Specify the credential type (key or cert) is used for service principal.
     * 
     */
    private @Nullable String aadServicePrincipalCredentialType;
    /**
     * @return List of tags that can be used for describing the linked service.
     * 
     */
    private @Nullable List<Object> annotations;
    /**
     * @return The additional HTTP headers in the request to RESTful API used for authorization. Type: object (or Expression with resultType object).
     * 
     */
    private @Nullable Object authHeaders;
    /**
     * @return Type of authentication used to connect to the OData service.
     * 
     */
    private @Nullable String authenticationType;
    /**
     * @return Indicates the azure cloud type of the service principle auth. Allowed values are AzurePublic, AzureChina, AzureUsGovernment, AzureGermany. Default value is the data factory regions’ cloud type. Type: string (or Expression with resultType string).
     * 
     */
    private @Nullable Object azureCloudType;
    /**
     * @return The integration runtime reference.
     * 
     */
    private @Nullable IntegrationRuntimeReferenceResponse connectVia;
    /**
     * @return Linked service description.
     * 
     */
    private @Nullable String description;
    /**
     * @return The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
     * 
     */
    private @Nullable Object encryptedCredential;
    /**
     * @return Parameters for linked service.
     * 
     */
    private @Nullable Map<String,ParameterSpecificationResponse> parameters;
    /**
     * @return Password of the OData service.
     * 
     */
    private @Nullable Either<AzureKeyVaultSecretReferenceResponse,SecureStringResponse> password;
    /**
     * @return Specify the base64 encoded certificate of your application registered in Azure Active Directory. Type: string (or Expression with resultType string).
     * 
     */
    private @Nullable Either<AzureKeyVaultSecretReferenceResponse,SecureStringResponse> servicePrincipalEmbeddedCert;
    /**
     * @return Specify the password of your certificate if your certificate has a password and you are using AadServicePrincipal authentication. Type: string (or Expression with resultType string).
     * 
     */
    private @Nullable Either<AzureKeyVaultSecretReferenceResponse,SecureStringResponse> servicePrincipalEmbeddedCertPassword;
    /**
     * @return Specify the application id of your application registered in Azure Active Directory. Type: string (or Expression with resultType string).
     * 
     */
    private @Nullable Object servicePrincipalId;
    /**
     * @return Specify the secret of your application registered in Azure Active Directory. Type: string (or Expression with resultType string).
     * 
     */
    private @Nullable Either<AzureKeyVaultSecretReferenceResponse,SecureStringResponse> servicePrincipalKey;
    /**
     * @return Specify the tenant information (domain name or tenant ID) under which your application resides. Type: string (or Expression with resultType string).
     * 
     */
    private @Nullable Object tenant;
    /**
     * @return Type of linked service.
     * Expected value is &#39;OData&#39;.
     * 
     */
    private String type;
    /**
     * @return The URL of the OData service endpoint. Type: string (or Expression with resultType string).
     * 
     */
    private Object url;
    /**
     * @return User name of the OData service. Type: string (or Expression with resultType string).
     * 
     */
    private @Nullable Object userName;

    private ODataLinkedServiceResponse() {}
    /**
     * @return Specify the resource you are requesting authorization to use Directory. Type: string (or Expression with resultType string).
     * 
     */
    public Optional<Object> aadResourceId() {
        return Optional.ofNullable(this.aadResourceId);
    }
    /**
     * @return Specify the credential type (key or cert) is used for service principal.
     * 
     */
    public Optional<String> aadServicePrincipalCredentialType() {
        return Optional.ofNullable(this.aadServicePrincipalCredentialType);
    }
    /**
     * @return List of tags that can be used for describing the linked service.
     * 
     */
    public List<Object> annotations() {
        return this.annotations == null ? List.of() : this.annotations;
    }
    /**
     * @return The additional HTTP headers in the request to RESTful API used for authorization. Type: object (or Expression with resultType object).
     * 
     */
    public Optional<Object> authHeaders() {
        return Optional.ofNullable(this.authHeaders);
    }
    /**
     * @return Type of authentication used to connect to the OData service.
     * 
     */
    public Optional<String> authenticationType() {
        return Optional.ofNullable(this.authenticationType);
    }
    /**
     * @return Indicates the azure cloud type of the service principle auth. Allowed values are AzurePublic, AzureChina, AzureUsGovernment, AzureGermany. Default value is the data factory regions’ cloud type. Type: string (or Expression with resultType string).
     * 
     */
    public Optional<Object> azureCloudType() {
        return Optional.ofNullable(this.azureCloudType);
    }
    /**
     * @return The integration runtime reference.
     * 
     */
    public Optional<IntegrationRuntimeReferenceResponse> connectVia() {
        return Optional.ofNullable(this.connectVia);
    }
    /**
     * @return Linked service description.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
     * 
     */
    public Optional<Object> encryptedCredential() {
        return Optional.ofNullable(this.encryptedCredential);
    }
    /**
     * @return Parameters for linked service.
     * 
     */
    public Map<String,ParameterSpecificationResponse> parameters() {
        return this.parameters == null ? Map.of() : this.parameters;
    }
    /**
     * @return Password of the OData service.
     * 
     */
    public Optional<Either<AzureKeyVaultSecretReferenceResponse,SecureStringResponse>> password() {
        return Optional.ofNullable(this.password);
    }
    /**
     * @return Specify the base64 encoded certificate of your application registered in Azure Active Directory. Type: string (or Expression with resultType string).
     * 
     */
    public Optional<Either<AzureKeyVaultSecretReferenceResponse,SecureStringResponse>> servicePrincipalEmbeddedCert() {
        return Optional.ofNullable(this.servicePrincipalEmbeddedCert);
    }
    /**
     * @return Specify the password of your certificate if your certificate has a password and you are using AadServicePrincipal authentication. Type: string (or Expression with resultType string).
     * 
     */
    public Optional<Either<AzureKeyVaultSecretReferenceResponse,SecureStringResponse>> servicePrincipalEmbeddedCertPassword() {
        return Optional.ofNullable(this.servicePrincipalEmbeddedCertPassword);
    }
    /**
     * @return Specify the application id of your application registered in Azure Active Directory. Type: string (or Expression with resultType string).
     * 
     */
    public Optional<Object> servicePrincipalId() {
        return Optional.ofNullable(this.servicePrincipalId);
    }
    /**
     * @return Specify the secret of your application registered in Azure Active Directory. Type: string (or Expression with resultType string).
     * 
     */
    public Optional<Either<AzureKeyVaultSecretReferenceResponse,SecureStringResponse>> servicePrincipalKey() {
        return Optional.ofNullable(this.servicePrincipalKey);
    }
    /**
     * @return Specify the tenant information (domain name or tenant ID) under which your application resides. Type: string (or Expression with resultType string).
     * 
     */
    public Optional<Object> tenant() {
        return Optional.ofNullable(this.tenant);
    }
    /**
     * @return Type of linked service.
     * Expected value is &#39;OData&#39;.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return The URL of the OData service endpoint. Type: string (or Expression with resultType string).
     * 
     */
    public Object url() {
        return this.url;
    }
    /**
     * @return User name of the OData service. Type: string (or Expression with resultType string).
     * 
     */
    public Optional<Object> userName() {
        return Optional.ofNullable(this.userName);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ODataLinkedServiceResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Object aadResourceId;
        private @Nullable String aadServicePrincipalCredentialType;
        private @Nullable List<Object> annotations;
        private @Nullable Object authHeaders;
        private @Nullable String authenticationType;
        private @Nullable Object azureCloudType;
        private @Nullable IntegrationRuntimeReferenceResponse connectVia;
        private @Nullable String description;
        private @Nullable Object encryptedCredential;
        private @Nullable Map<String,ParameterSpecificationResponse> parameters;
        private @Nullable Either<AzureKeyVaultSecretReferenceResponse,SecureStringResponse> password;
        private @Nullable Either<AzureKeyVaultSecretReferenceResponse,SecureStringResponse> servicePrincipalEmbeddedCert;
        private @Nullable Either<AzureKeyVaultSecretReferenceResponse,SecureStringResponse> servicePrincipalEmbeddedCertPassword;
        private @Nullable Object servicePrincipalId;
        private @Nullable Either<AzureKeyVaultSecretReferenceResponse,SecureStringResponse> servicePrincipalKey;
        private @Nullable Object tenant;
        private String type;
        private Object url;
        private @Nullable Object userName;
        public Builder() {}
        public Builder(ODataLinkedServiceResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aadResourceId = defaults.aadResourceId;
    	      this.aadServicePrincipalCredentialType = defaults.aadServicePrincipalCredentialType;
    	      this.annotations = defaults.annotations;
    	      this.authHeaders = defaults.authHeaders;
    	      this.authenticationType = defaults.authenticationType;
    	      this.azureCloudType = defaults.azureCloudType;
    	      this.connectVia = defaults.connectVia;
    	      this.description = defaults.description;
    	      this.encryptedCredential = defaults.encryptedCredential;
    	      this.parameters = defaults.parameters;
    	      this.password = defaults.password;
    	      this.servicePrincipalEmbeddedCert = defaults.servicePrincipalEmbeddedCert;
    	      this.servicePrincipalEmbeddedCertPassword = defaults.servicePrincipalEmbeddedCertPassword;
    	      this.servicePrincipalId = defaults.servicePrincipalId;
    	      this.servicePrincipalKey = defaults.servicePrincipalKey;
    	      this.tenant = defaults.tenant;
    	      this.type = defaults.type;
    	      this.url = defaults.url;
    	      this.userName = defaults.userName;
        }

        @CustomType.Setter
        public Builder aadResourceId(@Nullable Object aadResourceId) {
            this.aadResourceId = aadResourceId;
            return this;
        }
        @CustomType.Setter
        public Builder aadServicePrincipalCredentialType(@Nullable String aadServicePrincipalCredentialType) {
            this.aadServicePrincipalCredentialType = aadServicePrincipalCredentialType;
            return this;
        }
        @CustomType.Setter
        public Builder annotations(@Nullable List<Object> annotations) {
            this.annotations = annotations;
            return this;
        }
        public Builder annotations(Object... annotations) {
            return annotations(List.of(annotations));
        }
        @CustomType.Setter
        public Builder authHeaders(@Nullable Object authHeaders) {
            this.authHeaders = authHeaders;
            return this;
        }
        @CustomType.Setter
        public Builder authenticationType(@Nullable String authenticationType) {
            this.authenticationType = authenticationType;
            return this;
        }
        @CustomType.Setter
        public Builder azureCloudType(@Nullable Object azureCloudType) {
            this.azureCloudType = azureCloudType;
            return this;
        }
        @CustomType.Setter
        public Builder connectVia(@Nullable IntegrationRuntimeReferenceResponse connectVia) {
            this.connectVia = connectVia;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder encryptedCredential(@Nullable Object encryptedCredential) {
            this.encryptedCredential = encryptedCredential;
            return this;
        }
        @CustomType.Setter
        public Builder parameters(@Nullable Map<String,ParameterSpecificationResponse> parameters) {
            this.parameters = parameters;
            return this;
        }
        @CustomType.Setter
        public Builder password(@Nullable Either<AzureKeyVaultSecretReferenceResponse,SecureStringResponse> password) {
            this.password = password;
            return this;
        }
        @CustomType.Setter
        public Builder servicePrincipalEmbeddedCert(@Nullable Either<AzureKeyVaultSecretReferenceResponse,SecureStringResponse> servicePrincipalEmbeddedCert) {
            this.servicePrincipalEmbeddedCert = servicePrincipalEmbeddedCert;
            return this;
        }
        @CustomType.Setter
        public Builder servicePrincipalEmbeddedCertPassword(@Nullable Either<AzureKeyVaultSecretReferenceResponse,SecureStringResponse> servicePrincipalEmbeddedCertPassword) {
            this.servicePrincipalEmbeddedCertPassword = servicePrincipalEmbeddedCertPassword;
            return this;
        }
        @CustomType.Setter
        public Builder servicePrincipalId(@Nullable Object servicePrincipalId) {
            this.servicePrincipalId = servicePrincipalId;
            return this;
        }
        @CustomType.Setter
        public Builder servicePrincipalKey(@Nullable Either<AzureKeyVaultSecretReferenceResponse,SecureStringResponse> servicePrincipalKey) {
            this.servicePrincipalKey = servicePrincipalKey;
            return this;
        }
        @CustomType.Setter
        public Builder tenant(@Nullable Object tenant) {
            this.tenant = tenant;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder url(Object url) {
            this.url = Objects.requireNonNull(url);
            return this;
        }
        @CustomType.Setter
        public Builder userName(@Nullable Object userName) {
            this.userName = userName;
            return this;
        }
        public ODataLinkedServiceResponse build() {
            final var o = new ODataLinkedServiceResponse();
            o.aadResourceId = aadResourceId;
            o.aadServicePrincipalCredentialType = aadServicePrincipalCredentialType;
            o.annotations = annotations;
            o.authHeaders = authHeaders;
            o.authenticationType = authenticationType;
            o.azureCloudType = azureCloudType;
            o.connectVia = connectVia;
            o.description = description;
            o.encryptedCredential = encryptedCredential;
            o.parameters = parameters;
            o.password = password;
            o.servicePrincipalEmbeddedCert = servicePrincipalEmbeddedCert;
            o.servicePrincipalEmbeddedCertPassword = servicePrincipalEmbeddedCertPassword;
            o.servicePrincipalId = servicePrincipalId;
            o.servicePrincipalKey = servicePrincipalKey;
            o.tenant = tenant;
            o.type = type;
            o.url = url;
            o.userName = userName;
            return o;
        }
    }
}
