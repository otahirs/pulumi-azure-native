// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.streamanalytics.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class IoTHubStreamInputDataSourceResponse {
    /**
     * @return The name of an IoT Hub Consumer Group that should be used to read events from the IoT Hub. If not specified, the input uses the Iot Hub’s default consumer group.
     * 
     */
    private @Nullable String consumerGroupName;
    /**
     * @return The IoT Hub endpoint to connect to (ie. messages/events, messages/operationsMonitoringEvents, etc.).
     * 
     */
    private @Nullable String endpoint;
    /**
     * @return The name or the URI of the IoT Hub. Required on PUT (CreateOrReplace) requests.
     * 
     */
    private @Nullable String iotHubNamespace;
    /**
     * @return The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests.
     * 
     */
    private @Nullable String sharedAccessPolicyKey;
    /**
     * @return The shared access policy name for the IoT Hub. This policy must contain at least the Service connect permission. Required on PUT (CreateOrReplace) requests.
     * 
     */
    private @Nullable String sharedAccessPolicyName;
    /**
     * @return Indicates the type of input data source containing stream data. Required on PUT (CreateOrReplace) requests.
     * Expected value is &#39;Microsoft.Devices/IotHubs&#39;.
     * 
     */
    private String type;

    private IoTHubStreamInputDataSourceResponse() {}
    /**
     * @return The name of an IoT Hub Consumer Group that should be used to read events from the IoT Hub. If not specified, the input uses the Iot Hub’s default consumer group.
     * 
     */
    public Optional<String> consumerGroupName() {
        return Optional.ofNullable(this.consumerGroupName);
    }
    /**
     * @return The IoT Hub endpoint to connect to (ie. messages/events, messages/operationsMonitoringEvents, etc.).
     * 
     */
    public Optional<String> endpoint() {
        return Optional.ofNullable(this.endpoint);
    }
    /**
     * @return The name or the URI of the IoT Hub. Required on PUT (CreateOrReplace) requests.
     * 
     */
    public Optional<String> iotHubNamespace() {
        return Optional.ofNullable(this.iotHubNamespace);
    }
    /**
     * @return The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests.
     * 
     */
    public Optional<String> sharedAccessPolicyKey() {
        return Optional.ofNullable(this.sharedAccessPolicyKey);
    }
    /**
     * @return The shared access policy name for the IoT Hub. This policy must contain at least the Service connect permission. Required on PUT (CreateOrReplace) requests.
     * 
     */
    public Optional<String> sharedAccessPolicyName() {
        return Optional.ofNullable(this.sharedAccessPolicyName);
    }
    /**
     * @return Indicates the type of input data source containing stream data. Required on PUT (CreateOrReplace) requests.
     * Expected value is &#39;Microsoft.Devices/IotHubs&#39;.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IoTHubStreamInputDataSourceResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String consumerGroupName;
        private @Nullable String endpoint;
        private @Nullable String iotHubNamespace;
        private @Nullable String sharedAccessPolicyKey;
        private @Nullable String sharedAccessPolicyName;
        private String type;
        public Builder() {}
        public Builder(IoTHubStreamInputDataSourceResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.consumerGroupName = defaults.consumerGroupName;
    	      this.endpoint = defaults.endpoint;
    	      this.iotHubNamespace = defaults.iotHubNamespace;
    	      this.sharedAccessPolicyKey = defaults.sharedAccessPolicyKey;
    	      this.sharedAccessPolicyName = defaults.sharedAccessPolicyName;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder consumerGroupName(@Nullable String consumerGroupName) {
            this.consumerGroupName = consumerGroupName;
            return this;
        }
        @CustomType.Setter
        public Builder endpoint(@Nullable String endpoint) {
            this.endpoint = endpoint;
            return this;
        }
        @CustomType.Setter
        public Builder iotHubNamespace(@Nullable String iotHubNamespace) {
            this.iotHubNamespace = iotHubNamespace;
            return this;
        }
        @CustomType.Setter
        public Builder sharedAccessPolicyKey(@Nullable String sharedAccessPolicyKey) {
            this.sharedAccessPolicyKey = sharedAccessPolicyKey;
            return this;
        }
        @CustomType.Setter
        public Builder sharedAccessPolicyName(@Nullable String sharedAccessPolicyName) {
            this.sharedAccessPolicyName = sharedAccessPolicyName;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public IoTHubStreamInputDataSourceResponse build() {
            final var o = new IoTHubStreamInputDataSourceResponse();
            o.consumerGroupName = consumerGroupName;
            o.endpoint = endpoint;
            o.iotHubNamespace = iotHubNamespace;
            o.sharedAccessPolicyKey = sharedAccessPolicyKey;
            o.sharedAccessPolicyName = sharedAccessPolicyName;
            o.type = type;
            return o;
        }
    }
}
