// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.hybridnetwork.outputs;

import com.pulumi.azurenative.hybridnetwork.outputs.SubResourceResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetDeviceResult {
    /**
     * @return The type of the device.
     * 
     */
    private String deviceType;
    /**
     * @return Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    private String id;
    /**
     * @return The geo-location where the resource lives
     * 
     */
    private String location;
    /**
     * @return The name of the resource
     * 
     */
    private String name;
    /**
     * @return The list of network functions deployed on the device.
     * 
     */
    private List<SubResourceResponse> networkFunctions;
    /**
     * @return The provisioning state of the device resource.
     * 
     */
    private String provisioningState;
    /**
     * @return The current device status.
     * 
     */
    private String status;
    /**
     * @return Resource tags.
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    private String type;

    private GetDeviceResult() {}
    /**
     * @return The type of the device.
     * 
     */
    public String deviceType() {
        return this.deviceType;
    }
    /**
     * @return Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The geo-location where the resource lives
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return The name of the resource
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The list of network functions deployed on the device.
     * 
     */
    public List<SubResourceResponse> networkFunctions() {
        return this.networkFunctions;
    }
    /**
     * @return The provisioning state of the device resource.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * @return The current device status.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return Resource tags.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDeviceResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String deviceType;
        private String id;
        private String location;
        private String name;
        private List<SubResourceResponse> networkFunctions;
        private String provisioningState;
        private String status;
        private @Nullable Map<String,String> tags;
        private String type;
        public Builder() {}
        public Builder(GetDeviceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.deviceType = defaults.deviceType;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.networkFunctions = defaults.networkFunctions;
    	      this.provisioningState = defaults.provisioningState;
    	      this.status = defaults.status;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder deviceType(String deviceType) {
            this.deviceType = Objects.requireNonNull(deviceType);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder networkFunctions(List<SubResourceResponse> networkFunctions) {
            this.networkFunctions = Objects.requireNonNull(networkFunctions);
            return this;
        }
        public Builder networkFunctions(SubResourceResponse... networkFunctions) {
            return networkFunctions(List.of(networkFunctions));
        }
        @CustomType.Setter
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetDeviceResult build() {
            final var o = new GetDeviceResult();
            o.deviceType = deviceType;
            o.id = id;
            o.location = location;
            o.name = name;
            o.networkFunctions = networkFunctions;
            o.provisioningState = provisioningState;
            o.status = status;
            o.tags = tags;
            o.type = type;
            return o;
        }
    }
}
