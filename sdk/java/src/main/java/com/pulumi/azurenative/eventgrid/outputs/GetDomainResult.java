// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.eventgrid.outputs;

import com.pulumi.azurenative.eventgrid.outputs.InboundIpRuleResponse;
import com.pulumi.azurenative.eventgrid.outputs.JsonInputSchemaMappingResponse;
import com.pulumi.azurenative.eventgrid.outputs.PrivateEndpointConnectionResponse;
import com.pulumi.azurenative.eventgrid.outputs.SystemDataResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDomainResult {
    /**
     * @return Endpoint for the domain.
     * 
     */
    private String endpoint;
    /**
     * @return Fully qualified identifier of the resource.
     * 
     */
    private String id;
    /**
     * @return This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.
     * 
     */
    private @Nullable List<InboundIpRuleResponse> inboundIpRules;
    /**
     * @return This determines the format that Event Grid should expect for incoming events published to the domain.
     * 
     */
    private @Nullable String inputSchema;
    /**
     * @return Information about the InputSchemaMapping which specified the info about mapping event payload.
     * 
     */
    private @Nullable JsonInputSchemaMappingResponse inputSchemaMapping;
    /**
     * @return Location of the resource.
     * 
     */
    private String location;
    /**
     * @return Metric resource id for the domain.
     * 
     */
    private String metricResourceId;
    /**
     * @return Name of the resource.
     * 
     */
    private String name;
    /**
     * @return List of private endpoint connections.
     * 
     */
    private List<PrivateEndpointConnectionResponse> privateEndpointConnections;
    /**
     * @return Provisioning state of the domain.
     * 
     */
    private String provisioningState;
    /**
     * @return This determines if traffic is allowed over public network. By default it is enabled.
     * You can further restrict to specific IPs by configuring &lt;seealso cref=&#34;P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.DomainProperties.InboundIpRules&#34; /&gt;
     * 
     */
    private @Nullable String publicNetworkAccess;
    /**
     * @return The system metadata relating to Domain resource.
     * 
     */
    private SystemDataResponse systemData;
    /**
     * @return Tags of the resource.
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return Type of the resource.
     * 
     */
    private String type;

    private GetDomainResult() {}
    /**
     * @return Endpoint for the domain.
     * 
     */
    public String endpoint() {
        return this.endpoint;
    }
    /**
     * @return Fully qualified identifier of the resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.
     * 
     */
    public List<InboundIpRuleResponse> inboundIpRules() {
        return this.inboundIpRules == null ? List.of() : this.inboundIpRules;
    }
    /**
     * @return This determines the format that Event Grid should expect for incoming events published to the domain.
     * 
     */
    public Optional<String> inputSchema() {
        return Optional.ofNullable(this.inputSchema);
    }
    /**
     * @return Information about the InputSchemaMapping which specified the info about mapping event payload.
     * 
     */
    public Optional<JsonInputSchemaMappingResponse> inputSchemaMapping() {
        return Optional.ofNullable(this.inputSchemaMapping);
    }
    /**
     * @return Location of the resource.
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return Metric resource id for the domain.
     * 
     */
    public String metricResourceId() {
        return this.metricResourceId;
    }
    /**
     * @return Name of the resource.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return List of private endpoint connections.
     * 
     */
    public List<PrivateEndpointConnectionResponse> privateEndpointConnections() {
        return this.privateEndpointConnections;
    }
    /**
     * @return Provisioning state of the domain.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * @return This determines if traffic is allowed over public network. By default it is enabled.
     * You can further restrict to specific IPs by configuring &lt;seealso cref=&#34;P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.DomainProperties.InboundIpRules&#34; /&gt;
     * 
     */
    public Optional<String> publicNetworkAccess() {
        return Optional.ofNullable(this.publicNetworkAccess);
    }
    /**
     * @return The system metadata relating to Domain resource.
     * 
     */
    public SystemDataResponse systemData() {
        return this.systemData;
    }
    /**
     * @return Tags of the resource.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return Type of the resource.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDomainResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String endpoint;
        private String id;
        private @Nullable List<InboundIpRuleResponse> inboundIpRules;
        private @Nullable String inputSchema;
        private @Nullable JsonInputSchemaMappingResponse inputSchemaMapping;
        private String location;
        private String metricResourceId;
        private String name;
        private List<PrivateEndpointConnectionResponse> privateEndpointConnections;
        private String provisioningState;
        private @Nullable String publicNetworkAccess;
        private SystemDataResponse systemData;
        private @Nullable Map<String,String> tags;
        private String type;
        public Builder() {}
        public Builder(GetDomainResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.endpoint = defaults.endpoint;
    	      this.id = defaults.id;
    	      this.inboundIpRules = defaults.inboundIpRules;
    	      this.inputSchema = defaults.inputSchema;
    	      this.inputSchemaMapping = defaults.inputSchemaMapping;
    	      this.location = defaults.location;
    	      this.metricResourceId = defaults.metricResourceId;
    	      this.name = defaults.name;
    	      this.privateEndpointConnections = defaults.privateEndpointConnections;
    	      this.provisioningState = defaults.provisioningState;
    	      this.publicNetworkAccess = defaults.publicNetworkAccess;
    	      this.systemData = defaults.systemData;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder endpoint(String endpoint) {
            this.endpoint = Objects.requireNonNull(endpoint);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder inboundIpRules(@Nullable List<InboundIpRuleResponse> inboundIpRules) {
            this.inboundIpRules = inboundIpRules;
            return this;
        }
        public Builder inboundIpRules(InboundIpRuleResponse... inboundIpRules) {
            return inboundIpRules(List.of(inboundIpRules));
        }
        @CustomType.Setter
        public Builder inputSchema(@Nullable String inputSchema) {
            this.inputSchema = inputSchema;
            return this;
        }
        @CustomType.Setter
        public Builder inputSchemaMapping(@Nullable JsonInputSchemaMappingResponse inputSchemaMapping) {
            this.inputSchemaMapping = inputSchemaMapping;
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        @CustomType.Setter
        public Builder metricResourceId(String metricResourceId) {
            this.metricResourceId = Objects.requireNonNull(metricResourceId);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder privateEndpointConnections(List<PrivateEndpointConnectionResponse> privateEndpointConnections) {
            this.privateEndpointConnections = Objects.requireNonNull(privateEndpointConnections);
            return this;
        }
        public Builder privateEndpointConnections(PrivateEndpointConnectionResponse... privateEndpointConnections) {
            return privateEndpointConnections(List.of(privateEndpointConnections));
        }
        @CustomType.Setter
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        @CustomType.Setter
        public Builder publicNetworkAccess(@Nullable String publicNetworkAccess) {
            this.publicNetworkAccess = publicNetworkAccess;
            return this;
        }
        @CustomType.Setter
        public Builder systemData(SystemDataResponse systemData) {
            this.systemData = Objects.requireNonNull(systemData);
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetDomainResult build() {
            final var o = new GetDomainResult();
            o.endpoint = endpoint;
            o.id = id;
            o.inboundIpRules = inboundIpRules;
            o.inputSchema = inputSchema;
            o.inputSchemaMapping = inputSchemaMapping;
            o.location = location;
            o.metricResourceId = metricResourceId;
            o.name = name;
            o.privateEndpointConnections = privateEndpointConnections;
            o.provisioningState = provisioningState;
            o.publicNetworkAccess = publicNetworkAccess;
            o.systemData = systemData;
            o.tags = tags;
            o.type = type;
            return o;
        }
    }
}
