// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.app.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetManagedEnvironmentsStorageArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetManagedEnvironmentsStorageArgs Empty = new GetManagedEnvironmentsStorageArgs();

    /**
     * Name of the Environment.
     * 
     */
    @Import(name="environmentName", required=true)
    private Output<String> environmentName;

    /**
     * @return Name of the Environment.
     * 
     */
    public Output<String> environmentName() {
        return this.environmentName;
    }

    /**
     * The name of the resource group. The name is case insensitive.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group. The name is case insensitive.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Name of the storage.
     * 
     */
    @Import(name="storageName", required=true)
    private Output<String> storageName;

    /**
     * @return Name of the storage.
     * 
     */
    public Output<String> storageName() {
        return this.storageName;
    }

    private GetManagedEnvironmentsStorageArgs() {}

    private GetManagedEnvironmentsStorageArgs(GetManagedEnvironmentsStorageArgs $) {
        this.environmentName = $.environmentName;
        this.resourceGroupName = $.resourceGroupName;
        this.storageName = $.storageName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetManagedEnvironmentsStorageArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetManagedEnvironmentsStorageArgs $;

        public Builder() {
            $ = new GetManagedEnvironmentsStorageArgs();
        }

        public Builder(GetManagedEnvironmentsStorageArgs defaults) {
            $ = new GetManagedEnvironmentsStorageArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param environmentName Name of the Environment.
         * 
         * @return builder
         * 
         */
        public Builder environmentName(Output<String> environmentName) {
            $.environmentName = environmentName;
            return this;
        }

        /**
         * @param environmentName Name of the Environment.
         * 
         * @return builder
         * 
         */
        public Builder environmentName(String environmentName) {
            return environmentName(Output.of(environmentName));
        }

        /**
         * @param resourceGroupName The name of the resource group. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group. The name is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param storageName Name of the storage.
         * 
         * @return builder
         * 
         */
        public Builder storageName(Output<String> storageName) {
            $.storageName = storageName;
            return this;
        }

        /**
         * @param storageName Name of the storage.
         * 
         * @return builder
         * 
         */
        public Builder storageName(String storageName) {
            return storageName(Output.of(storageName));
        }

        public GetManagedEnvironmentsStorageArgs build() {
            $.environmentName = Objects.requireNonNull($.environmentName, "expected parameter 'environmentName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.storageName = Objects.requireNonNull($.storageName, "expected parameter 'storageName' to be non-null");
            return $;
        }
    }

}
