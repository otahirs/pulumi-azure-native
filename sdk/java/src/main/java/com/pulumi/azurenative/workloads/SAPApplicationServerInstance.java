// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.workloads;

import com.pulumi.azurenative.Utilities;
import com.pulumi.azurenative.workloads.SAPApplicationServerInstanceArgs;
import com.pulumi.azurenative.workloads.outputs.SAPVirtualInstanceErrorResponse;
import com.pulumi.azurenative.workloads.outputs.SystemDataResponse;
import com.pulumi.core.Alias;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Define the SAP Application Server Instance.
 * API Version: 2021-12-01-preview.
 * 
 * ## Example Usage
 * ### SAPApplicationServerInstances_Create
 * 
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var sapApplicationServerInstance = new SAPApplicationServerInstance(&#34;sapApplicationServerInstance&#34;, SAPApplicationServerInstanceArgs.builder()        
 *             .applicationInstanceName(&#34;app01&#34;)
 *             .location(&#34;westcentralus&#34;)
 *             .resourceGroupName(&#34;test-rg&#34;)
 *             .sapVirtualInstanceName(&#34;X00&#34;)
 *             .tags()
 *             .build());
 * 
 *     }
 * }
 * 
 * ```
 * 
 * ## Import
 * 
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 * 
 * ```sh
 * $ pulumi import azure-native:workloads:SAPApplicationServerInstance app01 /subscriptions/6d875e77-e412-4d7d-9af4-8895278b4443/resourceGroups/test-rg/providers/Microsoft.Workloads/sapVirtualInstances/X00/applicationInstances/app01 
 * ```
 * 
 */
@ResourceType(type="azure-native:workloads:SAPApplicationServerInstance")
public class SAPApplicationServerInstance extends com.pulumi.resources.CustomResource {
    /**
     * Defines the Application Instance errors.
     * 
     */
    @Export(name="errors", type=SAPVirtualInstanceErrorResponse.class, parameters={})
    private Output<SAPVirtualInstanceErrorResponse> errors;

    /**
     * @return Defines the Application Instance errors.
     * 
     */
    public Output<SAPVirtualInstanceErrorResponse> errors() {
        return this.errors;
    }
    /**
     * The application server gateway Port.
     * 
     */
    @Export(name="gatewayPort", type=Double.class, parameters={})
    private Output<Double> gatewayPort;

    /**
     * @return The application server gateway Port.
     * 
     */
    public Output<Double> gatewayPort() {
        return this.gatewayPort;
    }
    /**
     * Defines the SAP Instance health.
     * 
     */
    @Export(name="health", type=String.class, parameters={})
    private Output<String> health;

    /**
     * @return Defines the SAP Instance health.
     * 
     */
    public Output<String> health() {
        return this.health;
    }
    /**
     * The application server SAP host name.
     * 
     */
    @Export(name="hostname", type=String.class, parameters={})
    private Output<String> hostname;

    /**
     * @return The application server SAP host name.
     * 
     */
    public Output<String> hostname() {
        return this.hostname;
    }
    /**
     * The application server ICM HTTP Port.
     * 
     */
    @Export(name="icmHttpPort", type=Double.class, parameters={})
    private Output<Double> icmHttpPort;

    /**
     * @return The application server ICM HTTP Port.
     * 
     */
    public Output<Double> icmHttpPort() {
        return this.icmHttpPort;
    }
    /**
     * The application server ICM HTTPS Port.
     * 
     */
    @Export(name="icmHttpsPort", type=Double.class, parameters={})
    private Output<Double> icmHttpsPort;

    /**
     * @return The application server ICM HTTPS Port.
     * 
     */
    public Output<Double> icmHttpsPort() {
        return this.icmHttpsPort;
    }
    /**
     * The application server instance id.
     * 
     */
    @Export(name="instanceNo", type=String.class, parameters={})
    private Output<String> instanceNo;

    /**
     * @return The application server instance id.
     * 
     */
    public Output<String> instanceNo() {
        return this.instanceNo;
    }
    /**
     * The application server SAP IP Address.
     * 
     */
    @Export(name="ipAddress", type=String.class, parameters={})
    private Output<String> ipAddress;

    /**
     * @return The application server SAP IP Address.
     * 
     */
    public Output<String> ipAddress() {
        return this.ipAddress;
    }
    /**
     * The application server SAP kernel patch.
     * 
     */
    @Export(name="kernelPatch", type=String.class, parameters={})
    private Output<String> kernelPatch;

    /**
     * @return The application server SAP kernel patch.
     * 
     */
    public Output<String> kernelPatch() {
        return this.kernelPatch;
    }
    /**
     * The application server SAP kernel version.
     * 
     */
    @Export(name="kernelVersion", type=String.class, parameters={})
    private Output<String> kernelVersion;

    /**
     * @return The application server SAP kernel version.
     * 
     */
    public Output<String> kernelVersion() {
        return this.kernelVersion;
    }
    /**
     * The geo-location where the resource lives
     * 
     */
    @Export(name="location", type=String.class, parameters={})
    private Output<String> location;

    /**
     * @return The geo-location where the resource lives
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * The name of the resource
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the resource
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Defines the provisioning states.
     * 
     */
    @Export(name="provisioningState", type=String.class, parameters={})
    private Output<String> provisioningState;

    /**
     * @return Defines the provisioning states.
     * 
     */
    public Output<String> provisioningState() {
        return this.provisioningState;
    }
    /**
     * Defines the SAP Instance status.
     * 
     */
    @Export(name="status", type=String.class, parameters={})
    private Output<String> status;

    /**
     * @return Defines the SAP Instance status.
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * The application server subnet.
     * 
     */
    @Export(name="subnet", type=String.class, parameters={})
    private Output<String> subnet;

    /**
     * @return The application server subnet.
     * 
     */
    public Output<String> subnet() {
        return this.subnet;
    }
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     */
    @Export(name="systemData", type=SystemDataResponse.class, parameters={})
    private Output<SystemDataResponse> systemData;

    /**
     * @return Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     */
    public Output<SystemDataResponse> systemData() {
        return this.systemData;
    }
    /**
     * Resource tags.
     * 
     */
    @Export(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return Resource tags.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    public Output<String> type() {
        return this.type;
    }
    /**
     * The virtual machine.
     * 
     */
    @Export(name="virtualMachineId", type=String.class, parameters={})
    private Output<String> virtualMachineId;

    /**
     * @return The virtual machine.
     * 
     */
    public Output<String> virtualMachineId() {
        return this.virtualMachineId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public SAPApplicationServerInstance(String name) {
        this(name, SAPApplicationServerInstanceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public SAPApplicationServerInstance(String name, SAPApplicationServerInstanceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SAPApplicationServerInstance(String name, SAPApplicationServerInstanceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:workloads:SAPApplicationServerInstance", name, args == null ? SAPApplicationServerInstanceArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private SAPApplicationServerInstance(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure-native:workloads:SAPApplicationServerInstance", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("azure-native:workloads/v20211201preview:SAPApplicationServerInstance").build())
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SAPApplicationServerInstance get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new SAPApplicationServerInstance(name, id, options);
    }
}
