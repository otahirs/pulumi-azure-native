// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.eventhub.outputs;

import com.pulumi.azurenative.eventhub.outputs.SystemDataResponse;
import com.pulumi.azurenative.eventhub.outputs.ThrottlingPolicyResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetApplicationGroupResult {
    /**
     * @return The Unique identifier for application group.Supports SAS(SASKeyName=KeyName) or AAD(AADAppID=Guid)
     * 
     */
    private String clientAppGroupIdentifier;
    /**
     * @return Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    private String id;
    /**
     * @return Determines if Application Group is allowed to create connection with namespace or not. Once the isEnabled is set to false, all the existing connections of application group gets dropped and no new connections will be allowed
     * 
     */
    private @Nullable Boolean isEnabled;
    /**
     * @return The geo-location where the resource lives
     * 
     */
    private String location;
    /**
     * @return The name of the resource
     * 
     */
    private String name;
    /**
     * @return List of group policies that define the behavior of application group. The policies can support resource governance scenarios such as limiting ingress or egress traffic.
     * 
     */
    private @Nullable List<ThrottlingPolicyResponse> policies;
    /**
     * @return The system meta data relating to this resource.
     * 
     */
    private SystemDataResponse systemData;
    /**
     * @return The type of the resource. E.g. &#34;Microsoft.EventHub/Namespaces&#34; or &#34;Microsoft.EventHub/Namespaces/EventHubs&#34;
     * 
     */
    private String type;

    private GetApplicationGroupResult() {}
    /**
     * @return The Unique identifier for application group.Supports SAS(SASKeyName=KeyName) or AAD(AADAppID=Guid)
     * 
     */
    public String clientAppGroupIdentifier() {
        return this.clientAppGroupIdentifier;
    }
    /**
     * @return Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Determines if Application Group is allowed to create connection with namespace or not. Once the isEnabled is set to false, all the existing connections of application group gets dropped and no new connections will be allowed
     * 
     */
    public Optional<Boolean> isEnabled() {
        return Optional.ofNullable(this.isEnabled);
    }
    /**
     * @return The geo-location where the resource lives
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return The name of the resource
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return List of group policies that define the behavior of application group. The policies can support resource governance scenarios such as limiting ingress or egress traffic.
     * 
     */
    public List<ThrottlingPolicyResponse> policies() {
        return this.policies == null ? List.of() : this.policies;
    }
    /**
     * @return The system meta data relating to this resource.
     * 
     */
    public SystemDataResponse systemData() {
        return this.systemData;
    }
    /**
     * @return The type of the resource. E.g. &#34;Microsoft.EventHub/Namespaces&#34; or &#34;Microsoft.EventHub/Namespaces/EventHubs&#34;
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetApplicationGroupResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String clientAppGroupIdentifier;
        private String id;
        private @Nullable Boolean isEnabled;
        private String location;
        private String name;
        private @Nullable List<ThrottlingPolicyResponse> policies;
        private SystemDataResponse systemData;
        private String type;
        public Builder() {}
        public Builder(GetApplicationGroupResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clientAppGroupIdentifier = defaults.clientAppGroupIdentifier;
    	      this.id = defaults.id;
    	      this.isEnabled = defaults.isEnabled;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.policies = defaults.policies;
    	      this.systemData = defaults.systemData;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder clientAppGroupIdentifier(String clientAppGroupIdentifier) {
            this.clientAppGroupIdentifier = Objects.requireNonNull(clientAppGroupIdentifier);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder isEnabled(@Nullable Boolean isEnabled) {
            this.isEnabled = isEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder policies(@Nullable List<ThrottlingPolicyResponse> policies) {
            this.policies = policies;
            return this;
        }
        public Builder policies(ThrottlingPolicyResponse... policies) {
            return policies(List.of(policies));
        }
        @CustomType.Setter
        public Builder systemData(SystemDataResponse systemData) {
            this.systemData = Objects.requireNonNull(systemData);
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetApplicationGroupResult build() {
            final var o = new GetApplicationGroupResult();
            o.clientAppGroupIdentifier = clientAppGroupIdentifier;
            o.id = id;
            o.isEnabled = isEnabled;
            o.location = location;
            o.name = name;
            o.policies = policies;
            o.systemData = systemData;
            o.type = type;
            return o;
        }
    }
}
