// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.storagesync.outputs;

import com.pulumi.azurenative.storagesync.outputs.ServerEndpointFilesNotSyncingErrorResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class ServerEndpointSyncSessionStatusResponse {
    /**
     * @return Array of per-item errors coming from the last sync session.
     * 
     */
    private List<ServerEndpointFilesNotSyncingErrorResponse> filesNotSyncingErrors;
    /**
     * @return Sync mode
     * 
     */
    private String lastSyncMode;
    /**
     * @return Last sync per item error count.
     * 
     */
    private Double lastSyncPerItemErrorCount;
    /**
     * @return Last sync result (HResult)
     * 
     */
    private Integer lastSyncResult;
    /**
     * @return Last sync success timestamp
     * 
     */
    private String lastSyncSuccessTimestamp;
    /**
     * @return Last sync timestamp
     * 
     */
    private String lastSyncTimestamp;
    /**
     * @return Count of persistent files not syncing.
     * 
     */
    private Double persistentFilesNotSyncingCount;
    /**
     * @return Count of transient files not syncing.
     * 
     */
    private Double transientFilesNotSyncingCount;

    private ServerEndpointSyncSessionStatusResponse() {}
    /**
     * @return Array of per-item errors coming from the last sync session.
     * 
     */
    public List<ServerEndpointFilesNotSyncingErrorResponse> filesNotSyncingErrors() {
        return this.filesNotSyncingErrors;
    }
    /**
     * @return Sync mode
     * 
     */
    public String lastSyncMode() {
        return this.lastSyncMode;
    }
    /**
     * @return Last sync per item error count.
     * 
     */
    public Double lastSyncPerItemErrorCount() {
        return this.lastSyncPerItemErrorCount;
    }
    /**
     * @return Last sync result (HResult)
     * 
     */
    public Integer lastSyncResult() {
        return this.lastSyncResult;
    }
    /**
     * @return Last sync success timestamp
     * 
     */
    public String lastSyncSuccessTimestamp() {
        return this.lastSyncSuccessTimestamp;
    }
    /**
     * @return Last sync timestamp
     * 
     */
    public String lastSyncTimestamp() {
        return this.lastSyncTimestamp;
    }
    /**
     * @return Count of persistent files not syncing.
     * 
     */
    public Double persistentFilesNotSyncingCount() {
        return this.persistentFilesNotSyncingCount;
    }
    /**
     * @return Count of transient files not syncing.
     * 
     */
    public Double transientFilesNotSyncingCount() {
        return this.transientFilesNotSyncingCount;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServerEndpointSyncSessionStatusResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<ServerEndpointFilesNotSyncingErrorResponse> filesNotSyncingErrors;
        private String lastSyncMode;
        private Double lastSyncPerItemErrorCount;
        private Integer lastSyncResult;
        private String lastSyncSuccessTimestamp;
        private String lastSyncTimestamp;
        private Double persistentFilesNotSyncingCount;
        private Double transientFilesNotSyncingCount;
        public Builder() {}
        public Builder(ServerEndpointSyncSessionStatusResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filesNotSyncingErrors = defaults.filesNotSyncingErrors;
    	      this.lastSyncMode = defaults.lastSyncMode;
    	      this.lastSyncPerItemErrorCount = defaults.lastSyncPerItemErrorCount;
    	      this.lastSyncResult = defaults.lastSyncResult;
    	      this.lastSyncSuccessTimestamp = defaults.lastSyncSuccessTimestamp;
    	      this.lastSyncTimestamp = defaults.lastSyncTimestamp;
    	      this.persistentFilesNotSyncingCount = defaults.persistentFilesNotSyncingCount;
    	      this.transientFilesNotSyncingCount = defaults.transientFilesNotSyncingCount;
        }

        @CustomType.Setter
        public Builder filesNotSyncingErrors(List<ServerEndpointFilesNotSyncingErrorResponse> filesNotSyncingErrors) {
            this.filesNotSyncingErrors = Objects.requireNonNull(filesNotSyncingErrors);
            return this;
        }
        public Builder filesNotSyncingErrors(ServerEndpointFilesNotSyncingErrorResponse... filesNotSyncingErrors) {
            return filesNotSyncingErrors(List.of(filesNotSyncingErrors));
        }
        @CustomType.Setter
        public Builder lastSyncMode(String lastSyncMode) {
            this.lastSyncMode = Objects.requireNonNull(lastSyncMode);
            return this;
        }
        @CustomType.Setter
        public Builder lastSyncPerItemErrorCount(Double lastSyncPerItemErrorCount) {
            this.lastSyncPerItemErrorCount = Objects.requireNonNull(lastSyncPerItemErrorCount);
            return this;
        }
        @CustomType.Setter
        public Builder lastSyncResult(Integer lastSyncResult) {
            this.lastSyncResult = Objects.requireNonNull(lastSyncResult);
            return this;
        }
        @CustomType.Setter
        public Builder lastSyncSuccessTimestamp(String lastSyncSuccessTimestamp) {
            this.lastSyncSuccessTimestamp = Objects.requireNonNull(lastSyncSuccessTimestamp);
            return this;
        }
        @CustomType.Setter
        public Builder lastSyncTimestamp(String lastSyncTimestamp) {
            this.lastSyncTimestamp = Objects.requireNonNull(lastSyncTimestamp);
            return this;
        }
        @CustomType.Setter
        public Builder persistentFilesNotSyncingCount(Double persistentFilesNotSyncingCount) {
            this.persistentFilesNotSyncingCount = Objects.requireNonNull(persistentFilesNotSyncingCount);
            return this;
        }
        @CustomType.Setter
        public Builder transientFilesNotSyncingCount(Double transientFilesNotSyncingCount) {
            this.transientFilesNotSyncingCount = Objects.requireNonNull(transientFilesNotSyncingCount);
            return this;
        }
        public ServerEndpointSyncSessionStatusResponse build() {
            final var o = new ServerEndpointSyncSessionStatusResponse();
            o.filesNotSyncingErrors = filesNotSyncingErrors;
            o.lastSyncMode = lastSyncMode;
            o.lastSyncPerItemErrorCount = lastSyncPerItemErrorCount;
            o.lastSyncResult = lastSyncResult;
            o.lastSyncSuccessTimestamp = lastSyncSuccessTimestamp;
            o.lastSyncTimestamp = lastSyncTimestamp;
            o.persistentFilesNotSyncingCount = persistentFilesNotSyncingCount;
            o.transientFilesNotSyncingCount = transientFilesNotSyncingCount;
            return o;
        }
    }
}
