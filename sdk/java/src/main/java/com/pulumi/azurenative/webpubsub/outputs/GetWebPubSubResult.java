// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.webpubsub.outputs;

import com.pulumi.azurenative.webpubsub.outputs.EventHandlerSettingsResponse;
import com.pulumi.azurenative.webpubsub.outputs.ManagedIdentityResponse;
import com.pulumi.azurenative.webpubsub.outputs.PrivateEndpointConnectionResponse;
import com.pulumi.azurenative.webpubsub.outputs.ResourceSkuResponse;
import com.pulumi.azurenative.webpubsub.outputs.SharedPrivateLinkResourceResponse;
import com.pulumi.azurenative.webpubsub.outputs.SystemDataResponse;
import com.pulumi.azurenative.webpubsub.outputs.WebPubSubFeatureResponse;
import com.pulumi.azurenative.webpubsub.outputs.WebPubSubNetworkACLsResponse;
import com.pulumi.azurenative.webpubsub.outputs.WebPubSubTlsSettingsResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetWebPubSubResult {
    /**
     * @return The settings for event handler in webpubsub service.
     * 
     */
    private @Nullable EventHandlerSettingsResponse eventHandler;
    /**
     * @return The publicly accessible IP of the resource.
     * 
     */
    private String externalIP;
    /**
     * @return List of the featureFlags.
     * 
     * FeatureFlags that are not included in the parameters for the update operation will not be modified.
     * And the response will only include featureFlags that are explicitly set.
     * When a featureFlag is not explicitly set, its globally default value will be used
     * But keep in mind, the default value doesn&#39;t mean &#34;false&#34;. It varies in terms of different FeatureFlags.
     * 
     */
    private @Nullable List<WebPubSubFeatureResponse> features;
    /**
     * @return FQDN of the service instance.
     * 
     */
    private String hostName;
    /**
     * @return Fully qualified resource Id for the resource.
     * 
     */
    private String id;
    /**
     * @return The managed identity response
     * 
     */
    private @Nullable ManagedIdentityResponse identity;
    /**
     * @return The GEO location of the resource. e.g. West US | East US | North Central US | South Central US.
     * 
     */
    private @Nullable String location;
    /**
     * @return The name of the resource.
     * 
     */
    private String name;
    /**
     * @return Network ACLs
     * 
     */
    private @Nullable WebPubSubNetworkACLsResponse networkACLs;
    /**
     * @return Private endpoint connections to the resource.
     * 
     */
    private List<PrivateEndpointConnectionResponse> privateEndpointConnections;
    /**
     * @return Provisioning state of the resource.
     * 
     */
    private String provisioningState;
    /**
     * @return Enable or disable public network access. Default to &#34;Enabled&#34;.
     * When it&#39;s Enabled, network ACLs still apply.
     * When it&#39;s Disabled, public network access is always disabled no matter what you set in network ACLs.
     * 
     */
    private @Nullable String publicNetworkAccess;
    /**
     * @return The publicly accessible port of the resource which is designed for browser/client side usage.
     * 
     */
    private Integer publicPort;
    /**
     * @return The publicly accessible port of the resource which is designed for customer server side usage.
     * 
     */
    private Integer serverPort;
    /**
     * @return The list of shared private link resources.
     * 
     */
    private List<SharedPrivateLinkResourceResponse> sharedPrivateLinkResources;
    /**
     * @return The billing information of the resource.(e.g. Free, Standard)
     * 
     */
    private @Nullable ResourceSkuResponse sku;
    /**
     * @return Metadata pertaining to creation and last modification of the resource.
     * 
     */
    private SystemDataResponse systemData;
    /**
     * @return Tags of the service which is a list of key value pairs that describe the resource.
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return TLS settings.
     * 
     */
    private @Nullable WebPubSubTlsSettingsResponse tls;
    /**
     * @return The type of the resource - e.g. &#34;Microsoft.SignalRService/SignalR&#34;
     * 
     */
    private String type;
    /**
     * @return Version of the resource. Probably you need the same or higher version of client SDKs.
     * 
     */
    private String version;

    private GetWebPubSubResult() {}
    /**
     * @return The settings for event handler in webpubsub service.
     * 
     */
    public Optional<EventHandlerSettingsResponse> eventHandler() {
        return Optional.ofNullable(this.eventHandler);
    }
    /**
     * @return The publicly accessible IP of the resource.
     * 
     */
    public String externalIP() {
        return this.externalIP;
    }
    /**
     * @return List of the featureFlags.
     * 
     * FeatureFlags that are not included in the parameters for the update operation will not be modified.
     * And the response will only include featureFlags that are explicitly set.
     * When a featureFlag is not explicitly set, its globally default value will be used
     * But keep in mind, the default value doesn&#39;t mean &#34;false&#34;. It varies in terms of different FeatureFlags.
     * 
     */
    public List<WebPubSubFeatureResponse> features() {
        return this.features == null ? List.of() : this.features;
    }
    /**
     * @return FQDN of the service instance.
     * 
     */
    public String hostName() {
        return this.hostName;
    }
    /**
     * @return Fully qualified resource Id for the resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The managed identity response
     * 
     */
    public Optional<ManagedIdentityResponse> identity() {
        return Optional.ofNullable(this.identity);
    }
    /**
     * @return The GEO location of the resource. e.g. West US | East US | North Central US | South Central US.
     * 
     */
    public Optional<String> location() {
        return Optional.ofNullable(this.location);
    }
    /**
     * @return The name of the resource.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Network ACLs
     * 
     */
    public Optional<WebPubSubNetworkACLsResponse> networkACLs() {
        return Optional.ofNullable(this.networkACLs);
    }
    /**
     * @return Private endpoint connections to the resource.
     * 
     */
    public List<PrivateEndpointConnectionResponse> privateEndpointConnections() {
        return this.privateEndpointConnections;
    }
    /**
     * @return Provisioning state of the resource.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * @return Enable or disable public network access. Default to &#34;Enabled&#34;.
     * When it&#39;s Enabled, network ACLs still apply.
     * When it&#39;s Disabled, public network access is always disabled no matter what you set in network ACLs.
     * 
     */
    public Optional<String> publicNetworkAccess() {
        return Optional.ofNullable(this.publicNetworkAccess);
    }
    /**
     * @return The publicly accessible port of the resource which is designed for browser/client side usage.
     * 
     */
    public Integer publicPort() {
        return this.publicPort;
    }
    /**
     * @return The publicly accessible port of the resource which is designed for customer server side usage.
     * 
     */
    public Integer serverPort() {
        return this.serverPort;
    }
    /**
     * @return The list of shared private link resources.
     * 
     */
    public List<SharedPrivateLinkResourceResponse> sharedPrivateLinkResources() {
        return this.sharedPrivateLinkResources;
    }
    /**
     * @return The billing information of the resource.(e.g. Free, Standard)
     * 
     */
    public Optional<ResourceSkuResponse> sku() {
        return Optional.ofNullable(this.sku);
    }
    /**
     * @return Metadata pertaining to creation and last modification of the resource.
     * 
     */
    public SystemDataResponse systemData() {
        return this.systemData;
    }
    /**
     * @return Tags of the service which is a list of key value pairs that describe the resource.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return TLS settings.
     * 
     */
    public Optional<WebPubSubTlsSettingsResponse> tls() {
        return Optional.ofNullable(this.tls);
    }
    /**
     * @return The type of the resource - e.g. &#34;Microsoft.SignalRService/SignalR&#34;
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return Version of the resource. Probably you need the same or higher version of client SDKs.
     * 
     */
    public String version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWebPubSubResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable EventHandlerSettingsResponse eventHandler;
        private String externalIP;
        private @Nullable List<WebPubSubFeatureResponse> features;
        private String hostName;
        private String id;
        private @Nullable ManagedIdentityResponse identity;
        private @Nullable String location;
        private String name;
        private @Nullable WebPubSubNetworkACLsResponse networkACLs;
        private List<PrivateEndpointConnectionResponse> privateEndpointConnections;
        private String provisioningState;
        private @Nullable String publicNetworkAccess;
        private Integer publicPort;
        private Integer serverPort;
        private List<SharedPrivateLinkResourceResponse> sharedPrivateLinkResources;
        private @Nullable ResourceSkuResponse sku;
        private SystemDataResponse systemData;
        private @Nullable Map<String,String> tags;
        private @Nullable WebPubSubTlsSettingsResponse tls;
        private String type;
        private String version;
        public Builder() {}
        public Builder(GetWebPubSubResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.eventHandler = defaults.eventHandler;
    	      this.externalIP = defaults.externalIP;
    	      this.features = defaults.features;
    	      this.hostName = defaults.hostName;
    	      this.id = defaults.id;
    	      this.identity = defaults.identity;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.networkACLs = defaults.networkACLs;
    	      this.privateEndpointConnections = defaults.privateEndpointConnections;
    	      this.provisioningState = defaults.provisioningState;
    	      this.publicNetworkAccess = defaults.publicNetworkAccess;
    	      this.publicPort = defaults.publicPort;
    	      this.serverPort = defaults.serverPort;
    	      this.sharedPrivateLinkResources = defaults.sharedPrivateLinkResources;
    	      this.sku = defaults.sku;
    	      this.systemData = defaults.systemData;
    	      this.tags = defaults.tags;
    	      this.tls = defaults.tls;
    	      this.type = defaults.type;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder eventHandler(@Nullable EventHandlerSettingsResponse eventHandler) {
            this.eventHandler = eventHandler;
            return this;
        }
        @CustomType.Setter
        public Builder externalIP(String externalIP) {
            this.externalIP = Objects.requireNonNull(externalIP);
            return this;
        }
        @CustomType.Setter
        public Builder features(@Nullable List<WebPubSubFeatureResponse> features) {
            this.features = features;
            return this;
        }
        public Builder features(WebPubSubFeatureResponse... features) {
            return features(List.of(features));
        }
        @CustomType.Setter
        public Builder hostName(String hostName) {
            this.hostName = Objects.requireNonNull(hostName);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder identity(@Nullable ManagedIdentityResponse identity) {
            this.identity = identity;
            return this;
        }
        @CustomType.Setter
        public Builder location(@Nullable String location) {
            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder networkACLs(@Nullable WebPubSubNetworkACLsResponse networkACLs) {
            this.networkACLs = networkACLs;
            return this;
        }
        @CustomType.Setter
        public Builder privateEndpointConnections(List<PrivateEndpointConnectionResponse> privateEndpointConnections) {
            this.privateEndpointConnections = Objects.requireNonNull(privateEndpointConnections);
            return this;
        }
        public Builder privateEndpointConnections(PrivateEndpointConnectionResponse... privateEndpointConnections) {
            return privateEndpointConnections(List.of(privateEndpointConnections));
        }
        @CustomType.Setter
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        @CustomType.Setter
        public Builder publicNetworkAccess(@Nullable String publicNetworkAccess) {
            this.publicNetworkAccess = publicNetworkAccess;
            return this;
        }
        @CustomType.Setter
        public Builder publicPort(Integer publicPort) {
            this.publicPort = Objects.requireNonNull(publicPort);
            return this;
        }
        @CustomType.Setter
        public Builder serverPort(Integer serverPort) {
            this.serverPort = Objects.requireNonNull(serverPort);
            return this;
        }
        @CustomType.Setter
        public Builder sharedPrivateLinkResources(List<SharedPrivateLinkResourceResponse> sharedPrivateLinkResources) {
            this.sharedPrivateLinkResources = Objects.requireNonNull(sharedPrivateLinkResources);
            return this;
        }
        public Builder sharedPrivateLinkResources(SharedPrivateLinkResourceResponse... sharedPrivateLinkResources) {
            return sharedPrivateLinkResources(List.of(sharedPrivateLinkResources));
        }
        @CustomType.Setter
        public Builder sku(@Nullable ResourceSkuResponse sku) {
            this.sku = sku;
            return this;
        }
        @CustomType.Setter
        public Builder systemData(SystemDataResponse systemData) {
            this.systemData = Objects.requireNonNull(systemData);
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder tls(@Nullable WebPubSubTlsSettingsResponse tls) {
            this.tls = tls;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder version(String version) {
            this.version = Objects.requireNonNull(version);
            return this;
        }
        public GetWebPubSubResult build() {
            final var o = new GetWebPubSubResult();
            o.eventHandler = eventHandler;
            o.externalIP = externalIP;
            o.features = features;
            o.hostName = hostName;
            o.id = id;
            o.identity = identity;
            o.location = location;
            o.name = name;
            o.networkACLs = networkACLs;
            o.privateEndpointConnections = privateEndpointConnections;
            o.provisioningState = provisioningState;
            o.publicNetworkAccess = publicNetworkAccess;
            o.publicPort = publicPort;
            o.serverPort = serverPort;
            o.sharedPrivateLinkResources = sharedPrivateLinkResources;
            o.sku = sku;
            o.systemData = systemData;
            o.tags = tags;
            o.tls = tls;
            o.type = type;
            o.version = version;
            return o;
        }
    }
}
