// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.customerinsights.outputs;

import com.pulumi.azurenative.customerinsights.outputs.HubBillingInfoFormatResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetHubResult {
    /**
     * @return API endpoint URL of the hub.
     * 
     */
    private String apiEndpoint;
    /**
     * @return Billing settings of the hub.
     * 
     */
    private @Nullable HubBillingInfoFormatResponse hubBillingInfo;
    /**
     * @return Resource ID.
     * 
     */
    private String id;
    /**
     * @return Resource location.
     * 
     */
    private @Nullable String location;
    /**
     * @return Resource name.
     * 
     */
    private String name;
    /**
     * @return Provisioning state of the hub.
     * 
     */
    private String provisioningState;
    /**
     * @return Resource tags.
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return The bit flags for enabled hub features. Bit 0 is set to 1 indicates graph is enabled, or disabled if set to 0. Bit 1 is set to 1 indicates the hub is disabled, or enabled if set to 0.
     * 
     */
    private @Nullable Integer tenantFeatures;
    /**
     * @return Resource type.
     * 
     */
    private String type;
    /**
     * @return Web endpoint URL of the hub.
     * 
     */
    private String webEndpoint;

    private GetHubResult() {}
    /**
     * @return API endpoint URL of the hub.
     * 
     */
    public String apiEndpoint() {
        return this.apiEndpoint;
    }
    /**
     * @return Billing settings of the hub.
     * 
     */
    public Optional<HubBillingInfoFormatResponse> hubBillingInfo() {
        return Optional.ofNullable(this.hubBillingInfo);
    }
    /**
     * @return Resource ID.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Resource location.
     * 
     */
    public Optional<String> location() {
        return Optional.ofNullable(this.location);
    }
    /**
     * @return Resource name.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Provisioning state of the hub.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * @return Resource tags.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return The bit flags for enabled hub features. Bit 0 is set to 1 indicates graph is enabled, or disabled if set to 0. Bit 1 is set to 1 indicates the hub is disabled, or enabled if set to 0.
     * 
     */
    public Optional<Integer> tenantFeatures() {
        return Optional.ofNullable(this.tenantFeatures);
    }
    /**
     * @return Resource type.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return Web endpoint URL of the hub.
     * 
     */
    public String webEndpoint() {
        return this.webEndpoint;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetHubResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String apiEndpoint;
        private @Nullable HubBillingInfoFormatResponse hubBillingInfo;
        private String id;
        private @Nullable String location;
        private String name;
        private String provisioningState;
        private @Nullable Map<String,String> tags;
        private @Nullable Integer tenantFeatures;
        private String type;
        private String webEndpoint;
        public Builder() {}
        public Builder(GetHubResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apiEndpoint = defaults.apiEndpoint;
    	      this.hubBillingInfo = defaults.hubBillingInfo;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.provisioningState = defaults.provisioningState;
    	      this.tags = defaults.tags;
    	      this.tenantFeatures = defaults.tenantFeatures;
    	      this.type = defaults.type;
    	      this.webEndpoint = defaults.webEndpoint;
        }

        @CustomType.Setter
        public Builder apiEndpoint(String apiEndpoint) {
            this.apiEndpoint = Objects.requireNonNull(apiEndpoint);
            return this;
        }
        @CustomType.Setter
        public Builder hubBillingInfo(@Nullable HubBillingInfoFormatResponse hubBillingInfo) {
            this.hubBillingInfo = hubBillingInfo;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder location(@Nullable String location) {
            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder tenantFeatures(@Nullable Integer tenantFeatures) {
            this.tenantFeatures = tenantFeatures;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder webEndpoint(String webEndpoint) {
            this.webEndpoint = Objects.requireNonNull(webEndpoint);
            return this;
        }
        public GetHubResult build() {
            final var o = new GetHubResult();
            o.apiEndpoint = apiEndpoint;
            o.hubBillingInfo = hubBillingInfo;
            o.id = id;
            o.location = location;
            o.name = name;
            o.provisioningState = provisioningState;
            o.tags = tags;
            o.tenantFeatures = tenantFeatures;
            o.type = type;
            o.webEndpoint = webEndpoint;
            return o;
        }
    }
}
