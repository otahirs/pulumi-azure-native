// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.authorization.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class PermissionResponse {
    /**
     * @return Allowed actions.
     * 
     */
    private @Nullable List<String> actions;
    /**
     * @return Allowed Data actions.
     * 
     */
    private @Nullable List<String> dataActions;
    /**
     * @return Denied actions.
     * 
     */
    private @Nullable List<String> notActions;
    /**
     * @return Denied Data actions.
     * 
     */
    private @Nullable List<String> notDataActions;

    private PermissionResponse() {}
    /**
     * @return Allowed actions.
     * 
     */
    public List<String> actions() {
        return this.actions == null ? List.of() : this.actions;
    }
    /**
     * @return Allowed Data actions.
     * 
     */
    public List<String> dataActions() {
        return this.dataActions == null ? List.of() : this.dataActions;
    }
    /**
     * @return Denied actions.
     * 
     */
    public List<String> notActions() {
        return this.notActions == null ? List.of() : this.notActions;
    }
    /**
     * @return Denied Data actions.
     * 
     */
    public List<String> notDataActions() {
        return this.notDataActions == null ? List.of() : this.notDataActions;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PermissionResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> actions;
        private @Nullable List<String> dataActions;
        private @Nullable List<String> notActions;
        private @Nullable List<String> notDataActions;
        public Builder() {}
        public Builder(PermissionResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.actions = defaults.actions;
    	      this.dataActions = defaults.dataActions;
    	      this.notActions = defaults.notActions;
    	      this.notDataActions = defaults.notDataActions;
        }

        @CustomType.Setter
        public Builder actions(@Nullable List<String> actions) {
            this.actions = actions;
            return this;
        }
        public Builder actions(String... actions) {
            return actions(List.of(actions));
        }
        @CustomType.Setter
        public Builder dataActions(@Nullable List<String> dataActions) {
            this.dataActions = dataActions;
            return this;
        }
        public Builder dataActions(String... dataActions) {
            return dataActions(List.of(dataActions));
        }
        @CustomType.Setter
        public Builder notActions(@Nullable List<String> notActions) {
            this.notActions = notActions;
            return this;
        }
        public Builder notActions(String... notActions) {
            return notActions(List.of(notActions));
        }
        @CustomType.Setter
        public Builder notDataActions(@Nullable List<String> notDataActions) {
            this.notDataActions = notDataActions;
            return this;
        }
        public Builder notDataActions(String... notDataActions) {
            return notDataActions(List.of(notDataActions));
        }
        public PermissionResponse build() {
            final var o = new PermissionResponse();
            o.actions = actions;
            o.dataActions = dataActions;
            o.notActions = notActions;
            o.notDataActions = notDataActions;
            return o;
        }
    }
}
