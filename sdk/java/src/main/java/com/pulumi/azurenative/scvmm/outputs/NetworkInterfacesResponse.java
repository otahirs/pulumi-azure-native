// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.scvmm.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class NetworkInterfacesResponse {
    /**
     * @return Gets the display name of the network interface as shown in the vmmServer. This is the fallback label for a NIC when the name is not set.
     * 
     */
    private String displayName;
    /**
     * @return Gets or sets the ipv4 address type.
     * 
     */
    private @Nullable String ipv4AddressType;
    /**
     * @return Gets or sets the nic ipv4 addresses.
     * 
     */
    private List<String> ipv4Addresses;
    /**
     * @return Gets or sets the ipv6 address type.
     * 
     */
    private @Nullable String ipv6AddressType;
    /**
     * @return Gets or sets the nic ipv6 addresses.
     * 
     */
    private List<String> ipv6Addresses;
    /**
     * @return Gets or sets the nic MAC address.
     * 
     */
    private @Nullable String macAddress;
    /**
     * @return Gets or sets the mac address type.
     * 
     */
    private @Nullable String macAddressType;
    /**
     * @return Gets or sets the name of the network interface.
     * 
     */
    private @Nullable String name;
    /**
     * @return Gets or sets the name of the virtual network in vmmServer that the nic is connected to.
     * 
     */
    private String networkName;
    /**
     * @return Gets or sets the nic id.
     * 
     */
    private @Nullable String nicId;
    /**
     * @return Gets or sets the ARM Id of the Microsoft.ScVmm/virtualNetwork resource to connect the nic.
     * 
     */
    private @Nullable String virtualNetworkId;

    private NetworkInterfacesResponse() {}
    /**
     * @return Gets the display name of the network interface as shown in the vmmServer. This is the fallback label for a NIC when the name is not set.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Gets or sets the ipv4 address type.
     * 
     */
    public Optional<String> ipv4AddressType() {
        return Optional.ofNullable(this.ipv4AddressType);
    }
    /**
     * @return Gets or sets the nic ipv4 addresses.
     * 
     */
    public List<String> ipv4Addresses() {
        return this.ipv4Addresses;
    }
    /**
     * @return Gets or sets the ipv6 address type.
     * 
     */
    public Optional<String> ipv6AddressType() {
        return Optional.ofNullable(this.ipv6AddressType);
    }
    /**
     * @return Gets or sets the nic ipv6 addresses.
     * 
     */
    public List<String> ipv6Addresses() {
        return this.ipv6Addresses;
    }
    /**
     * @return Gets or sets the nic MAC address.
     * 
     */
    public Optional<String> macAddress() {
        return Optional.ofNullable(this.macAddress);
    }
    /**
     * @return Gets or sets the mac address type.
     * 
     */
    public Optional<String> macAddressType() {
        return Optional.ofNullable(this.macAddressType);
    }
    /**
     * @return Gets or sets the name of the network interface.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return Gets or sets the name of the virtual network in vmmServer that the nic is connected to.
     * 
     */
    public String networkName() {
        return this.networkName;
    }
    /**
     * @return Gets or sets the nic id.
     * 
     */
    public Optional<String> nicId() {
        return Optional.ofNullable(this.nicId);
    }
    /**
     * @return Gets or sets the ARM Id of the Microsoft.ScVmm/virtualNetwork resource to connect the nic.
     * 
     */
    public Optional<String> virtualNetworkId() {
        return Optional.ofNullable(this.virtualNetworkId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NetworkInterfacesResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String displayName;
        private @Nullable String ipv4AddressType;
        private List<String> ipv4Addresses;
        private @Nullable String ipv6AddressType;
        private List<String> ipv6Addresses;
        private @Nullable String macAddress;
        private @Nullable String macAddressType;
        private @Nullable String name;
        private String networkName;
        private @Nullable String nicId;
        private @Nullable String virtualNetworkId;
        public Builder() {}
        public Builder(NetworkInterfacesResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.displayName = defaults.displayName;
    	      this.ipv4AddressType = defaults.ipv4AddressType;
    	      this.ipv4Addresses = defaults.ipv4Addresses;
    	      this.ipv6AddressType = defaults.ipv6AddressType;
    	      this.ipv6Addresses = defaults.ipv6Addresses;
    	      this.macAddress = defaults.macAddress;
    	      this.macAddressType = defaults.macAddressType;
    	      this.name = defaults.name;
    	      this.networkName = defaults.networkName;
    	      this.nicId = defaults.nicId;
    	      this.virtualNetworkId = defaults.virtualNetworkId;
        }

        @CustomType.Setter
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        @CustomType.Setter
        public Builder ipv4AddressType(@Nullable String ipv4AddressType) {
            this.ipv4AddressType = ipv4AddressType;
            return this;
        }
        @CustomType.Setter
        public Builder ipv4Addresses(List<String> ipv4Addresses) {
            this.ipv4Addresses = Objects.requireNonNull(ipv4Addresses);
            return this;
        }
        public Builder ipv4Addresses(String... ipv4Addresses) {
            return ipv4Addresses(List.of(ipv4Addresses));
        }
        @CustomType.Setter
        public Builder ipv6AddressType(@Nullable String ipv6AddressType) {
            this.ipv6AddressType = ipv6AddressType;
            return this;
        }
        @CustomType.Setter
        public Builder ipv6Addresses(List<String> ipv6Addresses) {
            this.ipv6Addresses = Objects.requireNonNull(ipv6Addresses);
            return this;
        }
        public Builder ipv6Addresses(String... ipv6Addresses) {
            return ipv6Addresses(List.of(ipv6Addresses));
        }
        @CustomType.Setter
        public Builder macAddress(@Nullable String macAddress) {
            this.macAddress = macAddress;
            return this;
        }
        @CustomType.Setter
        public Builder macAddressType(@Nullable String macAddressType) {
            this.macAddressType = macAddressType;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder networkName(String networkName) {
            this.networkName = Objects.requireNonNull(networkName);
            return this;
        }
        @CustomType.Setter
        public Builder nicId(@Nullable String nicId) {
            this.nicId = nicId;
            return this;
        }
        @CustomType.Setter
        public Builder virtualNetworkId(@Nullable String virtualNetworkId) {
            this.virtualNetworkId = virtualNetworkId;
            return this;
        }
        public NetworkInterfacesResponse build() {
            final var o = new NetworkInterfacesResponse();
            o.displayName = displayName;
            o.ipv4AddressType = ipv4AddressType;
            o.ipv4Addresses = ipv4Addresses;
            o.ipv6AddressType = ipv6AddressType;
            o.ipv6Addresses = ipv6Addresses;
            o.macAddress = macAddress;
            o.macAddressType = macAddressType;
            o.name = name;
            o.networkName = networkName;
            o.nicId = nicId;
            o.virtualNetworkId = virtualNetworkId;
            return o;
        }
    }
}
