// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datamigration.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ProjectFilePropertiesResponse {
    /**
     * @return Optional File extension. If submitted it should not have a leading period and must match the extension from filePath.
     * 
     */
    private @Nullable String extension;
    /**
     * @return Relative path of this file resource. This property can be set when creating or updating the file resource.
     * 
     */
    private @Nullable String filePath;
    /**
     * @return Modification DateTime.
     * 
     */
    private String lastModified;
    /**
     * @return File content type. This property can be modified to reflect the file content type.
     * 
     */
    private @Nullable String mediaType;
    /**
     * @return File size.
     * 
     */
    private Double size;

    private ProjectFilePropertiesResponse() {}
    /**
     * @return Optional File extension. If submitted it should not have a leading period and must match the extension from filePath.
     * 
     */
    public Optional<String> extension() {
        return Optional.ofNullable(this.extension);
    }
    /**
     * @return Relative path of this file resource. This property can be set when creating or updating the file resource.
     * 
     */
    public Optional<String> filePath() {
        return Optional.ofNullable(this.filePath);
    }
    /**
     * @return Modification DateTime.
     * 
     */
    public String lastModified() {
        return this.lastModified;
    }
    /**
     * @return File content type. This property can be modified to reflect the file content type.
     * 
     */
    public Optional<String> mediaType() {
        return Optional.ofNullable(this.mediaType);
    }
    /**
     * @return File size.
     * 
     */
    public Double size() {
        return this.size;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ProjectFilePropertiesResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String extension;
        private @Nullable String filePath;
        private String lastModified;
        private @Nullable String mediaType;
        private Double size;
        public Builder() {}
        public Builder(ProjectFilePropertiesResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.extension = defaults.extension;
    	      this.filePath = defaults.filePath;
    	      this.lastModified = defaults.lastModified;
    	      this.mediaType = defaults.mediaType;
    	      this.size = defaults.size;
        }

        @CustomType.Setter
        public Builder extension(@Nullable String extension) {
            this.extension = extension;
            return this;
        }
        @CustomType.Setter
        public Builder filePath(@Nullable String filePath) {
            this.filePath = filePath;
            return this;
        }
        @CustomType.Setter
        public Builder lastModified(String lastModified) {
            this.lastModified = Objects.requireNonNull(lastModified);
            return this;
        }
        @CustomType.Setter
        public Builder mediaType(@Nullable String mediaType) {
            this.mediaType = mediaType;
            return this;
        }
        @CustomType.Setter
        public Builder size(Double size) {
            this.size = Objects.requireNonNull(size);
            return this;
        }
        public ProjectFilePropertiesResponse build() {
            final var o = new ProjectFilePropertiesResponse();
            o.extension = extension;
            o.filePath = filePath;
            o.lastModified = lastModified;
            o.mediaType = mediaType;
            o.size = size;
            return o;
        }
    }
}
