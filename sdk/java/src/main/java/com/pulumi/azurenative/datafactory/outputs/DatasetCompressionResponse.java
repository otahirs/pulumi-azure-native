// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datafactory.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Object;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DatasetCompressionResponse {
    /**
     * @return The dataset compression level. Type: string (or Expression with resultType string).
     * 
     */
    private @Nullable Object level;
    /**
     * @return Type of dataset compression. Type: string (or Expression with resultType string).
     * 
     */
    private Object type;

    private DatasetCompressionResponse() {}
    /**
     * @return The dataset compression level. Type: string (or Expression with resultType string).
     * 
     */
    public Optional<Object> level() {
        return Optional.ofNullable(this.level);
    }
    /**
     * @return Type of dataset compression. Type: string (or Expression with resultType string).
     * 
     */
    public Object type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DatasetCompressionResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Object level;
        private Object type;
        public Builder() {}
        public Builder(DatasetCompressionResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.level = defaults.level;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder level(@Nullable Object level) {
            this.level = level;
            return this;
        }
        @CustomType.Setter
        public Builder type(Object type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public DatasetCompressionResponse build() {
            final var o = new DatasetCompressionResponse();
            o.level = level;
            o.type = type;
            return o;
        }
    }
}
