// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.workloads.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class EnqueueServerPropertiesResponse {
    /**
     * @return Defines the SAP Instance health.
     * 
     */
    private String health;
    /**
     * @return The enqueue server SAP host name.
     * 
     */
    private String hostname;
    /**
     * @return The enqueue server SAP IP Address.
     * 
     */
    private String ipAddress;
    /**
     * @return The enqueue server Port.
     * 
     */
    private Double port;

    private EnqueueServerPropertiesResponse() {}
    /**
     * @return Defines the SAP Instance health.
     * 
     */
    public String health() {
        return this.health;
    }
    /**
     * @return The enqueue server SAP host name.
     * 
     */
    public String hostname() {
        return this.hostname;
    }
    /**
     * @return The enqueue server SAP IP Address.
     * 
     */
    public String ipAddress() {
        return this.ipAddress;
    }
    /**
     * @return The enqueue server Port.
     * 
     */
    public Double port() {
        return this.port;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EnqueueServerPropertiesResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String health;
        private String hostname;
        private String ipAddress;
        private Double port;
        public Builder() {}
        public Builder(EnqueueServerPropertiesResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.health = defaults.health;
    	      this.hostname = defaults.hostname;
    	      this.ipAddress = defaults.ipAddress;
    	      this.port = defaults.port;
        }

        @CustomType.Setter
        public Builder health(String health) {
            this.health = Objects.requireNonNull(health);
            return this;
        }
        @CustomType.Setter
        public Builder hostname(String hostname) {
            this.hostname = Objects.requireNonNull(hostname);
            return this;
        }
        @CustomType.Setter
        public Builder ipAddress(String ipAddress) {
            this.ipAddress = Objects.requireNonNull(ipAddress);
            return this;
        }
        @CustomType.Setter
        public Builder port(Double port) {
            this.port = Objects.requireNonNull(port);
            return this;
        }
        public EnqueueServerPropertiesResponse build() {
            final var o = new EnqueueServerPropertiesResponse();
            o.health = health;
            o.hostname = hostname;
            o.ipAddress = ipAddress;
            o.port = port;
            return o;
        }
    }
}
