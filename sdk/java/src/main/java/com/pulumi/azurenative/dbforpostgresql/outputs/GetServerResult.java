// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.dbforpostgresql.outputs;

import com.pulumi.azurenative.dbforpostgresql.outputs.ResourceIdentityResponse;
import com.pulumi.azurenative.dbforpostgresql.outputs.ServerPrivateEndpointConnectionResponse;
import com.pulumi.azurenative.dbforpostgresql.outputs.SkuResponse;
import com.pulumi.azurenative.dbforpostgresql.outputs.StorageProfileResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetServerResult {
    /**
     * @return The administrator&#39;s login name of a server. Can only be specified when the server is being created (and is required for creation).
     * 
     */
    private @Nullable String administratorLogin;
    /**
     * @return Status showing whether the server data encryption is enabled with customer-managed keys.
     * 
     */
    private String byokEnforcement;
    /**
     * @return Earliest restore point creation time (ISO8601 format)
     * 
     */
    private @Nullable String earliestRestoreDate;
    /**
     * @return The fully qualified domain name of a server.
     * 
     */
    private @Nullable String fullyQualifiedDomainName;
    /**
     * @return Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    private String id;
    /**
     * @return The Azure Active Directory identity of the server.
     * 
     */
    private @Nullable ResourceIdentityResponse identity;
    /**
     * @return Status showing whether the server enabled infrastructure encryption.
     * 
     */
    private @Nullable String infrastructureEncryption;
    /**
     * @return The geo-location where the resource lives
     * 
     */
    private String location;
    /**
     * @return The master server id of a replica server.
     * 
     */
    private @Nullable String masterServerId;
    /**
     * @return Enforce a minimal Tls version for the server.
     * 
     */
    private @Nullable String minimalTlsVersion;
    /**
     * @return The name of the resource
     * 
     */
    private String name;
    /**
     * @return List of private endpoint connections on a server
     * 
     */
    private List<ServerPrivateEndpointConnectionResponse> privateEndpointConnections;
    /**
     * @return Whether or not public network access is allowed for this server. Value is optional but if passed in, must be &#39;Enabled&#39; or &#39;Disabled&#39;
     * 
     */
    private @Nullable String publicNetworkAccess;
    /**
     * @return The maximum number of replicas that a master server can have.
     * 
     */
    private @Nullable Integer replicaCapacity;
    /**
     * @return The replication role of the server.
     * 
     */
    private @Nullable String replicationRole;
    /**
     * @return The SKU (pricing tier) of the server.
     * 
     */
    private @Nullable SkuResponse sku;
    /**
     * @return Enable ssl enforcement or not when connect to server.
     * 
     */
    private @Nullable String sslEnforcement;
    /**
     * @return Storage profile of a server.
     * 
     */
    private @Nullable StorageProfileResponse storageProfile;
    /**
     * @return Resource tags.
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    private String type;
    /**
     * @return A state of a server that is visible to user.
     * 
     */
    private @Nullable String userVisibleState;
    /**
     * @return Server version.
     * 
     */
    private @Nullable String version;

    private GetServerResult() {}
    /**
     * @return The administrator&#39;s login name of a server. Can only be specified when the server is being created (and is required for creation).
     * 
     */
    public Optional<String> administratorLogin() {
        return Optional.ofNullable(this.administratorLogin);
    }
    /**
     * @return Status showing whether the server data encryption is enabled with customer-managed keys.
     * 
     */
    public String byokEnforcement() {
        return this.byokEnforcement;
    }
    /**
     * @return Earliest restore point creation time (ISO8601 format)
     * 
     */
    public Optional<String> earliestRestoreDate() {
        return Optional.ofNullable(this.earliestRestoreDate);
    }
    /**
     * @return The fully qualified domain name of a server.
     * 
     */
    public Optional<String> fullyQualifiedDomainName() {
        return Optional.ofNullable(this.fullyQualifiedDomainName);
    }
    /**
     * @return Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The Azure Active Directory identity of the server.
     * 
     */
    public Optional<ResourceIdentityResponse> identity() {
        return Optional.ofNullable(this.identity);
    }
    /**
     * @return Status showing whether the server enabled infrastructure encryption.
     * 
     */
    public Optional<String> infrastructureEncryption() {
        return Optional.ofNullable(this.infrastructureEncryption);
    }
    /**
     * @return The geo-location where the resource lives
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return The master server id of a replica server.
     * 
     */
    public Optional<String> masterServerId() {
        return Optional.ofNullable(this.masterServerId);
    }
    /**
     * @return Enforce a minimal Tls version for the server.
     * 
     */
    public Optional<String> minimalTlsVersion() {
        return Optional.ofNullable(this.minimalTlsVersion);
    }
    /**
     * @return The name of the resource
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return List of private endpoint connections on a server
     * 
     */
    public List<ServerPrivateEndpointConnectionResponse> privateEndpointConnections() {
        return this.privateEndpointConnections;
    }
    /**
     * @return Whether or not public network access is allowed for this server. Value is optional but if passed in, must be &#39;Enabled&#39; or &#39;Disabled&#39;
     * 
     */
    public Optional<String> publicNetworkAccess() {
        return Optional.ofNullable(this.publicNetworkAccess);
    }
    /**
     * @return The maximum number of replicas that a master server can have.
     * 
     */
    public Optional<Integer> replicaCapacity() {
        return Optional.ofNullable(this.replicaCapacity);
    }
    /**
     * @return The replication role of the server.
     * 
     */
    public Optional<String> replicationRole() {
        return Optional.ofNullable(this.replicationRole);
    }
    /**
     * @return The SKU (pricing tier) of the server.
     * 
     */
    public Optional<SkuResponse> sku() {
        return Optional.ofNullable(this.sku);
    }
    /**
     * @return Enable ssl enforcement or not when connect to server.
     * 
     */
    public Optional<String> sslEnforcement() {
        return Optional.ofNullable(this.sslEnforcement);
    }
    /**
     * @return Storage profile of a server.
     * 
     */
    public Optional<StorageProfileResponse> storageProfile() {
        return Optional.ofNullable(this.storageProfile);
    }
    /**
     * @return Resource tags.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return A state of a server that is visible to user.
     * 
     */
    public Optional<String> userVisibleState() {
        return Optional.ofNullable(this.userVisibleState);
    }
    /**
     * @return Server version.
     * 
     */
    public Optional<String> version() {
        return Optional.ofNullable(this.version);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServerResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String administratorLogin;
        private String byokEnforcement;
        private @Nullable String earliestRestoreDate;
        private @Nullable String fullyQualifiedDomainName;
        private String id;
        private @Nullable ResourceIdentityResponse identity;
        private @Nullable String infrastructureEncryption;
        private String location;
        private @Nullable String masterServerId;
        private @Nullable String minimalTlsVersion;
        private String name;
        private List<ServerPrivateEndpointConnectionResponse> privateEndpointConnections;
        private @Nullable String publicNetworkAccess;
        private @Nullable Integer replicaCapacity;
        private @Nullable String replicationRole;
        private @Nullable SkuResponse sku;
        private @Nullable String sslEnforcement;
        private @Nullable StorageProfileResponse storageProfile;
        private @Nullable Map<String,String> tags;
        private String type;
        private @Nullable String userVisibleState;
        private @Nullable String version;
        public Builder() {}
        public Builder(GetServerResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.administratorLogin = defaults.administratorLogin;
    	      this.byokEnforcement = defaults.byokEnforcement;
    	      this.earliestRestoreDate = defaults.earliestRestoreDate;
    	      this.fullyQualifiedDomainName = defaults.fullyQualifiedDomainName;
    	      this.id = defaults.id;
    	      this.identity = defaults.identity;
    	      this.infrastructureEncryption = defaults.infrastructureEncryption;
    	      this.location = defaults.location;
    	      this.masterServerId = defaults.masterServerId;
    	      this.minimalTlsVersion = defaults.minimalTlsVersion;
    	      this.name = defaults.name;
    	      this.privateEndpointConnections = defaults.privateEndpointConnections;
    	      this.publicNetworkAccess = defaults.publicNetworkAccess;
    	      this.replicaCapacity = defaults.replicaCapacity;
    	      this.replicationRole = defaults.replicationRole;
    	      this.sku = defaults.sku;
    	      this.sslEnforcement = defaults.sslEnforcement;
    	      this.storageProfile = defaults.storageProfile;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
    	      this.userVisibleState = defaults.userVisibleState;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder administratorLogin(@Nullable String administratorLogin) {
            this.administratorLogin = administratorLogin;
            return this;
        }
        @CustomType.Setter
        public Builder byokEnforcement(String byokEnforcement) {
            this.byokEnforcement = Objects.requireNonNull(byokEnforcement);
            return this;
        }
        @CustomType.Setter
        public Builder earliestRestoreDate(@Nullable String earliestRestoreDate) {
            this.earliestRestoreDate = earliestRestoreDate;
            return this;
        }
        @CustomType.Setter
        public Builder fullyQualifiedDomainName(@Nullable String fullyQualifiedDomainName) {
            this.fullyQualifiedDomainName = fullyQualifiedDomainName;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder identity(@Nullable ResourceIdentityResponse identity) {
            this.identity = identity;
            return this;
        }
        @CustomType.Setter
        public Builder infrastructureEncryption(@Nullable String infrastructureEncryption) {
            this.infrastructureEncryption = infrastructureEncryption;
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        @CustomType.Setter
        public Builder masterServerId(@Nullable String masterServerId) {
            this.masterServerId = masterServerId;
            return this;
        }
        @CustomType.Setter
        public Builder minimalTlsVersion(@Nullable String minimalTlsVersion) {
            this.minimalTlsVersion = minimalTlsVersion;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder privateEndpointConnections(List<ServerPrivateEndpointConnectionResponse> privateEndpointConnections) {
            this.privateEndpointConnections = Objects.requireNonNull(privateEndpointConnections);
            return this;
        }
        public Builder privateEndpointConnections(ServerPrivateEndpointConnectionResponse... privateEndpointConnections) {
            return privateEndpointConnections(List.of(privateEndpointConnections));
        }
        @CustomType.Setter
        public Builder publicNetworkAccess(@Nullable String publicNetworkAccess) {
            this.publicNetworkAccess = publicNetworkAccess;
            return this;
        }
        @CustomType.Setter
        public Builder replicaCapacity(@Nullable Integer replicaCapacity) {
            this.replicaCapacity = replicaCapacity;
            return this;
        }
        @CustomType.Setter
        public Builder replicationRole(@Nullable String replicationRole) {
            this.replicationRole = replicationRole;
            return this;
        }
        @CustomType.Setter
        public Builder sku(@Nullable SkuResponse sku) {
            this.sku = sku;
            return this;
        }
        @CustomType.Setter
        public Builder sslEnforcement(@Nullable String sslEnforcement) {
            this.sslEnforcement = sslEnforcement;
            return this;
        }
        @CustomType.Setter
        public Builder storageProfile(@Nullable StorageProfileResponse storageProfile) {
            this.storageProfile = storageProfile;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder userVisibleState(@Nullable String userVisibleState) {
            this.userVisibleState = userVisibleState;
            return this;
        }
        @CustomType.Setter
        public Builder version(@Nullable String version) {
            this.version = version;
            return this;
        }
        public GetServerResult build() {
            final var o = new GetServerResult();
            o.administratorLogin = administratorLogin;
            o.byokEnforcement = byokEnforcement;
            o.earliestRestoreDate = earliestRestoreDate;
            o.fullyQualifiedDomainName = fullyQualifiedDomainName;
            o.id = id;
            o.identity = identity;
            o.infrastructureEncryption = infrastructureEncryption;
            o.location = location;
            o.masterServerId = masterServerId;
            o.minimalTlsVersion = minimalTlsVersion;
            o.name = name;
            o.privateEndpointConnections = privateEndpointConnections;
            o.publicNetworkAccess = publicNetworkAccess;
            o.replicaCapacity = replicaCapacity;
            o.replicationRole = replicationRole;
            o.sku = sku;
            o.sslEnforcement = sslEnforcement;
            o.storageProfile = storageProfile;
            o.tags = tags;
            o.type = type;
            o.userVisibleState = userVisibleState;
            o.version = version;
            return o;
        }
    }
}
