// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.workloads.inputs;

import com.pulumi.azurenative.workloads.inputs.VirtualMachineConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;


/**
 * Gets or sets the application server configuration.
 * 
 */
public final class ApplicationServerConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationServerConfigurationArgs Empty = new ApplicationServerConfigurationArgs();

    /**
     * The number of app server instances.
     * 
     */
    @Import(name="instanceCount", required=true)
    private Output<Double> instanceCount;

    /**
     * @return The number of app server instances.
     * 
     */
    public Output<Double> instanceCount() {
        return this.instanceCount;
    }

    /**
     * The subnet id.
     * 
     */
    @Import(name="subnetId", required=true)
    private Output<String> subnetId;

    /**
     * @return The subnet id.
     * 
     */
    public Output<String> subnetId() {
        return this.subnetId;
    }

    /**
     * Gets or sets the virtual machine configuration.
     * 
     */
    @Import(name="virtualMachineConfiguration", required=true)
    private Output<VirtualMachineConfigurationArgs> virtualMachineConfiguration;

    /**
     * @return Gets or sets the virtual machine configuration.
     * 
     */
    public Output<VirtualMachineConfigurationArgs> virtualMachineConfiguration() {
        return this.virtualMachineConfiguration;
    }

    private ApplicationServerConfigurationArgs() {}

    private ApplicationServerConfigurationArgs(ApplicationServerConfigurationArgs $) {
        this.instanceCount = $.instanceCount;
        this.subnetId = $.subnetId;
        this.virtualMachineConfiguration = $.virtualMachineConfiguration;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationServerConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationServerConfigurationArgs $;

        public Builder() {
            $ = new ApplicationServerConfigurationArgs();
        }

        public Builder(ApplicationServerConfigurationArgs defaults) {
            $ = new ApplicationServerConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param instanceCount The number of app server instances.
         * 
         * @return builder
         * 
         */
        public Builder instanceCount(Output<Double> instanceCount) {
            $.instanceCount = instanceCount;
            return this;
        }

        /**
         * @param instanceCount The number of app server instances.
         * 
         * @return builder
         * 
         */
        public Builder instanceCount(Double instanceCount) {
            return instanceCount(Output.of(instanceCount));
        }

        /**
         * @param subnetId The subnet id.
         * 
         * @return builder
         * 
         */
        public Builder subnetId(Output<String> subnetId) {
            $.subnetId = subnetId;
            return this;
        }

        /**
         * @param subnetId The subnet id.
         * 
         * @return builder
         * 
         */
        public Builder subnetId(String subnetId) {
            return subnetId(Output.of(subnetId));
        }

        /**
         * @param virtualMachineConfiguration Gets or sets the virtual machine configuration.
         * 
         * @return builder
         * 
         */
        public Builder virtualMachineConfiguration(Output<VirtualMachineConfigurationArgs> virtualMachineConfiguration) {
            $.virtualMachineConfiguration = virtualMachineConfiguration;
            return this;
        }

        /**
         * @param virtualMachineConfiguration Gets or sets the virtual machine configuration.
         * 
         * @return builder
         * 
         */
        public Builder virtualMachineConfiguration(VirtualMachineConfigurationArgs virtualMachineConfiguration) {
            return virtualMachineConfiguration(Output.of(virtualMachineConfiguration));
        }

        public ApplicationServerConfigurationArgs build() {
            $.instanceCount = Objects.requireNonNull($.instanceCount, "expected parameter 'instanceCount' to be non-null");
            $.subnetId = Objects.requireNonNull($.subnetId, "expected parameter 'subnetId' to be non-null");
            $.virtualMachineConfiguration = Objects.requireNonNull($.virtualMachineConfiguration, "expected parameter 'virtualMachineConfiguration' to be non-null");
            return $;
        }
    }

}
