// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.dataprotection.outputs;

import com.pulumi.azurenative.dataprotection.outputs.DatasourceResponse;
import com.pulumi.azurenative.dataprotection.outputs.DatasourceSetResponse;
import com.pulumi.azurenative.dataprotection.outputs.PolicyInfoResponse;
import com.pulumi.azurenative.dataprotection.outputs.ProtectionStatusDetailsResponse;
import com.pulumi.azurenative.dataprotection.outputs.UserFacingErrorResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class BackupInstanceResponse {
    /**
     * @return Specifies the current protection state of the resource
     * 
     */
    private String currentProtectionState;
    /**
     * @return Gets or sets the data source information.
     * 
     */
    private DatasourceResponse dataSourceInfo;
    /**
     * @return Gets or sets the data source set information.
     * 
     */
    private @Nullable DatasourceSetResponse dataSourceSetInfo;
    /**
     * @return Gets or sets the Backup Instance friendly name.
     * 
     */
    private @Nullable String friendlyName;
    private String objectType;
    /**
     * @return Gets or sets the policy information.
     * 
     */
    private PolicyInfoResponse policyInfo;
    /**
     * @return Specifies the protection error of the resource
     * 
     */
    private UserFacingErrorResponse protectionErrorDetails;
    /**
     * @return Specifies the protection status of the resource
     * 
     */
    private ProtectionStatusDetailsResponse protectionStatus;
    /**
     * @return Specifies the provisioning state of the resource i.e. provisioning/updating/Succeeded/Failed
     * 
     */
    private String provisioningState;

    private BackupInstanceResponse() {}
    /**
     * @return Specifies the current protection state of the resource
     * 
     */
    public String currentProtectionState() {
        return this.currentProtectionState;
    }
    /**
     * @return Gets or sets the data source information.
     * 
     */
    public DatasourceResponse dataSourceInfo() {
        return this.dataSourceInfo;
    }
    /**
     * @return Gets or sets the data source set information.
     * 
     */
    public Optional<DatasourceSetResponse> dataSourceSetInfo() {
        return Optional.ofNullable(this.dataSourceSetInfo);
    }
    /**
     * @return Gets or sets the Backup Instance friendly name.
     * 
     */
    public Optional<String> friendlyName() {
        return Optional.ofNullable(this.friendlyName);
    }
    public String objectType() {
        return this.objectType;
    }
    /**
     * @return Gets or sets the policy information.
     * 
     */
    public PolicyInfoResponse policyInfo() {
        return this.policyInfo;
    }
    /**
     * @return Specifies the protection error of the resource
     * 
     */
    public UserFacingErrorResponse protectionErrorDetails() {
        return this.protectionErrorDetails;
    }
    /**
     * @return Specifies the protection status of the resource
     * 
     */
    public ProtectionStatusDetailsResponse protectionStatus() {
        return this.protectionStatus;
    }
    /**
     * @return Specifies the provisioning state of the resource i.e. provisioning/updating/Succeeded/Failed
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BackupInstanceResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String currentProtectionState;
        private DatasourceResponse dataSourceInfo;
        private @Nullable DatasourceSetResponse dataSourceSetInfo;
        private @Nullable String friendlyName;
        private String objectType;
        private PolicyInfoResponse policyInfo;
        private UserFacingErrorResponse protectionErrorDetails;
        private ProtectionStatusDetailsResponse protectionStatus;
        private String provisioningState;
        public Builder() {}
        public Builder(BackupInstanceResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.currentProtectionState = defaults.currentProtectionState;
    	      this.dataSourceInfo = defaults.dataSourceInfo;
    	      this.dataSourceSetInfo = defaults.dataSourceSetInfo;
    	      this.friendlyName = defaults.friendlyName;
    	      this.objectType = defaults.objectType;
    	      this.policyInfo = defaults.policyInfo;
    	      this.protectionErrorDetails = defaults.protectionErrorDetails;
    	      this.protectionStatus = defaults.protectionStatus;
    	      this.provisioningState = defaults.provisioningState;
        }

        @CustomType.Setter
        public Builder currentProtectionState(String currentProtectionState) {
            this.currentProtectionState = Objects.requireNonNull(currentProtectionState);
            return this;
        }
        @CustomType.Setter
        public Builder dataSourceInfo(DatasourceResponse dataSourceInfo) {
            this.dataSourceInfo = Objects.requireNonNull(dataSourceInfo);
            return this;
        }
        @CustomType.Setter
        public Builder dataSourceSetInfo(@Nullable DatasourceSetResponse dataSourceSetInfo) {
            this.dataSourceSetInfo = dataSourceSetInfo;
            return this;
        }
        @CustomType.Setter
        public Builder friendlyName(@Nullable String friendlyName) {
            this.friendlyName = friendlyName;
            return this;
        }
        @CustomType.Setter
        public Builder objectType(String objectType) {
            this.objectType = Objects.requireNonNull(objectType);
            return this;
        }
        @CustomType.Setter
        public Builder policyInfo(PolicyInfoResponse policyInfo) {
            this.policyInfo = Objects.requireNonNull(policyInfo);
            return this;
        }
        @CustomType.Setter
        public Builder protectionErrorDetails(UserFacingErrorResponse protectionErrorDetails) {
            this.protectionErrorDetails = Objects.requireNonNull(protectionErrorDetails);
            return this;
        }
        @CustomType.Setter
        public Builder protectionStatus(ProtectionStatusDetailsResponse protectionStatus) {
            this.protectionStatus = Objects.requireNonNull(protectionStatus);
            return this;
        }
        @CustomType.Setter
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        public BackupInstanceResponse build() {
            final var o = new BackupInstanceResponse();
            o.currentProtectionState = currentProtectionState;
            o.dataSourceInfo = dataSourceInfo;
            o.dataSourceSetInfo = dataSourceSetInfo;
            o.friendlyName = friendlyName;
            o.objectType = objectType;
            o.policyInfo = policyInfo;
            o.protectionErrorDetails = protectionErrorDetails;
            o.protectionStatus = protectionStatus;
            o.provisioningState = provisioningState;
            return o;
        }
    }
}
