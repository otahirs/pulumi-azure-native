// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.datalakeanalytics.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class ComputePolicyResponse {
    /**
     * @return The resource identifier.
     * 
     */
    private String id;
    /**
     * @return The maximum degree of parallelism per job this user can use to submit jobs.
     * 
     */
    private Integer maxDegreeOfParallelismPerJob;
    /**
     * @return The minimum priority per job this user can use to submit jobs.
     * 
     */
    private Integer minPriorityPerJob;
    /**
     * @return The resource name.
     * 
     */
    private String name;
    /**
     * @return The AAD object identifier for the entity to create a policy for.
     * 
     */
    private String objectId;
    /**
     * @return The type of AAD object the object identifier refers to.
     * 
     */
    private String objectType;
    /**
     * @return The resource type.
     * 
     */
    private String type;

    private ComputePolicyResponse() {}
    /**
     * @return The resource identifier.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The maximum degree of parallelism per job this user can use to submit jobs.
     * 
     */
    public Integer maxDegreeOfParallelismPerJob() {
        return this.maxDegreeOfParallelismPerJob;
    }
    /**
     * @return The minimum priority per job this user can use to submit jobs.
     * 
     */
    public Integer minPriorityPerJob() {
        return this.minPriorityPerJob;
    }
    /**
     * @return The resource name.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The AAD object identifier for the entity to create a policy for.
     * 
     */
    public String objectId() {
        return this.objectId;
    }
    /**
     * @return The type of AAD object the object identifier refers to.
     * 
     */
    public String objectType() {
        return this.objectType;
    }
    /**
     * @return The resource type.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ComputePolicyResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private Integer maxDegreeOfParallelismPerJob;
        private Integer minPriorityPerJob;
        private String name;
        private String objectId;
        private String objectType;
        private String type;
        public Builder() {}
        public Builder(ComputePolicyResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.maxDegreeOfParallelismPerJob = defaults.maxDegreeOfParallelismPerJob;
    	      this.minPriorityPerJob = defaults.minPriorityPerJob;
    	      this.name = defaults.name;
    	      this.objectId = defaults.objectId;
    	      this.objectType = defaults.objectType;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder maxDegreeOfParallelismPerJob(Integer maxDegreeOfParallelismPerJob) {
            this.maxDegreeOfParallelismPerJob = Objects.requireNonNull(maxDegreeOfParallelismPerJob);
            return this;
        }
        @CustomType.Setter
        public Builder minPriorityPerJob(Integer minPriorityPerJob) {
            this.minPriorityPerJob = Objects.requireNonNull(minPriorityPerJob);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder objectId(String objectId) {
            this.objectId = Objects.requireNonNull(objectId);
            return this;
        }
        @CustomType.Setter
        public Builder objectType(String objectType) {
            this.objectType = Objects.requireNonNull(objectType);
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public ComputePolicyResponse build() {
            final var o = new ComputePolicyResponse();
            o.id = id;
            o.maxDegreeOfParallelismPerJob = maxDegreeOfParallelismPerJob;
            o.minPriorityPerJob = minPriorityPerJob;
            o.name = name;
            o.objectId = objectId;
            o.objectType = objectType;
            o.type = type;
            return o;
        }
    }
}
