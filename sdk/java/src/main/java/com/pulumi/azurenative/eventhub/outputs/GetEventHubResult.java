// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.eventhub.outputs;

import com.pulumi.azurenative.eventhub.outputs.CaptureDescriptionResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetEventHubResult {
    /**
     * @return Properties of capture description
     * 
     */
    private @Nullable CaptureDescriptionResponse captureDescription;
    /**
     * @return Exact time the Event Hub was created.
     * 
     */
    private String createdAt;
    /**
     * @return Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    private String id;
    /**
     * @return Number of days to retain the events for this Event Hub, value should be 1 to 7 days
     * 
     */
    private @Nullable Double messageRetentionInDays;
    /**
     * @return The name of the resource
     * 
     */
    private String name;
    /**
     * @return Number of partitions created for the Event Hub, allowed values are from 1 to 32 partitions.
     * 
     */
    private @Nullable Double partitionCount;
    /**
     * @return Current number of shards on the Event Hub.
     * 
     */
    private List<String> partitionIds;
    /**
     * @return Enumerates the possible values for the status of the Event Hub.
     * 
     */
    private @Nullable String status;
    /**
     * @return The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    private String type;
    /**
     * @return The exact time the message was updated.
     * 
     */
    private String updatedAt;

    private GetEventHubResult() {}
    /**
     * @return Properties of capture description
     * 
     */
    public Optional<CaptureDescriptionResponse> captureDescription() {
        return Optional.ofNullable(this.captureDescription);
    }
    /**
     * @return Exact time the Event Hub was created.
     * 
     */
    public String createdAt() {
        return this.createdAt;
    }
    /**
     * @return Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Number of days to retain the events for this Event Hub, value should be 1 to 7 days
     * 
     */
    public Optional<Double> messageRetentionInDays() {
        return Optional.ofNullable(this.messageRetentionInDays);
    }
    /**
     * @return The name of the resource
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Number of partitions created for the Event Hub, allowed values are from 1 to 32 partitions.
     * 
     */
    public Optional<Double> partitionCount() {
        return Optional.ofNullable(this.partitionCount);
    }
    /**
     * @return Current number of shards on the Event Hub.
     * 
     */
    public List<String> partitionIds() {
        return this.partitionIds;
    }
    /**
     * @return Enumerates the possible values for the status of the Event Hub.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }
    /**
     * @return The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or &#34;Microsoft.Storage/storageAccounts&#34;
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return The exact time the message was updated.
     * 
     */
    public String updatedAt() {
        return this.updatedAt;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEventHubResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable CaptureDescriptionResponse captureDescription;
        private String createdAt;
        private String id;
        private @Nullable Double messageRetentionInDays;
        private String name;
        private @Nullable Double partitionCount;
        private List<String> partitionIds;
        private @Nullable String status;
        private String type;
        private String updatedAt;
        public Builder() {}
        public Builder(GetEventHubResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.captureDescription = defaults.captureDescription;
    	      this.createdAt = defaults.createdAt;
    	      this.id = defaults.id;
    	      this.messageRetentionInDays = defaults.messageRetentionInDays;
    	      this.name = defaults.name;
    	      this.partitionCount = defaults.partitionCount;
    	      this.partitionIds = defaults.partitionIds;
    	      this.status = defaults.status;
    	      this.type = defaults.type;
    	      this.updatedAt = defaults.updatedAt;
        }

        @CustomType.Setter
        public Builder captureDescription(@Nullable CaptureDescriptionResponse captureDescription) {
            this.captureDescription = captureDescription;
            return this;
        }
        @CustomType.Setter
        public Builder createdAt(String createdAt) {
            this.createdAt = Objects.requireNonNull(createdAt);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder messageRetentionInDays(@Nullable Double messageRetentionInDays) {
            this.messageRetentionInDays = messageRetentionInDays;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder partitionCount(@Nullable Double partitionCount) {
            this.partitionCount = partitionCount;
            return this;
        }
        @CustomType.Setter
        public Builder partitionIds(List<String> partitionIds) {
            this.partitionIds = Objects.requireNonNull(partitionIds);
            return this;
        }
        public Builder partitionIds(String... partitionIds) {
            return partitionIds(List.of(partitionIds));
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder updatedAt(String updatedAt) {
            this.updatedAt = Objects.requireNonNull(updatedAt);
            return this;
        }
        public GetEventHubResult build() {
            final var o = new GetEventHubResult();
            o.captureDescription = captureDescription;
            o.createdAt = createdAt;
            o.id = id;
            o.messageRetentionInDays = messageRetentionInDays;
            o.name = name;
            o.partitionCount = partitionCount;
            o.partitionIds = partitionIds;
            o.status = status;
            o.type = type;
            o.updatedAt = updatedAt;
            return o;
        }
    }
}
