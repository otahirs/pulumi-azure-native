// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.workloads.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DiscoveryConfigurationResponse {
    /**
     * @return The geo-location where the SAP system exists.
     * 
     */
    private String appLocation;
    /**
     * @return The virtual machine ID of the Central Server.
     * 
     */
    private @Nullable String centralServerVmId;
    /**
     * @return The configuration Type.
     * Expected value is &#39;Discovery&#39;.
     * 
     */
    private String configurationType;

    private DiscoveryConfigurationResponse() {}
    /**
     * @return The geo-location where the SAP system exists.
     * 
     */
    public String appLocation() {
        return this.appLocation;
    }
    /**
     * @return The virtual machine ID of the Central Server.
     * 
     */
    public Optional<String> centralServerVmId() {
        return Optional.ofNullable(this.centralServerVmId);
    }
    /**
     * @return The configuration Type.
     * Expected value is &#39;Discovery&#39;.
     * 
     */
    public String configurationType() {
        return this.configurationType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DiscoveryConfigurationResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String appLocation;
        private @Nullable String centralServerVmId;
        private String configurationType;
        public Builder() {}
        public Builder(DiscoveryConfigurationResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.appLocation = defaults.appLocation;
    	      this.centralServerVmId = defaults.centralServerVmId;
    	      this.configurationType = defaults.configurationType;
        }

        @CustomType.Setter
        public Builder appLocation(String appLocation) {
            this.appLocation = Objects.requireNonNull(appLocation);
            return this;
        }
        @CustomType.Setter
        public Builder centralServerVmId(@Nullable String centralServerVmId) {
            this.centralServerVmId = centralServerVmId;
            return this;
        }
        @CustomType.Setter
        public Builder configurationType(String configurationType) {
            this.configurationType = Objects.requireNonNull(configurationType);
            return this;
        }
        public DiscoveryConfigurationResponse build() {
            final var o = new DiscoveryConfigurationResponse();
            o.appLocation = appLocation;
            o.centralServerVmId = centralServerVmId;
            o.configurationType = configurationType;
            return o;
        }
    }
}
