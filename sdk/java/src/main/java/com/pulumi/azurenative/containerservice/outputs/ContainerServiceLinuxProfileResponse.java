// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.containerservice.outputs;

import com.pulumi.azurenative.containerservice.outputs.ContainerServiceSshConfigurationResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class ContainerServiceLinuxProfileResponse {
    /**
     * @return The administrator username to use for Linux VMs.
     * 
     */
    private String adminUsername;
    /**
     * @return SSH configuration for Linux-based VMs running on Azure.
     * 
     */
    private ContainerServiceSshConfigurationResponse ssh;

    private ContainerServiceLinuxProfileResponse() {}
    /**
     * @return The administrator username to use for Linux VMs.
     * 
     */
    public String adminUsername() {
        return this.adminUsername;
    }
    /**
     * @return SSH configuration for Linux-based VMs running on Azure.
     * 
     */
    public ContainerServiceSshConfigurationResponse ssh() {
        return this.ssh;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ContainerServiceLinuxProfileResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String adminUsername;
        private ContainerServiceSshConfigurationResponse ssh;
        public Builder() {}
        public Builder(ContainerServiceLinuxProfileResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.adminUsername = defaults.adminUsername;
    	      this.ssh = defaults.ssh;
        }

        @CustomType.Setter
        public Builder adminUsername(String adminUsername) {
            this.adminUsername = Objects.requireNonNull(adminUsername);
            return this;
        }
        @CustomType.Setter
        public Builder ssh(ContainerServiceSshConfigurationResponse ssh) {
            this.ssh = Objects.requireNonNull(ssh);
            return this;
        }
        public ContainerServiceLinuxProfileResponse build() {
            final var o = new ContainerServiceLinuxProfileResponse();
            o.adminUsername = adminUsername;
            o.ssh = ssh;
            return o;
        }
    }
}
