// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.network.outputs;

import com.pulumi.azurenative.network.outputs.AddressPrefixItemResponse;
import com.pulumi.azurenative.network.outputs.ConfigurationGroupResponse;
import com.pulumi.azurenative.network.outputs.NetworkManagerSecurityGroupItemResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ActiveSecurityUserRuleResponse {
    /**
     * @return Deployment time string.
     * 
     */
    private @Nullable String commitTime;
    /**
     * @return A description of the security user configuration.
     * 
     */
    private @Nullable String configurationDescription;
    /**
     * @return A display name of the security user configuration.
     * 
     */
    private @Nullable String configurationDisplayName;
    /**
     * @return A description for this rule.
     * 
     */
    private @Nullable String description;
    /**
     * @return The destination port ranges.
     * 
     */
    private @Nullable List<String> destinationPortRanges;
    /**
     * @return The destination address prefixes. CIDR or destination IP ranges.
     * 
     */
    private @Nullable List<AddressPrefixItemResponse> destinations;
    /**
     * @return Indicates if the traffic matched against the rule in inbound or outbound.
     * 
     */
    private String direction;
    /**
     * @return A friendly name for the rule.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return Resource ID.
     * 
     */
    private @Nullable String id;
    /**
     * @return Whether the rule is custom or default.
     * Expected value is &#39;Custom&#39;.
     * 
     */
    private String kind;
    /**
     * @return Network protocol this rule applies to.
     * 
     */
    private String protocol;
    /**
     * @return The provisioning state of the security configuration user rule resource.
     * 
     */
    private String provisioningState;
    /**
     * @return Deployment region.
     * 
     */
    private @Nullable String region;
    /**
     * @return Groups for rule collection
     * 
     */
    private @Nullable List<NetworkManagerSecurityGroupItemResponse> ruleCollectionAppliesToGroups;
    /**
     * @return A description of the rule collection.
     * 
     */
    private @Nullable String ruleCollectionDescription;
    /**
     * @return A display name of the rule collection.
     * 
     */
    private @Nullable String ruleCollectionDisplayName;
    /**
     * @return Effective configuration groups.
     * 
     */
    private @Nullable List<ConfigurationGroupResponse> ruleGroups;
    /**
     * @return The source port ranges.
     * 
     */
    private @Nullable List<String> sourcePortRanges;
    /**
     * @return The CIDR or source IP ranges.
     * 
     */
    private @Nullable List<AddressPrefixItemResponse> sources;

    private ActiveSecurityUserRuleResponse() {}
    /**
     * @return Deployment time string.
     * 
     */
    public Optional<String> commitTime() {
        return Optional.ofNullable(this.commitTime);
    }
    /**
     * @return A description of the security user configuration.
     * 
     */
    public Optional<String> configurationDescription() {
        return Optional.ofNullable(this.configurationDescription);
    }
    /**
     * @return A display name of the security user configuration.
     * 
     */
    public Optional<String> configurationDisplayName() {
        return Optional.ofNullable(this.configurationDisplayName);
    }
    /**
     * @return A description for this rule.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return The destination port ranges.
     * 
     */
    public List<String> destinationPortRanges() {
        return this.destinationPortRanges == null ? List.of() : this.destinationPortRanges;
    }
    /**
     * @return The destination address prefixes. CIDR or destination IP ranges.
     * 
     */
    public List<AddressPrefixItemResponse> destinations() {
        return this.destinations == null ? List.of() : this.destinations;
    }
    /**
     * @return Indicates if the traffic matched against the rule in inbound or outbound.
     * 
     */
    public String direction() {
        return this.direction;
    }
    /**
     * @return A friendly name for the rule.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return Resource ID.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Whether the rule is custom or default.
     * Expected value is &#39;Custom&#39;.
     * 
     */
    public String kind() {
        return this.kind;
    }
    /**
     * @return Network protocol this rule applies to.
     * 
     */
    public String protocol() {
        return this.protocol;
    }
    /**
     * @return The provisioning state of the security configuration user rule resource.
     * 
     */
    public String provisioningState() {
        return this.provisioningState;
    }
    /**
     * @return Deployment region.
     * 
     */
    public Optional<String> region() {
        return Optional.ofNullable(this.region);
    }
    /**
     * @return Groups for rule collection
     * 
     */
    public List<NetworkManagerSecurityGroupItemResponse> ruleCollectionAppliesToGroups() {
        return this.ruleCollectionAppliesToGroups == null ? List.of() : this.ruleCollectionAppliesToGroups;
    }
    /**
     * @return A description of the rule collection.
     * 
     */
    public Optional<String> ruleCollectionDescription() {
        return Optional.ofNullable(this.ruleCollectionDescription);
    }
    /**
     * @return A display name of the rule collection.
     * 
     */
    public Optional<String> ruleCollectionDisplayName() {
        return Optional.ofNullable(this.ruleCollectionDisplayName);
    }
    /**
     * @return Effective configuration groups.
     * 
     */
    public List<ConfigurationGroupResponse> ruleGroups() {
        return this.ruleGroups == null ? List.of() : this.ruleGroups;
    }
    /**
     * @return The source port ranges.
     * 
     */
    public List<String> sourcePortRanges() {
        return this.sourcePortRanges == null ? List.of() : this.sourcePortRanges;
    }
    /**
     * @return The CIDR or source IP ranges.
     * 
     */
    public List<AddressPrefixItemResponse> sources() {
        return this.sources == null ? List.of() : this.sources;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ActiveSecurityUserRuleResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String commitTime;
        private @Nullable String configurationDescription;
        private @Nullable String configurationDisplayName;
        private @Nullable String description;
        private @Nullable List<String> destinationPortRanges;
        private @Nullable List<AddressPrefixItemResponse> destinations;
        private String direction;
        private @Nullable String displayName;
        private @Nullable String id;
        private String kind;
        private String protocol;
        private String provisioningState;
        private @Nullable String region;
        private @Nullable List<NetworkManagerSecurityGroupItemResponse> ruleCollectionAppliesToGroups;
        private @Nullable String ruleCollectionDescription;
        private @Nullable String ruleCollectionDisplayName;
        private @Nullable List<ConfigurationGroupResponse> ruleGroups;
        private @Nullable List<String> sourcePortRanges;
        private @Nullable List<AddressPrefixItemResponse> sources;
        public Builder() {}
        public Builder(ActiveSecurityUserRuleResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.commitTime = defaults.commitTime;
    	      this.configurationDescription = defaults.configurationDescription;
    	      this.configurationDisplayName = defaults.configurationDisplayName;
    	      this.description = defaults.description;
    	      this.destinationPortRanges = defaults.destinationPortRanges;
    	      this.destinations = defaults.destinations;
    	      this.direction = defaults.direction;
    	      this.displayName = defaults.displayName;
    	      this.id = defaults.id;
    	      this.kind = defaults.kind;
    	      this.protocol = defaults.protocol;
    	      this.provisioningState = defaults.provisioningState;
    	      this.region = defaults.region;
    	      this.ruleCollectionAppliesToGroups = defaults.ruleCollectionAppliesToGroups;
    	      this.ruleCollectionDescription = defaults.ruleCollectionDescription;
    	      this.ruleCollectionDisplayName = defaults.ruleCollectionDisplayName;
    	      this.ruleGroups = defaults.ruleGroups;
    	      this.sourcePortRanges = defaults.sourcePortRanges;
    	      this.sources = defaults.sources;
        }

        @CustomType.Setter
        public Builder commitTime(@Nullable String commitTime) {
            this.commitTime = commitTime;
            return this;
        }
        @CustomType.Setter
        public Builder configurationDescription(@Nullable String configurationDescription) {
            this.configurationDescription = configurationDescription;
            return this;
        }
        @CustomType.Setter
        public Builder configurationDisplayName(@Nullable String configurationDisplayName) {
            this.configurationDisplayName = configurationDisplayName;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder destinationPortRanges(@Nullable List<String> destinationPortRanges) {
            this.destinationPortRanges = destinationPortRanges;
            return this;
        }
        public Builder destinationPortRanges(String... destinationPortRanges) {
            return destinationPortRanges(List.of(destinationPortRanges));
        }
        @CustomType.Setter
        public Builder destinations(@Nullable List<AddressPrefixItemResponse> destinations) {
            this.destinations = destinations;
            return this;
        }
        public Builder destinations(AddressPrefixItemResponse... destinations) {
            return destinations(List.of(destinations));
        }
        @CustomType.Setter
        public Builder direction(String direction) {
            this.direction = Objects.requireNonNull(direction);
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder kind(String kind) {
            this.kind = Objects.requireNonNull(kind);
            return this;
        }
        @CustomType.Setter
        public Builder protocol(String protocol) {
            this.protocol = Objects.requireNonNull(protocol);
            return this;
        }
        @CustomType.Setter
        public Builder provisioningState(String provisioningState) {
            this.provisioningState = Objects.requireNonNull(provisioningState);
            return this;
        }
        @CustomType.Setter
        public Builder region(@Nullable String region) {
            this.region = region;
            return this;
        }
        @CustomType.Setter
        public Builder ruleCollectionAppliesToGroups(@Nullable List<NetworkManagerSecurityGroupItemResponse> ruleCollectionAppliesToGroups) {
            this.ruleCollectionAppliesToGroups = ruleCollectionAppliesToGroups;
            return this;
        }
        public Builder ruleCollectionAppliesToGroups(NetworkManagerSecurityGroupItemResponse... ruleCollectionAppliesToGroups) {
            return ruleCollectionAppliesToGroups(List.of(ruleCollectionAppliesToGroups));
        }
        @CustomType.Setter
        public Builder ruleCollectionDescription(@Nullable String ruleCollectionDescription) {
            this.ruleCollectionDescription = ruleCollectionDescription;
            return this;
        }
        @CustomType.Setter
        public Builder ruleCollectionDisplayName(@Nullable String ruleCollectionDisplayName) {
            this.ruleCollectionDisplayName = ruleCollectionDisplayName;
            return this;
        }
        @CustomType.Setter
        public Builder ruleGroups(@Nullable List<ConfigurationGroupResponse> ruleGroups) {
            this.ruleGroups = ruleGroups;
            return this;
        }
        public Builder ruleGroups(ConfigurationGroupResponse... ruleGroups) {
            return ruleGroups(List.of(ruleGroups));
        }
        @CustomType.Setter
        public Builder sourcePortRanges(@Nullable List<String> sourcePortRanges) {
            this.sourcePortRanges = sourcePortRanges;
            return this;
        }
        public Builder sourcePortRanges(String... sourcePortRanges) {
            return sourcePortRanges(List.of(sourcePortRanges));
        }
        @CustomType.Setter
        public Builder sources(@Nullable List<AddressPrefixItemResponse> sources) {
            this.sources = sources;
            return this;
        }
        public Builder sources(AddressPrefixItemResponse... sources) {
            return sources(List.of(sources));
        }
        public ActiveSecurityUserRuleResponse build() {
            final var o = new ActiveSecurityUserRuleResponse();
            o.commitTime = commitTime;
            o.configurationDescription = configurationDescription;
            o.configurationDisplayName = configurationDisplayName;
            o.description = description;
            o.destinationPortRanges = destinationPortRanges;
            o.destinations = destinations;
            o.direction = direction;
            o.displayName = displayName;
            o.id = id;
            o.kind = kind;
            o.protocol = protocol;
            o.provisioningState = provisioningState;
            o.region = region;
            o.ruleCollectionAppliesToGroups = ruleCollectionAppliesToGroups;
            o.ruleCollectionDescription = ruleCollectionDescription;
            o.ruleCollectionDisplayName = ruleCollectionDisplayName;
            o.ruleGroups = ruleGroups;
            o.sourcePortRanges = sourcePortRanges;
            o.sources = sources;
            return o;
        }
    }
}
