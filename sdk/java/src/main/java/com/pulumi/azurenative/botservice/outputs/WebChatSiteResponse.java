// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.botservice.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class WebChatSiteResponse {
    /**
     * @return Whether this site is enabled for DirectLine channel
     * 
     */
    private Boolean isEnabled;
    /**
     * @return Whether this site is enabled for preview versions of Webchat
     * 
     */
    private Boolean isWebchatPreviewEnabled;
    /**
     * @return Primary key. Value only returned through POST to the action Channel List API, otherwise empty.
     * 
     */
    private String key;
    /**
     * @return Secondary key. Value only returned through POST to the action Channel List API, otherwise empty.
     * 
     */
    private String key2;
    /**
     * @return Site Id
     * 
     */
    private String siteId;
    /**
     * @return Site name
     * 
     */
    private String siteName;

    private WebChatSiteResponse() {}
    /**
     * @return Whether this site is enabled for DirectLine channel
     * 
     */
    public Boolean isEnabled() {
        return this.isEnabled;
    }
    /**
     * @return Whether this site is enabled for preview versions of Webchat
     * 
     */
    public Boolean isWebchatPreviewEnabled() {
        return this.isWebchatPreviewEnabled;
    }
    /**
     * @return Primary key. Value only returned through POST to the action Channel List API, otherwise empty.
     * 
     */
    public String key() {
        return this.key;
    }
    /**
     * @return Secondary key. Value only returned through POST to the action Channel List API, otherwise empty.
     * 
     */
    public String key2() {
        return this.key2;
    }
    /**
     * @return Site Id
     * 
     */
    public String siteId() {
        return this.siteId;
    }
    /**
     * @return Site name
     * 
     */
    public String siteName() {
        return this.siteName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WebChatSiteResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean isEnabled;
        private Boolean isWebchatPreviewEnabled;
        private String key;
        private String key2;
        private String siteId;
        private String siteName;
        public Builder() {}
        public Builder(WebChatSiteResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.isEnabled = defaults.isEnabled;
    	      this.isWebchatPreviewEnabled = defaults.isWebchatPreviewEnabled;
    	      this.key = defaults.key;
    	      this.key2 = defaults.key2;
    	      this.siteId = defaults.siteId;
    	      this.siteName = defaults.siteName;
        }

        @CustomType.Setter
        public Builder isEnabled(Boolean isEnabled) {
            this.isEnabled = Objects.requireNonNull(isEnabled);
            return this;
        }
        @CustomType.Setter
        public Builder isWebchatPreviewEnabled(Boolean isWebchatPreviewEnabled) {
            this.isWebchatPreviewEnabled = Objects.requireNonNull(isWebchatPreviewEnabled);
            return this;
        }
        @CustomType.Setter
        public Builder key(String key) {
            this.key = Objects.requireNonNull(key);
            return this;
        }
        @CustomType.Setter
        public Builder key2(String key2) {
            this.key2 = Objects.requireNonNull(key2);
            return this;
        }
        @CustomType.Setter
        public Builder siteId(String siteId) {
            this.siteId = Objects.requireNonNull(siteId);
            return this;
        }
        @CustomType.Setter
        public Builder siteName(String siteName) {
            this.siteName = Objects.requireNonNull(siteName);
            return this;
        }
        public WebChatSiteResponse build() {
            final var o = new WebChatSiteResponse();
            o.isEnabled = isEnabled;
            o.isWebchatPreviewEnabled = isWebchatPreviewEnabled;
            o.key = key;
            o.key2 = key2;
            o.siteId = siteId;
            o.siteName = siteName;
            return o;
        }
    }
}
