// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.devtestlab.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class WeekDetailsResponse {
    /**
     * @return The time of the day the schedule will occur.
     * 
     */
    private @Nullable String time;
    /**
     * @return The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).
     * 
     */
    private @Nullable List<String> weekdays;

    private WeekDetailsResponse() {}
    /**
     * @return The time of the day the schedule will occur.
     * 
     */
    public Optional<String> time() {
        return Optional.ofNullable(this.time);
    }
    /**
     * @return The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).
     * 
     */
    public List<String> weekdays() {
        return this.weekdays == null ? List.of() : this.weekdays;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WeekDetailsResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String time;
        private @Nullable List<String> weekdays;
        public Builder() {}
        public Builder(WeekDetailsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.time = defaults.time;
    	      this.weekdays = defaults.weekdays;
        }

        @CustomType.Setter
        public Builder time(@Nullable String time) {
            this.time = time;
            return this;
        }
        @CustomType.Setter
        public Builder weekdays(@Nullable List<String> weekdays) {
            this.weekdays = weekdays;
            return this;
        }
        public Builder weekdays(String... weekdays) {
            return weekdays(List.of(weekdays));
        }
        public WeekDetailsResponse build() {
            final var o = new WeekDetailsResponse();
            o.time = time;
            o.weekdays = weekdays;
            return o;
        }
    }
}
