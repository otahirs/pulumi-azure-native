// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.machinelearningservices.outputs;

import com.pulumi.azurenative.machinelearningservices.outputs.ComputeInstanceApplicationResponse;
import com.pulumi.azurenative.machinelearningservices.outputs.ComputeInstanceConnectivityEndpointsResponse;
import com.pulumi.azurenative.machinelearningservices.outputs.ComputeInstanceCreatedByResponse;
import com.pulumi.azurenative.machinelearningservices.outputs.ComputeInstanceLastOperationResponse;
import com.pulumi.azurenative.machinelearningservices.outputs.ComputeInstanceSshSettingsResponse;
import com.pulumi.azurenative.machinelearningservices.outputs.MachineLearningServiceErrorResponse;
import com.pulumi.azurenative.machinelearningservices.outputs.PersonalComputeInstanceSettingsResponse;
import com.pulumi.azurenative.machinelearningservices.outputs.ResourceIdResponse;
import com.pulumi.azurenative.machinelearningservices.outputs.SetupScriptsResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ComputeInstanceResponseProperties {
    /**
     * @return Policy for sharing applications on this compute instance among users of parent workspace. If Personal, only the creator can access applications on this compute instance. When Shared, any workspace user can access applications on this instance depending on his/her assigned role.
     * 
     */
    private @Nullable String applicationSharingPolicy;
    /**
     * @return Describes available applications and their endpoints on this ComputeInstance.
     * 
     */
    private List<ComputeInstanceApplicationResponse> applications;
    /**
     * @return The Compute Instance Authorization type. Available values are personal (default).
     * 
     */
    private @Nullable String computeInstanceAuthorizationType;
    /**
     * @return Describes all connectivity endpoints available for this ComputeInstance.
     * 
     */
    private ComputeInstanceConnectivityEndpointsResponse connectivityEndpoints;
    /**
     * @return Describes information on user who created this ComputeInstance.
     * 
     */
    private ComputeInstanceCreatedByResponse createdBy;
    /**
     * @return Collection of errors encountered on this ComputeInstance.
     * 
     */
    private List<MachineLearningServiceErrorResponse> errors;
    /**
     * @return The last operation on ComputeInstance.
     * 
     */
    private ComputeInstanceLastOperationResponse lastOperation;
    /**
     * @return Settings for a personal compute instance.
     * 
     */
    private @Nullable PersonalComputeInstanceSettingsResponse personalComputeInstanceSettings;
    /**
     * @return Details of customized scripts to execute for setting up the cluster.
     * 
     */
    private @Nullable SetupScriptsResponse setupScripts;
    /**
     * @return Specifies policy and settings for SSH access.
     * 
     */
    private @Nullable ComputeInstanceSshSettingsResponse sshSettings;
    /**
     * @return The current state of this ComputeInstance.
     * 
     */
    private String state;
    /**
     * @return Virtual network subnet resource ID the compute nodes belong to.
     * 
     */
    private @Nullable ResourceIdResponse subnet;
    /**
     * @return Virtual Machine Size
     * 
     */
    private @Nullable String vmSize;

    private ComputeInstanceResponseProperties() {}
    /**
     * @return Policy for sharing applications on this compute instance among users of parent workspace. If Personal, only the creator can access applications on this compute instance. When Shared, any workspace user can access applications on this instance depending on his/her assigned role.
     * 
     */
    public Optional<String> applicationSharingPolicy() {
        return Optional.ofNullable(this.applicationSharingPolicy);
    }
    /**
     * @return Describes available applications and their endpoints on this ComputeInstance.
     * 
     */
    public List<ComputeInstanceApplicationResponse> applications() {
        return this.applications;
    }
    /**
     * @return The Compute Instance Authorization type. Available values are personal (default).
     * 
     */
    public Optional<String> computeInstanceAuthorizationType() {
        return Optional.ofNullable(this.computeInstanceAuthorizationType);
    }
    /**
     * @return Describes all connectivity endpoints available for this ComputeInstance.
     * 
     */
    public ComputeInstanceConnectivityEndpointsResponse connectivityEndpoints() {
        return this.connectivityEndpoints;
    }
    /**
     * @return Describes information on user who created this ComputeInstance.
     * 
     */
    public ComputeInstanceCreatedByResponse createdBy() {
        return this.createdBy;
    }
    /**
     * @return Collection of errors encountered on this ComputeInstance.
     * 
     */
    public List<MachineLearningServiceErrorResponse> errors() {
        return this.errors;
    }
    /**
     * @return The last operation on ComputeInstance.
     * 
     */
    public ComputeInstanceLastOperationResponse lastOperation() {
        return this.lastOperation;
    }
    /**
     * @return Settings for a personal compute instance.
     * 
     */
    public Optional<PersonalComputeInstanceSettingsResponse> personalComputeInstanceSettings() {
        return Optional.ofNullable(this.personalComputeInstanceSettings);
    }
    /**
     * @return Details of customized scripts to execute for setting up the cluster.
     * 
     */
    public Optional<SetupScriptsResponse> setupScripts() {
        return Optional.ofNullable(this.setupScripts);
    }
    /**
     * @return Specifies policy and settings for SSH access.
     * 
     */
    public Optional<ComputeInstanceSshSettingsResponse> sshSettings() {
        return Optional.ofNullable(this.sshSettings);
    }
    /**
     * @return The current state of this ComputeInstance.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return Virtual network subnet resource ID the compute nodes belong to.
     * 
     */
    public Optional<ResourceIdResponse> subnet() {
        return Optional.ofNullable(this.subnet);
    }
    /**
     * @return Virtual Machine Size
     * 
     */
    public Optional<String> vmSize() {
        return Optional.ofNullable(this.vmSize);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ComputeInstanceResponseProperties defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String applicationSharingPolicy;
        private List<ComputeInstanceApplicationResponse> applications;
        private @Nullable String computeInstanceAuthorizationType;
        private ComputeInstanceConnectivityEndpointsResponse connectivityEndpoints;
        private ComputeInstanceCreatedByResponse createdBy;
        private List<MachineLearningServiceErrorResponse> errors;
        private ComputeInstanceLastOperationResponse lastOperation;
        private @Nullable PersonalComputeInstanceSettingsResponse personalComputeInstanceSettings;
        private @Nullable SetupScriptsResponse setupScripts;
        private @Nullable ComputeInstanceSshSettingsResponse sshSettings;
        private String state;
        private @Nullable ResourceIdResponse subnet;
        private @Nullable String vmSize;
        public Builder() {}
        public Builder(ComputeInstanceResponseProperties defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationSharingPolicy = defaults.applicationSharingPolicy;
    	      this.applications = defaults.applications;
    	      this.computeInstanceAuthorizationType = defaults.computeInstanceAuthorizationType;
    	      this.connectivityEndpoints = defaults.connectivityEndpoints;
    	      this.createdBy = defaults.createdBy;
    	      this.errors = defaults.errors;
    	      this.lastOperation = defaults.lastOperation;
    	      this.personalComputeInstanceSettings = defaults.personalComputeInstanceSettings;
    	      this.setupScripts = defaults.setupScripts;
    	      this.sshSettings = defaults.sshSettings;
    	      this.state = defaults.state;
    	      this.subnet = defaults.subnet;
    	      this.vmSize = defaults.vmSize;
        }

        @CustomType.Setter
        public Builder applicationSharingPolicy(@Nullable String applicationSharingPolicy) {
            this.applicationSharingPolicy = applicationSharingPolicy;
            return this;
        }
        @CustomType.Setter
        public Builder applications(List<ComputeInstanceApplicationResponse> applications) {
            this.applications = Objects.requireNonNull(applications);
            return this;
        }
        public Builder applications(ComputeInstanceApplicationResponse... applications) {
            return applications(List.of(applications));
        }
        @CustomType.Setter
        public Builder computeInstanceAuthorizationType(@Nullable String computeInstanceAuthorizationType) {
            this.computeInstanceAuthorizationType = computeInstanceAuthorizationType;
            return this;
        }
        @CustomType.Setter
        public Builder connectivityEndpoints(ComputeInstanceConnectivityEndpointsResponse connectivityEndpoints) {
            this.connectivityEndpoints = Objects.requireNonNull(connectivityEndpoints);
            return this;
        }
        @CustomType.Setter
        public Builder createdBy(ComputeInstanceCreatedByResponse createdBy) {
            this.createdBy = Objects.requireNonNull(createdBy);
            return this;
        }
        @CustomType.Setter
        public Builder errors(List<MachineLearningServiceErrorResponse> errors) {
            this.errors = Objects.requireNonNull(errors);
            return this;
        }
        public Builder errors(MachineLearningServiceErrorResponse... errors) {
            return errors(List.of(errors));
        }
        @CustomType.Setter
        public Builder lastOperation(ComputeInstanceLastOperationResponse lastOperation) {
            this.lastOperation = Objects.requireNonNull(lastOperation);
            return this;
        }
        @CustomType.Setter
        public Builder personalComputeInstanceSettings(@Nullable PersonalComputeInstanceSettingsResponse personalComputeInstanceSettings) {
            this.personalComputeInstanceSettings = personalComputeInstanceSettings;
            return this;
        }
        @CustomType.Setter
        public Builder setupScripts(@Nullable SetupScriptsResponse setupScripts) {
            this.setupScripts = setupScripts;
            return this;
        }
        @CustomType.Setter
        public Builder sshSettings(@Nullable ComputeInstanceSshSettingsResponse sshSettings) {
            this.sshSettings = sshSettings;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        @CustomType.Setter
        public Builder subnet(@Nullable ResourceIdResponse subnet) {
            this.subnet = subnet;
            return this;
        }
        @CustomType.Setter
        public Builder vmSize(@Nullable String vmSize) {
            this.vmSize = vmSize;
            return this;
        }
        public ComputeInstanceResponseProperties build() {
            final var o = new ComputeInstanceResponseProperties();
            o.applicationSharingPolicy = applicationSharingPolicy;
            o.applications = applications;
            o.computeInstanceAuthorizationType = computeInstanceAuthorizationType;
            o.connectivityEndpoints = connectivityEndpoints;
            o.createdBy = createdBy;
            o.errors = errors;
            o.lastOperation = lastOperation;
            o.personalComputeInstanceSettings = personalComputeInstanceSettings;
            o.setupScripts = setupScripts;
            o.sshSettings = sshSettings;
            o.state = state;
            o.subnet = subnet;
            o.vmSize = vmSize;
            return o;
        }
    }
}
