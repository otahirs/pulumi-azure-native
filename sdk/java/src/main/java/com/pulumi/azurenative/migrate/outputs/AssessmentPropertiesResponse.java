// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.migrate.outputs;

import com.pulumi.azurenative.migrate.outputs.VmUptimeResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class AssessmentPropertiesResponse {
    /**
     * @return Storage type selected for this disk.
     * 
     */
    private String azureDiskType;
    /**
     * @return AHUB discount on windows virtual machines.
     * 
     */
    private String azureHybridUseBenefit;
    /**
     * @return Target Azure location for which the machines should be assessed. These enums are the same as used by Compute API.
     * 
     */
    private String azureLocation;
    /**
     * @return Offer code according to which cost estimation is done.
     * 
     */
    private String azureOfferCode;
    /**
     * @return Pricing tier for Size evaluation.
     * 
     */
    private String azurePricingTier;
    /**
     * @return Storage Redundancy type offered by Azure.
     * 
     */
    private String azureStorageRedundancy;
    /**
     * @return List of azure VM families.
     * 
     */
    private List<String> azureVmFamilies;
    /**
     * @return Confidence rating percentage for assessment. Can be in the range [0, 100].
     * 
     */
    private Double confidenceRatingInPercentage;
    /**
     * @return Time when this project was created. Date-Time represented in ISO-8601 format.
     * 
     */
    private String createdTimestamp;
    /**
     * @return Currency to report prices in.
     * 
     */
    private String currency;
    /**
     * @return Custom discount percentage to be applied on final costs. Can be in the range [0, 100].
     * 
     */
    private Double discountPercentage;
    /**
     * @return Enterprise agreement subscription arm id.
     * 
     */
    private String eaSubscriptionId;
    /**
     * @return Monthly network cost estimate for the machines that are part of this assessment as a group, for a 31-day month.
     * 
     */
    private Double monthlyBandwidthCost;
    /**
     * @return Monthly compute cost estimate for the machines that are part of this assessment as a group, for a 31-day month.
     * 
     */
    private Double monthlyComputeCost;
    /**
     * @return Monthly premium storage cost estimate for the machines that are part of this assessment as a group, for a 31-day month.
     * 
     */
    private Double monthlyPremiumStorageCost;
    /**
     * @return Monthly standard SSD storage cost estimate for the machines that are part of this assessment as a group, for a 31-day month.
     * 
     */
    private Double monthlyStandardSSDStorageCost;
    /**
     * @return Monthly storage cost estimate for the machines that are part of this assessment as a group, for a 31-day month.
     * 
     */
    private Double monthlyStorageCost;
    /**
     * @return Number of assessed machines part of this assessment.
     * 
     */
    private Integer numberOfMachines;
    /**
     * @return Percentile of performance data used to recommend Azure size.
     * 
     */
    private String percentile;
    /**
     * @return End time to consider performance data for assessment
     * 
     */
    private String perfDataEndTime;
    /**
     * @return Start time to consider performance data for assessment
     * 
     */
    private String perfDataStartTime;
    /**
     * @return Time when the Azure Prices were queried. Date-Time represented in ISO-8601 format.
     * 
     */
    private String pricesTimestamp;
    /**
     * @return Azure reserved instance.
     * 
     */
    private String reservedInstance;
    /**
     * @return Scaling factor used over utilization data to add a performance buffer for new machines to be created in Azure. Min Value = 1.0, Max value = 1.9, Default = 1.3.
     * 
     */
    private Double scalingFactor;
    /**
     * @return Assessment sizing criterion.
     * 
     */
    private String sizingCriterion;
    /**
     * @return User configurable setting that describes the status of the assessment.
     * 
     */
    private String stage;
    /**
     * @return Whether the assessment has been created and is valid.
     * 
     */
    private String status;
    /**
     * @return Time range of performance data used to recommend a size.
     * 
     */
    private String timeRange;
    /**
     * @return Time when this project was last updated. Date-Time represented in ISO-8601 format.
     * 
     */
    private String updatedTimestamp;
    /**
     * @return Specify the duration for which the VMs are up in the on-premises environment.
     * 
     */
    private VmUptimeResponse vmUptime;

    private AssessmentPropertiesResponse() {}
    /**
     * @return Storage type selected for this disk.
     * 
     */
    public String azureDiskType() {
        return this.azureDiskType;
    }
    /**
     * @return AHUB discount on windows virtual machines.
     * 
     */
    public String azureHybridUseBenefit() {
        return this.azureHybridUseBenefit;
    }
    /**
     * @return Target Azure location for which the machines should be assessed. These enums are the same as used by Compute API.
     * 
     */
    public String azureLocation() {
        return this.azureLocation;
    }
    /**
     * @return Offer code according to which cost estimation is done.
     * 
     */
    public String azureOfferCode() {
        return this.azureOfferCode;
    }
    /**
     * @return Pricing tier for Size evaluation.
     * 
     */
    public String azurePricingTier() {
        return this.azurePricingTier;
    }
    /**
     * @return Storage Redundancy type offered by Azure.
     * 
     */
    public String azureStorageRedundancy() {
        return this.azureStorageRedundancy;
    }
    /**
     * @return List of azure VM families.
     * 
     */
    public List<String> azureVmFamilies() {
        return this.azureVmFamilies;
    }
    /**
     * @return Confidence rating percentage for assessment. Can be in the range [0, 100].
     * 
     */
    public Double confidenceRatingInPercentage() {
        return this.confidenceRatingInPercentage;
    }
    /**
     * @return Time when this project was created. Date-Time represented in ISO-8601 format.
     * 
     */
    public String createdTimestamp() {
        return this.createdTimestamp;
    }
    /**
     * @return Currency to report prices in.
     * 
     */
    public String currency() {
        return this.currency;
    }
    /**
     * @return Custom discount percentage to be applied on final costs. Can be in the range [0, 100].
     * 
     */
    public Double discountPercentage() {
        return this.discountPercentage;
    }
    /**
     * @return Enterprise agreement subscription arm id.
     * 
     */
    public String eaSubscriptionId() {
        return this.eaSubscriptionId;
    }
    /**
     * @return Monthly network cost estimate for the machines that are part of this assessment as a group, for a 31-day month.
     * 
     */
    public Double monthlyBandwidthCost() {
        return this.monthlyBandwidthCost;
    }
    /**
     * @return Monthly compute cost estimate for the machines that are part of this assessment as a group, for a 31-day month.
     * 
     */
    public Double monthlyComputeCost() {
        return this.monthlyComputeCost;
    }
    /**
     * @return Monthly premium storage cost estimate for the machines that are part of this assessment as a group, for a 31-day month.
     * 
     */
    public Double monthlyPremiumStorageCost() {
        return this.monthlyPremiumStorageCost;
    }
    /**
     * @return Monthly standard SSD storage cost estimate for the machines that are part of this assessment as a group, for a 31-day month.
     * 
     */
    public Double monthlyStandardSSDStorageCost() {
        return this.monthlyStandardSSDStorageCost;
    }
    /**
     * @return Monthly storage cost estimate for the machines that are part of this assessment as a group, for a 31-day month.
     * 
     */
    public Double monthlyStorageCost() {
        return this.monthlyStorageCost;
    }
    /**
     * @return Number of assessed machines part of this assessment.
     * 
     */
    public Integer numberOfMachines() {
        return this.numberOfMachines;
    }
    /**
     * @return Percentile of performance data used to recommend Azure size.
     * 
     */
    public String percentile() {
        return this.percentile;
    }
    /**
     * @return End time to consider performance data for assessment
     * 
     */
    public String perfDataEndTime() {
        return this.perfDataEndTime;
    }
    /**
     * @return Start time to consider performance data for assessment
     * 
     */
    public String perfDataStartTime() {
        return this.perfDataStartTime;
    }
    /**
     * @return Time when the Azure Prices were queried. Date-Time represented in ISO-8601 format.
     * 
     */
    public String pricesTimestamp() {
        return this.pricesTimestamp;
    }
    /**
     * @return Azure reserved instance.
     * 
     */
    public String reservedInstance() {
        return this.reservedInstance;
    }
    /**
     * @return Scaling factor used over utilization data to add a performance buffer for new machines to be created in Azure. Min Value = 1.0, Max value = 1.9, Default = 1.3.
     * 
     */
    public Double scalingFactor() {
        return this.scalingFactor;
    }
    /**
     * @return Assessment sizing criterion.
     * 
     */
    public String sizingCriterion() {
        return this.sizingCriterion;
    }
    /**
     * @return User configurable setting that describes the status of the assessment.
     * 
     */
    public String stage() {
        return this.stage;
    }
    /**
     * @return Whether the assessment has been created and is valid.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return Time range of performance data used to recommend a size.
     * 
     */
    public String timeRange() {
        return this.timeRange;
    }
    /**
     * @return Time when this project was last updated. Date-Time represented in ISO-8601 format.
     * 
     */
    public String updatedTimestamp() {
        return this.updatedTimestamp;
    }
    /**
     * @return Specify the duration for which the VMs are up in the on-premises environment.
     * 
     */
    public VmUptimeResponse vmUptime() {
        return this.vmUptime;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AssessmentPropertiesResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String azureDiskType;
        private String azureHybridUseBenefit;
        private String azureLocation;
        private String azureOfferCode;
        private String azurePricingTier;
        private String azureStorageRedundancy;
        private List<String> azureVmFamilies;
        private Double confidenceRatingInPercentage;
        private String createdTimestamp;
        private String currency;
        private Double discountPercentage;
        private String eaSubscriptionId;
        private Double monthlyBandwidthCost;
        private Double monthlyComputeCost;
        private Double monthlyPremiumStorageCost;
        private Double monthlyStandardSSDStorageCost;
        private Double monthlyStorageCost;
        private Integer numberOfMachines;
        private String percentile;
        private String perfDataEndTime;
        private String perfDataStartTime;
        private String pricesTimestamp;
        private String reservedInstance;
        private Double scalingFactor;
        private String sizingCriterion;
        private String stage;
        private String status;
        private String timeRange;
        private String updatedTimestamp;
        private VmUptimeResponse vmUptime;
        public Builder() {}
        public Builder(AssessmentPropertiesResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.azureDiskType = defaults.azureDiskType;
    	      this.azureHybridUseBenefit = defaults.azureHybridUseBenefit;
    	      this.azureLocation = defaults.azureLocation;
    	      this.azureOfferCode = defaults.azureOfferCode;
    	      this.azurePricingTier = defaults.azurePricingTier;
    	      this.azureStorageRedundancy = defaults.azureStorageRedundancy;
    	      this.azureVmFamilies = defaults.azureVmFamilies;
    	      this.confidenceRatingInPercentage = defaults.confidenceRatingInPercentage;
    	      this.createdTimestamp = defaults.createdTimestamp;
    	      this.currency = defaults.currency;
    	      this.discountPercentage = defaults.discountPercentage;
    	      this.eaSubscriptionId = defaults.eaSubscriptionId;
    	      this.monthlyBandwidthCost = defaults.monthlyBandwidthCost;
    	      this.monthlyComputeCost = defaults.monthlyComputeCost;
    	      this.monthlyPremiumStorageCost = defaults.monthlyPremiumStorageCost;
    	      this.monthlyStandardSSDStorageCost = defaults.monthlyStandardSSDStorageCost;
    	      this.monthlyStorageCost = defaults.monthlyStorageCost;
    	      this.numberOfMachines = defaults.numberOfMachines;
    	      this.percentile = defaults.percentile;
    	      this.perfDataEndTime = defaults.perfDataEndTime;
    	      this.perfDataStartTime = defaults.perfDataStartTime;
    	      this.pricesTimestamp = defaults.pricesTimestamp;
    	      this.reservedInstance = defaults.reservedInstance;
    	      this.scalingFactor = defaults.scalingFactor;
    	      this.sizingCriterion = defaults.sizingCriterion;
    	      this.stage = defaults.stage;
    	      this.status = defaults.status;
    	      this.timeRange = defaults.timeRange;
    	      this.updatedTimestamp = defaults.updatedTimestamp;
    	      this.vmUptime = defaults.vmUptime;
        }

        @CustomType.Setter
        public Builder azureDiskType(String azureDiskType) {
            this.azureDiskType = Objects.requireNonNull(azureDiskType);
            return this;
        }
        @CustomType.Setter
        public Builder azureHybridUseBenefit(String azureHybridUseBenefit) {
            this.azureHybridUseBenefit = Objects.requireNonNull(azureHybridUseBenefit);
            return this;
        }
        @CustomType.Setter
        public Builder azureLocation(String azureLocation) {
            this.azureLocation = Objects.requireNonNull(azureLocation);
            return this;
        }
        @CustomType.Setter
        public Builder azureOfferCode(String azureOfferCode) {
            this.azureOfferCode = Objects.requireNonNull(azureOfferCode);
            return this;
        }
        @CustomType.Setter
        public Builder azurePricingTier(String azurePricingTier) {
            this.azurePricingTier = Objects.requireNonNull(azurePricingTier);
            return this;
        }
        @CustomType.Setter
        public Builder azureStorageRedundancy(String azureStorageRedundancy) {
            this.azureStorageRedundancy = Objects.requireNonNull(azureStorageRedundancy);
            return this;
        }
        @CustomType.Setter
        public Builder azureVmFamilies(List<String> azureVmFamilies) {
            this.azureVmFamilies = Objects.requireNonNull(azureVmFamilies);
            return this;
        }
        public Builder azureVmFamilies(String... azureVmFamilies) {
            return azureVmFamilies(List.of(azureVmFamilies));
        }
        @CustomType.Setter
        public Builder confidenceRatingInPercentage(Double confidenceRatingInPercentage) {
            this.confidenceRatingInPercentage = Objects.requireNonNull(confidenceRatingInPercentage);
            return this;
        }
        @CustomType.Setter
        public Builder createdTimestamp(String createdTimestamp) {
            this.createdTimestamp = Objects.requireNonNull(createdTimestamp);
            return this;
        }
        @CustomType.Setter
        public Builder currency(String currency) {
            this.currency = Objects.requireNonNull(currency);
            return this;
        }
        @CustomType.Setter
        public Builder discountPercentage(Double discountPercentage) {
            this.discountPercentage = Objects.requireNonNull(discountPercentage);
            return this;
        }
        @CustomType.Setter
        public Builder eaSubscriptionId(String eaSubscriptionId) {
            this.eaSubscriptionId = Objects.requireNonNull(eaSubscriptionId);
            return this;
        }
        @CustomType.Setter
        public Builder monthlyBandwidthCost(Double monthlyBandwidthCost) {
            this.monthlyBandwidthCost = Objects.requireNonNull(monthlyBandwidthCost);
            return this;
        }
        @CustomType.Setter
        public Builder monthlyComputeCost(Double monthlyComputeCost) {
            this.monthlyComputeCost = Objects.requireNonNull(monthlyComputeCost);
            return this;
        }
        @CustomType.Setter
        public Builder monthlyPremiumStorageCost(Double monthlyPremiumStorageCost) {
            this.monthlyPremiumStorageCost = Objects.requireNonNull(monthlyPremiumStorageCost);
            return this;
        }
        @CustomType.Setter
        public Builder monthlyStandardSSDStorageCost(Double monthlyStandardSSDStorageCost) {
            this.monthlyStandardSSDStorageCost = Objects.requireNonNull(monthlyStandardSSDStorageCost);
            return this;
        }
        @CustomType.Setter
        public Builder monthlyStorageCost(Double monthlyStorageCost) {
            this.monthlyStorageCost = Objects.requireNonNull(monthlyStorageCost);
            return this;
        }
        @CustomType.Setter
        public Builder numberOfMachines(Integer numberOfMachines) {
            this.numberOfMachines = Objects.requireNonNull(numberOfMachines);
            return this;
        }
        @CustomType.Setter
        public Builder percentile(String percentile) {
            this.percentile = Objects.requireNonNull(percentile);
            return this;
        }
        @CustomType.Setter
        public Builder perfDataEndTime(String perfDataEndTime) {
            this.perfDataEndTime = Objects.requireNonNull(perfDataEndTime);
            return this;
        }
        @CustomType.Setter
        public Builder perfDataStartTime(String perfDataStartTime) {
            this.perfDataStartTime = Objects.requireNonNull(perfDataStartTime);
            return this;
        }
        @CustomType.Setter
        public Builder pricesTimestamp(String pricesTimestamp) {
            this.pricesTimestamp = Objects.requireNonNull(pricesTimestamp);
            return this;
        }
        @CustomType.Setter
        public Builder reservedInstance(String reservedInstance) {
            this.reservedInstance = Objects.requireNonNull(reservedInstance);
            return this;
        }
        @CustomType.Setter
        public Builder scalingFactor(Double scalingFactor) {
            this.scalingFactor = Objects.requireNonNull(scalingFactor);
            return this;
        }
        @CustomType.Setter
        public Builder sizingCriterion(String sizingCriterion) {
            this.sizingCriterion = Objects.requireNonNull(sizingCriterion);
            return this;
        }
        @CustomType.Setter
        public Builder stage(String stage) {
            this.stage = Objects.requireNonNull(stage);
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        @CustomType.Setter
        public Builder timeRange(String timeRange) {
            this.timeRange = Objects.requireNonNull(timeRange);
            return this;
        }
        @CustomType.Setter
        public Builder updatedTimestamp(String updatedTimestamp) {
            this.updatedTimestamp = Objects.requireNonNull(updatedTimestamp);
            return this;
        }
        @CustomType.Setter
        public Builder vmUptime(VmUptimeResponse vmUptime) {
            this.vmUptime = Objects.requireNonNull(vmUptime);
            return this;
        }
        public AssessmentPropertiesResponse build() {
            final var o = new AssessmentPropertiesResponse();
            o.azureDiskType = azureDiskType;
            o.azureHybridUseBenefit = azureHybridUseBenefit;
            o.azureLocation = azureLocation;
            o.azureOfferCode = azureOfferCode;
            o.azurePricingTier = azurePricingTier;
            o.azureStorageRedundancy = azureStorageRedundancy;
            o.azureVmFamilies = azureVmFamilies;
            o.confidenceRatingInPercentage = confidenceRatingInPercentage;
            o.createdTimestamp = createdTimestamp;
            o.currency = currency;
            o.discountPercentage = discountPercentage;
            o.eaSubscriptionId = eaSubscriptionId;
            o.monthlyBandwidthCost = monthlyBandwidthCost;
            o.monthlyComputeCost = monthlyComputeCost;
            o.monthlyPremiumStorageCost = monthlyPremiumStorageCost;
            o.monthlyStandardSSDStorageCost = monthlyStandardSSDStorageCost;
            o.monthlyStorageCost = monthlyStorageCost;
            o.numberOfMachines = numberOfMachines;
            o.percentile = percentile;
            o.perfDataEndTime = perfDataEndTime;
            o.perfDataStartTime = perfDataStartTime;
            o.pricesTimestamp = pricesTimestamp;
            o.reservedInstance = reservedInstance;
            o.scalingFactor = scalingFactor;
            o.sizingCriterion = sizingCriterion;
            o.stage = stage;
            o.status = status;
            o.timeRange = timeRange;
            o.updatedTimestamp = updatedTimestamp;
            o.vmUptime = vmUptime;
            return o;
        }
    }
}
