// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.devtestlab.outputs;

import com.pulumi.azurenative.devtestlab.outputs.AttachNewDataDiskOptionsResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DataDiskPropertiesResponse {
    /**
     * @return Specifies options to attach a new disk to the virtual machine.
     * 
     */
    private @Nullable AttachNewDataDiskOptionsResponse attachNewDataDiskOptions;
    /**
     * @return Specifies the existing lab disk id to attach to virtual machine.
     * 
     */
    private @Nullable String existingLabDiskId;
    /**
     * @return Caching option for a data disk (i.e. None, ReadOnly, ReadWrite).
     * 
     */
    private @Nullable String hostCaching;

    private DataDiskPropertiesResponse() {}
    /**
     * @return Specifies options to attach a new disk to the virtual machine.
     * 
     */
    public Optional<AttachNewDataDiskOptionsResponse> attachNewDataDiskOptions() {
        return Optional.ofNullable(this.attachNewDataDiskOptions);
    }
    /**
     * @return Specifies the existing lab disk id to attach to virtual machine.
     * 
     */
    public Optional<String> existingLabDiskId() {
        return Optional.ofNullable(this.existingLabDiskId);
    }
    /**
     * @return Caching option for a data disk (i.e. None, ReadOnly, ReadWrite).
     * 
     */
    public Optional<String> hostCaching() {
        return Optional.ofNullable(this.hostCaching);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DataDiskPropertiesResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable AttachNewDataDiskOptionsResponse attachNewDataDiskOptions;
        private @Nullable String existingLabDiskId;
        private @Nullable String hostCaching;
        public Builder() {}
        public Builder(DataDiskPropertiesResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.attachNewDataDiskOptions = defaults.attachNewDataDiskOptions;
    	      this.existingLabDiskId = defaults.existingLabDiskId;
    	      this.hostCaching = defaults.hostCaching;
        }

        @CustomType.Setter
        public Builder attachNewDataDiskOptions(@Nullable AttachNewDataDiskOptionsResponse attachNewDataDiskOptions) {
            this.attachNewDataDiskOptions = attachNewDataDiskOptions;
            return this;
        }
        @CustomType.Setter
        public Builder existingLabDiskId(@Nullable String existingLabDiskId) {
            this.existingLabDiskId = existingLabDiskId;
            return this;
        }
        @CustomType.Setter
        public Builder hostCaching(@Nullable String hostCaching) {
            this.hostCaching = hostCaching;
            return this;
        }
        public DataDiskPropertiesResponse build() {
            final var o = new DataDiskPropertiesResponse();
            o.attachNewDataDiskOptions = attachNewDataDiskOptions;
            o.existingLabDiskId = existingLabDiskId;
            o.hostCaching = hostCaching;
            return o;
        }
    }
}
