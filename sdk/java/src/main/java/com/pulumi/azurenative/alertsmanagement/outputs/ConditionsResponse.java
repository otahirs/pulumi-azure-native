// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.alertsmanagement.outputs;

import com.pulumi.azurenative.alertsmanagement.outputs.ConditionResponse;
import com.pulumi.core.annotations.CustomType;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ConditionsResponse {
    /**
     * @return filter alerts by alert context (payload)
     * 
     */
    private @Nullable ConditionResponse alertContext;
    /**
     * @return filter alerts by alert rule id
     * 
     */
    private @Nullable ConditionResponse alertRuleId;
    /**
     * @return filter alerts by alert rule description
     * 
     */
    private @Nullable ConditionResponse description;
    /**
     * @return filter alerts by monitor condition
     * 
     */
    private @Nullable ConditionResponse monitorCondition;
    /**
     * @return filter alerts by monitor service
     * 
     */
    private @Nullable ConditionResponse monitorService;
    /**
     * @return filter alerts by severity
     * 
     */
    private @Nullable ConditionResponse severity;
    /**
     * @return filter alerts by target resource type
     * 
     */
    private @Nullable ConditionResponse targetResourceType;

    private ConditionsResponse() {}
    /**
     * @return filter alerts by alert context (payload)
     * 
     */
    public Optional<ConditionResponse> alertContext() {
        return Optional.ofNullable(this.alertContext);
    }
    /**
     * @return filter alerts by alert rule id
     * 
     */
    public Optional<ConditionResponse> alertRuleId() {
        return Optional.ofNullable(this.alertRuleId);
    }
    /**
     * @return filter alerts by alert rule description
     * 
     */
    public Optional<ConditionResponse> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return filter alerts by monitor condition
     * 
     */
    public Optional<ConditionResponse> monitorCondition() {
        return Optional.ofNullable(this.monitorCondition);
    }
    /**
     * @return filter alerts by monitor service
     * 
     */
    public Optional<ConditionResponse> monitorService() {
        return Optional.ofNullable(this.monitorService);
    }
    /**
     * @return filter alerts by severity
     * 
     */
    public Optional<ConditionResponse> severity() {
        return Optional.ofNullable(this.severity);
    }
    /**
     * @return filter alerts by target resource type
     * 
     */
    public Optional<ConditionResponse> targetResourceType() {
        return Optional.ofNullable(this.targetResourceType);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConditionsResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable ConditionResponse alertContext;
        private @Nullable ConditionResponse alertRuleId;
        private @Nullable ConditionResponse description;
        private @Nullable ConditionResponse monitorCondition;
        private @Nullable ConditionResponse monitorService;
        private @Nullable ConditionResponse severity;
        private @Nullable ConditionResponse targetResourceType;
        public Builder() {}
        public Builder(ConditionsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.alertContext = defaults.alertContext;
    	      this.alertRuleId = defaults.alertRuleId;
    	      this.description = defaults.description;
    	      this.monitorCondition = defaults.monitorCondition;
    	      this.monitorService = defaults.monitorService;
    	      this.severity = defaults.severity;
    	      this.targetResourceType = defaults.targetResourceType;
        }

        @CustomType.Setter
        public Builder alertContext(@Nullable ConditionResponse alertContext) {
            this.alertContext = alertContext;
            return this;
        }
        @CustomType.Setter
        public Builder alertRuleId(@Nullable ConditionResponse alertRuleId) {
            this.alertRuleId = alertRuleId;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable ConditionResponse description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder monitorCondition(@Nullable ConditionResponse monitorCondition) {
            this.monitorCondition = monitorCondition;
            return this;
        }
        @CustomType.Setter
        public Builder monitorService(@Nullable ConditionResponse monitorService) {
            this.monitorService = monitorService;
            return this;
        }
        @CustomType.Setter
        public Builder severity(@Nullable ConditionResponse severity) {
            this.severity = severity;
            return this;
        }
        @CustomType.Setter
        public Builder targetResourceType(@Nullable ConditionResponse targetResourceType) {
            this.targetResourceType = targetResourceType;
            return this;
        }
        public ConditionsResponse build() {
            final var o = new ConditionsResponse();
            o.alertContext = alertContext;
            o.alertRuleId = alertRuleId;
            o.description = description;
            o.monitorCondition = monitorCondition;
            o.monitorService = monitorService;
            o.severity = severity;
            o.targetResourceType = targetResourceType;
            return o;
        }
    }
}
