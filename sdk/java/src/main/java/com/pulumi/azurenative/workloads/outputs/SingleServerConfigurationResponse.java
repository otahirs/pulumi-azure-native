// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.workloads.outputs;

import com.pulumi.azurenative.workloads.outputs.NetworkConfigurationResponse;
import com.pulumi.azurenative.workloads.outputs.VirtualMachineConfigurationResponse;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SingleServerConfigurationResponse {
    /**
     * @return The application resource group where SAP system resources will be deployed.
     * 
     */
    private String appResourceGroup;
    /**
     * @return The database type.
     * 
     */
    private @Nullable String databaseType;
    /**
     * @return The deployment Type.
     * Expected value is &#39;SingleServer&#39;.
     * 
     */
    private String deploymentType;
    /**
     * @return Network configuration for the server
     * 
     */
    private @Nullable NetworkConfigurationResponse networkConfiguration;
    /**
     * @return The subnet id.
     * 
     */
    private String subnetId;
    /**
     * @return Gets or sets the virtual machine configuration.
     * 
     */
    private VirtualMachineConfigurationResponse virtualMachineConfiguration;

    private SingleServerConfigurationResponse() {}
    /**
     * @return The application resource group where SAP system resources will be deployed.
     * 
     */
    public String appResourceGroup() {
        return this.appResourceGroup;
    }
    /**
     * @return The database type.
     * 
     */
    public Optional<String> databaseType() {
        return Optional.ofNullable(this.databaseType);
    }
    /**
     * @return The deployment Type.
     * Expected value is &#39;SingleServer&#39;.
     * 
     */
    public String deploymentType() {
        return this.deploymentType;
    }
    /**
     * @return Network configuration for the server
     * 
     */
    public Optional<NetworkConfigurationResponse> networkConfiguration() {
        return Optional.ofNullable(this.networkConfiguration);
    }
    /**
     * @return The subnet id.
     * 
     */
    public String subnetId() {
        return this.subnetId;
    }
    /**
     * @return Gets or sets the virtual machine configuration.
     * 
     */
    public VirtualMachineConfigurationResponse virtualMachineConfiguration() {
        return this.virtualMachineConfiguration;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SingleServerConfigurationResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String appResourceGroup;
        private @Nullable String databaseType;
        private String deploymentType;
        private @Nullable NetworkConfigurationResponse networkConfiguration;
        private String subnetId;
        private VirtualMachineConfigurationResponse virtualMachineConfiguration;
        public Builder() {}
        public Builder(SingleServerConfigurationResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.appResourceGroup = defaults.appResourceGroup;
    	      this.databaseType = defaults.databaseType;
    	      this.deploymentType = defaults.deploymentType;
    	      this.networkConfiguration = defaults.networkConfiguration;
    	      this.subnetId = defaults.subnetId;
    	      this.virtualMachineConfiguration = defaults.virtualMachineConfiguration;
        }

        @CustomType.Setter
        public Builder appResourceGroup(String appResourceGroup) {
            this.appResourceGroup = Objects.requireNonNull(appResourceGroup);
            return this;
        }
        @CustomType.Setter
        public Builder databaseType(@Nullable String databaseType) {
            this.databaseType = databaseType;
            return this;
        }
        @CustomType.Setter
        public Builder deploymentType(String deploymentType) {
            this.deploymentType = Objects.requireNonNull(deploymentType);
            return this;
        }
        @CustomType.Setter
        public Builder networkConfiguration(@Nullable NetworkConfigurationResponse networkConfiguration) {
            this.networkConfiguration = networkConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder subnetId(String subnetId) {
            this.subnetId = Objects.requireNonNull(subnetId);
            return this;
        }
        @CustomType.Setter
        public Builder virtualMachineConfiguration(VirtualMachineConfigurationResponse virtualMachineConfiguration) {
            this.virtualMachineConfiguration = Objects.requireNonNull(virtualMachineConfiguration);
            return this;
        }
        public SingleServerConfigurationResponse build() {
            final var o = new SingleServerConfigurationResponse();
            o.appResourceGroup = appResourceGroup;
            o.databaseType = databaseType;
            o.deploymentType = deploymentType;
            o.networkConfiguration = networkConfiguration;
            o.subnetId = subnetId;
            o.virtualMachineConfiguration = virtualMachineConfiguration;
            return o;
        }
    }
}
