// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * The integration account schema.
 *
 * ## Example Usage
 * ### Create or update schema
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure_native from "@pulumi/azure-native";
 *
 * const integrationAccountSchema = new azure_native.logic.v20190501.IntegrationAccountSchema("integrationAccountSchema", {
 *     content: `<?xml version="1.0" encoding="utf-16"?>
 * <xs:schema xmlns:b="http://schemas.microsoft.com/BizTalk/2003" xmlns="http://Inbound_EDI.OrderFile" targetNamespace="http://Inbound_EDI.OrderFile" xmlns:xs="http://www.w3.org/2001/XMLSchema">
 *   <xs:annotation>
 *     <xs:appinfo>
 *       <b:schemaInfo default_pad_char=" " count_positions_by_byte="false" parser_optimization="speed" lookahead_depth="3" suppress_empty_nodes="false" generate_empty_nodes="true" allow_early_termination="false" early_terminate_optional_fields="false" allow_message_breakup_of_infix_root="false" compile_parse_tables="false" standard="Flat File" root_reference="OrderFile" />
 *       <schemaEditorExtension:schemaInfo namespaceAlias="b" extensionClass="Microsoft.BizTalk.FlatFileExtension.FlatFileExtension" standardName="Flat File" xmlns:schemaEditorExtension="http://schemas.microsoft.com/BizTalk/2003/SchemaEditorExtensions" />
 *     </xs:appinfo>
 *   </xs:annotation>
 *   <xs:element name="OrderFile">
 *     <xs:annotation>
 *       <xs:appinfo>
 *         <b:recordInfo structure="delimited" preserve_delimiter_for_empty_data="true" suppress_trailing_delimiters="false" sequence_number="1" />
 *       </xs:appinfo>
 *     </xs:annotation>
 *     <xs:complexType>
 *       <xs:sequence>
 *         <xs:annotation>
 *           <xs:appinfo>
 *             <b:groupInfo sequence_number="0" />
 *           </xs:appinfo>
 *         </xs:annotation>
 *         <xs:element name="Order">
 *           <xs:annotation>
 *             <xs:appinfo>
 *               <b:recordInfo sequence_number="1" structure="delimited" preserve_delimiter_for_empty_data="true" suppress_trailing_delimiters="false" child_delimiter_type="hex" child_delimiter="0x0D 0x0A" child_order="infix" />
 *             </xs:appinfo>
 *           </xs:annotation>
 *           <xs:complexType>
 *             <xs:sequence>
 *               <xs:annotation>
 *                 <xs:appinfo>
 *                   <b:groupInfo sequence_number="0" />
 *                 </xs:appinfo>
 *               </xs:annotation>
 *               <xs:element name="Header">
 *                 <xs:annotation>
 *                   <xs:appinfo>
 *                     <b:recordInfo sequence_number="1" structure="delimited" preserve_delimiter_for_empty_data="true" suppress_trailing_delimiters="false" child_delimiter_type="char" child_delimiter="|" child_order="infix" tag_name="HDR|" />
 *                   </xs:appinfo>
 *                 </xs:annotation>
 *                 <xs:complexType>
 *                   <xs:sequence>
 *                     <xs:annotation>
 *                       <xs:appinfo>
 *                         <b:groupInfo sequence_number="0" />
 *                       </xs:appinfo>
 *                     </xs:annotation>
 *                     <xs:element name="PODate" type="xs:string">
 *                       <xs:annotation>
 *                         <xs:appinfo>
 *                           <b:fieldInfo sequence_number="1" justification="left" />
 *                         </xs:appinfo>
 *                       </xs:annotation>
 *                     </xs:element>
 *                     <xs:element name="PONumber" type="xs:string">
 *                       <xs:annotation>
 *                         <xs:appinfo>
 *                           <b:fieldInfo justification="left" sequence_number="2" />
 *                         </xs:appinfo>
 *                       </xs:annotation>
 *                     </xs:element>
 *                     <xs:element name="CustomerID" type="xs:string">
 *                       <xs:annotation>
 *                         <xs:appinfo>
 *                           <b:fieldInfo sequence_number="3" justification="left" />
 *                         </xs:appinfo>
 *                       </xs:annotation>
 *                     </xs:element>
 *                     <xs:element name="CustomerContactName" type="xs:string">
 *                       <xs:annotation>
 *                         <xs:appinfo>
 *                           <b:fieldInfo sequence_number="4" justification="left" />
 *                         </xs:appinfo>
 *                       </xs:annotation>
 *                     </xs:element>
 *                     <xs:element name="CustomerContactPhone" type="xs:string">
 *                       <xs:annotation>
 *                         <xs:appinfo>
 *                           <b:fieldInfo sequence_number="5" justification="left" />
 *                         </xs:appinfo>
 *                       </xs:annotation>
 *                     </xs:element>
 *                   </xs:sequence>
 *                 </xs:complexType>
 *               </xs:element>
 *               <xs:element minOccurs="1" maxOccurs="unbounded" name="LineItems">
 *                 <xs:annotation>
 *                   <xs:appinfo>
 *                     <b:recordInfo sequence_number="2" structure="delimited" preserve_delimiter_for_empty_data="true" suppress_trailing_delimiters="false" child_delimiter_type="char" child_delimiter="|" child_order="infix" tag_name="DTL|" />
 *                   </xs:appinfo>
 *                 </xs:annotation>
 *                 <xs:complexType>
 *                   <xs:sequence>
 *                     <xs:annotation>
 *                       <xs:appinfo>
 *                         <b:groupInfo sequence_number="0" />
 *                       </xs:appinfo>
 *                     </xs:annotation>
 *                     <xs:element name="PONumber" type="xs:string">
 *                       <xs:annotation>
 *                         <xs:appinfo>
 *                           <b:fieldInfo sequence_number="1" justification="left" />
 *                         </xs:appinfo>
 *                       </xs:annotation>
 *                     </xs:element>
 *                     <xs:element name="ItemOrdered" type="xs:string">
 *                       <xs:annotation>
 *                         <xs:appinfo>
 *                           <b:fieldInfo sequence_number="2" justification="left" />
 *                         </xs:appinfo>
 *                       </xs:annotation>
 *                     </xs:element>
 *                     <xs:element name="Quantity" type="xs:string">
 *                       <xs:annotation>
 *                         <xs:appinfo>
 *                           <b:fieldInfo sequence_number="3" justification="left" />
 *                         </xs:appinfo>
 *                       </xs:annotation>
 *                     </xs:element>
 *                     <xs:element name="UOM" type="xs:string">
 *                       <xs:annotation>
 *                         <xs:appinfo>
 *                           <b:fieldInfo sequence_number="4" justification="left" />
 *                         </xs:appinfo>
 *                       </xs:annotation>
 *                     </xs:element>
 *                     <xs:element name="Price" type="xs:string">
 *                       <xs:annotation>
 *                         <xs:appinfo>
 *                           <b:fieldInfo sequence_number="5" justification="left" />
 *                         </xs:appinfo>
 *                       </xs:annotation>
 *                     </xs:element>
 *                     <xs:element name="ExtendedPrice" type="xs:string">
 *                       <xs:annotation>
 *                         <xs:appinfo>
 *                           <b:fieldInfo sequence_number="6" justification="left" />
 *                         </xs:appinfo>
 *                       </xs:annotation>
 *                     </xs:element>
 *                     <xs:element name="Description" type="xs:string">
 *                       <xs:annotation>
 *                         <xs:appinfo>
 *                           <b:fieldInfo sequence_number="7" justification="left" />
 *                         </xs:appinfo>
 *                       </xs:annotation>
 *                     </xs:element>
 *                   </xs:sequence>
 *                 </xs:complexType>
 *               </xs:element>
 *             </xs:sequence>
 *           </xs:complexType>
 *         </xs:element>
 *       </xs:sequence>
 *     </xs:complexType>
 *   </xs:element>
 * </xs:schema>`,
 *     contentType: "application/xml",
 *     integrationAccountName: "testIntegrationAccount",
 *     location: "westus",
 *     metadata: {},
 *     resourceGroupName: "testResourceGroup",
 *     schemaName: "testSchema",
 *     schemaType: "Xml",
 *     tags: {
 *         integrationAccountSchemaName: "IntegrationAccountSchema8120",
 *     },
 * });
 *
 * ```
 *
 * ## Import
 *
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 *
 * ```sh
 * $ pulumi import azure-native:logic/v20190501:IntegrationAccountSchema IntegrationAccountSchema5349 /subscriptions/34adfa4f-cedf-4dc0-ba29-b6d1a69ab345/resourceGroups/testResourceGroup/providers/Microsoft.Logic/integrationAccounts/testIntegrationAccount/schemas/testSchema 
 * ```
 */
export class IntegrationAccountSchema extends pulumi.CustomResource {
    /**
     * Get an existing IntegrationAccountSchema resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): IntegrationAccountSchema {
        return new IntegrationAccountSchema(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:logic/v20190501:IntegrationAccountSchema';

    /**
     * Returns true if the given object is an instance of IntegrationAccountSchema.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IntegrationAccountSchema {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IntegrationAccountSchema.__pulumiType;
    }

    /**
     * The changed time.
     */
    public /*out*/ readonly changedTime!: pulumi.Output<string>;
    /**
     * The content.
     */
    public readonly content!: pulumi.Output<string | undefined>;
    /**
     * The content link.
     */
    public /*out*/ readonly contentLink!: pulumi.Output<outputs.logic.v20190501.ContentLinkResponse>;
    /**
     * The content type.
     */
    public readonly contentType!: pulumi.Output<string | undefined>;
    /**
     * The created time.
     */
    public /*out*/ readonly createdTime!: pulumi.Output<string>;
    /**
     * The document name.
     */
    public readonly documentName!: pulumi.Output<string | undefined>;
    /**
     * The file name.
     */
    public readonly fileName!: pulumi.Output<string | undefined>;
    /**
     * The resource location.
     */
    public readonly location!: pulumi.Output<string | undefined>;
    /**
     * The metadata.
     */
    public readonly metadata!: pulumi.Output<any | undefined>;
    /**
     * Gets the resource name.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * The schema type.
     */
    public readonly schemaType!: pulumi.Output<string>;
    /**
     * The resource tags.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The target namespace of the schema.
     */
    public readonly targetNamespace!: pulumi.Output<string | undefined>;
    /**
     * Gets the resource type.
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a IntegrationAccountSchema resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IntegrationAccountSchemaArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.integrationAccountName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'integrationAccountName'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.schemaType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'schemaType'");
            }
            resourceInputs["content"] = args ? args.content : undefined;
            resourceInputs["contentType"] = args ? args.contentType : undefined;
            resourceInputs["documentName"] = args ? args.documentName : undefined;
            resourceInputs["fileName"] = args ? args.fileName : undefined;
            resourceInputs["integrationAccountName"] = args ? args.integrationAccountName : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["metadata"] = args ? args.metadata : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["schemaName"] = args ? args.schemaName : undefined;
            resourceInputs["schemaType"] = args ? args.schemaType : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["targetNamespace"] = args ? args.targetNamespace : undefined;
            resourceInputs["changedTime"] = undefined /*out*/;
            resourceInputs["contentLink"] = undefined /*out*/;
            resourceInputs["createdTime"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        } else {
            resourceInputs["changedTime"] = undefined /*out*/;
            resourceInputs["content"] = undefined /*out*/;
            resourceInputs["contentLink"] = undefined /*out*/;
            resourceInputs["contentType"] = undefined /*out*/;
            resourceInputs["createdTime"] = undefined /*out*/;
            resourceInputs["documentName"] = undefined /*out*/;
            resourceInputs["fileName"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["metadata"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["schemaType"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["targetNamespace"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:logic:IntegrationAccountSchema" }, { type: "azure-native:logic/v20150801preview:IntegrationAccountSchema" }, { type: "azure-native:logic/v20160601:IntegrationAccountSchema" }, { type: "azure-native:logic/v20180701preview:IntegrationAccountSchema" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(IntegrationAccountSchema.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a IntegrationAccountSchema resource.
 */
export interface IntegrationAccountSchemaArgs {
    /**
     * The content.
     */
    content?: pulumi.Input<string>;
    /**
     * The content type.
     */
    contentType?: pulumi.Input<string>;
    /**
     * The document name.
     */
    documentName?: pulumi.Input<string>;
    /**
     * The file name.
     */
    fileName?: pulumi.Input<string>;
    /**
     * The integration account name.
     */
    integrationAccountName: pulumi.Input<string>;
    /**
     * The resource location.
     */
    location?: pulumi.Input<string>;
    /**
     * The metadata.
     */
    metadata?: any;
    /**
     * The resource group name.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The integration account schema name.
     */
    schemaName?: pulumi.Input<string>;
    /**
     * The schema type.
     */
    schemaType: pulumi.Input<string | enums.logic.v20190501.SchemaType>;
    /**
     * The resource tags.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The target namespace of the schema.
     */
    targetNamespace?: pulumi.Input<string>;
}
