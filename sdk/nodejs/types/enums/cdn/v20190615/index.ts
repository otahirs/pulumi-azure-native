// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***


export const ActionType = {
    Allow: "Allow",
    Block: "Block",
    Log: "Log",
    Redirect: "Redirect",
} as const;

export type ActionType = (typeof ActionType)[keyof typeof ActionType];

export const CacheBehavior = {
    BypassCache: "BypassCache",
    Override: "Override",
    SetIfMissing: "SetIfMissing",
} as const;

export type CacheBehavior = (typeof CacheBehavior)[keyof typeof CacheBehavior];

export const CacheType = {
    All: "All",
} as const;

export type CacheType = (typeof CacheType)[keyof typeof CacheType];

export const CookiesOperator = {
    Any: "Any",
    Equal: "Equal",
    Contains: "Contains",
    BeginsWith: "BeginsWith",
    EndsWith: "EndsWith",
    LessThan: "LessThan",
    LessThanOrEqual: "LessThanOrEqual",
    GreaterThan: "GreaterThan",
    GreaterThanOrEqual: "GreaterThanOrEqual",
} as const;

export type CookiesOperator = (typeof CookiesOperator)[keyof typeof CookiesOperator];

export const CustomRuleEnabledState = {
    Disabled: "Disabled",
    Enabled: "Enabled",
} as const;

export type CustomRuleEnabledState = (typeof CustomRuleEnabledState)[keyof typeof CustomRuleEnabledState];

export const DeliveryRuleAction = {
    CacheExpiration: "CacheExpiration",
    CacheKeyQueryString: "CacheKeyQueryString",
    ModifyRequestHeader: "ModifyRequestHeader",
    ModifyResponseHeader: "ModifyResponseHeader",
    UrlRedirect: "UrlRedirect",
    UrlRewrite: "UrlRewrite",
} as const;

export type DeliveryRuleAction = (typeof DeliveryRuleAction)[keyof typeof DeliveryRuleAction];

export const DestinationProtocol = {
    MatchRequest: "MatchRequest",
    Http: "Http",
    Https: "Https",
} as const;

export type DestinationProtocol = (typeof DestinationProtocol)[keyof typeof DestinationProtocol];

export const GeoFilterActions = {
    Block: "Block",
    Allow: "Allow",
} as const;

export type GeoFilterActions = (typeof GeoFilterActions)[keyof typeof GeoFilterActions];

export const HeaderAction = {
    Append: "Append",
    Overwrite: "Overwrite",
    Delete: "Delete",
} as const;

export type HeaderAction = (typeof HeaderAction)[keyof typeof HeaderAction];

export const HttpVersionOperator = {
    Equal: "Equal",
} as const;

export type HttpVersionOperator = (typeof HttpVersionOperator)[keyof typeof HttpVersionOperator];

export const IsDeviceOperator = {
    Equal: "Equal",
} as const;

export type IsDeviceOperator = (typeof IsDeviceOperator)[keyof typeof IsDeviceOperator];

export const ManagedRuleEnabledState = {
    Disabled: "Disabled",
    Enabled: "Enabled",
} as const;

export type ManagedRuleEnabledState = (typeof ManagedRuleEnabledState)[keyof typeof ManagedRuleEnabledState];

export const MatchVariable = {
    RemoteAddr: "RemoteAddr",
    SocketAddr: "SocketAddr",
    RequestMethod: "RequestMethod",
    RequestHeader: "RequestHeader",
    RequestUri: "RequestUri",
    QueryString: "QueryString",
    RequestBody: "RequestBody",
    Cookies: "Cookies",
    PostArgs: "PostArgs",
} as const;

export type MatchVariable = (typeof MatchVariable)[keyof typeof MatchVariable];

export const Operator = {
    Any: "Any",
    IPMatch: "IPMatch",
    GeoMatch: "GeoMatch",
    Equal: "Equal",
    Contains: "Contains",
    LessThan: "LessThan",
    GreaterThan: "GreaterThan",
    LessThanOrEqual: "LessThanOrEqual",
    GreaterThanOrEqual: "GreaterThanOrEqual",
    BeginsWith: "BeginsWith",
    EndsWith: "EndsWith",
    RegEx: "RegEx",
} as const;

export type Operator = (typeof Operator)[keyof typeof Operator];

export const OptimizationType = {
    GeneralWebDelivery: "GeneralWebDelivery",
    GeneralMediaStreaming: "GeneralMediaStreaming",
    VideoOnDemandMediaStreaming: "VideoOnDemandMediaStreaming",
    LargeFileDownload: "LargeFileDownload",
    DynamicSiteAcceleration: "DynamicSiteAcceleration",
} as const;

export type OptimizationType = (typeof OptimizationType)[keyof typeof OptimizationType];

export const PolicyEnabledState = {
    Disabled: "Disabled",
    Enabled: "Enabled",
} as const;

export type PolicyEnabledState = (typeof PolicyEnabledState)[keyof typeof PolicyEnabledState];

export const PolicyMode = {
    Prevention: "Prevention",
    Detection: "Detection",
} as const;

export type PolicyMode = (typeof PolicyMode)[keyof typeof PolicyMode];

export const PostArgsOperator = {
    Any: "Any",
    Equal: "Equal",
    Contains: "Contains",
    BeginsWith: "BeginsWith",
    EndsWith: "EndsWith",
    LessThan: "LessThan",
    LessThanOrEqual: "LessThanOrEqual",
    GreaterThan: "GreaterThan",
    GreaterThanOrEqual: "GreaterThanOrEqual",
} as const;

export type PostArgsOperator = (typeof PostArgsOperator)[keyof typeof PostArgsOperator];

export const QueryStringBehavior = {
    Include: "Include",
    IncludeAll: "IncludeAll",
    Exclude: "Exclude",
    ExcludeAll: "ExcludeAll",
} as const;

export type QueryStringBehavior = (typeof QueryStringBehavior)[keyof typeof QueryStringBehavior];

export const QueryStringCachingBehavior = {
    IgnoreQueryString: "IgnoreQueryString",
    BypassCaching: "BypassCaching",
    UseQueryString: "UseQueryString",
    NotSet: "NotSet",
} as const;

export type QueryStringCachingBehavior = (typeof QueryStringCachingBehavior)[keyof typeof QueryStringCachingBehavior];

export const QueryStringOperator = {
    Any: "Any",
    Equal: "Equal",
    Contains: "Contains",
    BeginsWith: "BeginsWith",
    EndsWith: "EndsWith",
    LessThan: "LessThan",
    LessThanOrEqual: "LessThanOrEqual",
    GreaterThan: "GreaterThan",
    GreaterThanOrEqual: "GreaterThanOrEqual",
} as const;

export type QueryStringOperator = (typeof QueryStringOperator)[keyof typeof QueryStringOperator];

export const RedirectType = {
    Moved: "Moved",
    Found: "Found",
    TemporaryRedirect: "TemporaryRedirect",
    PermanentRedirect: "PermanentRedirect",
} as const;

export type RedirectType = (typeof RedirectType)[keyof typeof RedirectType];

export const RemoteAddressOperator = {
    Any: "Any",
    IPMatch: "IPMatch",
    GeoMatch: "GeoMatch",
} as const;

export type RemoteAddressOperator = (typeof RemoteAddressOperator)[keyof typeof RemoteAddressOperator];

export const RequestBodyOperator = {
    Any: "Any",
    Equal: "Equal",
    Contains: "Contains",
    BeginsWith: "BeginsWith",
    EndsWith: "EndsWith",
    LessThan: "LessThan",
    LessThanOrEqual: "LessThanOrEqual",
    GreaterThan: "GreaterThan",
    GreaterThanOrEqual: "GreaterThanOrEqual",
} as const;

export type RequestBodyOperator = (typeof RequestBodyOperator)[keyof typeof RequestBodyOperator];

export const RequestHeaderOperator = {
    Any: "Any",
    Equal: "Equal",
    Contains: "Contains",
    BeginsWith: "BeginsWith",
    EndsWith: "EndsWith",
    LessThan: "LessThan",
    LessThanOrEqual: "LessThanOrEqual",
    GreaterThan: "GreaterThan",
    GreaterThanOrEqual: "GreaterThanOrEqual",
} as const;

export type RequestHeaderOperator = (typeof RequestHeaderOperator)[keyof typeof RequestHeaderOperator];

export const RequestMethodOperator = {
    Equal: "Equal",
} as const;

export type RequestMethodOperator = (typeof RequestMethodOperator)[keyof typeof RequestMethodOperator];

export const RequestUriOperator = {
    Any: "Any",
    Equal: "Equal",
    Contains: "Contains",
    BeginsWith: "BeginsWith",
    EndsWith: "EndsWith",
    LessThan: "LessThan",
    LessThanOrEqual: "LessThanOrEqual",
    GreaterThan: "GreaterThan",
    GreaterThanOrEqual: "GreaterThanOrEqual",
} as const;

export type RequestUriOperator = (typeof RequestUriOperator)[keyof typeof RequestUriOperator];

export const SkuName = {
    Standard_Verizon: "Standard_Verizon",
    Premium_Verizon: "Premium_Verizon",
    Custom_Verizon: "Custom_Verizon",
    Standard_Akamai: "Standard_Akamai",
    Standard_ChinaCdn: "Standard_ChinaCdn",
    Standard_Microsoft: "Standard_Microsoft",
    Premium_ChinaCdn: "Premium_ChinaCdn",
} as const;

export type SkuName = (typeof SkuName)[keyof typeof SkuName];

export const Transform = {
    Lowercase: "Lowercase",
    Uppercase: "Uppercase",
    Trim: "Trim",
    UrlDecode: "UrlDecode",
    UrlEncode: "UrlEncode",
    RemoveNulls: "RemoveNulls",
} as const;

export type Transform = (typeof Transform)[keyof typeof Transform];

export const TransformType = {
    Lowercase: "Lowercase",
    Uppercase: "Uppercase",
    Trim: "Trim",
    UrlDecode: "UrlDecode",
    UrlEncode: "UrlEncode",
    RemoveNulls: "RemoveNulls",
} as const;

export type TransformType = (typeof TransformType)[keyof typeof TransformType];

export const UrlFileExtensionOperator = {
    Any: "Any",
    Equal: "Equal",
    Contains: "Contains",
    BeginsWith: "BeginsWith",
    EndsWith: "EndsWith",
    LessThan: "LessThan",
    LessThanOrEqual: "LessThanOrEqual",
    GreaterThan: "GreaterThan",
    GreaterThanOrEqual: "GreaterThanOrEqual",
} as const;

export type UrlFileExtensionOperator = (typeof UrlFileExtensionOperator)[keyof typeof UrlFileExtensionOperator];

export const UrlFileNameOperator = {
    Any: "Any",
    Equal: "Equal",
    Contains: "Contains",
    BeginsWith: "BeginsWith",
    EndsWith: "EndsWith",
    LessThan: "LessThan",
    LessThanOrEqual: "LessThanOrEqual",
    GreaterThan: "GreaterThan",
    GreaterThanOrEqual: "GreaterThanOrEqual",
} as const;

export type UrlFileNameOperator = (typeof UrlFileNameOperator)[keyof typeof UrlFileNameOperator];

export const UrlPathOperator = {
    Any: "Any",
    Equal: "Equal",
    Contains: "Contains",
    BeginsWith: "BeginsWith",
    EndsWith: "EndsWith",
    LessThan: "LessThan",
    LessThanOrEqual: "LessThanOrEqual",
    GreaterThan: "GreaterThan",
    GreaterThanOrEqual: "GreaterThanOrEqual",
    Wildcard: "Wildcard",
} as const;

export type UrlPathOperator = (typeof UrlPathOperator)[keyof typeof UrlPathOperator];
