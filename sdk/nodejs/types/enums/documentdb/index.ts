// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// Export sub-modules:
import * as v20150401 from "./v20150401";
import * as v20150408 from "./v20150408";
import * as v20151106 from "./v20151106";
import * as v20160319 from "./v20160319";
import * as v20160331 from "./v20160331";
import * as v20190801 from "./v20190801";
import * as v20191212 from "./v20191212";
import * as v20200301 from "./v20200301";
import * as v20200401 from "./v20200401";
import * as v20200601preview from "./v20200601preview";
import * as v20200901 from "./v20200901";
import * as v20210115 from "./v20210115";
import * as v20210301preview from "./v20210301preview";
import * as v20210315 from "./v20210315";
import * as v20210401preview from "./v20210401preview";
import * as v20210415 from "./v20210415";
import * as v20210515 from "./v20210515";
import * as v20210615 from "./v20210615";
import * as v20210701preview from "./v20210701preview";
import * as v20211015 from "./v20211015";
import * as v20211015preview from "./v20211015preview";
import * as v20211115preview from "./v20211115preview";
import * as v20220215preview from "./v20220215preview";
import * as v20220515 from "./v20220515";
import * as v20220515preview from "./v20220515preview";
import * as v20220815 from "./v20220815";
import * as v20220815preview from "./v20220815preview";
import * as v20221115 from "./v20221115";
import * as v20230315 from "./v20230315";

export {
    v20150401,
    v20150408,
    v20151106,
    v20160319,
    v20160331,
    v20190801,
    v20191212,
    v20200301,
    v20200401,
    v20200601preview,
    v20200901,
    v20210115,
    v20210301preview,
    v20210315,
    v20210401preview,
    v20210415,
    v20210515,
    v20210615,
    v20210701preview,
    v20211015,
    v20211015preview,
    v20211115preview,
    v20220215preview,
    v20220515,
    v20220515preview,
    v20220815,
    v20220815preview,
    v20221115,
    v20230315,
};

export const AuthenticationMethod = {
    None: "None",
    Cassandra: "Cassandra",
} as const;

export type AuthenticationMethod = (typeof AuthenticationMethod)[keyof typeof AuthenticationMethod];

export const BackupPolicyType = {
    Periodic: "Periodic",
    Continuous: "Continuous",
} as const;

export type BackupPolicyType = (typeof BackupPolicyType)[keyof typeof BackupPolicyType];

export const CompositePathSortOrder = {
    Ascending: "ascending",
    Descending: "descending",
} as const;

export type CompositePathSortOrder = (typeof CompositePathSortOrder)[keyof typeof CompositePathSortOrder];

export const ConflictResolutionMode = {
    LastWriterWins: "LastWriterWins",
    Custom: "Custom",
} as const;

export type ConflictResolutionMode = (typeof ConflictResolutionMode)[keyof typeof ConflictResolutionMode];

export const ConnectorOffer = {
    Small: "Small",
} as const;

export type ConnectorOffer = (typeof ConnectorOffer)[keyof typeof ConnectorOffer];

export const DataType = {
    String: "String",
    Number: "Number",
    Point: "Point",
    Polygon: "Polygon",
    LineString: "LineString",
    MultiPolygon: "MultiPolygon",
} as const;

export type DataType = (typeof DataType)[keyof typeof DataType];

export const DatabaseAccountKind = {
    GlobalDocumentDB: "GlobalDocumentDB",
    MongoDB: "MongoDB",
    Parse: "Parse",
} as const;

export type DatabaseAccountKind = (typeof DatabaseAccountKind)[keyof typeof DatabaseAccountKind];

export const DatabaseAccountOfferType = {
    Standard: "Standard",
} as const;

export type DatabaseAccountOfferType = (typeof DatabaseAccountOfferType)[keyof typeof DatabaseAccountOfferType];

export const DefaultConsistencyLevel = {
    Eventual: "Eventual",
    Session: "Session",
    BoundedStaleness: "BoundedStaleness",
    Strong: "Strong",
    ConsistentPrefix: "ConsistentPrefix",
} as const;

export type DefaultConsistencyLevel = (typeof DefaultConsistencyLevel)[keyof typeof DefaultConsistencyLevel];

export const IndexKind = {
    Hash: "Hash",
    Range: "Range",
    Spatial: "Spatial",
} as const;

export type IndexKind = (typeof IndexKind)[keyof typeof IndexKind];

export const IndexingMode = {
    Consistent: "consistent",
    Lazy: "lazy",
    None: "none",
} as const;

export type IndexingMode = (typeof IndexingMode)[keyof typeof IndexingMode];

export const ManagedCassandraProvisioningState = {
    Creating: "Creating",
    Updating: "Updating",
    Deleting: "Deleting",
    Succeeded: "Succeeded",
    Failed: "Failed",
    Canceled: "Canceled",
} as const;

export type ManagedCassandraProvisioningState = (typeof ManagedCassandraProvisioningState)[keyof typeof ManagedCassandraProvisioningState];

export const MongoRoleDefinitionType = {
    BuiltInRole: "BuiltInRole",
    CustomRole: "CustomRole",
} as const;

export type MongoRoleDefinitionType = (typeof MongoRoleDefinitionType)[keyof typeof MongoRoleDefinitionType];

export const NetworkAclBypass = {
    None: "None",
    AzureServices: "AzureServices",
} as const;

export type NetworkAclBypass = (typeof NetworkAclBypass)[keyof typeof NetworkAclBypass];

export const PartitionKind = {
    Hash: "Hash",
    Range: "Range",
    MultiHash: "MultiHash",
} as const;

export type PartitionKind = (typeof PartitionKind)[keyof typeof PartitionKind];

export const PublicNetworkAccess = {
    Enabled: "Enabled",
    Disabled: "Disabled",
} as const;

export type PublicNetworkAccess = (typeof PublicNetworkAccess)[keyof typeof PublicNetworkAccess];

export const ResourceIdentityType = {
    SystemAssigned: "SystemAssigned",
    UserAssigned: "UserAssigned",
    SystemAssigned_UserAssigned: "SystemAssigned,UserAssigned",
    None: "None",
} as const;

export type ResourceIdentityType = (typeof ResourceIdentityType)[keyof typeof ResourceIdentityType];

export const RoleDefinitionType = {
    BuiltInRole: "BuiltInRole",
    CustomRole: "CustomRole",
} as const;

export type RoleDefinitionType = (typeof RoleDefinitionType)[keyof typeof RoleDefinitionType];

export const ServerVersion = {
    ServerVersion_3_2: "3.2",
    ServerVersion_3_6: "3.6",
    ServerVersion_4_0: "4.0",
} as const;

export type ServerVersion = (typeof ServerVersion)[keyof typeof ServerVersion];

export const ServiceSize = {
    Cosmos_D4s: "Cosmos.D4s",
    Cosmos_D8s: "Cosmos.D8s",
    Cosmos_D16s: "Cosmos.D16s",
} as const;

export type ServiceSize = (typeof ServiceSize)[keyof typeof ServiceSize];

export const ServiceType = {
    SqlDedicatedGateway: "SqlDedicatedGateway",
    DataTransfer: "DataTransfer",
} as const;

export type ServiceType = (typeof ServiceType)[keyof typeof ServiceType];

export const SpatialType = {
    Point: "Point",
    LineString: "LineString",
    Polygon: "Polygon",
    MultiPolygon: "MultiPolygon",
} as const;

export type SpatialType = (typeof SpatialType)[keyof typeof SpatialType];

export const TriggerOperation = {
    All: "All",
    Create: "Create",
    Update: "Update",
    Delete: "Delete",
    Replace: "Replace",
} as const;

export type TriggerOperation = (typeof TriggerOperation)[keyof typeof TriggerOperation];

export const TriggerType = {
    Pre: "Pre",
    Post: "Post",
} as const;

export type TriggerType = (typeof TriggerType)[keyof typeof TriggerType];
