// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***


export const AccessControlEntryAction = {
    Permit: "Permit",
    Deny: "Deny",
} as const;

export type AccessControlEntryAction = (typeof AccessControlEntryAction)[keyof typeof AccessControlEntryAction];

export const AutoHealActionType = {
    Recycle: "Recycle",
    LogEvent: "LogEvent",
    CustomAction: "CustomAction",
} as const;

export type AutoHealActionType = (typeof AutoHealActionType)[keyof typeof AutoHealActionType];

export const AzureResourceType = {
    Website: "Website",
    TrafficManager: "TrafficManager",
} as const;

export type AzureResourceType = (typeof AzureResourceType)[keyof typeof AzureResourceType];

export const BackupRestoreOperationType = {
    Default: "Default",
    Clone: "Clone",
    Relocation: "Relocation",
} as const;

export type BackupRestoreOperationType = (typeof BackupRestoreOperationType)[keyof typeof BackupRestoreOperationType];

export const BuiltInAuthenticationProvider = {
    AzureActiveDirectory: "AzureActiveDirectory",
    Facebook: "Facebook",
    Google: "Google",
    MicrosoftAccount: "MicrosoftAccount",
    Twitter: "Twitter",
} as const;

export type BuiltInAuthenticationProvider = (typeof BuiltInAuthenticationProvider)[keyof typeof BuiltInAuthenticationProvider];

export const ComputeModeOptions = {
    Shared: "Shared",
    Dedicated: "Dedicated",
    Dynamic: "Dynamic",
} as const;

export type ComputeModeOptions = (typeof ComputeModeOptions)[keyof typeof ComputeModeOptions];

export const CustomHostNameDnsRecordType = {
    CName: "CName",
    A: "A",
} as const;

export type CustomHostNameDnsRecordType = (typeof CustomHostNameDnsRecordType)[keyof typeof CustomHostNameDnsRecordType];

export const DatabaseServerType = {
    MySql: "MySql",
    SQLServer: "SQLServer",
    SQLAzure: "SQLAzure",
    Custom: "Custom",
} as const;

export type DatabaseServerType = (typeof DatabaseServerType)[keyof typeof DatabaseServerType];

export const FrequencyUnit = {
    Day: "Day",
    Hour: "Hour",
} as const;

export type FrequencyUnit = (typeof FrequencyUnit)[keyof typeof FrequencyUnit];

export const HostNameType = {
    Verified: "Verified",
    Managed: "Managed",
} as const;

export type HostNameType = (typeof HostNameType)[keyof typeof HostNameType];

export const HostingEnvironmentStatus = {
    Preparing: "Preparing",
    Ready: "Ready",
    Scaling: "Scaling",
    Deleting: "Deleting",
} as const;

export type HostingEnvironmentStatus = (typeof HostingEnvironmentStatus)[keyof typeof HostingEnvironmentStatus];

export const InternalLoadBalancingMode = {
    None: "None",
    Web: "Web",
    Publishing: "Publishing",
} as const;

export type InternalLoadBalancingMode = (typeof InternalLoadBalancingMode)[keyof typeof InternalLoadBalancingMode];

export const LogLevel = {
    Off: "Off",
    Verbose: "Verbose",
    Information: "Information",
    Warning: "Warning",
    Error: "Error",
} as const;

export type LogLevel = (typeof LogLevel)[keyof typeof LogLevel];

export const ManagedPipelineMode = {
    Integrated: "Integrated",
    Classic: "Classic",
} as const;

export type ManagedPipelineMode = (typeof ManagedPipelineMode)[keyof typeof ManagedPipelineMode];

export const ProvisioningState = {
    Succeeded: "Succeeded",
    Failed: "Failed",
    Canceled: "Canceled",
    InProgress: "InProgress",
    Deleting: "Deleting",
} as const;

export type ProvisioningState = (typeof ProvisioningState)[keyof typeof ProvisioningState];

export const SiteLoadBalancing = {
    WeightedRoundRobin: "WeightedRoundRobin",
    LeastRequests: "LeastRequests",
    LeastResponseTime: "LeastResponseTime",
    WeightedTotalTraffic: "WeightedTotalTraffic",
    RequestHash: "RequestHash",
} as const;

export type SiteLoadBalancing = (typeof SiteLoadBalancing)[keyof typeof SiteLoadBalancing];

export const SslState = {
    Disabled: "Disabled",
    SniEnabled: "SniEnabled",
    IpBasedEnabled: "IpBasedEnabled",
} as const;

export type SslState = (typeof SslState)[keyof typeof SslState];

export const UnauthenticatedClientAction = {
    RedirectToLoginPage: "RedirectToLoginPage",
    AllowAnonymous: "AllowAnonymous",
} as const;

export type UnauthenticatedClientAction = (typeof UnauthenticatedClientAction)[keyof typeof UnauthenticatedClientAction];

export const WorkerSizeOptions = {
    Default: "Default",
    Small: "Small",
    Medium: "Medium",
    Large: "Large",
} as const;

export type WorkerSizeOptions = (typeof WorkerSizeOptions)[keyof typeof WorkerSizeOptions];
