// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { GetVNetPeeringArgs, GetVNetPeeringResult, GetVNetPeeringOutputArgs } from "./getVNetPeering";
export const getVNetPeering: typeof import("./getVNetPeering").getVNetPeering = null as any;
export const getVNetPeeringOutput: typeof import("./getVNetPeering").getVNetPeeringOutput = null as any;
utilities.lazyLoad(exports, ["getVNetPeering","getVNetPeeringOutput"], () => require("./getVNetPeering"));

export { VNetPeeringArgs } from "./vnetPeering";
export type VNetPeering = import("./vnetPeering").VNetPeering;
export const VNetPeering: typeof import("./vnetPeering").VNetPeering = null as any;
utilities.lazyLoad(exports, ["VNetPeering"], () => require("./vnetPeering"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-native:databricks/v20210401preview:VNetPeering":
                return new VNetPeering(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "databricks/v20210401preview", _module)
