// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * An Azure resource which represents access to a suite of Maps REST APIs.
 *
 * ## Example Usage
 * ### Create Account with Managed Identities
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure_native from "@pulumi/azure-native";
 *
 * const account = new azure_native.maps.v20211201preview.Account("account", {
 *     accountName: "myMapsAccount",
 *     identity: {
 *         type: azure_native.maps.v20211201preview.ResourceIdentityType.SystemAssigned_UserAssigned,
 *         userAssignedIdentities: {
 *             "/subscriptions/21a9967a-e8a9-4656-a70b-96ff1c4d05a0/resourceGroups/myResourceGroup/providers/Microsoft.ManagedIdentity/userAssignedIdentities/identityName": {},
 *         },
 *     },
 *     kind: "Gen2",
 *     location: "eastus",
 *     properties: {
 *         disableLocalAuth: false,
 *         linkedResources: [
 *             {
 *                 id: "/subscriptions/21a9967a-e8a9-4656-a70b-96ff1c4d05a0/resourceGroups/myResourceGroup/providers/Microsoft.Storage/accounts/mystorageacc",
 *                 uniqueName: "myBatchStorageAccount",
 *             },
 *             {
 *                 id: "/subscriptions/21a9967a-e8a9-4656-a70b-96ff1c4d05a0/resourceGroups/myResourceGroup/providers/Microsoft.Storage/accounts/mystorageacc",
 *                 uniqueName: "myBlobDataSource",
 *             },
 *         ],
 *     },
 *     resourceGroupName: "myResourceGroup",
 *     sku: {
 *         name: "G2",
 *     },
 *     tags: {
 *         test: "true",
 *     },
 * });
 *
 * ```
 * ### Create Gen1 Account
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure_native from "@pulumi/azure-native";
 *
 * const account = new azure_native.maps.v20211201preview.Account("account", {
 *     accountName: "myMapsAccount",
 *     kind: "Gen1",
 *     location: "eastus",
 *     properties: {
 *         cors: {
 *             corsRules: [{
 *                 allowedOrigins: [
 *                     "http://www.contoso.com",
 *                     "http://www.fabrikam.com",
 *                 ],
 *             }],
 *         },
 *         disableLocalAuth: false,
 *     },
 *     resourceGroupName: "myResourceGroup",
 *     sku: {
 *         name: "S0",
 *     },
 *     tags: {
 *         test: "true",
 *     },
 * });
 *
 * ```
 * ### Create Gen2 Account
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure_native from "@pulumi/azure-native";
 *
 * const account = new azure_native.maps.v20211201preview.Account("account", {
 *     accountName: "myMapsAccount",
 *     kind: "Gen2",
 *     location: "eastus",
 *     properties: {
 *         cors: {
 *             corsRules: [{
 *                 allowedOrigins: [
 *                     "http://www.contoso.com",
 *                     "http://www.fabrikam.com",
 *                 ],
 *             }],
 *         },
 *         disableLocalAuth: true,
 *     },
 *     resourceGroupName: "myResourceGroup",
 *     sku: {
 *         name: "G2",
 *     },
 *     tags: {
 *         test: "true",
 *     },
 * });
 *
 * ```
 *
 * ## Import
 *
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 *
 * ```sh
 * $ pulumi import azure-native:maps/v20211201preview:Account myMapsAccount /subscriptions/21a9967a-e8a9-4656-a70b-96ff1c4d05a0/resourceGroups/myResourceGroup/providers/Microsoft.Maps/accounts/myMapsAccount 
 * ```
 */
export class Account extends pulumi.CustomResource {
    /**
     * Get an existing Account resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Account {
        return new Account(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:maps/v20211201preview:Account';

    /**
     * Returns true if the given object is an instance of Account.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Account {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Account.__pulumiType;
    }

    /**
     * Sets the identity property for maps account.
     */
    public readonly identity!: pulumi.Output<outputs.maps.v20211201preview.ManagedServiceIdentityResponse | undefined>;
    /**
     * Get or Set Kind property.
     */
    public readonly kind!: pulumi.Output<string | undefined>;
    /**
     * The geo-location where the resource lives
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * The name of the resource
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * The map account properties.
     */
    public readonly properties!: pulumi.Output<outputs.maps.v20211201preview.MapsAccountPropertiesResponse>;
    /**
     * The SKU of this account.
     */
    public readonly sku!: pulumi.Output<outputs.maps.v20211201preview.SkuResponse>;
    /**
     * The system meta data relating to this resource.
     */
    public /*out*/ readonly systemData!: pulumi.Output<outputs.maps.v20211201preview.SystemDataResponse>;
    /**
     * Resource tags.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a Account resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AccountArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.sku === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sku'");
            }
            resourceInputs["accountName"] = args ? args.accountName : undefined;
            resourceInputs["identity"] = args ? args.identity : undefined;
            resourceInputs["kind"] = args ? args.kind : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["properties"] = args ? (args.properties ? pulumi.output(args.properties).apply(inputs.maps.v20211201preview.mapsAccountPropertiesArgsProvideDefaults) : undefined) : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["sku"] = args ? args.sku : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        } else {
            resourceInputs["identity"] = undefined /*out*/;
            resourceInputs["kind"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["properties"] = undefined /*out*/;
            resourceInputs["sku"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:maps:Account" }, { type: "azure-native:maps/v20170101preview:Account" }, { type: "azure-native:maps/v20180501:Account" }, { type: "azure-native:maps/v20200201preview:Account" }, { type: "azure-native:maps/v20210201:Account" }, { type: "azure-native:maps/v20210701preview:Account" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(Account.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Account resource.
 */
export interface AccountArgs {
    /**
     * The name of the Maps Account.
     */
    accountName?: pulumi.Input<string>;
    /**
     * Sets the identity property for maps account.
     */
    identity?: pulumi.Input<inputs.maps.v20211201preview.ManagedServiceIdentityArgs>;
    /**
     * Get or Set Kind property.
     */
    kind?: pulumi.Input<string | enums.maps.v20211201preview.Kind>;
    /**
     * The geo-location where the resource lives
     */
    location?: pulumi.Input<string>;
    /**
     * The map account properties.
     */
    properties?: pulumi.Input<inputs.maps.v20211201preview.MapsAccountPropertiesArgs>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The SKU of this account.
     */
    sku: pulumi.Input<inputs.maps.v20211201preview.SkuArgs>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
