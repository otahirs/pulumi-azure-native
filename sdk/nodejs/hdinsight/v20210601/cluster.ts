// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * The HDInsight cluster.
 *
 * ## Example Usage
 * ### Create HDInsight cluster with Autoscale configuration
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure_native from "@pulumi/azure-native";
 *
 * const cluster = new azure_native.hdinsight.v20210601.Cluster("cluster", {
 *     clusterName: "cluster1",
 *     properties: {
 *         clusterDefinition: {
 *             componentVersion: {
 *                 Hadoop: "2.7",
 *             },
 *             configurations: {
 *                 gateway: {
 *                     "restAuthCredential.isEnabled": true,
 *                     "restAuthCredential.password": "**********",
 *                     "restAuthCredential.username": "admin",
 *                 },
 *             },
 *             kind: "hadoop",
 *         },
 *         clusterVersion: "3.6",
 *         computeProfile: {
 *             roles: [{
 *                 autoscaleConfiguration: {
 *                     recurrence: {
 *                         schedule: [
 *                             {
 *                                 days: [
 *                                     "Monday",
 *                                     "Tuesday",
 *                                     "Wednesday",
 *                                     "Thursday",
 *                                     "Friday",
 *                                 ],
 *                                 timeAndCapacity: {
 *                                     maxInstanceCount: 3,
 *                                     minInstanceCount: 3,
 *                                     time: "09:00",
 *                                 },
 *                             },
 *                             {
 *                                 days: [
 *                                     "Monday",
 *                                     "Tuesday",
 *                                     "Wednesday",
 *                                     "Thursday",
 *                                     "Friday",
 *                                 ],
 *                                 timeAndCapacity: {
 *                                     maxInstanceCount: 6,
 *                                     minInstanceCount: 6,
 *                                     time: "18:00",
 *                                 },
 *                             },
 *                             {
 *                                 days: [
 *                                     "Saturday",
 *                                     "Sunday",
 *                                 ],
 *                                 timeAndCapacity: {
 *                                     maxInstanceCount: 2,
 *                                     minInstanceCount: 2,
 *                                     time: "09:00",
 *                                 },
 *                             },
 *                             {
 *                                 days: [
 *                                     "Saturday",
 *                                     "Sunday",
 *                                 ],
 *                                 timeAndCapacity: {
 *                                     maxInstanceCount: 4,
 *                                     minInstanceCount: 4,
 *                                     time: "18:00",
 *                                 },
 *                             },
 *                         ],
 *                         timeZone: "China Standard Time",
 *                     },
 *                 },
 *                 hardwareProfile: {
 *                     vmSize: "Standard_D4_V2",
 *                 },
 *                 name: "workernode",
 *                 osProfile: {
 *                     linuxOperatingSystemProfile: {
 *                         password: "**********",
 *                         username: "sshuser",
 *                     },
 *                 },
 *                 scriptActions: [],
 *                 targetInstanceCount: 4,
 *             }],
 *         },
 *         osType: "Linux",
 *         storageProfile: {
 *             storageaccounts: [{
 *                 container: "hdinsight-autoscale-tes-2019-06-18t05-49-16-591z",
 *                 isDefault: true,
 *                 key: "storagekey",
 *                 name: "mystorage.blob.core.windows.net",
 *             }],
 *         },
 *         tier: "Standard",
 *     },
 *     resourceGroupName: "rg1",
 * });
 *
 * ```
 * ### Create Hadoop cluster with Azure Data Lake Storage Gen 2
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure_native from "@pulumi/azure-native";
 *
 * const cluster = new azure_native.hdinsight.v20210601.Cluster("cluster", {
 *     clusterName: "cluster1",
 *     properties: {
 *         clusterDefinition: {
 *             configurations: {
 *                 gateway: {
 *                     "restAuthCredential.isEnabled": "true",
 *                     "restAuthCredential.password": "**********",
 *                     "restAuthCredential.username": "admin",
 *                 },
 *             },
 *             kind: "Hadoop",
 *         },
 *         clusterVersion: "3.6",
 *         computeProfile: {
 *             roles: [
 *                 {
 *                     hardwareProfile: {
 *                         vmSize: "Standard_D3_V2",
 *                     },
 *                     minInstanceCount: 1,
 *                     name: "headnode",
 *                     osProfile: {
 *                         linuxOperatingSystemProfile: {
 *                             password: "**********",
 *                             username: "sshuser",
 *                         },
 *                     },
 *                     targetInstanceCount: 2,
 *                 },
 *                 {
 *                     hardwareProfile: {
 *                         vmSize: "Standard_D3_V2",
 *                     },
 *                     minInstanceCount: 1,
 *                     name: "workernode",
 *                     osProfile: {
 *                         linuxOperatingSystemProfile: {
 *                             password: "**********",
 *                             username: "sshuser",
 *                         },
 *                     },
 *                     targetInstanceCount: 4,
 *                 },
 *                 {
 *                     hardwareProfile: {
 *                         vmSize: "Small",
 *                     },
 *                     minInstanceCount: 1,
 *                     name: "zookeepernode",
 *                     osProfile: {
 *                         linuxOperatingSystemProfile: {
 *                             password: "**********",
 *                             username: "sshuser",
 *                         },
 *                     },
 *                     targetInstanceCount: 3,
 *                 },
 *             ],
 *         },
 *         osType: "Linux",
 *         storageProfile: {
 *             storageaccounts: [{
 *                 fileSystem: "default",
 *                 isDefault: true,
 *                 key: "storagekey",
 *                 name: "mystorage.dfs.core.windows.net",
 *             }],
 *         },
 *         tier: "Standard",
 *     },
 *     resourceGroupName: "rg1",
 *     tags: {
 *         key1: "val1",
 *     },
 * });
 *
 * ```
 * ### Create Hadoop on Linux cluster with SSH password
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure_native from "@pulumi/azure-native";
 *
 * const cluster = new azure_native.hdinsight.v20210601.Cluster("cluster", {
 *     clusterName: "cluster1",
 *     properties: {
 *         clusterDefinition: {
 *             configurations: {
 *                 gateway: {
 *                     "restAuthCredential.isEnabled": "true",
 *                     "restAuthCredential.password": "**********",
 *                     "restAuthCredential.username": "admin",
 *                 },
 *             },
 *             kind: "Hadoop",
 *         },
 *         clusterVersion: "3.5",
 *         computeProfile: {
 *             roles: [
 *                 {
 *                     hardwareProfile: {
 *                         vmSize: "Standard_D3_V2",
 *                     },
 *                     minInstanceCount: 1,
 *                     name: "headnode",
 *                     osProfile: {
 *                         linuxOperatingSystemProfile: {
 *                             password: "**********",
 *                             username: "sshuser",
 *                         },
 *                     },
 *                     targetInstanceCount: 2,
 *                 },
 *                 {
 *                     hardwareProfile: {
 *                         vmSize: "Standard_D3_V2",
 *                     },
 *                     minInstanceCount: 1,
 *                     name: "workernode",
 *                     osProfile: {
 *                         linuxOperatingSystemProfile: {
 *                             password: "**********",
 *                             username: "sshuser",
 *                         },
 *                     },
 *                     targetInstanceCount: 4,
 *                 },
 *                 {
 *                     hardwareProfile: {
 *                         vmSize: "Small",
 *                     },
 *                     minInstanceCount: 1,
 *                     name: "zookeepernode",
 *                     osProfile: {
 *                         linuxOperatingSystemProfile: {
 *                             password: "**********",
 *                             username: "sshuser",
 *                         },
 *                     },
 *                     targetInstanceCount: 3,
 *                 },
 *             ],
 *         },
 *         osType: "Linux",
 *         storageProfile: {
 *             storageaccounts: [{
 *                 container: "containername",
 *                 isDefault: true,
 *                 key: "storagekey",
 *                 name: "mystorage.blob.core.windows.net",
 *             }],
 *         },
 *         tier: "Standard",
 *     },
 *     resourceGroupName: "rg1",
 *     tags: {
 *         key1: "val1",
 *     },
 * });
 *
 * ```
 * ### Create Hadoop on Linux cluster with SSH public key
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure_native from "@pulumi/azure-native";
 *
 * const cluster = new azure_native.hdinsight.v20210601.Cluster("cluster", {
 *     clusterName: "cluster1",
 *     properties: {
 *         clusterDefinition: {
 *             configurations: {
 *                 gateway: {
 *                     "restAuthCredential.isEnabled": true,
 *                     "restAuthCredential.password": "**********",
 *                     "restAuthCredential.username": "admin",
 *                 },
 *             },
 *             kind: "Hadoop",
 *         },
 *         clusterVersion: "3.5",
 *         computeProfile: {
 *             roles: [
 *                 {
 *                     hardwareProfile: {
 *                         vmSize: "Standard_D3_V2",
 *                     },
 *                     minInstanceCount: 1,
 *                     name: "headnode",
 *                     osProfile: {
 *                         linuxOperatingSystemProfile: {
 *                             sshProfile: {
 *                                 publicKeys: [{
 *                                     certificateData: "**********",
 *                                 }],
 *                             },
 *                             username: "sshuser",
 *                         },
 *                     },
 *                     targetInstanceCount: 2,
 *                 },
 *                 {
 *                     hardwareProfile: {
 *                         vmSize: "Standard_D3_V2",
 *                     },
 *                     minInstanceCount: 1,
 *                     name: "workernode",
 *                     osProfile: {
 *                         linuxOperatingSystemProfile: {
 *                             password: "**********",
 *                             username: "sshuser",
 *                         },
 *                     },
 *                     targetInstanceCount: 4,
 *                 },
 *                 {
 *                     hardwareProfile: {
 *                         vmSize: "Small",
 *                     },
 *                     minInstanceCount: 1,
 *                     name: "zookeepernode",
 *                     osProfile: {
 *                         linuxOperatingSystemProfile: {
 *                             password: "**********",
 *                             username: "sshuser",
 *                         },
 *                     },
 *                     targetInstanceCount: 3,
 *                 },
 *             ],
 *         },
 *         osType: "Linux",
 *         storageProfile: {
 *             storageaccounts: [{
 *                 container: "containername",
 *                 isDefault: true,
 *                 key: "storagekey",
 *                 name: "mystorage.blob.core.windows.net",
 *             }],
 *         },
 *         tier: "Standard",
 *     },
 *     resourceGroupName: "rg1",
 *     tags: {
 *         key1: "val1",
 *     },
 * });
 *
 * ```
 * ### Create Kafka cluster with Kafka Rest Proxy
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure_native from "@pulumi/azure-native";
 *
 * const cluster = new azure_native.hdinsight.v20210601.Cluster("cluster", {
 *     clusterName: "cluster1",
 *     properties: {
 *         clusterDefinition: {
 *             componentVersion: {
 *                 Kafka: "2.1",
 *             },
 *             configurations: {
 *                 gateway: {
 *                     "restAuthCredential.isEnabled": true,
 *                     "restAuthCredential.password": "**********",
 *                     "restAuthCredential.username": "admin",
 *                 },
 *             },
 *             kind: "kafka",
 *         },
 *         clusterVersion: "4.0",
 *         computeProfile: {
 *             roles: [
 *                 {
 *                     hardwareProfile: {
 *                         vmSize: "Large",
 *                     },
 *                     name: "headnode",
 *                     osProfile: {
 *                         linuxOperatingSystemProfile: {
 *                             password: "**********",
 *                             username: "sshuser",
 *                         },
 *                     },
 *                     targetInstanceCount: 2,
 *                 },
 *                 {
 *                     dataDisksGroups: [{
 *                         disksPerNode: 8,
 *                     }],
 *                     hardwareProfile: {
 *                         vmSize: "Large",
 *                     },
 *                     name: "workernode",
 *                     osProfile: {
 *                         linuxOperatingSystemProfile: {
 *                             password: "**********",
 *                             username: "sshuser",
 *                         },
 *                     },
 *                     targetInstanceCount: 3,
 *                 },
 *                 {
 *                     hardwareProfile: {
 *                         vmSize: "Small",
 *                     },
 *                     name: "zookeepernode",
 *                     osProfile: {
 *                         linuxOperatingSystemProfile: {
 *                             password: "**********",
 *                             username: "sshuser",
 *                         },
 *                     },
 *                     targetInstanceCount: 3,
 *                 },
 *                 {
 *                     hardwareProfile: {
 *                         vmSize: "Standard_D4_v2",
 *                     },
 *                     name: "kafkamanagementnode",
 *                     osProfile: {
 *                         linuxOperatingSystemProfile: {
 *                             password: "**********",
 *                             username: "kafkauser",
 *                         },
 *                     },
 *                     targetInstanceCount: 2,
 *                 },
 *             ],
 *         },
 *         kafkaRestProperties: {
 *             clientGroupInfo: {
 *                 groupId: "00000000-0000-0000-0000-111111111111",
 *                 groupName: "Kafka security group name",
 *             },
 *         },
 *         osType: "Linux",
 *         storageProfile: {
 *             storageaccounts: [{
 *                 container: "containername",
 *                 isDefault: true,
 *                 key: "storagekey",
 *                 name: "mystorage.blob.core.windows.net",
 *             }],
 *         },
 *         tier: "Standard",
 *     },
 *     resourceGroupName: "rg1",
 * });
 *
 * ```
 * ### Create Secure Hadoop cluster
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure_native from "@pulumi/azure-native";
 *
 * const cluster = new azure_native.hdinsight.v20210601.Cluster("cluster", {
 *     clusterName: "cluster1",
 *     properties: {
 *         clusterDefinition: {
 *             configurations: {
 *                 gateway: {
 *                     "restAuthCredential.isEnabled": true,
 *                     "restAuthCredential.password": "**********",
 *                     "restAuthCredential.username": "admin",
 *                 },
 *             },
 *             kind: "Hadoop",
 *         },
 *         clusterVersion: "3.5",
 *         computeProfile: {
 *             roles: [
 *                 {
 *                     hardwareProfile: {
 *                         vmSize: "Standard_D3_V2",
 *                     },
 *                     minInstanceCount: 1,
 *                     name: "headnode",
 *                     osProfile: {
 *                         linuxOperatingSystemProfile: {
 *                             password: "**********",
 *                             sshProfile: {
 *                                 publicKeys: [{
 *                                     certificateData: "**********",
 *                                 }],
 *                             },
 *                             username: "sshuser",
 *                         },
 *                     },
 *                     scriptActions: [],
 *                     targetInstanceCount: 2,
 *                     virtualNetworkProfile: {
 *                         id: "/subscriptions/subId/resourceGroups/rg/providers/Microsoft.Network/virtualNetworks/vnetname",
 *                         subnet: "/subscriptions/subId/resourceGroups/rg/providers/Microsoft.Network/virtualNetworks/vnetname/subnets/vnetsubnet",
 *                     },
 *                 },
 *                 {
 *                     hardwareProfile: {
 *                         vmSize: "Standard_D3_V2",
 *                     },
 *                     minInstanceCount: 1,
 *                     name: "workernode",
 *                     osProfile: {
 *                         linuxOperatingSystemProfile: {
 *                             password: "**********",
 *                             sshProfile: {
 *                                 publicKeys: [{
 *                                     certificateData: "**********",
 *                                 }],
 *                             },
 *                             username: "sshuser",
 *                         },
 *                     },
 *                     scriptActions: [],
 *                     targetInstanceCount: 4,
 *                     virtualNetworkProfile: {
 *                         id: "/subscriptions/subId/resourceGroups/rg/providers/Microsoft.Network/virtualNetworks/vnetname",
 *                         subnet: "/subscriptions/subId/resourceGroups/rg/providers/Microsoft.Network/virtualNetworks/vnetname/subnets/vnetsubnet",
 *                     },
 *                 },
 *                 {
 *                     hardwareProfile: {
 *                         vmSize: "Small",
 *                     },
 *                     minInstanceCount: 1,
 *                     name: "zookeepernode",
 *                     osProfile: {
 *                         linuxOperatingSystemProfile: {
 *                             password: "**********",
 *                             sshProfile: {
 *                                 publicKeys: [{
 *                                     certificateData: "**********",
 *                                 }],
 *                             },
 *                             username: "sshuser",
 *                         },
 *                     },
 *                     scriptActions: [],
 *                     targetInstanceCount: 3,
 *                     virtualNetworkProfile: {
 *                         id: "/subscriptions/subId/resourceGroups/rg/providers/Microsoft.Network/virtualNetworks/vnetname",
 *                         subnet: "/subscriptions/subId/resourceGroups/rg/providers/Microsoft.Network/virtualNetworks/vnetname/subnets/vnetsubnet",
 *                     },
 *                 },
 *             ],
 *         },
 *         osType: "Linux",
 *         securityProfile: {
 *             clusterUsersGroupDNs: ["hdiusers"],
 *             directoryType: "ActiveDirectory",
 *             domain: "DomainName",
 *             domainUserPassword: "**********",
 *             domainUsername: "DomainUsername",
 *             ldapsUrls: ["ldaps://10.10.0.4:636"],
 *             organizationalUnitDN: "OU=Hadoop,DC=hdinsight,DC=test",
 *         },
 *         storageProfile: {
 *             storageaccounts: [{
 *                 container: "containername",
 *                 isDefault: true,
 *                 key: "storage account key",
 *                 name: "mystorage.blob.core.windows.net",
 *             }],
 *         },
 *         tier: "Premium",
 *     },
 *     resourceGroupName: "rg1",
 *     tags: {
 *         key1: "val1",
 *     },
 * });
 *
 * ```
 * ### Create Spark on Linux Cluster with SSH password
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure_native from "@pulumi/azure-native";
 *
 * const cluster = new azure_native.hdinsight.v20210601.Cluster("cluster", {
 *     clusterName: "cluster1",
 *     properties: {
 *         clusterDefinition: {
 *             componentVersion: {
 *                 Spark: "2.0",
 *             },
 *             configurations: {
 *                 gateway: {
 *                     "restAuthCredential.isEnabled": true,
 *                     "restAuthCredential.password": "**********",
 *                     "restAuthCredential.username": "admin",
 *                 },
 *             },
 *             kind: "Spark",
 *         },
 *         clusterVersion: "3.5",
 *         computeProfile: {
 *             roles: [
 *                 {
 *                     hardwareProfile: {
 *                         vmSize: "Standard_D12_V2",
 *                     },
 *                     minInstanceCount: 1,
 *                     name: "headnode",
 *                     osProfile: {
 *                         linuxOperatingSystemProfile: {
 *                             password: "**********",
 *                             username: "sshuser",
 *                         },
 *                     },
 *                     targetInstanceCount: 2,
 *                 },
 *                 {
 *                     hardwareProfile: {
 *                         vmSize: "Standard_D4_V2",
 *                     },
 *                     minInstanceCount: 1,
 *                     name: "workernode",
 *                     osProfile: {
 *                         linuxOperatingSystemProfile: {
 *                             password: "**********",
 *                             username: "sshuser",
 *                         },
 *                     },
 *                     targetInstanceCount: 4,
 *                 },
 *             ],
 *         },
 *         osType: "Linux",
 *         storageProfile: {
 *             storageaccounts: [{
 *                 container: "containername",
 *                 isDefault: true,
 *                 key: "storageapikey*",
 *                 name: "mystorage.blob.core.windows.net",
 *             }],
 *         },
 *         tier: "Standard",
 *     },
 *     resourceGroupName: "rg1",
 *     tags: {
 *         key1: "val1",
 *     },
 * });
 *
 * ```
 * ### Create cluster with TLS 1.2
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure_native from "@pulumi/azure-native";
 *
 * const cluster = new azure_native.hdinsight.v20210601.Cluster("cluster", {
 *     clusterName: "cluster1",
 *     properties: {
 *         clusterDefinition: {
 *             configurations: {
 *                 gateway: {
 *                     "restAuthCredential.isEnabled": true,
 *                     "restAuthCredential.password": "**********",
 *                     "restAuthCredential.username": "admin",
 *                 },
 *             },
 *             kind: "Hadoop",
 *         },
 *         clusterVersion: "3.6",
 *         computeProfile: {
 *             roles: [
 *                 {
 *                     hardwareProfile: {
 *                         vmSize: "Large",
 *                     },
 *                     name: "headnode",
 *                     osProfile: {
 *                         linuxOperatingSystemProfile: {
 *                             password: "**********",
 *                             username: "sshuser",
 *                         },
 *                     },
 *                     targetInstanceCount: 2,
 *                 },
 *                 {
 *                     hardwareProfile: {
 *                         vmSize: "Large",
 *                     },
 *                     name: "workernode",
 *                     osProfile: {
 *                         linuxOperatingSystemProfile: {
 *                             password: "**********",
 *                             username: "sshuser",
 *                         },
 *                     },
 *                     targetInstanceCount: 3,
 *                 },
 *                 {
 *                     hardwareProfile: {
 *                         vmSize: "Small",
 *                     },
 *                     name: "zookeepernode",
 *                     osProfile: {
 *                         linuxOperatingSystemProfile: {
 *                             password: "**********",
 *                             username: "sshuser",
 *                         },
 *                     },
 *                     targetInstanceCount: 3,
 *                 },
 *             ],
 *         },
 *         minSupportedTlsVersion: "1.2",
 *         osType: "Linux",
 *         storageProfile: {
 *             storageaccounts: [{
 *                 container: "default8525",
 *                 isDefault: true,
 *                 key: "storagekey",
 *                 name: "mystorage.blob.core.windows.net",
 *             }],
 *         },
 *         tier: "Standard",
 *     },
 *     resourceGroupName: "rg1",
 * });
 *
 * ```
 * ### Create cluster with availability zones
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure_native from "@pulumi/azure-native";
 *
 * const cluster = new azure_native.hdinsight.v20210601.Cluster("cluster", {
 *     clusterName: "cluster1",
 *     properties: {
 *         clusterDefinition: {
 *             configurations: {
 *                 "ambari-conf": {
 *                     "database-name": "{ambari database name}",
 *                     "database-server": "{sql server name}.database.windows.net",
 *                     "database-user-name": "**********",
 *                     "database-user-password": "**********",
 *                 },
 *                 gateway: {
 *                     "restAuthCredential.isEnabled": true,
 *                     "restAuthCredential.password": "**********",
 *                     "restAuthCredential.username": "admin",
 *                 },
 *                 "hive-env": {
 *                     hive_database: "Existing MSSQL Server database with SQL authentication",
 *                     hive_database_name: "{hive metastore name}",
 *                     hive_database_type: "mssql",
 *                     hive_existing_mssql_server_database: "{hive metastore name}",
 *                     hive_existing_mssql_server_host: "{sql server name}.database.windows.net",
 *                     hive_hostname: "{sql server name}.database.windows.net",
 *                 },
 *                 "hive-site": {
 *                     "javax.jdo.option.ConnectionDriverName": "com.microsoft.sqlserver.jdbc.SQLServerDriver",
 *                     "javax.jdo.option.ConnectionPassword": "**********!",
 *                     "javax.jdo.option.ConnectionURL": "jdbc:sqlserver://{sql server name}.database.windows.net;database={hive metastore name};encrypt=true;trustServerCertificate=true;create=false;loginTimeout=300;sendStringParametersAsUnicode=true;prepareSQL=0",
 *                     "javax.jdo.option.ConnectionUserName": "**********",
 *                 },
 *                 "oozie-env": {
 *                     oozie_database: "Existing MSSQL Server database with SQL authentication",
 *                     oozie_database_name: "{oozie metastore name}",
 *                     oozie_database_type: "mssql",
 *                     oozie_existing_mssql_server_database: "{oozie metastore name}",
 *                     oozie_existing_mssql_server_host: "{sql server name}.database.windows.net",
 *                     oozie_hostname: "{sql server name}.database.windows.net",
 *                 },
 *                 "oozie-site": {
 *                     "oozie.db.schema.name": "oozie",
 *                     "oozie.service.JPAService.jdbc.driver": "com.microsoft.sqlserver.jdbc.SQLServerDriver",
 *                     "oozie.service.JPAService.jdbc.password": "**********",
 *                     "oozie.service.JPAService.jdbc.url": "jdbc:sqlserver://{sql server name}.database.windows.net;database={oozie metastore name};encrypt=true;trustServerCertificate=true;create=false;loginTimeout=300;sendStringParametersAsUnicode=true;prepareSQL=0",
 *                     "oozie.service.JPAService.jdbc.username": "**********",
 *                 },
 *             },
 *             kind: "hadoop",
 *         },
 *         clusterVersion: "3.6",
 *         computeProfile: {
 *             roles: [
 *                 {
 *                     hardwareProfile: {
 *                         vmSize: "standard_d3",
 *                     },
 *                     name: "headnode",
 *                     osProfile: {
 *                         linuxOperatingSystemProfile: {
 *                             password: "**********",
 *                             sshProfile: {
 *                                 publicKeys: [{
 *                                     certificateData: "**********",
 *                                 }],
 *                             },
 *                             username: "sshuser",
 *                         },
 *                     },
 *                     targetInstanceCount: 2,
 *                     virtualNetworkProfile: {
 *                         id: "/subscriptions/subId/resourceGroups/rg/providers/Microsoft.Network/virtualNetworks/vnetname",
 *                         subnet: "/subscriptions/subId/resourceGroups/rg/providers/Microsoft.Network/virtualNetworks/vnetname/subnets/vnetsubnet",
 *                     },
 *                 },
 *                 {
 *                     hardwareProfile: {
 *                         vmSize: "standard_d3",
 *                     },
 *                     name: "workernode",
 *                     osProfile: {
 *                         linuxOperatingSystemProfile: {
 *                             password: "**********",
 *                             sshProfile: {
 *                                 publicKeys: [{
 *                                     certificateData: "**********",
 *                                 }],
 *                             },
 *                             username: "sshuser",
 *                         },
 *                     },
 *                     targetInstanceCount: 2,
 *                     virtualNetworkProfile: {
 *                         id: "/subscriptions/subId/resourceGroups/rg/providers/Microsoft.Network/virtualNetworks/vnetname",
 *                         subnet: "/subscriptions/subId/resourceGroups/rg/providers/Microsoft.Network/virtualNetworks/vnetname/subnets/vnetsubnet",
 *                     },
 *                 },
 *             ],
 *         },
 *         osType: "Linux",
 *         storageProfile: {
 *             storageaccounts: [{
 *                 container: "containername",
 *                 isDefault: true,
 *                 key: "storage account key",
 *                 name: "mystorage",
 *             }],
 *         },
 *     },
 *     resourceGroupName: "rg1",
 *     zones: ["1"],
 * });
 *
 * ```
 * ### Create cluster with compute isolation properties
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure_native from "@pulumi/azure-native";
 *
 * const cluster = new azure_native.hdinsight.v20210601.Cluster("cluster", {
 *     clusterName: "cluster1",
 *     properties: {
 *         clusterDefinition: {
 *             configurations: {
 *                 gateway: {
 *                     "restAuthCredential.isEnabled": true,
 *                     "restAuthCredential.password": "**********",
 *                     "restAuthCredential.username": "admin",
 *                 },
 *             },
 *             kind: "hadoop",
 *         },
 *         clusterVersion: "3.6",
 *         computeIsolationProperties: {
 *             enableComputeIsolation: true,
 *         },
 *         computeProfile: {
 *             roles: [
 *                 {
 *                     hardwareProfile: {
 *                         vmSize: "standard_d3",
 *                     },
 *                     name: "headnode",
 *                     osProfile: {
 *                         linuxOperatingSystemProfile: {
 *                             password: "**********",
 *                             sshProfile: {
 *                                 publicKeys: [{
 *                                     certificateData: "**********",
 *                                 }],
 *                             },
 *                             username: "sshuser",
 *                         },
 *                     },
 *                     targetInstanceCount: 2,
 *                 },
 *                 {
 *                     hardwareProfile: {
 *                         vmSize: "standard_d3",
 *                     },
 *                     name: "workernode",
 *                     osProfile: {
 *                         linuxOperatingSystemProfile: {
 *                             password: "**********",
 *                             sshProfile: {
 *                                 publicKeys: [{
 *                                     certificateData: "**********",
 *                                 }],
 *                             },
 *                             username: "sshuser",
 *                         },
 *                     },
 *                     targetInstanceCount: 2,
 *                 },
 *             ],
 *         },
 *         osType: "Linux",
 *         storageProfile: {
 *             storageaccounts: [{
 *                 container: "containername",
 *                 isDefault: true,
 *                 key: "storage account key",
 *                 name: "mystorage",
 *             }],
 *         },
 *     },
 *     resourceGroupName: "rg1",
 * });
 *
 * ```
 * ### Create cluster with encryption at host
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure_native from "@pulumi/azure-native";
 *
 * const cluster = new azure_native.hdinsight.v20210601.Cluster("cluster", {
 *     clusterName: "cluster1",
 *     properties: {
 *         clusterDefinition: {
 *             configurations: {
 *                 gateway: {
 *                     "restAuthCredential.isEnabled": true,
 *                     "restAuthCredential.password": "**********",
 *                     "restAuthCredential.username": "admin",
 *                 },
 *             },
 *             kind: "Hadoop",
 *         },
 *         clusterVersion: "3.6",
 *         computeProfile: {
 *             roles: [
 *                 {
 *                     hardwareProfile: {
 *                         vmSize: "Standard_DS14_v2",
 *                     },
 *                     name: "headnode",
 *                     osProfile: {
 *                         linuxOperatingSystemProfile: {
 *                             password: "**********",
 *                             username: "sshuser",
 *                         },
 *                     },
 *                     targetInstanceCount: 2,
 *                 },
 *                 {
 *                     hardwareProfile: {
 *                         vmSize: "Standard_DS14_v2",
 *                     },
 *                     name: "workernode",
 *                     osProfile: {
 *                         linuxOperatingSystemProfile: {
 *                             password: "**********",
 *                             username: "sshuser",
 *                         },
 *                     },
 *                     targetInstanceCount: 3,
 *                 },
 *                 {
 *                     hardwareProfile: {
 *                         vmSize: "Standard_DS14_v2",
 *                     },
 *                     name: "zookeepernode",
 *                     osProfile: {
 *                         linuxOperatingSystemProfile: {
 *                             password: "**********",
 *                             username: "sshuser",
 *                         },
 *                     },
 *                     targetInstanceCount: 3,
 *                 },
 *             ],
 *         },
 *         diskEncryptionProperties: {
 *             encryptionAtHost: true,
 *         },
 *         osType: "Linux",
 *         storageProfile: {
 *             storageaccounts: [{
 *                 container: "default8525",
 *                 isDefault: true,
 *                 key: "storagekey",
 *                 name: "mystorage.blob.core.windows.net",
 *             }],
 *         },
 *         tier: "Standard",
 *     },
 *     resourceGroupName: "rg1",
 * });
 *
 * ```
 * ### Create cluster with encryption in transit
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure_native from "@pulumi/azure-native";
 *
 * const cluster = new azure_native.hdinsight.v20210601.Cluster("cluster", {
 *     clusterName: "cluster1",
 *     properties: {
 *         clusterDefinition: {
 *             configurations: {
 *                 gateway: {
 *                     "restAuthCredential.isEnabled": true,
 *                     "restAuthCredential.password": "**********",
 *                     "restAuthCredential.username": "admin",
 *                 },
 *             },
 *             kind: "Hadoop",
 *         },
 *         clusterVersion: "3.6",
 *         computeProfile: {
 *             roles: [
 *                 {
 *                     hardwareProfile: {
 *                         vmSize: "Large",
 *                     },
 *                     name: "headnode",
 *                     osProfile: {
 *                         linuxOperatingSystemProfile: {
 *                             password: "**********",
 *                             username: "sshuser",
 *                         },
 *                     },
 *                     targetInstanceCount: 2,
 *                 },
 *                 {
 *                     hardwareProfile: {
 *                         vmSize: "Large",
 *                     },
 *                     name: "workernode",
 *                     osProfile: {
 *                         linuxOperatingSystemProfile: {
 *                             password: "**********",
 *                             username: "sshuser",
 *                         },
 *                     },
 *                     targetInstanceCount: 3,
 *                 },
 *                 {
 *                     hardwareProfile: {
 *                         vmSize: "Small",
 *                     },
 *                     name: "zookeepernode",
 *                     osProfile: {
 *                         linuxOperatingSystemProfile: {
 *                             password: "**********",
 *                             username: "sshuser",
 *                         },
 *                     },
 *                     targetInstanceCount: 3,
 *                 },
 *             ],
 *         },
 *         encryptionInTransitProperties: {
 *             isEncryptionInTransitEnabled: true,
 *         },
 *         osType: "Linux",
 *         storageProfile: {
 *             storageaccounts: [{
 *                 container: "default8525",
 *                 isDefault: true,
 *                 key: "storagekey",
 *                 name: "mystorage.blob.core.windows.net",
 *             }],
 *         },
 *         tier: "Standard",
 *     },
 *     resourceGroupName: "rg1",
 * });
 *
 * ```
 * ### Create cluster with network properties
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure_native from "@pulumi/azure-native";
 *
 * const cluster = new azure_native.hdinsight.v20210601.Cluster("cluster", {
 *     clusterName: "cluster1",
 *     properties: {
 *         clusterDefinition: {
 *             configurations: {
 *                 gateway: {
 *                     "restAuthCredential.isEnabled": true,
 *                     "restAuthCredential.password": "**********",
 *                     "restAuthCredential.username": "admin",
 *                 },
 *             },
 *             kind: "hadoop",
 *         },
 *         clusterVersion: "3.6",
 *         computeProfile: {
 *             roles: [
 *                 {
 *                     hardwareProfile: {
 *                         vmSize: "standard_d3",
 *                     },
 *                     name: "headnode",
 *                     osProfile: {
 *                         linuxOperatingSystemProfile: {
 *                             password: "**********",
 *                             sshProfile: {
 *                                 publicKeys: [{
 *                                     certificateData: "**********",
 *                                 }],
 *                             },
 *                             username: "sshuser",
 *                         },
 *                     },
 *                     targetInstanceCount: 2,
 *                     virtualNetworkProfile: {
 *                         id: "/subscriptions/subId/resourceGroups/rg/providers/Microsoft.Network/virtualNetworks/vnetname",
 *                         subnet: "/subscriptions/subId/resourceGroups/rg/providers/Microsoft.Network/virtualNetworks/vnetname/subnets/vnetsubnet",
 *                     },
 *                 },
 *                 {
 *                     hardwareProfile: {
 *                         vmSize: "standard_d3",
 *                     },
 *                     name: "workernode",
 *                     osProfile: {
 *                         linuxOperatingSystemProfile: {
 *                             password: "**********",
 *                             sshProfile: {
 *                                 publicKeys: [{
 *                                     certificateData: "**********",
 *                                 }],
 *                             },
 *                             username: "sshuser",
 *                         },
 *                     },
 *                     targetInstanceCount: 2,
 *                     virtualNetworkProfile: {
 *                         id: "/subscriptions/subId/resourceGroups/rg/providers/Microsoft.Network/virtualNetworks/vnetname",
 *                         subnet: "/subscriptions/subId/resourceGroups/rg/providers/Microsoft.Network/virtualNetworks/vnetname/subnets/vnetsubnet",
 *                     },
 *                 },
 *             ],
 *         },
 *         networkProperties: {
 *             privateLink: "Enabled",
 *             resourceProviderConnection: "Outbound",
 *         },
 *         osType: "Linux",
 *         storageProfile: {
 *             storageaccounts: [{
 *                 container: "containername",
 *                 isDefault: true,
 *                 key: "storage account key",
 *                 name: "mystorage",
 *             }],
 *         },
 *     },
 *     resourceGroupName: "rg1",
 * });
 *
 * ```
 *
 * ## Import
 *
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 *
 * ```sh
 * $ pulumi import azure-native:hdinsight/v20210601:Cluster cluster1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.HDInsight/clusters/cluster1 
 * ```
 */
export class Cluster extends pulumi.CustomResource {
    /**
     * Get an existing Cluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Cluster {
        return new Cluster(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:hdinsight/v20210601:Cluster';

    /**
     * Returns true if the given object is an instance of Cluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Cluster {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Cluster.__pulumiType;
    }

    /**
     * The ETag for the resource
     */
    public /*out*/ readonly etag!: pulumi.Output<string | undefined>;
    /**
     * The identity of the cluster, if configured.
     */
    public readonly identity!: pulumi.Output<outputs.hdinsight.v20210601.ClusterIdentityResponse | undefined>;
    /**
     * The geo-location where the resource lives
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * The name of the resource
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * The properties of the cluster.
     */
    public readonly properties!: pulumi.Output<outputs.hdinsight.v20210601.ClusterGetPropertiesResponse>;
    /**
     * Metadata pertaining to creation and last modification of the resource.
     */
    public /*out*/ readonly systemData!: pulumi.Output<outputs.hdinsight.v20210601.SystemDataResponse>;
    /**
     * Resource tags.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    public /*out*/ readonly type!: pulumi.Output<string>;
    /**
     * The availability zones.
     */
    public readonly zones!: pulumi.Output<string[] | undefined>;

    /**
     * Create a Cluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ClusterArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["clusterName"] = args ? args.clusterName : undefined;
            resourceInputs["identity"] = args ? args.identity : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["properties"] = args ? (args.properties ? pulumi.output(args.properties).apply(inputs.hdinsight.v20210601.clusterCreatePropertiesArgsProvideDefaults) : undefined) : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["zones"] = args ? args.zones : undefined;
            resourceInputs["etag"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        } else {
            resourceInputs["etag"] = undefined /*out*/;
            resourceInputs["identity"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["properties"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
            resourceInputs["zones"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:hdinsight:Cluster" }, { type: "azure-native:hdinsight/v20150301preview:Cluster" }, { type: "azure-native:hdinsight/v20180601preview:Cluster" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(Cluster.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Cluster resource.
 */
export interface ClusterArgs {
    /**
     * The name of the cluster.
     */
    clusterName?: pulumi.Input<string>;
    /**
     * The identity of the cluster, if configured.
     */
    identity?: pulumi.Input<inputs.hdinsight.v20210601.ClusterIdentityArgs>;
    /**
     * The location of the cluster.
     */
    location?: pulumi.Input<string>;
    /**
     * The cluster create parameters.
     */
    properties?: pulumi.Input<inputs.hdinsight.v20210601.ClusterCreatePropertiesArgs>;
    /**
     * The name of the resource group.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The resource tags.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The availability zones.
     */
    zones?: pulumi.Input<pulumi.Input<string>[]>;
}
