// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Resource information, as returned by the resource provider.
 * API Version: 2023-02-01.
 * Previous API Version: 2021-01-01. See https://github.com/pulumi/pulumi-azure-native/discussions/TODO for information on migrating from v1 to v2 of the provider.
 *
 * ## Example Usage
 * ### Create or Update Recovery Services vault
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure_native from "@pulumi/azure-native";
 *
 * const vault = new azure_native.recoveryservices.Vault("vault", {
 *     identity: {
 *         type: "SystemAssigned",
 *     },
 *     location: "West US",
 *     properties: {
 *         publicNetworkAccess: "Enabled",
 *     },
 *     resourceGroupName: "Default-RecoveryServices-ResourceGroup",
 *     sku: {
 *         name: "Standard",
 *     },
 *     vaultName: "swaggerExample",
 * });
 *
 * ```
 * ### Create or Update Vault With Monitoring Setting
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure_native from "@pulumi/azure-native";
 *
 * const vault = new azure_native.recoveryservices.Vault("vault", {
 *     identity: {
 *         type: "SystemAssigned",
 *     },
 *     location: "West US",
 *     properties: {
 *         monitoringSettings: {
 *             azureMonitorAlertSettings: {
 *                 alertsForAllJobFailures: "Enabled",
 *             },
 *             classicAlertSettings: {
 *                 alertsForCriticalOperations: "Disabled",
 *             },
 *         },
 *         publicNetworkAccess: "Enabled",
 *     },
 *     resourceGroupName: "Default-RecoveryServices-ResourceGroup",
 *     sku: {
 *         name: "Standard",
 *     },
 *     vaultName: "swaggerExample",
 * });
 *
 * ```
 * ### Create or Update Vault with CustomerManagedKeys
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure_native from "@pulumi/azure-native";
 *
 * const vault = new azure_native.recoveryservices.Vault("vault", {
 *     identity: {
 *         type: "UserAssigned",
 *         userAssignedIdentities: {
 *             "/subscriptions/85bf5e8c-3084-4f42-add2-746ebb7e97b2/resourcegroups/defaultrg/providers/Microsoft.ManagedIdentity/userAssignedIdentities/examplemsi": {},
 *         },
 *     },
 *     location: "West US",
 *     properties: {
 *         encryption: {
 *             infrastructureEncryption: "Enabled",
 *             kekIdentity: {
 *                 userAssignedIdentity: "/subscriptions/85bf5e8c-3084-4f42-add2-746ebb7e97b2/resourcegroups/defaultrg/providers/Microsoft.ManagedIdentity/userAssignedIdentities/examplemsi",
 *             },
 *             keyVaultProperties: {
 *                 keyUri: "https://cmk2xkv.vault.azure.net/keys/Key1/0767b348bb1a4c07baa6c4ec0055d2b3",
 *             },
 *         },
 *         publicNetworkAccess: "Enabled",
 *     },
 *     resourceGroupName: "Default-RecoveryServices-ResourceGroup",
 *     sku: {
 *         name: "Standard",
 *     },
 *     vaultName: "swaggerExample",
 * });
 *
 * ```
 * ### Create or Update Vault with User Assigned Identity
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure_native from "@pulumi/azure-native";
 *
 * const vault = new azure_native.recoveryservices.Vault("vault", {
 *     identity: {
 *         type: "UserAssigned",
 *         userAssignedIdentities: {
 *             "/subscriptions/85bf5e8c-3084-4f42-add2-746ebb7e97b2/resourcegroups/defaultrg/providers/Microsoft.ManagedIdentity/userAssignedIdentities/examplemsi": {},
 *         },
 *     },
 *     location: "West US",
 *     properties: {
 *         publicNetworkAccess: "Enabled",
 *     },
 *     resourceGroupName: "Default-RecoveryServices-ResourceGroup",
 *     sku: {
 *         name: "Standard",
 *     },
 *     vaultName: "swaggerExample",
 * });
 *
 * ```
 *
 * ## Import
 *
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 *
 * ```sh
 * $ pulumi import azure-native:recoveryservices:Vault swaggerExample /subscriptions/77777777-b0c6-47a2-b37c-d8e65a629c18/resourceGroups/Default-RecoveryServices-ResourceGroup/providers/Microsoft.RecoveryServices/vaults/swaggerExample 
 * ```
 */
export class Vault extends pulumi.CustomResource {
    /**
     * Get an existing Vault resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Vault {
        return new Vault(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:recoveryservices:Vault';

    /**
     * Returns true if the given object is an instance of Vault.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Vault {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Vault.__pulumiType;
    }

    /**
     * Optional ETag.
     */
    public /*out*/ readonly etag!: pulumi.Output<string | undefined>;
    /**
     * Identity for the resource.
     */
    public readonly identity!: pulumi.Output<outputs.recoveryservices.IdentityDataResponse | undefined>;
    /**
     * Resource location.
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * Resource name associated with the resource.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Properties of the vault.
     */
    public readonly properties!: pulumi.Output<outputs.recoveryservices.VaultPropertiesResponse>;
    /**
     * Identifies the unique system identifier for each Azure resource.
     */
    public readonly sku!: pulumi.Output<outputs.recoveryservices.SkuResponse | undefined>;
    /**
     * Metadata pertaining to creation and last modification of the resource.
     */
    public /*out*/ readonly systemData!: pulumi.Output<outputs.recoveryservices.SystemDataResponse>;
    /**
     * Resource tags.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Resource type represents the complete path of the form Namespace/ResourceType/ResourceType/...
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a Vault resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VaultArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["identity"] = args ? args.identity : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["properties"] = args ? args.properties : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["sku"] = args ? args.sku : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["vaultName"] = args ? args.vaultName : undefined;
            resourceInputs["etag"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        } else {
            resourceInputs["etag"] = undefined /*out*/;
            resourceInputs["identity"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["properties"] = undefined /*out*/;
            resourceInputs["sku"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:recoveryservices/v20160601:Vault" }, { type: "azure-native:recoveryservices/v20200202:Vault" }, { type: "azure-native:recoveryservices/v20201001:Vault" }, { type: "azure-native:recoveryservices/v20210101:Vault" }, { type: "azure-native:recoveryservices/v20210210:Vault" }, { type: "azure-native:recoveryservices/v20210301:Vault" }, { type: "azure-native:recoveryservices/v20210401:Vault" }, { type: "azure-native:recoveryservices/v20210601:Vault" }, { type: "azure-native:recoveryservices/v20210701:Vault" }, { type: "azure-native:recoveryservices/v20210801:Vault" }, { type: "azure-native:recoveryservices/v20211101preview:Vault" }, { type: "azure-native:recoveryservices/v20211201:Vault" }, { type: "azure-native:recoveryservices/v20220101:Vault" }, { type: "azure-native:recoveryservices/v20220131preview:Vault" }, { type: "azure-native:recoveryservices/v20220201:Vault" }, { type: "azure-native:recoveryservices/v20220301:Vault" }, { type: "azure-native:recoveryservices/v20220401:Vault" }, { type: "azure-native:recoveryservices/v20220501:Vault" }, { type: "azure-native:recoveryservices/v20220801:Vault" }, { type: "azure-native:recoveryservices/v20220910:Vault" }, { type: "azure-native:recoveryservices/v20220930preview:Vault" }, { type: "azure-native:recoveryservices/v20221001:Vault" }, { type: "azure-native:recoveryservices/v20230101:Vault" }, { type: "azure-native:recoveryservices/v20230201:Vault" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(Vault.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Vault resource.
 */
export interface VaultArgs {
    /**
     * Identity for the resource.
     */
    identity?: pulumi.Input<inputs.recoveryservices.IdentityDataArgs>;
    /**
     * Resource location.
     */
    location?: pulumi.Input<string>;
    /**
     * Properties of the vault.
     */
    properties?: pulumi.Input<inputs.recoveryservices.VaultPropertiesArgs>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Identifies the unique system identifier for each Azure resource.
     */
    sku?: pulumi.Input<inputs.recoveryservices.SkuArgs>;
    /**
     * Resource tags.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The name of the recovery services vault.
     */
    vaultName?: pulumi.Input<string>;
}
