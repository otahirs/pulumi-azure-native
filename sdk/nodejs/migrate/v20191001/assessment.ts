// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * An assessment created for a group in the Migration project.
 *
 * ## Example Usage
 * ### Assessments_Create
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure_native from "@pulumi/azure-native";
 *
 * const assessment = new azure_native.migrate.v20191001.Assessment("assessment", {
 *     assessmentName: "assessment_5_14_2019_16_48_47",
 *     eTag: "\"1e000c2c-0000-0d00-0000-5cdaa4190000\"",
 *     groupName: "Group2",
 *     projectName: "abgoyalWEselfhostb72bproject",
 *     properties: {
 *         azureDiskType: "StandardOrPremium",
 *         azureHybridUseBenefit: "Yes",
 *         azureLocation: "NorthEurope",
 *         azureOfferCode: "MSAZR0003P",
 *         azurePricingTier: "Standard",
 *         azureStorageRedundancy: "LocallyRedundant",
 *         azureVmFamilies: [
 *             "Dv2_series",
 *             "F_series",
 *             "Dv3_series",
 *             "DS_series",
 *             "DSv2_series",
 *             "Fs_series",
 *             "Dsv3_series",
 *             "Ev3_series",
 *             "Esv3_series",
 *             "D_series",
 *             "M_series",
 *             "Fsv2_series",
 *             "H_series",
 *         ],
 *         currency: "USD",
 *         discountPercentage: 100,
 *         percentile: "Percentile95",
 *         reservedInstance: "RI3Year",
 *         scalingFactor: 1,
 *         sizingCriterion: "PerformanceBased",
 *         stage: "InProgress",
 *         timeRange: "Day",
 *         vmUptime: {
 *             daysPerMonth: 31,
 *             hoursPerDay: 24,
 *         },
 *     },
 *     resourceGroupName: "abgoyal-westEurope",
 * });
 *
 * ```
 *
 * ## Import
 *
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 *
 * ```sh
 * $ pulumi import azure-native:migrate/v20191001:Assessment assessment_5_14_2019_16_48_47 /subscriptions/6393a73f-8d55-47ef-b6dd-179b3e0c7910/resourceGroups/abgoyal-westeurope/providers/Microsoft.Migrate/assessmentprojects/abgoyalWEselfhostb72bproject/groups/Group2/assessments/assessment_5_14_2019_16_48_47 
 * ```
 */
export class Assessment extends pulumi.CustomResource {
    /**
     * Get an existing Assessment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Assessment {
        return new Assessment(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:migrate/v20191001:Assessment';

    /**
     * Returns true if the given object is an instance of Assessment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Assessment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Assessment.__pulumiType;
    }

    /**
     * For optimistic concurrency control.
     */
    public readonly eTag!: pulumi.Output<string | undefined>;
    /**
     * Unique name of an assessment.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Properties of the assessment.
     */
    public readonly properties!: pulumi.Output<outputs.migrate.v20191001.AssessmentPropertiesResponse>;
    /**
     * Type of the object = [Microsoft.Migrate/assessmentProjects/groups/assessments].
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a Assessment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AssessmentArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.groupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'groupName'");
            }
            if ((!args || args.projectName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'projectName'");
            }
            if ((!args || args.properties === undefined) && !opts.urn) {
                throw new Error("Missing required property 'properties'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["assessmentName"] = args ? args.assessmentName : undefined;
            resourceInputs["eTag"] = args ? args.eTag : undefined;
            resourceInputs["groupName"] = args ? args.groupName : undefined;
            resourceInputs["projectName"] = args ? args.projectName : undefined;
            resourceInputs["properties"] = args ? args.properties : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        } else {
            resourceInputs["eTag"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["properties"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:migrate:Assessment" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(Assessment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Assessment resource.
 */
export interface AssessmentArgs {
    /**
     * Unique name of an assessment within a project.
     */
    assessmentName?: pulumi.Input<string>;
    /**
     * For optimistic concurrency control.
     */
    eTag?: pulumi.Input<string>;
    /**
     * Unique name of a group within a project.
     */
    groupName: pulumi.Input<string>;
    /**
     * Name of the Azure Migrate project.
     */
    projectName: pulumi.Input<string>;
    /**
     * Properties of the assessment.
     */
    properties: pulumi.Input<inputs.migrate.v20191001.AssessmentPropertiesArgs>;
    /**
     * Name of the Azure Resource Group that project is part of.
     */
    resourceGroupName: pulumi.Input<string>;
}
