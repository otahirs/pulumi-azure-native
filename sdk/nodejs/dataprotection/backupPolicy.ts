// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * BaseBackupPolicy resource
 * API Version: 2023-01-01.
 * Previous API Version: 2021-01-01. See https://github.com/pulumi/pulumi-azure-native/discussions/TODO for information on migrating from v1 to v2 of the provider.
 *
 * ## Example Usage
 * ### CreateOrUpdate BackupPolicy
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure_native from "@pulumi/azure-native";
 *
 * const backupPolicy = new azure_native.dataprotection.BackupPolicy("backupPolicy", {
 *     backupPolicyName: "OSSDBPolicy",
 *     properties: {
 *         datasourceTypes: ["OssDB"],
 *         objectType: "BackupPolicy",
 *         policyRules: [
 *             {
 *                 backupParameters: {
 *                     backupType: "Full",
 *                     objectType: "AzureBackupParams",
 *                 },
 *                 dataStore: {
 *                     dataStoreType: "VaultStore",
 *                     objectType: "DataStoreInfoBase",
 *                 },
 *                 name: "BackupWeekly",
 *                 objectType: "AzureBackupRule",
 *                 trigger: {
 *                     objectType: "ScheduleBasedTriggerContext",
 *                     schedule: {
 *                         repeatingTimeIntervals: ["R/2019-11-20T08:00:00-08:00/P1W"],
 *                     },
 *                     taggingCriteria: [
 *                         {
 *                             isDefault: true,
 *                             tagInfo: {
 *                                 tagName: "Default",
 *                             },
 *                             taggingPriority: 99,
 *                         },
 *                         {
 *                             criteria: [{
 *                                 daysOfTheWeek: ["Sunday"],
 *                                 objectType: "ScheduleBasedBackupCriteria",
 *                                 scheduleTimes: ["2019-03-01T13:00:00Z"],
 *                             }],
 *                             isDefault: false,
 *                             tagInfo: {
 *                                 tagName: "Weekly",
 *                             },
 *                             taggingPriority: 20,
 *                         },
 *                     ],
 *                 },
 *             },
 *             {
 *                 isDefault: true,
 *                 lifecycles: [{
 *                     deleteAfter: {
 *                         duration: "P1W",
 *                         objectType: "AbsoluteDeleteOption",
 *                     },
 *                     sourceDataStore: {
 *                         dataStoreType: "VaultStore",
 *                         objectType: "DataStoreInfoBase",
 *                     },
 *                 }],
 *                 name: "Default",
 *                 objectType: "AzureRetentionRule",
 *             },
 *             {
 *                 isDefault: false,
 *                 lifecycles: [{
 *                     deleteAfter: {
 *                         duration: "P12W",
 *                         objectType: "AbsoluteDeleteOption",
 *                     },
 *                     sourceDataStore: {
 *                         dataStoreType: "VaultStore",
 *                         objectType: "DataStoreInfoBase",
 *                     },
 *                 }],
 *                 name: "Weekly",
 *                 objectType: "AzureRetentionRule",
 *             },
 *         ],
 *     },
 *     resourceGroupName: "000pikumar",
 *     vaultName: "PrivatePreviewVault",
 * });
 *
 * ```
 *
 * ## Import
 *
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 *
 * ```sh
 * $ pulumi import azure-native:dataprotection:BackupPolicy OSSDBPolicy /subscriptions/04cf684a-d41f-4550-9f70-7708a3a2283b/resourceGroups/000pikumar/providers/Microsoft.DataProtection/backupVaults/PrivatePreviewVault/backupPolicies/OSSDBPolicy 
 * ```
 */
export class BackupPolicy extends pulumi.CustomResource {
    /**
     * Get an existing BackupPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): BackupPolicy {
        return new BackupPolicy(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:dataprotection:BackupPolicy';

    /**
     * Returns true if the given object is an instance of BackupPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BackupPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BackupPolicy.__pulumiType;
    }

    /**
     * Resource name associated with the resource.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * BaseBackupPolicyResource properties
     */
    public readonly properties!: pulumi.Output<outputs.dataprotection.BackupPolicyResponse>;
    /**
     * Metadata pertaining to creation and last modification of the resource.
     */
    public /*out*/ readonly systemData!: pulumi.Output<outputs.dataprotection.SystemDataResponse>;
    /**
     * Resource type represents the complete path of the form Namespace/ResourceType/ResourceType/...
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a BackupPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BackupPolicyArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.vaultName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vaultName'");
            }
            resourceInputs["backupPolicyName"] = args ? args.backupPolicyName : undefined;
            resourceInputs["properties"] = args ? args.properties : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["vaultName"] = args ? args.vaultName : undefined;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        } else {
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["properties"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:dataprotection/v20210101:BackupPolicy" }, { type: "azure-native:dataprotection/v20210201preview:BackupPolicy" }, { type: "azure-native:dataprotection/v20210601preview:BackupPolicy" }, { type: "azure-native:dataprotection/v20210701:BackupPolicy" }, { type: "azure-native:dataprotection/v20211001preview:BackupPolicy" }, { type: "azure-native:dataprotection/v20211201preview:BackupPolicy" }, { type: "azure-native:dataprotection/v20220101:BackupPolicy" }, { type: "azure-native:dataprotection/v20220201preview:BackupPolicy" }, { type: "azure-native:dataprotection/v20220301:BackupPolicy" }, { type: "azure-native:dataprotection/v20220331preview:BackupPolicy" }, { type: "azure-native:dataprotection/v20220401:BackupPolicy" }, { type: "azure-native:dataprotection/v20220501:BackupPolicy" }, { type: "azure-native:dataprotection/v20220901preview:BackupPolicy" }, { type: "azure-native:dataprotection/v20221001preview:BackupPolicy" }, { type: "azure-native:dataprotection/v20221101preview:BackupPolicy" }, { type: "azure-native:dataprotection/v20221201:BackupPolicy" }, { type: "azure-native:dataprotection/v20230101:BackupPolicy" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(BackupPolicy.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a BackupPolicy resource.
 */
export interface BackupPolicyArgs {
    /**
     * Name of the policy
     */
    backupPolicyName?: pulumi.Input<string>;
    /**
     * BaseBackupPolicyResource properties
     */
    properties?: pulumi.Input<inputs.dataprotection.BackupPolicyArgs>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the backup vault.
     */
    vaultName: pulumi.Input<string>;
}
