// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * BackupInstance Resource
 *
 * ## Example Usage
 * ### Create BackupInstance
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure_native from "@pulumi/azure-native";
 *
 * const backupInstance = new azure_native.dataprotection.v20230101.BackupInstance("backupInstance", {
 *     backupInstanceName: "testInstance1",
 *     properties: {
 *         dataSourceInfo: {
 *             datasourceType: "Microsoft.DBforPostgreSQL/servers/databases",
 *             objectType: "Datasource",
 *             resourceID: "/subscriptions/f75d8d8b-6735-4697-82e1-1a7a3ff0d5d4/resourceGroups/viveksipgtest/providers/Microsoft.DBforPostgreSQL/servers/viveksipgtest/databases/testdb",
 *             resourceLocation: "",
 *             resourceName: "testdb",
 *             resourceType: "Microsoft.DBforPostgreSQL/servers/databases",
 *             resourceUri: "",
 *         },
 *         dataSourceSetInfo: {
 *             datasourceType: "Microsoft.DBforPostgreSQL/servers/databases",
 *             objectType: "DatasourceSet",
 *             resourceID: "/subscriptions/f75d8d8b-6735-4697-82e1-1a7a3ff0d5d4/resourceGroups/viveksipgtest/providers/Microsoft.DBforPostgreSQL/servers/viveksipgtest",
 *             resourceLocation: "",
 *             resourceName: "viveksipgtest",
 *             resourceType: "Microsoft.DBforPostgreSQL/servers",
 *             resourceUri: "",
 *         },
 *         datasourceAuthCredentials: {
 *             objectType: "SecretStoreBasedAuthCredentials",
 *             secretStoreResource: {
 *                 secretStoreType: "AzureKeyVault",
 *                 uri: "https://samplevault.vault.azure.net/secrets/credentials",
 *             },
 *         },
 *         friendlyName: "harshitbi2",
 *         objectType: "BackupInstance",
 *         policyInfo: {
 *             policyId: "/subscriptions/04cf684a-d41f-4550-9f70-7708a3a2283b/resourceGroups/000pikumar/providers/Microsoft.DataProtection/Backupvaults/PratikPrivatePreviewVault1/backupPolicies/PratikPolicy1",
 *             policyParameters: {
 *                 dataStoreParametersList: [{
 *                     dataStoreType: "OperationalStore",
 *                     objectType: "AzureOperationalStoreParameters",
 *                     resourceGroupId: "/subscriptions/f75d8d8b-6735-4697-82e1-1a7a3ff0d5d4/resourceGroups/viveksipgtest",
 *                 }],
 *             },
 *         },
 *         validationType: "ShallowValidation",
 *     },
 *     resourceGroupName: "000pikumar",
 *     tags: {
 *         key1: "val1",
 *     },
 *     vaultName: "PratikPrivatePreviewVault1",
 * });
 *
 * ```
 *
 * ## Import
 *
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 *
 * ```sh
 * $ pulumi import azure-native:dataprotection/v20230101:BackupInstance harshitbi2 /subscriptions/04cf684a-d41f-4550-9f70-7708a3a2283b/resourceGroups/000pikumar/providers/Microsoft.DataProtection/backupVaults/PratikPrivatePreviewVault1/backupInstances/harshitbi2 
 * ```
 */
export class BackupInstance extends pulumi.CustomResource {
    /**
     * Get an existing BackupInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): BackupInstance {
        return new BackupInstance(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:dataprotection/v20230101:BackupInstance';

    /**
     * Returns true if the given object is an instance of BackupInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BackupInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BackupInstance.__pulumiType;
    }

    /**
     * Proxy Resource name associated with the resource.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * BackupInstanceResource properties
     */
    public readonly properties!: pulumi.Output<outputs.dataprotection.v20230101.BackupInstanceResponse>;
    /**
     * Metadata pertaining to creation and last modification of the resource.
     */
    public /*out*/ readonly systemData!: pulumi.Output<outputs.dataprotection.v20230101.SystemDataResponse>;
    /**
     * Proxy Resource tags.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Proxy Resource type represents the complete path of the form Namespace/ResourceType/ResourceType/...
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a BackupInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BackupInstanceArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.vaultName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vaultName'");
            }
            resourceInputs["backupInstanceName"] = args ? args.backupInstanceName : undefined;
            resourceInputs["properties"] = args ? args.properties : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["vaultName"] = args ? args.vaultName : undefined;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        } else {
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["properties"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:dataprotection:BackupInstance" }, { type: "azure-native:dataprotection/v20210101:BackupInstance" }, { type: "azure-native:dataprotection/v20210201preview:BackupInstance" }, { type: "azure-native:dataprotection/v20210601preview:BackupInstance" }, { type: "azure-native:dataprotection/v20210701:BackupInstance" }, { type: "azure-native:dataprotection/v20211001preview:BackupInstance" }, { type: "azure-native:dataprotection/v20211201preview:BackupInstance" }, { type: "azure-native:dataprotection/v20220101:BackupInstance" }, { type: "azure-native:dataprotection/v20220201preview:BackupInstance" }, { type: "azure-native:dataprotection/v20220301:BackupInstance" }, { type: "azure-native:dataprotection/v20220331preview:BackupInstance" }, { type: "azure-native:dataprotection/v20220401:BackupInstance" }, { type: "azure-native:dataprotection/v20220501:BackupInstance" }, { type: "azure-native:dataprotection/v20220901preview:BackupInstance" }, { type: "azure-native:dataprotection/v20221001preview:BackupInstance" }, { type: "azure-native:dataprotection/v20221101preview:BackupInstance" }, { type: "azure-native:dataprotection/v20221201:BackupInstance" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(BackupInstance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a BackupInstance resource.
 */
export interface BackupInstanceArgs {
    /**
     * The name of the backup instance.
     */
    backupInstanceName?: pulumi.Input<string>;
    /**
     * BackupInstanceResource properties
     */
    properties?: pulumi.Input<inputs.dataprotection.v20230101.BackupInstanceArgs>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Proxy Resource tags.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The name of the backup vault.
     */
    vaultName: pulumi.Input<string>;
}
