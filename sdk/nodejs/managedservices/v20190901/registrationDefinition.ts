// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Registration definition.
 *
 * ## Example Usage
 * ### Put Registration Definition
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure_native from "@pulumi/azure-native";
 *
 * const registrationDefinition = new azure_native.managedservices.v20190901.RegistrationDefinition("registrationDefinition", {
 *     plan: {
 *         name: "addesai-plan",
 *         product: "test",
 *         publisher: "marketplace-test",
 *         version: "1.0.0",
 *     },
 *     properties: {
 *         authorizations: [
 *             {
 *                 principalId: "f98d86a2-4cc4-4e9d-ad47-b3e80a1bcdfc",
 *                 principalIdDisplayName: "Support User",
 *                 roleDefinitionId: "acdd72a7-3385-48ef-bd42-f606fba81ae7",
 *             },
 *             {
 *                 delegatedRoleDefinitionIds: ["b24988ac-6180-42a0-ab88-20f7382dd24c"],
 *                 principalId: "f98d86a2-4cc4-4e9d-ad47-b3e80a1bcdfc",
 *                 principalIdDisplayName: "User Access Administrator",
 *                 roleDefinitionId: "18d7d88d-d35e-4fb5-a5c3-7773c20a72d9",
 *             },
 *         ],
 *         description: "Tes1t",
 *         managedByTenantId: "83abe5cd-bcc3-441a-bd86-e6a75360cecc",
 *         registrationDefinitionName: "DefinitionName",
 *     },
 *     registrationDefinitionId: "26c128c2-fefa-4340-9bb1-6e081c90ada2",
 *     scope: "subscription/0afefe50-734e-4610-8a82-a144ahf49dea",
 * });
 *
 * ```
 *
 * ## Import
 *
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 *
 * ```sh
 * $ pulumi import azure-native:managedservices/v20190901:RegistrationDefinition 26c128c2-fefa-4340-9bb1-6e081c90ada2 /subscriptions/0afefe50-734e-4610-8a82-a144ahf49dea/providers/Microsoft.ManagedServices/registrationDefinitions/26c128c2-fefa-4340-9bb1-6e081c90ada2 
 * ```
 */
export class RegistrationDefinition extends pulumi.CustomResource {
    /**
     * Get an existing RegistrationDefinition resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): RegistrationDefinition {
        return new RegistrationDefinition(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:managedservices/v20190901:RegistrationDefinition';

    /**
     * Returns true if the given object is an instance of RegistrationDefinition.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RegistrationDefinition {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RegistrationDefinition.__pulumiType;
    }

    /**
     * Name of the registration definition.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Plan details for the managed services.
     */
    public readonly plan!: pulumi.Output<outputs.managedservices.v20190901.PlanResponse | undefined>;
    /**
     * Properties of a registration definition.
     */
    public readonly properties!: pulumi.Output<outputs.managedservices.v20190901.RegistrationDefinitionPropertiesResponse>;
    /**
     * Type of the resource.
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a RegistrationDefinition resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RegistrationDefinitionArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.scope === undefined) && !opts.urn) {
                throw new Error("Missing required property 'scope'");
            }
            resourceInputs["plan"] = args ? args.plan : undefined;
            resourceInputs["properties"] = args ? args.properties : undefined;
            resourceInputs["registrationDefinitionId"] = args ? args.registrationDefinitionId : undefined;
            resourceInputs["scope"] = args ? args.scope : undefined;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        } else {
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["plan"] = undefined /*out*/;
            resourceInputs["properties"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:managedservices:RegistrationDefinition" }, { type: "azure-native:managedservices/v20180601preview:RegistrationDefinition" }, { type: "azure-native:managedservices/v20190401preview:RegistrationDefinition" }, { type: "azure-native:managedservices/v20190601:RegistrationDefinition" }, { type: "azure-native:managedservices/v20200201preview:RegistrationDefinition" }, { type: "azure-native:managedservices/v20220101preview:RegistrationDefinition" }, { type: "azure-native:managedservices/v20221001:RegistrationDefinition" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(RegistrationDefinition.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a RegistrationDefinition resource.
 */
export interface RegistrationDefinitionArgs {
    /**
     * Plan details for the managed services.
     */
    plan?: pulumi.Input<inputs.managedservices.v20190901.PlanArgs>;
    /**
     * Properties of a registration definition.
     */
    properties?: pulumi.Input<inputs.managedservices.v20190901.RegistrationDefinitionPropertiesArgs>;
    /**
     * Guid of the registration definition.
     */
    registrationDefinitionId?: pulumi.Input<string>;
    /**
     * Scope of the resource.
     */
    scope: pulumi.Input<string>;
}
