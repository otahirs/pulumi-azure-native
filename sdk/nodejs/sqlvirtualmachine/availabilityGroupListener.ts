// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * A SQL Server availability group listener.
 * API Version: 2022-02-01.
 * Previous API Version: 2017-03-01-preview. See https://github.com/pulumi/pulumi-azure-native/discussions/TODO for information on migrating from v1 to v2 of the provider.
 *
 * ## Example Usage
 * ### Creates or updates an availability group listener using load balancer. This is used for VMs present in single subnet.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure_native from "@pulumi/azure-native";
 *
 * const availabilityGroupListener = new azure_native.sqlvirtualmachine.AvailabilityGroupListener("availabilityGroupListener", {
 *     availabilityGroupListenerName: "agl-test",
 *     availabilityGroupName: "ag-test",
 *     loadBalancerConfigurations: [{
 *         loadBalancerResourceId: "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.Network/loadBalancers/lb-test",
 *         privateIpAddress: {
 *             ipAddress: "10.1.0.112",
 *             subnetResourceId: "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.Network/virtualNetworks/test-vnet/subnets/default",
 *         },
 *         probePort: 59983,
 *         sqlVirtualMachineInstances: [
 *             "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.SqlVirtualMachine/sqlVirtualMachines/testvm2",
 *             "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.SqlVirtualMachine/sqlVirtualMachines/testvm3",
 *         ],
 *     }],
 *     port: 1433,
 *     resourceGroupName: "testrg",
 *     sqlVirtualMachineGroupName: "testvmgroup",
 * });
 *
 * ```
 * ### Creates or updates an availability group listener. This is used for VMs present in multi subnet
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure_native from "@pulumi/azure-native";
 *
 * const availabilityGroupListener = new azure_native.sqlvirtualmachine.AvailabilityGroupListener("availabilityGroupListener", {
 *     availabilityGroupListenerName: "agl-test",
 *     availabilityGroupName: "ag-test",
 *     multiSubnetIpConfigurations: [
 *         {
 *             privateIpAddress: {
 *                 ipAddress: "10.0.0.112",
 *                 subnetResourceId: "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.Network/virtualNetworks/test-vnet/subnets/default",
 *             },
 *             sqlVirtualMachineInstance: "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.SqlVirtualMachine/sqlVirtualMachines/testvm2",
 *         },
 *         {
 *             privateIpAddress: {
 *                 ipAddress: "10.0.1.112",
 *                 subnetResourceId: "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.Network/virtualNetworks/test-vnet/subnets/alternate",
 *             },
 *             sqlVirtualMachineInstance: "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.SqlVirtualMachine/sqlVirtualMachines/testvm1",
 *         },
 *     ],
 *     port: 1433,
 *     resourceGroupName: "testrg",
 *     sqlVirtualMachineGroupName: "testvmgroup",
 * });
 *
 * ```
 *
 * ## Import
 *
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 *
 * ```sh
 * $ pulumi import azure-native:sqlvirtualmachine:AvailabilityGroupListener agl-test /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.SqlVirtualMachine/sqlVirtualMachineGroups/testvmgroup/availabilityGroupListeners/agl-test 
 * ```
 */
export class AvailabilityGroupListener extends pulumi.CustomResource {
    /**
     * Get an existing AvailabilityGroupListener resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): AvailabilityGroupListener {
        return new AvailabilityGroupListener(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:sqlvirtualmachine:AvailabilityGroupListener';

    /**
     * Returns true if the given object is an instance of AvailabilityGroupListener.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AvailabilityGroupListener {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AvailabilityGroupListener.__pulumiType;
    }

    /**
     * Availability Group configuration.
     */
    public readonly availabilityGroupConfiguration!: pulumi.Output<outputs.sqlvirtualmachine.AgConfigurationResponse | undefined>;
    /**
     * Name of the availability group.
     */
    public readonly availabilityGroupName!: pulumi.Output<string | undefined>;
    /**
     * Create a default availability group if it does not exist.
     */
    public readonly createDefaultAvailabilityGroupIfNotExist!: pulumi.Output<boolean | undefined>;
    /**
     * List of load balancer configurations for an availability group listener.
     */
    public readonly loadBalancerConfigurations!: pulumi.Output<outputs.sqlvirtualmachine.LoadBalancerConfigurationResponse[] | undefined>;
    /**
     * List of multi subnet IP configurations for an AG listener.
     */
    public readonly multiSubnetIpConfigurations!: pulumi.Output<outputs.sqlvirtualmachine.MultiSubnetIpConfigurationResponse[] | undefined>;
    /**
     * Resource name.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Listener port.
     */
    public readonly port!: pulumi.Output<number | undefined>;
    /**
     * Provisioning state to track the async operation status.
     */
    public /*out*/ readonly provisioningState!: pulumi.Output<string>;
    /**
     * Metadata pertaining to creation and last modification of the resource.
     */
    public /*out*/ readonly systemData!: pulumi.Output<outputs.sqlvirtualmachine.SystemDataResponse>;
    /**
     * Resource type.
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a AvailabilityGroupListener resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AvailabilityGroupListenerArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.sqlVirtualMachineGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sqlVirtualMachineGroupName'");
            }
            resourceInputs["availabilityGroupConfiguration"] = args ? args.availabilityGroupConfiguration : undefined;
            resourceInputs["availabilityGroupListenerName"] = args ? args.availabilityGroupListenerName : undefined;
            resourceInputs["availabilityGroupName"] = args ? args.availabilityGroupName : undefined;
            resourceInputs["createDefaultAvailabilityGroupIfNotExist"] = args ? args.createDefaultAvailabilityGroupIfNotExist : undefined;
            resourceInputs["loadBalancerConfigurations"] = args ? args.loadBalancerConfigurations : undefined;
            resourceInputs["multiSubnetIpConfigurations"] = args ? args.multiSubnetIpConfigurations : undefined;
            resourceInputs["port"] = args ? args.port : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["sqlVirtualMachineGroupName"] = args ? args.sqlVirtualMachineGroupName : undefined;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        } else {
            resourceInputs["availabilityGroupConfiguration"] = undefined /*out*/;
            resourceInputs["availabilityGroupName"] = undefined /*out*/;
            resourceInputs["createDefaultAvailabilityGroupIfNotExist"] = undefined /*out*/;
            resourceInputs["loadBalancerConfigurations"] = undefined /*out*/;
            resourceInputs["multiSubnetIpConfigurations"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["port"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:sqlvirtualmachine/v20170301preview:AvailabilityGroupListener" }, { type: "azure-native:sqlvirtualmachine/v20211101preview:AvailabilityGroupListener" }, { type: "azure-native:sqlvirtualmachine/v20220201:AvailabilityGroupListener" }, { type: "azure-native:sqlvirtualmachine/v20220201preview:AvailabilityGroupListener" }, { type: "azure-native:sqlvirtualmachine/v20220701preview:AvailabilityGroupListener" }, { type: "azure-native:sqlvirtualmachine/v20220801preview:AvailabilityGroupListener" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(AvailabilityGroupListener.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a AvailabilityGroupListener resource.
 */
export interface AvailabilityGroupListenerArgs {
    /**
     * Availability Group configuration.
     */
    availabilityGroupConfiguration?: pulumi.Input<inputs.sqlvirtualmachine.AgConfigurationArgs>;
    /**
     * Name of the availability group listener.
     */
    availabilityGroupListenerName?: pulumi.Input<string>;
    /**
     * Name of the availability group.
     */
    availabilityGroupName?: pulumi.Input<string>;
    /**
     * Create a default availability group if it does not exist.
     */
    createDefaultAvailabilityGroupIfNotExist?: pulumi.Input<boolean>;
    /**
     * List of load balancer configurations for an availability group listener.
     */
    loadBalancerConfigurations?: pulumi.Input<pulumi.Input<inputs.sqlvirtualmachine.LoadBalancerConfigurationArgs>[]>;
    /**
     * List of multi subnet IP configurations for an AG listener.
     */
    multiSubnetIpConfigurations?: pulumi.Input<pulumi.Input<inputs.sqlvirtualmachine.MultiSubnetIpConfigurationArgs>[]>;
    /**
     * Listener port.
     */
    port?: pulumi.Input<number>;
    /**
     * Name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Name of the SQL virtual machine group.
     */
    sqlVirtualMachineGroupName: pulumi.Input<string>;
}
