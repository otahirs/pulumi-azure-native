// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { AFDCustomDomainArgs } from "./afdcustomDomain";
export type AFDCustomDomain = import("./afdcustomDomain").AFDCustomDomain;
export const AFDCustomDomain: typeof import("./afdcustomDomain").AFDCustomDomain = null as any;
utilities.lazyLoad(exports, ["AFDCustomDomain"], () => require("./afdcustomDomain"));

export { AFDEndpointArgs } from "./afdendpoint";
export type AFDEndpoint = import("./afdendpoint").AFDEndpoint;
export const AFDEndpoint: typeof import("./afdendpoint").AFDEndpoint = null as any;
utilities.lazyLoad(exports, ["AFDEndpoint"], () => require("./afdendpoint"));

export { AFDOriginArgs } from "./afdorigin";
export type AFDOrigin = import("./afdorigin").AFDOrigin;
export const AFDOrigin: typeof import("./afdorigin").AFDOrigin = null as any;
utilities.lazyLoad(exports, ["AFDOrigin"], () => require("./afdorigin"));

export { AFDOriginGroupArgs } from "./afdoriginGroup";
export type AFDOriginGroup = import("./afdoriginGroup").AFDOriginGroup;
export const AFDOriginGroup: typeof import("./afdoriginGroup").AFDOriginGroup = null as any;
utilities.lazyLoad(exports, ["AFDOriginGroup"], () => require("./afdoriginGroup"));

export { GetAFDCustomDomainArgs, GetAFDCustomDomainResult, GetAFDCustomDomainOutputArgs } from "./getAFDCustomDomain";
export const getAFDCustomDomain: typeof import("./getAFDCustomDomain").getAFDCustomDomain = null as any;
export const getAFDCustomDomainOutput: typeof import("./getAFDCustomDomain").getAFDCustomDomainOutput = null as any;
utilities.lazyLoad(exports, ["getAFDCustomDomain","getAFDCustomDomainOutput"], () => require("./getAFDCustomDomain"));

export { GetAFDEndpointArgs, GetAFDEndpointResult, GetAFDEndpointOutputArgs } from "./getAFDEndpoint";
export const getAFDEndpoint: typeof import("./getAFDEndpoint").getAFDEndpoint = null as any;
export const getAFDEndpointOutput: typeof import("./getAFDEndpoint").getAFDEndpointOutput = null as any;
utilities.lazyLoad(exports, ["getAFDEndpoint","getAFDEndpointOutput"], () => require("./getAFDEndpoint"));

export { GetAFDOriginArgs, GetAFDOriginResult, GetAFDOriginOutputArgs } from "./getAFDOrigin";
export const getAFDOrigin: typeof import("./getAFDOrigin").getAFDOrigin = null as any;
export const getAFDOriginOutput: typeof import("./getAFDOrigin").getAFDOriginOutput = null as any;
utilities.lazyLoad(exports, ["getAFDOrigin","getAFDOriginOutput"], () => require("./getAFDOrigin"));

export { GetAFDOriginGroupArgs, GetAFDOriginGroupResult, GetAFDOriginGroupOutputArgs } from "./getAFDOriginGroup";
export const getAFDOriginGroup: typeof import("./getAFDOriginGroup").getAFDOriginGroup = null as any;
export const getAFDOriginGroupOutput: typeof import("./getAFDOriginGroup").getAFDOriginGroupOutput = null as any;
utilities.lazyLoad(exports, ["getAFDOriginGroup","getAFDOriginGroupOutput"], () => require("./getAFDOriginGroup"));

export { GetProfileArgs, GetProfileResult, GetProfileOutputArgs } from "./getProfile";
export const getProfile: typeof import("./getProfile").getProfile = null as any;
export const getProfileOutput: typeof import("./getProfile").getProfileOutput = null as any;
utilities.lazyLoad(exports, ["getProfile","getProfileOutput"], () => require("./getProfile"));

export { GetRouteArgs, GetRouteResult, GetRouteOutputArgs } from "./getRoute";
export const getRoute: typeof import("./getRoute").getRoute = null as any;
export const getRouteOutput: typeof import("./getRoute").getRouteOutput = null as any;
utilities.lazyLoad(exports, ["getRoute","getRouteOutput"], () => require("./getRoute"));

export { GetRuleArgs, GetRuleResult, GetRuleOutputArgs } from "./getRule";
export const getRule: typeof import("./getRule").getRule = null as any;
export const getRuleOutput: typeof import("./getRule").getRuleOutput = null as any;
utilities.lazyLoad(exports, ["getRule","getRuleOutput"], () => require("./getRule"));

export { GetRuleSetArgs, GetRuleSetResult, GetRuleSetOutputArgs } from "./getRuleSet";
export const getRuleSet: typeof import("./getRuleSet").getRuleSet = null as any;
export const getRuleSetOutput: typeof import("./getRuleSet").getRuleSetOutput = null as any;
utilities.lazyLoad(exports, ["getRuleSet","getRuleSetOutput"], () => require("./getRuleSet"));

export { ProfileArgs } from "./profile";
export type Profile = import("./profile").Profile;
export const Profile: typeof import("./profile").Profile = null as any;
utilities.lazyLoad(exports, ["Profile"], () => require("./profile"));

export { RouteArgs } from "./route";
export type Route = import("./route").Route;
export const Route: typeof import("./route").Route = null as any;
utilities.lazyLoad(exports, ["Route"], () => require("./route"));

export { RuleArgs } from "./rule";
export type Rule = import("./rule").Rule;
export const Rule: typeof import("./rule").Rule = null as any;
utilities.lazyLoad(exports, ["Rule"], () => require("./rule"));

export { RuleSetArgs } from "./ruleSet";
export type RuleSet = import("./ruleSet").RuleSet;
export const RuleSet: typeof import("./ruleSet").RuleSet = null as any;
utilities.lazyLoad(exports, ["RuleSet"], () => require("./ruleSet"));


// Export enums:
export * from "../../types/enums/cdn/v20220501preview";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure-native:cdn/v20220501preview:AFDCustomDomain":
                return new AFDCustomDomain(name, <any>undefined, { urn })
            case "azure-native:cdn/v20220501preview:AFDEndpoint":
                return new AFDEndpoint(name, <any>undefined, { urn })
            case "azure-native:cdn/v20220501preview:AFDOrigin":
                return new AFDOrigin(name, <any>undefined, { urn })
            case "azure-native:cdn/v20220501preview:AFDOriginGroup":
                return new AFDOriginGroup(name, <any>undefined, { urn })
            case "azure-native:cdn/v20220501preview:Profile":
                return new Profile(name, <any>undefined, { urn })
            case "azure-native:cdn/v20220501preview:Route":
                return new Route(name, <any>undefined, { urn })
            case "azure-native:cdn/v20220501preview:Rule":
                return new Rule(name, <any>undefined, { urn })
            case "azure-native:cdn/v20220501preview:RuleSet":
                return new RuleSet(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure-native", "cdn/v20220501preview", _module)
