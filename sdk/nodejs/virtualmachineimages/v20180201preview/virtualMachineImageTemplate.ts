// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * ## Example Usage
 * ### Create an Image Template.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure_native from "@pulumi/azure-native";
 *
 * const virtualMachineImageTemplate = new azure_native.virtualmachineimages.v20180201preview.VirtualMachineImageTemplate("virtualMachineImageTemplate", {
 *     customize: [{
 *         name: "Shell Customizer Example",
 *         script: "https://example.com/path/to/script.sh",
 *         type: "shell",
 *     }],
 *     distribute: [{
 *         imageId: "/subscriptions/{subscription-id}/resourceGroups/rg1/providers/Microsoft.Compute/images/image_it_1",
 *         location: "1_location",
 *         runOutputName: "image_it_pir_1",
 *         type: "managedImage",
 *     }],
 *     imageTemplateName: "myImageTemplate",
 *     location: "westus",
 *     resourceGroupName: "myResourceGroup",
 *     source: {
 *         sha256Checksum: "120acbca7b3d55465eb9f8ef53ad7365f2997d42d4f83d7cc285bf5c71e1131f",
 *         sourceURI: "http://redhat.com/path/to/installation.iso",
 *         type: "ISO",
 *     },
 *     tags: {
 *         imagetemplate_tag1: "IT_T1",
 *         imagetemplate_tag2: "IT_T2",
 *     },
 * });
 *
 * ```
 *
 * ## Import
 *
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 *
 * ```sh
 * $ pulumi import azure-native:virtualmachineimages/v20180201preview:VirtualMachineImageTemplate myImageTemplate /subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.VirtualMachineImages/imageTemplates/myImageTemplate 
 * ```
 *
 * @deprecated Version 2018-02-01-preview will be removed in v2 of the provider.
 */
export class VirtualMachineImageTemplate extends pulumi.CustomResource {
    /**
     * Get an existing VirtualMachineImageTemplate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): VirtualMachineImageTemplate {
        pulumi.log.warn("VirtualMachineImageTemplate is deprecated: Version 2018-02-01-preview will be removed in v2 of the provider.")
        return new VirtualMachineImageTemplate(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:virtualmachineimages/v20180201preview:VirtualMachineImageTemplate';

    /**
     * Returns true if the given object is an instance of VirtualMachineImageTemplate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VirtualMachineImageTemplate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VirtualMachineImageTemplate.__pulumiType;
    }

    /**
     * Specifies the properties used to describe the customization steps of the image, like Image source etc
     */
    public readonly customize!: pulumi.Output<outputs.virtualmachineimages.v20180201preview.ImageTemplateShellCustomizerResponse[] | undefined>;
    /**
     * The distribution targets where the image output needs to go to.
     */
    public readonly distribute!: pulumi.Output<(outputs.virtualmachineimages.v20180201preview.ImageTemplateManagedImageDistributorResponse | outputs.virtualmachineimages.v20180201preview.ImageTemplateSharedImageDistributorResponse)[]>;
    /**
     * State of 'run' that is currently executing or was last executed.
     */
    public /*out*/ readonly lastRunStatus!: pulumi.Output<outputs.virtualmachineimages.v20180201preview.ImageTemplateLastRunStatusResponse>;
    /**
     * Resource location
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * Resource name
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Provisioning error, if any
     */
    public /*out*/ readonly provisioningError!: pulumi.Output<outputs.virtualmachineimages.v20180201preview.ProvisioningErrorResponse>;
    /**
     * Provisioning state of the resource
     */
    public /*out*/ readonly provisioningState!: pulumi.Output<string>;
    /**
     * Specifies the properties used to describe the source image.
     */
    public readonly source!: pulumi.Output<outputs.virtualmachineimages.v20180201preview.ImageTemplateIsoSourceResponse | outputs.virtualmachineimages.v20180201preview.ImageTemplatePlatformImageSourceResponse>;
    /**
     * Resource tags
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Resource type
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a VirtualMachineImageTemplate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated Version 2018-02-01-preview will be removed in v2 of the provider. */
    constructor(name: string, args: VirtualMachineImageTemplateArgs, opts?: pulumi.CustomResourceOptions) {
        pulumi.log.warn("VirtualMachineImageTemplate is deprecated: Version 2018-02-01-preview will be removed in v2 of the provider.")
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.distribute === undefined) && !opts.urn) {
                throw new Error("Missing required property 'distribute'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.source === undefined) && !opts.urn) {
                throw new Error("Missing required property 'source'");
            }
            resourceInputs["customize"] = args ? args.customize : undefined;
            resourceInputs["distribute"] = args ? args.distribute : undefined;
            resourceInputs["imageTemplateName"] = args ? args.imageTemplateName : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["source"] = args ? args.source : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["lastRunStatus"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["provisioningError"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        } else {
            resourceInputs["customize"] = undefined /*out*/;
            resourceInputs["distribute"] = undefined /*out*/;
            resourceInputs["lastRunStatus"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["provisioningError"] = undefined /*out*/;
            resourceInputs["provisioningState"] = undefined /*out*/;
            resourceInputs["source"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:virtualmachineimages:VirtualMachineImageTemplate" }, { type: "azure-native:virtualmachineimages/v20190201preview:VirtualMachineImageTemplate" }, { type: "azure-native:virtualmachineimages/v20190501preview:VirtualMachineImageTemplate" }, { type: "azure-native:virtualmachineimages/v20200214:VirtualMachineImageTemplate" }, { type: "azure-native:virtualmachineimages/v20211001:VirtualMachineImageTemplate" }, { type: "azure-native:virtualmachineimages/v20220214:VirtualMachineImageTemplate" }, { type: "azure-native:virtualmachineimages/v20220701:VirtualMachineImageTemplate" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(VirtualMachineImageTemplate.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a VirtualMachineImageTemplate resource.
 */
export interface VirtualMachineImageTemplateArgs {
    /**
     * Specifies the properties used to describe the customization steps of the image, like Image source etc
     */
    customize?: pulumi.Input<pulumi.Input<inputs.virtualmachineimages.v20180201preview.ImageTemplateShellCustomizerArgs>[]>;
    /**
     * The distribution targets where the image output needs to go to.
     */
    distribute: pulumi.Input<pulumi.Input<inputs.virtualmachineimages.v20180201preview.ImageTemplateManagedImageDistributorArgs | inputs.virtualmachineimages.v20180201preview.ImageTemplateSharedImageDistributorArgs>[]>;
    /**
     * The name of the image Template
     */
    imageTemplateName?: pulumi.Input<string>;
    /**
     * Resource location
     */
    location?: pulumi.Input<string>;
    /**
     * The name of the resource group.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Specifies the properties used to describe the source image.
     */
    source: pulumi.Input<inputs.virtualmachineimages.v20180201preview.ImageTemplateIsoSourceArgs | inputs.virtualmachineimages.v20180201preview.ImageTemplatePlatformImageSourceArgs>;
    /**
     * Resource tags
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
