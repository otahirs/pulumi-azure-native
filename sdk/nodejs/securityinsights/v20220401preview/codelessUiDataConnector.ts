// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Represents Codeless UI data connector.
 *
 * ## Example Usage
 * ### Creates or updates a APIPolling data connector
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure_native from "@pulumi/azure-native";
 *
 * const codelessUiDataConnector = new azure_native.securityinsights.v20220401preview.CodelessUiDataConnector("codelessUiDataConnector", {
 *     dataConnectorId: "316ec55e-7138-4d63-ab18-90c8a60fd1c8",
 *     resourceGroupName: "myRg",
 *     workspaceName: "myWorkspace",
 * });
 *
 * ```
 * ### Creates or updates a Dynamics365 data connector.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure_native from "@pulumi/azure-native";
 *
 * const codelessUiDataConnector = new azure_native.securityinsights.v20220401preview.CodelessUiDataConnector("codelessUiDataConnector", {
 *     dataConnectorId: "c2541efb-c9a6-47fe-9501-87d1017d1512",
 *     resourceGroupName: "myRg",
 *     workspaceName: "myWorkspace",
 * });
 *
 * ```
 * ### Creates or updates a GenericUI data connector
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure_native from "@pulumi/azure-native";
 *
 * const codelessUiDataConnector = new azure_native.securityinsights.v20220401preview.CodelessUiDataConnector("codelessUiDataConnector", {
 *     connectorUiConfig: {
 *         availability: {
 *             isPreview: true,
 *             status: 1,
 *         },
 *         connectivityCriteria: [{
 *             type: "IsConnectedQuery",
 *             value: [`{{graphQueriesTableName}}
 *             | summarize LastLogReceived = max(TimeGenerated)
 *             | project IsConnected = LastLogReceived > ago(30d)`],
 *         }],
 *         dataTypes: [{
 *             lastDataReceivedQuery: `{{graphQueriesTableName}}
 *             | summarize Time = max(TimeGenerated)
 *             | where isnotempty(Time)`,
 *             name: "{{graphQueriesTableName}}",
 *         }],
 *         descriptionMarkdown: "The [Qualys Vulnerability Management (VM)](https://www.qualys.com/apps/vulnerability-management/) data connector provides the capability to ingest vulnerability host detection data into Azure Sentinel through the Qualys API. The connector provides visibility into host detection data from vulerability scans. This connector provides Azure Sentinel the capability to view dashboards, create custom alerts, and improve investigation ",
 *         graphQueries: [{
 *             baseQuery: "{{graphQueriesTableName}}",
 *             legend: "{{graphQueriesTableName}}",
 *             metricName: "Total data received",
 *         }],
 *         graphQueriesTableName: "QualysHostDetection_CL",
 *         instructionSteps: [
 *             {
 *                 description: ">**NOTE:** This connector uses Azure Functions to connect to Qualys VM to pull its logs into Azure Sentinel. This might result in additional data ingestion costs. Check the [Azure Functions pricing page](https://azure.microsoft.com/pricing/details/functions/) for details.",
 *                 title: "",
 *             },
 *             {
 *                 description: ">**(Optional Step)** Securely store workspace and API authorization key(s) or token(s) in Azure Key Vault. Azure Key Vault provides a secure mechanism to store and retrieve key values. [Follow these instructions](https://docs.microsoft.com/azure/app-service/app-service-key-vault-references) to use Azure Key Vault with an Azure Function App.",
 *                 title: "",
 *             },
 *             {
 *                 description: `**STEP 1 - Configuration steps for the Qualys VM API**
 *
 * 1. Log into the Qualys Vulnerability Management console with an administrator account, select the **Users** tab and the **Users** subtab. 
 * 2. Click on the **New** drop-down menu and select **Users..**
 * 3. Create a username and password for the API account. 
 * 4. In the **User Roles** tab, ensure the account role is set to **Manager** and access is allowed to **GUI** and **API**
 * 4. Log out of the administrator account and log into the console with the new API credentials for validation, then log out of the API account. 
 * 5. Log back into the console using an administrator account and modify the API accounts User Roles, removing access to **GUI**. 
 * 6. Save all changes.`,
 *                 title: "",
 *             },
 *             {
 *                 description: `**STEP 2 - Choose ONE from the following two deployment options to deploy the connector and the associated Azure Function**
 *
 * >**IMPORTANT:** Before deploying the Qualys VM connector, have the Workspace ID and Workspace Primary Key (can be copied from the following), as well as the Qualys VM API Authorization Key(s), readily available.`,
 *                 instructions: [
 *                     {
 *                         parameters: {
 *                             fillWith: ["WorkspaceId"],
 *                             label: "Workspace ID",
 *                         },
 *                         type: "CopyableLabel",
 *                     },
 *                     {
 *                         parameters: {
 *                             fillWith: ["PrimaryKey"],
 *                             label: "Primary Key",
 *                         },
 *                         type: "CopyableLabel",
 *                     },
 *                 ],
 *                 title: "",
 *             },
 *             {
 *                 description: `Use this method for automated deployment of the Qualys VM connector using an ARM Tempate.
 *
 * 1. Click the **Deploy to Azure** button below. 
 *
 * 	[![Deploy To Azure](https://aka.ms/deploytoazurebutton)](https://aka.ms/sentinelqualysvmazuredeploy)
 * 2. Select the preferred **Subscription**, **Resource Group** and **Location**. 
 * 3. Enter the **Workspace ID**, **Workspace Key**, **API Username**, **API Password** , update the **URI**, and any additional URI **Filter Parameters** (each filter should be separated by an "&" symbol, no spaces.) 
 * > - Enter the URI that corresponds to your region. The complete list of API Server URLs can be [found here](https://www.qualys.com/docs/qualys-api-vmpc-user-guide.pdf#G4.735348) -- There is no need to add a time suffix to the URI, the Function App will dynamically append the Time Value to the URI in the proper format. 
 *  - The default **Time Interval** is set to pull the last five (5) minutes of data. If the time interval needs to be modified, it is recommended to change the Function App Timer Trigger accordingly (in the function.json file, post deployment) to prevent overlapping data ingestion. 
 * > - Note: If using Azure Key Vault secrets for any of the values above, use the\`@Microsoft.KeyVault(SecretUri={Security Identifier})\`schema in place of the string values. Refer to [Key Vault references documentation](https://docs.microsoft.com/azure/app-service/app-service-key-vault-references) for further details. 
 * 4. Mark the checkbox labeled **I agree to the terms and conditions stated above**. 
 * 5. Click **Purchase** to deploy.`,
 *                 title: "Option 1 - Azure Resource Manager (ARM) Template",
 *             },
 *             {
 *                 description: "Use the following step-by-step instructions to deploy the Quayls VM connector manually with Azure Functions.",
 *                 title: "Option 2 - Manual Deployment of Azure Functions",
 *             },
 *             {
 *                 description: `**1. Create a Function App**
 *
 * 1.  From the Azure Portal, navigate to [Function App](https://portal.azure.com/#blade/HubsExtension/BrowseResource/resourceType/Microsoft.Web%2Fsites/kind/functionapp), and select **+ Add**.
 * 2. In the **Basics** tab, ensure Runtime stack is set to **Powershell Core**. 
 * 3. In the **Hosting** tab, ensure the **Consumption (Serverless)** plan type is selected.
 * 4. Make other preferrable configuration changes, if needed, then click **Create**.`,
 *                 title: "",
 *             },
 *             {
 *                 description: `**2. Import Function App Code**
 *
 * 1. In the newly created Function App, select **Functions** on the left pane and click **+ New Function**.
 * 2. Select **Timer Trigger**.
 * 3. Enter a unique Function **Name** and leave the default cron schedule of every 5 minutes, then click **Create**.
 * 5. Click on **Code + Test** on the left pane. 
 * 6. Copy the [Function App Code](https://aka.ms/sentinelqualysvmazurefunctioncode) and paste into the Function App \`run.ps1\` editor.
 * 7. Click **Save**.`,
 *                 title: "",
 *             },
 *             {
 *                 description: `**3. Configure the Function App**
 *
 * 1. In the Function App, select the Function App Name and select **Configuration**.
 * 2. In the **Application settings** tab, select **+ New application setting**.
 * 3. Add each of the following seven (7) application settings individually, with their respective string values (case-sensitive): 
 * 		apiUsername
 * 		apiPassword
 * 		workspaceID
 * 		workspaceKey
 * 		uri
 * 		filterParameters
 * 		timeInterval
 * > - Enter the URI that corresponds to your region. The complete list of API Server URLs can be [found here](https://www.qualys.com/docs/qualys-api-vmpc-user-guide.pdf#G4.735348). The \`uri\` value must follow the following schema: \`https://<API Server>/api/2.0/fo/asset/host/vm/detection/?action=list&vm_processed_after=\` -- There is no need to add a time suffix to the URI, the Function App will dynamically append the Time Value to the URI in the proper format.
 * > - Add any additional filter parameters, for the \`filterParameters\` variable, that need to be appended to the URI. Each parameter should be seperated by an "&" symbol and should not include any spaces.
 * > - Set the \`timeInterval\` (in minutes) to the value of \`5\` to correspond to the Timer Trigger of every \`5\` minutes. If the time interval needs to be modified, it is recommended to change the Function App Timer Trigger accordingly to prevent overlapping data ingestion.
 * > - Note: If using Azure Key Vault, use the\`@Microsoft.KeyVault(SecretUri={Security Identifier})\`schema in place of the string values. Refer to [Key Vault references documentation](https://docs.microsoft.com/azure/app-service/app-service-key-vault-references) for further details.
 * 4. Once all application settings have been entered, click **Save**.`,
 *                 title: "",
 *             },
 *             {
 *                 description: `**4. Configure the host.json**.
 *
 * Due to the potentially large amount of Qualys host detection data being ingested, it can cause the execution time to surpass the default Function App timeout of five (5) minutes. Increase the default timeout duration to the maximum of ten (10) minutes, under the Consumption Plan, to allow more time for the Function App to execute.
 *
 * 1. In the Function App, select the Function App Name and select the **App Service Editor** blade.
 * 2. Click **Go** to open the editor, then select the **host.json** file under the **wwwroot** directory.
 * 3. Add the line \`"functionTimeout": "00:10:00",\` above the \`managedDependancy\` line 
 * 4. Ensure **SAVED** appears on the top right corner of the editor, then exit the editor.
 *
 * > NOTE: If a longer timeout duration is required, consider upgrading to an [App Service Plan](https://docs.microsoft.com/azure/azure-functions/functions-scale#timeout)`,
 *                 title: "",
 *             },
 *         ],
 *         permissions: {
 *             customs: [
 *                 {
 *                     description: "Read and write permissions to Azure Functions to create a Function App is required. [See the documentation to learn more about Azure Functions](https://docs.microsoft.com/azure/azure-functions/).",
 *                     name: "Microsoft.Web/sites permissions",
 *                 },
 *                 {
 *                     description: "A Qualys VM API username and password is required. [See the documentation to learn more about Qualys VM API](https://www.qualys.com/docs/qualys-api-vmpc-user-guide.pdf).",
 *                     name: "Qualys API Key",
 *                 },
 *             ],
 *             resourceProvider: [
 *                 {
 *                     permissionsDisplayText: "read and write permissions on the workspace are required.",
 *                     provider: "Microsoft.OperationalInsights/workspaces",
 *                     providerDisplayName: "Workspace",
 *                     requiredPermissions: {
 *                         "delete": true,
 *                         read: true,
 *                         write: true,
 *                     },
 *                     scope: "Workspace",
 *                 },
 *                 {
 *                     permissionsDisplayText: "read permissions to shared keys for the workspace are required. [See the documentation to learn more about workspace keys](https://docs.microsoft.com/azure/azure-monitor/platform/agent-windows#obtain-workspace-id-and-key).",
 *                     provider: "Microsoft.OperationalInsights/workspaces/sharedKeys",
 *                     providerDisplayName: "Keys",
 *                     requiredPermissions: {
 *                         action: true,
 *                     },
 *                     scope: "Workspace",
 *                 },
 *             ],
 *         },
 *         publisher: "Qualys",
 *         sampleQueries: [{
 *             description: "Top 10 Vulerabilities detected",
 *             query: `{{graphQueriesTableName}}
 *  | mv-expand todynamic(Detections_s)
 *  | extend Vulnerability = tostring(Detections_s.Results)
 *  | summarize count() by Vulnerability
 *  | top 10 by count_`,
 *         }],
 *         title: "Qualys Vulnerability Management (CCP DEMO)",
 *     },
 *     dataConnectorId: "316ec55e-7138-4d63-ab18-90c8a60fd1c8",
 *     kind: "GenericUI",
 *     resourceGroupName: "myRg",
 *     workspaceName: "myWorkspace",
 * });
 *
 * ```
 * ### Creates or updates a Threat Intelligence Taxii data connector.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure_native from "@pulumi/azure-native";
 *
 * const codelessUiDataConnector = new azure_native.securityinsights.v20220401preview.CodelessUiDataConnector("codelessUiDataConnector", {
 *     dataConnectorId: "73e01a99-5cd7-4139-a149-9f2736ff2ab5",
 *     resourceGroupName: "myRg",
 *     workspaceName: "myWorkspace",
 * });
 *
 * ```
 * ### Creates or updates an Office PowerBI data connector
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure_native from "@pulumi/azure-native";
 *
 * const codelessUiDataConnector = new azure_native.securityinsights.v20220401preview.CodelessUiDataConnector("codelessUiDataConnector", {
 *     dataConnectorId: "73e01a99-5cd7-4139-a149-9f2736ff2ab5",
 *     resourceGroupName: "myRg",
 *     workspaceName: "myWorkspace",
 * });
 *
 * ```
 * ### Creates or updates an Office365 Project data connector
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure_native from "@pulumi/azure-native";
 *
 * const codelessUiDataConnector = new azure_native.securityinsights.v20220401preview.CodelessUiDataConnector("codelessUiDataConnector", {
 *     dataConnectorId: "73e01a99-5cd7-4139-a149-9f2736ff2ab5",
 *     resourceGroupName: "myRg",
 *     workspaceName: "myWorkspace",
 * });
 *
 * ```
 * ### Creates or updates an Office365 data connector
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure_native from "@pulumi/azure-native";
 *
 * const codelessUiDataConnector = new azure_native.securityinsights.v20220401preview.CodelessUiDataConnector("codelessUiDataConnector", {
 *     dataConnectorId: "73e01a99-5cd7-4139-a149-9f2736ff2ab5",
 *     resourceGroupName: "myRg",
 *     workspaceName: "myWorkspace",
 * });
 *
 * ```
 * ### Creates or updates an Threat Intelligence Platform data connector
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure_native from "@pulumi/azure-native";
 *
 * const codelessUiDataConnector = new azure_native.securityinsights.v20220401preview.CodelessUiDataConnector("codelessUiDataConnector", {
 *     dataConnectorId: "73e01a99-5cd7-4139-a149-9f2736ff2ab5",
 *     resourceGroupName: "myRg",
 *     workspaceName: "myWorkspace",
 * });
 *
 * ```
 *
 * ## Import
 *
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 *
 * ```sh
 * $ pulumi import azure-native:securityinsights/v20220401preview:CodelessUiDataConnector 73e01a99-5cd7-4139-a149-9f2736ff2ab5 /subscriptions/d0cfe6b2-9ac0-4464-9919-dccaee2e48c0/resourceGroups/myRg/providers/Microsoft.OperationalInsights/workspaces/myWorkspace/providers/Microsoft.SecurityInsights/dataConnectors/73e01a99-5cd7-4139-a149-9f2736ff2ab5 
 * ```
 */
export class CodelessUiDataConnector extends pulumi.CustomResource {
    /**
     * Get an existing CodelessUiDataConnector resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): CodelessUiDataConnector {
        return new CodelessUiDataConnector(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:securityinsights/v20220401preview:CodelessUiDataConnector';

    /**
     * Returns true if the given object is an instance of CodelessUiDataConnector.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CodelessUiDataConnector {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CodelessUiDataConnector.__pulumiType;
    }

    /**
     * Config to describe the instructions blade
     */
    public readonly connectorUiConfig!: pulumi.Output<outputs.securityinsights.v20220401preview.CodelessUiConnectorConfigPropertiesResponse | undefined>;
    /**
     * Etag of the azure resource
     */
    public /*out*/ readonly etag!: pulumi.Output<string | undefined>;
    /**
     * The kind of the data connector
     * Expected value is 'GenericUI'.
     */
    public readonly kind!: pulumi.Output<"GenericUI">;
    /**
     * The name of the resource
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    public /*out*/ readonly systemData!: pulumi.Output<outputs.securityinsights.v20220401preview.SystemDataResponse>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a CodelessUiDataConnector resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CodelessUiDataConnectorArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.kind === undefined) && !opts.urn) {
                throw new Error("Missing required property 'kind'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.workspaceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'workspaceName'");
            }
            resourceInputs["connectorUiConfig"] = args ? args.connectorUiConfig : undefined;
            resourceInputs["dataConnectorId"] = args ? args.dataConnectorId : undefined;
            resourceInputs["kind"] = "GenericUI";
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["workspaceName"] = args ? args.workspaceName : undefined;
            resourceInputs["etag"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        } else {
            resourceInputs["connectorUiConfig"] = undefined /*out*/;
            resourceInputs["etag"] = undefined /*out*/;
            resourceInputs["kind"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:securityinsights:CodelessUiDataConnector" }, { type: "azure-native:securityinsights/v20190101preview:CodelessUiDataConnector" }, { type: "azure-native:securityinsights/v20200101:CodelessUiDataConnector" }, { type: "azure-native:securityinsights/v20210301preview:CodelessUiDataConnector" }, { type: "azure-native:securityinsights/v20210901preview:CodelessUiDataConnector" }, { type: "azure-native:securityinsights/v20211001:CodelessUiDataConnector" }, { type: "azure-native:securityinsights/v20211001preview:CodelessUiDataConnector" }, { type: "azure-native:securityinsights/v20220101preview:CodelessUiDataConnector" }, { type: "azure-native:securityinsights/v20220501preview:CodelessUiDataConnector" }, { type: "azure-native:securityinsights/v20220601preview:CodelessUiDataConnector" }, { type: "azure-native:securityinsights/v20220701preview:CodelessUiDataConnector" }, { type: "azure-native:securityinsights/v20220801:CodelessUiDataConnector" }, { type: "azure-native:securityinsights/v20220801preview:CodelessUiDataConnector" }, { type: "azure-native:securityinsights/v20220901preview:CodelessUiDataConnector" }, { type: "azure-native:securityinsights/v20221001preview:CodelessUiDataConnector" }, { type: "azure-native:securityinsights/v20221101:CodelessUiDataConnector" }, { type: "azure-native:securityinsights/v20221101preview:CodelessUiDataConnector" }, { type: "azure-native:securityinsights/v20221201preview:CodelessUiDataConnector" }, { type: "azure-native:securityinsights/v20230201:CodelessUiDataConnector" }, { type: "azure-native:securityinsights/v20230201preview:CodelessUiDataConnector" }, { type: "azure-native:securityinsights/v20230301preview:CodelessUiDataConnector" }, { type: "azure-native:securityinsights/v20230401preview:CodelessUiDataConnector" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(CodelessUiDataConnector.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a CodelessUiDataConnector resource.
 */
export interface CodelessUiDataConnectorArgs {
    /**
     * Config to describe the instructions blade
     */
    connectorUiConfig?: pulumi.Input<inputs.securityinsights.v20220401preview.CodelessUiConnectorConfigPropertiesArgs>;
    /**
     * Connector ID
     */
    dataConnectorId?: pulumi.Input<string>;
    /**
     * The kind of the data connector
     * Expected value is 'GenericUI'.
     */
    kind: pulumi.Input<"GenericUI">;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the workspace.
     */
    workspaceName: pulumi.Input<string>;
}
