// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * The storage account credential
 *
 * ## Example Usage
 * ### StorageAccountCredentialsCreateOrUpdate
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure_native from "@pulumi/azure-native";
 *
 * const storageAccountCredential = new azure_native.storsimple.v20161001.StorageAccountCredential("storageAccountCredential", {
 *     accessKey: {
 *         encryptionAlgorithm: azure_native.storsimple.v20161001.EncryptionAlgorithm.RSAES_PKCS1_v_1_5,
 *         encryptionCertificateThumbprint: "D73DB57C4CDD6761E159F8D1E8A7D759424983FD",
 *         value: "Ev1tm0QBmpGGm4a58GkqLqx8veJEEgQtg5K3Jizpmy7JdSv9dlcRwk59THw6KIdMDlEHcS8mPyneBtOEQsh4wkcFB7qrmQz+KsRAyIhEm6bwPEm3qN8+aDDzNcXn/6vu/sqV0AP7zit9/s7SxXGxjKrz4zKnOy16/DbzRRmUHNO+HO6JUM0cUfHXTX0mEecbsXqBq0A8IEG8z+bJgXX1EhoGkzE6yVsObm4S1AcKrLiwWjqmSLji5Q8gGO+y4KTTmC3p45h5GHHXjJyOccHhySWDAffxnTzUD/sOoh+aD2VkAYrL3DdnkVzhAdfcZfVI4soONx7tYMloZIVsfW1M2Q==",
 *     },
 *     cloudType: azure_native.storsimple.v20161001.CloudType.Azure,
 *     credentialName: "DummySacForSDKTest",
 *     enableSSL: azure_native.storsimple.v20161001.SslStatus.Enabled,
 *     endPoint: "blob.core.windows.net",
 *     location: "West US",
 *     login: "SacForSDKTest",
 *     managerName: "hAzureSDKOperations",
 *     resourceGroupName: "ResourceGroupForSDKTest",
 * });
 *
 * ```
 *
 * ## Import
 *
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 *
 * ```sh
 * $ pulumi import azure-native:storsimple/v20161001:StorageAccountCredential sacforsdktest /subscriptions/9eb689cd-7243-43b4-b6f6-5c65cb296641/resourceGroups/ResourceGroupForSDKTest/providers/Microsoft.StorSimple/managers/hAzureSDKOperations/storageAccountCredentials/sacforsdktest 
 * ```
 *
 * @deprecated Version 2016-10-01 will be removed in v2 of the provider.
 */
export class StorageAccountCredential extends pulumi.CustomResource {
    /**
     * Get an existing StorageAccountCredential resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): StorageAccountCredential {
        pulumi.log.warn("StorageAccountCredential is deprecated: Version 2016-10-01 will be removed in v2 of the provider.")
        return new StorageAccountCredential(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:storsimple/v20161001:StorageAccountCredential';

    /**
     * Returns true if the given object is an instance of StorageAccountCredential.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is StorageAccountCredential {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === StorageAccountCredential.__pulumiType;
    }

    /**
     * The details of the storage account password
     */
    public readonly accessKey!: pulumi.Output<outputs.storsimple.v20161001.AsymmetricEncryptedSecretResponse | undefined>;
    /**
     * The cloud service provider
     */
    public readonly cloudType!: pulumi.Output<string>;
    /**
     * SSL needs to be enabled or not
     */
    public readonly enableSSL!: pulumi.Output<string>;
    /**
     * The storage endpoint
     */
    public readonly endPoint!: pulumi.Output<string>;
    /**
     * The storage account's geo location
     */
    public readonly location!: pulumi.Output<string | undefined>;
    /**
     * The storage account login
     */
    public readonly login!: pulumi.Output<string>;
    /**
     * The name.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * The type.
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a StorageAccountCredential resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated Version 2016-10-01 will be removed in v2 of the provider. */
    constructor(name: string, args: StorageAccountCredentialArgs, opts?: pulumi.CustomResourceOptions) {
        pulumi.log.warn("StorageAccountCredential is deprecated: Version 2016-10-01 will be removed in v2 of the provider.")
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.cloudType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cloudType'");
            }
            if ((!args || args.enableSSL === undefined) && !opts.urn) {
                throw new Error("Missing required property 'enableSSL'");
            }
            if ((!args || args.endPoint === undefined) && !opts.urn) {
                throw new Error("Missing required property 'endPoint'");
            }
            if ((!args || args.login === undefined) && !opts.urn) {
                throw new Error("Missing required property 'login'");
            }
            if ((!args || args.managerName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'managerName'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["accessKey"] = args ? args.accessKey : undefined;
            resourceInputs["cloudType"] = args ? args.cloudType : undefined;
            resourceInputs["credentialName"] = args ? args.credentialName : undefined;
            resourceInputs["enableSSL"] = args ? args.enableSSL : undefined;
            resourceInputs["endPoint"] = args ? args.endPoint : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["login"] = args ? args.login : undefined;
            resourceInputs["managerName"] = args ? args.managerName : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        } else {
            resourceInputs["accessKey"] = undefined /*out*/;
            resourceInputs["cloudType"] = undefined /*out*/;
            resourceInputs["enableSSL"] = undefined /*out*/;
            resourceInputs["endPoint"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["login"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:storsimple:StorageAccountCredential" }, { type: "azure-native:storsimple/v20170601:StorageAccountCredential" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(StorageAccountCredential.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a StorageAccountCredential resource.
 */
export interface StorageAccountCredentialArgs {
    /**
     * The details of the storage account password
     */
    accessKey?: pulumi.Input<inputs.storsimple.v20161001.AsymmetricEncryptedSecretArgs>;
    /**
     * The cloud service provider
     */
    cloudType: pulumi.Input<enums.storsimple.v20161001.CloudType>;
    /**
     * The credential name.
     */
    credentialName?: pulumi.Input<string>;
    /**
     * SSL needs to be enabled or not
     */
    enableSSL: pulumi.Input<enums.storsimple.v20161001.SslStatus>;
    /**
     * The storage endpoint
     */
    endPoint: pulumi.Input<string>;
    /**
     * The storage account's geo location
     */
    location?: pulumi.Input<string>;
    /**
     * The storage account login
     */
    login: pulumi.Input<string>;
    /**
     * The manager name
     */
    managerName: pulumi.Input<string>;
    /**
     * The resource group name
     */
    resourceGroupName: pulumi.Input<string>;
}
