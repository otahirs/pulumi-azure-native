// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Information about current or upcoming role eligibility schedule instance
 */
export class RoleEligibilityScheduleInstance extends pulumi.CustomResource {
    /**
     * Get an existing RoleEligibilityScheduleInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): RoleEligibilityScheduleInstance {
        return new RoleEligibilityScheduleInstance(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:authorization/v20201001:RoleEligibilityScheduleInstance';

    /**
     * Returns true if the given object is an instance of RoleEligibilityScheduleInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RoleEligibilityScheduleInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RoleEligibilityScheduleInstance.__pulumiType;
    }

    /**
     * The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase 'foo_storage_container'
     */
    public /*out*/ readonly condition!: pulumi.Output<string | undefined>;
    /**
     * Version of the condition. Currently accepted value is '2.0'
     */
    public /*out*/ readonly conditionVersion!: pulumi.Output<string | undefined>;
    /**
     * DateTime when role eligibility schedule was created
     */
    public /*out*/ readonly createdOn!: pulumi.Output<string | undefined>;
    /**
     * The endDateTime of the role eligibility schedule instance
     */
    public /*out*/ readonly endDateTime!: pulumi.Output<string | undefined>;
    /**
     * Additional properties of principal, scope and role definition
     */
    public /*out*/ readonly expandedProperties!: pulumi.Output<outputs.authorization.v20201001.ExpandedPropertiesResponse | undefined>;
    /**
     * Membership type of the role eligibility schedule
     */
    public /*out*/ readonly memberType!: pulumi.Output<string | undefined>;
    /**
     * The role eligibility schedule instance name.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * The principal ID.
     */
    public /*out*/ readonly principalId!: pulumi.Output<string | undefined>;
    /**
     * The principal type of the assigned principal ID.
     */
    public /*out*/ readonly principalType!: pulumi.Output<string | undefined>;
    /**
     * The role definition ID.
     */
    public /*out*/ readonly roleDefinitionId!: pulumi.Output<string | undefined>;
    /**
     * Id of the master role eligibility schedule
     */
    public /*out*/ readonly roleEligibilityScheduleId!: pulumi.Output<string | undefined>;
    /**
     * The role eligibility schedule scope.
     */
    public readonly scope!: pulumi.Output<string | undefined>;
    /**
     * The startDateTime of the role eligibility schedule instance
     */
    public /*out*/ readonly startDateTime!: pulumi.Output<string | undefined>;
    /**
     * The status of the role eligibility schedule instance
     */
    public /*out*/ readonly status!: pulumi.Output<string | undefined>;
    /**
     * The role eligibility schedule instance type.
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a RoleEligibilityScheduleInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RoleEligibilityScheduleInstanceArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.scope === undefined) && !opts.urn) {
                throw new Error("Missing required property 'scope'");
            }
            resourceInputs["roleEligibilityScheduleInstanceName"] = args ? args.roleEligibilityScheduleInstanceName : undefined;
            resourceInputs["scope"] = args ? args.scope : undefined;
            resourceInputs["condition"] = undefined /*out*/;
            resourceInputs["conditionVersion"] = undefined /*out*/;
            resourceInputs["createdOn"] = undefined /*out*/;
            resourceInputs["endDateTime"] = undefined /*out*/;
            resourceInputs["expandedProperties"] = undefined /*out*/;
            resourceInputs["memberType"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["principalId"] = undefined /*out*/;
            resourceInputs["principalType"] = undefined /*out*/;
            resourceInputs["roleDefinitionId"] = undefined /*out*/;
            resourceInputs["roleEligibilityScheduleId"] = undefined /*out*/;
            resourceInputs["startDateTime"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        } else {
            resourceInputs["condition"] = undefined /*out*/;
            resourceInputs["conditionVersion"] = undefined /*out*/;
            resourceInputs["createdOn"] = undefined /*out*/;
            resourceInputs["endDateTime"] = undefined /*out*/;
            resourceInputs["expandedProperties"] = undefined /*out*/;
            resourceInputs["memberType"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["principalId"] = undefined /*out*/;
            resourceInputs["principalType"] = undefined /*out*/;
            resourceInputs["roleDefinitionId"] = undefined /*out*/;
            resourceInputs["roleEligibilityScheduleId"] = undefined /*out*/;
            resourceInputs["scope"] = undefined /*out*/;
            resourceInputs["startDateTime"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:authorization:RoleEligibilityScheduleInstance" }, { type: "azure-native:authorization/v20201001preview:RoleEligibilityScheduleInstance" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(RoleEligibilityScheduleInstance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a RoleEligibilityScheduleInstance resource.
 */
export interface RoleEligibilityScheduleInstanceArgs {
    /**
     * The name (hash of schedule name + time) of the role eligibility schedule to get.
     */
    roleEligibilityScheduleInstanceName?: pulumi.Input<string>;
    /**
     * The scope of the role eligibility schedules.
     */
    scope: pulumi.Input<string>;
}
