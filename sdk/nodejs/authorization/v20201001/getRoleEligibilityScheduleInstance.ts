// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Gets the specified role eligibility schedule instance.
 */
export function getRoleEligibilityScheduleInstance(args: GetRoleEligibilityScheduleInstanceArgs, opts?: pulumi.InvokeOptions): Promise<GetRoleEligibilityScheduleInstanceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:authorization/v20201001:getRoleEligibilityScheduleInstance", {
        "roleEligibilityScheduleInstanceName": args.roleEligibilityScheduleInstanceName,
        "scope": args.scope,
    }, opts);
}

export interface GetRoleEligibilityScheduleInstanceArgs {
    /**
     * The name (hash of schedule name + time) of the role eligibility schedule to get.
     */
    roleEligibilityScheduleInstanceName: string;
    /**
     * The scope of the role eligibility schedules.
     */
    scope: string;
}

/**
 * Information about current or upcoming role eligibility schedule instance
 */
export interface GetRoleEligibilityScheduleInstanceResult {
    /**
     * The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase 'foo_storage_container'
     */
    readonly condition?: string;
    /**
     * Version of the condition. Currently accepted value is '2.0'
     */
    readonly conditionVersion?: string;
    /**
     * DateTime when role eligibility schedule was created
     */
    readonly createdOn?: string;
    /**
     * The endDateTime of the role eligibility schedule instance
     */
    readonly endDateTime?: string;
    /**
     * Additional properties of principal, scope and role definition
     */
    readonly expandedProperties?: outputs.authorization.v20201001.ExpandedPropertiesResponse;
    /**
     * The role eligibility schedule instance ID.
     */
    readonly id: string;
    /**
     * Membership type of the role eligibility schedule
     */
    readonly memberType?: string;
    /**
     * The role eligibility schedule instance name.
     */
    readonly name: string;
    /**
     * The principal ID.
     */
    readonly principalId?: string;
    /**
     * The principal type of the assigned principal ID.
     */
    readonly principalType?: string;
    /**
     * The role definition ID.
     */
    readonly roleDefinitionId?: string;
    /**
     * Id of the master role eligibility schedule
     */
    readonly roleEligibilityScheduleId?: string;
    /**
     * The role eligibility schedule scope.
     */
    readonly scope?: string;
    /**
     * The startDateTime of the role eligibility schedule instance
     */
    readonly startDateTime?: string;
    /**
     * The status of the role eligibility schedule instance
     */
    readonly status?: string;
    /**
     * The role eligibility schedule instance type.
     */
    readonly type: string;
}
/**
 * Gets the specified role eligibility schedule instance.
 */
export function getRoleEligibilityScheduleInstanceOutput(args: GetRoleEligibilityScheduleInstanceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRoleEligibilityScheduleInstanceResult> {
    return pulumi.output(args).apply((a: any) => getRoleEligibilityScheduleInstance(a, opts))
}

export interface GetRoleEligibilityScheduleInstanceOutputArgs {
    /**
     * The name (hash of schedule name + time) of the role eligibility schedule to get.
     */
    roleEligibilityScheduleInstanceName: pulumi.Input<string>;
    /**
     * The scope of the role eligibility schedules.
     */
    scope: pulumi.Input<string>;
}
