// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * The connector setting
 *
 * ## Example Usage
 * ### AwsAssumeRole - Create a cloud account connector for a subscription
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure_native from "@pulumi/azure-native";
 *
 * const connector = new azure_native.security.v20200101preview.Connector("connector", {
 *     authenticationDetails: {
 *         authenticationType: "awsAssumeRole",
 *         awsAssumeRoleArn: "arn:aws:iam::81231569658:role/AscConnector",
 *         awsExternalId: "20ff7fc3-e762-44dd-bd96-b71116dcdc23",
 *     },
 *     connectorName: "aws_dev2",
 *     hybridComputeSettings: {
 *         autoProvision: "On",
 *         proxyServer: {
 *             ip: "167.220.197.140",
 *             port: "34",
 *         },
 *         region: "West US 2",
 *         resourceGroupName: "AwsConnectorRG",
 *         servicePrincipal: {
 *             applicationId: "ad9bcd79-be9c-45ab-abd8-80ca1654a7d1",
 *             secret: "<secret>",
 *         },
 *     },
 * });
 *
 * ```
 * ### AwsCred - Create a cloud account connector for a subscription
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure_native from "@pulumi/azure-native";
 *
 * const connector = new azure_native.security.v20200101preview.Connector("connector", {
 *     authenticationDetails: {
 *         authenticationType: "awsCreds",
 *         awsAccessKeyId: "AKIARPZCNODDNAEQFSOE",
 *         awsSecretAccessKey: "<awsSecretAccessKey>",
 *     },
 *     connectorName: "aws_dev1",
 *     hybridComputeSettings: {
 *         autoProvision: "On",
 *         proxyServer: {
 *             ip: "167.220.197.140",
 *             port: "34",
 *         },
 *         region: "West US 2",
 *         resourceGroupName: "AwsConnectorRG",
 *         servicePrincipal: {
 *             applicationId: "ad9bcd79-be9c-45ab-abd8-80ca1654a7d1",
 *             secret: "<secret>",
 *         },
 *     },
 * });
 *
 * ```
 * ### gcpCredentials - Create a cloud account connector for a subscription
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure_native from "@pulumi/azure-native";
 *
 * const connector = new azure_native.security.v20200101preview.Connector("connector", {
 *     authenticationDetails: {
 *         authProviderX509CertUrl: "https://www.googleapis.com/oauth2/v1/certs",
 *         authUri: "https://accounts.google.com/o/oauth2/auth",
 *         authenticationType: "gcpCredentials",
 *         clientEmail: "asc-135@asc-project-1234.iam.gserviceaccount.com",
 *         clientId: "105889053725632919854",
 *         clientX509CertUrl: `https://www.googleapis.com/robot/v1/metadata/x509/asc-135%40asc-project-1234.iam.gserviceaccount.com`,
 *         organizationId: "AscDemoOrg",
 *         privateKey: "******",
 *         privateKeyId: "6efg587hra2568as34d22326b044cc20dc2af",
 *         projectId: "asc-project-1234",
 *         tokenUri: "https://oauth2.googleapis.com/token",
 *         type: "service_account",
 *     },
 *     connectorName: "gcp_dev",
 *     hybridComputeSettings: {
 *         autoProvision: "Off",
 *     },
 * });
 *
 * ```
 *
 * ## Import
 *
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 *
 * ```sh
 * $ pulumi import azure-native:security/v20200101preview:Connector gcp_dev /subscriptions/20ff7fc3-e762-44dd-bd96-b71116dcdc23/providers/Microsoft.Security/connectors/gcp_dev 
 * ```
 */
export class Connector extends pulumi.CustomResource {
    /**
     * Get an existing Connector resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Connector {
        return new Connector(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:security/v20200101preview:Connector';

    /**
     * Returns true if the given object is an instance of Connector.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Connector {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Connector.__pulumiType;
    }

    /**
     * Settings for authentication management, these settings are relevant only for the cloud connector.
     */
    public readonly authenticationDetails!: pulumi.Output<outputs.security.v20200101preview.AwAssumeRoleAuthenticationDetailsPropertiesResponse | outputs.security.v20200101preview.AwsCredsAuthenticationDetailsPropertiesResponse | outputs.security.v20200101preview.GcpCredentialsDetailsPropertiesResponse | undefined>;
    /**
     * Settings for hybrid compute management. These settings are relevant only for Arc autoProvision (Hybrid Compute).
     */
    public readonly hybridComputeSettings!: pulumi.Output<outputs.security.v20200101preview.HybridComputeSettingsPropertiesResponse | undefined>;
    /**
     * Resource name
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Resource type
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a Connector resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ConnectorArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["authenticationDetails"] = args ? args.authenticationDetails : undefined;
            resourceInputs["connectorName"] = args ? args.connectorName : undefined;
            resourceInputs["hybridComputeSettings"] = args ? args.hybridComputeSettings : undefined;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        } else {
            resourceInputs["authenticationDetails"] = undefined /*out*/;
            resourceInputs["hybridComputeSettings"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Connector.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Connector resource.
 */
export interface ConnectorArgs {
    /**
     * Settings for authentication management, these settings are relevant only for the cloud connector.
     */
    authenticationDetails?: pulumi.Input<inputs.security.v20200101preview.AwAssumeRoleAuthenticationDetailsPropertiesArgs | inputs.security.v20200101preview.AwsCredsAuthenticationDetailsPropertiesArgs | inputs.security.v20200101preview.GcpCredentialsDetailsPropertiesArgs>;
    /**
     * Name of the cloud account connector
     */
    connectorName?: pulumi.Input<string>;
    /**
     * Settings for hybrid compute management. These settings are relevant only for Arc autoProvision (Hybrid Compute).
     */
    hybridComputeSettings?: pulumi.Input<inputs.security.v20200101preview.HybridComputeSettingsPropertiesArgs>;
}
