// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

/**
 * Azure Resource Manager resource envelope.
 *
 * ## Example Usage
 * ### CreateOrUpdate AutoML Job.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure_native from "@pulumi/azure-native";
 *
 * const job = new azure_native.machinelearningservices.v20230401preview.Job("job", {
 *     id: "string",
 *     jobBaseProperties: {
 *         autologgerSettings: {
 *             mlflowAutologger: "Disabled",
 *         },
 *         codeId: "string",
 *         command: "string",
 *         componentId: "string",
 *         computeId: "string",
 *         description: "string",
 *         displayName: "string",
 *         distribution: {
 *             distributionType: "TensorFlow",
 *             parameterServerCount: 1,
 *             workerCount: 1,
 *         },
 *         environmentId: "string",
 *         environmentVariables: {
 *             string: "string",
 *         },
 *         experimentName: "string",
 *         identity: {
 *             identityType: "AMLToken",
 *         },
 *         inputs: {
 *             string: {
 *                 description: "string",
 *                 jobInputType: "literal",
 *                 value: "string",
 *             },
 *         },
 *         isArchived: false,
 *         jobType: "Command",
 *         limits: {
 *             jobLimitsType: "Command",
 *             timeout: "PT5M",
 *         },
 *         notificationSetting: {
 *             emailOn: ["JobCompleted"],
 *             emails: ["string"],
 *         },
 *         outputs: {
 *             string: {
 *                 assetName: "string",
 *                 assetVersion: "string",
 *                 description: "string",
 *                 jobOutputType: "uri_file",
 *                 mode: "Direct",
 *                 uri: "string",
 *             },
 *         },
 *         properties: {
 *             string: "string",
 *         },
 *         queueSettings: {
 *             jobTier: "Premium",
 *             priority: 1,
 *         },
 *         resources: {
 *             dockerArgs: "string",
 *             instanceCount: 1,
 *             instanceType: "string",
 *             locations: ["string"],
 *             properties: {
 *                 string: {
 *                     "f69c8d5a-9b39-4183-92d3-a2b18944cf95": undefined,
 *                 },
 *             },
 *             shmSize: "2g",
 *         },
 *         services: {
 *             string: {
 *                 endpoint: "string",
 *                 jobServiceType: "string",
 *                 nodes: {
 *                     nodesValueType: "All",
 *                 },
 *                 port: 1,
 *                 properties: {
 *                     string: "string",
 *                 },
 *             },
 *         },
 *         tags: {
 *             string: "string",
 *         },
 *     },
 *     resourceGroupName: "test-rg",
 *     workspaceName: "my-aml-workspace",
 * });
 *
 * ```
 * ### CreateOrUpdate Command Job.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure_native from "@pulumi/azure-native";
 *
 * const job = new azure_native.machinelearningservices.v20230401preview.Job("job", {
 *     id: "string",
 *     jobBaseProperties: {
 *         autologgerSettings: {
 *             mlflowAutologger: "Disabled",
 *         },
 *         codeId: "string",
 *         command: "string",
 *         componentId: "string",
 *         computeId: "string",
 *         description: "string",
 *         displayName: "string",
 *         distribution: {
 *             distributionType: "TensorFlow",
 *             parameterServerCount: 1,
 *             workerCount: 1,
 *         },
 *         environmentId: "string",
 *         environmentVariables: {
 *             string: "string",
 *         },
 *         experimentName: "string",
 *         identity: {
 *             identityType: "AMLToken",
 *         },
 *         inputs: {
 *             string: {
 *                 description: "string",
 *                 jobInputType: "literal",
 *                 value: "string",
 *             },
 *         },
 *         isArchived: false,
 *         jobType: "Command",
 *         limits: {
 *             jobLimitsType: "Command",
 *             timeout: "PT5M",
 *         },
 *         notificationSetting: {
 *             emailOn: ["JobCancelled"],
 *             emails: ["string"],
 *         },
 *         outputs: {
 *             string: {
 *                 assetName: "string",
 *                 assetVersion: "string",
 *                 description: "string",
 *                 jobOutputType: "uri_file",
 *                 mode: "Upload",
 *                 uri: "string",
 *             },
 *         },
 *         properties: {
 *             string: "string",
 *         },
 *         queueSettings: {
 *             jobTier: "Basic",
 *             priority: 1,
 *         },
 *         resources: {
 *             dockerArgs: "string",
 *             instanceCount: 1,
 *             instanceType: "string",
 *             locations: ["string"],
 *             properties: {
 *                 string: {
 *                     "c9ac10d0-915b-4de5-afe8-a4c78a37a558": undefined,
 *                 },
 *             },
 *             shmSize: "2g",
 *         },
 *         services: {
 *             string: {
 *                 endpoint: "string",
 *                 jobServiceType: "string",
 *                 nodes: {
 *                     nodesValueType: "All",
 *                 },
 *                 port: 1,
 *                 properties: {
 *                     string: "string",
 *                 },
 *             },
 *         },
 *         tags: {
 *             string: "string",
 *         },
 *     },
 *     resourceGroupName: "test-rg",
 *     workspaceName: "my-aml-workspace",
 * });
 *
 * ```
 * ### CreateOrUpdate Pipeline Job.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure_native from "@pulumi/azure-native";
 *
 * const job = new azure_native.machinelearningservices.v20230401preview.Job("job", {
 *     id: "string",
 *     jobBaseProperties: {
 *         computeId: "string",
 *         description: "string",
 *         displayName: "string",
 *         experimentName: "string",
 *         inputs: {
 *             string: {
 *                 description: "string",
 *                 jobInputType: "literal",
 *                 value: "string",
 *             },
 *         },
 *         jobType: "Pipeline",
 *         outputs: {
 *             string: {
 *                 description: "string",
 *                 jobOutputType: "uri_file",
 *                 mode: "Upload",
 *                 uri: "string",
 *             },
 *         },
 *         properties: {
 *             string: "string",
 *         },
 *         services: {
 *             string: {
 *                 endpoint: "string",
 *                 jobServiceType: "string",
 *                 port: 1,
 *                 properties: {
 *                     string: "string",
 *                 },
 *             },
 *         },
 *         settings: {},
 *         tags: {
 *             string: "string",
 *         },
 *     },
 *     resourceGroupName: "test-rg",
 *     workspaceName: "my-aml-workspace",
 * });
 *
 * ```
 * ### CreateOrUpdate Sweep Job.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure_native from "@pulumi/azure-native";
 *
 * const job = new azure_native.machinelearningservices.v20230401preview.Job("job", {
 *     id: "string",
 *     jobBaseProperties: {
 *         autologgerSettings: {
 *             mlflowAutologger: "Disabled",
 *         },
 *         codeId: "string",
 *         command: "string",
 *         componentId: "string",
 *         computeId: "string",
 *         description: "string",
 *         displayName: "string",
 *         distribution: {
 *             distributionType: "TensorFlow",
 *             parameterServerCount: 1,
 *             workerCount: 1,
 *         },
 *         environmentId: "string",
 *         environmentVariables: {
 *             string: "string",
 *         },
 *         experimentName: "string",
 *         identity: {
 *             identityType: "AMLToken",
 *         },
 *         inputs: {
 *             string: {
 *                 description: "string",
 *                 jobInputType: "literal",
 *                 value: "string",
 *             },
 *         },
 *         isArchived: false,
 *         jobType: "Command",
 *         limits: {
 *             jobLimitsType: "Command",
 *             timeout: "PT5M",
 *         },
 *         notificationSetting: {
 *             emailOn: ["JobCompleted"],
 *             emails: ["string"],
 *         },
 *         outputs: {
 *             string: {
 *                 assetName: "string",
 *                 assetVersion: "string",
 *                 description: "string",
 *                 jobOutputType: "uri_file",
 *                 mode: "ReadWriteMount",
 *                 uri: "string",
 *             },
 *         },
 *         properties: {
 *             string: "string",
 *         },
 *         queueSettings: {
 *             jobTier: "Basic",
 *             priority: 1,
 *         },
 *         resources: {
 *             dockerArgs: "string",
 *             instanceCount: 1,
 *             instanceType: "string",
 *             locations: ["string"],
 *             properties: {
 *                 string: {
 *                     "5fc1f627-491e-45a0-a6a2-f5b4be884911": undefined,
 *                 },
 *             },
 *             shmSize: "2g",
 *         },
 *         services: {
 *             string: {
 *                 endpoint: "string",
 *                 jobServiceType: "string",
 *                 nodes: {
 *                     nodesValueType: "All",
 *                 },
 *                 port: 1,
 *                 properties: {
 *                     string: "string",
 *                 },
 *             },
 *         },
 *         tags: {
 *             string: "string",
 *         },
 *     },
 *     resourceGroupName: "test-rg",
 *     workspaceName: "my-aml-workspace",
 * });
 *
 * ```
 *
 * ## Import
 *
 * An existing resource can be imported using its type token, name, and identifier, e.g.
 *
 * ```sh
 * $ pulumi import azure-native:machinelearningservices/v20230401preview:Job string string 
 * ```
 */
export class Job extends pulumi.CustomResource {
    /**
     * Get an existing Job resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Job {
        return new Job(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure-native:machinelearningservices/v20230401preview:Job';

    /**
     * Returns true if the given object is an instance of Job.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Job {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Job.__pulumiType;
    }

    /**
     * [Required] Additional attributes of the entity.
     */
    public readonly jobBaseProperties!: pulumi.Output<outputs.machinelearningservices.v20230401preview.AutoMLJobResponse | outputs.machinelearningservices.v20230401preview.CommandJobResponse | outputs.machinelearningservices.v20230401preview.LabelingJobResponse | outputs.machinelearningservices.v20230401preview.PipelineJobResponse | outputs.machinelearningservices.v20230401preview.SparkJobResponse | outputs.machinelearningservices.v20230401preview.SweepJobResponse>;
    /**
     * The name of the resource
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    public /*out*/ readonly systemData!: pulumi.Output<outputs.machinelearningservices.v20230401preview.SystemDataResponse>;
    /**
     * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a Job resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: JobArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.jobBaseProperties === undefined) && !opts.urn) {
                throw new Error("Missing required property 'jobBaseProperties'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.workspaceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'workspaceName'");
            }
            resourceInputs["id"] = args ? args.id : undefined;
            resourceInputs["jobBaseProperties"] = args ? args.jobBaseProperties : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["workspaceName"] = args ? args.workspaceName : undefined;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        } else {
            resourceInputs["jobBaseProperties"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["systemData"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "azure-native:machinelearningservices:Job" }, { type: "azure-native:machinelearningservices/v20210301preview:Job" }, { type: "azure-native:machinelearningservices/v20220201preview:Job" }, { type: "azure-native:machinelearningservices/v20220501:Job" }, { type: "azure-native:machinelearningservices/v20220601preview:Job" }, { type: "azure-native:machinelearningservices/v20221001:Job" }, { type: "azure-native:machinelearningservices/v20221001preview:Job" }, { type: "azure-native:machinelearningservices/v20221201preview:Job" }, { type: "azure-native:machinelearningservices/v20230201preview:Job" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(Job.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Job resource.
 */
export interface JobArgs {
    /**
     * The name and identifier for the Job. This is case-sensitive.
     */
    id?: pulumi.Input<string>;
    /**
     * [Required] Additional attributes of the entity.
     */
    jobBaseProperties: pulumi.Input<inputs.machinelearningservices.v20230401preview.AutoMLJobArgs | inputs.machinelearningservices.v20230401preview.CommandJobArgs | inputs.machinelearningservices.v20230401preview.LabelingJobArgs | inputs.machinelearningservices.v20230401preview.PipelineJobArgs | inputs.machinelearningservices.v20230401preview.SparkJobArgs | inputs.machinelearningservices.v20230401preview.SweepJobArgs>;
    /**
     * The name of the resource group. The name is case insensitive.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Name of Azure Machine Learning workspace.
     */
    workspaceName: pulumi.Input<string>;
}
