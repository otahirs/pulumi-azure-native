// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Security.V20200101Preview
{
    /// <summary>
    /// The connector setting
    /// 
    /// ## Example Usage
    /// ### AwsAssumeRole - Create a cloud account connector for a subscription
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var connector = new AzureNative.Security.V20200101Preview.Connector("connector", new()
    ///     {
    ///         AuthenticationDetails = new AzureNative.Security.V20200101Preview.Inputs.AwAssumeRoleAuthenticationDetailsPropertiesArgs
    ///         {
    ///             AuthenticationType = "awsAssumeRole",
    ///             AwsAssumeRoleArn = "arn:aws:iam::81231569658:role/AscConnector",
    ///             AwsExternalId = "20ff7fc3-e762-44dd-bd96-b71116dcdc23",
    ///         },
    ///         ConnectorName = "aws_dev2",
    ///         HybridComputeSettings = new AzureNative.Security.V20200101Preview.Inputs.HybridComputeSettingsPropertiesArgs
    ///         {
    ///             AutoProvision = "On",
    ///             ProxyServer = new AzureNative.Security.V20200101Preview.Inputs.ProxyServerPropertiesArgs
    ///             {
    ///                 Ip = "167.220.197.140",
    ///                 Port = "34",
    ///             },
    ///             Region = "West US 2",
    ///             ResourceGroupName = "AwsConnectorRG",
    ///             ServicePrincipal = new AzureNative.Security.V20200101Preview.Inputs.ServicePrincipalPropertiesArgs
    ///             {
    ///                 ApplicationId = "ad9bcd79-be9c-45ab-abd8-80ca1654a7d1",
    ///                 Secret = "&lt;secret&gt;",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### AwsCred - Create a cloud account connector for a subscription
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var connector = new AzureNative.Security.V20200101Preview.Connector("connector", new()
    ///     {
    ///         AuthenticationDetails = new AzureNative.Security.V20200101Preview.Inputs.AwsCredsAuthenticationDetailsPropertiesArgs
    ///         {
    ///             AuthenticationType = "awsCreds",
    ///             AwsAccessKeyId = "AKIARPZCNODDNAEQFSOE",
    ///             AwsSecretAccessKey = "&lt;awsSecretAccessKey&gt;",
    ///         },
    ///         ConnectorName = "aws_dev1",
    ///         HybridComputeSettings = new AzureNative.Security.V20200101Preview.Inputs.HybridComputeSettingsPropertiesArgs
    ///         {
    ///             AutoProvision = "On",
    ///             ProxyServer = new AzureNative.Security.V20200101Preview.Inputs.ProxyServerPropertiesArgs
    ///             {
    ///                 Ip = "167.220.197.140",
    ///                 Port = "34",
    ///             },
    ///             Region = "West US 2",
    ///             ResourceGroupName = "AwsConnectorRG",
    ///             ServicePrincipal = new AzureNative.Security.V20200101Preview.Inputs.ServicePrincipalPropertiesArgs
    ///             {
    ///                 ApplicationId = "ad9bcd79-be9c-45ab-abd8-80ca1654a7d1",
    ///                 Secret = "&lt;secret&gt;",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### gcpCredentials - Create a cloud account connector for a subscription
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var connector = new AzureNative.Security.V20200101Preview.Connector("connector", new()
    ///     {
    ///         AuthenticationDetails = new AzureNative.Security.V20200101Preview.Inputs.GcpCredentialsDetailsPropertiesArgs
    ///         {
    ///             AuthProviderX509CertUrl = "https://www.googleapis.com/oauth2/v1/certs",
    ///             AuthUri = "https://accounts.google.com/o/oauth2/auth",
    ///             AuthenticationType = "gcpCredentials",
    ///             ClientEmail = "asc-135@asc-project-1234.iam.gserviceaccount.com",
    ///             ClientId = "105889053725632919854",
    ///             ClientX509CertUrl = "https://www.googleapis.com/robot/v1/metadata/x509/asc-135%40asc-project-1234.iam.gserviceaccount.com",
    ///             OrganizationId = "AscDemoOrg",
    ///             PrivateKey = "******",
    ///             PrivateKeyId = "6efg587hra2568as34d22326b044cc20dc2af",
    ///             ProjectId = "asc-project-1234",
    ///             TokenUri = "https://oauth2.googleapis.com/token",
    ///             Type = "service_account",
    ///         },
    ///         ConnectorName = "gcp_dev",
    ///         HybridComputeSettings = new AzureNative.Security.V20200101Preview.Inputs.HybridComputeSettingsPropertiesArgs
    ///         {
    ///             AutoProvision = "Off",
    ///         },
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// 
    /// ## Import
    /// 
    /// An existing resource can be imported using its type token, name, and identifier, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure-native:security/v20200101preview:Connector gcp_dev /subscriptions/20ff7fc3-e762-44dd-bd96-b71116dcdc23/providers/Microsoft.Security/connectors/gcp_dev 
    /// ```
    /// </summary>
    [AzureNativeResourceType("azure-native:security/v20200101preview:Connector")]
    public partial class Connector : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Settings for authentication management, these settings are relevant only for the cloud connector.
        /// </summary>
        [Output("authenticationDetails")]
        public Output<object?> AuthenticationDetails { get; private set; } = null!;

        /// <summary>
        /// Settings for hybrid compute management. These settings are relevant only for Arc autoProvision (Hybrid Compute).
        /// </summary>
        [Output("hybridComputeSettings")]
        public Output<Outputs.HybridComputeSettingsPropertiesResponse?> HybridComputeSettings { get; private set; } = null!;

        /// <summary>
        /// Resource name
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Resource type
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a Connector resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Connector(string name, ConnectorArgs? args = null, CustomResourceOptions? options = null)
            : base("azure-native:security/v20200101preview:Connector", name, args ?? new ConnectorArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Connector(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:security/v20200101preview:Connector", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Connector resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Connector Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Connector(name, id, options);
        }
    }

    public sealed class ConnectorArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Settings for authentication management, these settings are relevant only for the cloud connector.
        /// </summary>
        [Input("authenticationDetails")]
        public object? AuthenticationDetails { get; set; }

        /// <summary>
        /// Name of the cloud account connector
        /// </summary>
        [Input("connectorName")]
        public Input<string>? ConnectorName { get; set; }

        /// <summary>
        /// Settings for hybrid compute management. These settings are relevant only for Arc autoProvision (Hybrid Compute).
        /// </summary>
        [Input("hybridComputeSettings")]
        public Input<Inputs.HybridComputeSettingsPropertiesArgs>? HybridComputeSettings { get; set; }

        public ConnectorArgs()
        {
        }
        public static new ConnectorArgs Empty => new ConnectorArgs();
    }
}
