// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Security.V20230201Preview
{
    /// <summary>
    /// Rule results.
    /// 
    /// ## Example Usage
    /// ### Create a baseline
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var sqlVulnerabilityAssessmentBaselineRule = new AzureNative.Security.V20230201Preview.SqlVulnerabilityAssessmentBaselineRule("sqlVulnerabilityAssessmentBaselineRule", new()
    ///     {
    ///         LatestScan = false,
    ///         ResourceId = "subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/Rg/providers/Microsoft.HybridCompute/machines/MyMachine/sqlServers/server1/databases/master",
    ///         Results = new[]
    ///         {
    ///             new[]
    ///             {
    ///                 "userA",
    ///                 "SELECT",
    ///             },
    ///             new[]
    ///             {
    ///                 "userB",
    ///                 "SELECT",
    ///             },
    ///         },
    ///         RuleId = "VA1234",
    ///         WorkspaceId = "55555555-6666-7777-8888-999999999999",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Create a baseline using the latest scan results
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var sqlVulnerabilityAssessmentBaselineRule = new AzureNative.Security.V20230201Preview.SqlVulnerabilityAssessmentBaselineRule("sqlVulnerabilityAssessmentBaselineRule", new()
    ///     {
    ///         LatestScan = true,
    ///         ResourceId = "subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/Rg/providers/Microsoft.HybridCompute/machines/MyMachine/sqlServers/server1/databases/master",
    ///         Results = new[] {},
    ///         RuleId = "VA1234",
    ///         WorkspaceId = "55555555-6666-7777-8888-999999999999",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// 
    /// ## Import
    /// 
    /// An existing resource can be imported using its type token, name, and identifier, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure-native:security/v20230201preview:SqlVulnerabilityAssessmentBaselineRule VA1234 /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/Rg/providers/Microsoft.HybridCompute/machines/MyMachine/sqlServers/server1/databases/master/providers/Microsoft.Security/sqlVulnerabilityAssessments/default/baselineRules/VA1234 
    /// ```
    /// </summary>
    [AzureNativeResourceType("azure-native:security/v20230201preview:SqlVulnerabilityAssessmentBaselineRule")]
    public partial class SqlVulnerabilityAssessmentBaselineRule : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Resource name
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Rule results properties.
        /// </summary>
        [Output("properties")]
        public Output<Outputs.RuleResultsPropertiesResponse> Properties { get; private set; } = null!;

        /// <summary>
        /// Resource type
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a SqlVulnerabilityAssessmentBaselineRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SqlVulnerabilityAssessmentBaselineRule(string name, SqlVulnerabilityAssessmentBaselineRuleArgs args, CustomResourceOptions? options = null)
            : base("azure-native:security/v20230201preview:SqlVulnerabilityAssessmentBaselineRule", name, args ?? new SqlVulnerabilityAssessmentBaselineRuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SqlVulnerabilityAssessmentBaselineRule(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:security/v20230201preview:SqlVulnerabilityAssessmentBaselineRule", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:security:SqlVulnerabilityAssessmentBaselineRule"},
                    new global::Pulumi.Alias { Type = "azure-native:security/v20200701preview:SqlVulnerabilityAssessmentBaselineRule"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SqlVulnerabilityAssessmentBaselineRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SqlVulnerabilityAssessmentBaselineRule Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new SqlVulnerabilityAssessmentBaselineRule(name, id, options);
        }
    }

    public sealed class SqlVulnerabilityAssessmentBaselineRuleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Take results from latest scan.
        /// </summary>
        [Input("latestScan")]
        public Input<bool>? LatestScan { get; set; }

        /// <summary>
        /// The identifier of the resource.
        /// </summary>
        [Input("resourceId", required: true)]
        public Input<string> ResourceId { get; set; } = null!;

        [Input("results")]
        private InputList<ImmutableArray<string>>? _results;

        /// <summary>
        /// Expected results to be inserted into the baseline.
        /// Leave this field empty it LatestScan == true.
        /// </summary>
        public InputList<ImmutableArray<string>> Results
        {
            get => _results ?? (_results = new InputList<ImmutableArray<string>>());
            set => _results = value;
        }

        /// <summary>
        /// The rule Id.
        /// </summary>
        [Input("ruleId")]
        public Input<string>? RuleId { get; set; }

        /// <summary>
        /// The workspace Id.
        /// </summary>
        [Input("workspaceId", required: true)]
        public Input<string> WorkspaceId { get; set; } = null!;

        public SqlVulnerabilityAssessmentBaselineRuleArgs()
        {
        }
        public static new SqlVulnerabilityAssessmentBaselineRuleArgs Empty => new SqlVulnerabilityAssessmentBaselineRuleArgs();
    }
}
