// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AVS.V20220501
{
    /// <summary>
    /// An addon resource
    /// 
    /// ## Example Usage
    /// ### Addons_CreateOrUpdate_Arc
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var addon = new AzureNative.AVS.V20220501.Addon("addon", new()
    ///     {
    ///         AddonName = "arc",
    ///         PrivateCloudName = "cloud1",
    ///         Properties = new AzureNative.AVS.V20220501.Inputs.AddonArcPropertiesArgs
    ///         {
    ///             AddonType = "Arc",
    ///             VCenter = "subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg_test/providers/Microsoft.ConnectedVMwarevSphere/VCenters/test-vcenter",
    ///         },
    ///         ResourceGroupName = "group1",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Addons_CreateOrUpdate_HCX
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var addon = new AzureNative.AVS.V20220501.Addon("addon", new()
    ///     {
    ///         AddonName = "hcx",
    ///         PrivateCloudName = "cloud1",
    ///         Properties = new AzureNative.AVS.V20220501.Inputs.AddonHcxPropertiesArgs
    ///         {
    ///             AddonType = "HCX",
    ///             Offer = "VMware MaaS Cloud Provider (Enterprise)",
    ///         },
    ///         ResourceGroupName = "group1",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Addons_CreateOrUpdate_SRM
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var addon = new AzureNative.AVS.V20220501.Addon("addon", new()
    ///     {
    ///         AddonName = "srm",
    ///         PrivateCloudName = "cloud1",
    ///         Properties = new AzureNative.AVS.V20220501.Inputs.AddonSrmPropertiesArgs
    ///         {
    ///             AddonType = "SRM",
    ///             LicenseKey = "41915178-A8FF-4A4D-B683-6D735AF5E3F5",
    ///         },
    ///         ResourceGroupName = "group1",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Addons_CreateOrUpdate_VR
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var addon = new AzureNative.AVS.V20220501.Addon("addon", new()
    ///     {
    ///         AddonName = "vr",
    ///         PrivateCloudName = "cloud1",
    ///         Properties = new AzureNative.AVS.V20220501.Inputs.AddonVrPropertiesArgs
    ///         {
    ///             AddonType = "VR",
    ///             VrsCount = 1,
    ///         },
    ///         ResourceGroupName = "group1",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// 
    /// ## Import
    /// 
    /// An existing resource can be imported using its type token, name, and identifier, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure-native:avs/v20220501:Addon vr /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.AVS/privateClouds/cloud1/addons/vr 
    /// ```
    /// </summary>
    [AzureNativeResourceType("azure-native:avs/v20220501:Addon")]
    public partial class Addon : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Resource name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The properties of an addon resource
        /// </summary>
        [Output("properties")]
        public Output<object> Properties { get; private set; } = null!;

        /// <summary>
        /// Resource type.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a Addon resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Addon(string name, AddonArgs args, CustomResourceOptions? options = null)
            : base("azure-native:avs/v20220501:Addon", name, args ?? new AddonArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Addon(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:avs/v20220501:Addon", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:avs:Addon"},
                    new global::Pulumi.Alias { Type = "azure-native:avs/v20200717preview:Addon"},
                    new global::Pulumi.Alias { Type = "azure-native:avs/v20210101preview:Addon"},
                    new global::Pulumi.Alias { Type = "azure-native:avs/v20210601:Addon"},
                    new global::Pulumi.Alias { Type = "azure-native:avs/v20211201:Addon"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Addon resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Addon Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Addon(name, id, options);
        }
    }

    public sealed class AddonArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of the addon for the private cloud
        /// </summary>
        [Input("addonName")]
        public Input<string>? AddonName { get; set; }

        /// <summary>
        /// The name of the private cloud.
        /// </summary>
        [Input("privateCloudName", required: true)]
        public Input<string> PrivateCloudName { get; set; } = null!;

        /// <summary>
        /// The properties of an addon resource
        /// </summary>
        [Input("properties")]
        public object? Properties { get; set; }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public AddonArgs()
        {
        }
        public static new AddonArgs Empty => new AddonArgs();
    }
}
