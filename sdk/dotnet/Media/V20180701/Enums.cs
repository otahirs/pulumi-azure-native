// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.ComponentModel;
using Pulumi;

namespace Pulumi.AzureNative.Media.V20180701
{
    /// <summary>
    /// The permissions to set on the SAS URL.
    /// </summary>
    [EnumType]
    public readonly struct AssetContainerPermission : IEquatable<AssetContainerPermission>
    {
        private readonly string _value;

        private AssetContainerPermission(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// The SAS URL will allow read access to the container.
        /// </summary>
        public static AssetContainerPermission Read { get; } = new AssetContainerPermission("Read");
        /// <summary>
        /// The SAS URL will allow read and write access to the container.
        /// </summary>
        public static AssetContainerPermission ReadWrite { get; } = new AssetContainerPermission("ReadWrite");
        /// <summary>
        /// The SAS URL will allow read, write and delete access to the container.
        /// </summary>
        public static AssetContainerPermission ReadWriteDelete { get; } = new AssetContainerPermission("ReadWriteDelete");

        public static bool operator ==(AssetContainerPermission left, AssetContainerPermission right) => left.Equals(right);
        public static bool operator !=(AssetContainerPermission left, AssetContainerPermission right) => !left.Equals(right);

        public static explicit operator string(AssetContainerPermission value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is AssetContainerPermission other && Equals(other);
        public bool Equals(AssetContainerPermission other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }
}
