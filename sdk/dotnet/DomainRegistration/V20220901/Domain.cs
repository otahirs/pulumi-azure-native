// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DomainRegistration.V20220901
{
    /// <summary>
    /// Information about a domain.
    /// 
    /// ## Example Usage
    /// ### Create App Service Domain
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var domain = new AzureNative.DomainRegistration.V20220901.Domain("domain", new()
    ///     {
    ///         AuthCode = "exampleAuthCode",
    ///         AutoRenew = true,
    ///         Consent = new AzureNative.DomainRegistration.V20220901.Inputs.DomainPurchaseConsentArgs
    ///         {
    ///             AgreedAt = "2021-09-10T19:30:53Z",
    ///             AgreedBy = "192.0.2.1",
    ///             AgreementKeys = new[]
    ///             {
    ///                 "agreementKey1",
    ///             },
    ///         },
    ///         ContactAdmin = new AzureNative.DomainRegistration.V20220901.Inputs.ContactArgs
    ///         {
    ///             AddressMailing = new AzureNative.DomainRegistration.V20220901.Inputs.AddressArgs
    ///             {
    ///                 Address1 = "3400 State St",
    ///                 City = "Chicago",
    ///                 Country = "United States",
    ///                 PostalCode = "67098",
    ///                 State = "IL",
    ///             },
    ///             Email = "admin@email.com",
    ///             Fax = "1-245-534-2242",
    ///             JobTitle = "Admin",
    ///             NameFirst = "John",
    ///             NameLast = "Doe",
    ///             NameMiddle = "",
    ///             Organization = "Microsoft Inc.",
    ///             Phone = "1-245-534-2242",
    ///         },
    ///         ContactBilling = new AzureNative.DomainRegistration.V20220901.Inputs.ContactArgs
    ///         {
    ///             AddressMailing = new AzureNative.DomainRegistration.V20220901.Inputs.AddressArgs
    ///             {
    ///                 Address1 = "3400 State St",
    ///                 City = "Chicago",
    ///                 Country = "United States",
    ///                 PostalCode = "67098",
    ///                 State = "IL",
    ///             },
    ///             Email = "billing@email.com",
    ///             Fax = "1-245-534-2242",
    ///             JobTitle = "Billing",
    ///             NameFirst = "John",
    ///             NameLast = "Doe",
    ///             NameMiddle = "",
    ///             Organization = "Microsoft Inc.",
    ///             Phone = "1-245-534-2242",
    ///         },
    ///         ContactRegistrant = new AzureNative.DomainRegistration.V20220901.Inputs.ContactArgs
    ///         {
    ///             AddressMailing = new AzureNative.DomainRegistration.V20220901.Inputs.AddressArgs
    ///             {
    ///                 Address1 = "3400 State St",
    ///                 City = "Chicago",
    ///                 Country = "United States",
    ///                 PostalCode = "67098",
    ///                 State = "IL",
    ///             },
    ///             Email = "registrant@email.com",
    ///             Fax = "1-245-534-2242",
    ///             JobTitle = "Registrant",
    ///             NameFirst = "John",
    ///             NameLast = "Doe",
    ///             NameMiddle = "",
    ///             Organization = "Microsoft Inc.",
    ///             Phone = "1-245-534-2242",
    ///         },
    ///         ContactTech = new AzureNative.DomainRegistration.V20220901.Inputs.ContactArgs
    ///         {
    ///             AddressMailing = new AzureNative.DomainRegistration.V20220901.Inputs.AddressArgs
    ///             {
    ///                 Address1 = "3400 State St",
    ///                 City = "Chicago",
    ///                 Country = "United States",
    ///                 PostalCode = "67098",
    ///                 State = "IL",
    ///             },
    ///             Email = "tech@email.com",
    ///             Fax = "1-245-534-2242",
    ///             JobTitle = "Tech",
    ///             NameFirst = "John",
    ///             NameLast = "Doe",
    ///             NameMiddle = "",
    ///             Organization = "Microsoft Inc.",
    ///             Phone = "1-245-534-2242",
    ///         },
    ///         DnsType = AzureNative.DomainRegistration.V20220901.DnsType.DefaultDomainRegistrarDns,
    ///         DomainName = "example.com",
    ///         Location = "global",
    ///         Privacy = false,
    ///         ResourceGroupName = "testrg123",
    ///         Tags = null,
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// 
    /// ## Import
    /// 
    /// An existing resource can be imported using its type token, name, and identifier, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure-native:domainregistration/v20220901:Domain example.com /subscriptions/34adfa4f-cedf-4dc0-ba29-b6d1a69ab345/resourceGroups/testrg123/providers/Microsoft.DomainRegistration/domains/example.com 
    /// ```
    /// </summary>
    [AzureNativeResourceType("azure-native:domainregistration/v20220901:Domain")]
    public partial class Domain : global::Pulumi.CustomResource
    {
        [Output("authCode")]
        public Output<string?> AuthCode { get; private set; } = null!;

        /// <summary>
        /// &lt;code&gt;true&lt;/code&gt; if the domain should be automatically renewed; otherwise, &lt;code&gt;false&lt;/code&gt;.
        /// </summary>
        [Output("autoRenew")]
        public Output<bool?> AutoRenew { get; private set; } = null!;

        /// <summary>
        /// Domain creation timestamp.
        /// </summary>
        [Output("createdTime")]
        public Output<string> CreatedTime { get; private set; } = null!;

        /// <summary>
        /// Current DNS type
        /// </summary>
        [Output("dnsType")]
        public Output<string?> DnsType { get; private set; } = null!;

        /// <summary>
        /// Azure DNS Zone to use
        /// </summary>
        [Output("dnsZoneId")]
        public Output<string?> DnsZoneId { get; private set; } = null!;

        /// <summary>
        /// Reasons why domain is not renewable.
        /// </summary>
        [Output("domainNotRenewableReasons")]
        public Output<ImmutableArray<string>> DomainNotRenewableReasons { get; private set; } = null!;

        /// <summary>
        /// Domain expiration timestamp.
        /// </summary>
        [Output("expirationTime")]
        public Output<string> ExpirationTime { get; private set; } = null!;

        /// <summary>
        /// Kind of resource.
        /// </summary>
        [Output("kind")]
        public Output<string?> Kind { get; private set; } = null!;

        /// <summary>
        /// Timestamp when the domain was renewed last time.
        /// </summary>
        [Output("lastRenewedTime")]
        public Output<string> LastRenewedTime { get; private set; } = null!;

        /// <summary>
        /// Resource Location.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// All hostnames derived from the domain and assigned to Azure resources.
        /// </summary>
        [Output("managedHostNames")]
        public Output<ImmutableArray<Outputs.HostNameResponse>> ManagedHostNames { get; private set; } = null!;

        /// <summary>
        /// Resource Name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Name servers.
        /// </summary>
        [Output("nameServers")]
        public Output<ImmutableArray<string>> NameServers { get; private set; } = null!;

        /// <summary>
        /// &lt;code&gt;true&lt;/code&gt; if domain privacy is enabled for this domain; otherwise, &lt;code&gt;false&lt;/code&gt;.
        /// </summary>
        [Output("privacy")]
        public Output<bool?> Privacy { get; private set; } = null!;

        /// <summary>
        /// Domain provisioning state.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// &lt;code&gt;true&lt;/code&gt; if Azure can assign this domain to App Service apps; otherwise, &lt;code&gt;false&lt;/code&gt;. This value will be &lt;code&gt;true&lt;/code&gt; if domain registration status is active and 
        ///  it is hosted on name servers Azure has programmatic access to.
        /// </summary>
        [Output("readyForDnsRecordManagement")]
        public Output<bool> ReadyForDnsRecordManagement { get; private set; } = null!;

        /// <summary>
        /// Domain registration status.
        /// </summary>
        [Output("registrationStatus")]
        public Output<string> RegistrationStatus { get; private set; } = null!;

        /// <summary>
        /// Resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Target DNS type (would be used for migration)
        /// </summary>
        [Output("targetDnsType")]
        public Output<string?> TargetDnsType { get; private set; } = null!;

        /// <summary>
        /// Resource type.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a Domain resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Domain(string name, DomainArgs args, CustomResourceOptions? options = null)
            : base("azure-native:domainregistration/v20220901:Domain", name, args ?? new DomainArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Domain(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:domainregistration/v20220901:Domain", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:domainregistration:Domain"},
                    new global::Pulumi.Alias { Type = "azure-native:domainregistration/v20150401:Domain"},
                    new global::Pulumi.Alias { Type = "azure-native:domainregistration/v20180201:Domain"},
                    new global::Pulumi.Alias { Type = "azure-native:domainregistration/v20190801:Domain"},
                    new global::Pulumi.Alias { Type = "azure-native:domainregistration/v20200601:Domain"},
                    new global::Pulumi.Alias { Type = "azure-native:domainregistration/v20200901:Domain"},
                    new global::Pulumi.Alias { Type = "azure-native:domainregistration/v20201001:Domain"},
                    new global::Pulumi.Alias { Type = "azure-native:domainregistration/v20201201:Domain"},
                    new global::Pulumi.Alias { Type = "azure-native:domainregistration/v20210101:Domain"},
                    new global::Pulumi.Alias { Type = "azure-native:domainregistration/v20210115:Domain"},
                    new global::Pulumi.Alias { Type = "azure-native:domainregistration/v20210201:Domain"},
                    new global::Pulumi.Alias { Type = "azure-native:domainregistration/v20210301:Domain"},
                    new global::Pulumi.Alias { Type = "azure-native:domainregistration/v20220301:Domain"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Domain resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Domain Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Domain(name, id, options);
        }
    }

    public sealed class DomainArgs : global::Pulumi.ResourceArgs
    {
        [Input("authCode")]
        public Input<string>? AuthCode { get; set; }

        /// <summary>
        /// &lt;code&gt;true&lt;/code&gt; if the domain should be automatically renewed; otherwise, &lt;code&gt;false&lt;/code&gt;.
        /// </summary>
        [Input("autoRenew")]
        public Input<bool>? AutoRenew { get; set; }

        /// <summary>
        /// Legal agreement consent.
        /// </summary>
        [Input("consent", required: true)]
        public Input<Inputs.DomainPurchaseConsentArgs> Consent { get; set; } = null!;

        /// <summary>
        /// Administrative contact.
        /// </summary>
        [Input("contactAdmin", required: true)]
        public Input<Inputs.ContactArgs> ContactAdmin { get; set; } = null!;

        /// <summary>
        /// Billing contact.
        /// </summary>
        [Input("contactBilling", required: true)]
        public Input<Inputs.ContactArgs> ContactBilling { get; set; } = null!;

        /// <summary>
        /// Registrant contact.
        /// </summary>
        [Input("contactRegistrant", required: true)]
        public Input<Inputs.ContactArgs> ContactRegistrant { get; set; } = null!;

        /// <summary>
        /// Technical contact.
        /// </summary>
        [Input("contactTech", required: true)]
        public Input<Inputs.ContactArgs> ContactTech { get; set; } = null!;

        /// <summary>
        /// Current DNS type
        /// </summary>
        [Input("dnsType")]
        public Input<Pulumi.AzureNative.DomainRegistration.V20220901.DnsType>? DnsType { get; set; }

        /// <summary>
        /// Azure DNS Zone to use
        /// </summary>
        [Input("dnsZoneId")]
        public Input<string>? DnsZoneId { get; set; }

        /// <summary>
        /// Name of the domain.
        /// </summary>
        [Input("domainName")]
        public Input<string>? DomainName { get; set; }

        /// <summary>
        /// Kind of resource.
        /// </summary>
        [Input("kind")]
        public Input<string>? Kind { get; set; }

        /// <summary>
        /// Resource Location.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// &lt;code&gt;true&lt;/code&gt; if domain privacy is enabled for this domain; otherwise, &lt;code&gt;false&lt;/code&gt;.
        /// </summary>
        [Input("privacy")]
        public Input<bool>? Privacy { get; set; }

        /// <summary>
        /// Name of the resource group to which the resource belongs.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Target DNS type (would be used for migration)
        /// </summary>
        [Input("targetDnsType")]
        public Input<Pulumi.AzureNative.DomainRegistration.V20220901.DnsType>? TargetDnsType { get; set; }

        public DomainArgs()
        {
            AutoRenew = true;
        }
        public static new DomainArgs Empty => new DomainArgs();
    }
}
