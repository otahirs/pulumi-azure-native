// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DesktopVirtualization.V20201110Preview
{
    /// <summary>
    /// Represents a scaling plan definition.
    /// 
    /// ## Example Usage
    /// ### ScalingPlans_Create
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var scalingPlan = new AzureNative.DesktopVirtualization.V20201110Preview.ScalingPlan("scalingPlan", new()
    ///     {
    ///         Description = "des1",
    ///         ExclusionTag = "value",
    ///         FriendlyName = "friendly",
    ///         HostPoolReferences = new[]
    ///         {
    ///             new AzureNative.DesktopVirtualization.V20201110Preview.Inputs.ScalingHostPoolReferenceArgs
    ///             {
    ///                 HostPoolArmPath = "/subscriptions/daefabc0-95b4-48b3-b645-8a753a63c4fa/resourceGroups/resourceGroup1/providers/Microsoft.DesktopVirtualization/hostPools/hostPool1",
    ///                 ScalingPlanEnabled = true,
    ///             },
    ///         },
    ///         HostPoolType = "Personal",
    ///         Location = "centralus",
    ///         ResourceGroupName = "resourceGroup1",
    ///         ScalingPlanName = "scalingPlan1",
    ///         Schedules = new[]
    ///         {
    ///             new AzureNative.DesktopVirtualization.V20201110Preview.Inputs.ScalingScheduleArgs
    ///             {
    ///                 DaysOfWeek = new[]
    ///                 {
    ///                     "Monday",
    ///                     "Tuesday",
    ///                     "Wednesday",
    ///                     "Thursday",
    ///                     "Friday",
    ///                 },
    ///                 Name = "schedule1",
    ///                 OffPeakLoadBalancingAlgorithm = "DepthFirst",
    ///                 OffPeakStartTime = "2020-11-10T20:00:00.000Z",
    ///                 PeakLoadBalancingAlgorithm = "BreadthFirst",
    ///                 PeakStartTime = "2020-11-10T08:00:00.000Z",
    ///                 RampDownCapacityThresholdPct = 50,
    ///                 RampDownForceLogoffUsers = true,
    ///                 RampDownLoadBalancingAlgorithm = "DepthFirst",
    ///                 RampDownMinimumHostsPct = 20,
    ///                 RampDownNotificationMessage = "message",
    ///                 RampDownStartTime = "2020-11-10T18:00:00.000Z",
    ///                 RampDownWaitTimeMinutes = 30,
    ///                 RampUpCapacityThresholdPct = 80,
    ///                 RampUpLoadBalancingAlgorithm = "DepthFirst",
    ///                 RampUpMinimumHostsPct = 20,
    ///                 RampUpStartTime = "2020-11-10T06:00:00.000Z",
    ///             },
    ///         },
    ///         Tags = 
    ///         {
    ///             { "tag1", "value1" },
    ///             { "tag2", "value2" },
    ///         },
    ///         TimeZone = "",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// 
    /// ## Import
    /// 
    /// An existing resource can be imported using its type token, name, and identifier, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure-native:desktopvirtualization/v20201110preview:ScalingPlan scalingPlan1 /subscriptions/daefabc0-95b4-48b3-b645-8a753a63c4fa/resourceGroups/resourceGroup1/providers/Microsoft.DesktopVirtualization/scalingPlans/scalingPlan1 
    /// ```
    /// </summary>
    [Obsolete(@"Version 2020-11-10-preview will be removed in v2 of the provider.")]
    [AzureNativeResourceType("azure-native:desktopvirtualization/v20201110preview:ScalingPlan")]
    public partial class ScalingPlan : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Description of scaling plan.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Exclusion tag for scaling plan.
        /// </summary>
        [Output("exclusionTag")]
        public Output<string?> ExclusionTag { get; private set; } = null!;

        /// <summary>
        /// User friendly name of scaling plan.
        /// </summary>
        [Output("friendlyName")]
        public Output<string?> FriendlyName { get; private set; } = null!;

        /// <summary>
        /// List of ScalingHostPoolReference definitions.
        /// </summary>
        [Output("hostPoolReferences")]
        public Output<ImmutableArray<Outputs.ScalingHostPoolReferenceResponse>> HostPoolReferences { get; private set; } = null!;

        /// <summary>
        /// HostPool type for scaling plan.
        /// </summary>
        [Output("hostPoolType")]
        public Output<string?> HostPoolType { get; private set; } = null!;

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// List of ScalingSchedule definitions.
        /// </summary>
        [Output("schedules")]
        public Output<ImmutableArray<Outputs.ScalingScheduleResponse>> Schedules { get; private set; } = null!;

        /// <summary>
        /// Resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Timezone of the scaling plan.
        /// </summary>
        [Output("timeZone")]
        public Output<string?> TimeZone { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a ScalingPlan resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ScalingPlan(string name, ScalingPlanArgs args, CustomResourceOptions? options = null)
            : base("azure-native:desktopvirtualization/v20201110preview:ScalingPlan", name, args ?? new ScalingPlanArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ScalingPlan(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:desktopvirtualization/v20201110preview:ScalingPlan", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:desktopvirtualization:ScalingPlan"},
                    new global::Pulumi.Alias { Type = "azure-native:desktopvirtualization/v20210114preview:ScalingPlan"},
                    new global::Pulumi.Alias { Type = "azure-native:desktopvirtualization/v20210201preview:ScalingPlan"},
                    new global::Pulumi.Alias { Type = "azure-native:desktopvirtualization/v20210309preview:ScalingPlan"},
                    new global::Pulumi.Alias { Type = "azure-native:desktopvirtualization/v20210401preview:ScalingPlan"},
                    new global::Pulumi.Alias { Type = "azure-native:desktopvirtualization/v20210712:ScalingPlan"},
                    new global::Pulumi.Alias { Type = "azure-native:desktopvirtualization/v20210903preview:ScalingPlan"},
                    new global::Pulumi.Alias { Type = "azure-native:desktopvirtualization/v20220210preview:ScalingPlan"},
                    new global::Pulumi.Alias { Type = "azure-native:desktopvirtualization/v20220401preview:ScalingPlan"},
                    new global::Pulumi.Alias { Type = "azure-native:desktopvirtualization/v20220909:ScalingPlan"},
                    new global::Pulumi.Alias { Type = "azure-native:desktopvirtualization/v20221014preview:ScalingPlan"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ScalingPlan resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ScalingPlan Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new ScalingPlan(name, id, options);
        }
    }

    public sealed class ScalingPlanArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Description of scaling plan.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Exclusion tag for scaling plan.
        /// </summary>
        [Input("exclusionTag")]
        public Input<string>? ExclusionTag { get; set; }

        /// <summary>
        /// User friendly name of scaling plan.
        /// </summary>
        [Input("friendlyName")]
        public Input<string>? FriendlyName { get; set; }

        [Input("hostPoolReferences")]
        private InputList<Inputs.ScalingHostPoolReferenceArgs>? _hostPoolReferences;

        /// <summary>
        /// List of ScalingHostPoolReference definitions.
        /// </summary>
        public InputList<Inputs.ScalingHostPoolReferenceArgs> HostPoolReferences
        {
            get => _hostPoolReferences ?? (_hostPoolReferences = new InputList<Inputs.ScalingHostPoolReferenceArgs>());
            set => _hostPoolReferences = value;
        }

        /// <summary>
        /// HostPool type for scaling plan.
        /// </summary>
        [Input("hostPoolType")]
        public InputUnion<string, Pulumi.AzureNative.DesktopVirtualization.V20201110Preview.HostPoolType>? HostPoolType { get; set; }

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the scaling plan.
        /// </summary>
        [Input("scalingPlanName")]
        public Input<string>? ScalingPlanName { get; set; }

        [Input("schedules")]
        private InputList<Inputs.ScalingScheduleArgs>? _schedules;

        /// <summary>
        /// List of ScalingSchedule definitions.
        /// </summary>
        public InputList<Inputs.ScalingScheduleArgs> Schedules
        {
            get => _schedules ?? (_schedules = new InputList<Inputs.ScalingScheduleArgs>());
            set => _schedules = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Timezone of the scaling plan.
        /// </summary>
        [Input("timeZone")]
        public Input<string>? TimeZone { get; set; }

        public ScalingPlanArgs()
        {
        }
        public static new ScalingPlanArgs Empty => new ScalingPlanArgs();
    }
}
