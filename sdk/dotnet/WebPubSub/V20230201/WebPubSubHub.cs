// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.WebPubSub.V20230201
{
    /// <summary>
    /// A hub setting
    /// 
    /// ## Example Usage
    /// ### WebPubSubHubs_CreateOrUpdate
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var webPubSubHub = new AzureNative.WebPubSub.V20230201.WebPubSubHub("webPubSubHub", new()
    ///     {
    ///         HubName = "exampleHub",
    ///         Properties = new AzureNative.WebPubSub.V20230201.Inputs.WebPubSubHubPropertiesArgs
    ///         {
    ///             AnonymousConnectPolicy = "allow",
    ///             EventHandlers = new[]
    ///             {
    ///                 new AzureNative.WebPubSub.V20230201.Inputs.EventHandlerArgs
    ///                 {
    ///                     Auth = new AzureNative.WebPubSub.V20230201.Inputs.UpstreamAuthSettingsArgs
    ///                     {
    ///                         ManagedIdentity = new AzureNative.WebPubSub.V20230201.Inputs.ManagedIdentitySettingsArgs
    ///                         {
    ///                             Resource = "abc",
    ///                         },
    ///                         Type = "ManagedIdentity",
    ///                     },
    ///                     SystemEvents = new[]
    ///                     {
    ///                         "connect",
    ///                         "connected",
    ///                     },
    ///                     UrlTemplate = "http://host.com",
    ///                     UserEventPattern = "*",
    ///                 },
    ///             },
    ///             EventListeners = new[]
    ///             {
    ///                 new AzureNative.WebPubSub.V20230201.Inputs.EventListenerArgs
    ///                 {
    ///                     Endpoint = 
    ///                     {
    ///                         { "eventHubName", "eventHubName1" },
    ///                         { "fullyQualifiedNamespace", "example.servicebus.windows.net" },
    ///                         { "type", "EventHub" },
    ///                     },
    ///                     Filter = 
    ///                     {
    ///                         { "systemEvents", new[]
    ///                         {
    ///                             "connected",
    ///                             "disconnected",
    ///                         } },
    ///                         { "type", "EventName" },
    ///                         { "userEventPattern", "*" },
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///         ResourceGroupName = "myResourceGroup",
    ///         ResourceName = "myWebPubSubService",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// 
    /// ## Import
    /// 
    /// An existing resource can be imported using its type token, name, and identifier, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure-native:webpubsub/v20230201:WebPubSubHub exampleHub /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/myResourceGroup/providers/Microsoft.SignalRService/WebPubSub/myWebPubSubService/hubs/exampleHub 
    /// ```
    /// </summary>
    [AzureNativeResourceType("azure-native:webpubsub/v20230201:WebPubSubHub")]
    public partial class WebPubSubHub : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The name of the resource.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Properties of a hub.
        /// </summary>
        [Output("properties")]
        public Output<Outputs.WebPubSubHubPropertiesResponse> Properties { get; private set; } = null!;

        /// <summary>
        /// Metadata pertaining to creation and last modification of the resource.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// The type of the resource - e.g. "Microsoft.SignalRService/SignalR"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a WebPubSubHub resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public WebPubSubHub(string name, WebPubSubHubArgs args, CustomResourceOptions? options = null)
            : base("azure-native:webpubsub/v20230201:WebPubSubHub", name, args ?? new WebPubSubHubArgs(), MakeResourceOptions(options, ""))
        {
        }

        private WebPubSubHub(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:webpubsub/v20230201:WebPubSubHub", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:webpubsub:WebPubSubHub"},
                    new global::Pulumi.Alias { Type = "azure-native:webpubsub/v20211001:WebPubSubHub"},
                    new global::Pulumi.Alias { Type = "azure-native:webpubsub/v20220801preview:WebPubSubHub"},
                    new global::Pulumi.Alias { Type = "azure-native:webpubsub/v20230301preview:WebPubSubHub"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing WebPubSubHub resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static WebPubSubHub Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new WebPubSubHub(name, id, options);
        }
    }

    public sealed class WebPubSubHubArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The hub name.
        /// </summary>
        [Input("hubName")]
        public Input<string>? HubName { get; set; }

        /// <summary>
        /// Properties of a hub.
        /// </summary>
        [Input("properties", required: true)]
        public Input<Inputs.WebPubSubHubPropertiesArgs> Properties { get; set; } = null!;

        /// <summary>
        /// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the resource.
        /// </summary>
        [Input("resourceName", required: true)]
        public Input<string> ResourceName { get; set; } = null!;

        public WebPubSubHubArgs()
        {
        }
        public static new WebPubSubHubArgs Empty => new WebPubSubHubArgs();
    }
}
