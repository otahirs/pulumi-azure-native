// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataBoxEdge.V20230101Preview
{
    /// <summary>
    /// The storage account credential.
    /// 
    /// ## Example Usage
    /// ### SACPut
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var storageAccountCredential = new AzureNative.DataBoxEdge.V20230101Preview.StorageAccountCredential("storageAccountCredential", new()
    ///     {
    ///         AccountKey = new AzureNative.DataBoxEdge.V20230101Preview.Inputs.AsymmetricEncryptedSecretArgs
    ///         {
    ///             EncryptionAlgorithm = "AES256",
    ///             EncryptionCertThumbprint = "2A9D8D6BE51574B5461230AEF02F162C5F01AD31",
    ///             Value = "lAeZEYi6rNP1/EyNaVUYmTSZEYyaIaWmwUsGwek0+xiZj54GM9Ue9/UA2ed/ClC03wuSit2XzM/cLRU5eYiFBwks23rGwiQOr3sruEL2a74EjPD050xYjA6M1I2hu/w2yjVHhn5j+DbXS4Xzi+rHHNZK3DgfDO3PkbECjPck+PbpSBjy9+6Mrjcld5DIZhUAeMlMHrFlg+WKRKB14o/og56u5/xX6WKlrMLEQ+y6E18dUwvWs2elTNoVO8PBE8SM/CfooX4AMNvaNdSObNBPdP+F6Lzc556nFNWXrBLRt0vC7s9qTiVRO4x/qCNaK/B4y7IqXMllwQFf4Np9UQ2ECA==",
    ///         },
    ///         AccountType = "BlobStorage",
    ///         Alias = "sac1",
    ///         DeviceName = "testedgedevice",
    ///         Name = "sac1",
    ///         ResourceGroupName = "GroupForEdgeAutomation",
    ///         SslStatus = "Disabled",
    ///         UserName = "cisbvt",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// 
    /// ## Import
    /// 
    /// An existing resource can be imported using its type token, name, and identifier, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure-native:databoxedge/v20230101preview:StorageAccountCredential sac1 /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/GroupForEdgeAutomation/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/testedgedevice/storageAccountCredentials/sac1 
    /// ```
    /// </summary>
    [AzureNativeResourceType("azure-native:databoxedge/v20230101preview:StorageAccountCredential")]
    public partial class StorageAccountCredential : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Encrypted storage key.
        /// </summary>
        [Output("accountKey")]
        public Output<Outputs.AsymmetricEncryptedSecretResponse?> AccountKey { get; private set; } = null!;

        /// <summary>
        /// Type of storage accessed on the storage account.
        /// </summary>
        [Output("accountType")]
        public Output<string> AccountType { get; private set; } = null!;

        /// <summary>
        /// Alias for the storage account.
        /// </summary>
        [Output("alias")]
        public Output<string> Alias { get; private set; } = null!;

        /// <summary>
        /// Blob end point for private clouds.
        /// </summary>
        [Output("blobDomainName")]
        public Output<string?> BlobDomainName { get; private set; } = null!;

        /// <summary>
        /// Connection string for the storage account. Use this string if username and account key are not specified.
        /// </summary>
        [Output("connectionString")]
        public Output<string?> ConnectionString { get; private set; } = null!;

        /// <summary>
        /// The object name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Signifies whether SSL needs to be enabled or not.
        /// </summary>
        [Output("sslStatus")]
        public Output<string> SslStatus { get; private set; } = null!;

        /// <summary>
        /// Id of the storage account.
        /// </summary>
        [Output("storageAccountId")]
        public Output<string?> StorageAccountId { get; private set; } = null!;

        /// <summary>
        /// Metadata pertaining to creation and last modification of StorageAccountCredential
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// The hierarchical type of the object.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// Username for the storage account.
        /// </summary>
        [Output("userName")]
        public Output<string?> UserName { get; private set; } = null!;


        /// <summary>
        /// Create a StorageAccountCredential resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public StorageAccountCredential(string name, StorageAccountCredentialArgs args, CustomResourceOptions? options = null)
            : base("azure-native:databoxedge/v20230101preview:StorageAccountCredential", name, args ?? new StorageAccountCredentialArgs(), MakeResourceOptions(options, ""))
        {
        }

        private StorageAccountCredential(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:databoxedge/v20230101preview:StorageAccountCredential", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:databoxedge:StorageAccountCredential"},
                    new global::Pulumi.Alias { Type = "azure-native:databoxedge/v20190301:StorageAccountCredential"},
                    new global::Pulumi.Alias { Type = "azure-native:databoxedge/v20190701:StorageAccountCredential"},
                    new global::Pulumi.Alias { Type = "azure-native:databoxedge/v20190801:StorageAccountCredential"},
                    new global::Pulumi.Alias { Type = "azure-native:databoxedge/v20200501preview:StorageAccountCredential"},
                    new global::Pulumi.Alias { Type = "azure-native:databoxedge/v20200901:StorageAccountCredential"},
                    new global::Pulumi.Alias { Type = "azure-native:databoxedge/v20200901preview:StorageAccountCredential"},
                    new global::Pulumi.Alias { Type = "azure-native:databoxedge/v20201201:StorageAccountCredential"},
                    new global::Pulumi.Alias { Type = "azure-native:databoxedge/v20210201:StorageAccountCredential"},
                    new global::Pulumi.Alias { Type = "azure-native:databoxedge/v20210201preview:StorageAccountCredential"},
                    new global::Pulumi.Alias { Type = "azure-native:databoxedge/v20210601:StorageAccountCredential"},
                    new global::Pulumi.Alias { Type = "azure-native:databoxedge/v20210601preview:StorageAccountCredential"},
                    new global::Pulumi.Alias { Type = "azure-native:databoxedge/v20220301:StorageAccountCredential"},
                    new global::Pulumi.Alias { Type = "azure-native:databoxedge/v20220401preview:StorageAccountCredential"},
                    new global::Pulumi.Alias { Type = "azure-native:databoxedge/v20221201preview:StorageAccountCredential"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing StorageAccountCredential resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static StorageAccountCredential Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new StorageAccountCredential(name, id, options);
        }
    }

    public sealed class StorageAccountCredentialArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Encrypted storage key.
        /// </summary>
        [Input("accountKey")]
        public Input<Inputs.AsymmetricEncryptedSecretArgs>? AccountKey { get; set; }

        /// <summary>
        /// Type of storage accessed on the storage account.
        /// </summary>
        [Input("accountType", required: true)]
        public InputUnion<string, Pulumi.AzureNative.DataBoxEdge.V20230101Preview.AccountType> AccountType { get; set; } = null!;

        /// <summary>
        /// Alias for the storage account.
        /// </summary>
        [Input("alias", required: true)]
        public Input<string> Alias { get; set; } = null!;

        /// <summary>
        /// Blob end point for private clouds.
        /// </summary>
        [Input("blobDomainName")]
        public Input<string>? BlobDomainName { get; set; }

        /// <summary>
        /// Connection string for the storage account. Use this string if username and account key are not specified.
        /// </summary>
        [Input("connectionString")]
        public Input<string>? ConnectionString { get; set; }

        /// <summary>
        /// The device name.
        /// </summary>
        [Input("deviceName", required: true)]
        public Input<string> DeviceName { get; set; } = null!;

        /// <summary>
        /// The storage account credential name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The resource group name.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Signifies whether SSL needs to be enabled or not.
        /// </summary>
        [Input("sslStatus", required: true)]
        public InputUnion<string, Pulumi.AzureNative.DataBoxEdge.V20230101Preview.SSLStatus> SslStatus { get; set; } = null!;

        /// <summary>
        /// Id of the storage account.
        /// </summary>
        [Input("storageAccountId")]
        public Input<string>? StorageAccountId { get; set; }

        /// <summary>
        /// Username for the storage account.
        /// </summary>
        [Input("userName")]
        public Input<string>? UserName { get; set; }

        public StorageAccountCredentialArgs()
        {
        }
        public static new StorageAccountCredentialArgs Empty => new StorageAccountCredentialArgs();
    }
}
