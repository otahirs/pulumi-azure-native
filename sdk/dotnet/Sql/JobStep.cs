// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Sql
{
    /// <summary>
    /// A job step.
    /// API Version: 2021-11-01.
    /// Previous API Version: 2020-11-01-preview. See https://github.com/pulumi/pulumi-azure-native/discussions/TODO for information on migrating from v1 to v2 of the provider.
    /// 
    /// ## Example Usage
    /// ### Create or update a job step with all properties specified.
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var jobStep = new AzureNative.Sql.JobStep("jobStep", new()
    ///     {
    ///         Action = new AzureNative.Sql.Inputs.JobStepActionArgs
    ///         {
    ///             Source = "Inline",
    ///             Type = "TSql",
    ///             Value = "select 2",
    ///         },
    ///         Credential = "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/group1/providers/Microsoft.Sql/servers/server1/jobAgents/agent1/credentials/cred1",
    ///         ExecutionOptions = new AzureNative.Sql.Inputs.JobStepExecutionOptionsArgs
    ///         {
    ///             InitialRetryIntervalSeconds = 11,
    ///             MaximumRetryIntervalSeconds = 222,
    ///             RetryAttempts = 42,
    ///             RetryIntervalBackoffMultiplier = 3,
    ///             TimeoutSeconds = 1234,
    ///         },
    ///         JobAgentName = "agent1",
    ///         JobName = "job1",
    ///         Output = new AzureNative.Sql.Inputs.JobStepOutputArgs
    ///         {
    ///             Credential = "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/group1/providers/Microsoft.Sql/servers/server1/jobAgents/agent1/credentials/cred0",
    ///             DatabaseName = "database3",
    ///             ResourceGroupName = "group3",
    ///             SchemaName = "myschema1234",
    ///             ServerName = "server3",
    ///             SubscriptionId = "3501b905-a848-4b5d-96e8-b253f62d735a",
    ///             TableName = "mytable5678",
    ///             Type = "SqlDatabase",
    ///         },
    ///         ResourceGroupName = "group1",
    ///         ServerName = "server1",
    ///         StepId = 1,
    ///         StepName = "step1",
    ///         TargetGroup = "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/group1/providers/Microsoft.Sql/servers/server1/jobAgents/agent1/targetGroups/targetGroup1",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Create or update a job step with minimal properties specified.
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var jobStep = new AzureNative.Sql.JobStep("jobStep", new()
    ///     {
    ///         Action = new AzureNative.Sql.Inputs.JobStepActionArgs
    ///         {
    ///             Value = "select 1",
    ///         },
    ///         Credential = "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/group1/providers/Microsoft.Sql/servers/server1/jobAgents/agent1/credentials/cred0",
    ///         JobAgentName = "agent1",
    ///         JobName = "job1",
    ///         ResourceGroupName = "group1",
    ///         ServerName = "server1",
    ///         StepName = "step1",
    ///         TargetGroup = "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/group1/providers/Microsoft.Sql/servers/server1/jobAgents/agent1/targetGroups/targetGroup0",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// 
    /// ## Import
    /// 
    /// An existing resource can be imported using its type token, name, and identifier, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure-native:sql:JobStep step1 /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/group1/providers/Microsoft.Sql/servers/server1/jobAgents/agent1/jobs/job1/steps/step1 
    /// ```
    /// </summary>
    [AzureNativeResourceType("azure-native:sql:JobStep")]
    public partial class JobStep : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The action payload of the job step.
        /// </summary>
        [Output("action")]
        public Output<Outputs.JobStepActionResponse> Action { get; private set; } = null!;

        /// <summary>
        /// The resource ID of the job credential that will be used to connect to the targets.
        /// </summary>
        [Output("credential")]
        public Output<string> Credential { get; private set; } = null!;

        /// <summary>
        /// Execution options for the job step.
        /// </summary>
        [Output("executionOptions")]
        public Output<Outputs.JobStepExecutionOptionsResponse?> ExecutionOptions { get; private set; } = null!;

        /// <summary>
        /// Resource name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Output destination properties of the job step.
        /// </summary>
        [Output("output")]
        public Output<Outputs.JobStepOutputResponse?> Output { get; private set; } = null!;

        /// <summary>
        /// The job step's index within the job. If not specified when creating the job step, it will be created as the last step. If not specified when updating the job step, the step id is not modified.
        /// </summary>
        [Output("stepId")]
        public Output<int?> StepId { get; private set; } = null!;

        /// <summary>
        /// The resource ID of the target group that the job step will be executed on.
        /// </summary>
        [Output("targetGroup")]
        public Output<string> TargetGroup { get; private set; } = null!;

        /// <summary>
        /// Resource type.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a JobStep resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public JobStep(string name, JobStepArgs args, CustomResourceOptions? options = null)
            : base("azure-native:sql:JobStep", name, args ?? new JobStepArgs(), MakeResourceOptions(options, ""))
        {
        }

        private JobStep(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:sql:JobStep", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:sql/v20170301preview:JobStep"},
                    new global::Pulumi.Alias { Type = "azure-native:sql/v20200202preview:JobStep"},
                    new global::Pulumi.Alias { Type = "azure-native:sql/v20200801preview:JobStep"},
                    new global::Pulumi.Alias { Type = "azure-native:sql/v20201101preview:JobStep"},
                    new global::Pulumi.Alias { Type = "azure-native:sql/v20210201preview:JobStep"},
                    new global::Pulumi.Alias { Type = "azure-native:sql/v20210501preview:JobStep"},
                    new global::Pulumi.Alias { Type = "azure-native:sql/v20210801preview:JobStep"},
                    new global::Pulumi.Alias { Type = "azure-native:sql/v20211101:JobStep"},
                    new global::Pulumi.Alias { Type = "azure-native:sql/v20211101preview:JobStep"},
                    new global::Pulumi.Alias { Type = "azure-native:sql/v20220201preview:JobStep"},
                    new global::Pulumi.Alias { Type = "azure-native:sql/v20220501preview:JobStep"},
                    new global::Pulumi.Alias { Type = "azure-native:sql/v20220801preview:JobStep"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing JobStep resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static JobStep Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new JobStep(name, id, options);
        }
    }

    public sealed class JobStepArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The action payload of the job step.
        /// </summary>
        [Input("action", required: true)]
        public Input<Inputs.JobStepActionArgs> Action { get; set; } = null!;

        /// <summary>
        /// The resource ID of the job credential that will be used to connect to the targets.
        /// </summary>
        [Input("credential", required: true)]
        public Input<string> Credential { get; set; } = null!;

        /// <summary>
        /// Execution options for the job step.
        /// </summary>
        [Input("executionOptions")]
        public Input<Inputs.JobStepExecutionOptionsArgs>? ExecutionOptions { get; set; }

        /// <summary>
        /// The name of the job agent.
        /// </summary>
        [Input("jobAgentName", required: true)]
        public Input<string> JobAgentName { get; set; } = null!;

        /// <summary>
        /// The name of the job.
        /// </summary>
        [Input("jobName", required: true)]
        public Input<string> JobName { get; set; } = null!;

        /// <summary>
        /// Output destination properties of the job step.
        /// </summary>
        [Input("output")]
        public Input<Inputs.JobStepOutputArgs>? Output { get; set; }

        /// <summary>
        /// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the server.
        /// </summary>
        [Input("serverName", required: true)]
        public Input<string> ServerName { get; set; } = null!;

        /// <summary>
        /// The job step's index within the job. If not specified when creating the job step, it will be created as the last step. If not specified when updating the job step, the step id is not modified.
        /// </summary>
        [Input("stepId")]
        public Input<int>? StepId { get; set; }

        /// <summary>
        /// The name of the job step.
        /// </summary>
        [Input("stepName")]
        public Input<string>? StepName { get; set; }

        /// <summary>
        /// The resource ID of the target group that the job step will be executed on.
        /// </summary>
        [Input("targetGroup", required: true)]
        public Input<string> TargetGroup { get; set; } = null!;

        public JobStepArgs()
        {
        }
        public static new JobStepArgs Empty => new JobStepArgs();
    }
}
