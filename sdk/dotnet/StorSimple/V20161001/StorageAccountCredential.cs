// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.StorSimple.V20161001
{
    /// <summary>
    /// The storage account credential
    /// 
    /// ## Example Usage
    /// ### StorageAccountCredentialsCreateOrUpdate
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var storageAccountCredential = new AzureNative.StorSimple.V20161001.StorageAccountCredential("storageAccountCredential", new()
    ///     {
    ///         AccessKey = new AzureNative.StorSimple.V20161001.Inputs.AsymmetricEncryptedSecretArgs
    ///         {
    ///             EncryptionAlgorithm = AzureNative.StorSimple.V20161001.EncryptionAlgorithm.RSAES_PKCS1_v_1_5,
    ///             EncryptionCertificateThumbprint = "D73DB57C4CDD6761E159F8D1E8A7D759424983FD",
    ///             Value = "Ev1tm0QBmpGGm4a58GkqLqx8veJEEgQtg5K3Jizpmy7JdSv9dlcRwk59THw6KIdMDlEHcS8mPyneBtOEQsh4wkcFB7qrmQz+KsRAyIhEm6bwPEm3qN8+aDDzNcXn/6vu/sqV0AP7zit9/s7SxXGxjKrz4zKnOy16/DbzRRmUHNO+HO6JUM0cUfHXTX0mEecbsXqBq0A8IEG8z+bJgXX1EhoGkzE6yVsObm4S1AcKrLiwWjqmSLji5Q8gGO+y4KTTmC3p45h5GHHXjJyOccHhySWDAffxnTzUD/sOoh+aD2VkAYrL3DdnkVzhAdfcZfVI4soONx7tYMloZIVsfW1M2Q==",
    ///         },
    ///         CloudType = AzureNative.StorSimple.V20161001.CloudType.Azure,
    ///         CredentialName = "DummySacForSDKTest",
    ///         EnableSSL = AzureNative.StorSimple.V20161001.SslStatus.Enabled,
    ///         EndPoint = "blob.core.windows.net",
    ///         Location = "West US",
    ///         Login = "SacForSDKTest",
    ///         ManagerName = "hAzureSDKOperations",
    ///         ResourceGroupName = "ResourceGroupForSDKTest",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// 
    /// ## Import
    /// 
    /// An existing resource can be imported using its type token, name, and identifier, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure-native:storsimple/v20161001:StorageAccountCredential sacforsdktest /subscriptions/9eb689cd-7243-43b4-b6f6-5c65cb296641/resourceGroups/ResourceGroupForSDKTest/providers/Microsoft.StorSimple/managers/hAzureSDKOperations/storageAccountCredentials/sacforsdktest 
    /// ```
    /// </summary>
    [Obsolete(@"Version 2016-10-01 will be removed in v2 of the provider.")]
    [AzureNativeResourceType("azure-native:storsimple/v20161001:StorageAccountCredential")]
    public partial class StorageAccountCredential : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The details of the storage account password
        /// </summary>
        [Output("accessKey")]
        public Output<Outputs.AsymmetricEncryptedSecretResponse?> AccessKey { get; private set; } = null!;

        /// <summary>
        /// The cloud service provider
        /// </summary>
        [Output("cloudType")]
        public Output<string> CloudType { get; private set; } = null!;

        /// <summary>
        /// SSL needs to be enabled or not
        /// </summary>
        [Output("enableSSL")]
        public Output<string> EnableSSL { get; private set; } = null!;

        /// <summary>
        /// The storage endpoint
        /// </summary>
        [Output("endPoint")]
        public Output<string> EndPoint { get; private set; } = null!;

        /// <summary>
        /// The storage account's geo location
        /// </summary>
        [Output("location")]
        public Output<string?> Location { get; private set; } = null!;

        /// <summary>
        /// The storage account login
        /// </summary>
        [Output("login")]
        public Output<string> Login { get; private set; } = null!;

        /// <summary>
        /// The name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The type.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a StorageAccountCredential resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public StorageAccountCredential(string name, StorageAccountCredentialArgs args, CustomResourceOptions? options = null)
            : base("azure-native:storsimple/v20161001:StorageAccountCredential", name, args ?? new StorageAccountCredentialArgs(), MakeResourceOptions(options, ""))
        {
        }

        private StorageAccountCredential(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:storsimple/v20161001:StorageAccountCredential", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:storsimple:StorageAccountCredential"},
                    new global::Pulumi.Alias { Type = "azure-native:storsimple/v20170601:StorageAccountCredential"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing StorageAccountCredential resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static StorageAccountCredential Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new StorageAccountCredential(name, id, options);
        }
    }

    public sealed class StorageAccountCredentialArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The details of the storage account password
        /// </summary>
        [Input("accessKey")]
        public Input<Inputs.AsymmetricEncryptedSecretArgs>? AccessKey { get; set; }

        /// <summary>
        /// The cloud service provider
        /// </summary>
        [Input("cloudType", required: true)]
        public Input<Pulumi.AzureNative.StorSimple.V20161001.CloudType> CloudType { get; set; } = null!;

        /// <summary>
        /// The credential name.
        /// </summary>
        [Input("credentialName")]
        public Input<string>? CredentialName { get; set; }

        /// <summary>
        /// SSL needs to be enabled or not
        /// </summary>
        [Input("enableSSL", required: true)]
        public Input<Pulumi.AzureNative.StorSimple.V20161001.SslStatus> EnableSSL { get; set; } = null!;

        /// <summary>
        /// The storage endpoint
        /// </summary>
        [Input("endPoint", required: true)]
        public Input<string> EndPoint { get; set; } = null!;

        /// <summary>
        /// The storage account's geo location
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The storage account login
        /// </summary>
        [Input("login", required: true)]
        public Input<string> Login { get; set; } = null!;

        /// <summary>
        /// The manager name
        /// </summary>
        [Input("managerName", required: true)]
        public Input<string> ManagerName { get; set; } = null!;

        /// <summary>
        /// The resource group name
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public StorageAccountCredentialArgs()
        {
        }
        public static new StorageAccountCredentialArgs Empty => new StorageAccountCredentialArgs();
    }
}
