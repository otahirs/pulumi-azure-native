// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.SecurityInsights.V20221201Preview
{
    /// <summary>
    /// Represents Codeless UI data connector.
    /// 
    /// ## Example Usage
    /// ### Creates or updates a APIPolling data connector
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var codelessUiDataConnector = new AzureNative.SecurityInsights.V20221201Preview.CodelessUiDataConnector("codelessUiDataConnector", new()
    ///     {
    ///         DataConnectorId = "316ec55e-7138-4d63-ab18-90c8a60fd1c8",
    ///         ResourceGroupName = "myRg",
    ///         WorkspaceName = "myWorkspace",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Creates or updates a Dynamics365 data connector.
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var codelessUiDataConnector = new AzureNative.SecurityInsights.V20221201Preview.CodelessUiDataConnector("codelessUiDataConnector", new()
    ///     {
    ///         DataConnectorId = "c2541efb-c9a6-47fe-9501-87d1017d1512",
    ///         ResourceGroupName = "myRg",
    ///         WorkspaceName = "myWorkspace",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Creates or updates a GenericUI data connector
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var codelessUiDataConnector = new AzureNative.SecurityInsights.V20221201Preview.CodelessUiDataConnector("codelessUiDataConnector", new()
    ///     {
    ///         ConnectorUiConfig = new AzureNative.SecurityInsights.V20221201Preview.Inputs.CodelessUiConnectorConfigPropertiesArgs
    ///         {
    ///             Availability = new AzureNative.SecurityInsights.V20221201Preview.Inputs.AvailabilityArgs
    ///             {
    ///                 IsPreview = true,
    ///                 Status = 1,
    ///             },
    ///             ConnectivityCriteria = new[]
    ///             {
    ///                 new AzureNative.SecurityInsights.V20221201Preview.Inputs.CodelessUiConnectorConfigPropertiesConnectivityCriteriaArgs
    ///                 {
    ///                     Type = "IsConnectedQuery",
    ///                     Value = new[]
    ///                     {
    ///                         @"{{graphQueriesTableName}}
    ///             | summarize LastLogReceived = max(TimeGenerated)
    ///             | project IsConnected = LastLogReceived &gt; ago(30d)",
    ///                     },
    ///                 },
    ///             },
    ///             DataTypes = new[]
    ///             {
    ///                 new AzureNative.SecurityInsights.V20221201Preview.Inputs.CodelessUiConnectorConfigPropertiesDataTypesArgs
    ///                 {
    ///                     LastDataReceivedQuery = @"{{graphQueriesTableName}}
    ///             | summarize Time = max(TimeGenerated)
    ///             | where isnotempty(Time)",
    ///                     Name = "{{graphQueriesTableName}}",
    ///                 },
    ///             },
    ///             DescriptionMarkdown = "The [Qualys Vulnerability Management (VM)](https://www.qualys.com/apps/vulnerability-management/) data connector provides the capability to ingest vulnerability host detection data into Azure Sentinel through the Qualys API. The connector provides visibility into host detection data from vulerability scans. This connector provides Azure Sentinel the capability to view dashboards, create custom alerts, and improve investigation ",
    ///             GraphQueries = new[]
    ///             {
    ///                 new AzureNative.SecurityInsights.V20221201Preview.Inputs.CodelessUiConnectorConfigPropertiesGraphQueriesArgs
    ///                 {
    ///                     BaseQuery = "{{graphQueriesTableName}}",
    ///                     Legend = "{{graphQueriesTableName}}",
    ///                     MetricName = "Total data received",
    ///                 },
    ///             },
    ///             GraphQueriesTableName = "QualysHostDetection_CL",
    ///             InstructionSteps = new[]
    ///             {
    ///                 new AzureNative.SecurityInsights.V20221201Preview.Inputs.CodelessUiConnectorConfigPropertiesInstructionStepsArgs
    ///                 {
    ///                     Description = "&gt;**NOTE:** This connector uses Azure Functions to connect to Qualys VM to pull its logs into Azure Sentinel. This might result in additional data ingestion costs. Check the [Azure Functions pricing page](https://azure.microsoft.com/pricing/details/functions/) for details.",
    ///                     Title = "",
    ///                 },
    ///                 new AzureNative.SecurityInsights.V20221201Preview.Inputs.CodelessUiConnectorConfigPropertiesInstructionStepsArgs
    ///                 {
    ///                     Description = "&gt;**(Optional Step)** Securely store workspace and API authorization key(s) or token(s) in Azure Key Vault. Azure Key Vault provides a secure mechanism to store and retrieve key values. [Follow these instructions](https://docs.microsoft.com/azure/app-service/app-service-key-vault-references) to use Azure Key Vault with an Azure Function App.",
    ///                     Title = "",
    ///                 },
    ///                 new AzureNative.SecurityInsights.V20221201Preview.Inputs.CodelessUiConnectorConfigPropertiesInstructionStepsArgs
    ///                 {
    ///                     Description = @"**STEP 1 - Configuration steps for the Qualys VM API**
    /// 
    /// 1. Log into the Qualys Vulnerability Management console with an administrator account, select the **Users** tab and the **Users** subtab. 
    /// 2. Click on the **New** drop-down menu and select **Users..**
    /// 3. Create a username and password for the API account. 
    /// 4. In the **User Roles** tab, ensure the account role is set to **Manager** and access is allowed to **GUI** and **API**
    /// 4. Log out of the administrator account and log into the console with the new API credentials for validation, then log out of the API account. 
    /// 5. Log back into the console using an administrator account and modify the API accounts User Roles, removing access to **GUI**. 
    /// 6. Save all changes.",
    ///                     Title = "",
    ///                 },
    ///                 new AzureNative.SecurityInsights.V20221201Preview.Inputs.CodelessUiConnectorConfigPropertiesInstructionStepsArgs
    ///                 {
    ///                     Description = @"**STEP 2 - Choose ONE from the following two deployment options to deploy the connector and the associated Azure Function**
    /// 
    /// &gt;**IMPORTANT:** Before deploying the Qualys VM connector, have the Workspace ID and Workspace Primary Key (can be copied from the following), as well as the Qualys VM API Authorization Key(s), readily available.",
    ///                     Instructions = new[]
    ///                     {
    ///                         new AzureNative.SecurityInsights.V20221201Preview.Inputs.InstructionStepsInstructionsArgs
    ///                         {
    ///                             Parameters = 
    ///                             {
    ///                                 { "fillWith", new[]
    ///                                 {
    ///                                     "WorkspaceId",
    ///                                 } },
    ///                                 { "label", "Workspace ID" },
    ///                             },
    ///                             Type = "CopyableLabel",
    ///                         },
    ///                         new AzureNative.SecurityInsights.V20221201Preview.Inputs.InstructionStepsInstructionsArgs
    ///                         {
    ///                             Parameters = 
    ///                             {
    ///                                 { "fillWith", new[]
    ///                                 {
    ///                                     "PrimaryKey",
    ///                                 } },
    ///                                 { "label", "Primary Key" },
    ///                             },
    ///                             Type = "CopyableLabel",
    ///                         },
    ///                     },
    ///                     Title = "",
    ///                 },
    ///                 new AzureNative.SecurityInsights.V20221201Preview.Inputs.CodelessUiConnectorConfigPropertiesInstructionStepsArgs
    ///                 {
    ///                     Description = @"Use this method for automated deployment of the Qualys VM connector using an ARM Tempate.
    /// 
    /// 1. Click the **Deploy to Azure** button below. 
    /// 
    /// 	[![Deploy To Azure](https://aka.ms/deploytoazurebutton)](https://aka.ms/sentinelqualysvmazuredeploy)
    /// 2. Select the preferred **Subscription**, **Resource Group** and **Location**. 
    /// 3. Enter the **Workspace ID**, **Workspace Key**, **API Username**, **API Password** , update the **URI**, and any additional URI **Filter Parameters** (each filter should be separated by an ""&amp;"" symbol, no spaces.) 
    /// &gt; - Enter the URI that corresponds to your region. The complete list of API Server URLs can be [found here](https://www.qualys.com/docs/qualys-api-vmpc-user-guide.pdf#G4.735348) -- There is no need to add a time suffix to the URI, the Function App will dynamically append the Time Value to the URI in the proper format. 
    ///  - The default **Time Interval** is set to pull the last five (5) minutes of data. If the time interval needs to be modified, it is recommended to change the Function App Timer Trigger accordingly (in the function.json file, post deployment) to prevent overlapping data ingestion. 
    /// &gt; - Note: If using Azure Key Vault secrets for any of the values above, use the`@Microsoft.KeyVault(SecretUri={Security Identifier})`schema in place of the string values. Refer to [Key Vault references documentation](https://docs.microsoft.com/azure/app-service/app-service-key-vault-references) for further details. 
    /// 4. Mark the checkbox labeled **I agree to the terms and conditions stated above**. 
    /// 5. Click **Purchase** to deploy.",
    ///                     Title = "Option 1 - Azure Resource Manager (ARM) Template",
    ///                 },
    ///                 new AzureNative.SecurityInsights.V20221201Preview.Inputs.CodelessUiConnectorConfigPropertiesInstructionStepsArgs
    ///                 {
    ///                     Description = "Use the following step-by-step instructions to deploy the Quayls VM connector manually with Azure Functions.",
    ///                     Title = "Option 2 - Manual Deployment of Azure Functions",
    ///                 },
    ///                 new AzureNative.SecurityInsights.V20221201Preview.Inputs.CodelessUiConnectorConfigPropertiesInstructionStepsArgs
    ///                 {
    ///                     Description = @"**1. Create a Function App**
    /// 
    /// 1.  From the Azure Portal, navigate to [Function App](https://portal.azure.com/#blade/HubsExtension/BrowseResource/resourceType/Microsoft.Web%2Fsites/kind/functionapp), and select **+ Add**.
    /// 2. In the **Basics** tab, ensure Runtime stack is set to **Powershell Core**. 
    /// 3. In the **Hosting** tab, ensure the **Consumption (Serverless)** plan type is selected.
    /// 4. Make other preferrable configuration changes, if needed, then click **Create**.",
    ///                     Title = "",
    ///                 },
    ///                 new AzureNative.SecurityInsights.V20221201Preview.Inputs.CodelessUiConnectorConfigPropertiesInstructionStepsArgs
    ///                 {
    ///                     Description = @"**2. Import Function App Code**
    /// 
    /// 1. In the newly created Function App, select **Functions** on the left pane and click **+ New Function**.
    /// 2. Select **Timer Trigger**.
    /// 3. Enter a unique Function **Name** and leave the default cron schedule of every 5 minutes, then click **Create**.
    /// 5. Click on **Code + Test** on the left pane. 
    /// 6. Copy the [Function App Code](https://aka.ms/sentinelqualysvmazurefunctioncode) and paste into the Function App `run.ps1` editor.
    /// 7. Click **Save**.",
    ///                     Title = "",
    ///                 },
    ///                 new AzureNative.SecurityInsights.V20221201Preview.Inputs.CodelessUiConnectorConfigPropertiesInstructionStepsArgs
    ///                 {
    ///                     Description = @"**3. Configure the Function App**
    /// 
    /// 1. In the Function App, select the Function App Name and select **Configuration**.
    /// 2. In the **Application settings** tab, select **+ New application setting**.
    /// 3. Add each of the following seven (7) application settings individually, with their respective string values (case-sensitive): 
    /// 		apiUsername
    /// 		apiPassword
    /// 		workspaceID
    /// 		workspaceKey
    /// 		uri
    /// 		filterParameters
    /// 		timeInterval
    /// &gt; - Enter the URI that corresponds to your region. The complete list of API Server URLs can be [found here](https://www.qualys.com/docs/qualys-api-vmpc-user-guide.pdf#G4.735348). The `uri` value must follow the following schema: `https://&lt;API Server&gt;/api/2.0/fo/asset/host/vm/detection/?action=list&amp;vm_processed_after=` -- There is no need to add a time suffix to the URI, the Function App will dynamically append the Time Value to the URI in the proper format.
    /// &gt; - Add any additional filter parameters, for the `filterParameters` variable, that need to be appended to the URI. Each parameter should be seperated by an ""&amp;"" symbol and should not include any spaces.
    /// &gt; - Set the `timeInterval` (in minutes) to the value of `5` to correspond to the Timer Trigger of every `5` minutes. If the time interval needs to be modified, it is recommended to change the Function App Timer Trigger accordingly to prevent overlapping data ingestion.
    /// &gt; - Note: If using Azure Key Vault, use the`@Microsoft.KeyVault(SecretUri={Security Identifier})`schema in place of the string values. Refer to [Key Vault references documentation](https://docs.microsoft.com/azure/app-service/app-service-key-vault-references) for further details.
    /// 4. Once all application settings have been entered, click **Save**.",
    ///                     Title = "",
    ///                 },
    ///                 new AzureNative.SecurityInsights.V20221201Preview.Inputs.CodelessUiConnectorConfigPropertiesInstructionStepsArgs
    ///                 {
    ///                     Description = @"**4. Configure the host.json**.
    /// 
    /// Due to the potentially large amount of Qualys host detection data being ingested, it can cause the execution time to surpass the default Function App timeout of five (5) minutes. Increase the default timeout duration to the maximum of ten (10) minutes, under the Consumption Plan, to allow more time for the Function App to execute.
    /// 
    /// 1. In the Function App, select the Function App Name and select the **App Service Editor** blade.
    /// 2. Click **Go** to open the editor, then select the **host.json** file under the **wwwroot** directory.
    /// 3. Add the line `""functionTimeout"": ""00:10:00"",` above the `managedDependancy` line 
    /// 4. Ensure **SAVED** appears on the top right corner of the editor, then exit the editor.
    /// 
    /// &gt; NOTE: If a longer timeout duration is required, consider upgrading to an [App Service Plan](https://docs.microsoft.com/azure/azure-functions/functions-scale#timeout)",
    ///                     Title = "",
    ///                 },
    ///             },
    ///             Permissions = new AzureNative.SecurityInsights.V20221201Preview.Inputs.PermissionsArgs
    ///             {
    ///                 Customs = new[]
    ///                 {
    ///                     new AzureNative.SecurityInsights.V20221201Preview.Inputs.PermissionsCustomsArgs
    ///                     {
    ///                         Description = "Read and write permissions to Azure Functions to create a Function App is required. [See the documentation to learn more about Azure Functions](https://docs.microsoft.com/azure/azure-functions/).",
    ///                         Name = "Microsoft.Web/sites permissions",
    ///                     },
    ///                     new AzureNative.SecurityInsights.V20221201Preview.Inputs.PermissionsCustomsArgs
    ///                     {
    ///                         Description = "A Qualys VM API username and password is required. [See the documentation to learn more about Qualys VM API](https://www.qualys.com/docs/qualys-api-vmpc-user-guide.pdf).",
    ///                         Name = "Qualys API Key",
    ///                     },
    ///                 },
    ///                 ResourceProvider = new[]
    ///                 {
    ///                     new AzureNative.SecurityInsights.V20221201Preview.Inputs.PermissionsResourceProviderArgs
    ///                     {
    ///                         PermissionsDisplayText = "read and write permissions on the workspace are required.",
    ///                         Provider = "Microsoft.OperationalInsights/workspaces",
    ///                         ProviderDisplayName = "Workspace",
    ///                         RequiredPermissions = new AzureNative.SecurityInsights.V20221201Preview.Inputs.RequiredPermissionsArgs
    ///                         {
    ///                             Delete = true,
    ///                             Read = true,
    ///                             Write = true,
    ///                         },
    ///                         Scope = "Workspace",
    ///                     },
    ///                     new AzureNative.SecurityInsights.V20221201Preview.Inputs.PermissionsResourceProviderArgs
    ///                     {
    ///                         PermissionsDisplayText = "read permissions to shared keys for the workspace are required. [See the documentation to learn more about workspace keys](https://docs.microsoft.com/azure/azure-monitor/platform/agent-windows#obtain-workspace-id-and-key).",
    ///                         Provider = "Microsoft.OperationalInsights/workspaces/sharedKeys",
    ///                         ProviderDisplayName = "Keys",
    ///                         RequiredPermissions = new AzureNative.SecurityInsights.V20221201Preview.Inputs.RequiredPermissionsArgs
    ///                         {
    ///                             Action = true,
    ///                         },
    ///                         Scope = "Workspace",
    ///                     },
    ///                 },
    ///             },
    ///             Publisher = "Qualys",
    ///             SampleQueries = new[]
    ///             {
    ///                 new AzureNative.SecurityInsights.V20221201Preview.Inputs.CodelessUiConnectorConfigPropertiesSampleQueriesArgs
    ///                 {
    ///                     Description = "Top 10 Vulerabilities detected",
    ///                     Query = @"{{graphQueriesTableName}}
    ///  | mv-expand todynamic(Detections_s)
    ///  | extend Vulnerability = tostring(Detections_s.Results)
    ///  | summarize count() by Vulnerability
    ///  | top 10 by count_",
    ///                 },
    ///             },
    ///             Title = "Qualys Vulnerability Management (CCP DEMO)",
    ///         },
    ///         DataConnectorId = "316ec55e-7138-4d63-ab18-90c8a60fd1c8",
    ///         Kind = "GenericUI",
    ///         ResourceGroupName = "myRg",
    ///         WorkspaceName = "myWorkspace",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Creates or updates a Threat Intelligence Taxii data connector.
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var codelessUiDataConnector = new AzureNative.SecurityInsights.V20221201Preview.CodelessUiDataConnector("codelessUiDataConnector", new()
    ///     {
    ///         DataConnectorId = "73e01a99-5cd7-4139-a149-9f2736ff2ab5",
    ///         ResourceGroupName = "myRg",
    ///         WorkspaceName = "myWorkspace",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Creates or updates an Office PowerBI data connector
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var codelessUiDataConnector = new AzureNative.SecurityInsights.V20221201Preview.CodelessUiDataConnector("codelessUiDataConnector", new()
    ///     {
    ///         DataConnectorId = "73e01a99-5cd7-4139-a149-9f2736ff2ab5",
    ///         ResourceGroupName = "myRg",
    ///         WorkspaceName = "myWorkspace",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Creates or updates an Office365 Project data connector
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var codelessUiDataConnector = new AzureNative.SecurityInsights.V20221201Preview.CodelessUiDataConnector("codelessUiDataConnector", new()
    ///     {
    ///         DataConnectorId = "73e01a99-5cd7-4139-a149-9f2736ff2ab5",
    ///         ResourceGroupName = "myRg",
    ///         WorkspaceName = "myWorkspace",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Creates or updates an Office365 data connector
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var codelessUiDataConnector = new AzureNative.SecurityInsights.V20221201Preview.CodelessUiDataConnector("codelessUiDataConnector", new()
    ///     {
    ///         DataConnectorId = "73e01a99-5cd7-4139-a149-9f2736ff2ab5",
    ///         ResourceGroupName = "myRg",
    ///         WorkspaceName = "myWorkspace",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Creates or updates an Threat Intelligence Platform data connector
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var codelessUiDataConnector = new AzureNative.SecurityInsights.V20221201Preview.CodelessUiDataConnector("codelessUiDataConnector", new()
    ///     {
    ///         DataConnectorId = "73e01a99-5cd7-4139-a149-9f2736ff2ab5",
    ///         ResourceGroupName = "myRg",
    ///         WorkspaceName = "myWorkspace",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// 
    /// ## Import
    /// 
    /// An existing resource can be imported using its type token, name, and identifier, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure-native:securityinsights/v20221201preview:CodelessUiDataConnector 73e01a99-5cd7-4139-a149-9f2736ff2ab5 /subscriptions/d0cfe6b2-9ac0-4464-9919-dccaee2e48c0/resourceGroups/myRg/providers/Microsoft.OperationalInsights/workspaces/myWorkspace/providers/Microsoft.SecurityInsights/dataConnectors/73e01a99-5cd7-4139-a149-9f2736ff2ab5 
    /// ```
    /// </summary>
    [AzureNativeResourceType("azure-native:securityinsights/v20221201preview:CodelessUiDataConnector")]
    public partial class CodelessUiDataConnector : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Config to describe the instructions blade
        /// </summary>
        [Output("connectorUiConfig")]
        public Output<Outputs.CodelessUiConnectorConfigPropertiesResponse?> ConnectorUiConfig { get; private set; } = null!;

        /// <summary>
        /// Etag of the azure resource
        /// </summary>
        [Output("etag")]
        public Output<string?> Etag { get; private set; } = null!;

        /// <summary>
        /// The kind of the data connector
        /// Expected value is 'GenericUI'.
        /// </summary>
        [Output("kind")]
        public Output<string> Kind { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a CodelessUiDataConnector resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CodelessUiDataConnector(string name, CodelessUiDataConnectorArgs args, CustomResourceOptions? options = null)
            : base("azure-native:securityinsights/v20221201preview:CodelessUiDataConnector", name, MakeArgs(args), MakeResourceOptions(options, ""))
        {
        }

        private CodelessUiDataConnector(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:securityinsights/v20221201preview:CodelessUiDataConnector", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CodelessUiDataConnectorArgs MakeArgs(CodelessUiDataConnectorArgs args)
        {
            args ??= new CodelessUiDataConnectorArgs();
            args.Kind = "GenericUI";
            return args;
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights:CodelessUiDataConnector"},
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20190101preview:CodelessUiDataConnector"},
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20200101:CodelessUiDataConnector"},
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20210301preview:CodelessUiDataConnector"},
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20210901preview:CodelessUiDataConnector"},
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20211001:CodelessUiDataConnector"},
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20211001preview:CodelessUiDataConnector"},
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20220101preview:CodelessUiDataConnector"},
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20220401preview:CodelessUiDataConnector"},
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20220501preview:CodelessUiDataConnector"},
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20220601preview:CodelessUiDataConnector"},
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20220701preview:CodelessUiDataConnector"},
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20220801:CodelessUiDataConnector"},
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20220801preview:CodelessUiDataConnector"},
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20220901preview:CodelessUiDataConnector"},
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20221001preview:CodelessUiDataConnector"},
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20221101:CodelessUiDataConnector"},
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20221101preview:CodelessUiDataConnector"},
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20230201:CodelessUiDataConnector"},
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20230201preview:CodelessUiDataConnector"},
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20230301preview:CodelessUiDataConnector"},
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20230401preview:CodelessUiDataConnector"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CodelessUiDataConnector resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CodelessUiDataConnector Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new CodelessUiDataConnector(name, id, options);
        }
    }

    public sealed class CodelessUiDataConnectorArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Config to describe the instructions blade
        /// </summary>
        [Input("connectorUiConfig")]
        public Input<Inputs.CodelessUiConnectorConfigPropertiesArgs>? ConnectorUiConfig { get; set; }

        /// <summary>
        /// Connector ID
        /// </summary>
        [Input("dataConnectorId")]
        public Input<string>? DataConnectorId { get; set; }

        /// <summary>
        /// The kind of the data connector
        /// Expected value is 'GenericUI'.
        /// </summary>
        [Input("kind", required: true)]
        public Input<string> Kind { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public Input<string> WorkspaceName { get; set; } = null!;

        public CodelessUiDataConnectorArgs()
        {
        }
        public static new CodelessUiDataConnectorArgs Empty => new CodelessUiDataConnectorArgs();
    }
}
