// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.SecurityInsights.V20210901Preview
{
    /// <summary>
    /// Threat intelligence information object.
    /// 
    /// ## Example Usage
    /// ### Update a threat Intelligence indicator
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var threatIntelligenceIndicator = new AzureNative.SecurityInsights.V20210901Preview.ThreatIntelligenceIndicator("threatIntelligenceIndicator", new()
    ///     {
    ///         Confidence = 78,
    ///         CreatedByRef = "contoso@contoso.com",
    ///         Description = "debugging indicators",
    ///         DisplayName = "new schema",
    ///         ExternalReferences = new[] {},
    ///         GranularMarkings = new[] {},
    ///         KillChainPhases = new[] {},
    ///         Kind = "indicator",
    ///         Labels = new[] {},
    ///         Modified = "",
    ///         Name = "d9cd6f0b-96b9-3984-17cd-a779d1e15a93",
    ///         Pattern = "[url:value = 'https://www.contoso.com']",
    ///         PatternType = "url",
    ///         ResourceGroupName = "myRg",
    ///         Revoked = false,
    ///         Source = "Azure Sentinel",
    ///         ThreatIntelligenceTags = new[]
    ///         {
    ///             "new schema",
    ///         },
    ///         ThreatTypes = new[]
    ///         {
    ///             "compromised",
    ///         },
    ///         ValidFrom = "2020-04-15T17:44:00.114052Z",
    ///         ValidUntil = "",
    ///         WorkspaceName = "myWorkspace",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// 
    /// ## Import
    /// 
    /// An existing resource can be imported using its type token, name, and identifier, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure-native:securityinsights/v20210901preview:ThreatIntelligenceIndicator 180105c7-a28d-b1a2-4a78-234f6ec80fd6 /subscriptions/bd794837-4d29-4647-9105-6339bfdb4e6a/resourceGroups/myRg/providers/Microsoft.OperationalInsights/workspaces/myWorkspace/providers/Microsoft.SecurityInsights/ThreatIntelligence/180105c7-a28d-b1a2-4a78-234f6ec80fd6 
    /// ```
    /// </summary>
    [AzureNativeResourceType("azure-native:securityinsights/v20210901preview:ThreatIntelligenceIndicator")]
    public partial class ThreatIntelligenceIndicator : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Etag of the azure resource
        /// </summary>
        [Output("etag")]
        public Output<string?> Etag { get; private set; } = null!;

        /// <summary>
        /// The kind of the entity.
        /// </summary>
        [Output("kind")]
        public Output<string> Kind { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a ThreatIntelligenceIndicator resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ThreatIntelligenceIndicator(string name, ThreatIntelligenceIndicatorArgs args, CustomResourceOptions? options = null)
            : base("azure-native:securityinsights/v20210901preview:ThreatIntelligenceIndicator", name, args ?? new ThreatIntelligenceIndicatorArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ThreatIntelligenceIndicator(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:securityinsights/v20210901preview:ThreatIntelligenceIndicator", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights:ThreatIntelligenceIndicator"},
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20190101preview:ThreatIntelligenceIndicator"},
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20210401:ThreatIntelligenceIndicator"},
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20211001:ThreatIntelligenceIndicator"},
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20211001preview:ThreatIntelligenceIndicator"},
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20220101preview:ThreatIntelligenceIndicator"},
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20220401preview:ThreatIntelligenceIndicator"},
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20220501preview:ThreatIntelligenceIndicator"},
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20220601preview:ThreatIntelligenceIndicator"},
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20220701preview:ThreatIntelligenceIndicator"},
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20220801:ThreatIntelligenceIndicator"},
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20220801preview:ThreatIntelligenceIndicator"},
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20220901preview:ThreatIntelligenceIndicator"},
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20221001preview:ThreatIntelligenceIndicator"},
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20221101:ThreatIntelligenceIndicator"},
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20221101preview:ThreatIntelligenceIndicator"},
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20221201preview:ThreatIntelligenceIndicator"},
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20230201:ThreatIntelligenceIndicator"},
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20230201preview:ThreatIntelligenceIndicator"},
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20230301preview:ThreatIntelligenceIndicator"},
                    new global::Pulumi.Alias { Type = "azure-native:securityinsights/v20230401preview:ThreatIntelligenceIndicator"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ThreatIntelligenceIndicator resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ThreatIntelligenceIndicator Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new ThreatIntelligenceIndicator(name, id, options);
        }
    }

    public sealed class ThreatIntelligenceIndicatorArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Confidence of threat intelligence entity
        /// </summary>
        [Input("confidence")]
        public Input<int>? Confidence { get; set; }

        /// <summary>
        /// Created by
        /// </summary>
        [Input("created")]
        public Input<string>? Created { get; set; }

        /// <summary>
        /// Created by reference of threat intelligence entity
        /// </summary>
        [Input("createdByRef")]
        public Input<string>? CreatedByRef { get; set; }

        /// <summary>
        /// Is threat intelligence entity defanged
        /// </summary>
        [Input("defanged")]
        public Input<bool>? Defanged { get; set; }

        /// <summary>
        /// Description of a threat intelligence entity
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Display name of a threat intelligence entity
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// Extensions map
        /// </summary>
        [Input("extensions")]
        public Input<object>? Extensions { get; set; }

        /// <summary>
        /// External ID of threat intelligence entity
        /// </summary>
        [Input("externalId")]
        public Input<string>? ExternalId { get; set; }

        /// <summary>
        /// External last updated time in UTC
        /// </summary>
        [Input("externalLastUpdatedTimeUtc")]
        public Input<string>? ExternalLastUpdatedTimeUtc { get; set; }

        [Input("externalReferences")]
        private InputList<Inputs.ThreatIntelligenceExternalReferenceArgs>? _externalReferences;

        /// <summary>
        /// External References
        /// </summary>
        public InputList<Inputs.ThreatIntelligenceExternalReferenceArgs> ExternalReferences
        {
            get => _externalReferences ?? (_externalReferences = new InputList<Inputs.ThreatIntelligenceExternalReferenceArgs>());
            set => _externalReferences = value;
        }

        [Input("granularMarkings")]
        private InputList<Inputs.ThreatIntelligenceGranularMarkingModelArgs>? _granularMarkings;

        /// <summary>
        /// Granular Markings
        /// </summary>
        public InputList<Inputs.ThreatIntelligenceGranularMarkingModelArgs> GranularMarkings
        {
            get => _granularMarkings ?? (_granularMarkings = new InputList<Inputs.ThreatIntelligenceGranularMarkingModelArgs>());
            set => _granularMarkings = value;
        }

        [Input("indicatorTypes")]
        private InputList<string>? _indicatorTypes;

        /// <summary>
        /// Indicator types of threat intelligence entities
        /// </summary>
        public InputList<string> IndicatorTypes
        {
            get => _indicatorTypes ?? (_indicatorTypes = new InputList<string>());
            set => _indicatorTypes = value;
        }

        [Input("killChainPhases")]
        private InputList<Inputs.ThreatIntelligenceKillChainPhaseArgs>? _killChainPhases;

        /// <summary>
        /// Kill chain phases
        /// </summary>
        public InputList<Inputs.ThreatIntelligenceKillChainPhaseArgs> KillChainPhases
        {
            get => _killChainPhases ?? (_killChainPhases = new InputList<Inputs.ThreatIntelligenceKillChainPhaseArgs>());
            set => _killChainPhases = value;
        }

        /// <summary>
        /// The kind of the entity.
        /// </summary>
        [Input("kind", required: true)]
        public InputUnion<string, Pulumi.AzureNative.SecurityInsights.V20210901Preview.ThreatIntelligenceResourceKindEnum> Kind { get; set; } = null!;

        [Input("labels")]
        private InputList<string>? _labels;

        /// <summary>
        /// Labels  of threat intelligence entity
        /// </summary>
        public InputList<string> Labels
        {
            get => _labels ?? (_labels = new InputList<string>());
            set => _labels = value;
        }

        /// <summary>
        /// Language of threat intelligence entity
        /// </summary>
        [Input("language")]
        public Input<string>? Language { get; set; }

        /// <summary>
        /// Last updated time in UTC
        /// </summary>
        [Input("lastUpdatedTimeUtc")]
        public Input<string>? LastUpdatedTimeUtc { get; set; }

        /// <summary>
        /// Modified by
        /// </summary>
        [Input("modified")]
        public Input<string>? Modified { get; set; }

        /// <summary>
        /// Threat intelligence indicator name field.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("objectMarkingRefs")]
        private InputList<string>? _objectMarkingRefs;

        /// <summary>
        /// Threat intelligence entity object marking references
        /// </summary>
        public InputList<string> ObjectMarkingRefs
        {
            get => _objectMarkingRefs ?? (_objectMarkingRefs = new InputList<string>());
            set => _objectMarkingRefs = value;
        }

        [Input("parsedPattern")]
        private InputList<Inputs.ThreatIntelligenceParsedPatternArgs>? _parsedPattern;

        /// <summary>
        /// Parsed patterns
        /// </summary>
        public InputList<Inputs.ThreatIntelligenceParsedPatternArgs> ParsedPattern
        {
            get => _parsedPattern ?? (_parsedPattern = new InputList<Inputs.ThreatIntelligenceParsedPatternArgs>());
            set => _parsedPattern = value;
        }

        /// <summary>
        /// Pattern of a threat intelligence entity
        /// </summary>
        [Input("pattern")]
        public Input<string>? Pattern { get; set; }

        /// <summary>
        /// Pattern type of a threat intelligence entity
        /// </summary>
        [Input("patternType")]
        public Input<string>? PatternType { get; set; }

        /// <summary>
        /// Pattern version of a threat intelligence entity
        /// </summary>
        [Input("patternVersion")]
        public Input<string>? PatternVersion { get; set; }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Is threat intelligence entity revoked
        /// </summary>
        [Input("revoked")]
        public Input<bool>? Revoked { get; set; }

        /// <summary>
        /// Source of a threat intelligence entity
        /// </summary>
        [Input("source")]
        public Input<string>? Source { get; set; }

        [Input("threatIntelligenceTags")]
        private InputList<string>? _threatIntelligenceTags;

        /// <summary>
        /// List of tags
        /// </summary>
        public InputList<string> ThreatIntelligenceTags
        {
            get => _threatIntelligenceTags ?? (_threatIntelligenceTags = new InputList<string>());
            set => _threatIntelligenceTags = value;
        }

        [Input("threatTypes")]
        private InputList<string>? _threatTypes;

        /// <summary>
        /// Threat types
        /// </summary>
        public InputList<string> ThreatTypes
        {
            get => _threatTypes ?? (_threatTypes = new InputList<string>());
            set => _threatTypes = value;
        }

        /// <summary>
        /// Valid from
        /// </summary>
        [Input("validFrom")]
        public Input<string>? ValidFrom { get; set; }

        /// <summary>
        /// Valid until
        /// </summary>
        [Input("validUntil")]
        public Input<string>? ValidUntil { get; set; }

        /// <summary>
        /// The name of the workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public Input<string> WorkspaceName { get; set; } = null!;

        public ThreatIntelligenceIndicatorArgs()
        {
        }
        public static new ThreatIntelligenceIndicatorArgs Empty => new ThreatIntelligenceIndicatorArgs();
    }
}
