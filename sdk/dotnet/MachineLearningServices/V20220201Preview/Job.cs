// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MachineLearningServices.V20220201Preview
{
    /// <summary>
    /// Azure Resource Manager resource envelope.
    /// 
    /// ## Example Usage
    /// ### CreateOrUpdate AutoML Job.
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var job = new AzureNative.MachineLearningServices.V20220201Preview.Job("job", new()
    ///     {
    ///         Id = "string",
    ///         JobBaseDetails = new AzureNative.MachineLearningServices.V20220201Preview.Inputs.AutoMLJobArgs
    ///         {
    ///             ComputeId = "string",
    ///             Description = "string",
    ///             DisplayName = "string",
    ///             EnvironmentId = "string",
    ///             EnvironmentVariables = 
    ///             {
    ///                 { "string", "string" },
    ///             },
    ///             ExperimentName = "string",
    ///             Identity = new AzureNative.MachineLearningServices.V20220201Preview.Inputs.AmlTokenArgs
    ///             {
    ///                 IdentityType = "AMLToken",
    ///             },
    ///             IsArchived = false,
    ///             JobType = "AutoML",
    ///             Outputs = 
    ///             {
    ///                 { "string", new AzureNative.MachineLearningServices.V20220201Preview.Inputs.UriFileJobOutputArgs
    ///                 {
    ///                     Description = "string",
    ///                     JobOutputType = "UriFile",
    ///                     Mode = "ReadWriteMount",
    ///                     Uri = "string",
    ///                 } },
    ///             },
    ///             Properties = 
    ///             {
    ///                 { "string", "string" },
    ///             },
    ///             Resources = new AzureNative.MachineLearningServices.V20220201Preview.Inputs.ResourceConfigurationArgs
    ///             {
    ///                 InstanceCount = 1,
    ///                 InstanceType = "string",
    ///                 Properties = 
    ///                 {
    ///                     { "string", 
    ///                     {
    ///                         { "9bec0ab0-c62f-4fa9-a97c-7b24bbcc90ad", null },
    ///                     } },
    ///                 },
    ///             },
    ///             Schedule = new AzureNative.MachineLearningServices.V20220201Preview.Inputs.CronScheduleArgs
    ///             {
    ///                 EndTime = "2020-01-01T12:34:56.999Z",
    ///                 Expression = "string",
    ///                 ScheduleStatus = "Disabled",
    ///                 ScheduleType = "Cron",
    ///                 StartTime = "2020-01-01T12:34:56.999Z",
    ///                 TimeZone = "string",
    ///             },
    ///             Services = 
    ///             {
    ///                 { "string", new AzureNative.MachineLearningServices.V20220201Preview.Inputs.JobServiceArgs
    ///                 {
    ///                     Endpoint = "string",
    ///                     JobServiceType = "string",
    ///                     Port = 1,
    ///                     Properties = 
    ///                     {
    ///                         { "string", "string" },
    ///                     },
    ///                 } },
    ///             },
    ///             Tags = 
    ///             {
    ///                 { "string", "string" },
    ///             },
    ///             TaskDetails = new AzureNative.MachineLearningServices.V20220201Preview.Inputs.ImageClassificationArgs
    ///             {
    ///                 DataSettings = new AzureNative.MachineLearningServices.V20220201Preview.Inputs.ImageVerticalDataSettingsArgs
    ///                 {
    ///                     TargetColumnName = "string",
    ///                     TrainingData = new AzureNative.MachineLearningServices.V20220201Preview.Inputs.TrainingDataSettingsArgs
    ///                     {
    ///                         Data = new AzureNative.MachineLearningServices.V20220201Preview.Inputs.MLTableJobInputArgs
    ///                         {
    ///                             JobInputType = "MLTable",
    ///                             Uri = "string",
    ///                         },
    ///                     },
    ///                 },
    ///                 LimitSettings = new AzureNative.MachineLearningServices.V20220201Preview.Inputs.ImageLimitSettingsArgs
    ///                 {
    ///                     MaxTrials = 2,
    ///                 },
    ///                 ModelSettings = new AzureNative.MachineLearningServices.V20220201Preview.Inputs.ImageModelSettingsClassificationArgs
    ///                 {
    ///                     ValidationCropSize = 2,
    ///                 },
    ///                 SearchSpace = new[]
    ///                 {
    ///                     new AzureNative.MachineLearningServices.V20220201Preview.Inputs.ImageModelDistributionSettingsClassificationArgs
    ///                     {
    ///                         ValidationCropSize = "choice(2, 360)",
    ///                     },
    ///                 },
    ///                 TaskType = "ImageClassification",
    ///             },
    ///         },
    ///         ResourceGroupName = "test-rg",
    ///         WorkspaceName = "my-aml-workspace",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### CreateOrUpdate Command Job.
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var job = new AzureNative.MachineLearningServices.V20220201Preview.Job("job", new()
    ///     {
    ///         Id = "string",
    ///         JobBaseDetails = new AzureNative.MachineLearningServices.V20220201Preview.Inputs.CommandJobArgs
    ///         {
    ///             CodeId = "string",
    ///             Command = "string",
    ///             ComputeId = "string",
    ///             Description = "string",
    ///             DisplayName = "string",
    ///             Distribution = new AzureNative.MachineLearningServices.V20220201Preview.Inputs.TensorFlowArgs
    ///             {
    ///                 DistributionType = "TensorFlow",
    ///                 ParameterServerCount = 1,
    ///                 WorkerCount = 1,
    ///             },
    ///             EnvironmentId = "string",
    ///             EnvironmentVariables = 
    ///             {
    ///                 { "string", "string" },
    ///             },
    ///             ExperimentName = "string",
    ///             Identity = new AzureNative.MachineLearningServices.V20220201Preview.Inputs.AmlTokenArgs
    ///             {
    ///                 IdentityType = "AMLToken",
    ///             },
    ///             Inputs = 
    ///             {
    ///                 { "string", new AzureNative.MachineLearningServices.V20220201Preview.Inputs.LiteralJobInputArgs
    ///                 {
    ///                     Description = "string",
    ///                     JobInputType = "Literal",
    ///                     Value = "string",
    ///                 } },
    ///             },
    ///             JobType = "Command",
    ///             Limits = new AzureNative.MachineLearningServices.V20220201Preview.Inputs.CommandJobLimitsArgs
    ///             {
    ///                 JobLimitsType = "Command",
    ///                 Timeout = "PT5M",
    ///             },
    ///             Outputs = 
    ///             {
    ///                 { "string", new AzureNative.MachineLearningServices.V20220201Preview.Inputs.UriFileJobOutputArgs
    ///                 {
    ///                     Description = "string",
    ///                     JobOutputType = "UriFile",
    ///                     Mode = "ReadWriteMount",
    ///                     Uri = "string",
    ///                 } },
    ///             },
    ///             Properties = 
    ///             {
    ///                 { "string", "string" },
    ///             },
    ///             Resources = new AzureNative.MachineLearningServices.V20220201Preview.Inputs.ResourceConfigurationArgs
    ///             {
    ///                 InstanceCount = 1,
    ///                 InstanceType = "string",
    ///                 Properties = 
    ///                 {
    ///                     { "string", 
    ///                     {
    ///                         { "e6b6493e-7d5e-4db3-be1e-306ec641327e", null },
    ///                     } },
    ///                 },
    ///             },
    ///             Services = 
    ///             {
    ///                 { "string", new AzureNative.MachineLearningServices.V20220201Preview.Inputs.JobServiceArgs
    ///                 {
    ///                     Endpoint = "string",
    ///                     JobServiceType = "string",
    ///                     Port = 1,
    ///                     Properties = 
    ///                     {
    ///                         { "string", "string" },
    ///                     },
    ///                 } },
    ///             },
    ///             Tags = 
    ///             {
    ///                 { "string", "string" },
    ///             },
    ///         },
    ///         ResourceGroupName = "test-rg",
    ///         WorkspaceName = "my-aml-workspace",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### CreateOrUpdate Pipeline Job.
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var job = new AzureNative.MachineLearningServices.V20220201Preview.Job("job", new()
    ///     {
    ///         Id = "string",
    ///         JobBaseDetails = new AzureNative.MachineLearningServices.V20220201Preview.Inputs.PipelineJobArgs
    ///         {
    ///             ComputeId = "string",
    ///             Description = "string",
    ///             DisplayName = "string",
    ///             ExperimentName = "string",
    ///             Inputs = 
    ///             {
    ///                 { "string", new AzureNative.MachineLearningServices.V20220201Preview.Inputs.LiteralJobInputArgs
    ///                 {
    ///                     Description = "string",
    ///                     JobInputType = "Literal",
    ///                     Value = "string",
    ///                 } },
    ///             },
    ///             JobType = "Pipeline",
    ///             Outputs = 
    ///             {
    ///                 { "string", new AzureNative.MachineLearningServices.V20220201Preview.Inputs.UriFileJobOutputArgs
    ///                 {
    ///                     Description = "string",
    ///                     JobOutputType = "UriFile",
    ///                     Mode = "Upload",
    ///                     Uri = "string",
    ///                 } },
    ///             },
    ///             Properties = 
    ///             {
    ///                 { "string", "string" },
    ///             },
    ///             Services = 
    ///             {
    ///                 { "string", new AzureNative.MachineLearningServices.V20220201Preview.Inputs.JobServiceArgs
    ///                 {
    ///                     Endpoint = "string",
    ///                     JobServiceType = "string",
    ///                     Port = 1,
    ///                     Properties = 
    ///                     {
    ///                         { "string", "string" },
    ///                     },
    ///                 } },
    ///             },
    ///             Settings = null,
    ///             Tags = 
    ///             {
    ///                 { "string", "string" },
    ///             },
    ///         },
    ///         ResourceGroupName = "test-rg",
    ///         WorkspaceName = "my-aml-workspace",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### CreateOrUpdate Sweep Job.
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var job = new AzureNative.MachineLearningServices.V20220201Preview.Job("job", new()
    ///     {
    ///         Id = "string",
    ///         JobBaseDetails = new AzureNative.MachineLearningServices.V20220201Preview.Inputs.SweepJobArgs
    ///         {
    ///             ComputeId = "string",
    ///             Description = "string",
    ///             DisplayName = "string",
    ///             EarlyTermination = new AzureNative.MachineLearningServices.V20220201Preview.Inputs.MedianStoppingPolicyArgs
    ///             {
    ///                 DelayEvaluation = 1,
    ///                 EvaluationInterval = 1,
    ///                 PolicyType = "MedianStopping",
    ///             },
    ///             ExperimentName = "string",
    ///             JobType = "Sweep",
    ///             Limits = new AzureNative.MachineLearningServices.V20220201Preview.Inputs.SweepJobLimitsArgs
    ///             {
    ///                 JobLimitsType = "Sweep",
    ///                 MaxConcurrentTrials = 1,
    ///                 MaxTotalTrials = 1,
    ///                 TrialTimeout = "PT1S",
    ///             },
    ///             Objective = new AzureNative.MachineLearningServices.V20220201Preview.Inputs.ObjectiveArgs
    ///             {
    ///                 Goal = "Minimize",
    ///                 PrimaryMetric = "string",
    ///             },
    ///             Properties = 
    ///             {
    ///                 { "string", "string" },
    ///             },
    ///             SamplingAlgorithm = new AzureNative.MachineLearningServices.V20220201Preview.Inputs.GridSamplingAlgorithmArgs
    ///             {
    ///                 SamplingAlgorithmType = "Grid",
    ///             },
    ///             SearchSpace = 
    ///             {
    ///                 { "string", null },
    ///             },
    ///             Services = 
    ///             {
    ///                 { "string", new AzureNative.MachineLearningServices.V20220201Preview.Inputs.JobServiceArgs
    ///                 {
    ///                     Endpoint = "string",
    ///                     JobServiceType = "string",
    ///                     Port = 1,
    ///                     Properties = 
    ///                     {
    ///                         { "string", "string" },
    ///                     },
    ///                 } },
    ///             },
    ///             Tags = 
    ///             {
    ///                 { "string", "string" },
    ///             },
    ///             Trial = new AzureNative.MachineLearningServices.V20220201Preview.Inputs.TrialComponentArgs
    ///             {
    ///                 CodeId = "string",
    ///                 Command = "string",
    ///                 Distribution = new AzureNative.MachineLearningServices.V20220201Preview.Inputs.MpiArgs
    ///                 {
    ///                     DistributionType = "Mpi",
    ///                     ProcessCountPerInstance = 1,
    ///                 },
    ///                 EnvironmentId = "string",
    ///                 EnvironmentVariables = 
    ///                 {
    ///                     { "string", "string" },
    ///                 },
    ///                 Resources = new AzureNative.MachineLearningServices.V20220201Preview.Inputs.ResourceConfigurationArgs
    ///                 {
    ///                     InstanceCount = 1,
    ///                     InstanceType = "string",
    ///                     Properties = 
    ///                     {
    ///                         { "string", 
    ///                         {
    ///                             { "e6b6493e-7d5e-4db3-be1e-306ec641327e", null },
    ///                         } },
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///         ResourceGroupName = "test-rg",
    ///         WorkspaceName = "my-aml-workspace",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// 
    /// ## Import
    /// 
    /// An existing resource can be imported using its type token, name, and identifier, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure-native:machinelearningservices/v20220201preview:Job string string 
    /// ```
    /// </summary>
    [AzureNativeResourceType("azure-native:machinelearningservices/v20220201preview:Job")]
    public partial class Job : global::Pulumi.CustomResource
    {
        /// <summary>
        /// [Required] Additional attributes of the entity.
        /// </summary>
        [Output("jobBaseDetails")]
        public Output<object> JobBaseDetails { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a Job resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Job(string name, JobArgs args, CustomResourceOptions? options = null)
            : base("azure-native:machinelearningservices/v20220201preview:Job", name, args ?? new JobArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Job(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:machinelearningservices/v20220201preview:Job", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:machinelearningservices:Job"},
                    new global::Pulumi.Alias { Type = "azure-native:machinelearningservices/v20210301preview:Job"},
                    new global::Pulumi.Alias { Type = "azure-native:machinelearningservices/v20220501:Job"},
                    new global::Pulumi.Alias { Type = "azure-native:machinelearningservices/v20220601preview:Job"},
                    new global::Pulumi.Alias { Type = "azure-native:machinelearningservices/v20221001:Job"},
                    new global::Pulumi.Alias { Type = "azure-native:machinelearningservices/v20221001preview:Job"},
                    new global::Pulumi.Alias { Type = "azure-native:machinelearningservices/v20221201preview:Job"},
                    new global::Pulumi.Alias { Type = "azure-native:machinelearningservices/v20230201preview:Job"},
                    new global::Pulumi.Alias { Type = "azure-native:machinelearningservices/v20230401preview:Job"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Job resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Job Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Job(name, id, options);
        }
    }

    public sealed class JobArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name and identifier for the Job. This is case-sensitive.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// [Required] Additional attributes of the entity.
        /// </summary>
        [Input("jobBaseDetails", required: true)]
        public object JobBaseDetails { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Name of Azure Machine Learning workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public Input<string> WorkspaceName { get; set; } = null!;

        public JobArgs()
        {
        }
        public static new JobArgs Empty => new JobArgs();
    }
}
