// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MachineLearningServices.V20210301Preview
{
    /// <summary>
    /// Azure Resource Manager resource envelope.
    /// 
    /// ## Example Usage
    /// ### CreateOrUpdate Command Job.
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var job = new AzureNative.MachineLearningServices.V20210301Preview.Job("job", new()
    ///     {
    ///         Id = "testJob",
    ///         Properties = new AzureNative.MachineLearningServices.V20210301Preview.Inputs.CommandJobArgs
    ///         {
    ///             CodeId = "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/resourceGroup-1234/providers/Microsoft.MachineLearningServices/workspaces/testworkspace/codes/mycode/versions/1",
    ///             Command = "python file.py test",
    ///             Compute = new AzureNative.MachineLearningServices.V20210301Preview.Inputs.ComputeConfigurationArgs
    ///             {
    ///                 InstanceCount = 1,
    ///                 Target = "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/resourceGroup-1234/providers/Microsoft.MachineLearningServices/workspaces/testworkspace/computes/mycompute",
    ///             },
    ///             Description = "string",
    ///             Distribution = new AzureNative.MachineLearningServices.V20210301Preview.Inputs.PyTorchArgs
    ///             {
    ///                 DistributionType = "PyTorch",
    ///                 ProcessCount = 2,
    ///             },
    ///             EnvironmentId = "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/resourceGroup-1234/providers/Microsoft.MachineLearningServices/workspaces/testworkspace/environments/AzureML-Tutorial/versions/1",
    ///             EnvironmentVariables = 
    ///             {
    ///                 { "MY_ENV_VAR1", "string" },
    ///                 { "MY_ENV_VAR2", "string" },
    ///             },
    ///             ExperimentName = "myExperiment",
    ///             Identity = new AzureNative.MachineLearningServices.V20210301Preview.Inputs.AmlTokenArgs
    ///             {
    ///                 IdentityType = "AMLToken",
    ///             },
    ///             InputDataBindings = 
    ///             {
    ///                 { "test", new AzureNative.MachineLearningServices.V20210301Preview.Inputs.InputDataBindingArgs
    ///                 {
    ///                     DataId = "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/resourceGroup-1234/providers/Microsoft.MachineLearningServices/workspaces/testworkspace/data/mydataset/versions/1",
    ///                     PathOnCompute = "path/on/compute",
    ///                 } },
    ///             },
    ///             JobType = "Command",
    ///             OutputDataBindings = 
    ///             {
    ///                 { "test", new AzureNative.MachineLearningServices.V20210301Preview.Inputs.OutputDataBindingArgs
    ///                 {
    ///                     DatastoreId = "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/resourceGroup-1234/providers/Microsoft.MachineLearningServices/workspaces/testworkspace/datastore/mydatastore",
    ///                     PathOnCompute = "path/on/compute",
    ///                 } },
    ///             },
    ///             Properties = 
    ///             {
    ///                 { "additionalProp1", "string" },
    ///                 { "additionalProp2", "string" },
    ///                 { "additionalProp3", "string" },
    ///             },
    ///             Tags = 
    ///             {
    ///                 { "additionalProp1", "string" },
    ///                 { "additionalProp2", "string" },
    ///                 { "additionalProp3", "string" },
    ///             },
    ///             Timeout = "PT1M",
    ///         },
    ///         ResourceGroupName = "testrg123",
    ///         WorkspaceName = "testworkspace",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### CreateOrUpdate Sweep Job.
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var job = new AzureNative.MachineLearningServices.V20210301Preview.Job("job", new()
    ///     {
    ///         Id = "testJob",
    ///         Properties = new AzureNative.MachineLearningServices.V20210301Preview.Inputs.SweepJobArgs
    ///         {
    ///             Algorithm = "Grid",
    ///             Compute = new AzureNative.MachineLearningServices.V20210301Preview.Inputs.ComputeConfigurationArgs
    ///             {
    ///                 InstanceCount = 1,
    ///                 Target = "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/resourceGroup-1234/providers/Microsoft.MachineLearningServices/workspaces/testworkspace/computes/mycompute",
    ///             },
    ///             Description = "string",
    ///             Identity = new AzureNative.MachineLearningServices.V20210301Preview.Inputs.AmlTokenArgs
    ///             {
    ///                 IdentityType = "AMLToken",
    ///             },
    ///             JobType = "Sweep",
    ///             MaxConcurrentTrials = 1,
    ///             MaxTotalTrials = 1,
    ///             Objective = new AzureNative.MachineLearningServices.V20210301Preview.Inputs.ObjectiveArgs
    ///             {
    ///                 Goal = "Minimize",
    ///                 PrimaryMetric = "string",
    ///             },
    ///             Properties = 
    ///             {
    ///                 { "additionalProp1", "string" },
    ///                 { "additionalProp2", "string" },
    ///                 { "additionalProp3", "string" },
    ///             },
    ///             SearchSpace = 
    ///             {
    ///                 { "name", null },
    ///             },
    ///             Tags = 
    ///             {
    ///                 { "additionalProp1", "string" },
    ///                 { "additionalProp2", "string" },
    ///                 { "additionalProp3", "string" },
    ///             },
    ///             Timeout = "PT1M",
    ///             Trial = new AzureNative.MachineLearningServices.V20210301Preview.Inputs.TrialComponentArgs
    ///             {
    ///                 CodeId = "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/resourceGroup-1234/providers/Microsoft.MachineLearningServices/workspaces/testworkspace/codes/mycode/versions/1",
    ///                 Command = "python file.py test",
    ///                 Distribution = new AzureNative.MachineLearningServices.V20210301Preview.Inputs.PyTorchArgs
    ///                 {
    ///                     DistributionType = "PyTorch",
    ///                     ProcessCount = 2,
    ///                 },
    ///                 EnvironmentId = "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/resourceGroup-1234/providers/Microsoft.MachineLearningServices/workspaces/testworkspace/environments/AzureML-Tutorial/versions/1",
    ///                 EnvironmentVariables = 
    ///                 {
    ///                     { "MY_ENV_VAR1", "string" },
    ///                     { "MY_ENV_VAR2", "string" },
    ///                 },
    ///                 InputDataBindings = 
    ///                 {
    ///                     { "test", new AzureNative.MachineLearningServices.V20210301Preview.Inputs.InputDataBindingArgs
    ///                     {
    ///                         DataId = "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/resourceGroup-1234/providers/Microsoft.MachineLearningServices/workspaces/testworkspace/data/mydataset/versions/1",
    ///                         PathOnCompute = "path/on/compute",
    ///                     } },
    ///                 },
    ///                 OutputDataBindings = 
    ///                 {
    ///                     { "test", new AzureNative.MachineLearningServices.V20210301Preview.Inputs.OutputDataBindingArgs
    ///                     {
    ///                         DatastoreId = "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/resourceGroup-1234/providers/Microsoft.MachineLearningServices/workspaces/testworkspace/datastore/mydatastore",
    ///                         PathOnCompute = "path/on/compute",
    ///                     } },
    ///                 },
    ///                 Timeout = "PT1M",
    ///             },
    ///         },
    ///         ResourceGroupName = "testrg123",
    ///         WorkspaceName = "testworkspace",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// 
    /// ## Import
    /// 
    /// An existing resource can be imported using its type token, name, and identifier, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure-native:machinelearningservices/v20210301preview:Job testJob /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg123/providers/Microsoft.MachineLearningServices/workspaces/testworkspace/jobs/testJob 
    /// ```
    /// </summary>
    [AzureNativeResourceType("azure-native:machinelearningservices/v20210301preview:Job")]
    public partial class Job : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// [Required] Additional attributes of the entity.
        /// </summary>
        [Output("properties")]
        public Output<Union<Outputs.CommandJobResponse, Outputs.SweepJobResponse>> Properties { get; private set; } = null!;

        /// <summary>
        /// System data associated with resource provider
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a Job resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Job(string name, JobArgs args, CustomResourceOptions? options = null)
            : base("azure-native:machinelearningservices/v20210301preview:Job", name, args ?? new JobArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Job(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:machinelearningservices/v20210301preview:Job", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:machinelearningservices:Job"},
                    new global::Pulumi.Alias { Type = "azure-native:machinelearningservices/v20220201preview:Job"},
                    new global::Pulumi.Alias { Type = "azure-native:machinelearningservices/v20220501:Job"},
                    new global::Pulumi.Alias { Type = "azure-native:machinelearningservices/v20220601preview:Job"},
                    new global::Pulumi.Alias { Type = "azure-native:machinelearningservices/v20221001:Job"},
                    new global::Pulumi.Alias { Type = "azure-native:machinelearningservices/v20221001preview:Job"},
                    new global::Pulumi.Alias { Type = "azure-native:machinelearningservices/v20221201preview:Job"},
                    new global::Pulumi.Alias { Type = "azure-native:machinelearningservices/v20230201preview:Job"},
                    new global::Pulumi.Alias { Type = "azure-native:machinelearningservices/v20230401preview:Job"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Job resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Job Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Job(name, id, options);
        }
    }

    public sealed class JobArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name and identifier for the Job.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// [Required] Additional attributes of the entity.
        /// </summary>
        [Input("properties", required: true)]
        public InputUnion<Inputs.CommandJobArgs, Inputs.SweepJobArgs> Properties { get; set; } = null!;

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Name of Azure Machine Learning workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public Input<string> WorkspaceName { get; set; } = null!;

        public JobArgs()
        {
        }
        public static new JobArgs Empty => new JobArgs();
    }
}
