// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MachineLearningServices.V20221201Preview
{
    /// <summary>
    /// Machine Learning compute object wrapped into ARM resource envelope.
    /// 
    /// ## Example Usage
    /// ### Attach a Kubernetes Compute
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var compute = new AzureNative.MachineLearningServices.V20221201Preview.Compute("compute", new()
    ///     {
    ///         ComputeName = "compute123",
    ///         Location = "eastus",
    ///         Properties = new AzureNative.MachineLearningServices.V20221201Preview.Inputs.KubernetesArgs
    ///         {
    ///             ComputeType = "Kubernetes",
    ///             Description = "some compute",
    ///             Properties = new AzureNative.MachineLearningServices.V20221201Preview.Inputs.KubernetesPropertiesArgs
    ///             {
    ///                 DefaultInstanceType = "defaultInstanceType",
    ///                 InstanceTypes = 
    ///                 {
    ///                     { "defaultInstanceType", new AzureNative.MachineLearningServices.V20221201Preview.Inputs.InstanceTypeSchemaArgs
    ///                     {
    ///                         Resources = new AzureNative.MachineLearningServices.V20221201Preview.Inputs.InstanceTypeSchemaResourcesArgs
    ///                         {
    ///                             Limits = 
    ///                             {
    ///                                 { "cpu", "1" },
    ///                                 { "memory", "4Gi" },
    ///                                 { "nvidia.com/gpu", null },
    ///                             },
    ///                             Requests = 
    ///                             {
    ///                                 { "cpu", "1" },
    ///                                 { "memory", "4Gi" },
    ///                                 { "nvidia.com/gpu", null },
    ///                             },
    ///                         },
    ///                     } },
    ///                 },
    ///                 Namespace = "default",
    ///             },
    ///             ResourceId = "/subscriptions/34adfa4f-cedf-4dc0-ba29-b6d1a69ab345/resourcegroups/testrg123/providers/Microsoft.ContainerService/managedClusters/compute123-56826-c9b00420020b2",
    ///         },
    ///         ResourceGroupName = "testrg123",
    ///         WorkspaceName = "workspaces123",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Create a AML Compute
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var compute = new AzureNative.MachineLearningServices.V20221201Preview.Compute("compute", new()
    ///     {
    ///         ComputeName = "compute123",
    ///         Location = "eastus",
    ///         Properties = new AzureNative.MachineLearningServices.V20221201Preview.Inputs.AmlComputeArgs
    ///         {
    ///             ComputeType = "AmlCompute",
    ///             Properties = new AzureNative.MachineLearningServices.V20221201Preview.Inputs.AmlComputePropertiesArgs
    ///             {
    ///                 EnableNodePublicIp = true,
    ///                 IsolatedNetwork = false,
    ///                 OsType = "Windows",
    ///                 RemoteLoginPortPublicAccess = "NotSpecified",
    ///                 ScaleSettings = new AzureNative.MachineLearningServices.V20221201Preview.Inputs.ScaleSettingsArgs
    ///                 {
    ///                     MaxNodeCount = 1,
    ///                     MinNodeCount = 0,
    ///                     NodeIdleTimeBeforeScaleDown = "PT5M",
    ///                 },
    ///                 VirtualMachineImage = new AzureNative.MachineLearningServices.V20221201Preview.Inputs.VirtualMachineImageArgs
    ///                 {
    ///                     Id = "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.Compute/galleries/myImageGallery/images/myImageDefinition/versions/0.0.1",
    ///                 },
    ///                 VmPriority = "Dedicated",
    ///                 VmSize = "STANDARD_NC6",
    ///             },
    ///         },
    ///         ResourceGroupName = "testrg123",
    ///         WorkspaceName = "workspaces123",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Create a DataFactory Compute
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var compute = new AzureNative.MachineLearningServices.V20221201Preview.Compute("compute", new()
    ///     {
    ///         ComputeName = "compute123",
    ///         Location = "eastus",
    ///         Properties = new AzureNative.MachineLearningServices.V20221201Preview.Inputs.DataFactoryArgs
    ///         {
    ///             ComputeType = "DataFactory",
    ///         },
    ///         ResourceGroupName = "testrg123",
    ///         WorkspaceName = "workspaces123",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Create an AKS Compute
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var compute = new AzureNative.MachineLearningServices.V20221201Preview.Compute("compute", new()
    ///     {
    ///         ComputeName = "compute123",
    ///         Location = "eastus",
    ///         Properties = new AzureNative.MachineLearningServices.V20221201Preview.Inputs.AKSArgs
    ///         {
    ///             ComputeType = "AKS",
    ///         },
    ///         ResourceGroupName = "testrg123",
    ///         WorkspaceName = "workspaces123",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Create an ComputeInstance Compute
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var compute = new AzureNative.MachineLearningServices.V20221201Preview.Compute("compute", new()
    ///     {
    ///         ComputeName = "compute123",
    ///         Location = "eastus",
    ///         Properties = new AzureNative.MachineLearningServices.V20221201Preview.Inputs.ComputeInstanceArgs
    ///         {
    ///             ComputeType = "ComputeInstance",
    ///             Properties = new AzureNative.MachineLearningServices.V20221201Preview.Inputs.ComputeInstancePropertiesArgs
    ///             {
    ///                 ApplicationSharingPolicy = "Personal",
    ///                 AutologgerSettings = new AzureNative.MachineLearningServices.V20221201Preview.Inputs.ComputeInstanceAutologgerSettingsArgs
    ///                 {
    ///                     MlflowAutologger = "Enabled",
    ///                 },
    ///                 ComputeInstanceAuthorizationType = "personal",
    ///                 CustomServices = new[]
    ///                 {
    ///                     new AzureNative.MachineLearningServices.V20221201Preview.Inputs.CustomServiceArgs
    ///                     {
    ///                         Docker = new AzureNative.MachineLearningServices.V20221201Preview.Inputs.DockerArgs
    ///                         {
    ///                             Privileged = true,
    ///                         },
    ///                         Endpoints = new[]
    ///                         {
    ///                             new AzureNative.MachineLearningServices.V20221201Preview.Inputs.EndpointArgs
    ///                             {
    ///                                 Name = "connect",
    ///                                 Protocol = "http",
    ///                                 Published = 4444,
    ///                                 Target = 8787,
    ///                             },
    ///                         },
    ///                         EnvironmentVariables = 
    ///                         {
    ///                             { "RSP_LICENSE", new AzureNative.MachineLearningServices.V20221201Preview.Inputs.EnvironmentVariableArgs
    ///                             {
    ///                                 Type = "local",
    ///                                 Value = "XXXX-XXXX-XXXX-XXXX-XXXX-XXXX-XXXX",
    ///                             } },
    ///                         },
    ///                         Image = new AzureNative.MachineLearningServices.V20221201Preview.Inputs.ImageArgs
    ///                         {
    ///                             Reference = "ghcr.io/azure/rstudio-workbench:latest",
    ///                             Type = "docker",
    ///                         },
    ///                         Name = "rstudio-workbench",
    ///                         Volumes = new[]
    ///                         {
    ///                             new AzureNative.MachineLearningServices.V20221201Preview.Inputs.VolumeDefinitionArgs
    ///                             {
    ///                                 ReadOnly = true,
    ///                                 Source = "/mnt/azureuser/",
    ///                                 Target = "/home/testuser/",
    ///                                 Type = "bind",
    ///                             },
    ///                         },
    ///                     },
    ///                 },
    ///                 PersonalComputeInstanceSettings = new AzureNative.MachineLearningServices.V20221201Preview.Inputs.PersonalComputeInstanceSettingsArgs
    ///                 {
    ///                     AssignedUser = new AzureNative.MachineLearningServices.V20221201Preview.Inputs.AssignedUserArgs
    ///                     {
    ///                         ObjectId = "00000000-0000-0000-0000-000000000000",
    ///                         TenantId = "00000000-0000-0000-0000-000000000000",
    ///                     },
    ///                 },
    ///                 SshSettings = new AzureNative.MachineLearningServices.V20221201Preview.Inputs.ComputeInstanceSshSettingsArgs
    ///                 {
    ///                     SshPublicAccess = "Disabled",
    ///                 },
    ///                 Subnet = new AzureNative.MachineLearningServices.V20221201Preview.Inputs.ResourceIdArgs
    ///                 {
    ///                     Id = "test-subnet-resource-id",
    ///                 },
    ///                 VmSize = "STANDARD_NC6",
    ///             },
    ///         },
    ///         ResourceGroupName = "testrg123",
    ///         WorkspaceName = "workspaces123",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Create an ComputeInstance Compute with Schedules
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var compute = new AzureNative.MachineLearningServices.V20221201Preview.Compute("compute", new()
    ///     {
    ///         ComputeName = "compute123",
    ///         Location = "eastus",
    ///         Properties = new AzureNative.MachineLearningServices.V20221201Preview.Inputs.ComputeInstanceArgs
    ///         {
    ///             ComputeType = "ComputeInstance",
    ///             Properties = new AzureNative.MachineLearningServices.V20221201Preview.Inputs.ComputeInstancePropertiesArgs
    ///             {
    ///                 ApplicationSharingPolicy = "Personal",
    ///                 ComputeInstanceAuthorizationType = "personal",
    ///                 PersonalComputeInstanceSettings = new AzureNative.MachineLearningServices.V20221201Preview.Inputs.PersonalComputeInstanceSettingsArgs
    ///                 {
    ///                     AssignedUser = new AzureNative.MachineLearningServices.V20221201Preview.Inputs.AssignedUserArgs
    ///                     {
    ///                         ObjectId = "00000000-0000-0000-0000-000000000000",
    ///                         TenantId = "00000000-0000-0000-0000-000000000000",
    ///                     },
    ///                 },
    ///                 Schedules = new AzureNative.MachineLearningServices.V20221201Preview.Inputs.ComputeSchedulesArgs
    ///                 {
    ///                     ComputeStartStop = new[]
    ///                     {
    ///                         new AzureNative.MachineLearningServices.V20221201Preview.Inputs.ComputeStartStopScheduleArgs
    ///                         {
    ///                             Action = "Stop",
    ///                             Cron = new AzureNative.MachineLearningServices.V20221201Preview.Inputs.CronTriggerArgs
    ///                             {
    ///                                 Expression = "0 18 * * *",
    ///                                 StartTime = "2021-04-23T01:30:00",
    ///                                 TimeZone = "Pacific Standard Time",
    ///                                 TriggerType = "Cron",
    ///                             },
    ///                             Status = "Enabled",
    ///                             TriggerType = "Cron",
    ///                         },
    ///                     },
    ///                 },
    ///                 SshSettings = new AzureNative.MachineLearningServices.V20221201Preview.Inputs.ComputeInstanceSshSettingsArgs
    ///                 {
    ///                     SshPublicAccess = "Disabled",
    ///                 },
    ///                 VmSize = "STANDARD_NC6",
    ///             },
    ///         },
    ///         ResourceGroupName = "testrg123",
    ///         WorkspaceName = "workspaces123",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Create an ComputeInstance Compute with minimal inputs
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var compute = new AzureNative.MachineLearningServices.V20221201Preview.Compute("compute", new()
    ///     {
    ///         ComputeName = "compute123",
    ///         Location = "eastus",
    ///         Properties = new AzureNative.MachineLearningServices.V20221201Preview.Inputs.ComputeInstanceArgs
    ///         {
    ///             ComputeType = "ComputeInstance",
    ///             Properties = new AzureNative.MachineLearningServices.V20221201Preview.Inputs.ComputeInstancePropertiesArgs
    ///             {
    ///                 VmSize = "STANDARD_NC6",
    ///             },
    ///         },
    ///         ResourceGroupName = "testrg123",
    ///         WorkspaceName = "workspaces123",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Update a AML Compute
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var compute = new AzureNative.MachineLearningServices.V20221201Preview.Compute("compute", new()
    ///     {
    ///         ComputeName = "compute123",
    ///         Location = "eastus",
    ///         Properties = new AzureNative.MachineLearningServices.V20221201Preview.Inputs.AmlComputeArgs
    ///         {
    ///             ComputeType = "AmlCompute",
    ///             Description = "some compute",
    ///             Properties = new AzureNative.MachineLearningServices.V20221201Preview.Inputs.AmlComputePropertiesArgs
    ///             {
    ///                 ScaleSettings = new AzureNative.MachineLearningServices.V20221201Preview.Inputs.ScaleSettingsArgs
    ///                 {
    ///                     MaxNodeCount = 4,
    ///                     MinNodeCount = 4,
    ///                     NodeIdleTimeBeforeScaleDown = "PT5M",
    ///                 },
    ///             },
    ///         },
    ///         ResourceGroupName = "testrg123",
    ///         WorkspaceName = "workspaces123",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Update an AKS Compute
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var compute = new AzureNative.MachineLearningServices.V20221201Preview.Compute("compute", new()
    ///     {
    ///         ComputeName = "compute123",
    ///         Location = "eastus",
    ///         Properties = new AzureNative.MachineLearningServices.V20221201Preview.Inputs.AKSArgs
    ///         {
    ///             ComputeType = "AKS",
    ///             Description = "some compute",
    ///             Properties = new AzureNative.MachineLearningServices.V20221201Preview.Inputs.AKSSchemaPropertiesArgs
    ///             {
    ///                 AgentCount = 4,
    ///             },
    ///             ResourceId = "/subscriptions/34adfa4f-cedf-4dc0-ba29-b6d1a69ab345/resourcegroups/testrg123/providers/Microsoft.ContainerService/managedClusters/compute123-56826-c9b00420020b2",
    ///         },
    ///         ResourceGroupName = "testrg123",
    ///         WorkspaceName = "workspaces123",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// 
    /// ## Import
    /// 
    /// An existing resource can be imported using its type token, name, and identifier, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure-native:machinelearningservices/v20221201preview:Compute compute123 /subscriptions/34adfa4f-cedf-4dc0-ba29-b6d1a69ab345/resourceGroups/testrg123/providers/Microsoft.MachineLearningServices/workspaces/workspaces123/computes/compute123 
    /// ```
    /// </summary>
    [AzureNativeResourceType("azure-native:machinelearningservices/v20221201preview:Compute")]
    public partial class Compute : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The identity of the resource.
        /// </summary>
        [Output("identity")]
        public Output<Outputs.ManagedServiceIdentityResponse?> Identity { get; private set; } = null!;

        /// <summary>
        /// Specifies the location of the resource.
        /// </summary>
        [Output("location")]
        public Output<string?> Location { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Compute properties
        /// </summary>
        [Output("properties")]
        public Output<object> Properties { get; private set; } = null!;

        /// <summary>
        /// The sku of the workspace.
        /// </summary>
        [Output("sku")]
        public Output<Outputs.SkuResponse?> Sku { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Contains resource tags defined as key/value pairs.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a Compute resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Compute(string name, ComputeArgs args, CustomResourceOptions? options = null)
            : base("azure-native:machinelearningservices/v20221201preview:Compute", name, args ?? new ComputeArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Compute(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:machinelearningservices/v20221201preview:Compute", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:machinelearningservices:Compute"},
                    new global::Pulumi.Alias { Type = "azure-native:machinelearningservices/v20180301preview:Compute"},
                    new global::Pulumi.Alias { Type = "azure-native:machinelearningservices/v20181119:Compute"},
                    new global::Pulumi.Alias { Type = "azure-native:machinelearningservices/v20190501:Compute"},
                    new global::Pulumi.Alias { Type = "azure-native:machinelearningservices/v20190601:Compute"},
                    new global::Pulumi.Alias { Type = "azure-native:machinelearningservices/v20191101:Compute"},
                    new global::Pulumi.Alias { Type = "azure-native:machinelearningservices/v20200101:Compute"},
                    new global::Pulumi.Alias { Type = "azure-native:machinelearningservices/v20200218preview:Compute"},
                    new global::Pulumi.Alias { Type = "azure-native:machinelearningservices/v20200301:Compute"},
                    new global::Pulumi.Alias { Type = "azure-native:machinelearningservices/v20200401:Compute"},
                    new global::Pulumi.Alias { Type = "azure-native:machinelearningservices/v20200501preview:Compute"},
                    new global::Pulumi.Alias { Type = "azure-native:machinelearningservices/v20200515preview:Compute"},
                    new global::Pulumi.Alias { Type = "azure-native:machinelearningservices/v20200601:Compute"},
                    new global::Pulumi.Alias { Type = "azure-native:machinelearningservices/v20200801:Compute"},
                    new global::Pulumi.Alias { Type = "azure-native:machinelearningservices/v20200901preview:Compute"},
                    new global::Pulumi.Alias { Type = "azure-native:machinelearningservices/v20210101:Compute"},
                    new global::Pulumi.Alias { Type = "azure-native:machinelearningservices/v20210301preview:Compute"},
                    new global::Pulumi.Alias { Type = "azure-native:machinelearningservices/v20210401:Compute"},
                    new global::Pulumi.Alias { Type = "azure-native:machinelearningservices/v20210701:Compute"},
                    new global::Pulumi.Alias { Type = "azure-native:machinelearningservices/v20220101preview:Compute"},
                    new global::Pulumi.Alias { Type = "azure-native:machinelearningservices/v20220201preview:Compute"},
                    new global::Pulumi.Alias { Type = "azure-native:machinelearningservices/v20220501:Compute"},
                    new global::Pulumi.Alias { Type = "azure-native:machinelearningservices/v20220601preview:Compute"},
                    new global::Pulumi.Alias { Type = "azure-native:machinelearningservices/v20221001:Compute"},
                    new global::Pulumi.Alias { Type = "azure-native:machinelearningservices/v20221001preview:Compute"},
                    new global::Pulumi.Alias { Type = "azure-native:machinelearningservices/v20230201preview:Compute"},
                    new global::Pulumi.Alias { Type = "azure-native:machinelearningservices/v20230401preview:Compute"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Compute resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Compute Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Compute(name, id, options);
        }
    }

    public sealed class ComputeArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of the Azure Machine Learning compute.
        /// </summary>
        [Input("computeName")]
        public Input<string>? ComputeName { get; set; }

        /// <summary>
        /// The identity of the resource.
        /// </summary>
        [Input("identity")]
        public Input<Inputs.ManagedServiceIdentityArgs>? Identity { get; set; }

        /// <summary>
        /// Specifies the location of the resource.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Compute properties
        /// </summary>
        [Input("properties")]
        public object? Properties { get; set; }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The sku of the workspace.
        /// </summary>
        [Input("sku")]
        public Input<Inputs.SkuArgs>? Sku { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Contains resource tags defined as key/value pairs.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Name of Azure Machine Learning workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public Input<string> WorkspaceName { get; set; } = null!;

        public ComputeArgs()
        {
        }
        public static new ComputeArgs Empty => new ComputeArgs();
    }
}
