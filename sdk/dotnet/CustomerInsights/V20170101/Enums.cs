// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.ComponentModel;
using Pulumi;

namespace Pulumi.AzureNative.CustomerInsights.V20170101
{
    /// <summary>
    /// Determines whether this link is supposed to create or delete instances if Link is NOT Reference Only.
    /// </summary>
    [EnumType]
    public readonly struct InstanceOperationType : IEquatable<InstanceOperationType>
    {
        private readonly string _value;

        private InstanceOperationType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static InstanceOperationType Upsert { get; } = new InstanceOperationType("Upsert");
        public static InstanceOperationType Delete { get; } = new InstanceOperationType("Delete");

        public static bool operator ==(InstanceOperationType left, InstanceOperationType right) => left.Equals(right);
        public static bool operator !=(InstanceOperationType left, InstanceOperationType right) => !left.Equals(right);

        public static explicit operator string(InstanceOperationType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is InstanceOperationType other && Equals(other);
        public bool Equals(InstanceOperationType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// Link type.
    /// </summary>
    [EnumType]
    public readonly struct LinkTypes : IEquatable<LinkTypes>
    {
        private readonly string _value;

        private LinkTypes(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static LinkTypes UpdateAlways { get; } = new LinkTypes("UpdateAlways");
        public static LinkTypes CopyIfNull { get; } = new LinkTypes("CopyIfNull");

        public static bool operator ==(LinkTypes left, LinkTypes right) => left.Equals(right);
        public static bool operator !=(LinkTypes left, LinkTypes right) => !left.Equals(right);

        public static explicit operator string(LinkTypes value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is LinkTypes other && Equals(other);
        public bool Equals(LinkTypes other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }
}
