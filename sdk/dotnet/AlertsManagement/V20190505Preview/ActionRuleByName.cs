// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AlertsManagement.V20190505Preview
{
    /// <summary>
    /// Action rule object containing target scope, conditions and suppression logic
    /// 
    /// ## Example Usage
    /// ### PutActionRule
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var actionRuleByName = new AzureNative.AlertsManagement.V20190505Preview.ActionRuleByName("actionRuleByName", new()
    ///     {
    ///         ActionRuleName = "DailySuppression",
    ///         Location = "Global",
    ///         Properties = new AzureNative.AlertsManagement.V20190505Preview.Inputs.SuppressionArgs
    ///         {
    ///             Conditions = new AzureNative.AlertsManagement.V20190505Preview.Inputs.ConditionsArgs
    ///             {
    ///                 MonitorCondition = new AzureNative.AlertsManagement.V20190505Preview.Inputs.ConditionArgs
    ///                 {
    ///                     Operator = "Equals",
    ///                     Values = new[]
    ///                     {
    ///                         "Fired",
    ///                     },
    ///                 },
    ///                 MonitorService = new AzureNative.AlertsManagement.V20190505Preview.Inputs.ConditionArgs
    ///                 {
    ///                     Operator = "Equals",
    ///                     Values = new[]
    ///                     {
    ///                         "Platform",
    ///                         "Application Insights",
    ///                     },
    ///                 },
    ///                 Severity = new AzureNative.AlertsManagement.V20190505Preview.Inputs.ConditionArgs
    ///                 {
    ///                     Operator = "Equals",
    ///                     Values = new[]
    ///                     {
    ///                         "Sev0",
    ///                         "Sev2",
    ///                     },
    ///                 },
    ///                 TargetResourceType = new AzureNative.AlertsManagement.V20190505Preview.Inputs.ConditionArgs
    ///                 {
    ///                     Operator = "NotEquals",
    ///                     Values = new[]
    ///                     {
    ///                         "Microsoft.Compute/VirtualMachines",
    ///                     },
    ///                 },
    ///             },
    ///             Description = "Action rule on resource group for daily suppression",
    ///             Scope = new AzureNative.AlertsManagement.V20190505Preview.Inputs.ScopeArgs
    ///             {
    ///                 ScopeType = "ResourceGroup",
    ///                 Values = new[]
    ///                 {
    ///                     "/subscriptions/1e3ff1c0-771a-4119-a03b-be82a51e232d/resourceGroups/alertscorrelationrg",
    ///                 },
    ///             },
    ///             Status = "Enabled",
    ///             SuppressionConfig = new AzureNative.AlertsManagement.V20190505Preview.Inputs.SuppressionConfigArgs
    ///             {
    ///                 RecurrenceType = "Daily",
    ///                 Schedule = new AzureNative.AlertsManagement.V20190505Preview.Inputs.SuppressionScheduleArgs
    ///                 {
    ///                     EndDate = "12/18/2018",
    ///                     EndTime = "14:00:00",
    ///                     StartDate = "12/09/2018",
    ///                     StartTime = "06:00:00",
    ///                 },
    ///             },
    ///             Type = "Suppression",
    ///         },
    ///         ResourceGroupName = "alertscorrelationrg",
    ///         Tags = null,
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// 
    /// ## Import
    /// 
    /// An existing resource can be imported using its type token, name, and identifier, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure-native:alertsmanagement/v20190505preview:ActionRuleByName DailySuppression /subscriptions/1e3ff1c0-771a-4119-a03b-be82a51e232d/resourceGroups/alertscorrelationrg/providers/Microsoft.AlertsManagement/actionRules/DailySuppression 
    /// ```
    /// </summary>
    [AzureNativeResourceType("azure-native:alertsmanagement/v20190505preview:ActionRuleByName")]
    public partial class ActionRuleByName : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Resource location
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Azure resource name
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// action rule properties
        /// </summary>
        [Output("properties")]
        public Output<object> Properties { get; private set; } = null!;

        /// <summary>
        /// Resource tags
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Azure resource type
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a ActionRuleByName resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ActionRuleByName(string name, ActionRuleByNameArgs args, CustomResourceOptions? options = null)
            : base("azure-native:alertsmanagement/v20190505preview:ActionRuleByName", name, args ?? new ActionRuleByNameArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ActionRuleByName(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:alertsmanagement/v20190505preview:ActionRuleByName", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:alertsmanagement:ActionRuleByName"},
                    new global::Pulumi.Alias { Type = "azure-native:alertsmanagement/v20181102privatepreview:ActionRuleByName"},
                    new global::Pulumi.Alias { Type = "azure-native:alertsmanagement/v20210808:ActionRuleByName"},
                    new global::Pulumi.Alias { Type = "azure-native:alertsmanagement/v20210808preview:ActionRuleByName"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ActionRuleByName resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ActionRuleByName Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new ActionRuleByName(name, id, options);
        }
    }

    public sealed class ActionRuleByNameArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of action rule that needs to be created/updated
        /// </summary>
        [Input("actionRuleName")]
        public Input<string>? ActionRuleName { get; set; }

        /// <summary>
        /// Resource location
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// action rule properties
        /// </summary>
        [Input("properties")]
        public object? Properties { get; set; }

        /// <summary>
        /// Resource group name where the resource is created.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public ActionRuleByNameArgs()
        {
        }
        public static new ActionRuleByNameArgs Empty => new ActionRuleByNameArgs();
    }
}
