// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DataBox
{
    /// <summary>
    /// Job Resource.
    /// API Version: 2022-12-01.
    /// Previous API Version: 2020-11-01. See https://github.com/pulumi/pulumi-azure-native/discussions/TODO for information on migrating from v1 to v2 of the provider.
    /// 
    /// ## Example Usage
    /// ### JobsCreate
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var job = new AzureNative.DataBox.Job("job", new()
    ///     {
    ///         Details = new AzureNative.DataBox.Inputs.DataBoxJobDetailsArgs
    ///         {
    ///             ContactDetails = new AzureNative.DataBox.Inputs.ContactDetailsArgs
    ///             {
    ///                 ContactName = "Public SDK Test",
    ///                 EmailList = new[]
    ///                 {
    ///                     "testing@microsoft.com",
    ///                 },
    ///                 Phone = "1234567890",
    ///                 PhoneExtension = "1234",
    ///             },
    ///             DataImportDetails = new[]
    ///             {
    ///                 new AzureNative.DataBox.Inputs.DataImportDetailsArgs
    ///                 {
    ///                     AccountDetails = new AzureNative.DataBox.Inputs.StorageAccountDetailsArgs
    ///                     {
    ///                         DataAccountType = "StorageAccount",
    ///                         StorageAccountId = "/subscriptions/fa68082f-8ff7-4a25-95c7-ce9da541242f/resourcegroups/databoxbvt/providers/Microsoft.Storage/storageAccounts/databoxbvttestaccount",
    ///                     },
    ///                 },
    ///             },
    ///             JobDetailsType = "DataBox",
    ///             ShippingAddress = new AzureNative.DataBox.Inputs.ShippingAddressArgs
    ///             {
    ///                 AddressType = "Commercial",
    ///                 City = "San Francisco",
    ///                 CompanyName = "Microsoft",
    ///                 Country = "US",
    ///                 PostalCode = "94107",
    ///                 StateOrProvince = "CA",
    ///                 StreetAddress1 = "16 TOWNSEND ST",
    ///                 StreetAddress2 = "Unit 1",
    ///             },
    ///         },
    ///         JobName = "SdkJob952",
    ///         Location = "westus",
    ///         ResourceGroupName = "SdkRg5154",
    ///         Sku = new AzureNative.DataBox.Inputs.SkuArgs
    ///         {
    ///             Name = "DataBox",
    ///         },
    ///         TransferType = "ImportToAzure",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### JobsCreateDevicePassword
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var job = new AzureNative.DataBox.Job("job", new()
    ///     {
    ///         Details = new AzureNative.DataBox.Inputs.DataBoxJobDetailsArgs
    ///         {
    ///             ContactDetails = new AzureNative.DataBox.Inputs.ContactDetailsArgs
    ///             {
    ///                 ContactName = "Public SDK Test",
    ///                 EmailList = new[]
    ///                 {
    ///                     "testing@microsoft.com",
    ///                 },
    ///                 Phone = "1234567890",
    ///                 PhoneExtension = "1234",
    ///             },
    ///             DataImportDetails = new[]
    ///             {
    ///                 new AzureNative.DataBox.Inputs.DataImportDetailsArgs
    ///                 {
    ///                     AccountDetails = new AzureNative.DataBox.Inputs.StorageAccountDetailsArgs
    ///                     {
    ///                         DataAccountType = "StorageAccount",
    ///                         SharePassword = "&lt;sharePassword&gt;",
    ///                         StorageAccountId = "/subscriptions/fa68082f-8ff7-4a25-95c7-ce9da541242f/resourceGroups/databoxbvt1/providers/Microsoft.Storage/storageAccounts/databoxbvttestaccount2",
    ///                     },
    ///                 },
    ///             },
    ///             DevicePassword = "&lt;devicePassword&gt;",
    ///             JobDetailsType = "DataBox",
    ///             ShippingAddress = new AzureNative.DataBox.Inputs.ShippingAddressArgs
    ///             {
    ///                 AddressType = "Commercial",
    ///                 City = "San Francisco",
    ///                 CompanyName = "Microsoft",
    ///                 Country = "US",
    ///                 PostalCode = "94107",
    ///                 StateOrProvince = "CA",
    ///                 StreetAddress1 = "16 TOWNSEND ST",
    ///                 StreetAddress2 = "Unit 1",
    ///             },
    ///         },
    ///         JobName = "SdkJob9640",
    ///         Location = "westus",
    ///         ResourceGroupName = "SdkRg7478",
    ///         Sku = new AzureNative.DataBox.Inputs.SkuArgs
    ///         {
    ///             Name = "DataBox",
    ///         },
    ///         TransferType = "ImportToAzure",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### JobsCreateDoubleEncryption
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var job = new AzureNative.DataBox.Job("job", new()
    ///     {
    ///         Details = new AzureNative.DataBox.Inputs.DataBoxJobDetailsArgs
    ///         {
    ///             ContactDetails = new AzureNative.DataBox.Inputs.ContactDetailsArgs
    ///             {
    ///                 ContactName = "Public SDK Test",
    ///                 EmailList = new[]
    ///                 {
    ///                     "testing@microsoft.com",
    ///                 },
    ///                 Phone = "1234567890",
    ///                 PhoneExtension = "1234",
    ///             },
    ///             DataImportDetails = new[]
    ///             {
    ///                 new AzureNative.DataBox.Inputs.DataImportDetailsArgs
    ///                 {
    ///                     AccountDetails = new AzureNative.DataBox.Inputs.StorageAccountDetailsArgs
    ///                     {
    ///                         DataAccountType = "StorageAccount",
    ///                         StorageAccountId = "/subscriptions/fa68082f-8ff7-4a25-95c7-ce9da541242f/resourcegroups/databoxbvt/providers/Microsoft.Storage/storageAccounts/databoxbvttestaccount",
    ///                     },
    ///                 },
    ///             },
    ///             JobDetailsType = "DataBox",
    ///             Preferences = new AzureNative.DataBox.Inputs.PreferencesArgs
    ///             {
    ///                 EncryptionPreferences = new AzureNative.DataBox.Inputs.EncryptionPreferencesArgs
    ///                 {
    ///                     DoubleEncryption = "Enabled",
    ///                 },
    ///             },
    ///             ShippingAddress = new AzureNative.DataBox.Inputs.ShippingAddressArgs
    ///             {
    ///                 AddressType = "Commercial",
    ///                 City = "San Francisco",
    ///                 CompanyName = "Microsoft",
    ///                 Country = "US",
    ///                 PostalCode = "94107",
    ///                 StateOrProvince = "CA",
    ///                 StreetAddress1 = "16 TOWNSEND ST",
    ///                 StreetAddress2 = "Unit 1",
    ///             },
    ///         },
    ///         JobName = "SdkJob6599",
    ///         Location = "westus",
    ///         ResourceGroupName = "SdkRg608",
    ///         Sku = new AzureNative.DataBox.Inputs.SkuArgs
    ///         {
    ///             Name = "DataBox",
    ///         },
    ///         TransferType = "ImportToAzure",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### JobsCreateExport
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var job = new AzureNative.DataBox.Job("job", new()
    ///     {
    ///         Details = new AzureNative.DataBox.Inputs.DataBoxJobDetailsArgs
    ///         {
    ///             ContactDetails = new AzureNative.DataBox.Inputs.ContactDetailsArgs
    ///             {
    ///                 ContactName = "Public SDK Test",
    ///                 EmailList = new[]
    ///                 {
    ///                     "testing@microsoft.com",
    ///                 },
    ///                 Phone = "1234567890",
    ///                 PhoneExtension = "1234",
    ///             },
    ///             DataExportDetails = new[]
    ///             {
    ///                 new AzureNative.DataBox.Inputs.DataExportDetailsArgs
    ///                 {
    ///                     AccountDetails = new AzureNative.DataBox.Inputs.StorageAccountDetailsArgs
    ///                     {
    ///                         DataAccountType = "StorageAccount",
    ///                         StorageAccountId = "/subscriptions/fa68082f-8ff7-4a25-95c7-ce9da541242f/resourceGroups/akvenkat/providers/Microsoft.Storage/storageAccounts/aaaaaa2",
    ///                     },
    ///                     TransferConfiguration = new AzureNative.DataBox.Inputs.TransferConfigurationArgs
    ///                     {
    ///                         TransferAllDetails = new AzureNative.DataBox.Inputs.TransferConfigurationTransferAllDetailsArgs
    ///                         {
    ///                             Include = new AzureNative.DataBox.Inputs.TransferAllDetailsArgs
    ///                             {
    ///                                 DataAccountType = "StorageAccount",
    ///                                 TransferAllBlobs = true,
    ///                                 TransferAllFiles = true,
    ///                             },
    ///                         },
    ///                         TransferConfigurationType = "TransferAll",
    ///                     },
    ///                 },
    ///             },
    ///             JobDetailsType = "DataBox",
    ///             ShippingAddress = new AzureNative.DataBox.Inputs.ShippingAddressArgs
    ///             {
    ///                 AddressType = "Commercial",
    ///                 City = "San Francisco",
    ///                 CompanyName = "Microsoft",
    ///                 Country = "US",
    ///                 PostalCode = "94107",
    ///                 StateOrProvince = "CA",
    ///                 StreetAddress1 = "16 TOWNSEND ST",
    ///                 StreetAddress2 = "Unit 1",
    ///             },
    ///         },
    ///         JobName = "SdkJob6429",
    ///         Location = "westus",
    ///         ResourceGroupName = "SdkRg8091",
    ///         Sku = new AzureNative.DataBox.Inputs.SkuArgs
    ///         {
    ///             Name = "DataBox",
    ///         },
    ///         TransferType = "ExportFromAzure",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### JobsCreateWithUserAssignedIdentity
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var job = new AzureNative.DataBox.Job("job", new()
    ///     {
    ///         Details = new AzureNative.DataBox.Inputs.DataBoxJobDetailsArgs
    ///         {
    ///             ContactDetails = new AzureNative.DataBox.Inputs.ContactDetailsArgs
    ///             {
    ///                 ContactName = "Public SDK Test",
    ///                 EmailList = new[]
    ///                 {
    ///                     "testing@microsoft.com",
    ///                 },
    ///                 Phone = "1234567890",
    ///                 PhoneExtension = "1234",
    ///             },
    ///             DataImportDetails = new[]
    ///             {
    ///                 new AzureNative.DataBox.Inputs.DataImportDetailsArgs
    ///                 {
    ///                     AccountDetails = new AzureNative.DataBox.Inputs.StorageAccountDetailsArgs
    ///                     {
    ///                         DataAccountType = "StorageAccount",
    ///                         StorageAccountId = "/subscriptions/fa68082f-8ff7-4a25-95c7-ce9da541242f/resourceGroups/databoxbvt1/providers/Microsoft.Storage/storageAccounts/databoxbvttestaccount2",
    ///                     },
    ///                 },
    ///             },
    ///             JobDetailsType = "DataBox",
    ///             ShippingAddress = new AzureNative.DataBox.Inputs.ShippingAddressArgs
    ///             {
    ///                 AddressType = "Commercial",
    ///                 City = "San Francisco",
    ///                 CompanyName = "Microsoft",
    ///                 Country = "US",
    ///                 PostalCode = "94107",
    ///                 StateOrProvince = "CA",
    ///                 StreetAddress1 = "16 TOWNSEND ST",
    ///                 StreetAddress2 = "Unit 1",
    ///             },
    ///         },
    ///         Identity = new AzureNative.DataBox.Inputs.ResourceIdentityArgs
    ///         {
    ///             Type = "UserAssigned",
    ///             UserAssignedIdentities = 
    ///             {
    ///                 { "/subscriptions/fa68082f-8ff7-4a25-95c7-ce9da541242f/resourceGroups/akvenkat/providers/Microsoft.ManagedIdentity/userAssignedIdentities/sdkIdentity", null },
    ///             },
    ///         },
    ///         JobName = "SdkJob5337",
    ///         Location = "westus",
    ///         ResourceGroupName = "SdkRg7552",
    ///         Sku = new AzureNative.DataBox.Inputs.SkuArgs
    ///         {
    ///             Name = "DataBox",
    ///         },
    ///         TransferType = "ImportToAzure",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// 
    /// ## Import
    /// 
    /// An existing resource can be imported using its type token, name, and identifier, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure-native:databox:Job SdkJob5337 /subscriptions/fa68082f-8ff7-4a25-95c7-ce9da541242f/resourceGroups/SdkRg7552/providers/Microsoft.DataBox/jobs/SdkJob5337 
    /// ```
    /// </summary>
    [AzureNativeResourceType("azure-native:databox:Job")]
    public partial class Job : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Reason for cancellation.
        /// </summary>
        [Output("cancellationReason")]
        public Output<string> CancellationReason { get; private set; } = null!;

        /// <summary>
        /// Delivery Info of Job.
        /// </summary>
        [Output("deliveryInfo")]
        public Output<Outputs.JobDeliveryInfoResponse?> DeliveryInfo { get; private set; } = null!;

        /// <summary>
        /// Delivery type of Job.
        /// </summary>
        [Output("deliveryType")]
        public Output<string?> DeliveryType { get; private set; } = null!;

        /// <summary>
        /// Details of a job run. This field will only be sent for expand details filter.
        /// </summary>
        [Output("details")]
        public Output<object?> Details { get; private set; } = null!;

        /// <summary>
        /// Top level error for the job.
        /// </summary>
        [Output("error")]
        public Output<Outputs.CloudErrorResponse> Error { get; private set; } = null!;

        /// <summary>
        /// Msi identity of the resource
        /// </summary>
        [Output("identity")]
        public Output<Outputs.ResourceIdentityResponse?> Identity { get; private set; } = null!;

        /// <summary>
        /// Describes whether the job is cancellable or not.
        /// </summary>
        [Output("isCancellable")]
        public Output<bool> IsCancellable { get; private set; } = null!;

        /// <summary>
        /// Flag to indicate cancellation of scheduled job.
        /// </summary>
        [Output("isCancellableWithoutFee")]
        public Output<bool> IsCancellableWithoutFee { get; private set; } = null!;

        /// <summary>
        /// Describes whether the job is deletable or not.
        /// </summary>
        [Output("isDeletable")]
        public Output<bool> IsDeletable { get; private set; } = null!;

        /// <summary>
        /// Is Prepare To Ship Enabled on this job
        /// </summary>
        [Output("isPrepareToShipEnabled")]
        public Output<bool> IsPrepareToShipEnabled { get; private set; } = null!;

        /// <summary>
        /// Describes whether the shipping address is editable or not.
        /// </summary>
        [Output("isShippingAddressEditable")]
        public Output<bool> IsShippingAddressEditable { get; private set; } = null!;

        /// <summary>
        /// The location of the resource. This will be one of the supported and registered Azure Regions (e.g. West US, East US, Southeast Asia, etc.). The region of a resource cannot be changed once it is created, but if an identical region is specified on update the request will succeed.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Name of the object.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The Editable status for Reverse Shipping Address and Contact Info
        /// </summary>
        [Output("reverseShippingDetailsUpdate")]
        public Output<string> ReverseShippingDetailsUpdate { get; private set; } = null!;

        /// <summary>
        /// The Editable status for Reverse Transport preferences
        /// </summary>
        [Output("reverseTransportPreferenceUpdate")]
        public Output<string> ReverseTransportPreferenceUpdate { get; private set; } = null!;

        /// <summary>
        /// The sku type.
        /// </summary>
        [Output("sku")]
        public Output<Outputs.SkuResponse> Sku { get; private set; } = null!;

        /// <summary>
        /// Time at which the job was started in UTC ISO 8601 format.
        /// </summary>
        [Output("startTime")]
        public Output<string> StartTime { get; private set; } = null!;

        /// <summary>
        /// Name of the stage which is in progress.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// Metadata pertaining to creation and last modification of the resource.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// The list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups).
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Type of the data transfer.
        /// </summary>
        [Output("transferType")]
        public Output<string> TransferType { get; private set; } = null!;

        /// <summary>
        /// Type of the object.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a Job resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Job(string name, JobArgs args, CustomResourceOptions? options = null)
            : base("azure-native:databox:Job", name, args ?? new JobArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Job(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:databox:Job", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:databox/v20180101:Job"},
                    new global::Pulumi.Alias { Type = "azure-native:databox/v20190901:Job"},
                    new global::Pulumi.Alias { Type = "azure-native:databox/v20200401:Job"},
                    new global::Pulumi.Alias { Type = "azure-native:databox/v20201101:Job"},
                    new global::Pulumi.Alias { Type = "azure-native:databox/v20210301:Job"},
                    new global::Pulumi.Alias { Type = "azure-native:databox/v20210501:Job"},
                    new global::Pulumi.Alias { Type = "azure-native:databox/v20210801preview:Job"},
                    new global::Pulumi.Alias { Type = "azure-native:databox/v20211201:Job"},
                    new global::Pulumi.Alias { Type = "azure-native:databox/v20220201:Job"},
                    new global::Pulumi.Alias { Type = "azure-native:databox/v20220901:Job"},
                    new global::Pulumi.Alias { Type = "azure-native:databox/v20221001:Job"},
                    new global::Pulumi.Alias { Type = "azure-native:databox/v20221201:Job"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Job resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Job Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Job(name, id, options);
        }
    }

    public sealed class JobArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Delivery Info of Job.
        /// </summary>
        [Input("deliveryInfo")]
        public Input<Inputs.JobDeliveryInfoArgs>? DeliveryInfo { get; set; }

        /// <summary>
        /// Delivery type of Job.
        /// </summary>
        [Input("deliveryType")]
        public InputUnion<string, Pulumi.AzureNative.DataBox.JobDeliveryType>? DeliveryType { get; set; }

        /// <summary>
        /// Details of a job run. This field will only be sent for expand details filter.
        /// </summary>
        [Input("details")]
        public object? Details { get; set; }

        /// <summary>
        /// Msi identity of the resource
        /// </summary>
        [Input("identity")]
        public Input<Inputs.ResourceIdentityArgs>? Identity { get; set; }

        /// <summary>
        /// The name of the job Resource within the specified resource group. job names must be between 3 and 24 characters in length and use any alphanumeric and underscore only
        /// </summary>
        [Input("jobName")]
        public Input<string>? JobName { get; set; }

        /// <summary>
        /// The location of the resource. This will be one of the supported and registered Azure Regions (e.g. West US, East US, Southeast Asia, etc.). The region of a resource cannot be changed once it is created, but if an identical region is specified on update the request will succeed.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The Resource Group Name
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The sku type.
        /// </summary>
        [Input("sku", required: true)]
        public Input<Inputs.SkuArgs> Sku { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// The list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups).
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Type of the data transfer.
        /// </summary>
        [Input("transferType", required: true)]
        public InputUnion<string, Pulumi.AzureNative.DataBox.TransferType> TransferType { get; set; } = null!;

        public JobArgs()
        {
            DeliveryType = "NonScheduled";
        }
        public static new JobArgs Empty => new JobArgs();
    }
}
