// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Automation
{
    /// <summary>
    /// Definition of the dsc node configuration.
    /// API Version: 2022-08-08.
    /// Previous API Version: 2019-06-01. See https://github.com/pulumi/pulumi-azure-native/discussions/TODO for information on migrating from v1 to v2 of the provider.
    /// 
    /// ## Example Usage
    /// ### Create node configuration
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var dscNodeConfiguration = new AzureNative.Automation.DscNodeConfiguration("dscNodeConfiguration", new()
    ///     {
    ///         AutomationAccountName = "myAutomationAccount20",
    ///         Configuration = new AzureNative.Automation.Inputs.DscConfigurationAssociationPropertyArgs
    ///         {
    ///             Name = "configName",
    ///         },
    ///         IncrementNodeConfigurationBuild = true,
    ///         Name = "configName.nodeConfigName",
    ///         NodeConfigurationName = "configName.nodeConfigName",
    ///         ResourceGroupName = "rg",
    ///         Source = new AzureNative.Automation.Inputs.ContentSourceArgs
    ///         {
    ///             Hash = new AzureNative.Automation.Inputs.ContentHashArgs
    ///             {
    ///                 Algorithm = "sha256",
    ///                 Value = "6DE256A57F01BFA29B88696D5E77A383D6E61484C7686E8DB955FA10ACE9FFE5",
    ///             },
    ///             Type = "embeddedContent",
    ///             Value = @"
    /// instance of MSFT_RoleResource as $MSFT_RoleResource1ref
    /// {
    /// ResourceID = ""[WindowsFeature]IIS"";
    ///  Ensure = ""Present"";
    ///  SourceInfo = ""::3::32::WindowsFeature"";
    ///  Name = ""Web-Server"";
    ///  ModuleName = ""PsDesiredStateConfiguration"";
    /// 
    /// ModuleVersion = ""1.0"";
    ///  ConfigurationName = ""configName"";
    /// };
    /// instance of OMI_ConfigurationDocument
    /// 
    ///                     {
    ///  Version=""2.0.0"";
    ///  
    ///                         MinimumCompatibleVersion = ""1.0.0"";
    ///  
    ///                         CompatibleVersionAdditionalProperties= {""Omi_BaseResource:ConfigurationName""};
    ///  
    ///                         Author=""weijiel"";
    ///  
    ///                         GenerationDate=""03/30/2017 13:40:25"";
    ///  
    ///                         GenerationHost=""TEST-BACKEND"";
    ///  
    ///                         Name=""configName"";
    /// 
    ///                     };
    /// ",
    ///             Version = "1.0",
    ///         },
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// 
    /// ## Import
    /// 
    /// An existing resource can be imported using its type token, name, and identifier, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure-native:automation:DscNodeConfiguration configName.nodeConfigName /subscriptions/subid/resourceGroups/rg/providers/Microsoft.Automation/automationAccounts/myAutomationAccount20/nodeConfigurations/configName.nodeConfigName 
    /// ```
    /// </summary>
    [AzureNativeResourceType("azure-native:automation:DscNodeConfiguration")]
    public partial class DscNodeConfiguration : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Gets or sets the configuration of the node.
        /// </summary>
        [Output("configuration")]
        public Output<Outputs.DscConfigurationAssociationPropertyResponse?> Configuration { get; private set; } = null!;

        /// <summary>
        /// Gets or sets creation time.
        /// </summary>
        [Output("creationTime")]
        public Output<string?> CreationTime { get; private set; } = null!;

        /// <summary>
        /// If a new build version of NodeConfiguration is required.
        /// </summary>
        [Output("incrementNodeConfigurationBuild")]
        public Output<bool?> IncrementNodeConfigurationBuild { get; private set; } = null!;

        /// <summary>
        /// Gets or sets the last modified time.
        /// </summary>
        [Output("lastModifiedTime")]
        public Output<string?> LastModifiedTime { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Number of nodes with this node configuration assigned
        /// </summary>
        [Output("nodeCount")]
        public Output<double?> NodeCount { get; private set; } = null!;

        /// <summary>
        /// Source of node configuration.
        /// </summary>
        [Output("source")]
        public Output<string?> Source { get; private set; } = null!;

        /// <summary>
        /// The type of the resource.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a DscNodeConfiguration resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DscNodeConfiguration(string name, DscNodeConfigurationArgs args, CustomResourceOptions? options = null)
            : base("azure-native:automation:DscNodeConfiguration", name, args ?? new DscNodeConfigurationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DscNodeConfiguration(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:automation:DscNodeConfiguration", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:automation/v20151031:DscNodeConfiguration"},
                    new global::Pulumi.Alias { Type = "azure-native:automation/v20180115:DscNodeConfiguration"},
                    new global::Pulumi.Alias { Type = "azure-native:automation/v20190601:DscNodeConfiguration"},
                    new global::Pulumi.Alias { Type = "azure-native:automation/v20200113preview:DscNodeConfiguration"},
                    new global::Pulumi.Alias { Type = "azure-native:automation/v20220808:DscNodeConfiguration"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DscNodeConfiguration resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DscNodeConfiguration Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new DscNodeConfiguration(name, id, options);
        }
    }

    public sealed class DscNodeConfigurationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the automation account.
        /// </summary>
        [Input("automationAccountName", required: true)]
        public Input<string> AutomationAccountName { get; set; } = null!;

        /// <summary>
        /// Gets or sets the configuration of the node.
        /// </summary>
        [Input("configuration", required: true)]
        public Input<Inputs.DscConfigurationAssociationPropertyArgs> Configuration { get; set; } = null!;

        /// <summary>
        /// If a new build version of NodeConfiguration is required.
        /// </summary>
        [Input("incrementNodeConfigurationBuild")]
        public Input<bool>? IncrementNodeConfigurationBuild { get; set; }

        /// <summary>
        /// Name of the node configuration.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The Dsc node configuration name.
        /// </summary>
        [Input("nodeConfigurationName")]
        public Input<string>? NodeConfigurationName { get; set; }

        /// <summary>
        /// Name of an Azure Resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Gets or sets the source.
        /// </summary>
        [Input("source", required: true)]
        public Input<Inputs.ContentSourceArgs> Source { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Gets or sets the tags attached to the resource.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public DscNodeConfigurationArgs()
        {
        }
        public static new DscNodeConfigurationArgs Empty => new DscNodeConfigurationArgs();
    }
}
