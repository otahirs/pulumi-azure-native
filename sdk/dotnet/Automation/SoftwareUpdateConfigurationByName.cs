// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Automation
{
    /// <summary>
    /// Software update configuration properties.
    /// API Version: 2019-06-01.
    /// Previous API Version: 2019-06-01. See https://github.com/pulumi/pulumi-azure-native/discussions/TODO for information on migrating from v1 to v2 of the provider.
    /// 
    /// ## Example Usage
    /// ### Create software update configuration
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var softwareUpdateConfigurationByName = new AzureNative.Automation.SoftwareUpdateConfigurationByName("softwareUpdateConfigurationByName", new()
    ///     {
    ///         AutomationAccountName = "myaccount",
    ///         ResourceGroupName = "mygroup",
    ///         ScheduleInfo = new AzureNative.Automation.Inputs.SUCSchedulePropertiesArgs
    ///         {
    ///             AdvancedSchedule = new AzureNative.Automation.Inputs.AdvancedScheduleArgs
    ///             {
    ///                 WeekDays = new[]
    ///                 {
    ///                     "Monday",
    ///                     "Thursday",
    ///                 },
    ///             },
    ///             ExpiryTime = "2018-11-09T11:22:57+00:00",
    ///             Frequency = "Hour",
    ///             Interval = 1,
    ///             StartTime = "2017-10-19T12:22:57+00:00",
    ///             TimeZone = "America/Los_Angeles",
    ///         },
    ///         SoftwareUpdateConfigurationName = "testpatch",
    ///         Tasks = new AzureNative.Automation.Inputs.SoftwareUpdateConfigurationTasksArgs
    ///         {
    ///             PostTask = new AzureNative.Automation.Inputs.TaskPropertiesArgs
    ///             {
    ///                 Source = "GetCache",
    ///             },
    ///             PreTask = new AzureNative.Automation.Inputs.TaskPropertiesArgs
    ///             {
    ///                 Parameters = 
    ///                 {
    ///                     { "COMPUTERNAME", "Computer1" },
    ///                 },
    ///                 Source = "HelloWorld",
    ///             },
    ///         },
    ///         UpdateConfiguration = new AzureNative.Automation.Inputs.UpdateConfigurationArgs
    ///         {
    ///             AzureVirtualMachines = new[]
    ///             {
    ///                 "/subscriptions/5ae68d89-69a4-454f-b5ce-e443cc4e0067/resourceGroups/myresources/providers/Microsoft.Compute/virtualMachines/vm-01",
    ///                 "/subscriptions/5ae68d89-69a4-454f-b5ce-e443cc4e0067/resourceGroups/myresources/providers/Microsoft.Compute/virtualMachines/vm-02",
    ///                 "/subscriptions/5ae68d89-69a4-454f-b5ce-e443cc4e0067/resourceGroups/myresources/providers/Microsoft.Compute/virtualMachines/vm-03",
    ///             },
    ///             Duration = "PT2H0M",
    ///             NonAzureComputerNames = new[]
    ///             {
    ///                 "box1.contoso.com",
    ///                 "box2.contoso.com",
    ///             },
    ///             OperatingSystem = AzureNative.Automation.OperatingSystemType.Windows,
    ///             Targets = new AzureNative.Automation.Inputs.TargetPropertiesArgs
    ///             {
    ///                 AzureQueries = new[]
    ///                 {
    ///                     new AzureNative.Automation.Inputs.AzureQueryPropertiesArgs
    ///                     {
    ///                         Locations = new[]
    ///                         {
    ///                             "Japan East",
    ///                             "UK South",
    ///                         },
    ///                         Scope = new[]
    ///                         {
    ///                             "/subscriptions/5ae68d89-69a4-454f-b5ce-e443cc4e0067/resourceGroups/myresources",
    ///                             "/subscriptions/5ae68d89-69a4-454f-b5ce-e443cc4e0067",
    ///                         },
    ///                         TagSettings = new AzureNative.Automation.Inputs.TagSettingsPropertiesArgs
    ///                         {
    ///                             FilterOperator = AzureNative.Automation.TagOperators.All,
    ///                             Tags = 
    ///                             {
    ///                                 { "tag1", new[]
    ///                                 {
    ///                                     "tag1Value1",
    ///                                     "tag1Value2",
    ///                                     "tag1Value3",
    ///                                 } },
    ///                                 { "tag2", new[]
    ///                                 {
    ///                                     "tag2Value1",
    ///                                     "tag2Value2",
    ///                                     "tag2Value3",
    ///                                 } },
    ///                             },
    ///                         },
    ///                     },
    ///                 },
    ///                 NonAzureQueries = new[]
    ///                 {
    ///                     new AzureNative.Automation.Inputs.NonAzureQueryPropertiesArgs
    ///                     {
    ///                         FunctionAlias = "SavedSearch1",
    ///                         WorkspaceId = "WorkspaceId1",
    ///                     },
    ///                     new AzureNative.Automation.Inputs.NonAzureQueryPropertiesArgs
    ///                     {
    ///                         FunctionAlias = "SavedSearch2",
    ///                         WorkspaceId = "WorkspaceId2",
    ///                     },
    ///                 },
    ///             },
    ///             Windows = new AzureNative.Automation.Inputs.WindowsPropertiesArgs
    ///             {
    ///                 ExcludedKbNumbers = new[]
    ///                 {
    ///                     "168934",
    ///                     "168973",
    ///                 },
    ///                 IncludedUpdateClassifications = "Critical",
    ///                 RebootSetting = "IfRequired",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// 
    /// ## Import
    /// 
    /// An existing resource can be imported using its type token, name, and identifier, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure-native:automation:SoftwareUpdateConfigurationByName testpatch /subscriptions/51766542-3ed7-4a72-a187-0c8ab644ddab/resourceGroups/mygroup/providers/Microsoft.Automation/automationAccounts/myaccount/softwareUpdateConfigurations/testpatch 
    /// ```
    /// </summary>
    [AzureNativeResourceType("azure-native:automation:SoftwareUpdateConfigurationByName")]
    public partial class SoftwareUpdateConfigurationByName : global::Pulumi.CustomResource
    {
        /// <summary>
        /// CreatedBy property, which only appears in the response.
        /// </summary>
        [Output("createdBy")]
        public Output<string> CreatedBy { get; private set; } = null!;

        /// <summary>
        /// Creation time of the resource, which only appears in the response.
        /// </summary>
        [Output("creationTime")]
        public Output<string> CreationTime { get; private set; } = null!;

        /// <summary>
        /// Details of provisioning error
        /// </summary>
        [Output("error")]
        public Output<Outputs.ErrorResponseResponse?> Error { get; private set; } = null!;

        /// <summary>
        /// LastModifiedBy property, which only appears in the response.
        /// </summary>
        [Output("lastModifiedBy")]
        public Output<string> LastModifiedBy { get; private set; } = null!;

        /// <summary>
        /// Last time resource was modified, which only appears in the response.
        /// </summary>
        [Output("lastModifiedTime")]
        public Output<string> LastModifiedTime { get; private set; } = null!;

        /// <summary>
        /// Resource name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Provisioning state for the software update configuration, which only appears in the response.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Schedule information for the Software update configuration
        /// </summary>
        [Output("scheduleInfo")]
        public Output<Outputs.SUCSchedulePropertiesResponse> ScheduleInfo { get; private set; } = null!;

        /// <summary>
        /// Tasks information for the Software update configuration.
        /// </summary>
        [Output("tasks")]
        public Output<Outputs.SoftwareUpdateConfigurationTasksResponse?> Tasks { get; private set; } = null!;

        /// <summary>
        /// Resource type
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// update specific properties for the Software update configuration
        /// </summary>
        [Output("updateConfiguration")]
        public Output<Outputs.UpdateConfigurationResponse> UpdateConfiguration { get; private set; } = null!;


        /// <summary>
        /// Create a SoftwareUpdateConfigurationByName resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SoftwareUpdateConfigurationByName(string name, SoftwareUpdateConfigurationByNameArgs args, CustomResourceOptions? options = null)
            : base("azure-native:automation:SoftwareUpdateConfigurationByName", name, args ?? new SoftwareUpdateConfigurationByNameArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SoftwareUpdateConfigurationByName(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:automation:SoftwareUpdateConfigurationByName", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:automation/v20170515preview:SoftwareUpdateConfigurationByName"},
                    new global::Pulumi.Alias { Type = "azure-native:automation/v20190601:SoftwareUpdateConfigurationByName"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SoftwareUpdateConfigurationByName resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SoftwareUpdateConfigurationByName Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new SoftwareUpdateConfigurationByName(name, id, options);
        }
    }

    public sealed class SoftwareUpdateConfigurationByNameArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the automation account.
        /// </summary>
        [Input("automationAccountName", required: true)]
        public Input<string> AutomationAccountName { get; set; } = null!;

        /// <summary>
        /// Details of provisioning error
        /// </summary>
        [Input("error")]
        public Input<Inputs.ErrorResponseArgs>? Error { get; set; }

        /// <summary>
        /// Name of an Azure Resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Schedule information for the Software update configuration
        /// </summary>
        [Input("scheduleInfo", required: true)]
        public Input<Inputs.SUCSchedulePropertiesArgs> ScheduleInfo { get; set; } = null!;

        /// <summary>
        /// The name of the software update configuration to be created.
        /// </summary>
        [Input("softwareUpdateConfigurationName")]
        public Input<string>? SoftwareUpdateConfigurationName { get; set; }

        /// <summary>
        /// Tasks information for the Software update configuration.
        /// </summary>
        [Input("tasks")]
        public Input<Inputs.SoftwareUpdateConfigurationTasksArgs>? Tasks { get; set; }

        /// <summary>
        /// update specific properties for the Software update configuration
        /// </summary>
        [Input("updateConfiguration", required: true)]
        public Input<Inputs.UpdateConfigurationArgs> UpdateConfiguration { get; set; } = null!;

        public SoftwareUpdateConfigurationByNameArgs()
        {
        }
        public static new SoftwareUpdateConfigurationByNameArgs Empty => new SoftwareUpdateConfigurationByNameArgs();
    }
}
