// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.StreamAnalytics.V20160301
{
    /// <summary>
    /// An input object, containing all information associated with the named input. All inputs are contained under a streaming job.
    /// 
    /// ## Example Usage
    /// ### Create a reference blob input with CSV serialization
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var input = new AzureNative.StreamAnalytics.V20160301.Input("input", new()
    ///     {
    ///         InputName = "input7225",
    ///         JobName = "sj9597",
    ///         Properties = new AzureNative.StreamAnalytics.V20160301.Inputs.ReferenceInputPropertiesArgs
    ///         {
    ///             Datasource = new AzureNative.StreamAnalytics.V20160301.Inputs.BlobReferenceInputDataSourceArgs
    ///             {
    ///                 Container = "state",
    ///                 DateFormat = "yyyy/MM/dd",
    ///                 PathPattern = "{date}/{time}",
    ///                 StorageAccounts = new[]
    ///                 {
    ///                     new AzureNative.StreamAnalytics.V20160301.Inputs.StorageAccountArgs
    ///                     {
    ///                         AccountKey = "someAccountKey==",
    ///                         AccountName = "someAccountName",
    ///                     },
    ///                 },
    ///                 TimeFormat = "HH",
    ///                 Type = "Microsoft.Storage/Blob",
    ///             },
    ///             Serialization = new AzureNative.StreamAnalytics.V20160301.Inputs.CsvSerializationArgs
    ///             {
    ///                 Encoding = "UTF8",
    ///                 FieldDelimiter = ",",
    ///                 Type = "Csv",
    ///             },
    ///             Type = "Reference",
    ///         },
    ///         ResourceGroupName = "sjrg8440",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Create a stream Event Hub input with JSON serialization
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var input = new AzureNative.StreamAnalytics.V20160301.Input("input", new()
    ///     {
    ///         InputName = "input7425",
    ///         JobName = "sj197",
    ///         Properties = new AzureNative.StreamAnalytics.V20160301.Inputs.StreamInputPropertiesArgs
    ///         {
    ///             Datasource = new AzureNative.StreamAnalytics.V20160301.Inputs.EventHubStreamInputDataSourceArgs
    ///             {
    ///                 ConsumerGroupName = "sdkconsumergroup",
    ///                 EventHubName = "sdkeventhub",
    ///                 ServiceBusNamespace = "sdktest",
    ///                 SharedAccessPolicyKey = "someSharedAccessPolicyKey==",
    ///                 SharedAccessPolicyName = "RootManageSharedAccessKey",
    ///                 Type = "Microsoft.ServiceBus/EventHub",
    ///             },
    ///             Serialization = new AzureNative.StreamAnalytics.V20160301.Inputs.JsonSerializationArgs
    ///             {
    ///                 Encoding = "UTF8",
    ///                 Type = "Json",
    ///             },
    ///             Type = "Stream",
    ///         },
    ///         ResourceGroupName = "sjrg3139",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Create a stream IoT Hub input with Avro serialization
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var input = new AzureNative.StreamAnalytics.V20160301.Input("input", new()
    ///     {
    ///         InputName = "input7970",
    ///         JobName = "sj9742",
    ///         Properties = new AzureNative.StreamAnalytics.V20160301.Inputs.StreamInputPropertiesArgs
    ///         {
    ///             Datasource = new AzureNative.StreamAnalytics.V20160301.Inputs.IoTHubStreamInputDataSourceArgs
    ///             {
    ///                 ConsumerGroupName = "sdkconsumergroup",
    ///                 Endpoint = "messages/events",
    ///                 IotHubNamespace = "iothub",
    ///                 SharedAccessPolicyKey = "sharedAccessPolicyKey=",
    ///                 SharedAccessPolicyName = "owner",
    ///                 Type = "Microsoft.Devices/IotHubs",
    ///             },
    ///             Serialization = new AzureNative.StreamAnalytics.V20160301.Inputs.AvroSerializationArgs
    ///             {
    ///                 Type = "Avro",
    ///             },
    ///             Type = "Stream",
    ///         },
    ///         ResourceGroupName = "sjrg3467",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Create a stream blob input with CSV serialization
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var input = new AzureNative.StreamAnalytics.V20160301.Input("input", new()
    ///     {
    ///         InputName = "input8899",
    ///         JobName = "sj6695",
    ///         Properties = new AzureNative.StreamAnalytics.V20160301.Inputs.StreamInputPropertiesArgs
    ///         {
    ///             Datasource = new AzureNative.StreamAnalytics.V20160301.Inputs.BlobStreamInputDataSourceArgs
    ///             {
    ///                 Container = "state",
    ///                 DateFormat = "yyyy/MM/dd",
    ///                 PathPattern = "{date}/{time}",
    ///                 SourcePartitionCount = 16,
    ///                 StorageAccounts = new[]
    ///                 {
    ///                     new AzureNative.StreamAnalytics.V20160301.Inputs.StorageAccountArgs
    ///                     {
    ///                         AccountKey = "someAccountKey==",
    ///                         AccountName = "someAccountName",
    ///                     },
    ///                 },
    ///                 TimeFormat = "HH",
    ///                 Type = "Microsoft.Storage/Blob",
    ///             },
    ///             Serialization = new AzureNative.StreamAnalytics.V20160301.Inputs.CsvSerializationArgs
    ///             {
    ///                 Encoding = "UTF8",
    ///                 FieldDelimiter = ",",
    ///                 Type = "Csv",
    ///             },
    ///             Type = "Stream",
    ///         },
    ///         ResourceGroupName = "sjrg8161",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// 
    /// ## Import
    /// 
    /// An existing resource can be imported using its type token, name, and identifier, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure-native:streamanalytics/v20160301:Input input8899 /subscriptions/56b5e0a9-b645-407d-99b0-c64f86013e3d/resourceGroups/sjrg8161/providers/Microsoft.StreamAnalytics/streamingjobs/sj6695/inputs/input8899 
    /// ```
    /// </summary>
    [AzureNativeResourceType("azure-native:streamanalytics/v20160301:Input")]
    public partial class Input : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Resource name
        /// </summary>
        [Output("name")]
        public Output<string?> Name { get; private set; } = null!;

        /// <summary>
        /// The properties that are associated with an input. Required on PUT (CreateOrReplace) requests.
        /// </summary>
        [Output("properties")]
        public Output<Union<Outputs.ReferenceInputPropertiesResponse, Outputs.StreamInputPropertiesResponse>> Properties { get; private set; } = null!;

        /// <summary>
        /// Resource type
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a Input resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Input(string name, InputArgs args, CustomResourceOptions? options = null)
            : base("azure-native:streamanalytics/v20160301:Input", name, args ?? new InputArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Input(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:streamanalytics/v20160301:Input", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:streamanalytics:Input"},
                    new global::Pulumi.Alias { Type = "azure-native:streamanalytics/v20170401preview:Input"},
                    new global::Pulumi.Alias { Type = "azure-native:streamanalytics/v20200301:Input"},
                    new global::Pulumi.Alias { Type = "azure-native:streamanalytics/v20211001preview:Input"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Input resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Input Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Input(name, id, options);
        }
    }

    public sealed class InputArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the input.
        /// </summary>
        [Input("inputName")]
        public Input<string>? InputName { get; set; }

        /// <summary>
        /// The name of the streaming job.
        /// </summary>
        [Input("jobName", required: true)]
        public Input<string> JobName { get; set; } = null!;

        /// <summary>
        /// Resource name
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The properties that are associated with an input. Required on PUT (CreateOrReplace) requests.
        /// </summary>
        [Input("properties")]
        public InputUnion<Inputs.ReferenceInputPropertiesArgs, Inputs.StreamInputPropertiesArgs>? Properties { get; set; }

        /// <summary>
        /// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public InputArgs()
        {
        }
        public static new InputArgs Empty => new InputArgs();
    }
}
