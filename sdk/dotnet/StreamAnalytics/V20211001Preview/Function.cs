// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.StreamAnalytics.V20211001Preview
{
    /// <summary>
    /// A function object, containing all information associated with the named function. All functions are contained under a streaming job.
    /// 
    /// ## Example Usage
    /// ### Create a CLRUdf function
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var function = new AzureNative.StreamAnalytics.V20211001Preview.Function("function", new()
    ///     {
    ///         FunctionName = "function588",
    ///         JobName = "sjName",
    ///         Properties = new AzureNative.StreamAnalytics.V20211001Preview.Inputs.ScalarFunctionPropertiesArgs
    ///         {
    ///             Binding = new AzureNative.StreamAnalytics.V20211001Preview.Inputs.CSharpFunctionBindingArgs
    ///             {
    ///                 Class = "ASAEdgeUDFDemo.Class1",
    ///                 DllPath = "ASAEdgeApplication2_CodeBehind",
    ///                 Method = "SquareFunction",
    ///                 Type = "Microsoft.StreamAnalytics/CLRUdf",
    ///                 UpdateMode = "Static",
    ///             },
    ///             Inputs = new[]
    ///             {
    ///                 new AzureNative.StreamAnalytics.V20211001Preview.Inputs.FunctionInputArgs
    ///                 {
    ///                     DataType = "nvarchar(max)",
    ///                 },
    ///             },
    ///             Output = new AzureNative.StreamAnalytics.V20211001Preview.Inputs.FunctionOutputArgs
    ///             {
    ///                 DataType = "nvarchar(max)",
    ///             },
    ///             Type = "Scalar",
    ///         },
    ///         ResourceGroupName = "sjrg",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Create a JavaScript function
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var function = new AzureNative.StreamAnalytics.V20211001Preview.Function("function", new()
    ///     {
    ///         FunctionName = "function8197",
    ///         JobName = "sj8653",
    ///         Properties = new AzureNative.StreamAnalytics.V20211001Preview.Inputs.ScalarFunctionPropertiesArgs
    ///         {
    ///             Binding = new AzureNative.StreamAnalytics.V20211001Preview.Inputs.JavaScriptFunctionBindingArgs
    ///             {
    ///                 Script = "function (x, y) { return x + y; }",
    ///                 Type = "Microsoft.StreamAnalytics/JavascriptUdf",
    ///             },
    ///             Inputs = new[]
    ///             {
    ///                 new AzureNative.StreamAnalytics.V20211001Preview.Inputs.FunctionInputArgs
    ///                 {
    ///                     DataType = "Any",
    ///                 },
    ///             },
    ///             Output = new AzureNative.StreamAnalytics.V20211001Preview.Inputs.FunctionOutputArgs
    ///             {
    ///                 DataType = "Any",
    ///             },
    ///             Type = "Scalar",
    ///         },
    ///         ResourceGroupName = "sjrg1637",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Create an Azure ML Service function
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var function = new AzureNative.StreamAnalytics.V20211001Preview.Function("function", new()
    ///     {
    ///         FunctionName = "function588",
    ///         JobName = "sjName",
    ///         Properties = new AzureNative.StreamAnalytics.V20211001Preview.Inputs.ScalarFunctionPropertiesArgs
    ///         {
    ///             Binding = new AzureNative.StreamAnalytics.V20211001Preview.Inputs.AzureMachineLearningServiceFunctionBindingArgs
    ///             {
    ///                 ApiKey = "someApiKey==",
    ///                 BatchSize = 1000,
    ///                 Endpoint = "someAzureMLEndpointURL",
    ///                 InputRequestName = "Inputs",
    ///                 Inputs = new[]
    ///                 {
    ///                     new AzureNative.StreamAnalytics.V20211001Preview.Inputs.AzureMachineLearningServiceInputColumnArgs
    ///                     {
    ///                         DataType = "array",
    ///                         MapTo = 0,
    ///                         Name = "data",
    ///                     },
    ///                 },
    ///                 NumberOfParallelRequests = 1,
    ///                 OutputResponseName = "Results",
    ///                 Outputs = new[]
    ///                 {
    ///                     new AzureNative.StreamAnalytics.V20211001Preview.Inputs.AzureMachineLearningServiceOutputColumnArgs
    ///                     {
    ///                         DataType = "string",
    ///                         Name = "Sentiment",
    ///                     },
    ///                 },
    ///                 Type = "Microsoft.MachineLearningServices",
    ///             },
    ///             Inputs = new[]
    ///             {
    ///                 new AzureNative.StreamAnalytics.V20211001Preview.Inputs.FunctionInputArgs
    ///                 {
    ///                     DataType = "nvarchar(max)",
    ///                 },
    ///             },
    ///             Output = new AzureNative.StreamAnalytics.V20211001Preview.Inputs.FunctionOutputArgs
    ///             {
    ///                 DataType = "nvarchar(max)",
    ///             },
    ///             Type = "Scalar",
    ///         },
    ///         ResourceGroupName = "sjrg",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Create an Azure ML function
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var function = new AzureNative.StreamAnalytics.V20211001Preview.Function("function", new()
    ///     {
    ///         FunctionName = "function588",
    ///         JobName = "sj9093",
    ///         Properties = new AzureNative.StreamAnalytics.V20211001Preview.Inputs.ScalarFunctionPropertiesArgs
    ///         {
    ///             Binding = new AzureNative.StreamAnalytics.V20211001Preview.Inputs.AzureMachineLearningStudioFunctionBindingArgs
    ///             {
    ///                 ApiKey = "someApiKey==",
    ///                 BatchSize = 1000,
    ///                 Endpoint = "someAzureMLEndpointURL",
    ///                 Inputs = new AzureNative.StreamAnalytics.V20211001Preview.Inputs.AzureMachineLearningStudioInputsArgs
    ///                 {
    ///                     ColumnNames = new[]
    ///                     {
    ///                         new AzureNative.StreamAnalytics.V20211001Preview.Inputs.AzureMachineLearningStudioInputColumnArgs
    ///                         {
    ///                             DataType = "string",
    ///                             MapTo = 0,
    ///                             Name = "tweet",
    ///                         },
    ///                     },
    ///                     Name = "input1",
    ///                 },
    ///                 Outputs = new[]
    ///                 {
    ///                     new AzureNative.StreamAnalytics.V20211001Preview.Inputs.AzureMachineLearningStudioOutputColumnArgs
    ///                     {
    ///                         DataType = "string",
    ///                         Name = "Sentiment",
    ///                     },
    ///                 },
    ///                 Type = "Microsoft.MachineLearning/WebService",
    ///             },
    ///             Inputs = new[]
    ///             {
    ///                 new AzureNative.StreamAnalytics.V20211001Preview.Inputs.FunctionInputArgs
    ///                 {
    ///                     DataType = "nvarchar(max)",
    ///                 },
    ///             },
    ///             Output = new AzureNative.StreamAnalytics.V20211001Preview.Inputs.FunctionOutputArgs
    ///             {
    ///                 DataType = "nvarchar(max)",
    ///             },
    ///             Type = "Scalar",
    ///         },
    ///         ResourceGroupName = "sjrg7",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// 
    /// ## Import
    /// 
    /// An existing resource can be imported using its type token, name, and identifier, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure-native:streamanalytics/v20211001preview:Function function588 /subscriptions/56b5e0a9-b645-407d-99b0-c64f86013e3d/resourceGroups/sjrg7/providers/Microsoft.StreamAnalytics/streamingjobs/sj9093/functions/function588 
    /// ```
    /// </summary>
    [AzureNativeResourceType("azure-native:streamanalytics/v20211001preview:Function")]
    public partial class Function : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Resource name
        /// </summary>
        [Output("name")]
        public Output<string?> Name { get; private set; } = null!;

        /// <summary>
        /// The properties that are associated with a function.
        /// </summary>
        [Output("properties")]
        public Output<Union<Outputs.AggregateFunctionPropertiesResponse, Outputs.ScalarFunctionPropertiesResponse>> Properties { get; private set; } = null!;

        /// <summary>
        /// Resource type
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a Function resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Function(string name, FunctionArgs args, CustomResourceOptions? options = null)
            : base("azure-native:streamanalytics/v20211001preview:Function", name, args ?? new FunctionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Function(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:streamanalytics/v20211001preview:Function", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:streamanalytics:Function"},
                    new global::Pulumi.Alias { Type = "azure-native:streamanalytics/v20160301:Function"},
                    new global::Pulumi.Alias { Type = "azure-native:streamanalytics/v20170401preview:Function"},
                    new global::Pulumi.Alias { Type = "azure-native:streamanalytics/v20200301:Function"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Function resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Function Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Function(name, id, options);
        }
    }

    public sealed class FunctionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the function.
        /// </summary>
        [Input("functionName")]
        public Input<string>? FunctionName { get; set; }

        /// <summary>
        /// The name of the streaming job.
        /// </summary>
        [Input("jobName", required: true)]
        public Input<string> JobName { get; set; } = null!;

        /// <summary>
        /// Resource name
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The properties that are associated with a function.
        /// </summary>
        [Input("properties")]
        public InputUnion<Inputs.AggregateFunctionPropertiesArgs, Inputs.ScalarFunctionPropertiesArgs>? Properties { get; set; }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public FunctionArgs()
        {
        }
        public static new FunctionArgs Empty => new FunctionArgs();
    }
}
