// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.ComponentModel;
using Pulumi;

namespace Pulumi.AzureNative.Peering.V20190801Preview
{
    /// <summary>
    /// The prefix learned type
    /// </summary>
    [EnumType]
    public readonly struct LearnedType : IEquatable<LearnedType>
    {
        private readonly string _value;

        private LearnedType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static LearnedType None { get; } = new LearnedType("None");
        public static LearnedType ViaPartner { get; } = new LearnedType("ViaPartner");
        public static LearnedType ViaSession { get; } = new LearnedType("ViaSession");

        public static bool operator ==(LearnedType left, LearnedType right) => left.Equals(right);
        public static bool operator !=(LearnedType left, LearnedType right) => !left.Equals(right);

        public static explicit operator string(LearnedType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is LearnedType other && Equals(other);
        public bool Equals(LearnedType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// The prefix validation state
    /// </summary>
    [EnumType]
    public readonly struct PrefixValidationState : IEquatable<PrefixValidationState>
    {
        private readonly string _value;

        private PrefixValidationState(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static PrefixValidationState None { get; } = new PrefixValidationState("None");
        public static PrefixValidationState Invalid { get; } = new PrefixValidationState("Invalid");
        public static PrefixValidationState Verified { get; } = new PrefixValidationState("Verified");
        public static PrefixValidationState Failed { get; } = new PrefixValidationState("Failed");
        public static PrefixValidationState Pending { get; } = new PrefixValidationState("Pending");
        public static PrefixValidationState Unknown { get; } = new PrefixValidationState("Unknown");

        public static bool operator ==(PrefixValidationState left, PrefixValidationState right) => left.Equals(right);
        public static bool operator !=(PrefixValidationState left, PrefixValidationState right) => !left.Equals(right);

        public static explicit operator string(PrefixValidationState value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is PrefixValidationState other && Equals(other);
        public bool Equals(PrefixValidationState other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }
}
