// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.App.V20220101Preview
{
    /// <summary>
    /// Container App.
    /// 
    /// ## Example Usage
    /// ### Create or Update Container App
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var containerApp = new AzureNative.App.V20220101Preview.ContainerApp("containerApp", new()
    ///     {
    ///         Configuration = new AzureNative.App.V20220101Preview.Inputs.ConfigurationArgs
    ///         {
    ///             Dapr = new AzureNative.App.V20220101Preview.Inputs.DaprArgs
    ///             {
    ///                 AppPort = 3000,
    ///                 AppProtocol = "http",
    ///                 Enabled = true,
    ///             },
    ///             Ingress = new AzureNative.App.V20220101Preview.Inputs.IngressArgs
    ///             {
    ///                 CustomDomains = new[]
    ///                 {
    ///                     new AzureNative.App.V20220101Preview.Inputs.CustomDomainArgs
    ///                     {
    ///                         BindingType = "SniEnabled",
    ///                         CertificateId = "/subscriptions/34adfa4f-cedf-4dc0-ba29-b6d1a69ab345/resourceGroups/rg/providers/Microsoft.App/managedEnvironments/demokube/certificates/my-certificate-for-my-name-dot-com",
    ///                         Name = "www.my-name.com",
    ///                     },
    ///                     new AzureNative.App.V20220101Preview.Inputs.CustomDomainArgs
    ///                     {
    ///                         BindingType = "SniEnabled",
    ///                         CertificateId = "/subscriptions/34adfa4f-cedf-4dc0-ba29-b6d1a69ab345/resourceGroups/rg/providers/Microsoft.App/managedEnvironments/demokube/certificates/my-certificate-for-my-other-name-dot-com",
    ///                         Name = "www.my-other-name.com",
    ///                     },
    ///                 },
    ///                 External = true,
    ///                 TargetPort = 3000,
    ///             },
    ///         },
    ///         Location = "East US",
    ///         ManagedEnvironmentId = "/subscriptions/34adfa4f-cedf-4dc0-ba29-b6d1a69ab345/resourceGroups/rg/providers/Microsoft.App/managedEnvironments/demokube",
    ///         Name = "testcontainerApp0",
    ///         ResourceGroupName = "rg",
    ///         Template = new AzureNative.App.V20220101Preview.Inputs.TemplateArgs
    ///         {
    ///             Containers = new[]
    ///             {
    ///                 new AzureNative.App.V20220101Preview.Inputs.ContainerArgs
    ///                 {
    ///                     Image = "repo/testcontainerApp0:v1",
    ///                     Name = "testcontainerApp0",
    ///                     Probes = new[]
    ///                     {
    ///                         new AzureNative.App.V20220101Preview.Inputs.ContainerAppProbeArgs
    ///                         {
    ///                             HttpGet = new AzureNative.App.V20220101Preview.Inputs.ContainerAppProbeHttpGetArgs
    ///                             {
    ///                                 HttpHeaders = new[]
    ///                                 {
    ///                                     new AzureNative.App.V20220101Preview.Inputs.ContainerAppProbeHttpHeadersArgs
    ///                                     {
    ///                                         Name = "Custom-Header",
    ///                                         Value = "Awesome",
    ///                                     },
    ///                                 },
    ///                                 Path = "/health",
    ///                                 Port = 8080,
    ///                             },
    ///                             InitialDelaySeconds = 3,
    ///                             PeriodSeconds = 3,
    ///                             Type = "Liveness",
    ///                         },
    ///                     },
    ///                 },
    ///             },
    ///             Scale = new AzureNative.App.V20220101Preview.Inputs.ScaleArgs
    ///             {
    ///                 MaxReplicas = 5,
    ///                 MinReplicas = 1,
    ///                 Rules = new[]
    ///                 {
    ///                     new AzureNative.App.V20220101Preview.Inputs.ScaleRuleArgs
    ///                     {
    ///                         Custom = new AzureNative.App.V20220101Preview.Inputs.CustomScaleRuleArgs
    ///                         {
    ///                             Metadata = 
    ///                             {
    ///                                 { "concurrentRequests", "50" },
    ///                             },
    ///                             Type = "http",
    ///                         },
    ///                         Name = "httpscalingrule",
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// 
    /// ## Import
    /// 
    /// An existing resource can be imported using its type token, name, and identifier, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure-native:app/v20220101preview:ContainerApp testcontainerApp0 /subscriptions/34adfa4f-cedf-4dc0-ba29-b6d1a69ab345/resourceGroups/rg/providers/Microsoft.App/containerApps/testcontainerApp0 
    /// ```
    /// </summary>
    [AzureNativeResourceType("azure-native:app/v20220101preview:ContainerApp")]
    public partial class ContainerApp : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Non versioned Container App configuration properties.
        /// </summary>
        [Output("configuration")]
        public Output<Outputs.ConfigurationResponse?> Configuration { get; private set; } = null!;

        /// <summary>
        /// Id used to verify domain name ownership
        /// </summary>
        [Output("customDomainVerificationId")]
        public Output<string> CustomDomainVerificationId { get; private set; } = null!;

        /// <summary>
        /// managed identities for the Container App to interact with other Azure services without maintaining any secrets or credentials in code.
        /// </summary>
        [Output("identity")]
        public Output<Outputs.ManagedServiceIdentityResponse?> Identity { get; private set; } = null!;

        /// <summary>
        /// Fully Qualified Domain Name of the latest revision of the Container App.
        /// </summary>
        [Output("latestRevisionFqdn")]
        public Output<string> LatestRevisionFqdn { get; private set; } = null!;

        /// <summary>
        /// Name of the latest revision of the Container App.
        /// </summary>
        [Output("latestRevisionName")]
        public Output<string> LatestRevisionName { get; private set; } = null!;

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Resource ID of the Container App's environment.
        /// </summary>
        [Output("managedEnvironmentId")]
        public Output<string?> ManagedEnvironmentId { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Outbound IP Addresses for container app.
        /// </summary>
        [Output("outboundIpAddresses")]
        public Output<ImmutableArray<string>> OutboundIpAddresses { get; private set; } = null!;

        /// <summary>
        /// Provisioning state of the Container App.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Container App versioned application definition.
        /// </summary>
        [Output("template")]
        public Output<Outputs.TemplateResponse?> Template { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a ContainerApp resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ContainerApp(string name, ContainerAppArgs args, CustomResourceOptions? options = null)
            : base("azure-native:app/v20220101preview:ContainerApp", name, args ?? new ContainerAppArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ContainerApp(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:app/v20220101preview:ContainerApp", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:app:ContainerApp"},
                    new global::Pulumi.Alias { Type = "azure-native:app/v20220301:ContainerApp"},
                    new global::Pulumi.Alias { Type = "azure-native:app/v20220601preview:ContainerApp"},
                    new global::Pulumi.Alias { Type = "azure-native:app/v20221001:ContainerApp"},
                    new global::Pulumi.Alias { Type = "azure-native:app/v20221101preview:ContainerApp"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ContainerApp resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ContainerApp Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new ContainerApp(name, id, options);
        }
    }

    public sealed class ContainerAppArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Non versioned Container App configuration properties.
        /// </summary>
        [Input("configuration")]
        public Input<Inputs.ConfigurationArgs>? Configuration { get; set; }

        /// <summary>
        /// managed identities for the Container App to interact with other Azure services without maintaining any secrets or credentials in code.
        /// </summary>
        [Input("identity")]
        public Input<Inputs.ManagedServiceIdentityArgs>? Identity { get; set; }

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Resource ID of the Container App's environment.
        /// </summary>
        [Input("managedEnvironmentId")]
        public Input<string>? ManagedEnvironmentId { get; set; }

        /// <summary>
        /// Name of the Container App.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Container App versioned application definition.
        /// </summary>
        [Input("template")]
        public Input<Inputs.TemplateArgs>? Template { get; set; }

        public ContainerAppArgs()
        {
        }
        public static new ContainerAppArgs Empty => new ContainerAppArgs();
    }
}
