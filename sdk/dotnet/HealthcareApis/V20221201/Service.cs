// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.HealthcareApis.V20221201
{
    /// <summary>
    /// The description of the service.
    /// 
    /// ## Example Usage
    /// ### Create or Update a service with all parameters
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var service = new AzureNative.HealthcareApis.V20221201.Service("service", new()
    ///     {
    ///         Identity = new AzureNative.HealthcareApis.V20221201.Inputs.ServicesResourceIdentityArgs
    ///         {
    ///             Type = "SystemAssigned",
    ///         },
    ///         Kind = AzureNative.HealthcareApis.V20221201.Kind.Fhir_R4,
    ///         Location = "westus2",
    ///         Properties = new AzureNative.HealthcareApis.V20221201.Inputs.ServicesPropertiesArgs
    ///         {
    ///             AccessPolicies = new[]
    ///             {
    ///                 new AzureNative.HealthcareApis.V20221201.Inputs.ServiceAccessPolicyEntryArgs
    ///                 {
    ///                     ObjectId = "c487e7d1-3210-41a3-8ccc-e9372b78da47",
    ///                 },
    ///                 new AzureNative.HealthcareApis.V20221201.Inputs.ServiceAccessPolicyEntryArgs
    ///                 {
    ///                     ObjectId = "5b307da8-43d4-492b-8b66-b0294ade872f",
    ///                 },
    ///             },
    ///             AuthenticationConfiguration = new AzureNative.HealthcareApis.V20221201.Inputs.ServiceAuthenticationConfigurationInfoArgs
    ///             {
    ///                 Audience = "https://azurehealthcareapis.com",
    ///                 Authority = "https://login.microsoftonline.com/abfde7b2-df0f-47e6-aabf-2462b07508dc",
    ///                 SmartProxyEnabled = true,
    ///             },
    ///             CorsConfiguration = new AzureNative.HealthcareApis.V20221201.Inputs.ServiceCorsConfigurationInfoArgs
    ///             {
    ///                 AllowCredentials = false,
    ///                 Headers = new[]
    ///                 {
    ///                     "*",
    ///                 },
    ///                 MaxAge = 1440,
    ///                 Methods = new[]
    ///                 {
    ///                     "DELETE",
    ///                     "GET",
    ///                     "OPTIONS",
    ///                     "PATCH",
    ///                     "POST",
    ///                     "PUT",
    ///                 },
    ///                 Origins = new[]
    ///                 {
    ///                     "*",
    ///                 },
    ///             },
    ///             CosmosDbConfiguration = new AzureNative.HealthcareApis.V20221201.Inputs.ServiceCosmosDbConfigurationInfoArgs
    ///             {
    ///                 KeyVaultKeyUri = "https://my-vault.vault.azure.net/keys/my-key",
    ///                 OfferThroughput = 1000,
    ///             },
    ///             ExportConfiguration = new AzureNative.HealthcareApis.V20221201.Inputs.ServiceExportConfigurationInfoArgs
    ///             {
    ///                 StorageAccountName = "existingStorageAccount",
    ///             },
    ///             PrivateEndpointConnections = new[] {},
    ///             PublicNetworkAccess = "Disabled",
    ///         },
    ///         ResourceGroupName = "rg1",
    ///         ResourceName = "service1",
    ///         Tags = null,
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Create or Update a service with minimum parameters
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var service = new AzureNative.HealthcareApis.V20221201.Service("service", new()
    ///     {
    ///         Kind = AzureNative.HealthcareApis.V20221201.Kind.Fhir_R4,
    ///         Location = "westus2",
    ///         Properties = new AzureNative.HealthcareApis.V20221201.Inputs.ServicesPropertiesArgs
    ///         {
    ///             AccessPolicies = new[]
    ///             {
    ///                 new AzureNative.HealthcareApis.V20221201.Inputs.ServiceAccessPolicyEntryArgs
    ///                 {
    ///                     ObjectId = "c487e7d1-3210-41a3-8ccc-e9372b78da47",
    ///                 },
    ///             },
    ///         },
    ///         ResourceGroupName = "rg1",
    ///         ResourceName = "service2",
    ///         Tags = null,
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// 
    /// ## Import
    /// 
    /// An existing resource can be imported using its type token, name, and identifier, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure-native:healthcareapis/v20221201:Service service2 /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.HealthcareApis/services/service2 
    /// ```
    /// </summary>
    [AzureNativeResourceType("azure-native:healthcareapis/v20221201:Service")]
    public partial class Service : global::Pulumi.CustomResource
    {
        /// <summary>
        /// An etag associated with the resource, used for optimistic concurrency when editing it.
        /// </summary>
        [Output("etag")]
        public Output<string?> Etag { get; private set; } = null!;

        /// <summary>
        /// Setting indicating whether the service has a managed identity associated with it.
        /// </summary>
        [Output("identity")]
        public Output<Outputs.ServicesResourceResponseIdentity?> Identity { get; private set; } = null!;

        /// <summary>
        /// The kind of the service.
        /// </summary>
        [Output("kind")]
        public Output<string> Kind { get; private set; } = null!;

        /// <summary>
        /// The resource location.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The resource name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The common properties of a service.
        /// </summary>
        [Output("properties")]
        public Output<Outputs.ServicesPropertiesResponse> Properties { get; private set; } = null!;

        /// <summary>
        /// Metadata pertaining to creation and last modification of the resource.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// The resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The resource type.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a Service resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Service(string name, ServiceArgs args, CustomResourceOptions? options = null)
            : base("azure-native:healthcareapis/v20221201:Service", name, args ?? new ServiceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Service(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:healthcareapis/v20221201:Service", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:healthcareapis:Service"},
                    new global::Pulumi.Alias { Type = "azure-native:healthcareapis/v20180820preview:Service"},
                    new global::Pulumi.Alias { Type = "azure-native:healthcareapis/v20190916:Service"},
                    new global::Pulumi.Alias { Type = "azure-native:healthcareapis/v20200315:Service"},
                    new global::Pulumi.Alias { Type = "azure-native:healthcareapis/v20200330:Service"},
                    new global::Pulumi.Alias { Type = "azure-native:healthcareapis/v20210111:Service"},
                    new global::Pulumi.Alias { Type = "azure-native:healthcareapis/v20210601preview:Service"},
                    new global::Pulumi.Alias { Type = "azure-native:healthcareapis/v20211101:Service"},
                    new global::Pulumi.Alias { Type = "azure-native:healthcareapis/v20220131preview:Service"},
                    new global::Pulumi.Alias { Type = "azure-native:healthcareapis/v20220515:Service"},
                    new global::Pulumi.Alias { Type = "azure-native:healthcareapis/v20220601:Service"},
                    new global::Pulumi.Alias { Type = "azure-native:healthcareapis/v20221001preview:Service"},
                    new global::Pulumi.Alias { Type = "azure-native:healthcareapis/v20230228:Service"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Service resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Service Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Service(name, id, options);
        }
    }

    public sealed class ServiceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Setting indicating whether the service has a managed identity associated with it.
        /// </summary>
        [Input("identity")]
        public Input<Inputs.ServicesResourceIdentityArgs>? Identity { get; set; }

        /// <summary>
        /// The kind of the service.
        /// </summary>
        [Input("kind", required: true)]
        public Input<Pulumi.AzureNative.HealthcareApis.V20221201.Kind> Kind { get; set; } = null!;

        /// <summary>
        /// The resource location.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The common properties of a service.
        /// </summary>
        [Input("properties")]
        public Input<Inputs.ServicesPropertiesArgs>? Properties { get; set; }

        /// <summary>
        /// The name of the resource group that contains the service instance.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the service instance.
        /// </summary>
        [Input("resourceName")]
        public Input<string>? ResourceName { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// The resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public ServiceArgs()
        {
        }
        public static new ServiceArgs Empty => new ServiceArgs();
    }
}
