// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.DocumentDB.V20210301Preview
{
    /// <summary>
    /// Representation of a managed Cassandra cluster.
    /// 
    /// ## Example Usage
    /// ### CosmosDBManagedCassandraClusterCreate
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var cassandraCluster = new AzureNative.DocumentDB.V20210301Preview.CassandraCluster("cassandraCluster", new()
    ///     {
    ///         ClusterName = "cassandra-prod",
    ///         Location = "West US",
    ///         Properties = new AzureNative.DocumentDB.V20210301Preview.Inputs.ClusterResourcePropertiesArgs
    ///         {
    ///             AuthenticationMethod = "Cassandra",
    ///             CassandraVersion = "3.11",
    ///             ClientCertificates = new[]
    ///             {
    ///                 new AzureNative.DocumentDB.V20210301Preview.Inputs.CertificateArgs
    ///                 {
    ///                     Pem = @"-----BEGIN CERTIFICATE-----
    /// ...Base64 encoded certificate...
    /// -----END CERTIFICATE-----",
    ///                 },
    ///             },
    ///             ClusterNameOverride = "ClusterNameIllegalForAzureResource",
    ///             DelegatedManagementSubnetId = "/subscriptions/536e130b-d7d6-4ac7-98a5-de20d69588d2/resourceGroups/customer-vnet-rg/providers/Microsoft.Network/virtualNetworks/customer-vnet/subnets/management",
    ///             ExternalGossipCertificates = new[]
    ///             {
    ///                 new AzureNative.DocumentDB.V20210301Preview.Inputs.CertificateArgs
    ///                 {
    ///                     Pem = @"-----BEGIN CERTIFICATE-----
    /// ...Base64 encoded certificate...
    /// -----END CERTIFICATE-----",
    ///                 },
    ///             },
    ///             ExternalSeedNodes = new[]
    ///             {
    ///                 new AzureNative.DocumentDB.V20210301Preview.Inputs.SeedNodeArgs
    ///                 {
    ///                     IpAddress = "10.52.221.2",
    ///                 },
    ///                 new AzureNative.DocumentDB.V20210301Preview.Inputs.SeedNodeArgs
    ///                 {
    ///                     IpAddress = "10.52.221.3",
    ///                 },
    ///                 new AzureNative.DocumentDB.V20210301Preview.Inputs.SeedNodeArgs
    ///                 {
    ///                     IpAddress = "10.52.221.4",
    ///                 },
    ///             },
    ///             HoursBetweenBackups = 24,
    ///             InitialCassandraAdminPassword = "mypassword",
    ///         },
    ///         ResourceGroupName = "cassandra-prod-rg",
    ///         Tags = null,
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// 
    /// ## Import
    /// 
    /// An existing resource can be imported using its type token, name, and identifier, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure-native:documentdb/v20210301preview:CassandraCluster cassandra-prod /subscriptions/subid/resourceGroups/cassandra-prod-rg/providers/Microsoft.DocumentDB/cassandraClusters/cassandra-prod 
    /// ```
    /// </summary>
    [AzureNativeResourceType("azure-native:documentdb/v20210301preview:CassandraCluster")]
    public partial class CassandraCluster : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Identity for the resource.
        /// </summary>
        [Output("identity")]
        public Output<Outputs.ManagedServiceIdentityResponse?> Identity { get; private set; } = null!;

        /// <summary>
        /// The location of the resource group to which the resource belongs.
        /// </summary>
        [Output("location")]
        public Output<string?> Location { get; private set; } = null!;

        /// <summary>
        /// The name of the ARM resource.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Properties of a managed Cassandra cluster.
        /// </summary>
        [Output("properties")]
        public Output<Outputs.ClusterResourceResponseProperties> Properties { get; private set; } = null!;

        /// <summary>
        /// Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with "defaultExperience": "Cassandra". Current "defaultExperience" values also include "Table", "Graph", "DocumentDB", and "MongoDB".
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The type of Azure resource.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a CassandraCluster resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CassandraCluster(string name, CassandraClusterArgs args, CustomResourceOptions? options = null)
            : base("azure-native:documentdb/v20210301preview:CassandraCluster", name, args ?? new CassandraClusterArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CassandraCluster(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:documentdb/v20210301preview:CassandraCluster", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:documentdb:CassandraCluster"},
                    new global::Pulumi.Alias { Type = "azure-native:documentdb/v20210401preview:CassandraCluster"},
                    new global::Pulumi.Alias { Type = "azure-native:documentdb/v20210701preview:CassandraCluster"},
                    new global::Pulumi.Alias { Type = "azure-native:documentdb/v20211015:CassandraCluster"},
                    new global::Pulumi.Alias { Type = "azure-native:documentdb/v20211015preview:CassandraCluster"},
                    new global::Pulumi.Alias { Type = "azure-native:documentdb/v20211115preview:CassandraCluster"},
                    new global::Pulumi.Alias { Type = "azure-native:documentdb/v20220215preview:CassandraCluster"},
                    new global::Pulumi.Alias { Type = "azure-native:documentdb/v20220515:CassandraCluster"},
                    new global::Pulumi.Alias { Type = "azure-native:documentdb/v20220515preview:CassandraCluster"},
                    new global::Pulumi.Alias { Type = "azure-native:documentdb/v20220815:CassandraCluster"},
                    new global::Pulumi.Alias { Type = "azure-native:documentdb/v20220815preview:CassandraCluster"},
                    new global::Pulumi.Alias { Type = "azure-native:documentdb/v20221115:CassandraCluster"},
                    new global::Pulumi.Alias { Type = "azure-native:documentdb/v20221115preview:CassandraCluster"},
                    new global::Pulumi.Alias { Type = "azure-native:documentdb/v20230301preview:CassandraCluster"},
                    new global::Pulumi.Alias { Type = "azure-native:documentdb/v20230315:CassandraCluster"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CassandraCluster resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CassandraCluster Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new CassandraCluster(name, id, options);
        }
    }

    public sealed class CassandraClusterArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Managed Cassandra cluster name.
        /// </summary>
        [Input("clusterName")]
        public Input<string>? ClusterName { get; set; }

        /// <summary>
        /// Identity for the resource.
        /// </summary>
        [Input("identity")]
        public Input<Inputs.ManagedServiceIdentityArgs>? Identity { get; set; }

        /// <summary>
        /// The location of the resource group to which the resource belongs.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Properties of a managed Cassandra cluster.
        /// </summary>
        [Input("properties")]
        public Input<Inputs.ClusterResourcePropertiesArgs>? Properties { get; set; }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with "defaultExperience": "Cassandra". Current "defaultExperience" values also include "Table", "Graph", "DocumentDB", and "MongoDB".
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public CassandraClusterArgs()
        {
        }
        public static new CassandraClusterArgs Empty => new CassandraClusterArgs();
    }
}
