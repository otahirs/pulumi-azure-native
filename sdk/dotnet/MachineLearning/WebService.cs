// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.MachineLearning
{
    /// <summary>
    /// Instance of an Azure ML web service resource.
    /// API Version: 2017-01-01.
    /// Previous API Version: 2017-01-01. See https://github.com/pulumi/pulumi-azure-native/discussions/TODO for information on migrating from v1 to v2 of the provider.
    /// 
    /// ## Example Usage
    /// ### PUT WebService
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var webService = new AzureNative.MachineLearning.WebService("webService", new()
    ///     {
    ///         Location = "West US",
    ///         Properties = new AzureNative.MachineLearning.Inputs.WebServicePropertiesForGraphArgs
    ///         {
    ///             Assets = 
    ///             {
    ///                 { "asset1", new AzureNative.MachineLearning.Inputs.AssetItemArgs
    ///                 {
    ///                     LocationInfo = new AzureNative.MachineLearning.Inputs.BlobLocationArgs
    ///                     {
    ///                         Credentials = "",
    ///                         Uri = "aml://module/moduleId-1",
    ///                     },
    ///                     Name = "Execute R Script",
    ///                     Type = "Module",
    ///                 } },
    ///                 { "asset2", new AzureNative.MachineLearning.Inputs.AssetItemArgs
    ///                 {
    ///                     LocationInfo = new AzureNative.MachineLearning.Inputs.BlobLocationArgs
    ///                     {
    ///                         Credentials = "",
    ///                         Uri = "aml://module/moduleId-2",
    ///                     },
    ///                     Name = "Import Data",
    ///                     Type = "Module",
    ///                 } },
    ///             },
    ///             CommitmentPlan = new AzureNative.MachineLearning.Inputs.CommitmentPlanArgs
    ///             {
    ///                 Id = "/subscriptions/subscriptionId/resourceGroups/resourceGroupName/providers/Microsoft.MachineLearning/commitmentPlans/commitmentPlanName",
    ///             },
    ///             Description = "Web Service Description",
    ///             Diagnostics = new AzureNative.MachineLearning.Inputs.DiagnosticsConfigurationArgs
    ///             {
    ///                 Level = "None",
    ///             },
    ///             ExampleRequest = new AzureNative.MachineLearning.Inputs.ExampleRequestArgs
    ///             {
    ///                 Inputs = 
    ///                 {
    ///                     { "input1", new[]
    ///                     {
    ///                         new[]
    ///                         {
    ///                             "age",
    ///                         },
    ///                         new[]
    ///                         {
    ///                             "workclass",
    ///                         },
    ///                         new[]
    ///                         {
    ///                             "fnlwgt",
    ///                         },
    ///                         new[]
    ///                         {
    ///                             "education",
    ///                         },
    ///                         new[]
    ///                         {
    ///                             "education-num",
    ///                         },
    ///                     } },
    ///                 },
    ///             },
    ///             ExposeSampleData = true,
    ///             Input = new AzureNative.MachineLearning.Inputs.ServiceInputOutputSpecificationArgs
    ///             {
    ///                 Description = "",
    ///                 Properties = 
    ///                 {
    ///                     { "input1", new AzureNative.MachineLearning.Inputs.TableSpecificationArgs
    ///                     {
    ///                         Description = "",
    ///                         Properties = 
    ///                         {
    ///                             { "column_name", new AzureNative.MachineLearning.Inputs.ColumnSpecificationArgs
    ///                             {
    ///                                 Type = "String",
    ///                                 XMsIsnullable = false,
    ///                             } },
    ///                         },
    ///                         Title = "",
    ///                         Type = "object",
    ///                     } },
    ///                 },
    ///                 Title = "",
    ///                 Type = "object",
    ///             },
    ///             MachineLearningWorkspace = new AzureNative.MachineLearning.Inputs.MachineLearningWorkspaceArgs
    ///             {
    ///                 Id = "workspaceId",
    ///             },
    ///             Output = new AzureNative.MachineLearning.Inputs.ServiceInputOutputSpecificationArgs
    ///             {
    ///                 Description = "",
    ///                 Properties = 
    ///                 {
    ///                     { "output1", new AzureNative.MachineLearning.Inputs.TableSpecificationArgs
    ///                     {
    ///                         Description = "",
    ///                         Properties = 
    ///                         {
    ///                             { "age", new AzureNative.MachineLearning.Inputs.ColumnSpecificationArgs
    ///                             {
    ///                                 Format = "Int32",
    ///                                 Type = "Integer",
    ///                                 XMsIsnullable = true,
    ///                             } },
    ///                             { "workclass", new AzureNative.MachineLearning.Inputs.ColumnSpecificationArgs
    ///                             {
    ///                                 Type = "String",
    ///                                 XMsIsnullable = false,
    ///                             } },
    ///                         },
    ///                         Title = "",
    ///                         Type = "object",
    ///                     } },
    ///                 },
    ///                 Title = "",
    ///                 Type = "object",
    ///             },
    ///             Package = new AzureNative.MachineLearning.Inputs.GraphPackageArgs
    ///             {
    ///                 Edges = new[]
    ///                 {
    ///                     new AzureNative.MachineLearning.Inputs.GraphEdgeArgs
    ///                     {
    ///                         SourceNodeId = "node2",
    ///                         SourcePortId = "Results dataset",
    ///                         TargetNodeId = "node1",
    ///                         TargetPortId = "Dataset2",
    ///                     },
    ///                     new AzureNative.MachineLearning.Inputs.GraphEdgeArgs
    ///                     {
    ///                         SourceNodeId = "node3",
    ///                         TargetNodeId = "node1",
    ///                         TargetPortId = "Dataset1",
    ///                     },
    ///                     new AzureNative.MachineLearning.Inputs.GraphEdgeArgs
    ///                     {
    ///                         SourceNodeId = "node1",
    ///                         SourcePortId = "Result Dataset",
    ///                         TargetNodeId = "node4",
    ///                     },
    ///                 },
    ///                 GraphParameters = null,
    ///                 Nodes = 
    ///                 {
    ///                     { "node1", new AzureNative.MachineLearning.Inputs.GraphNodeArgs
    ///                     {
    ///                         AssetId = "asset1",
    ///                         Parameters = 
    ///                         {
    ///                             { "R Script", new AzureNative.MachineLearning.Inputs.WebServiceParameterArgs
    ///                             {
    ///                                 CertificateThumbprint = "",
    ///                                 Value = "The R Script",
    ///                             } },
    ///                             { "R Version", new AzureNative.MachineLearning.Inputs.WebServiceParameterArgs
    ///                             {
    ///                                 CertificateThumbprint = "",
    ///                                 Value = "CRAN R 3.1.0",
    ///                             } },
    ///                         },
    ///                     } },
    ///                     { "node2", new AzureNative.MachineLearning.Inputs.GraphNodeArgs
    ///                     {
    ///                         AssetId = "asset2",
    ///                         Parameters = 
    ///                         {
    ///                             { "Account Key", new AzureNative.MachineLearning.Inputs.WebServiceParameterArgs
    ///                             {
    ///                                 CertificateThumbprint = "TheThumbprint",
    ///                                 Value = "Encrypted Key",
    ///                             } },
    ///                             { "Account Name", new AzureNative.MachineLearning.Inputs.WebServiceParameterArgs
    ///                             {
    ///                                 CertificateThumbprint = "",
    ///                                 Value = "accountName",
    ///                             } },
    ///                             { "Please Specify Authentication Type", new AzureNative.MachineLearning.Inputs.WebServiceParameterArgs
    ///                             {
    ///                                 CertificateThumbprint = "",
    ///                                 Value = "Account",
    ///                             } },
    ///                             { "Please Specify Data Source", new AzureNative.MachineLearning.Inputs.WebServiceParameterArgs
    ///                             {
    ///                                 CertificateThumbprint = "",
    ///                                 Value = "AzureBlobStorage",
    ///                             } },
    ///                         },
    ///                     } },
    ///                     { "node3", new AzureNative.MachineLearning.Inputs.GraphNodeArgs
    ///                     {
    ///                         InputId = "input1",
    ///                     } },
    ///                     { "node4", new AzureNative.MachineLearning.Inputs.GraphNodeArgs
    ///                     {
    ///                         OutputId = "output1",
    ///                     } },
    ///                 },
    ///             },
    ///             PackageType = "Graph",
    ///             Parameters = null,
    ///             PayloadsInBlobStorage = false,
    ///             ReadOnly = false,
    ///             RealtimeConfiguration = new AzureNative.MachineLearning.Inputs.RealtimeConfigurationArgs
    ///             {
    ///                 MaxConcurrentCalls = 4,
    ///             },
    ///             StorageAccount = new AzureNative.MachineLearning.Inputs.StorageAccountArgs
    ///             {
    ///                 Key = "Storage_Key",
    ///                 Name = "Storage_Name",
    ///             },
    ///             Title = "Web Service Title",
    ///         },
    ///         ResourceGroupName = "OneResourceGroupName",
    ///         Tags = 
    ///         {
    ///             { "tag1", "value1" },
    ///             { "tag2", "value2" },
    ///         },
    ///         WebServiceName = "TargetWebServiceName",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// 
    /// ## Import
    /// 
    /// An existing resource can be imported using its type token, name, and identifier, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure-native:machinelearning:WebService myresource1 TheWebServiceId 
    /// ```
    /// </summary>
    [AzureNativeResourceType("azure-native:machinelearning:WebService")]
    public partial class WebService : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Specifies the location of the resource.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Specifies the name of the resource.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Contains the property payload that describes the web service.
        /// </summary>
        [Output("properties")]
        public Output<Outputs.WebServicePropertiesForGraphResponse> Properties { get; private set; } = null!;

        /// <summary>
        /// Contains resource tags defined as key/value pairs.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Specifies the type of the resource.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a WebService resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public WebService(string name, WebServiceArgs args, CustomResourceOptions? options = null)
            : base("azure-native:machinelearning:WebService", name, args ?? new WebServiceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private WebService(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:machinelearning:WebService", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:machinelearning/v20160501preview:WebService"},
                    new global::Pulumi.Alias { Type = "azure-native:machinelearning/v20170101:WebService"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing WebService resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static WebService Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new WebService(name, id, options);
        }
    }

    public sealed class WebServiceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the location of the resource.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Contains the property payload that describes the web service.
        /// </summary>
        [Input("properties", required: true)]
        public Input<Inputs.WebServicePropertiesForGraphArgs> Properties { get; set; } = null!;

        /// <summary>
        /// Name of the resource group in which the web service is located.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Contains resource tags defined as key/value pairs.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The name of the web service.
        /// </summary>
        [Input("webServiceName")]
        public Input<string>? WebServiceName { get; set; }

        public WebServiceArgs()
        {
        }
        public static new WebServiceArgs Empty => new WebServiceArgs();
    }
}
