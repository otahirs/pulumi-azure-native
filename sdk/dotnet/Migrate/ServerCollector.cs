// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Migrate
{
    /// <summary>
    /// API Version: 2019-10-01.
    /// Previous API Version: 2019-10-01. See https://github.com/pulumi/pulumi-azure-native/discussions/TODO for information on migrating from v1 to v2 of the provider.
    /// 
    /// ## Example Usage
    /// ### ServerCollectors_Create
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var serverCollector = new AzureNative.Migrate.ServerCollector("serverCollector", new()
    ///     {
    ///         ETag = "\"00000606-0000-0d00-0000-605999bf0000\"",
    ///         ProjectName = "app11141project",
    ///         Properties = new AzureNative.Migrate.Inputs.CollectorPropertiesArgs
    ///         {
    ///             AgentProperties = new AzureNative.Migrate.Inputs.CollectorAgentPropertiesArgs
    ///             {
    ///                 SpnDetails = new AzureNative.Migrate.Inputs.CollectorBodyAgentSpnPropertiesArgs
    ///                 {
    ///                     ApplicationId = "ad9f701a-cc08-4421-b51f-b5762d58e9ba",
    ///                     Audience = "https://72f988bf-86f1-41af-91ab-2d7cd011db47/app23df4authandaccessaadapp",
    ///                     Authority = "https://login.windows.net/72f988bf-86f1-41af-91ab-2d7cd011db47",
    ///                     ObjectId = "b4975e42-9248-4a36-b99f-37eca377ea00",
    ///                     TenantId = "72f988bf-86f1-41af-91ab-2d7cd011db47",
    ///                 },
    ///             },
    ///             DiscoverySiteId = "/subscriptions/4bd2aa0f-2bd2-4d67-91a8-5a4533d58600/resourceGroups/pajindTest/providers/Microsoft.OffAzure/ServerSites/app21141site",
    ///         },
    ///         ResourceGroupName = "pajindtest",
    ///         ServerCollectorName = "app23df4collector",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// 
    /// ## Import
    /// 
    /// An existing resource can be imported using its type token, name, and identifier, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure-native:migrate:ServerCollector app23df4collector /subscriptions/4bd2aa0f-2bd2-4d67-91a8-5a4533d58600/resourceGroups/pajindtest/providers/Microsoft.Migrate/assessmentprojects/app11141project/servercollectors/app23df4collector 
    /// ```
    /// </summary>
    [AzureNativeResourceType("azure-native:migrate:ServerCollector")]
    public partial class ServerCollector : global::Pulumi.CustomResource
    {
        [Output("eTag")]
        public Output<string?> ETag { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("properties")]
        public Output<Outputs.CollectorPropertiesResponse> Properties { get; private set; } = null!;

        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a ServerCollector resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ServerCollector(string name, ServerCollectorArgs args, CustomResourceOptions? options = null)
            : base("azure-native:migrate:ServerCollector", name, args ?? new ServerCollectorArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ServerCollector(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:migrate:ServerCollector", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:migrate/v20191001:ServerCollector"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ServerCollector resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ServerCollector Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new ServerCollector(name, id, options);
        }
    }

    public sealed class ServerCollectorArgs : global::Pulumi.ResourceArgs
    {
        [Input("eTag")]
        public Input<string>? ETag { get; set; }

        /// <summary>
        /// Name of the Azure Migrate project.
        /// </summary>
        [Input("projectName", required: true)]
        public Input<string> ProjectName { get; set; } = null!;

        [Input("properties")]
        public Input<Inputs.CollectorPropertiesArgs>? Properties { get; set; }

        /// <summary>
        /// Name of the Azure Resource Group that project is part of.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Unique name of a Server collector within a project.
        /// </summary>
        [Input("serverCollectorName")]
        public Input<string>? ServerCollectorName { get; set; }

        public ServerCollectorArgs()
        {
        }
        public static new ServerCollectorArgs Empty => new ServerCollectorArgs();
    }
}
