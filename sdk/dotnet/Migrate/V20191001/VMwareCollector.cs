// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Migrate.V20191001
{
    /// <summary>
    /// ## Example Usage
    /// ### VMwareCollectors_Create
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var vMwareCollector = new AzureNative.Migrate.V20191001.VMwareCollector("vMwareCollector", new()
    ///     {
    ///         ETag = "\"01003d32-0000-0d00-0000-5d74d2e50000\"",
    ///         ProjectName = "abgoyalWEselfhostb72bproject",
    ///         Properties = new AzureNative.Migrate.V20191001.Inputs.CollectorPropertiesArgs
    ///         {
    ///             AgentProperties = new AzureNative.Migrate.V20191001.Inputs.CollectorAgentPropertiesArgs
    ///             {
    ///                 SpnDetails = new AzureNative.Migrate.V20191001.Inputs.CollectorBodyAgentSpnPropertiesArgs
    ///                 {
    ///                     ApplicationId = "fc717575-8173-4b21-92a5-658b655e613e",
    ///                     Audience = "https://72f988bf-86f1-41af-91ab-2d7cd011db47/PortalvCenterbc2fagentauthaadapp",
    ///                     Authority = "https://login.windows.net/72f988bf-86f1-41af-91ab-2d7cd011db47",
    ///                     ObjectId = "29d94f38-db94-4980-aec0-0cfd55ab1cd0",
    ///                     TenantId = "72f988bf-86f1-41af-91ab-2d7cd011db47",
    ///                 },
    ///             },
    ///             DiscoverySiteId = "/subscriptions/6393a73f-8d55-47ef-b6dd-179b3e0c7910/resourceGroups/abgoyal-westEurope/providers/Microsoft.OffAzure/VMwareSites/PortalvCenterbc2fsite",
    ///         },
    ///         ResourceGroupName = "abgoyal-westEurope",
    ///         VmWareCollectorName = "PortalvCenterbc2fcollector",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// 
    /// ## Import
    /// 
    /// An existing resource can be imported using its type token, name, and identifier, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure-native:migrate/v20191001:VMwareCollector PortalvCenterbc2fcollector /subscriptions/6393a73f-8d55-47ef-b6dd-179b3e0c7910/resourceGroups/abgoyal-westeurope/providers/Microsoft.Migrate/assessmentprojects/abgoyalWEselfhostb72bproject/vmwarecollectors/PortalvCenterbc2fcollector 
    /// ```
    /// </summary>
    [AzureNativeResourceType("azure-native:migrate/v20191001:VMwareCollector")]
    public partial class VMwareCollector : global::Pulumi.CustomResource
    {
        [Output("eTag")]
        public Output<string?> ETag { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("properties")]
        public Output<Outputs.CollectorPropertiesResponse> Properties { get; private set; } = null!;

        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a VMwareCollector resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VMwareCollector(string name, VMwareCollectorArgs args, CustomResourceOptions? options = null)
            : base("azure-native:migrate/v20191001:VMwareCollector", name, args ?? new VMwareCollectorArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VMwareCollector(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:migrate/v20191001:VMwareCollector", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:migrate:VMwareCollector"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VMwareCollector resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VMwareCollector Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new VMwareCollector(name, id, options);
        }
    }

    public sealed class VMwareCollectorArgs : global::Pulumi.ResourceArgs
    {
        [Input("eTag")]
        public Input<string>? ETag { get; set; }

        /// <summary>
        /// Name of the Azure Migrate project.
        /// </summary>
        [Input("projectName", required: true)]
        public Input<string> ProjectName { get; set; } = null!;

        [Input("properties")]
        public Input<Inputs.CollectorPropertiesArgs>? Properties { get; set; }

        /// <summary>
        /// Name of the Azure Resource Group that project is part of.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Unique name of a VMware collector within a project.
        /// </summary>
        [Input("vmWareCollectorName")]
        public Input<string>? VmWareCollectorName { get; set; }

        public VMwareCollectorArgs()
        {
        }
        public static new VMwareCollectorArgs Empty => new VMwareCollectorArgs();
    }
}
