// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ApiManagement
{
    /// <summary>
    /// API Schema Contract details.
    /// API Version: 2022-08-01.
    /// Previous API Version: 2020-12-01. See https://github.com/pulumi/pulumi-azure-native/discussions/TODO for information on migrating from v1 to v2 of the provider.
    /// 
    /// ## Example Usage
    /// ### ApiManagementCreateApiSchema
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var apiSchema = new AzureNative.ApiManagement.ApiSchema("apiSchema", new()
    ///     {
    ///         ApiId = "59d6bb8f1f7fab13dc67ec9b",
    ///         ContentType = "application/vnd.ms-azure-apim.xsd+xml",
    ///         ResourceGroupName = "rg1",
    ///         SchemaId = "ec12520d-9d48-4e7b-8f39-698ca2ac63f1",
    ///         ServiceName = "apimService1",
    ///         Value = @"&lt;s:schema elementFormDefault=""qualified"" targetNamespace=""http://ws.cdyne.com/WeatherWS/"" xmlns:tns=""http://ws.cdyne.com/WeatherWS/"" xmlns:s=""http://www.w3.org/2001/XMLSchema"" xmlns:soap12=""http://schemas.xmlsoap.org/wsdl/soap12/"" xmlns:mime=""http://schemas.xmlsoap.org/wsdl/mime/"" xmlns:soap=""http://schemas.xmlsoap.org/wsdl/soap/"" xmlns:tm=""http://microsoft.com/wsdl/mime/textMatching/"" xmlns:http=""http://schemas.xmlsoap.org/wsdl/http/"" xmlns:soapenc=""http://schemas.xmlsoap.org/soap/encoding/"" xmlns:wsdl=""http://schemas.xmlsoap.org/wsdl/"" xmlns:apim-wsdltns=""http://ws.cdyne.com/WeatherWS/""&gt;
    ///   &lt;s:element name=""GetWeatherInformation""&gt;
    ///     &lt;s:complexType /&gt;
    ///   &lt;/s:element&gt;
    ///   &lt;s:element name=""GetWeatherInformationResponse""&gt;
    ///     &lt;s:complexType&gt;
    ///       &lt;s:sequence&gt;
    ///         &lt;s:element minOccurs=""0"" maxOccurs=""1"" name=""GetWeatherInformationResult"" type=""tns:ArrayOfWeatherDescription"" /&gt;
    ///       &lt;/s:sequence&gt;
    ///     &lt;/s:complexType&gt;
    ///   &lt;/s:element&gt;
    ///   &lt;s:complexType name=""ArrayOfWeatherDescription""&gt;
    ///     &lt;s:sequence&gt;
    ///       &lt;s:element minOccurs=""0"" maxOccurs=""unbounded"" name=""WeatherDescription"" type=""tns:WeatherDescription"" /&gt;
    ///     &lt;/s:sequence&gt;
    ///   &lt;/s:complexType&gt;
    ///   &lt;s:complexType name=""WeatherDescription""&gt;
    ///     &lt;s:sequence&gt;
    ///       &lt;s:element minOccurs=""1"" maxOccurs=""1"" name=""WeatherID"" type=""s:short"" /&gt;
    ///       &lt;s:element minOccurs=""0"" maxOccurs=""1"" name=""Description"" type=""s:string"" /&gt;
    ///       &lt;s:element minOccurs=""0"" maxOccurs=""1"" name=""PictureURL"" type=""s:string"" /&gt;
    ///     &lt;/s:sequence&gt;
    ///   &lt;/s:complexType&gt;
    ///   &lt;s:element name=""GetCityForecastByZIP""&gt;
    ///     &lt;s:complexType&gt;
    ///       &lt;s:sequence&gt;
    ///         &lt;s:element minOccurs=""0"" maxOccurs=""1"" name=""ZIP"" type=""s:string"" /&gt;
    ///       &lt;/s:sequence&gt;
    ///     &lt;/s:complexType&gt;
    ///   &lt;/s:element&gt;
    ///   &lt;s:element name=""GetCityForecastByZIPResponse""&gt;
    ///     &lt;s:complexType&gt;
    ///       &lt;s:sequence&gt;
    ///         &lt;s:element minOccurs=""0"" maxOccurs=""1"" name=""GetCityForecastByZIPResult"" type=""tns:ForecastReturn"" /&gt;
    ///       &lt;/s:sequence&gt;
    ///     &lt;/s:complexType&gt;
    ///   &lt;/s:element&gt;
    ///   &lt;s:complexType name=""ForecastReturn""&gt;
    ///     &lt;s:sequence&gt;
    ///       &lt;s:element minOccurs=""1"" maxOccurs=""1"" name=""Success"" type=""s:boolean"" /&gt;
    ///       &lt;s:element minOccurs=""0"" maxOccurs=""1"" name=""ResponseText"" type=""s:string"" /&gt;
    ///       &lt;s:element minOccurs=""0"" maxOccurs=""1"" name=""State"" type=""s:string"" /&gt;
    ///       &lt;s:element minOccurs=""0"" maxOccurs=""1"" name=""City"" type=""s:string"" /&gt;
    ///       &lt;s:element minOccurs=""0"" maxOccurs=""1"" name=""WeatherStationCity"" type=""s:string"" /&gt;
    ///       &lt;s:element minOccurs=""0"" maxOccurs=""1"" name=""ForecastResult"" type=""tns:ArrayOfForecast"" /&gt;
    ///     &lt;/s:sequence&gt;
    ///   &lt;/s:complexType&gt;
    ///   &lt;s:complexType name=""ArrayOfForecast""&gt;
    ///     &lt;s:sequence&gt;
    ///       &lt;s:element minOccurs=""0"" maxOccurs=""unbounded"" name=""Forecast"" nillable=""true"" type=""tns:Forecast"" /&gt;
    ///     &lt;/s:sequence&gt;
    ///   &lt;/s:complexType&gt;
    ///   &lt;s:complexType name=""Forecast""&gt;
    ///     &lt;s:sequence&gt;
    ///       &lt;s:element minOccurs=""1"" maxOccurs=""1"" name=""Date"" type=""s:dateTime"" /&gt;
    ///       &lt;s:element minOccurs=""1"" maxOccurs=""1"" name=""WeatherID"" type=""s:short"" /&gt;
    ///       &lt;s:element minOccurs=""0"" maxOccurs=""1"" name=""Desciption"" type=""s:string"" /&gt;
    ///       &lt;s:element minOccurs=""1"" maxOccurs=""1"" name=""Temperatures"" type=""tns:temp"" /&gt;
    ///       &lt;s:element minOccurs=""1"" maxOccurs=""1"" name=""ProbabilityOfPrecipiation"" type=""tns:POP"" /&gt;
    ///     &lt;/s:sequence&gt;
    ///   &lt;/s:complexType&gt;
    ///   &lt;s:complexType name=""temp""&gt;
    ///     &lt;s:sequence&gt;
    ///       &lt;s:element minOccurs=""0"" maxOccurs=""1"" name=""MorningLow"" type=""s:string"" /&gt;
    ///       &lt;s:element minOccurs=""0"" maxOccurs=""1"" name=""DaytimeHigh"" type=""s:string"" /&gt;
    ///     &lt;/s:sequence&gt;
    ///   &lt;/s:complexType&gt;
    ///   &lt;s:complexType name=""POP""&gt;
    ///     &lt;s:sequence&gt;
    ///       &lt;s:element minOccurs=""0"" maxOccurs=""1"" name=""Nighttime"" type=""s:string"" /&gt;
    ///       &lt;s:element minOccurs=""0"" maxOccurs=""1"" name=""Daytime"" type=""s:string"" /&gt;
    ///     &lt;/s:sequence&gt;
    ///   &lt;/s:complexType&gt;
    ///   &lt;s:element name=""GetCityWeatherByZIP""&gt;
    ///     &lt;s:complexType&gt;
    ///       &lt;s:sequence&gt;
    ///         &lt;s:element minOccurs=""0"" maxOccurs=""1"" name=""ZIP"" type=""s:string"" /&gt;
    ///       &lt;/s:sequence&gt;
    ///     &lt;/s:complexType&gt;
    ///   &lt;/s:element&gt;
    ///   &lt;s:element name=""GetCityWeatherByZIPResponse""&gt;
    ///     &lt;s:complexType&gt;
    ///       &lt;s:sequence&gt;
    ///         &lt;s:element minOccurs=""1"" maxOccurs=""1"" name=""GetCityWeatherByZIPResult"" type=""tns:WeatherReturn"" /&gt;
    ///       &lt;/s:sequence&gt;
    ///     &lt;/s:complexType&gt;
    ///   &lt;/s:element&gt;
    ///   &lt;s:complexType name=""WeatherReturn""&gt;
    ///     &lt;s:sequence&gt;
    ///       &lt;s:element minOccurs=""1"" maxOccurs=""1"" name=""Success"" type=""s:boolean"" /&gt;
    ///       &lt;s:element minOccurs=""0"" maxOccurs=""1"" name=""ResponseText"" type=""s:string"" /&gt;
    ///       &lt;s:element minOccurs=""0"" maxOccurs=""1"" name=""State"" type=""s:string"" /&gt;
    ///       &lt;s:element minOccurs=""0"" maxOccurs=""1"" name=""City"" type=""s:string"" /&gt;
    ///       &lt;s:element minOccurs=""0"" maxOccurs=""1"" name=""WeatherStationCity"" type=""s:string"" /&gt;
    ///       &lt;s:element minOccurs=""1"" maxOccurs=""1"" name=""WeatherID"" type=""s:short"" /&gt;
    ///       &lt;s:element minOccurs=""0"" maxOccurs=""1"" name=""Description"" type=""s:string"" /&gt;
    ///       &lt;s:element minOccurs=""0"" maxOccurs=""1"" name=""Temperature"" type=""s:string"" /&gt;
    ///       &lt;s:element minOccurs=""0"" maxOccurs=""1"" name=""RelativeHumidity"" type=""s:string"" /&gt;
    ///       &lt;s:element minOccurs=""0"" maxOccurs=""1"" name=""Wind"" type=""s:string"" /&gt;
    ///       &lt;s:element minOccurs=""0"" maxOccurs=""1"" name=""Pressure"" type=""s:string"" /&gt;
    ///       &lt;s:element minOccurs=""0"" maxOccurs=""1"" name=""Visibility"" type=""s:string"" /&gt;
    ///       &lt;s:element minOccurs=""0"" maxOccurs=""1"" name=""WindChill"" type=""s:string"" /&gt;
    ///       &lt;s:element minOccurs=""0"" maxOccurs=""1"" name=""Remarks"" type=""s:string"" /&gt;
    ///     &lt;/s:sequence&gt;
    ///   &lt;/s:complexType&gt;
    ///   &lt;s:element name=""ArrayOfWeatherDescription"" nillable=""true"" type=""tns:ArrayOfWeatherDescription"" /&gt;
    ///   &lt;s:element name=""ForecastReturn"" nillable=""true"" type=""tns:ForecastReturn"" /&gt;
    ///   &lt;s:element name=""WeatherReturn"" type=""tns:WeatherReturn"" /&gt;
    /// &lt;/s:schema&gt;",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// 
    /// ## Import
    /// 
    /// An existing resource can be imported using its type token, name, and identifier, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure-native:apimanagement:ApiSchema ec12520d-9d48-4e7b-8f39-698ca2ac63f1 /subscriptions/subid/resourcegroups/rg1/providers/Microsoft.ApiManagement/service/apimService1/apis/59d6bb8f1f7fab13dc67ec9b/schemas/ec12520d-9d48-4e7b-8f39-698ca2ac63f1 
    /// ```
    /// </summary>
    [AzureNativeResourceType("azure-native:apimanagement:ApiSchema")]
    public partial class ApiSchema : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Types definitions. Used for Swagger/OpenAPI v2/v3 schemas only, null otherwise.
        /// </summary>
        [Output("components")]
        public Output<object?> Components { get; private set; } = null!;

        /// <summary>
        /// Must be a valid a media type used in a Content-Type header as defined in the RFC 2616. Media type of the schema document (e.g. application/json, application/xml). &lt;/br&gt; - `Swagger` Schema use `application/vnd.ms-azure-apim.swagger.definitions+json` &lt;/br&gt; - `WSDL` Schema use `application/vnd.ms-azure-apim.xsd+xml` &lt;/br&gt; - `OpenApi` Schema use `application/vnd.oai.openapi.components+json` &lt;/br&gt; - `WADL Schema` use `application/vnd.ms-azure-apim.wadl.grammars+xml`.
        /// </summary>
        [Output("contentType")]
        public Output<string> ContentType { get; private set; } = null!;

        /// <summary>
        /// Types definitions. Used for Swagger/OpenAPI v1 schemas only, null otherwise.
        /// </summary>
        [Output("definitions")]
        public Output<object?> Definitions { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// Json escaped string defining the document representing the Schema. Used for schemas other than Swagger/OpenAPI.
        /// </summary>
        [Output("value")]
        public Output<string?> Value { get; private set; } = null!;


        /// <summary>
        /// Create a ApiSchema resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ApiSchema(string name, ApiSchemaArgs args, CustomResourceOptions? options = null)
            : base("azure-native:apimanagement:ApiSchema", name, args ?? new ApiSchemaArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ApiSchema(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:apimanagement:ApiSchema", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:apimanagement/v20170301:ApiSchema"},
                    new global::Pulumi.Alias { Type = "azure-native:apimanagement/v20180101:ApiSchema"},
                    new global::Pulumi.Alias { Type = "azure-native:apimanagement/v20180601preview:ApiSchema"},
                    new global::Pulumi.Alias { Type = "azure-native:apimanagement/v20190101:ApiSchema"},
                    new global::Pulumi.Alias { Type = "azure-native:apimanagement/v20191201:ApiSchema"},
                    new global::Pulumi.Alias { Type = "azure-native:apimanagement/v20191201preview:ApiSchema"},
                    new global::Pulumi.Alias { Type = "azure-native:apimanagement/v20200601preview:ApiSchema"},
                    new global::Pulumi.Alias { Type = "azure-native:apimanagement/v20201201:ApiSchema"},
                    new global::Pulumi.Alias { Type = "azure-native:apimanagement/v20210101preview:ApiSchema"},
                    new global::Pulumi.Alias { Type = "azure-native:apimanagement/v20210401preview:ApiSchema"},
                    new global::Pulumi.Alias { Type = "azure-native:apimanagement/v20210801:ApiSchema"},
                    new global::Pulumi.Alias { Type = "azure-native:apimanagement/v20211201preview:ApiSchema"},
                    new global::Pulumi.Alias { Type = "azure-native:apimanagement/v20220401preview:ApiSchema"},
                    new global::Pulumi.Alias { Type = "azure-native:apimanagement/v20220801:ApiSchema"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ApiSchema resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ApiSchema Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new ApiSchema(name, id, options);
        }
    }

    public sealed class ApiSchemaArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.
        /// </summary>
        [Input("apiId", required: true)]
        public Input<string> ApiId { get; set; } = null!;

        /// <summary>
        /// Types definitions. Used for Swagger/OpenAPI v2/v3 schemas only, null otherwise.
        /// </summary>
        [Input("components")]
        public Input<object>? Components { get; set; }

        /// <summary>
        /// Must be a valid a media type used in a Content-Type header as defined in the RFC 2616. Media type of the schema document (e.g. application/json, application/xml). &lt;/br&gt; - `Swagger` Schema use `application/vnd.ms-azure-apim.swagger.definitions+json` &lt;/br&gt; - `WSDL` Schema use `application/vnd.ms-azure-apim.xsd+xml` &lt;/br&gt; - `OpenApi` Schema use `application/vnd.oai.openapi.components+json` &lt;/br&gt; - `WADL Schema` use `application/vnd.ms-azure-apim.wadl.grammars+xml`.
        /// </summary>
        [Input("contentType", required: true)]
        public Input<string> ContentType { get; set; } = null!;

        /// <summary>
        /// Types definitions. Used for Swagger/OpenAPI v1 schemas only, null otherwise.
        /// </summary>
        [Input("definitions")]
        public Input<object>? Definitions { get; set; }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Schema id identifier. Must be unique in the current API Management service instance.
        /// </summary>
        [Input("schemaId")]
        public Input<string>? SchemaId { get; set; }

        /// <summary>
        /// The name of the API Management service.
        /// </summary>
        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        /// <summary>
        /// Json escaped string defining the document representing the Schema. Used for schemas other than Swagger/OpenAPI.
        /// </summary>
        [Input("value")]
        public Input<string>? Value { get; set; }

        public ApiSchemaArgs()
        {
        }
        public static new ApiSchemaArgs Empty => new ApiSchemaArgs();
    }
}
