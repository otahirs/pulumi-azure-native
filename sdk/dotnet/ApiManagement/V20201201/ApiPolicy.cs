// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ApiManagement.V20201201
{
    /// <summary>
    /// Policy Contract details.
    /// 
    /// ## Example Usage
    /// ### ApiManagementCreateApiPolicy
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var apiPolicy = new AzureNative.ApiManagement.V20201201.ApiPolicy("apiPolicy", new()
    ///     {
    ///         ApiId = "5600b57e7e8880006a040001",
    ///         Format = "xml",
    ///         PolicyId = "policy",
    ///         ResourceGroupName = "rg1",
    ///         ServiceName = "apimService1",
    ///         Value = "&lt;policies&gt; &lt;inbound /&gt; &lt;backend&gt;    &lt;forward-request /&gt;  &lt;/backend&gt;  &lt;outbound /&gt;&lt;/policies&gt;",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### ApiManagementCreateApiPolicyNonXmlEncoded
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var apiPolicy = new AzureNative.ApiManagement.V20201201.ApiPolicy("apiPolicy", new()
    ///     {
    ///         ApiId = "5600b57e7e8880006a040001",
    ///         Format = "rawxml",
    ///         PolicyId = "policy",
    ///         ResourceGroupName = "rg1",
    ///         ServiceName = "apimService1",
    ///         Value = @"&lt;policies&gt;
    ///      &lt;inbound&gt;
    ///      &lt;base /&gt;
    ///   &lt;set-header name=""newvalue"" exists-action=""override""&gt;
    ///    &lt;value&gt;""@(context.Request.Headers.FirstOrDefault(h =&gt; h.Ke==""Via""))"" &lt;/value&gt;
    ///     &lt;/set-header&gt;
    ///   &lt;/inbound&gt;
    ///       &lt;/policies&gt;",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// 
    /// ## Import
    /// 
    /// An existing resource can be imported using its type token, name, and identifier, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure-native:apimanagement/v20201201:ApiPolicy policy /subscriptions/4c1a3bc6-89f9-46fe-a175-5d8984b25095/resourcegroups/Api-DF-West-US/providers/Microsoft.ApiManagement/service/samirmsiservice2/apis/echo-api/operations/create-resource/policies/policy 
    /// ```
    /// </summary>
    [AzureNativeResourceType("azure-native:apimanagement/v20201201:ApiPolicy")]
    public partial class ApiPolicy : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Format of the policyContent.
        /// </summary>
        [Output("format")]
        public Output<string?> Format { get; private set; } = null!;

        /// <summary>
        /// Resource name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Resource type for API Management resource.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// Contents of the Policy as defined by the format.
        /// </summary>
        [Output("value")]
        public Output<string> Value { get; private set; } = null!;


        /// <summary>
        /// Create a ApiPolicy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ApiPolicy(string name, ApiPolicyArgs args, CustomResourceOptions? options = null)
            : base("azure-native:apimanagement/v20201201:ApiPolicy", name, args ?? new ApiPolicyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ApiPolicy(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:apimanagement/v20201201:ApiPolicy", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:apimanagement:ApiPolicy"},
                    new global::Pulumi.Alias { Type = "azure-native:apimanagement/v20170301:ApiPolicy"},
                    new global::Pulumi.Alias { Type = "azure-native:apimanagement/v20180101:ApiPolicy"},
                    new global::Pulumi.Alias { Type = "azure-native:apimanagement/v20180601preview:ApiPolicy"},
                    new global::Pulumi.Alias { Type = "azure-native:apimanagement/v20190101:ApiPolicy"},
                    new global::Pulumi.Alias { Type = "azure-native:apimanagement/v20191201:ApiPolicy"},
                    new global::Pulumi.Alias { Type = "azure-native:apimanagement/v20191201preview:ApiPolicy"},
                    new global::Pulumi.Alias { Type = "azure-native:apimanagement/v20200601preview:ApiPolicy"},
                    new global::Pulumi.Alias { Type = "azure-native:apimanagement/v20210101preview:ApiPolicy"},
                    new global::Pulumi.Alias { Type = "azure-native:apimanagement/v20210401preview:ApiPolicy"},
                    new global::Pulumi.Alias { Type = "azure-native:apimanagement/v20210801:ApiPolicy"},
                    new global::Pulumi.Alias { Type = "azure-native:apimanagement/v20211201preview:ApiPolicy"},
                    new global::Pulumi.Alias { Type = "azure-native:apimanagement/v20220401preview:ApiPolicy"},
                    new global::Pulumi.Alias { Type = "azure-native:apimanagement/v20220801:ApiPolicy"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ApiPolicy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ApiPolicy Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new ApiPolicy(name, id, options);
        }
    }

    public sealed class ApiPolicyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.
        /// </summary>
        [Input("apiId", required: true)]
        public Input<string> ApiId { get; set; } = null!;

        /// <summary>
        /// Format of the policyContent.
        /// </summary>
        [Input("format")]
        public InputUnion<string, Pulumi.AzureNative.ApiManagement.V20201201.PolicyContentFormat>? Format { get; set; }

        /// <summary>
        /// The identifier of the Policy.
        /// </summary>
        [Input("policyId")]
        public Input<string>? PolicyId { get; set; }

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the API Management service.
        /// </summary>
        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        /// <summary>
        /// Contents of the Policy as defined by the format.
        /// </summary>
        [Input("value", required: true)]
        public Input<string> Value { get; set; } = null!;

        public ApiPolicyArgs()
        {
            Format = "xml";
        }
        public static new ApiPolicyArgs Empty => new ApiPolicyArgs();
    }
}
