// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AzureArcData.V20220615Preview
{
    /// <summary>
    /// Data controller resource
    /// 
    /// ## Example Usage
    /// ### Create or update a Data Controller.
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var dataController = new AzureNative.AzureArcData.V20220615Preview.DataController("dataController", new()
    ///     {
    ///         DataControllerName = "testdataController",
    ///         ExtendedLocation = new AzureNative.AzureArcData.V20220615Preview.Inputs.ExtendedLocationArgs
    ///         {
    ///             Name = "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.ExtendedLocation/customLocations/arclocation",
    ///             Type = "CustomLocation",
    ///         },
    ///         Location = "northeurope",
    ///         Properties = new AzureNative.AzureArcData.V20220615Preview.Inputs.DataControllerPropertiesArgs
    ///         {
    ///             BasicLoginInformation = new AzureNative.AzureArcData.V20220615Preview.Inputs.BasicLoginInformationArgs
    ///             {
    ///                 Password = "********",
    ///                 Username = "username",
    ///             },
    ///             ClusterId = "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.Kubernetes/connectedClusters/connectedk8s",
    ///             ExtensionId = "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.Kubernetes/connectedClusters/connectedk8s/providers/Microsoft.KubernetesConfiguration/extensions/extension",
    ///             Infrastructure = AzureNative.AzureArcData.V20220615Preview.Infrastructure.Onpremises,
    ///             LogAnalyticsWorkspaceConfig = new AzureNative.AzureArcData.V20220615Preview.Inputs.LogAnalyticsWorkspaceConfigArgs
    ///             {
    ///                 PrimaryKey = "********",
    ///                 WorkspaceId = "00000000-1111-2222-3333-444444444444",
    ///             },
    ///             LogsDashboardCredential = new AzureNative.AzureArcData.V20220615Preview.Inputs.BasicLoginInformationArgs
    ///             {
    ///                 Password = "********",
    ///                 Username = "username",
    ///             },
    ///             MetricsDashboardCredential = new AzureNative.AzureArcData.V20220615Preview.Inputs.BasicLoginInformationArgs
    ///             {
    ///                 Password = "********",
    ///                 Username = "username",
    ///             },
    ///             OnPremiseProperty = new AzureNative.AzureArcData.V20220615Preview.Inputs.OnPremisePropertyArgs
    ///             {
    ///                 Id = "12345678-1234-1234-ab12-1a2b3c4d5e6f",
    ///                 PublicSigningKey = "publicOnPremSigningKey",
    ///             },
    ///             UploadServicePrincipal = new AzureNative.AzureArcData.V20220615Preview.Inputs.UploadServicePrincipalArgs
    ///             {
    ///                 Authority = "https://login.microsoftonline.com/",
    ///                 ClientId = "00000000-1111-2222-3333-444444444444",
    ///                 ClientSecret = "********",
    ///                 TenantId = "00000000-1111-2222-3333-444444444444",
    ///             },
    ///             UploadWatermark = new AzureNative.AzureArcData.V20220615Preview.Inputs.UploadWatermarkArgs
    ///             {
    ///                 Logs = "2020-01-01T17:18:19.1234567Z",
    ///                 Metrics = "2020-01-01T17:18:19.1234567Z",
    ///                 Usages = "2020-01-01T17:18:19.1234567Z",
    ///             },
    ///         },
    ///         ResourceGroupName = "testrg",
    ///         Tags = 
    ///         {
    ///             { "mytag", "myval" },
    ///         },
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// 
    /// ## Import
    /// 
    /// An existing resource can be imported using its type token, name, and identifier, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure-native:azurearcdata/v20220615preview:DataController testdataController /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.AzureArcData/dataControllers/testdataController 
    /// ```
    /// </summary>
    [AzureNativeResourceType("azure-native:azurearcdata/v20220615preview:DataController")]
    public partial class DataController : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The extendedLocation of the resource.
        /// </summary>
        [Output("extendedLocation")]
        public Output<Outputs.ExtendedLocationResponse?> ExtendedLocation { get; private set; } = null!;

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The data controller's properties
        /// </summary>
        [Output("properties")]
        public Output<Outputs.DataControllerPropertiesResponse> Properties { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a DataController resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DataController(string name, DataControllerArgs args, CustomResourceOptions? options = null)
            : base("azure-native:azurearcdata/v20220615preview:DataController", name, args ?? new DataControllerArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DataController(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:azurearcdata/v20220615preview:DataController", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:azurearcdata:DataController"},
                    new global::Pulumi.Alias { Type = "azure-native:azurearcdata/v20210601preview:DataController"},
                    new global::Pulumi.Alias { Type = "azure-native:azurearcdata/v20210701preview:DataController"},
                    new global::Pulumi.Alias { Type = "azure-native:azurearcdata/v20210801:DataController"},
                    new global::Pulumi.Alias { Type = "azure-native:azurearcdata/v20211101:DataController"},
                    new global::Pulumi.Alias { Type = "azure-native:azurearcdata/v20220301preview:DataController"},
                    new global::Pulumi.Alias { Type = "azure-native:azurearcdata/v20230115preview:DataController"},
                    new global::Pulumi.Alias { Type = "azure-native:azurearcdata/v20230315preview:DataController"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DataController resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DataController Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new DataController(name, id, options);
        }
    }

    public sealed class DataControllerArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the data controller
        /// </summary>
        [Input("dataControllerName")]
        public Input<string>? DataControllerName { get; set; }

        /// <summary>
        /// The extendedLocation of the resource.
        /// </summary>
        [Input("extendedLocation")]
        public Input<Inputs.ExtendedLocationArgs>? ExtendedLocation { get; set; }

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The data controller's properties
        /// </summary>
        [Input("properties", required: true)]
        public Input<Inputs.DataControllerPropertiesArgs> Properties { get; set; } = null!;

        /// <summary>
        /// The name of the Azure resource group
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public DataControllerArgs()
        {
        }
        public static new DataControllerArgs Empty => new DataControllerArgs();
    }
}
