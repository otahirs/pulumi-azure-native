// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AzureArcData.V20220615Preview
{
    /// <summary>
    /// A Postgres Instance.
    /// 
    /// ## Example Usage
    /// ### Create or update a Postgres Instance.
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var postgresInstance = new AzureNative.AzureArcData.V20220615Preview.PostgresInstance("postgresInstance", new()
    ///     {
    ///         ExtendedLocation = new AzureNative.AzureArcData.V20220615Preview.Inputs.ExtendedLocationArgs
    ///         {
    ///             Name = "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.ExtendedLocation/customLocations/arclocation",
    ///             Type = "CustomLocation",
    ///         },
    ///         Location = "eastus",
    ///         PostgresInstanceName = "testpostgresInstance",
    ///         Properties = new AzureNative.AzureArcData.V20220615Preview.Inputs.PostgresInstancePropertiesArgs
    ///         {
    ///             Admin = "admin",
    ///             BasicLoginInformation = new AzureNative.AzureArcData.V20220615Preview.Inputs.BasicLoginInformationArgs
    ///             {
    ///                 Password = "********",
    ///                 Username = "username",
    ///             },
    ///             DataControllerId = "dataControllerId",
    ///             K8sRaw = 
    ///             {
    ///                 { "apiVersion", "apiVersion" },
    ///                 { "kind", "postgresql-12" },
    ///                 { "metadata", 
    ///                 {
    ///                     { "creationTimestamp", "2020-08-25T14:55:10Z" },
    ///                     { "generation", 1 },
    ///                     { "name", "pg1" },
    ///                     { "namespace", "test" },
    ///                     { "resourceVersion", "527780" },
    ///                     { "selfLink", "/apis/arcdata.microsoft.com/v1alpha1/namespaces/test/postgresql-12s/pg1" },
    ///                     { "uid", "1111aaaa-ffff-ffff-ffff-99999aaaaaaa" },
    ///                 } },
    ///                 { "spec", 
    ///                 {
    ///                     { "backups", 
    ///                     {
    ///                         { "deltaMinutes", 3 },
    ///                         { "fullMinutes", 10 },
    ///                         { "tiers", new[]
    ///                         {
    ///                             
    ///                             {
    ///                                 { "retention", 
    ///                                 {
    ///                                     { "maximums", new[]
    ///                                     {
    ///                                         "6",
    ///                                         "512MB",
    ///                                     } },
    ///                                     { "minimums", new[]
    ///                                     {
    ///                                         "3",
    ///                                     } },
    ///                                 } },
    ///                                 { "storage", 
    ///                                 {
    ///                                     { "volumeSize", "1Gi" },
    ///                                 } },
    ///                             },
    ///                         } },
    ///                     } },
    ///                     { "engine", 
    ///                     {
    ///                         { "extensions", new[]
    ///                         {
    ///                             
    ///                             {
    ///                                 { "name", "citus" },
    ///                             },
    ///                         } },
    ///                     } },
    ///                     { "scale", 
    ///                     {
    ///                         { "shards", 3 },
    ///                     } },
    ///                     { "scheduling", 
    ///                     {
    ///                         { "default", 
    ///                         {
    ///                             { "resources", 
    ///                             {
    ///                                 { "requests", 
    ///                                 {
    ///                                     { "memory", "256Mi" },
    ///                                 } },
    ///                             } },
    ///                         } },
    ///                     } },
    ///                     { "service", 
    ///                     {
    ///                         { "type", "NodePort" },
    ///                     } },
    ///                     { "storage", 
    ///                     {
    ///                         { "data", 
    ///                         {
    ///                             { "className", "local-storage" },
    ///                             { "size", "5Gi" },
    ///                         } },
    ///                         { "logs", 
    ///                         {
    ///                             { "className", "local-storage" },
    ///                             { "size", "5Gi" },
    ///                         } },
    ///                     } },
    ///                 } },
    ///                 { "status", 
    ///                 {
    ///                     { "externalEndpoint", null },
    ///                     { "readyPods", "4/4" },
    ///                     { "state", "Ready" },
    ///                 } },
    ///             },
    ///         },
    ///         ResourceGroupName = "testrg",
    ///         Sku = new AzureNative.AzureArcData.V20220615Preview.Inputs.PostgresInstanceSkuArgs
    ///         {
    ///             Dev = true,
    ///             Name = "default",
    ///             Tier = AzureNative.AzureArcData.V20220615Preview.PostgresInstanceSkuTier.Hyperscale,
    ///         },
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// 
    /// ## Import
    /// 
    /// An existing resource can be imported using its type token, name, and identifier, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure-native:azurearcdata/v20220615preview:PostgresInstance testpostgresInstance /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.AzureArcData/PostgresInstance/testpostgresInstance 
    /// ```
    /// </summary>
    [AzureNativeResourceType("azure-native:azurearcdata/v20220615preview:PostgresInstance")]
    public partial class PostgresInstance : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The extendedLocation of the resource.
        /// </summary>
        [Output("extendedLocation")]
        public Output<Outputs.ExtendedLocationResponse?> ExtendedLocation { get; private set; } = null!;

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// null
        /// </summary>
        [Output("properties")]
        public Output<Outputs.PostgresInstancePropertiesResponse> Properties { get; private set; } = null!;

        /// <summary>
        /// Resource sku.
        /// </summary>
        [Output("sku")]
        public Output<Outputs.PostgresInstanceSkuResponse?> Sku { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a PostgresInstance resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PostgresInstance(string name, PostgresInstanceArgs args, CustomResourceOptions? options = null)
            : base("azure-native:azurearcdata/v20220615preview:PostgresInstance", name, args ?? new PostgresInstanceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PostgresInstance(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:azurearcdata/v20220615preview:PostgresInstance", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:azurearcdata:PostgresInstance"},
                    new global::Pulumi.Alias { Type = "azure-native:azurearcdata/v20210601preview:PostgresInstance"},
                    new global::Pulumi.Alias { Type = "azure-native:azurearcdata/v20210701preview:PostgresInstance"},
                    new global::Pulumi.Alias { Type = "azure-native:azurearcdata/v20220301preview:PostgresInstance"},
                    new global::Pulumi.Alias { Type = "azure-native:azurearcdata/v20230115preview:PostgresInstance"},
                    new global::Pulumi.Alias { Type = "azure-native:azurearcdata/v20230315preview:PostgresInstance"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PostgresInstance resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PostgresInstance Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new PostgresInstance(name, id, options);
        }
    }

    public sealed class PostgresInstanceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The extendedLocation of the resource.
        /// </summary>
        [Input("extendedLocation")]
        public Input<Inputs.ExtendedLocationArgs>? ExtendedLocation { get; set; }

        /// <summary>
        /// The geo-location where the resource lives
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Name of Postgres Instance
        /// </summary>
        [Input("postgresInstanceName")]
        public Input<string>? PostgresInstanceName { get; set; }

        /// <summary>
        /// null
        /// </summary>
        [Input("properties", required: true)]
        public Input<Inputs.PostgresInstancePropertiesArgs> Properties { get; set; } = null!;

        /// <summary>
        /// The name of the Azure resource group
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Resource sku.
        /// </summary>
        [Input("sku")]
        public Input<Inputs.PostgresInstanceSkuArgs>? Sku { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public PostgresInstanceArgs()
        {
        }
        public static new PostgresInstanceArgs Empty => new PostgresInstanceArgs();
    }
}
