// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AzureArcData
{
    /// <summary>
    /// Active directory connector resource
    /// API Version: 2023-03-15-preview.
    /// Previous API Version: 2022-03-01-preview. See https://github.com/pulumi/pulumi-azure-native/discussions/TODO for information on migrating from v1 to v2 of the provider.
    /// 
    /// ## Example Usage
    /// ### Create or update an Active Directory connector instance.
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var activeDirectoryConnector = new AzureNative.AzureArcData.ActiveDirectoryConnector("activeDirectoryConnector", new()
    ///     {
    ///         ActiveDirectoryConnectorName = "testADConnector",
    ///         DataControllerName = "testdataController",
    ///         Properties = new AzureNative.AzureArcData.Inputs.ActiveDirectoryConnectorPropertiesArgs
    ///         {
    ///             Spec = new AzureNative.AzureArcData.Inputs.ActiveDirectoryConnectorSpecArgs
    ///             {
    ///                 ActiveDirectory = new AzureNative.AzureArcData.Inputs.ActiveDirectoryConnectorDomainDetailsArgs
    ///                 {
    ///                     DomainControllers = new AzureNative.AzureArcData.Inputs.ActiveDirectoryDomainControllersArgs
    ///                     {
    ///                         PrimaryDomainController = new AzureNative.AzureArcData.Inputs.ActiveDirectoryDomainControllerArgs
    ///                         {
    ///                             Hostname = "dc1.contoso.local",
    ///                         },
    ///                         SecondaryDomainControllers = new[]
    ///                         {
    ///                             new AzureNative.AzureArcData.Inputs.ActiveDirectoryDomainControllerArgs
    ///                             {
    ///                                 Hostname = "dc2.contoso.local",
    ///                             },
    ///                             new AzureNative.AzureArcData.Inputs.ActiveDirectoryDomainControllerArgs
    ///                             {
    ///                                 Hostname = "dc3.contoso.local",
    ///                             },
    ///                         },
    ///                     },
    ///                     Realm = "CONTOSO.LOCAL",
    ///                     ServiceAccountProvisioning = "manual",
    ///                 },
    ///                 Dns = new AzureNative.AzureArcData.Inputs.ActiveDirectoryConnectorDNSDetailsArgs
    ///                 {
    ///                     NameserverIPAddresses = new[]
    ///                     {
    ///                         "11.11.111.111",
    ///                         "22.22.222.222",
    ///                     },
    ///                     PreferK8sDnsForPtrLookups = false,
    ///                     Replicas = 1,
    ///                 },
    ///             },
    ///         },
    ///         ResourceGroupName = "testrg",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// 
    /// ## Import
    /// 
    /// An existing resource can be imported using its type token, name, and identifier, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure-native:azurearcdata:ActiveDirectoryConnector testADConnector /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.AzureArcData/dataControllers/testdataController/activeDirectoryConnectors/testADConnector 
    /// ```
    /// </summary>
    [AzureNativeResourceType("azure-native:azurearcdata:ActiveDirectoryConnector")]
    public partial class ActiveDirectoryConnector : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// null
        /// </summary>
        [Output("properties")]
        public Output<Outputs.ActiveDirectoryConnectorPropertiesResponse> Properties { get; private set; } = null!;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a ActiveDirectoryConnector resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ActiveDirectoryConnector(string name, ActiveDirectoryConnectorArgs args, CustomResourceOptions? options = null)
            : base("azure-native:azurearcdata:ActiveDirectoryConnector", name, args ?? new ActiveDirectoryConnectorArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ActiveDirectoryConnector(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:azurearcdata:ActiveDirectoryConnector", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:azurearcdata/v20220301preview:ActiveDirectoryConnector"},
                    new global::Pulumi.Alias { Type = "azure-native:azurearcdata/v20220615preview:ActiveDirectoryConnector"},
                    new global::Pulumi.Alias { Type = "azure-native:azurearcdata/v20230115preview:ActiveDirectoryConnector"},
                    new global::Pulumi.Alias { Type = "azure-native:azurearcdata/v20230315preview:ActiveDirectoryConnector"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ActiveDirectoryConnector resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ActiveDirectoryConnector Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new ActiveDirectoryConnector(name, id, options);
        }
    }

    public sealed class ActiveDirectoryConnectorArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the Active Directory connector instance
        /// </summary>
        [Input("activeDirectoryConnectorName")]
        public Input<string>? ActiveDirectoryConnectorName { get; set; }

        /// <summary>
        /// The name of the data controller
        /// </summary>
        [Input("dataControllerName", required: true)]
        public Input<string> DataControllerName { get; set; } = null!;

        /// <summary>
        /// null
        /// </summary>
        [Input("properties", required: true)]
        public Input<Inputs.ActiveDirectoryConnectorPropertiesArgs> Properties { get; set; } = null!;

        /// <summary>
        /// The name of the Azure resource group
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public ActiveDirectoryConnectorArgs()
        {
        }
        public static new ActiveDirectoryConnectorArgs Empty => new ActiveDirectoryConnectorArgs();
    }
}
