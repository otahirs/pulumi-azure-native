// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Network.V20210601
{
    /// <summary>
    /// A rules engine configuration containing a list of rules that will run to modify the runtime behavior of the request and response.
    /// 
    /// ## Example Usage
    /// ### Create or update a specific Rules Engine Configuration
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var rulesEngine = new AzureNative.Network.V20210601.RulesEngine("rulesEngine", new()
    ///     {
    ///         FrontDoorName = "frontDoor1",
    ///         ResourceGroupName = "rg1",
    ///         Rules = new[]
    ///         {
    ///             new AzureNative.Network.V20210601.Inputs.RulesEngineRuleArgs
    ///             {
    ///                 Action = new AzureNative.Network.V20210601.Inputs.RulesEngineActionArgs
    ///                 {
    ///                     RouteConfigurationOverride = new AzureNative.Network.V20210601.Inputs.RedirectConfigurationArgs
    ///                     {
    ///                         CustomFragment = "fragment",
    ///                         CustomHost = "www.bing.com",
    ///                         CustomPath = "/api",
    ///                         CustomQueryString = "a=b",
    ///                         OdataType = "#Microsoft.Azure.FrontDoor.Models.FrontdoorRedirectConfiguration",
    ///                         RedirectProtocol = "HttpsOnly",
    ///                         RedirectType = "Moved",
    ///                     },
    ///                 },
    ///                 MatchConditions = new[]
    ///                 {
    ///                     new AzureNative.Network.V20210601.Inputs.RulesEngineMatchConditionArgs
    ///                     {
    ///                         RulesEngineMatchValue = new[]
    ///                         {
    ///                             "CH",
    ///                         },
    ///                         RulesEngineMatchVariable = "RemoteAddr",
    ///                         RulesEngineOperator = "GeoMatch",
    ///                     },
    ///                 },
    ///                 MatchProcessingBehavior = "Stop",
    ///                 Name = "Rule1",
    ///                 Priority = 1,
    ///             },
    ///             new AzureNative.Network.V20210601.Inputs.RulesEngineRuleArgs
    ///             {
    ///                 Action = new AzureNative.Network.V20210601.Inputs.RulesEngineActionArgs
    ///                 {
    ///                     ResponseHeaderActions = new[]
    ///                     {
    ///                         new AzureNative.Network.V20210601.Inputs.HeaderActionArgs
    ///                         {
    ///                             HeaderActionType = "Overwrite",
    ///                             HeaderName = "Cache-Control",
    ///                             Value = "public, max-age=31536000",
    ///                         },
    ///                     },
    ///                 },
    ///                 MatchConditions = new[]
    ///                 {
    ///                     new AzureNative.Network.V20210601.Inputs.RulesEngineMatchConditionArgs
    ///                     {
    ///                         RulesEngineMatchValue = new[]
    ///                         {
    ///                             "jpg",
    ///                         },
    ///                         RulesEngineMatchVariable = "RequestFilenameExtension",
    ///                         RulesEngineOperator = "Equal",
    ///                         Transforms = new[]
    ///                         {
    ///                             "Lowercase",
    ///                         },
    ///                     },
    ///                 },
    ///                 Name = "Rule2",
    ///                 Priority = 2,
    ///             },
    ///             new AzureNative.Network.V20210601.Inputs.RulesEngineRuleArgs
    ///             {
    ///                 Action = new AzureNative.Network.V20210601.Inputs.RulesEngineActionArgs
    ///                 {
    ///                     RouteConfigurationOverride = new AzureNative.Network.V20210601.Inputs.ForwardingConfigurationArgs
    ///                     {
    ///                         BackendPool = new AzureNative.Network.V20210601.Inputs.SubResourceArgs
    ///                         {
    ///                             Id = "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/frontDoors/frontDoor1/backendPools/backendPool1",
    ///                         },
    ///                         CacheConfiguration = new AzureNative.Network.V20210601.Inputs.CacheConfigurationArgs
    ///                         {
    ///                             CacheDuration = "P1DT12H20M30S",
    ///                             DynamicCompression = "Disabled",
    ///                             QueryParameterStripDirective = "StripOnly",
    ///                             QueryParameters = "a=b,p=q",
    ///                         },
    ///                         ForwardingProtocol = "HttpsOnly",
    ///                         OdataType = "#Microsoft.Azure.FrontDoor.Models.FrontdoorForwardingConfiguration",
    ///                     },
    ///                 },
    ///                 MatchConditions = new[]
    ///                 {
    ///                     new AzureNative.Network.V20210601.Inputs.RulesEngineMatchConditionArgs
    ///                     {
    ///                         NegateCondition = false,
    ///                         RulesEngineMatchValue = new[]
    ///                         {
    ///                             "allowoverride",
    ///                         },
    ///                         RulesEngineMatchVariable = "RequestHeader",
    ///                         RulesEngineOperator = "Equal",
    ///                         Selector = "Rules-Engine-Route-Forward",
    ///                         Transforms = new[]
    ///                         {
    ///                             "Lowercase",
    ///                         },
    ///                     },
    ///                 },
    ///                 Name = "Rule3",
    ///                 Priority = 3,
    ///             },
    ///         },
    ///         RulesEngineName = "rulesEngine1",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// 
    /// ## Import
    /// 
    /// An existing resource can be imported using its type token, name, and identifier, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure-native:network/v20210601:RulesEngine rulesEngine1 /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/frontDoors/frontDoor1/rulesEngines/rulesEngine1 
    /// ```
    /// </summary>
    [AzureNativeResourceType("azure-native:network/v20210601:RulesEngine")]
    public partial class RulesEngine : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Resource name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Resource status.
        /// </summary>
        [Output("resourceState")]
        public Output<string> ResourceState { get; private set; } = null!;

        /// <summary>
        /// A list of rules that define a particular Rules Engine Configuration.
        /// </summary>
        [Output("rules")]
        public Output<ImmutableArray<Outputs.RulesEngineRuleResponse>> Rules { get; private set; } = null!;

        /// <summary>
        /// Resource type.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a RulesEngine resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RulesEngine(string name, RulesEngineArgs args, CustomResourceOptions? options = null)
            : base("azure-native:network/v20210601:RulesEngine", name, args ?? new RulesEngineArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RulesEngine(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:network/v20210601:RulesEngine", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:network:RulesEngine"},
                    new global::Pulumi.Alias { Type = "azure-native:network/v20200101:RulesEngine"},
                    new global::Pulumi.Alias { Type = "azure-native:network/v20200401:RulesEngine"},
                    new global::Pulumi.Alias { Type = "azure-native:network/v20200501:RulesEngine"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RulesEngine resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RulesEngine Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new RulesEngine(name, id, options);
        }
    }

    public sealed class RulesEngineArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of the Front Door which is globally unique.
        /// </summary>
        [Input("frontDoorName", required: true)]
        public Input<string> FrontDoorName { get; set; } = null!;

        /// <summary>
        /// Name of the Resource group within the Azure subscription.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("rules")]
        private InputList<Inputs.RulesEngineRuleArgs>? _rules;

        /// <summary>
        /// A list of rules that define a particular Rules Engine Configuration.
        /// </summary>
        public InputList<Inputs.RulesEngineRuleArgs> Rules
        {
            get => _rules ?? (_rules = new InputList<Inputs.RulesEngineRuleArgs>());
            set => _rules = value;
        }

        /// <summary>
        /// Name of the Rules Engine which is unique within the Front Door.
        /// </summary>
        [Input("rulesEngineName")]
        public Input<string>? RulesEngineName { get; set; }

        public RulesEngineArgs()
        {
        }
        public static new RulesEngineArgs Empty => new RulesEngineArgs();
    }
}
