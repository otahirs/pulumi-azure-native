// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Network
{
    /// <summary>
    /// FirewallPolicy Resource.
    /// API Version: 2022-09-01.
    /// Previous API Version: 2020-11-01. See https://github.com/pulumi/pulumi-azure-native/discussions/TODO for information on migrating from v1 to v2 of the provider.
    /// 
    /// ## Example Usage
    /// ### Create FirewallPolicy
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var firewallPolicy = new AzureNative.Network.FirewallPolicy("firewallPolicy", new()
    ///     {
    ///         DnsSettings = new AzureNative.Network.Inputs.DnsSettingsArgs
    ///         {
    ///             EnableProxy = true,
    ///             RequireProxyForNetworkRules = false,
    ///             Servers = new[]
    ///             {
    ///                 "30.3.4.5",
    ///             },
    ///         },
    ///         ExplicitProxy = new AzureNative.Network.Inputs.ExplicitProxyArgs
    ///         {
    ///             EnableExplicitProxy = true,
    ///             EnablePacFile = true,
    ///             HttpPort = 8087,
    ///             HttpsPort = 8087,
    ///             PacFile = "https://tinawstorage.file.core.windows.net/?sv=2020-02-10&amp;ss=bfqt&amp;srt=sco&amp;sp=rwdlacuptfx&amp;se=2021-06-04T07:01:12Z&amp;st=2021-06-03T23:01:12Z&amp;sip=68.65.171.11&amp;spr=https&amp;sig=Plsa0RRVpGbY0IETZZOT6znOHcSro71LLTTbzquYPgs%3D",
    ///             PacFilePort = 8087,
    ///         },
    ///         FirewallPolicyName = "firewallPolicy",
    ///         Insights = new AzureNative.Network.Inputs.FirewallPolicyInsightsArgs
    ///         {
    ///             IsEnabled = true,
    ///             LogAnalyticsResources = new AzureNative.Network.Inputs.FirewallPolicyLogAnalyticsResourcesArgs
    ///             {
    ///                 DefaultWorkspaceId = new AzureNative.Network.Inputs.SubResourceArgs
    ///                 {
    ///                     Id = "/subscriptions/subid/resourcegroups/rg1/providers/microsoft.operationalinsights/workspaces/defaultWorkspace",
    ///                 },
    ///                 Workspaces = new[]
    ///                 {
    ///                     new AzureNative.Network.Inputs.FirewallPolicyLogAnalyticsWorkspaceArgs
    ///                     {
    ///                         Region = "westus",
    ///                         WorkspaceId = new AzureNative.Network.Inputs.SubResourceArgs
    ///                         {
    ///                             Id = "/subscriptions/subid/resourcegroups/rg1/providers/microsoft.operationalinsights/workspaces/workspace1",
    ///                         },
    ///                     },
    ///                     new AzureNative.Network.Inputs.FirewallPolicyLogAnalyticsWorkspaceArgs
    ///                     {
    ///                         Region = "eastus",
    ///                         WorkspaceId = new AzureNative.Network.Inputs.SubResourceArgs
    ///                         {
    ///                             Id = "/subscriptions/subid/resourcegroups/rg1/providers/microsoft.operationalinsights/workspaces/workspace2",
    ///                         },
    ///                     },
    ///                 },
    ///             },
    ///             RetentionDays = 100,
    ///         },
    ///         IntrusionDetection = new AzureNative.Network.Inputs.FirewallPolicyIntrusionDetectionArgs
    ///         {
    ///             Configuration = new AzureNative.Network.Inputs.FirewallPolicyIntrusionDetectionConfigurationArgs
    ///             {
    ///                 BypassTrafficSettings = new[]
    ///                 {
    ///                     new AzureNative.Network.Inputs.FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArgs
    ///                     {
    ///                         Description = "Rule 1",
    ///                         DestinationAddresses = new[]
    ///                         {
    ///                             "5.6.7.8",
    ///                         },
    ///                         DestinationPorts = new[]
    ///                         {
    ///                             "*",
    ///                         },
    ///                         Name = "bypassRule1",
    ///                         Protocol = "TCP",
    ///                         SourceAddresses = new[]
    ///                         {
    ///                             "1.2.3.4",
    ///                         },
    ///                     },
    ///                 },
    ///                 SignatureOverrides = new[]
    ///                 {
    ///                     new AzureNative.Network.Inputs.FirewallPolicyIntrusionDetectionSignatureSpecificationArgs
    ///                     {
    ///                         Id = "2525004",
    ///                         Mode = "Deny",
    ///                     },
    ///                 },
    ///             },
    ///             Mode = "Alert",
    ///         },
    ///         Location = "West US",
    ///         ResourceGroupName = "rg1",
    ///         Sku = new AzureNative.Network.Inputs.FirewallPolicySkuArgs
    ///         {
    ///             Tier = "Premium",
    ///         },
    ///         Snat = new AzureNative.Network.Inputs.FirewallPolicySNATArgs
    ///         {
    ///             PrivateRanges = new[]
    ///             {
    ///                 "IANAPrivateRanges",
    ///             },
    ///         },
    ///         Sql = new AzureNative.Network.Inputs.FirewallPolicySQLArgs
    ///         {
    ///             AllowSqlRedirect = true,
    ///         },
    ///         Tags = 
    ///         {
    ///             { "key1", "value1" },
    ///         },
    ///         ThreatIntelMode = "Alert",
    ///         ThreatIntelWhitelist = new AzureNative.Network.Inputs.FirewallPolicyThreatIntelWhitelistArgs
    ///         {
    ///             Fqdns = new[]
    ///             {
    ///                 "*.microsoft.com",
    ///             },
    ///             IpAddresses = new[]
    ///             {
    ///                 "20.3.4.5",
    ///             },
    ///         },
    ///         TransportSecurity = new AzureNative.Network.Inputs.FirewallPolicyTransportSecurityArgs
    ///         {
    ///             CertificateAuthority = new AzureNative.Network.Inputs.FirewallPolicyCertificateAuthorityArgs
    ///             {
    ///                 KeyVaultSecretId = "https://kv/secret",
    ///                 Name = "clientcert",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// 
    /// ## Import
    /// 
    /// An existing resource can be imported using its type token, name, and identifier, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure-native:network:FirewallPolicy firewallPolicy /subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/firewallPolicies/firewallPolicy 
    /// ```
    /// </summary>
    [AzureNativeResourceType("azure-native:network:FirewallPolicy")]
    public partial class FirewallPolicy : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The parent firewall policy from which rules are inherited.
        /// </summary>
        [Output("basePolicy")]
        public Output<Outputs.SubResourceResponse?> BasePolicy { get; private set; } = null!;

        /// <summary>
        /// List of references to Child Firewall Policies.
        /// </summary>
        [Output("childPolicies")]
        public Output<ImmutableArray<Outputs.SubResourceResponse>> ChildPolicies { get; private set; } = null!;

        /// <summary>
        /// DNS Proxy Settings definition.
        /// </summary>
        [Output("dnsSettings")]
        public Output<Outputs.DnsSettingsResponse?> DnsSettings { get; private set; } = null!;

        /// <summary>
        /// A unique read-only string that changes whenever the resource is updated.
        /// </summary>
        [Output("etag")]
        public Output<string> Etag { get; private set; } = null!;

        /// <summary>
        /// Explicit Proxy Settings definition.
        /// </summary>
        [Output("explicitProxy")]
        public Output<Outputs.ExplicitProxyResponse?> ExplicitProxy { get; private set; } = null!;

        /// <summary>
        /// List of references to Azure Firewalls that this Firewall Policy is associated with.
        /// </summary>
        [Output("firewalls")]
        public Output<ImmutableArray<Outputs.SubResourceResponse>> Firewalls { get; private set; } = null!;

        /// <summary>
        /// The identity of the firewall policy.
        /// </summary>
        [Output("identity")]
        public Output<Outputs.ManagedServiceIdentityResponse?> Identity { get; private set; } = null!;

        /// <summary>
        /// Insights on Firewall Policy.
        /// </summary>
        [Output("insights")]
        public Output<Outputs.FirewallPolicyInsightsResponse?> Insights { get; private set; } = null!;

        /// <summary>
        /// The configuration for Intrusion detection.
        /// </summary>
        [Output("intrusionDetection")]
        public Output<Outputs.FirewallPolicyIntrusionDetectionResponse?> IntrusionDetection { get; private set; } = null!;

        /// <summary>
        /// Resource location.
        /// </summary>
        [Output("location")]
        public Output<string?> Location { get; private set; } = null!;

        /// <summary>
        /// Resource name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The provisioning state of the firewall policy resource.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// List of references to FirewallPolicyRuleCollectionGroups.
        /// </summary>
        [Output("ruleCollectionGroups")]
        public Output<ImmutableArray<Outputs.SubResourceResponse>> RuleCollectionGroups { get; private set; } = null!;

        /// <summary>
        /// The Firewall Policy SKU.
        /// </summary>
        [Output("sku")]
        public Output<Outputs.FirewallPolicySkuResponse?> Sku { get; private set; } = null!;

        /// <summary>
        /// The private IP addresses/IP ranges to which traffic will not be SNAT.
        /// </summary>
        [Output("snat")]
        public Output<Outputs.FirewallPolicySNATResponse?> Snat { get; private set; } = null!;

        /// <summary>
        /// SQL Settings definition.
        /// </summary>
        [Output("sql")]
        public Output<Outputs.FirewallPolicySQLResponse?> Sql { get; private set; } = null!;

        /// <summary>
        /// Resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The operation mode for Threat Intelligence.
        /// </summary>
        [Output("threatIntelMode")]
        public Output<string?> ThreatIntelMode { get; private set; } = null!;

        /// <summary>
        /// ThreatIntel Whitelist for Firewall Policy.
        /// </summary>
        [Output("threatIntelWhitelist")]
        public Output<Outputs.FirewallPolicyThreatIntelWhitelistResponse?> ThreatIntelWhitelist { get; private set; } = null!;

        /// <summary>
        /// TLS Configuration definition.
        /// </summary>
        [Output("transportSecurity")]
        public Output<Outputs.FirewallPolicyTransportSecurityResponse?> TransportSecurity { get; private set; } = null!;

        /// <summary>
        /// Resource type.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a FirewallPolicy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public FirewallPolicy(string name, FirewallPolicyArgs args, CustomResourceOptions? options = null)
            : base("azure-native:network:FirewallPolicy", name, args ?? new FirewallPolicyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private FirewallPolicy(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:network:FirewallPolicy", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:network/v20190601:FirewallPolicy"},
                    new global::Pulumi.Alias { Type = "azure-native:network/v20190701:FirewallPolicy"},
                    new global::Pulumi.Alias { Type = "azure-native:network/v20190801:FirewallPolicy"},
                    new global::Pulumi.Alias { Type = "azure-native:network/v20190901:FirewallPolicy"},
                    new global::Pulumi.Alias { Type = "azure-native:network/v20191101:FirewallPolicy"},
                    new global::Pulumi.Alias { Type = "azure-native:network/v20191201:FirewallPolicy"},
                    new global::Pulumi.Alias { Type = "azure-native:network/v20200301:FirewallPolicy"},
                    new global::Pulumi.Alias { Type = "azure-native:network/v20200401:FirewallPolicy"},
                    new global::Pulumi.Alias { Type = "azure-native:network/v20200501:FirewallPolicy"},
                    new global::Pulumi.Alias { Type = "azure-native:network/v20200601:FirewallPolicy"},
                    new global::Pulumi.Alias { Type = "azure-native:network/v20200701:FirewallPolicy"},
                    new global::Pulumi.Alias { Type = "azure-native:network/v20200801:FirewallPolicy"},
                    new global::Pulumi.Alias { Type = "azure-native:network/v20201101:FirewallPolicy"},
                    new global::Pulumi.Alias { Type = "azure-native:network/v20210201:FirewallPolicy"},
                    new global::Pulumi.Alias { Type = "azure-native:network/v20210301:FirewallPolicy"},
                    new global::Pulumi.Alias { Type = "azure-native:network/v20210501:FirewallPolicy"},
                    new global::Pulumi.Alias { Type = "azure-native:network/v20210801:FirewallPolicy"},
                    new global::Pulumi.Alias { Type = "azure-native:network/v20220101:FirewallPolicy"},
                    new global::Pulumi.Alias { Type = "azure-native:network/v20220501:FirewallPolicy"},
                    new global::Pulumi.Alias { Type = "azure-native:network/v20220701:FirewallPolicy"},
                    new global::Pulumi.Alias { Type = "azure-native:network/v20220901:FirewallPolicy"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing FirewallPolicy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static FirewallPolicy Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new FirewallPolicy(name, id, options);
        }
    }

    public sealed class FirewallPolicyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The parent firewall policy from which rules are inherited.
        /// </summary>
        [Input("basePolicy")]
        public Input<Inputs.SubResourceArgs>? BasePolicy { get; set; }

        /// <summary>
        /// DNS Proxy Settings definition.
        /// </summary>
        [Input("dnsSettings")]
        public Input<Inputs.DnsSettingsArgs>? DnsSettings { get; set; }

        /// <summary>
        /// Explicit Proxy Settings definition.
        /// </summary>
        [Input("explicitProxy")]
        public Input<Inputs.ExplicitProxyArgs>? ExplicitProxy { get; set; }

        /// <summary>
        /// The name of the Firewall Policy.
        /// </summary>
        [Input("firewallPolicyName")]
        public Input<string>? FirewallPolicyName { get; set; }

        /// <summary>
        /// Resource ID.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// The identity of the firewall policy.
        /// </summary>
        [Input("identity")]
        public Input<Inputs.ManagedServiceIdentityArgs>? Identity { get; set; }

        /// <summary>
        /// Insights on Firewall Policy.
        /// </summary>
        [Input("insights")]
        public Input<Inputs.FirewallPolicyInsightsArgs>? Insights { get; set; }

        /// <summary>
        /// The configuration for Intrusion detection.
        /// </summary>
        [Input("intrusionDetection")]
        public Input<Inputs.FirewallPolicyIntrusionDetectionArgs>? IntrusionDetection { get; set; }

        /// <summary>
        /// Resource location.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The Firewall Policy SKU.
        /// </summary>
        [Input("sku")]
        public Input<Inputs.FirewallPolicySkuArgs>? Sku { get; set; }

        /// <summary>
        /// The private IP addresses/IP ranges to which traffic will not be SNAT.
        /// </summary>
        [Input("snat")]
        public Input<Inputs.FirewallPolicySNATArgs>? Snat { get; set; }

        /// <summary>
        /// SQL Settings definition.
        /// </summary>
        [Input("sql")]
        public Input<Inputs.FirewallPolicySQLArgs>? Sql { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The operation mode for Threat Intelligence.
        /// </summary>
        [Input("threatIntelMode")]
        public InputUnion<string, Pulumi.AzureNative.Network.AzureFirewallThreatIntelMode>? ThreatIntelMode { get; set; }

        /// <summary>
        /// ThreatIntel Whitelist for Firewall Policy.
        /// </summary>
        [Input("threatIntelWhitelist")]
        public Input<Inputs.FirewallPolicyThreatIntelWhitelistArgs>? ThreatIntelWhitelist { get; set; }

        /// <summary>
        /// TLS Configuration definition.
        /// </summary>
        [Input("transportSecurity")]
        public Input<Inputs.FirewallPolicyTransportSecurityArgs>? TransportSecurity { get; set; }

        public FirewallPolicyArgs()
        {
        }
        public static new FirewallPolicyArgs Empty => new FirewallPolicyArgs();
    }
}
