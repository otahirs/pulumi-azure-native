// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Network
{
    /// <summary>
    /// Rule Collection Group resource.
    /// API Version: 2022-09-01.
    /// Previous API Version: 2020-11-01. See https://github.com/pulumi/pulumi-azure-native/discussions/TODO for information on migrating from v1 to v2 of the provider.
    /// 
    /// ## Example Usage
    /// ### Create FirewallPolicyNatRuleCollectionGroup
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var firewallPolicyRuleCollectionGroup = new AzureNative.Network.FirewallPolicyRuleCollectionGroup("firewallPolicyRuleCollectionGroup", new()
    ///     {
    ///         FirewallPolicyName = "firewallPolicy",
    ///         Priority = 100,
    ///         ResourceGroupName = "rg1",
    ///         RuleCollectionGroupName = "ruleCollectionGroup1",
    ///         RuleCollections = new[]
    ///         {
    ///             new AzureNative.Network.Inputs.FirewallPolicyNatRuleCollectionArgs
    ///             {
    ///                 Action = new AzureNative.Network.Inputs.FirewallPolicyNatRuleCollectionActionArgs
    ///                 {
    ///                     Type = "DNAT",
    ///                 },
    ///                 Name = "Example-Nat-Rule-Collection",
    ///                 Priority = 100,
    ///                 RuleCollectionType = "FirewallPolicyNatRuleCollection",
    ///                 Rules = new[]
    ///                 {
    ///                     new AzureNative.Network.Inputs.NatRuleArgs
    ///                     {
    ///                         DestinationAddresses = new[]
    ///                         {
    ///                             "152.23.32.23",
    ///                         },
    ///                         DestinationPorts = new[]
    ///                         {
    ///                             "8080",
    ///                         },
    ///                         IpProtocols = new[]
    ///                         {
    ///                             "TCP",
    ///                             "UDP",
    ///                         },
    ///                         Name = "nat-rule1",
    ///                         RuleType = "NatRule",
    ///                         SourceAddresses = new[]
    ///                         {
    ///                             "2.2.2.2",
    ///                         },
    ///                         SourceIpGroups = new[] {},
    ///                         TranslatedFqdn = "internalhttp.server.net",
    ///                         TranslatedPort = "8080",
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Create FirewallPolicyRuleCollectionGroup
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var firewallPolicyRuleCollectionGroup = new AzureNative.Network.FirewallPolicyRuleCollectionGroup("firewallPolicyRuleCollectionGroup", new()
    ///     {
    ///         FirewallPolicyName = "firewallPolicy",
    ///         Priority = 100,
    ///         ResourceGroupName = "rg1",
    ///         RuleCollectionGroupName = "ruleCollectionGroup1",
    ///         RuleCollections = new[]
    ///         {
    ///             new AzureNative.Network.Inputs.FirewallPolicyFilterRuleCollectionArgs
    ///             {
    ///                 Action = new AzureNative.Network.Inputs.FirewallPolicyFilterRuleCollectionActionArgs
    ///                 {
    ///                     Type = "Deny",
    ///                 },
    ///                 Name = "Example-Filter-Rule-Collection",
    ///                 Priority = 100,
    ///                 RuleCollectionType = "FirewallPolicyFilterRuleCollection",
    ///                 Rules = new[]
    ///                 {
    ///                     new AzureNative.Network.Inputs.NetworkRuleArgs
    ///                     {
    ///                         DestinationAddresses = new[]
    ///                         {
    ///                             "*",
    ///                         },
    ///                         DestinationPorts = new[]
    ///                         {
    ///                             "*",
    ///                         },
    ///                         IpProtocols = new[]
    ///                         {
    ///                             "TCP",
    ///                         },
    ///                         Name = "network-rule1",
    ///                         RuleType = "NetworkRule",
    ///                         SourceAddresses = new[]
    ///                         {
    ///                             "10.1.25.0/24",
    ///                         },
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Create FirewallPolicyRuleCollectionGroup With IpGroups
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var firewallPolicyRuleCollectionGroup = new AzureNative.Network.FirewallPolicyRuleCollectionGroup("firewallPolicyRuleCollectionGroup", new()
    ///     {
    ///         FirewallPolicyName = "firewallPolicy",
    ///         Priority = 110,
    ///         ResourceGroupName = "rg1",
    ///         RuleCollectionGroupName = "ruleCollectionGroup1",
    ///         RuleCollections = new[]
    ///         {
    ///             new AzureNative.Network.Inputs.FirewallPolicyFilterRuleCollectionArgs
    ///             {
    ///                 Action = new AzureNative.Network.Inputs.FirewallPolicyFilterRuleCollectionActionArgs
    ///                 {
    ///                     Type = "Deny",
    ///                 },
    ///                 Name = "Example-Filter-Rule-Collection",
    ///                 RuleCollectionType = "FirewallPolicyFilterRuleCollection",
    ///                 Rules = new[]
    ///                 {
    ///                     new AzureNative.Network.Inputs.NetworkRuleArgs
    ///                     {
    ///                         DestinationIpGroups = new[]
    ///                         {
    ///                             "/subscriptions/subid/providers/Microsoft.Network/resourceGroup/rg1/ipGroups/ipGroups2",
    ///                         },
    ///                         DestinationPorts = new[]
    ///                         {
    ///                             "*",
    ///                         },
    ///                         IpProtocols = new[]
    ///                         {
    ///                             "TCP",
    ///                         },
    ///                         Name = "network-1",
    ///                         RuleType = "NetworkRule",
    ///                         SourceIpGroups = new[]
    ///                         {
    ///                             "/subscriptions/subid/providers/Microsoft.Network/resourceGroup/rg1/ipGroups/ipGroups1",
    ///                         },
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Create FirewallPolicyRuleCollectionGroup With Web Categories
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var firewallPolicyRuleCollectionGroup = new AzureNative.Network.FirewallPolicyRuleCollectionGroup("firewallPolicyRuleCollectionGroup", new()
    ///     {
    ///         FirewallPolicyName = "firewallPolicy",
    ///         Priority = 110,
    ///         ResourceGroupName = "rg1",
    ///         RuleCollectionGroupName = "ruleCollectionGroup1",
    ///         RuleCollections = new[]
    ///         {
    ///             new AzureNative.Network.Inputs.FirewallPolicyFilterRuleCollectionArgs
    ///             {
    ///                 Action = new AzureNative.Network.Inputs.FirewallPolicyFilterRuleCollectionActionArgs
    ///                 {
    ///                     Type = "Deny",
    ///                 },
    ///                 Name = "Example-Filter-Rule-Collection",
    ///                 RuleCollectionType = "FirewallPolicyFilterRuleCollection",
    ///                 Rules = new[]
    ///                 {
    ///                     new AzureNative.Network.Inputs.ApplicationRuleArgs
    ///                     {
    ///                         Description = "Deny inbound rule",
    ///                         Name = "rule1",
    ///                         Protocols = new[]
    ///                         {
    ///                             new AzureNative.Network.Inputs.FirewallPolicyRuleApplicationProtocolArgs
    ///                             {
    ///                                 Port = 443,
    ///                                 ProtocolType = "Https",
    ///                             },
    ///                         },
    ///                         RuleType = "ApplicationRule",
    ///                         SourceAddresses = new[]
    ///                         {
    ///                             "216.58.216.164",
    ///                             "10.0.0.0/24",
    ///                         },
    ///                         WebCategories = new[]
    ///                         {
    ///                             "Hacking",
    ///                         },
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// 
    /// ## Import
    /// 
    /// An existing resource can be imported using its type token, name, and identifier, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure-native:network:FirewallPolicyRuleCollectionGroup ruleCollectionGroup1 /subscriptions/e747cc13-97d4-4a79-b463-42d7f4e558f2/resourceGroups/rg1/providers/Microsoft.Network/firewallPolicies/firewallPolicy/ruleCollectionGroups/ruleCollectionGroup1 
    /// ```
    /// </summary>
    [AzureNativeResourceType("azure-native:network:FirewallPolicyRuleCollectionGroup")]
    public partial class FirewallPolicyRuleCollectionGroup : global::Pulumi.CustomResource
    {
        /// <summary>
        /// A unique read-only string that changes whenever the resource is updated.
        /// </summary>
        [Output("etag")]
        public Output<string> Etag { get; private set; } = null!;

        /// <summary>
        /// The name of the resource that is unique within a resource group. This name can be used to access the resource.
        /// </summary>
        [Output("name")]
        public Output<string?> Name { get; private set; } = null!;

        /// <summary>
        /// Priority of the Firewall Policy Rule Collection Group resource.
        /// </summary>
        [Output("priority")]
        public Output<int?> Priority { get; private set; } = null!;

        /// <summary>
        /// The provisioning state of the firewall policy rule collection group resource.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Group of Firewall Policy rule collections.
        /// </summary>
        [Output("ruleCollections")]
        public Output<ImmutableArray<Union<Outputs.FirewallPolicyFilterRuleCollectionResponse, Outputs.FirewallPolicyNatRuleCollectionResponse>>> RuleCollections { get; private set; } = null!;

        /// <summary>
        /// Rule Group type.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a FirewallPolicyRuleCollectionGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public FirewallPolicyRuleCollectionGroup(string name, FirewallPolicyRuleCollectionGroupArgs args, CustomResourceOptions? options = null)
            : base("azure-native:network:FirewallPolicyRuleCollectionGroup", name, args ?? new FirewallPolicyRuleCollectionGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private FirewallPolicyRuleCollectionGroup(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:network:FirewallPolicyRuleCollectionGroup", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:network/v20200501:FirewallPolicyRuleCollectionGroup"},
                    new global::Pulumi.Alias { Type = "azure-native:network/v20200601:FirewallPolicyRuleCollectionGroup"},
                    new global::Pulumi.Alias { Type = "azure-native:network/v20200701:FirewallPolicyRuleCollectionGroup"},
                    new global::Pulumi.Alias { Type = "azure-native:network/v20200801:FirewallPolicyRuleCollectionGroup"},
                    new global::Pulumi.Alias { Type = "azure-native:network/v20201101:FirewallPolicyRuleCollectionGroup"},
                    new global::Pulumi.Alias { Type = "azure-native:network/v20210201:FirewallPolicyRuleCollectionGroup"},
                    new global::Pulumi.Alias { Type = "azure-native:network/v20210301:FirewallPolicyRuleCollectionGroup"},
                    new global::Pulumi.Alias { Type = "azure-native:network/v20210501:FirewallPolicyRuleCollectionGroup"},
                    new global::Pulumi.Alias { Type = "azure-native:network/v20210801:FirewallPolicyRuleCollectionGroup"},
                    new global::Pulumi.Alias { Type = "azure-native:network/v20220101:FirewallPolicyRuleCollectionGroup"},
                    new global::Pulumi.Alias { Type = "azure-native:network/v20220501:FirewallPolicyRuleCollectionGroup"},
                    new global::Pulumi.Alias { Type = "azure-native:network/v20220701:FirewallPolicyRuleCollectionGroup"},
                    new global::Pulumi.Alias { Type = "azure-native:network/v20220901:FirewallPolicyRuleCollectionGroup"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing FirewallPolicyRuleCollectionGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static FirewallPolicyRuleCollectionGroup Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new FirewallPolicyRuleCollectionGroup(name, id, options);
        }
    }

    public sealed class FirewallPolicyRuleCollectionGroupArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the Firewall Policy.
        /// </summary>
        [Input("firewallPolicyName", required: true)]
        public Input<string> FirewallPolicyName { get; set; } = null!;

        /// <summary>
        /// Resource ID.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// The name of the resource that is unique within a resource group. This name can be used to access the resource.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Priority of the Firewall Policy Rule Collection Group resource.
        /// </summary>
        [Input("priority")]
        public Input<int>? Priority { get; set; }

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the FirewallPolicyRuleCollectionGroup.
        /// </summary>
        [Input("ruleCollectionGroupName")]
        public Input<string>? RuleCollectionGroupName { get; set; }

        [Input("ruleCollections")]
        private InputList<Union<Inputs.FirewallPolicyFilterRuleCollectionArgs, Inputs.FirewallPolicyNatRuleCollectionArgs>>? _ruleCollections;

        /// <summary>
        /// Group of Firewall Policy rule collections.
        /// </summary>
        public InputList<Union<Inputs.FirewallPolicyFilterRuleCollectionArgs, Inputs.FirewallPolicyNatRuleCollectionArgs>> RuleCollections
        {
            get => _ruleCollections ?? (_ruleCollections = new InputList<Union<Inputs.FirewallPolicyFilterRuleCollectionArgs, Inputs.FirewallPolicyNatRuleCollectionArgs>>());
            set => _ruleCollections = value;
        }

        public FirewallPolicyRuleCollectionGroupArgs()
        {
        }
        public static new FirewallPolicyRuleCollectionGroupArgs Empty => new FirewallPolicyRuleCollectionGroupArgs();
    }
}
