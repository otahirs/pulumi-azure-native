// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Insights
{
    /// <summary>
    /// An action group resource.
    /// API Version: 2023-01-01.
    /// Previous API Version: 2019-06-01. See https://github.com/pulumi/pulumi-azure-native/discussions/TODO for information on migrating from v1 to v2 of the provider.
    /// 
    /// ## Example Usage
    /// ### Create or update an action group
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var actionGroup = new AzureNative.Insights.ActionGroup("actionGroup", new()
    ///     {
    ///         ActionGroupName = "SampleActionGroup",
    ///         ArmRoleReceivers = new[]
    ///         {
    ///             new AzureNative.Insights.Inputs.ArmRoleReceiverArgs
    ///             {
    ///                 Name = "Sample armRole",
    ///                 RoleId = "8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
    ///                 UseCommonAlertSchema = true,
    ///             },
    ///         },
    ///         AutomationRunbookReceivers = new[]
    ///         {
    ///             new AzureNative.Insights.Inputs.AutomationRunbookReceiverArgs
    ///             {
    ///                 AutomationAccountId = "/subscriptions/187f412d-1758-44d9-b052-169e2564721d/resourceGroups/runbookTest/providers/Microsoft.Automation/automationAccounts/runbooktest",
    ///                 IsGlobalRunbook = false,
    ///                 Name = "testRunbook",
    ///                 RunbookName = "Sample runbook",
    ///                 ServiceUri = "&lt;serviceUri&gt;",
    ///                 UseCommonAlertSchema = true,
    ///                 WebhookResourceId = "/subscriptions/187f412d-1758-44d9-b052-169e2564721d/resourceGroups/runbookTest/providers/Microsoft.Automation/automationAccounts/runbooktest/webhooks/Alert1510184037084",
    ///             },
    ///         },
    ///         AzureAppPushReceivers = new[]
    ///         {
    ///             new AzureNative.Insights.Inputs.AzureAppPushReceiverArgs
    ///             {
    ///                 EmailAddress = "johndoe@email.com",
    ///                 Name = "Sample azureAppPush",
    ///             },
    ///         },
    ///         AzureFunctionReceivers = new[]
    ///         {
    ///             new AzureNative.Insights.Inputs.AzureFunctionReceiverArgs
    ///             {
    ///                 FunctionAppResourceId = "/subscriptions/5def922a-3ed4-49c1-b9fd-05ec533819a3/resourceGroups/aznsTest/providers/Microsoft.Web/sites/testFunctionApp",
    ///                 FunctionName = "HttpTriggerCSharp1",
    ///                 HttpTriggerUrl = "http://test.me",
    ///                 Name = "Sample azureFunction",
    ///                 UseCommonAlertSchema = true,
    ///             },
    ///         },
    ///         EmailReceivers = new[]
    ///         {
    ///             new AzureNative.Insights.Inputs.EmailReceiverArgs
    ///             {
    ///                 EmailAddress = "johndoe@email.com",
    ///                 Name = "John Doe's email",
    ///                 UseCommonAlertSchema = false,
    ///             },
    ///             new AzureNative.Insights.Inputs.EmailReceiverArgs
    ///             {
    ///                 EmailAddress = "janesmith@email.com",
    ///                 Name = "Jane Smith's email",
    ///                 UseCommonAlertSchema = true,
    ///             },
    ///         },
    ///         Enabled = true,
    ///         EventHubReceivers = new[]
    ///         {
    ///             new AzureNative.Insights.Inputs.EventHubReceiverArgs
    ///             {
    ///                 EventHubName = "testEventHub",
    ///                 EventHubNameSpace = "testEventHubNameSpace",
    ///                 Name = "Sample eventHub",
    ///                 SubscriptionId = "187f412d-1758-44d9-b052-169e2564721d",
    ///                 TenantId = "68a4459a-ccb8-493c-b9da-dd30457d1b84",
    ///             },
    ///         },
    ///         GroupShortName = "sample",
    ///         ItsmReceivers = new[]
    ///         {
    ///             new AzureNative.Insights.Inputs.ItsmReceiverArgs
    ///             {
    ///                 ConnectionId = "a3b9076c-ce8e-434e-85b4-aff10cb3c8f1",
    ///                 Name = "Sample itsm",
    ///                 Region = "westcentralus",
    ///                 TicketConfiguration = "{\"PayloadRevision\":0,\"WorkItemType\":\"Incident\",\"UseTemplate\":false,\"WorkItemData\":\"{}\",\"CreateOneWIPerCI\":false}",
    ///                 WorkspaceId = "5def922a-3ed4-49c1-b9fd-05ec533819a3|55dfd1f8-7e59-4f89-bf56-4c82f5ace23c",
    ///             },
    ///         },
    ///         Location = "Global",
    ///         LogicAppReceivers = new[]
    ///         {
    ///             new AzureNative.Insights.Inputs.LogicAppReceiverArgs
    ///             {
    ///                 CallbackUrl = "https://prod-27.northcentralus.logic.azure.com/workflows/68e572e818e5457ba898763b7db90877/triggers/manual/paths/invoke/azns/test?api-version=2016-10-01&amp;sp=%2Ftriggers%2Fmanual%2Frun&amp;sv=1.0&amp;sig=Abpsb72UYJxPPvmDo937uzofupO5r_vIeWEx7KVHo7w",
    ///                 Name = "Sample logicApp",
    ///                 ResourceId = "/subscriptions/187f412d-1758-44d9-b052-169e2564721d/resourceGroups/LogicApp/providers/Microsoft.Logic/workflows/testLogicApp",
    ///                 UseCommonAlertSchema = false,
    ///             },
    ///         },
    ///         ResourceGroupName = "Default-NotificationRules",
    ///         SmsReceivers = new[]
    ///         {
    ///             new AzureNative.Insights.Inputs.SmsReceiverArgs
    ///             {
    ///                 CountryCode = "1",
    ///                 Name = "John Doe's mobile",
    ///                 PhoneNumber = "1234567890",
    ///             },
    ///             new AzureNative.Insights.Inputs.SmsReceiverArgs
    ///             {
    ///                 CountryCode = "1",
    ///                 Name = "Jane Smith's mobile",
    ///                 PhoneNumber = "0987654321",
    ///             },
    ///         },
    ///         Tags = null,
    ///         VoiceReceivers = new[]
    ///         {
    ///             new AzureNative.Insights.Inputs.VoiceReceiverArgs
    ///             {
    ///                 CountryCode = "1",
    ///                 Name = "Sample voice",
    ///                 PhoneNumber = "1234567890",
    ///             },
    ///         },
    ///         WebhookReceivers = new[]
    ///         {
    ///             new AzureNative.Insights.Inputs.WebhookReceiverArgs
    ///             {
    ///                 Name = "Sample webhook 1",
    ///                 ServiceUri = "http://www.example.com/webhook1",
    ///                 UseCommonAlertSchema = true,
    ///             },
    ///             new AzureNative.Insights.Inputs.WebhookReceiverArgs
    ///             {
    ///                 IdentifierUri = "http://someidentifier/d7811ba3-7996-4a93-99b6-6b2f3f355f8a",
    ///                 Name = "Sample webhook 2",
    ///                 ObjectId = "d3bb868c-fe44-452c-aa26-769a6538c808",
    ///                 ServiceUri = "http://www.example.com/webhook2",
    ///                 TenantId = "68a4459a-ccb8-493c-b9da-dd30457d1b84",
    ///                 UseAadAuth = true,
    ///                 UseCommonAlertSchema = true,
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// 
    /// ## Import
    /// 
    /// An existing resource can be imported using its type token, name, and identifier, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure-native:insights:ActionGroup SampleActionGroup /subscriptions/187f412d-1758-44d9-b052-169e2564721d/resourceGroups/Default-NotificationRules/providers/microsoft.insights/actionGroups/SampleActionGroup 
    /// ```
    /// </summary>
    [AzureNativeResourceType("azure-native:insights:ActionGroup")]
    public partial class ActionGroup : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The list of ARM role receivers that are part of this action group. Roles are Azure RBAC roles and only built-in roles are supported.
        /// </summary>
        [Output("armRoleReceivers")]
        public Output<ImmutableArray<Outputs.ArmRoleReceiverResponse>> ArmRoleReceivers { get; private set; } = null!;

        /// <summary>
        /// The list of AutomationRunbook receivers that are part of this action group.
        /// </summary>
        [Output("automationRunbookReceivers")]
        public Output<ImmutableArray<Outputs.AutomationRunbookReceiverResponse>> AutomationRunbookReceivers { get; private set; } = null!;

        /// <summary>
        /// The list of AzureAppPush receivers that are part of this action group.
        /// </summary>
        [Output("azureAppPushReceivers")]
        public Output<ImmutableArray<Outputs.AzureAppPushReceiverResponse>> AzureAppPushReceivers { get; private set; } = null!;

        /// <summary>
        /// The list of azure function receivers that are part of this action group.
        /// </summary>
        [Output("azureFunctionReceivers")]
        public Output<ImmutableArray<Outputs.AzureFunctionReceiverResponse>> AzureFunctionReceivers { get; private set; } = null!;

        /// <summary>
        /// The list of email receivers that are part of this action group.
        /// </summary>
        [Output("emailReceivers")]
        public Output<ImmutableArray<Outputs.EmailReceiverResponse>> EmailReceivers { get; private set; } = null!;

        /// <summary>
        /// Indicates whether this action group is enabled. If an action group is not enabled, then none of its receivers will receive communications.
        /// </summary>
        [Output("enabled")]
        public Output<bool> Enabled { get; private set; } = null!;

        /// <summary>
        /// The list of event hub receivers that are part of this action group.
        /// </summary>
        [Output("eventHubReceivers")]
        public Output<ImmutableArray<Outputs.EventHubReceiverResponse>> EventHubReceivers { get; private set; } = null!;

        /// <summary>
        /// The short name of the action group. This will be used in SMS messages.
        /// </summary>
        [Output("groupShortName")]
        public Output<string> GroupShortName { get; private set; } = null!;

        /// <summary>
        /// The list of ITSM receivers that are part of this action group.
        /// </summary>
        [Output("itsmReceivers")]
        public Output<ImmutableArray<Outputs.ItsmReceiverResponse>> ItsmReceivers { get; private set; } = null!;

        /// <summary>
        /// Resource location
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The list of logic app receivers that are part of this action group.
        /// </summary>
        [Output("logicAppReceivers")]
        public Output<ImmutableArray<Outputs.LogicAppReceiverResponse>> LogicAppReceivers { get; private set; } = null!;

        /// <summary>
        /// Azure resource name
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The list of SMS receivers that are part of this action group.
        /// </summary>
        [Output("smsReceivers")]
        public Output<ImmutableArray<Outputs.SmsReceiverResponse>> SmsReceivers { get; private set; } = null!;

        /// <summary>
        /// Resource tags
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Azure resource type
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// The list of voice receivers that are part of this action group.
        /// </summary>
        [Output("voiceReceivers")]
        public Output<ImmutableArray<Outputs.VoiceReceiverResponse>> VoiceReceivers { get; private set; } = null!;

        /// <summary>
        /// The list of webhook receivers that are part of this action group.
        /// </summary>
        [Output("webhookReceivers")]
        public Output<ImmutableArray<Outputs.WebhookReceiverResponse>> WebhookReceivers { get; private set; } = null!;


        /// <summary>
        /// Create a ActionGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ActionGroup(string name, ActionGroupArgs args, CustomResourceOptions? options = null)
            : base("azure-native:insights:ActionGroup", name, args ?? new ActionGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ActionGroup(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:insights:ActionGroup", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:insights/v20170401:ActionGroup"},
                    new global::Pulumi.Alias { Type = "azure-native:insights/v20180301:ActionGroup"},
                    new global::Pulumi.Alias { Type = "azure-native:insights/v20180901:ActionGroup"},
                    new global::Pulumi.Alias { Type = "azure-native:insights/v20190301:ActionGroup"},
                    new global::Pulumi.Alias { Type = "azure-native:insights/v20190601:ActionGroup"},
                    new global::Pulumi.Alias { Type = "azure-native:insights/v20210901:ActionGroup"},
                    new global::Pulumi.Alias { Type = "azure-native:insights/v20220401:ActionGroup"},
                    new global::Pulumi.Alias { Type = "azure-native:insights/v20220601:ActionGroup"},
                    new global::Pulumi.Alias { Type = "azure-native:insights/v20230101:ActionGroup"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ActionGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ActionGroup Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new ActionGroup(name, id, options);
        }
    }

    public sealed class ActionGroupArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the action group.
        /// </summary>
        [Input("actionGroupName")]
        public Input<string>? ActionGroupName { get; set; }

        [Input("armRoleReceivers")]
        private InputList<Inputs.ArmRoleReceiverArgs>? _armRoleReceivers;

        /// <summary>
        /// The list of ARM role receivers that are part of this action group. Roles are Azure RBAC roles and only built-in roles are supported.
        /// </summary>
        public InputList<Inputs.ArmRoleReceiverArgs> ArmRoleReceivers
        {
            get => _armRoleReceivers ?? (_armRoleReceivers = new InputList<Inputs.ArmRoleReceiverArgs>());
            set => _armRoleReceivers = value;
        }

        [Input("automationRunbookReceivers")]
        private InputList<Inputs.AutomationRunbookReceiverArgs>? _automationRunbookReceivers;

        /// <summary>
        /// The list of AutomationRunbook receivers that are part of this action group.
        /// </summary>
        public InputList<Inputs.AutomationRunbookReceiverArgs> AutomationRunbookReceivers
        {
            get => _automationRunbookReceivers ?? (_automationRunbookReceivers = new InputList<Inputs.AutomationRunbookReceiverArgs>());
            set => _automationRunbookReceivers = value;
        }

        [Input("azureAppPushReceivers")]
        private InputList<Inputs.AzureAppPushReceiverArgs>? _azureAppPushReceivers;

        /// <summary>
        /// The list of AzureAppPush receivers that are part of this action group.
        /// </summary>
        public InputList<Inputs.AzureAppPushReceiverArgs> AzureAppPushReceivers
        {
            get => _azureAppPushReceivers ?? (_azureAppPushReceivers = new InputList<Inputs.AzureAppPushReceiverArgs>());
            set => _azureAppPushReceivers = value;
        }

        [Input("azureFunctionReceivers")]
        private InputList<Inputs.AzureFunctionReceiverArgs>? _azureFunctionReceivers;

        /// <summary>
        /// The list of azure function receivers that are part of this action group.
        /// </summary>
        public InputList<Inputs.AzureFunctionReceiverArgs> AzureFunctionReceivers
        {
            get => _azureFunctionReceivers ?? (_azureFunctionReceivers = new InputList<Inputs.AzureFunctionReceiverArgs>());
            set => _azureFunctionReceivers = value;
        }

        [Input("emailReceivers")]
        private InputList<Inputs.EmailReceiverArgs>? _emailReceivers;

        /// <summary>
        /// The list of email receivers that are part of this action group.
        /// </summary>
        public InputList<Inputs.EmailReceiverArgs> EmailReceivers
        {
            get => _emailReceivers ?? (_emailReceivers = new InputList<Inputs.EmailReceiverArgs>());
            set => _emailReceivers = value;
        }

        /// <summary>
        /// Indicates whether this action group is enabled. If an action group is not enabled, then none of its receivers will receive communications.
        /// </summary>
        [Input("enabled", required: true)]
        public Input<bool> Enabled { get; set; } = null!;

        [Input("eventHubReceivers")]
        private InputList<Inputs.EventHubReceiverArgs>? _eventHubReceivers;

        /// <summary>
        /// The list of event hub receivers that are part of this action group.
        /// </summary>
        public InputList<Inputs.EventHubReceiverArgs> EventHubReceivers
        {
            get => _eventHubReceivers ?? (_eventHubReceivers = new InputList<Inputs.EventHubReceiverArgs>());
            set => _eventHubReceivers = value;
        }

        /// <summary>
        /// The short name of the action group. This will be used in SMS messages.
        /// </summary>
        [Input("groupShortName", required: true)]
        public Input<string> GroupShortName { get; set; } = null!;

        [Input("itsmReceivers")]
        private InputList<Inputs.ItsmReceiverArgs>? _itsmReceivers;

        /// <summary>
        /// The list of ITSM receivers that are part of this action group.
        /// </summary>
        public InputList<Inputs.ItsmReceiverArgs> ItsmReceivers
        {
            get => _itsmReceivers ?? (_itsmReceivers = new InputList<Inputs.ItsmReceiverArgs>());
            set => _itsmReceivers = value;
        }

        /// <summary>
        /// Resource location
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        [Input("logicAppReceivers")]
        private InputList<Inputs.LogicAppReceiverArgs>? _logicAppReceivers;

        /// <summary>
        /// The list of logic app receivers that are part of this action group.
        /// </summary>
        public InputList<Inputs.LogicAppReceiverArgs> LogicAppReceivers
        {
            get => _logicAppReceivers ?? (_logicAppReceivers = new InputList<Inputs.LogicAppReceiverArgs>());
            set => _logicAppReceivers = value;
        }

        /// <summary>
        /// The name of the resource group. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("smsReceivers")]
        private InputList<Inputs.SmsReceiverArgs>? _smsReceivers;

        /// <summary>
        /// The list of SMS receivers that are part of this action group.
        /// </summary>
        public InputList<Inputs.SmsReceiverArgs> SmsReceivers
        {
            get => _smsReceivers ?? (_smsReceivers = new InputList<Inputs.SmsReceiverArgs>());
            set => _smsReceivers = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("voiceReceivers")]
        private InputList<Inputs.VoiceReceiverArgs>? _voiceReceivers;

        /// <summary>
        /// The list of voice receivers that are part of this action group.
        /// </summary>
        public InputList<Inputs.VoiceReceiverArgs> VoiceReceivers
        {
            get => _voiceReceivers ?? (_voiceReceivers = new InputList<Inputs.VoiceReceiverArgs>());
            set => _voiceReceivers = value;
        }

        [Input("webhookReceivers")]
        private InputList<Inputs.WebhookReceiverArgs>? _webhookReceivers;

        /// <summary>
        /// The list of webhook receivers that are part of this action group.
        /// </summary>
        public InputList<Inputs.WebhookReceiverArgs> WebhookReceivers
        {
            get => _webhookReceivers ?? (_webhookReceivers = new InputList<Inputs.WebhookReceiverArgs>());
            set => _webhookReceivers = value;
        }

        public ActionGroupArgs()
        {
            Enabled = true;
        }
        public static new ActionGroupArgs Empty => new ActionGroupArgs();
    }
}
