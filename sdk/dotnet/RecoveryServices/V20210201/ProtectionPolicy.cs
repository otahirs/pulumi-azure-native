// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.RecoveryServices.V20210201
{
    /// <summary>
    /// Base class for backup policy. Workload-specific backup policies are derived from this class.
    /// 
    /// ## Example Usage
    /// ### Create or Update Full Azure Vm Protection Policy
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var protectionPolicy = new AzureNative.RecoveryServices.V20210201.ProtectionPolicy("protectionPolicy", new()
    ///     {
    ///         PolicyName = "testPolicy1",
    ///         Properties = new AzureNative.RecoveryServices.V20210201.Inputs.AzureIaaSVMProtectionPolicyArgs
    ///         {
    ///             BackupManagementType = "AzureIaasVM",
    ///             RetentionPolicy = new AzureNative.RecoveryServices.V20210201.Inputs.LongTermRetentionPolicyArgs
    ///             {
    ///                 MonthlySchedule = new AzureNative.RecoveryServices.V20210201.Inputs.MonthlyRetentionScheduleArgs
    ///                 {
    ///                     RetentionDuration = new AzureNative.RecoveryServices.V20210201.Inputs.RetentionDurationArgs
    ///                     {
    ///                         Count = 2,
    ///                         DurationType = "Months",
    ///                     },
    ///                     RetentionScheduleFormatType = "Weekly",
    ///                     RetentionScheduleWeekly = new AzureNative.RecoveryServices.V20210201.Inputs.WeeklyRetentionFormatArgs
    ///                     {
    ///                         DaysOfTheWeek = new[]
    ///                         {
    ///                             AzureNative.RecoveryServices.V20210201.DayOfWeek.Wednesday,
    ///                             AzureNative.RecoveryServices.V20210201.DayOfWeek.Thursday,
    ///                         },
    ///                         WeeksOfTheMonth = new[]
    ///                         {
    ///                             AzureNative.RecoveryServices.V20210201.WeekOfMonth.First,
    ///                             AzureNative.RecoveryServices.V20210201.WeekOfMonth.Third,
    ///                         },
    ///                     },
    ///                     RetentionTimes = new[]
    ///                     {
    ///                         "2018-01-24T10:00:00Z",
    ///                     },
    ///                 },
    ///                 RetentionPolicyType = "LongTermRetentionPolicy",
    ///                 WeeklySchedule = new AzureNative.RecoveryServices.V20210201.Inputs.WeeklyRetentionScheduleArgs
    ///                 {
    ///                     DaysOfTheWeek = new[]
    ///                     {
    ///                         AzureNative.RecoveryServices.V20210201.DayOfWeek.Monday,
    ///                         AzureNative.RecoveryServices.V20210201.DayOfWeek.Wednesday,
    ///                         AzureNative.RecoveryServices.V20210201.DayOfWeek.Thursday,
    ///                     },
    ///                     RetentionDuration = new AzureNative.RecoveryServices.V20210201.Inputs.RetentionDurationArgs
    ///                     {
    ///                         Count = 1,
    ///                         DurationType = "Weeks",
    ///                     },
    ///                     RetentionTimes = new[]
    ///                     {
    ///                         "2018-01-24T10:00:00Z",
    ///                     },
    ///                 },
    ///                 YearlySchedule = new AzureNative.RecoveryServices.V20210201.Inputs.YearlyRetentionScheduleArgs
    ///                 {
    ///                     MonthsOfYear = new[]
    ///                     {
    ///                         AzureNative.RecoveryServices.V20210201.MonthOfYear.February,
    ///                         AzureNative.RecoveryServices.V20210201.MonthOfYear.November,
    ///                     },
    ///                     RetentionDuration = new AzureNative.RecoveryServices.V20210201.Inputs.RetentionDurationArgs
    ///                     {
    ///                         Count = 4,
    ///                         DurationType = "Years",
    ///                     },
    ///                     RetentionScheduleFormatType = "Weekly",
    ///                     RetentionScheduleWeekly = new AzureNative.RecoveryServices.V20210201.Inputs.WeeklyRetentionFormatArgs
    ///                     {
    ///                         DaysOfTheWeek = new[]
    ///                         {
    ///                             AzureNative.RecoveryServices.V20210201.DayOfWeek.Monday,
    ///                             AzureNative.RecoveryServices.V20210201.DayOfWeek.Thursday,
    ///                         },
    ///                         WeeksOfTheMonth = new[]
    ///                         {
    ///                             AzureNative.RecoveryServices.V20210201.WeekOfMonth.Fourth,
    ///                         },
    ///                     },
    ///                     RetentionTimes = new[]
    ///                     {
    ///                         "2018-01-24T10:00:00Z",
    ///                     },
    ///                 },
    ///             },
    ///             SchedulePolicy = new AzureNative.RecoveryServices.V20210201.Inputs.SimpleSchedulePolicyArgs
    ///             {
    ///                 SchedulePolicyType = "SimpleSchedulePolicy",
    ///                 ScheduleRunDays = new[]
    ///                 {
    ///                     AzureNative.RecoveryServices.V20210201.DayOfWeek.Monday,
    ///                     AzureNative.RecoveryServices.V20210201.DayOfWeek.Wednesday,
    ///                     AzureNative.RecoveryServices.V20210201.DayOfWeek.Thursday,
    ///                 },
    ///                 ScheduleRunFrequency = "Weekly",
    ///                 ScheduleRunTimes = new[]
    ///                 {
    ///                     "2018-01-24T10:00:00Z",
    ///                 },
    ///             },
    ///             TimeZone = "Pacific Standard Time",
    ///         },
    ///         ResourceGroupName = "SwaggerTestRg",
    ///         VaultName = "NetSDKTestRsVault",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Create or Update Full Azure Workload Protection Policy
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var protectionPolicy = new AzureNative.RecoveryServices.V20210201.ProtectionPolicy("protectionPolicy", new()
    ///     {
    ///         PolicyName = "testPolicy1",
    ///         Properties = new AzureNative.RecoveryServices.V20210201.Inputs.AzureVmWorkloadProtectionPolicyArgs
    ///         {
    ///             BackupManagementType = "AzureWorkload",
    ///             Settings = new AzureNative.RecoveryServices.V20210201.Inputs.SettingsArgs
    ///             {
    ///                 Issqlcompression = false,
    ///                 TimeZone = "Pacific Standard Time",
    ///             },
    ///             SubProtectionPolicy = new[]
    ///             {
    ///                 new AzureNative.RecoveryServices.V20210201.Inputs.SubProtectionPolicyArgs
    ///                 {
    ///                     PolicyType = "Full",
    ///                     RetentionPolicy = new AzureNative.RecoveryServices.V20210201.Inputs.LongTermRetentionPolicyArgs
    ///                     {
    ///                         MonthlySchedule = new AzureNative.RecoveryServices.V20210201.Inputs.MonthlyRetentionScheduleArgs
    ///                         {
    ///                             RetentionDuration = new AzureNative.RecoveryServices.V20210201.Inputs.RetentionDurationArgs
    ///                             {
    ///                                 Count = 1,
    ///                                 DurationType = "Months",
    ///                             },
    ///                             RetentionScheduleFormatType = "Weekly",
    ///                             RetentionScheduleWeekly = new AzureNative.RecoveryServices.V20210201.Inputs.WeeklyRetentionFormatArgs
    ///                             {
    ///                                 DaysOfTheWeek = new[]
    ///                                 {
    ///                                     AzureNative.RecoveryServices.V20210201.DayOfWeek.Sunday,
    ///                                 },
    ///                                 WeeksOfTheMonth = new[]
    ///                                 {
    ///                                     AzureNative.RecoveryServices.V20210201.WeekOfMonth.Second,
    ///                                 },
    ///                             },
    ///                             RetentionTimes = new[]
    ///                             {
    ///                                 "2018-01-24T10:00:00Z",
    ///                             },
    ///                         },
    ///                         RetentionPolicyType = "LongTermRetentionPolicy",
    ///                         WeeklySchedule = new AzureNative.RecoveryServices.V20210201.Inputs.WeeklyRetentionScheduleArgs
    ///                         {
    ///                             DaysOfTheWeek = new[]
    ///                             {
    ///                                 AzureNative.RecoveryServices.V20210201.DayOfWeek.Sunday,
    ///                                 AzureNative.RecoveryServices.V20210201.DayOfWeek.Tuesday,
    ///                             },
    ///                             RetentionDuration = new AzureNative.RecoveryServices.V20210201.Inputs.RetentionDurationArgs
    ///                             {
    ///                                 Count = 2,
    ///                                 DurationType = "Weeks",
    ///                             },
    ///                             RetentionTimes = new[]
    ///                             {
    ///                                 "2018-01-24T10:00:00Z",
    ///                             },
    ///                         },
    ///                         YearlySchedule = new AzureNative.RecoveryServices.V20210201.Inputs.YearlyRetentionScheduleArgs
    ///                         {
    ///                             MonthsOfYear = new[]
    ///                             {
    ///                                 AzureNative.RecoveryServices.V20210201.MonthOfYear.January,
    ///                                 AzureNative.RecoveryServices.V20210201.MonthOfYear.June,
    ///                                 AzureNative.RecoveryServices.V20210201.MonthOfYear.December,
    ///                             },
    ///                             RetentionDuration = new AzureNative.RecoveryServices.V20210201.Inputs.RetentionDurationArgs
    ///                             {
    ///                                 Count = 1,
    ///                                 DurationType = "Years",
    ///                             },
    ///                             RetentionScheduleFormatType = "Weekly",
    ///                             RetentionScheduleWeekly = new AzureNative.RecoveryServices.V20210201.Inputs.WeeklyRetentionFormatArgs
    ///                             {
    ///                                 DaysOfTheWeek = new[]
    ///                                 {
    ///                                     AzureNative.RecoveryServices.V20210201.DayOfWeek.Sunday,
    ///                                 },
    ///                                 WeeksOfTheMonth = new[]
    ///                                 {
    ///                                     AzureNative.RecoveryServices.V20210201.WeekOfMonth.Last,
    ///                                 },
    ///                             },
    ///                             RetentionTimes = new[]
    ///                             {
    ///                                 "2018-01-24T10:00:00Z",
    ///                             },
    ///                         },
    ///                     },
    ///                     SchedulePolicy = new AzureNative.RecoveryServices.V20210201.Inputs.SimpleSchedulePolicyArgs
    ///                     {
    ///                         SchedulePolicyType = "SimpleSchedulePolicy",
    ///                         ScheduleRunDays = new[]
    ///                         {
    ///                             AzureNative.RecoveryServices.V20210201.DayOfWeek.Sunday,
    ///                             AzureNative.RecoveryServices.V20210201.DayOfWeek.Tuesday,
    ///                         },
    ///                         ScheduleRunFrequency = "Weekly",
    ///                         ScheduleRunTimes = new[]
    ///                         {
    ///                             "2018-01-24T10:00:00Z",
    ///                         },
    ///                     },
    ///                 },
    ///                 new AzureNative.RecoveryServices.V20210201.Inputs.SubProtectionPolicyArgs
    ///                 {
    ///                     PolicyType = "Differential",
    ///                     RetentionPolicy = new AzureNative.RecoveryServices.V20210201.Inputs.SimpleRetentionPolicyArgs
    ///                     {
    ///                         RetentionDuration = new AzureNative.RecoveryServices.V20210201.Inputs.RetentionDurationArgs
    ///                         {
    ///                             Count = 8,
    ///                             DurationType = "Days",
    ///                         },
    ///                         RetentionPolicyType = "SimpleRetentionPolicy",
    ///                     },
    ///                     SchedulePolicy = new AzureNative.RecoveryServices.V20210201.Inputs.SimpleSchedulePolicyArgs
    ///                     {
    ///                         SchedulePolicyType = "SimpleSchedulePolicy",
    ///                         ScheduleRunDays = new[]
    ///                         {
    ///                             AzureNative.RecoveryServices.V20210201.DayOfWeek.Friday,
    ///                         },
    ///                         ScheduleRunFrequency = "Weekly",
    ///                         ScheduleRunTimes = new[]
    ///                         {
    ///                             "2018-01-24T10:00:00Z",
    ///                         },
    ///                     },
    ///                 },
    ///                 new AzureNative.RecoveryServices.V20210201.Inputs.SubProtectionPolicyArgs
    ///                 {
    ///                     PolicyType = "Log",
    ///                     RetentionPolicy = new AzureNative.RecoveryServices.V20210201.Inputs.SimpleRetentionPolicyArgs
    ///                     {
    ///                         RetentionDuration = new AzureNative.RecoveryServices.V20210201.Inputs.RetentionDurationArgs
    ///                         {
    ///                             Count = 7,
    ///                             DurationType = "Days",
    ///                         },
    ///                         RetentionPolicyType = "SimpleRetentionPolicy",
    ///                     },
    ///                     SchedulePolicy = new AzureNative.RecoveryServices.V20210201.Inputs.LogSchedulePolicyArgs
    ///                     {
    ///                         ScheduleFrequencyInMins = 60,
    ///                         SchedulePolicyType = "LogSchedulePolicy",
    ///                     },
    ///                 },
    ///             },
    ///             WorkLoadType = "SQLDataBase",
    ///         },
    ///         ResourceGroupName = "SwaggerTestRg",
    ///         VaultName = "NetSDKTestRsVault",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Create or Update Simple Azure Vm Protection Policy
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var protectionPolicy = new AzureNative.RecoveryServices.V20210201.ProtectionPolicy("protectionPolicy", new()
    ///     {
    ///         PolicyName = "testPolicy1",
    ///         Properties = new AzureNative.RecoveryServices.V20210201.Inputs.AzureIaaSVMProtectionPolicyArgs
    ///         {
    ///             BackupManagementType = "AzureIaasVM",
    ///             RetentionPolicy = new AzureNative.RecoveryServices.V20210201.Inputs.LongTermRetentionPolicyArgs
    ///             {
    ///                 DailySchedule = new AzureNative.RecoveryServices.V20210201.Inputs.DailyRetentionScheduleArgs
    ///                 {
    ///                     RetentionDuration = new AzureNative.RecoveryServices.V20210201.Inputs.RetentionDurationArgs
    ///                     {
    ///                         Count = 1,
    ///                         DurationType = "Days",
    ///                     },
    ///                     RetentionTimes = new[]
    ///                     {
    ///                         "2018-01-24T02:00:00Z",
    ///                     },
    ///                 },
    ///                 RetentionPolicyType = "LongTermRetentionPolicy",
    ///             },
    ///             SchedulePolicy = new AzureNative.RecoveryServices.V20210201.Inputs.SimpleSchedulePolicyArgs
    ///             {
    ///                 SchedulePolicyType = "SimpleSchedulePolicy",
    ///                 ScheduleRunFrequency = "Daily",
    ///                 ScheduleRunTimes = new[]
    ///                 {
    ///                     "2018-01-24T02:00:00Z",
    ///                 },
    ///             },
    ///             TimeZone = "Pacific Standard Time",
    ///         },
    ///         ResourceGroupName = "SwaggerTestRg",
    ///         VaultName = "NetSDKTestRsVault",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// 
    /// ## Import
    /// 
    /// An existing resource can be imported using its type token, name, and identifier, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure-native:recoveryservices/v20210201:ProtectionPolicy testPolicy1 /Subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/SwaggerTestRg/providers/Microsoft.RecoveryServices/vaults/NetSDKTestRsVault/backupPolicies/testPolicy1 
    /// ```
    /// </summary>
    [AzureNativeResourceType("azure-native:recoveryservices/v20210201:ProtectionPolicy")]
    public partial class ProtectionPolicy : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Optional ETag.
        /// </summary>
        [Output("eTag")]
        public Output<string?> ETag { get; private set; } = null!;

        /// <summary>
        /// Resource location.
        /// </summary>
        [Output("location")]
        public Output<string?> Location { get; private set; } = null!;

        /// <summary>
        /// Resource name associated with the resource.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// ProtectionPolicyResource properties
        /// </summary>
        [Output("properties")]
        public Output<object> Properties { get; private set; } = null!;

        /// <summary>
        /// Resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Resource type represents the complete path of the form Namespace/ResourceType/ResourceType/...
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a ProtectionPolicy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ProtectionPolicy(string name, ProtectionPolicyArgs args, CustomResourceOptions? options = null)
            : base("azure-native:recoveryservices/v20210201:ProtectionPolicy", name, args ?? new ProtectionPolicyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ProtectionPolicy(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:recoveryservices/v20210201:ProtectionPolicy", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:recoveryservices:ProtectionPolicy"},
                    new global::Pulumi.Alias { Type = "azure-native:recoveryservices/v20160601:ProtectionPolicy"},
                    new global::Pulumi.Alias { Type = "azure-native:recoveryservices/v20201001:ProtectionPolicy"},
                    new global::Pulumi.Alias { Type = "azure-native:recoveryservices/v20201201:ProtectionPolicy"},
                    new global::Pulumi.Alias { Type = "azure-native:recoveryservices/v20210101:ProtectionPolicy"},
                    new global::Pulumi.Alias { Type = "azure-native:recoveryservices/v20210201preview:ProtectionPolicy"},
                    new global::Pulumi.Alias { Type = "azure-native:recoveryservices/v20210210:ProtectionPolicy"},
                    new global::Pulumi.Alias { Type = "azure-native:recoveryservices/v20210301:ProtectionPolicy"},
                    new global::Pulumi.Alias { Type = "azure-native:recoveryservices/v20210401:ProtectionPolicy"},
                    new global::Pulumi.Alias { Type = "azure-native:recoveryservices/v20210601:ProtectionPolicy"},
                    new global::Pulumi.Alias { Type = "azure-native:recoveryservices/v20210701:ProtectionPolicy"},
                    new global::Pulumi.Alias { Type = "azure-native:recoveryservices/v20210801:ProtectionPolicy"},
                    new global::Pulumi.Alias { Type = "azure-native:recoveryservices/v20211001:ProtectionPolicy"},
                    new global::Pulumi.Alias { Type = "azure-native:recoveryservices/v20211201:ProtectionPolicy"},
                    new global::Pulumi.Alias { Type = "azure-native:recoveryservices/v20220101:ProtectionPolicy"},
                    new global::Pulumi.Alias { Type = "azure-native:recoveryservices/v20220201:ProtectionPolicy"},
                    new global::Pulumi.Alias { Type = "azure-native:recoveryservices/v20220301:ProtectionPolicy"},
                    new global::Pulumi.Alias { Type = "azure-native:recoveryservices/v20220401:ProtectionPolicy"},
                    new global::Pulumi.Alias { Type = "azure-native:recoveryservices/v20220601preview:ProtectionPolicy"},
                    new global::Pulumi.Alias { Type = "azure-native:recoveryservices/v20220901preview:ProtectionPolicy"},
                    new global::Pulumi.Alias { Type = "azure-native:recoveryservices/v20220930preview:ProtectionPolicy"},
                    new global::Pulumi.Alias { Type = "azure-native:recoveryservices/v20221001:ProtectionPolicy"},
                    new global::Pulumi.Alias { Type = "azure-native:recoveryservices/v20230101:ProtectionPolicy"},
                    new global::Pulumi.Alias { Type = "azure-native:recoveryservices/v20230201:ProtectionPolicy"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ProtectionPolicy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ProtectionPolicy Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new ProtectionPolicy(name, id, options);
        }
    }

    public sealed class ProtectionPolicyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Optional ETag.
        /// </summary>
        [Input("eTag")]
        public Input<string>? ETag { get; set; }

        /// <summary>
        /// Resource location.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Backup policy to be created.
        /// </summary>
        [Input("policyName")]
        public Input<string>? PolicyName { get; set; }

        /// <summary>
        /// ProtectionPolicyResource properties
        /// </summary>
        [Input("properties")]
        public object? Properties { get; set; }

        /// <summary>
        /// The name of the resource group where the recovery services vault is present.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The name of the recovery services vault.
        /// </summary>
        [Input("vaultName", required: true)]
        public Input<string> VaultName { get; set; } = null!;

        public ProtectionPolicyArgs()
        {
        }
        public static new ProtectionPolicyArgs Empty => new ProtectionPolicyArgs();
    }
}
