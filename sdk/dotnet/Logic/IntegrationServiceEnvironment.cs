// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Logic
{
    /// <summary>
    /// The integration service environment.
    /// API Version: 2019-05-01.
    /// Previous API Version: 2019-05-01. See https://github.com/pulumi/pulumi-azure-native/discussions/TODO for information on migrating from v1 to v2 of the provider.
    /// 
    /// ## Example Usage
    /// ### Create or update an integration service environment
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var integrationServiceEnvironment = new AzureNative.Logic.IntegrationServiceEnvironment("integrationServiceEnvironment", new()
    ///     {
    ///         IntegrationServiceEnvironmentName = "testIntegrationServiceEnvironment",
    ///         Location = "brazilsouth",
    ///         Properties = new AzureNative.Logic.Inputs.IntegrationServiceEnvironmentPropertiesArgs
    ///         {
    ///             EncryptionConfiguration = new AzureNative.Logic.Inputs.IntegrationServiceEnvironmenEncryptionConfigurationArgs
    ///             {
    ///                 EncryptionKeyReference = new AzureNative.Logic.Inputs.IntegrationServiceEnvironmenEncryptionKeyReferenceArgs
    ///                 {
    ///                     KeyName = "testKeyName",
    ///                     KeyVault = new AzureNative.Logic.Inputs.ResourceReferenceArgs
    ///                     {
    ///                         Id = "/subscriptions/f34b22a3-2202-4fb1-b040-1332bd928c84/resourceGroups/testResourceGroup/providers/Microsoft.KeyVault/vaults/testKeyVault",
    ///                     },
    ///                     KeyVersion = "13b261d30b984753869902d7f47f4d55",
    ///                 },
    ///             },
    ///             NetworkConfiguration = new AzureNative.Logic.Inputs.NetworkConfigurationArgs
    ///             {
    ///                 AccessEndpoint = new AzureNative.Logic.Inputs.IntegrationServiceEnvironmentAccessEndpointArgs
    ///                 {
    ///                     Type = "Internal",
    ///                 },
    ///                 Subnets = new[]
    ///                 {
    ///                     new AzureNative.Logic.Inputs.ResourceReferenceArgs
    ///                     {
    ///                         Id = "/subscriptions/f34b22a3-2202-4fb1-b040-1332bd928c84/resourceGroups/testResourceGroup/providers/Microsoft.Network/virtualNetworks/testVNET/subnets/s1",
    ///                     },
    ///                     new AzureNative.Logic.Inputs.ResourceReferenceArgs
    ///                     {
    ///                         Id = "/subscriptions/f34b22a3-2202-4fb1-b040-1332bd928c84/resourceGroups/testResourceGroup/providers/Microsoft.Network/virtualNetworks/testVNET/subnets/s2",
    ///                     },
    ///                     new AzureNative.Logic.Inputs.ResourceReferenceArgs
    ///                     {
    ///                         Id = "/subscriptions/f34b22a3-2202-4fb1-b040-1332bd928c84/resourceGroups/testResourceGroup/providers/Microsoft.Network/virtualNetworks/testVNET/subnets/s3",
    ///                     },
    ///                     new AzureNative.Logic.Inputs.ResourceReferenceArgs
    ///                     {
    ///                         Id = "/subscriptions/f34b22a3-2202-4fb1-b040-1332bd928c84/resourceGroups/testResourceGroup/providers/Microsoft.Network/virtualNetworks/testVNET/subnets/s4",
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///         ResourceGroup = "testResourceGroup",
    ///         Sku = new AzureNative.Logic.Inputs.IntegrationServiceEnvironmentSkuArgs
    ///         {
    ///             Capacity = 2,
    ///             Name = "Premium",
    ///         },
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// 
    /// ## Import
    /// 
    /// An existing resource can be imported using its type token, name, and identifier, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure-native:logic:IntegrationServiceEnvironment testIntegrationServiceEnvironment /subscriptions/f34b22a3-2202-4fb1-b040-1332bd928c84/resourceGroups/testResourceGroup/providers/Microsoft.Logic/integrationServiceEnvironments/testIntegrationServiceEnvironment 
    /// ```
    /// </summary>
    [AzureNativeResourceType("azure-native:logic:IntegrationServiceEnvironment")]
    public partial class IntegrationServiceEnvironment : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Managed service identity properties.
        /// </summary>
        [Output("identity")]
        public Output<Outputs.ManagedServiceIdentityResponse?> Identity { get; private set; } = null!;

        /// <summary>
        /// The resource location.
        /// </summary>
        [Output("location")]
        public Output<string?> Location { get; private set; } = null!;

        /// <summary>
        /// Gets the resource name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The integration service environment properties.
        /// </summary>
        [Output("properties")]
        public Output<Outputs.IntegrationServiceEnvironmentPropertiesResponse> Properties { get; private set; } = null!;

        /// <summary>
        /// The sku.
        /// </summary>
        [Output("sku")]
        public Output<Outputs.IntegrationServiceEnvironmentSkuResponse?> Sku { get; private set; } = null!;

        /// <summary>
        /// The resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Gets the resource type.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a IntegrationServiceEnvironment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public IntegrationServiceEnvironment(string name, IntegrationServiceEnvironmentArgs args, CustomResourceOptions? options = null)
            : base("azure-native:logic:IntegrationServiceEnvironment", name, args ?? new IntegrationServiceEnvironmentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private IntegrationServiceEnvironment(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:logic:IntegrationServiceEnvironment", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:logic/v20190501:IntegrationServiceEnvironment"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing IntegrationServiceEnvironment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static IntegrationServiceEnvironment Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new IntegrationServiceEnvironment(name, id, options);
        }
    }

    public sealed class IntegrationServiceEnvironmentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Managed service identity properties.
        /// </summary>
        [Input("identity")]
        public Input<Inputs.ManagedServiceIdentityArgs>? Identity { get; set; }

        /// <summary>
        /// The integration service environment name.
        /// </summary>
        [Input("integrationServiceEnvironmentName")]
        public Input<string>? IntegrationServiceEnvironmentName { get; set; }

        /// <summary>
        /// The resource location.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The integration service environment properties.
        /// </summary>
        [Input("properties")]
        public Input<Inputs.IntegrationServiceEnvironmentPropertiesArgs>? Properties { get; set; }

        /// <summary>
        /// The resource group.
        /// </summary>
        [Input("resourceGroup", required: true)]
        public Input<string> ResourceGroup { get; set; } = null!;

        /// <summary>
        /// The sku.
        /// </summary>
        [Input("sku")]
        public Input<Inputs.IntegrationServiceEnvironmentSkuArgs>? Sku { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// The resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public IntegrationServiceEnvironmentArgs()
        {
        }
        public static new IntegrationServiceEnvironmentArgs Empty => new IntegrationServiceEnvironmentArgs();
    }
}
