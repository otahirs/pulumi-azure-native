// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.EventGrid.V20211015Preview
{
    /// <summary>
    /// Partner configuration information
    /// 
    /// ## Example Usage
    /// ### PartnerConfigurations_CreateOrUpdate
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var partnerConfiguration = new AzureNative.EventGrid.V20211015Preview.PartnerConfiguration("partnerConfiguration", new()
    ///     {
    ///         PartnerAuthorization = new AzureNative.EventGrid.V20211015Preview.Inputs.PartnerAuthorizationArgs
    ///         {
    ///             AuthorizedPartnersList = new[]
    ///             {
    ///                 new AzureNative.EventGrid.V20211015Preview.Inputs.PartnerArgs
    ///                 {
    ///                     AuthorizationExpirationTimeInUtc = "2022-01-28T01:20:55.142Z",
    ///                     PartnerName = "Contoso.Finance",
    ///                     PartnerRegistrationImmutableId = "941892bc-f5d0-4d1c-8fb5-477570fc2b71",
    ///                 },
    ///                 new AzureNative.EventGrid.V20211015Preview.Inputs.PartnerArgs
    ///                 {
    ///                     AuthorizationExpirationTimeInUtc = "2022-02-20T01:00:00.142Z",
    ///                     PartnerName = "fabrikam.HR",
    ///                     PartnerRegistrationImmutableId = "5362bdb6-ce3e-4d0d-9a5b-3eb92c8aab38",
    ///                 },
    ///             },
    ///             DefaultMaximumExpirationTimeInDays = 10,
    ///         },
    ///         ResourceGroupName = "examplerg",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// 
    /// ## Import
    /// 
    /// An existing resource can be imported using its type token, name, and identifier, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure-native:eventgrid/v20211015preview:PartnerConfiguration default /subscriptions/5b4b650e-28b9-4790-b3ab-ddbd88d727c4/resourceGroups/examplerg/providers/Microsoft.EventGrid/partnerConfigurations/default 
    /// ```
    /// </summary>
    [AzureNativeResourceType("azure-native:eventgrid/v20211015preview:PartnerConfiguration")]
    public partial class PartnerConfiguration : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Location of the resource.
        /// </summary>
        [Output("location")]
        public Output<string?> Location { get; private set; } = null!;

        /// <summary>
        /// Name of the resource.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The details of authorized partners.
        /// </summary>
        [Output("partnerAuthorization")]
        public Output<Outputs.PartnerAuthorizationResponse?> PartnerAuthorization { get; private set; } = null!;

        /// <summary>
        /// Provisioning state of the partner configuration.
        /// </summary>
        [Output("provisioningState")]
        public Output<string?> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// The system metadata relating to partner configuration resource.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Tags of the resource.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Type of the resource.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a PartnerConfiguration resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PartnerConfiguration(string name, PartnerConfigurationArgs args, CustomResourceOptions? options = null)
            : base("azure-native:eventgrid/v20211015preview:PartnerConfiguration", name, args ?? new PartnerConfigurationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PartnerConfiguration(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:eventgrid/v20211015preview:PartnerConfiguration", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:eventgrid:PartnerConfiguration"},
                    new global::Pulumi.Alias { Type = "azure-native:eventgrid/v20220615:PartnerConfiguration"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PartnerConfiguration resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PartnerConfiguration Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new PartnerConfiguration(name, id, options);
        }
    }

    public sealed class PartnerConfigurationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Location of the resource.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The details of authorized partners.
        /// </summary>
        [Input("partnerAuthorization")]
        public Input<Inputs.PartnerAuthorizationArgs>? PartnerAuthorization { get; set; }

        /// <summary>
        /// Provisioning state of the partner configuration.
        /// </summary>
        [Input("provisioningState")]
        public InputUnion<string, Pulumi.AzureNative.EventGrid.V20211015Preview.PartnerConfigurationProvisioningState>? ProvisioningState { get; set; }

        /// <summary>
        /// The name of the resource group within the user's subscription.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Tags of the resource.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public PartnerConfigurationArgs()
        {
        }
        public static new PartnerConfigurationArgs Empty => new PartnerConfigurationArgs();
    }
}
