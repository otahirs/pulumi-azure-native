// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ConfidentialLedger.V20201201Preview
{
    /// <summary>
    /// Confidential Ledger. Contains the properties of Confidential Ledger Resource.
    /// 
    /// ## Example Usage
    /// ### ConfidentialLedgerCreate
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var ledger = new AzureNative.ConfidentialLedger.V20201201Preview.Ledger("ledger", new()
    ///     {
    ///         LedgerName = "DummyLedgerName",
    ///         Location = "WestUS",
    ///         Properties = new AzureNative.ConfidentialLedger.V20201201Preview.Inputs.LedgerPropertiesArgs
    ///         {
    ///             AadBasedSecurityPrincipals = new[]
    ///             {
    ///                 new AzureNative.ConfidentialLedger.V20201201Preview.Inputs.AADBasedSecurityPrincipalArgs
    ///                 {
    ///                     LedgerRoleName = "Administrator",
    ///                     PrincipalId = "34621747-6fc8-4771-a2eb-72f31c461f2e",
    ///                     TenantId = "bce123b9-2b7b-4975-8360-5ca0b9b1cd08",
    ///                 },
    ///             },
    ///             CertBasedSecurityPrincipals = new[]
    ///             {
    ///                 new AzureNative.ConfidentialLedger.V20201201Preview.Inputs.CertBasedSecurityPrincipalArgs
    ///                 {
    ///                     Cert = @"-----BEGIN CERTIFICATE-----
    /// MIIDBTCCAe2gAwIBAgIQXVogj9BAf49IpuOSIvztNDANBgkqhkiG9w0BAQsFADAtMSswKQYDVQQDEyJhY2NvdW50cy5hY2Nlc3Njb250cm9sLndpbmRvd3MubmV0MB4XDTIwMDMxNzAwMDAwMFoXDTI1MDMxNzAwMDAwMFowLTErMCkGA1UEAxMiYWNjb3VudHMuYWNjZXNzY29udHJvbC53aW5kb3dzLm5ldDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBANfLmdz9yIDskpZzrMXiDeVlCs75ZunrzwzBW5lz7UxdBjHu7Q9iT32otlBp++LOwBcKsVjuQ0GUbulX0FLsfLjEeCe58ZtSn//+6VRFSScg7i+WvDwEUWELR+vMPtCGcXBTpILEnYbSMz0No4+Jpkc1lyMIfDP/KSeqojo74xfW4RKtAgv39uwZ5Yz2hZ/IcWOvaQqMXp1lqhXLFIRWbwjLYYUbmwGwYpQ6++Cml0ucQoMkgYT88HpA/fzXQlLgrHamr3eE/lVp26ZWwfGLAvkdNBabQRSrk8k/c6BmY1mYpUFZo+795PI16mAdp1ioEwH8I5osis+/BR5GhPpwiA8CAwEAAaMhMB8wHQYDVR0OBBYEFF8MDGklOGhGNVJvsHHRCaqtzexcMA0GCSqGSIb3DQEBCwUAA4IBAQCKkegw/mdpCVl1lOpgU4G9RT+1gtcPqZK9kpimuDggSJju6KUQlOCi5/lIH5DCzpjFdmG17TjWVBNve5kowmrhLzovY0Ykk7+6hYTBK8dNNSmd4SK7zY++0aDIuOzHP2Cur+kgFC0gez50tPzotLDtMmp40gknXuzltwJfezNSw3gLgljDsGGcDIXK3qLSYh44qSuRGwulcN2EJUZBI9tIxoODpaWHIN8+z2uZvf8JBYFjA3+n9FRQn51X16CTcjq4QRTbNVpgVuQuyaYnEtx0ZnDvguB3RjGSPIXTRBkLl2x7e8/6uAZ6tchw8rhcOtPsFgJuoJokGjvcUSR/6Eqd
    /// -----END CERTIFICATE-----",
    ///                     LedgerRoleName = "Reader",
    ///                 },
    ///             },
    ///             LedgerStorageAccount = "dummyStorageAccount",
    ///             LedgerType = "Public",
    ///         },
    ///         ResourceGroupName = "DummyResourceGroupName",
    ///         Tags = 
    ///         {
    ///             { "additionalProps1", "additional properties" },
    ///         },
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// 
    /// ## Import
    /// 
    /// An existing resource can be imported using its type token, name, and identifier, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure-native:confidentialledger/v20201201preview:Ledger DummyLedgerName /subscriptions/00000000-0000-0000-0000-000000000001/resourceGroups/TestRG/providers/Microsoft.ConfidentialLedger/ledgers/DummyLedgerName 
    /// ```
    /// </summary>
    [AzureNativeResourceType("azure-native:confidentialledger/v20201201preview:Ledger")]
    public partial class Ledger : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Azure location where the Confidential Ledger is running.
        /// </summary>
        [Output("location")]
        public Output<string?> Location { get; private set; } = null!;

        /// <summary>
        /// Name of the Resource.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Properties of Confidential Ledger Resource.
        /// </summary>
        [Output("properties")]
        public Output<Outputs.LedgerPropertiesResponse> Properties { get; private set; } = null!;

        /// <summary>
        /// Metadata pertaining to creation and last modification of the resource
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// Additional tags for Confidential Ledger
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The type of the resource.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a Ledger resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Ledger(string name, LedgerArgs args, CustomResourceOptions? options = null)
            : base("azure-native:confidentialledger/v20201201preview:Ledger", name, args ?? new LedgerArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Ledger(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:confidentialledger/v20201201preview:Ledger", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:confidentialledger:Ledger"},
                    new global::Pulumi.Alias { Type = "azure-native:confidentialledger/v20210513preview:Ledger"},
                    new global::Pulumi.Alias { Type = "azure-native:confidentialledger/v20220513:Ledger"},
                    new global::Pulumi.Alias { Type = "azure-native:confidentialledger/v20220908preview:Ledger"},
                    new global::Pulumi.Alias { Type = "azure-native:confidentialledger/v20230126preview:Ledger"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Ledger resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Ledger Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Ledger(name, id, options);
        }
    }

    public sealed class LedgerArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of the Confidential Ledger
        /// </summary>
        [Input("ledgerName")]
        public Input<string>? LedgerName { get; set; }

        /// <summary>
        /// The Azure location where the Confidential Ledger is running.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Properties of Confidential Ledger Resource.
        /// </summary>
        [Input("properties")]
        public Input<Inputs.LedgerPropertiesArgs>? Properties { get; set; }

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Additional tags for Confidential Ledger
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public LedgerArgs()
        {
        }
        public static new LedgerArgs Empty => new LedgerArgs();
    }
}
