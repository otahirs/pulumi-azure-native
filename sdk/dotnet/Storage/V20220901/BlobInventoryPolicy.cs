// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Storage.V20220901
{
    /// <summary>
    /// The storage account blob inventory policy.
    /// 
    /// ## Example Usage
    /// ### StorageAccountSetBlobInventoryPolicy
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var blobInventoryPolicy = new AzureNative.Storage.V20220901.BlobInventoryPolicy("blobInventoryPolicy", new()
    ///     {
    ///         AccountName = "sto9699",
    ///         BlobInventoryPolicyName = "default",
    ///         Policy = new AzureNative.Storage.V20220901.Inputs.BlobInventoryPolicySchemaArgs
    ///         {
    ///             Enabled = true,
    ///             Rules = new[]
    ///             {
    ///                 new AzureNative.Storage.V20220901.Inputs.BlobInventoryPolicyRuleArgs
    ///                 {
    ///                     Definition = new AzureNative.Storage.V20220901.Inputs.BlobInventoryPolicyDefinitionArgs
    ///                     {
    ///                         Filters = new AzureNative.Storage.V20220901.Inputs.BlobInventoryPolicyFilterArgs
    ///                         {
    ///                             BlobTypes = new[]
    ///                             {
    ///                                 "blockBlob",
    ///                                 "appendBlob",
    ///                                 "pageBlob",
    ///                             },
    ///                             ExcludePrefix = new[]
    ///                             {
    ///                                 "excludeprefix1",
    ///                                 "excludeprefix2",
    ///                             },
    ///                             IncludeBlobVersions = true,
    ///                             IncludeSnapshots = true,
    ///                             PrefixMatch = new[]
    ///                             {
    ///                                 "inventoryprefix1",
    ///                                 "inventoryprefix2",
    ///                             },
    ///                         },
    ///                         Format = "Csv",
    ///                         ObjectType = "Blob",
    ///                         Schedule = "Daily",
    ///                         SchemaFields = new[]
    ///                         {
    ///                             "Name",
    ///                             "Creation-Time",
    ///                             "Last-Modified",
    ///                             "Content-Length",
    ///                             "Content-MD5",
    ///                             "BlobType",
    ///                             "AccessTier",
    ///                             "AccessTierChangeTime",
    ///                             "Snapshot",
    ///                             "VersionId",
    ///                             "IsCurrentVersion",
    ///                             "Metadata",
    ///                         },
    ///                     },
    ///                     Destination = "container1",
    ///                     Enabled = true,
    ///                     Name = "inventoryPolicyRule1",
    ///                 },
    ///                 new AzureNative.Storage.V20220901.Inputs.BlobInventoryPolicyRuleArgs
    ///                 {
    ///                     Definition = new AzureNative.Storage.V20220901.Inputs.BlobInventoryPolicyDefinitionArgs
    ///                     {
    ///                         Format = "Parquet",
    ///                         ObjectType = "Container",
    ///                         Schedule = "Weekly",
    ///                         SchemaFields = new[]
    ///                         {
    ///                             "Name",
    ///                             "Last-Modified",
    ///                             "Metadata",
    ///                             "LeaseStatus",
    ///                             "LeaseState",
    ///                             "LeaseDuration",
    ///                             "PublicAccess",
    ///                             "HasImmutabilityPolicy",
    ///                             "HasLegalHold",
    ///                         },
    ///                     },
    ///                     Destination = "container2",
    ///                     Enabled = true,
    ///                     Name = "inventoryPolicyRule2",
    ///                 },
    ///             },
    ///             Type = "Inventory",
    ///         },
    ///         ResourceGroupName = "res7687",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### StorageAccountSetBlobInventoryPolicyIncludeDeleteAndNewSchemaForHnsAccount
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var blobInventoryPolicy = new AzureNative.Storage.V20220901.BlobInventoryPolicy("blobInventoryPolicy", new()
    ///     {
    ///         AccountName = "sto9699",
    ///         BlobInventoryPolicyName = "default",
    ///         Policy = new AzureNative.Storage.V20220901.Inputs.BlobInventoryPolicySchemaArgs
    ///         {
    ///             Enabled = true,
    ///             Rules = new[]
    ///             {
    ///                 new AzureNative.Storage.V20220901.Inputs.BlobInventoryPolicyRuleArgs
    ///                 {
    ///                     Definition = new AzureNative.Storage.V20220901.Inputs.BlobInventoryPolicyDefinitionArgs
    ///                     {
    ///                         Filters = new AzureNative.Storage.V20220901.Inputs.BlobInventoryPolicyFilterArgs
    ///                         {
    ///                             BlobTypes = new[]
    ///                             {
    ///                                 "blockBlob",
    ///                                 "appendBlob",
    ///                                 "pageBlob",
    ///                             },
    ///                             ExcludePrefix = new[]
    ///                             {
    ///                                 "excludeprefix1",
    ///                                 "excludeprefix2",
    ///                             },
    ///                             IncludeBlobVersions = true,
    ///                             IncludeDeleted = true,
    ///                             IncludeSnapshots = true,
    ///                             PrefixMatch = new[]
    ///                             {
    ///                                 "inventoryprefix1",
    ///                                 "inventoryprefix2",
    ///                             },
    ///                         },
    ///                         Format = "Csv",
    ///                         ObjectType = "Blob",
    ///                         Schedule = "Daily",
    ///                         SchemaFields = new[]
    ///                         {
    ///                             "Name",
    ///                             "Creation-Time",
    ///                             "Last-Modified",
    ///                             "Content-Length",
    ///                             "Content-MD5",
    ///                             "BlobType",
    ///                             "AccessTier",
    ///                             "AccessTierChangeTime",
    ///                             "Snapshot",
    ///                             "VersionId",
    ///                             "IsCurrentVersion",
    ///                             "ContentType",
    ///                             "ContentEncoding",
    ///                             "ContentLanguage",
    ///                             "ContentCRC64",
    ///                             "CacheControl",
    ///                             "Metadata",
    ///                             "DeletionId",
    ///                             "Deleted",
    ///                             "DeletedTime",
    ///                             "RemainingRetentionDays",
    ///                         },
    ///                     },
    ///                     Destination = "container1",
    ///                     Enabled = true,
    ///                     Name = "inventoryPolicyRule1",
    ///                 },
    ///                 new AzureNative.Storage.V20220901.Inputs.BlobInventoryPolicyRuleArgs
    ///                 {
    ///                     Definition = new AzureNative.Storage.V20220901.Inputs.BlobInventoryPolicyDefinitionArgs
    ///                     {
    ///                         Format = "Parquet",
    ///                         ObjectType = "Container",
    ///                         Schedule = "Weekly",
    ///                         SchemaFields = new[]
    ///                         {
    ///                             "Name",
    ///                             "Last-Modified",
    ///                             "Metadata",
    ///                             "LeaseStatus",
    ///                             "LeaseState",
    ///                             "LeaseDuration",
    ///                             "PublicAccess",
    ///                             "HasImmutabilityPolicy",
    ///                             "HasLegalHold",
    ///                             "Etag",
    ///                             "DefaultEncryptionScope",
    ///                             "DenyEncryptionScopeOverride",
    ///                             "ImmutableStorageWithVersioningEnabled",
    ///                             "Deleted",
    ///                             "Version",
    ///                             "DeletedTime",
    ///                             "RemainingRetentionDays",
    ///                         },
    ///                     },
    ///                     Destination = "container2",
    ///                     Enabled = true,
    ///                     Name = "inventoryPolicyRule2",
    ///                 },
    ///             },
    ///             Type = "Inventory",
    ///         },
    ///         ResourceGroupName = "res7687",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### StorageAccountSetBlobInventoryPolicyIncludeDeleteAndNewSchemaForNonHnsAccount
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var blobInventoryPolicy = new AzureNative.Storage.V20220901.BlobInventoryPolicy("blobInventoryPolicy", new()
    ///     {
    ///         AccountName = "sto9699",
    ///         BlobInventoryPolicyName = "default",
    ///         Policy = new AzureNative.Storage.V20220901.Inputs.BlobInventoryPolicySchemaArgs
    ///         {
    ///             Enabled = true,
    ///             Rules = new[]
    ///             {
    ///                 new AzureNative.Storage.V20220901.Inputs.BlobInventoryPolicyRuleArgs
    ///                 {
    ///                     Definition = new AzureNative.Storage.V20220901.Inputs.BlobInventoryPolicyDefinitionArgs
    ///                     {
    ///                         Filters = new AzureNative.Storage.V20220901.Inputs.BlobInventoryPolicyFilterArgs
    ///                         {
    ///                             BlobTypes = new[]
    ///                             {
    ///                                 "blockBlob",
    ///                                 "appendBlob",
    ///                                 "pageBlob",
    ///                             },
    ///                             ExcludePrefix = new[]
    ///                             {
    ///                                 "excludeprefix1",
    ///                                 "excludeprefix2",
    ///                             },
    ///                             IncludeBlobVersions = true,
    ///                             IncludeDeleted = true,
    ///                             IncludeSnapshots = true,
    ///                             PrefixMatch = new[]
    ///                             {
    ///                                 "inventoryprefix1",
    ///                                 "inventoryprefix2",
    ///                             },
    ///                         },
    ///                         Format = "Csv",
    ///                         ObjectType = "Blob",
    ///                         Schedule = "Daily",
    ///                         SchemaFields = new[]
    ///                         {
    ///                             "Name",
    ///                             "Creation-Time",
    ///                             "Last-Modified",
    ///                             "Content-Length",
    ///                             "Content-MD5",
    ///                             "BlobType",
    ///                             "AccessTier",
    ///                             "AccessTierChangeTime",
    ///                             "Snapshot",
    ///                             "VersionId",
    ///                             "IsCurrentVersion",
    ///                             "Tags",
    ///                             "ContentType",
    ///                             "ContentEncoding",
    ///                             "ContentLanguage",
    ///                             "ContentCRC64",
    ///                             "CacheControl",
    ///                             "Metadata",
    ///                             "Deleted",
    ///                             "RemainingRetentionDays",
    ///                         },
    ///                     },
    ///                     Destination = "container1",
    ///                     Enabled = true,
    ///                     Name = "inventoryPolicyRule1",
    ///                 },
    ///                 new AzureNative.Storage.V20220901.Inputs.BlobInventoryPolicyRuleArgs
    ///                 {
    ///                     Definition = new AzureNative.Storage.V20220901.Inputs.BlobInventoryPolicyDefinitionArgs
    ///                     {
    ///                         Format = "Parquet",
    ///                         ObjectType = "Container",
    ///                         Schedule = "Weekly",
    ///                         SchemaFields = new[]
    ///                         {
    ///                             "Name",
    ///                             "Last-Modified",
    ///                             "Metadata",
    ///                             "LeaseStatus",
    ///                             "LeaseState",
    ///                             "LeaseDuration",
    ///                             "PublicAccess",
    ///                             "HasImmutabilityPolicy",
    ///                             "HasLegalHold",
    ///                             "Etag",
    ///                             "DefaultEncryptionScope",
    ///                             "DenyEncryptionScopeOverride",
    ///                             "ImmutableStorageWithVersioningEnabled",
    ///                             "Deleted",
    ///                             "Version",
    ///                             "DeletedTime",
    ///                             "RemainingRetentionDays",
    ///                         },
    ///                     },
    ///                     Destination = "container2",
    ///                     Enabled = true,
    ///                     Name = "inventoryPolicyRule2",
    ///                 },
    ///             },
    ///             Type = "Inventory",
    ///         },
    ///         ResourceGroupName = "res7687",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// 
    /// ## Import
    /// 
    /// An existing resource can be imported using its type token, name, and identifier, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure-native:storage/v20220901:BlobInventoryPolicy DefaultInventoryPolicy /subscriptions/{subscription-id}/resourceGroups/res7687/providers/Microsoft.Storage/storageAccounts/sto9699/inventoryPolicies/default 
    /// ```
    /// </summary>
    [AzureNativeResourceType("azure-native:storage/v20220901:BlobInventoryPolicy")]
    public partial class BlobInventoryPolicy : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Returns the last modified date and time of the blob inventory policy.
        /// </summary>
        [Output("lastModifiedTime")]
        public Output<string> LastModifiedTime { get; private set; } = null!;

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The storage account blob inventory policy object. It is composed of policy rules.
        /// </summary>
        [Output("policy")]
        public Output<Outputs.BlobInventoryPolicySchemaResponse> Policy { get; private set; } = null!;

        /// <summary>
        /// Metadata pertaining to creation and last modification of the resource.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a BlobInventoryPolicy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BlobInventoryPolicy(string name, BlobInventoryPolicyArgs args, CustomResourceOptions? options = null)
            : base("azure-native:storage/v20220901:BlobInventoryPolicy", name, args ?? new BlobInventoryPolicyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private BlobInventoryPolicy(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:storage/v20220901:BlobInventoryPolicy", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:storage:BlobInventoryPolicy"},
                    new global::Pulumi.Alias { Type = "azure-native:storage/v20190601:BlobInventoryPolicy"},
                    new global::Pulumi.Alias { Type = "azure-native:storage/v20200801preview:BlobInventoryPolicy"},
                    new global::Pulumi.Alias { Type = "azure-native:storage/v20210101:BlobInventoryPolicy"},
                    new global::Pulumi.Alias { Type = "azure-native:storage/v20210201:BlobInventoryPolicy"},
                    new global::Pulumi.Alias { Type = "azure-native:storage/v20210401:BlobInventoryPolicy"},
                    new global::Pulumi.Alias { Type = "azure-native:storage/v20210601:BlobInventoryPolicy"},
                    new global::Pulumi.Alias { Type = "azure-native:storage/v20210801:BlobInventoryPolicy"},
                    new global::Pulumi.Alias { Type = "azure-native:storage/v20210901:BlobInventoryPolicy"},
                    new global::Pulumi.Alias { Type = "azure-native:storage/v20220501:BlobInventoryPolicy"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BlobInventoryPolicy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BlobInventoryPolicy Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new BlobInventoryPolicy(name, id, options);
        }
    }

    public sealed class BlobInventoryPolicyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
        /// </summary>
        [Input("accountName", required: true)]
        public Input<string> AccountName { get; set; } = null!;

        /// <summary>
        /// The name of the storage account blob inventory policy. It should always be 'default'
        /// </summary>
        [Input("blobInventoryPolicyName")]
        public Input<string>? BlobInventoryPolicyName { get; set; }

        /// <summary>
        /// The storage account blob inventory policy object. It is composed of policy rules.
        /// </summary>
        [Input("policy", required: true)]
        public Input<Inputs.BlobInventoryPolicySchemaArgs> Policy { get; set; } = null!;

        /// <summary>
        /// The name of the resource group within the user's subscription. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        public BlobInventoryPolicyArgs()
        {
        }
        public static new BlobInventoryPolicyArgs Empty => new BlobInventoryPolicyArgs();
    }
}
