// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.AppPlatform.V20230301Preview
{
    /// <summary>
    /// Deployment resource payload
    /// 
    /// ## Example Usage
    /// ### Deployments_CreateOrUpdate
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var deployment = new AzureNative.AppPlatform.V20230301Preview.Deployment("deployment", new()
    ///     {
    ///         AppName = "myapp",
    ///         DeploymentName = "mydeployment",
    ///         Properties = new AzureNative.AppPlatform.V20230301Preview.Inputs.DeploymentResourcePropertiesArgs
    ///         {
    ///             DeploymentSettings = new AzureNative.AppPlatform.V20230301Preview.Inputs.DeploymentSettingsArgs
    ///             {
    ///                 AddonConfigs = 
    ///                 {
    ///                     { "ApplicationConfigurationService", 
    ///                     {
    ///                         { "patterns", new[]
    ///                         {
    ///                             "mypattern",
    ///                         } },
    ///                     } },
    ///                 },
    ///                 EnvironmentVariables = 
    ///                 {
    ///                     { "env", "test" },
    ///                 },
    ///                 LivenessProbe = new AzureNative.AppPlatform.V20230301Preview.Inputs.ProbeArgs
    ///                 {
    ///                     DisableProbe = false,
    ///                     FailureThreshold = 3,
    ///                     InitialDelaySeconds = 30,
    ///                     PeriodSeconds = 10,
    ///                     ProbeAction = new AzureNative.AppPlatform.V20230301Preview.Inputs.HTTPGetActionArgs
    ///                     {
    ///                         Path = "/health",
    ///                         Scheme = "HTTP",
    ///                         Type = "HTTPGetAction",
    ///                     },
    ///                 },
    ///                 ReadinessProbe = new AzureNative.AppPlatform.V20230301Preview.Inputs.ProbeArgs
    ///                 {
    ///                     DisableProbe = false,
    ///                     FailureThreshold = 3,
    ///                     InitialDelaySeconds = 30,
    ///                     PeriodSeconds = 10,
    ///                     ProbeAction = new AzureNative.AppPlatform.V20230301Preview.Inputs.HTTPGetActionArgs
    ///                     {
    ///                         Path = "/health",
    ///                         Scheme = "HTTP",
    ///                         Type = "HTTPGetAction",
    ///                     },
    ///                 },
    ///                 ResourceRequests = new AzureNative.AppPlatform.V20230301Preview.Inputs.ResourceRequestsArgs
    ///                 {
    ///                     Cpu = "1000m",
    ///                     Memory = "3Gi",
    ///                 },
    ///                 TerminationGracePeriodSeconds = 30,
    ///             },
    ///             Source = new AzureNative.AppPlatform.V20230301Preview.Inputs.SourceUploadedUserSourceInfoArgs
    ///             {
    ///                 ArtifactSelector = "sub-module-1",
    ///                 RelativePath = "resources/a172cedcae47474b615c54d510a5d84a8dea3032e958587430b413538be3f333-2019082605-e3095339-1723-44b7-8b5e-31b1003978bc",
    ///                 Type = "Source",
    ///                 Version = "1.0",
    ///             },
    ///         },
    ///         ResourceGroupName = "myResourceGroup",
    ///         ServiceName = "myservice",
    ///         Sku = new AzureNative.AppPlatform.V20230301Preview.Inputs.SkuArgs
    ///         {
    ///             Capacity = 1,
    ///             Name = "S0",
    ///             Tier = "Standard",
    ///         },
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Deployments_CreateOrUpdate_CustomContainer
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var deployment = new AzureNative.AppPlatform.V20230301Preview.Deployment("deployment", new()
    ///     {
    ///         AppName = "myapp",
    ///         DeploymentName = "mydeployment",
    ///         Properties = new AzureNative.AppPlatform.V20230301Preview.Inputs.DeploymentResourcePropertiesArgs
    ///         {
    ///             DeploymentSettings = new AzureNative.AppPlatform.V20230301Preview.Inputs.DeploymentSettingsArgs
    ///             {
    ///                 EnvironmentVariables = 
    ///                 {
    ///                     { "env", "test" },
    ///                 },
    ///                 LivenessProbe = new AzureNative.AppPlatform.V20230301Preview.Inputs.ProbeArgs
    ///                 {
    ///                     DisableProbe = false,
    ///                     FailureThreshold = 3,
    ///                     InitialDelaySeconds = 30,
    ///                     PeriodSeconds = 10,
    ///                     ProbeAction = new AzureNative.AppPlatform.V20230301Preview.Inputs.HTTPGetActionArgs
    ///                     {
    ///                         Path = "/health",
    ///                         Scheme = "HTTP",
    ///                         Type = "HTTPGetAction",
    ///                     },
    ///                 },
    ///                 ReadinessProbe = new AzureNative.AppPlatform.V20230301Preview.Inputs.ProbeArgs
    ///                 {
    ///                     DisableProbe = false,
    ///                     FailureThreshold = 3,
    ///                     InitialDelaySeconds = 30,
    ///                     PeriodSeconds = 10,
    ///                     ProbeAction = new AzureNative.AppPlatform.V20230301Preview.Inputs.HTTPGetActionArgs
    ///                     {
    ///                         Path = "/health",
    ///                         Scheme = "HTTP",
    ///                         Type = "HTTPGetAction",
    ///                     },
    ///                 },
    ///                 ResourceRequests = new AzureNative.AppPlatform.V20230301Preview.Inputs.ResourceRequestsArgs
    ///                 {
    ///                     Cpu = "1000m",
    ///                     Memory = "3Gi",
    ///                 },
    ///                 TerminationGracePeriodSeconds = 30,
    ///             },
    ///             Source = new AzureNative.AppPlatform.V20230301Preview.Inputs.CustomContainerUserSourceInfoArgs
    ///             {
    ///                 CustomContainer = new AzureNative.AppPlatform.V20230301Preview.Inputs.CustomContainerArgs
    ///                 {
    ///                     Args = new[]
    ///                     {
    ///                         "-c",
    ///                         "while true; do echo hello; sleep 10;done",
    ///                     },
    ///                     Command = new[]
    ///                     {
    ///                         "/bin/sh",
    ///                     },
    ///                     ContainerImage = "myContainerImage:v1",
    ///                     ImageRegistryCredential = new AzureNative.AppPlatform.V20230301Preview.Inputs.ImageRegistryCredentialArgs
    ///                     {
    ///                         Password = "myPassword",
    ///                         Username = "myUsername",
    ///                     },
    ///                     LanguageFramework = "springboot",
    ///                     Server = "myacr.azurecr.io",
    ///                 },
    ///                 Type = "Container",
    ///             },
    ///         },
    ///         ResourceGroupName = "myResourceGroup",
    ///         ServiceName = "myservice",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// 
    /// ## Import
    /// 
    /// An existing resource can be imported using its type token, name, and identifier, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure-native:appplatform/v20230301preview:Deployment mydeployment /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice/apps/myapp/deployments/mydeployment 
    /// ```
    /// </summary>
    [AzureNativeResourceType("azure-native:appplatform/v20230301preview:Deployment")]
    public partial class Deployment : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The name of the resource.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Properties of the Deployment resource
        /// </summary>
        [Output("properties")]
        public Output<Outputs.DeploymentResourcePropertiesResponse> Properties { get; private set; } = null!;

        /// <summary>
        /// Sku of the Deployment resource
        /// </summary>
        [Output("sku")]
        public Output<Outputs.SkuResponse?> Sku { get; private set; } = null!;

        /// <summary>
        /// Metadata pertaining to creation and last modification of the resource.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// The type of the resource.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a Deployment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Deployment(string name, DeploymentArgs args, CustomResourceOptions? options = null)
            : base("azure-native:appplatform/v20230301preview:Deployment", name, args ?? new DeploymentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Deployment(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:appplatform/v20230301preview:Deployment", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:appplatform:Deployment"},
                    new global::Pulumi.Alias { Type = "azure-native:appplatform/v20200701:Deployment"},
                    new global::Pulumi.Alias { Type = "azure-native:appplatform/v20201101preview:Deployment"},
                    new global::Pulumi.Alias { Type = "azure-native:appplatform/v20210601preview:Deployment"},
                    new global::Pulumi.Alias { Type = "azure-native:appplatform/v20210901preview:Deployment"},
                    new global::Pulumi.Alias { Type = "azure-native:appplatform/v20220101preview:Deployment"},
                    new global::Pulumi.Alias { Type = "azure-native:appplatform/v20220301preview:Deployment"},
                    new global::Pulumi.Alias { Type = "azure-native:appplatform/v20220401:Deployment"},
                    new global::Pulumi.Alias { Type = "azure-native:appplatform/v20220501preview:Deployment"},
                    new global::Pulumi.Alias { Type = "azure-native:appplatform/v20220901preview:Deployment"},
                    new global::Pulumi.Alias { Type = "azure-native:appplatform/v20221101preview:Deployment"},
                    new global::Pulumi.Alias { Type = "azure-native:appplatform/v20221201:Deployment"},
                    new global::Pulumi.Alias { Type = "azure-native:appplatform/v20230101preview:Deployment"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Deployment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Deployment Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Deployment(name, id, options);
        }
    }

    public sealed class DeploymentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the App resource.
        /// </summary>
        [Input("appName", required: true)]
        public Input<string> AppName { get; set; } = null!;

        /// <summary>
        /// The name of the Deployment resource.
        /// </summary>
        [Input("deploymentName")]
        public Input<string>? DeploymentName { get; set; }

        /// <summary>
        /// Properties of the Deployment resource
        /// </summary>
        [Input("properties")]
        public Input<Inputs.DeploymentResourcePropertiesArgs>? Properties { get; set; }

        /// <summary>
        /// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the Service resource.
        /// </summary>
        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        /// <summary>
        /// Sku of the Deployment resource
        /// </summary>
        [Input("sku")]
        public Input<Inputs.SkuArgs>? Sku { get; set; }

        public DeploymentArgs()
        {
        }
        public static new DeploymentArgs Empty => new DeploymentArgs();
    }
}
