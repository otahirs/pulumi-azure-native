// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Compute
{
    /// <summary>
    /// Specifies information about the gallery image version that you want to create or update.
    /// API Version: 2022-03-03.
    /// Previous API Version: 2020-09-30. See https://github.com/pulumi/pulumi-azure-native/discussions/TODO for information on migrating from v1 to v2 of the provider.
    /// 
    /// ## Example Usage
    /// ### Create or update a simple Gallery Image Version using VM as source.
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var galleryImageVersion = new AzureNative.Compute.GalleryImageVersion("galleryImageVersion", new()
    ///     {
    ///         GalleryImageName = "myGalleryImageName",
    ///         GalleryImageVersionName = "1.0.0",
    ///         GalleryName = "myGalleryName",
    ///         Location = "West US",
    ///         PublishingProfile = new AzureNative.Compute.Inputs.GalleryImageVersionPublishingProfileArgs
    ///         {
    ///             TargetRegions = new[]
    ///             {
    ///                 new AzureNative.Compute.Inputs.TargetRegionArgs
    ///                 {
    ///                     Encryption = new AzureNative.Compute.Inputs.EncryptionImagesArgs
    ///                     {
    ///                         DataDiskImages = new[]
    ///                         {
    ///                             new AzureNative.Compute.Inputs.DataDiskImageEncryptionArgs
    ///                             {
    ///                                 DiskEncryptionSetId = "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myOtherWestUSDiskEncryptionSet",
    ///                                 Lun = 0,
    ///                             },
    ///                             new AzureNative.Compute.Inputs.DataDiskImageEncryptionArgs
    ///                             {
    ///                                 DiskEncryptionSetId = "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myWestUSDiskEncryptionSet",
    ///                                 Lun = 1,
    ///                             },
    ///                         },
    ///                         OsDiskImage = new AzureNative.Compute.Inputs.OSDiskImageEncryptionArgs
    ///                         {
    ///                             DiskEncryptionSetId = "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myWestUSDiskEncryptionSet",
    ///                         },
    ///                     },
    ///                     ExcludeFromLatest = false,
    ///                     Name = "West US",
    ///                     RegionalReplicaCount = 2,
    ///                 },
    ///                 new AzureNative.Compute.Inputs.TargetRegionArgs
    ///                 {
    ///                     Encryption = new AzureNative.Compute.Inputs.EncryptionImagesArgs
    ///                     {
    ///                         DataDiskImages = new[]
    ///                         {
    ///                             new AzureNative.Compute.Inputs.DataDiskImageEncryptionArgs
    ///                             {
    ///                                 DiskEncryptionSetId = "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myOtherEastUSDiskEncryptionSet",
    ///                                 Lun = 0,
    ///                             },
    ///                             new AzureNative.Compute.Inputs.DataDiskImageEncryptionArgs
    ///                             {
    ///                                 DiskEncryptionSetId = "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myEastUSDiskEncryptionSet",
    ///                                 Lun = 1,
    ///                             },
    ///                         },
    ///                         OsDiskImage = new AzureNative.Compute.Inputs.OSDiskImageEncryptionArgs
    ///                         {
    ///                             DiskEncryptionSetId = "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myEastUSDiskEncryptionSet",
    ///                         },
    ///                     },
    ///                     ExcludeFromLatest = false,
    ///                     Name = "East US",
    ///                     RegionalReplicaCount = 2,
    ///                     StorageAccountType = "Standard_ZRS",
    ///                 },
    ///             },
    ///         },
    ///         ResourceGroupName = "myResourceGroup",
    ///         SafetyProfile = new AzureNative.Compute.Inputs.GalleryImageVersionSafetyProfileArgs
    ///         {
    ///             AllowDeletionOfReplicatedLocations = false,
    ///         },
    ///         StorageProfile = new AzureNative.Compute.Inputs.GalleryImageVersionStorageProfileArgs
    ///         {
    ///             Source = new AzureNative.Compute.Inputs.GalleryArtifactVersionFullSourceArgs
    ///             {
    ///                 Id = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/virtualMachines/{vmName}",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Create or update a simple Gallery Image Version using community gallery image as source.
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var galleryImageVersion = new AzureNative.Compute.GalleryImageVersion("galleryImageVersion", new()
    ///     {
    ///         GalleryImageName = "myGalleryImageName",
    ///         GalleryImageVersionName = "1.0.0",
    ///         GalleryName = "myGalleryName",
    ///         Location = "West US",
    ///         PublishingProfile = new AzureNative.Compute.Inputs.GalleryImageVersionPublishingProfileArgs
    ///         {
    ///             TargetRegions = new[]
    ///             {
    ///                 new AzureNative.Compute.Inputs.TargetRegionArgs
    ///                 {
    ///                     Encryption = new AzureNative.Compute.Inputs.EncryptionImagesArgs
    ///                     {
    ///                         DataDiskImages = new[]
    ///                         {
    ///                             new AzureNative.Compute.Inputs.DataDiskImageEncryptionArgs
    ///                             {
    ///                                 DiskEncryptionSetId = "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myOtherWestUSDiskEncryptionSet",
    ///                                 Lun = 0,
    ///                             },
    ///                             new AzureNative.Compute.Inputs.DataDiskImageEncryptionArgs
    ///                             {
    ///                                 DiskEncryptionSetId = "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myWestUSDiskEncryptionSet",
    ///                                 Lun = 1,
    ///                             },
    ///                         },
    ///                         OsDiskImage = new AzureNative.Compute.Inputs.OSDiskImageEncryptionArgs
    ///                         {
    ///                             DiskEncryptionSetId = "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myWestUSDiskEncryptionSet",
    ///                         },
    ///                     },
    ///                     ExcludeFromLatest = false,
    ///                     Name = "West US",
    ///                     RegionalReplicaCount = 1,
    ///                 },
    ///                 new AzureNative.Compute.Inputs.TargetRegionArgs
    ///                 {
    ///                     Encryption = new AzureNative.Compute.Inputs.EncryptionImagesArgs
    ///                     {
    ///                         DataDiskImages = new[]
    ///                         {
    ///                             new AzureNative.Compute.Inputs.DataDiskImageEncryptionArgs
    ///                             {
    ///                                 DiskEncryptionSetId = "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myOtherEastUSDiskEncryptionSet",
    ///                                 Lun = 0,
    ///                             },
    ///                             new AzureNative.Compute.Inputs.DataDiskImageEncryptionArgs
    ///                             {
    ///                                 DiskEncryptionSetId = "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myEastUSDiskEncryptionSet",
    ///                                 Lun = 1,
    ///                             },
    ///                         },
    ///                         OsDiskImage = new AzureNative.Compute.Inputs.OSDiskImageEncryptionArgs
    ///                         {
    ///                             DiskEncryptionSetId = "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myEastUSDiskEncryptionSet",
    ///                         },
    ///                     },
    ///                     ExcludeFromLatest = false,
    ///                     Name = "East US",
    ///                     RegionalReplicaCount = 2,
    ///                     StorageAccountType = "Standard_ZRS",
    ///                 },
    ///             },
    ///         },
    ///         ResourceGroupName = "myResourceGroup",
    ///         SafetyProfile = new AzureNative.Compute.Inputs.GalleryImageVersionSafetyProfileArgs
    ///         {
    ///             AllowDeletionOfReplicatedLocations = false,
    ///         },
    ///         StorageProfile = new AzureNative.Compute.Inputs.GalleryImageVersionStorageProfileArgs
    ///         {
    ///             Source = new AzureNative.Compute.Inputs.GalleryArtifactVersionFullSourceArgs
    ///             {
    ///                 CommunityGalleryImageId = "/communityGalleries/{communityGalleryName}/images/{communityGalleryImageName}",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Create or update a simple Gallery Image Version using managed image as source.
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var galleryImageVersion = new AzureNative.Compute.GalleryImageVersion("galleryImageVersion", new()
    ///     {
    ///         GalleryImageName = "myGalleryImageName",
    ///         GalleryImageVersionName = "1.0.0",
    ///         GalleryName = "myGalleryName",
    ///         Location = "West US",
    ///         PublishingProfile = new AzureNative.Compute.Inputs.GalleryImageVersionPublishingProfileArgs
    ///         {
    ///             TargetRegions = new[]
    ///             {
    ///                 new AzureNative.Compute.Inputs.TargetRegionArgs
    ///                 {
    ///                     Encryption = new AzureNative.Compute.Inputs.EncryptionImagesArgs
    ///                     {
    ///                         DataDiskImages = new[]
    ///                         {
    ///                             new AzureNative.Compute.Inputs.DataDiskImageEncryptionArgs
    ///                             {
    ///                                 DiskEncryptionSetId = "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myOtherWestUSDiskEncryptionSet",
    ///                                 Lun = 0,
    ///                             },
    ///                             new AzureNative.Compute.Inputs.DataDiskImageEncryptionArgs
    ///                             {
    ///                                 DiskEncryptionSetId = "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myWestUSDiskEncryptionSet",
    ///                                 Lun = 1,
    ///                             },
    ///                         },
    ///                         OsDiskImage = new AzureNative.Compute.Inputs.OSDiskImageEncryptionArgs
    ///                         {
    ///                             DiskEncryptionSetId = "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myWestUSDiskEncryptionSet",
    ///                         },
    ///                     },
    ///                     ExcludeFromLatest = false,
    ///                     Name = "West US",
    ///                     RegionalReplicaCount = 1,
    ///                 },
    ///                 new AzureNative.Compute.Inputs.TargetRegionArgs
    ///                 {
    ///                     Encryption = new AzureNative.Compute.Inputs.EncryptionImagesArgs
    ///                     {
    ///                         DataDiskImages = new[]
    ///                         {
    ///                             new AzureNative.Compute.Inputs.DataDiskImageEncryptionArgs
    ///                             {
    ///                                 DiskEncryptionSetId = "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myOtherEastUSDiskEncryptionSet",
    ///                                 Lun = 0,
    ///                             },
    ///                             new AzureNative.Compute.Inputs.DataDiskImageEncryptionArgs
    ///                             {
    ///                                 DiskEncryptionSetId = "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myEastUSDiskEncryptionSet",
    ///                                 Lun = 1,
    ///                             },
    ///                         },
    ///                         OsDiskImage = new AzureNative.Compute.Inputs.OSDiskImageEncryptionArgs
    ///                         {
    ///                             DiskEncryptionSetId = "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myEastUSDiskEncryptionSet",
    ///                         },
    ///                     },
    ///                     ExcludeFromLatest = false,
    ///                     Name = "East US",
    ///                     RegionalReplicaCount = 2,
    ///                     StorageAccountType = "Standard_ZRS",
    ///                 },
    ///             },
    ///         },
    ///         ResourceGroupName = "myResourceGroup",
    ///         SafetyProfile = new AzureNative.Compute.Inputs.GalleryImageVersionSafetyProfileArgs
    ///         {
    ///             AllowDeletionOfReplicatedLocations = false,
    ///         },
    ///         StorageProfile = new AzureNative.Compute.Inputs.GalleryImageVersionStorageProfileArgs
    ///         {
    ///             Source = new AzureNative.Compute.Inputs.GalleryArtifactVersionFullSourceArgs
    ///             {
    ///                 Id = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/images/{imageName}",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Create or update a simple Gallery Image Version using mix of disks and snapshots as a source.
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var galleryImageVersion = new AzureNative.Compute.GalleryImageVersion("galleryImageVersion", new()
    ///     {
    ///         GalleryImageName = "myGalleryImageName",
    ///         GalleryImageVersionName = "1.0.0",
    ///         GalleryName = "myGalleryName",
    ///         Location = "West US",
    ///         PublishingProfile = new AzureNative.Compute.Inputs.GalleryImageVersionPublishingProfileArgs
    ///         {
    ///             TargetRegions = new[]
    ///             {
    ///                 new AzureNative.Compute.Inputs.TargetRegionArgs
    ///                 {
    ///                     Encryption = new AzureNative.Compute.Inputs.EncryptionImagesArgs
    ///                     {
    ///                         DataDiskImages = new[]
    ///                         {
    ///                             new AzureNative.Compute.Inputs.DataDiskImageEncryptionArgs
    ///                             {
    ///                                 DiskEncryptionSetId = "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myWestUSDiskEncryptionSet",
    ///                                 Lun = 1,
    ///                             },
    ///                         },
    ///                         OsDiskImage = new AzureNative.Compute.Inputs.OSDiskImageEncryptionArgs
    ///                         {
    ///                             DiskEncryptionSetId = "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myWestUSDiskEncryptionSet",
    ///                         },
    ///                     },
    ///                     ExcludeFromLatest = false,
    ///                     Name = "West US",
    ///                     RegionalReplicaCount = 1,
    ///                 },
    ///                 new AzureNative.Compute.Inputs.TargetRegionArgs
    ///                 {
    ///                     Encryption = new AzureNative.Compute.Inputs.EncryptionImagesArgs
    ///                     {
    ///                         DataDiskImages = new[]
    ///                         {
    ///                             new AzureNative.Compute.Inputs.DataDiskImageEncryptionArgs
    ///                             {
    ///                                 DiskEncryptionSetId = "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myEastUSDiskEncryptionSet",
    ///                                 Lun = 1,
    ///                             },
    ///                         },
    ///                         OsDiskImage = new AzureNative.Compute.Inputs.OSDiskImageEncryptionArgs
    ///                         {
    ///                             DiskEncryptionSetId = "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myEastUSDiskEncryptionSet",
    ///                         },
    ///                     },
    ///                     ExcludeFromLatest = false,
    ///                     Name = "East US",
    ///                     RegionalReplicaCount = 2,
    ///                     StorageAccountType = "Standard_ZRS",
    ///                 },
    ///             },
    ///         },
    ///         ResourceGroupName = "myResourceGroup",
    ///         SafetyProfile = new AzureNative.Compute.Inputs.GalleryImageVersionSafetyProfileArgs
    ///         {
    ///             AllowDeletionOfReplicatedLocations = false,
    ///         },
    ///         StorageProfile = new AzureNative.Compute.Inputs.GalleryImageVersionStorageProfileArgs
    ///         {
    ///             DataDiskImages = new[]
    ///             {
    ///                 new AzureNative.Compute.Inputs.GalleryDataDiskImageArgs
    ///                 {
    ///                     HostCaching = AzureNative.Compute.HostCaching.None,
    ///                     Lun = 1,
    ///                     Source = new AzureNative.Compute.Inputs.GalleryDiskImageSourceArgs
    ///                     {
    ///                         Id = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/disks/{dataDiskName}",
    ///                     },
    ///                 },
    ///             },
    ///             OsDiskImage = new AzureNative.Compute.Inputs.GalleryOSDiskImageArgs
    ///             {
    ///                 HostCaching = AzureNative.Compute.HostCaching.ReadOnly,
    ///                 Source = new AzureNative.Compute.Inputs.GalleryDiskImageSourceArgs
    ///                 {
    ///                     Id = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/snapshots/{osSnapshotName}",
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Create or update a simple Gallery Image Version using shallow replication mode.
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var galleryImageVersion = new AzureNative.Compute.GalleryImageVersion("galleryImageVersion", new()
    ///     {
    ///         GalleryImageName = "myGalleryImageName",
    ///         GalleryImageVersionName = "1.0.0",
    ///         GalleryName = "myGalleryName",
    ///         Location = "West US",
    ///         PublishingProfile = new AzureNative.Compute.Inputs.GalleryImageVersionPublishingProfileArgs
    ///         {
    ///             ReplicationMode = "Shallow",
    ///             TargetRegions = new[]
    ///             {
    ///                 new AzureNative.Compute.Inputs.TargetRegionArgs
    ///                 {
    ///                     ExcludeFromLatest = false,
    ///                     Name = "West US",
    ///                     RegionalReplicaCount = 1,
    ///                 },
    ///             },
    ///         },
    ///         ResourceGroupName = "myResourceGroup",
    ///         SafetyProfile = new AzureNative.Compute.Inputs.GalleryImageVersionSafetyProfileArgs
    ///         {
    ///             AllowDeletionOfReplicatedLocations = false,
    ///         },
    ///         StorageProfile = new AzureNative.Compute.Inputs.GalleryImageVersionStorageProfileArgs
    ///         {
    ///             Source = new AzureNative.Compute.Inputs.GalleryArtifactVersionFullSourceArgs
    ///             {
    ///                 Id = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/images/{imageName}",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Create or update a simple Gallery Image Version using shared image as source.
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var galleryImageVersion = new AzureNative.Compute.GalleryImageVersion("galleryImageVersion", new()
    ///     {
    ///         GalleryImageName = "myGalleryImageName",
    ///         GalleryImageVersionName = "1.0.0",
    ///         GalleryName = "myGalleryName",
    ///         Location = "West US",
    ///         PublishingProfile = new AzureNative.Compute.Inputs.GalleryImageVersionPublishingProfileArgs
    ///         {
    ///             TargetRegions = new[]
    ///             {
    ///                 new AzureNative.Compute.Inputs.TargetRegionArgs
    ///                 {
    ///                     Encryption = new AzureNative.Compute.Inputs.EncryptionImagesArgs
    ///                     {
    ///                         DataDiskImages = new[]
    ///                         {
    ///                             new AzureNative.Compute.Inputs.DataDiskImageEncryptionArgs
    ///                             {
    ///                                 DiskEncryptionSetId = "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myOtherWestUSDiskEncryptionSet",
    ///                                 Lun = 0,
    ///                             },
    ///                             new AzureNative.Compute.Inputs.DataDiskImageEncryptionArgs
    ///                             {
    ///                                 DiskEncryptionSetId = "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myWestUSDiskEncryptionSet",
    ///                                 Lun = 1,
    ///                             },
    ///                         },
    ///                         OsDiskImage = new AzureNative.Compute.Inputs.OSDiskImageEncryptionArgs
    ///                         {
    ///                             DiskEncryptionSetId = "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myWestUSDiskEncryptionSet",
    ///                         },
    ///                     },
    ///                     ExcludeFromLatest = false,
    ///                     Name = "West US",
    ///                     RegionalReplicaCount = 1,
    ///                 },
    ///                 new AzureNative.Compute.Inputs.TargetRegionArgs
    ///                 {
    ///                     Encryption = new AzureNative.Compute.Inputs.EncryptionImagesArgs
    ///                     {
    ///                         DataDiskImages = new[]
    ///                         {
    ///                             new AzureNative.Compute.Inputs.DataDiskImageEncryptionArgs
    ///                             {
    ///                                 DiskEncryptionSetId = "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myOtherEastUSDiskEncryptionSet",
    ///                                 Lun = 0,
    ///                             },
    ///                             new AzureNative.Compute.Inputs.DataDiskImageEncryptionArgs
    ///                             {
    ///                                 DiskEncryptionSetId = "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myEastUSDiskEncryptionSet",
    ///                                 Lun = 1,
    ///                             },
    ///                         },
    ///                         OsDiskImage = new AzureNative.Compute.Inputs.OSDiskImageEncryptionArgs
    ///                         {
    ///                             DiskEncryptionSetId = "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myEastUSDiskEncryptionSet",
    ///                         },
    ///                     },
    ///                     ExcludeFromLatest = false,
    ///                     Name = "East US",
    ///                     RegionalReplicaCount = 2,
    ///                     StorageAccountType = "Standard_ZRS",
    ///                 },
    ///             },
    ///         },
    ///         ResourceGroupName = "myResourceGroup",
    ///         SafetyProfile = new AzureNative.Compute.Inputs.GalleryImageVersionSafetyProfileArgs
    ///         {
    ///             AllowDeletionOfReplicatedLocations = false,
    ///         },
    ///         StorageProfile = new AzureNative.Compute.Inputs.GalleryImageVersionStorageProfileArgs
    ///         {
    ///             Source = new AzureNative.Compute.Inputs.GalleryArtifactVersionFullSourceArgs
    ///             {
    ///                 Id = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/galleries/{galleryName}/images/{imageDefinitionName}/versions/{versionName}",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Create or update a simple Gallery Image Version using vhd as a source.
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var galleryImageVersion = new AzureNative.Compute.GalleryImageVersion("galleryImageVersion", new()
    ///     {
    ///         GalleryImageName = "myGalleryImageName",
    ///         GalleryImageVersionName = "1.0.0",
    ///         GalleryName = "myGalleryName",
    ///         Location = "West US",
    ///         PublishingProfile = new AzureNative.Compute.Inputs.GalleryImageVersionPublishingProfileArgs
    ///         {
    ///             TargetRegions = new[]
    ///             {
    ///                 new AzureNative.Compute.Inputs.TargetRegionArgs
    ///                 {
    ///                     Encryption = new AzureNative.Compute.Inputs.EncryptionImagesArgs
    ///                     {
    ///                         DataDiskImages = new[]
    ///                         {
    ///                             new AzureNative.Compute.Inputs.DataDiskImageEncryptionArgs
    ///                             {
    ///                                 DiskEncryptionSetId = "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myOtherDiskEncryptionSet",
    ///                                 Lun = 1,
    ///                             },
    ///                         },
    ///                         OsDiskImage = new AzureNative.Compute.Inputs.OSDiskImageEncryptionArgs
    ///                         {
    ///                             DiskEncryptionSetId = "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myDiskEncryptionSet",
    ///                         },
    ///                     },
    ///                     ExcludeFromLatest = false,
    ///                     Name = "West US",
    ///                     RegionalReplicaCount = 1,
    ///                 },
    ///                 new AzureNative.Compute.Inputs.TargetRegionArgs
    ///                 {
    ///                     ExcludeFromLatest = false,
    ///                     Name = "East US",
    ///                     RegionalReplicaCount = 2,
    ///                     StorageAccountType = "Standard_ZRS",
    ///                 },
    ///             },
    ///         },
    ///         ResourceGroupName = "myResourceGroup",
    ///         SafetyProfile = new AzureNative.Compute.Inputs.GalleryImageVersionSafetyProfileArgs
    ///         {
    ///             AllowDeletionOfReplicatedLocations = false,
    ///         },
    ///         StorageProfile = new AzureNative.Compute.Inputs.GalleryImageVersionStorageProfileArgs
    ///         {
    ///             DataDiskImages = new[]
    ///             {
    ///                 new AzureNative.Compute.Inputs.GalleryDataDiskImageArgs
    ///                 {
    ///                     HostCaching = AzureNative.Compute.HostCaching.None,
    ///                     Lun = 1,
    ///                     Source = new AzureNative.Compute.Inputs.GalleryDiskImageSourceArgs
    ///                     {
    ///                         Id = "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Storage/storageAccounts/{storageAccount}",
    ///                         Uri = "https://gallerysourcencus.blob.core.windows.net/myvhds/Windows-Server-2012-R2-20171216-en.us-128GB.vhd",
    ///                     },
    ///                 },
    ///             },
    ///             OsDiskImage = new AzureNative.Compute.Inputs.GalleryOSDiskImageArgs
    ///             {
    ///                 HostCaching = AzureNative.Compute.HostCaching.ReadOnly,
    ///                 Source = new AzureNative.Compute.Inputs.GalleryDiskImageSourceArgs
    ///                 {
    ///                     Id = "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Storage/storageAccounts/{storageAccount}",
    ///                     Uri = "https://gallerysourcencus.blob.core.windows.net/myvhds/Windows-Server-2012-R2-20171216-en.us-128GB.vhd",
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Create or update a simple gallery image version with target extended locations specified.
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var galleryImageVersion = new AzureNative.Compute.GalleryImageVersion("galleryImageVersion", new()
    ///     {
    ///         GalleryImageName = "myGalleryImageName",
    ///         GalleryImageVersionName = "1.0.0",
    ///         GalleryName = "myGalleryName",
    ///         Location = "West US",
    ///         PublishingProfile = new AzureNative.Compute.Inputs.GalleryImageVersionPublishingProfileArgs
    ///         {
    ///             TargetRegions = new[]
    ///             {
    ///                 new AzureNative.Compute.Inputs.TargetRegionArgs
    ///                 {
    ///                     Encryption = new AzureNative.Compute.Inputs.EncryptionImagesArgs
    ///                     {
    ///                         DataDiskImages = new[]
    ///                         {
    ///                             new AzureNative.Compute.Inputs.DataDiskImageEncryptionArgs
    ///                             {
    ///                                 DiskEncryptionSetId = "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myOtherWestUSDiskEncryptionSet",
    ///                                 Lun = 0,
    ///                             },
    ///                             new AzureNative.Compute.Inputs.DataDiskImageEncryptionArgs
    ///                             {
    ///                                 DiskEncryptionSetId = "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myWestUSDiskEncryptionSet",
    ///                                 Lun = 1,
    ///                             },
    ///                         },
    ///                         OsDiskImage = new AzureNative.Compute.Inputs.OSDiskImageEncryptionArgs
    ///                         {
    ///                             DiskEncryptionSetId = "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myWestUSDiskEncryptionSet",
    ///                         },
    ///                     },
    ///                     ExcludeFromLatest = false,
    ///                     Name = "West US",
    ///                     RegionalReplicaCount = 1,
    ///                 },
    ///                 new AzureNative.Compute.Inputs.TargetRegionArgs
    ///                 {
    ///                     Encryption = new AzureNative.Compute.Inputs.EncryptionImagesArgs
    ///                     {
    ///                         DataDiskImages = new[]
    ///                         {
    ///                             new AzureNative.Compute.Inputs.DataDiskImageEncryptionArgs
    ///                             {
    ///                                 DiskEncryptionSetId = "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myOtherEastUSDiskEncryptionSet",
    ///                                 Lun = 0,
    ///                             },
    ///                             new AzureNative.Compute.Inputs.DataDiskImageEncryptionArgs
    ///                             {
    ///                                 DiskEncryptionSetId = "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myEastUSDiskEncryptionSet",
    ///                                 Lun = 1,
    ///                             },
    ///                         },
    ///                         OsDiskImage = new AzureNative.Compute.Inputs.OSDiskImageEncryptionArgs
    ///                         {
    ///                             DiskEncryptionSetId = "/subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSet/myEastUSDiskEncryptionSet",
    ///                         },
    ///                     },
    ///                     ExcludeFromLatest = false,
    ///                     Name = "East US",
    ///                     RegionalReplicaCount = 2,
    ///                     StorageAccountType = "Standard_ZRS",
    ///                 },
    ///             },
    ///         },
    ///         ResourceGroupName = "myResourceGroup",
    ///         SafetyProfile = new AzureNative.Compute.Inputs.GalleryImageVersionSafetyProfileArgs
    ///         {
    ///             AllowDeletionOfReplicatedLocations = false,
    ///         },
    ///         StorageProfile = new AzureNative.Compute.Inputs.GalleryImageVersionStorageProfileArgs
    ///         {
    ///             Source = new AzureNative.Compute.Inputs.GalleryArtifactVersionFullSourceArgs
    ///             {
    ///                 Id = "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/images/{imageName}",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// 
    /// ## Import
    /// 
    /// An existing resource can be imported using its type token, name, and identifier, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure-native:compute:GalleryImageVersion 1.0.0 /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{galleryImageName}/versions/{galleryImageVersionName} 
    /// ```
    /// </summary>
    [AzureNativeResourceType("azure-native:compute:GalleryImageVersion")]
    public partial class GalleryImageVersion : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Resource location
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Resource name
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The provisioning state, which only appears in the response.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// The publishing profile of a gallery image Version.
        /// </summary>
        [Output("publishingProfile")]
        public Output<Outputs.GalleryImageVersionPublishingProfileResponse?> PublishingProfile { get; private set; } = null!;

        /// <summary>
        /// This is the replication status of the gallery image version.
        /// </summary>
        [Output("replicationStatus")]
        public Output<Outputs.ReplicationStatusResponse> ReplicationStatus { get; private set; } = null!;

        /// <summary>
        /// This is the safety profile of the Gallery Image Version.
        /// </summary>
        [Output("safetyProfile")]
        public Output<Outputs.GalleryImageVersionSafetyProfileResponse?> SafetyProfile { get; private set; } = null!;

        /// <summary>
        /// This is the storage profile of a Gallery Image Version.
        /// </summary>
        [Output("storageProfile")]
        public Output<Outputs.GalleryImageVersionStorageProfileResponse> StorageProfile { get; private set; } = null!;

        /// <summary>
        /// Resource tags
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Resource type
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a GalleryImageVersion resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public GalleryImageVersion(string name, GalleryImageVersionArgs args, CustomResourceOptions? options = null)
            : base("azure-native:compute:GalleryImageVersion", name, args ?? new GalleryImageVersionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private GalleryImageVersion(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:compute:GalleryImageVersion", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:compute/v20180601:GalleryImageVersion"},
                    new global::Pulumi.Alias { Type = "azure-native:compute/v20190301:GalleryImageVersion"},
                    new global::Pulumi.Alias { Type = "azure-native:compute/v20190701:GalleryImageVersion"},
                    new global::Pulumi.Alias { Type = "azure-native:compute/v20191201:GalleryImageVersion"},
                    new global::Pulumi.Alias { Type = "azure-native:compute/v20200930:GalleryImageVersion"},
                    new global::Pulumi.Alias { Type = "azure-native:compute/v20210701:GalleryImageVersion"},
                    new global::Pulumi.Alias { Type = "azure-native:compute/v20211001:GalleryImageVersion"},
                    new global::Pulumi.Alias { Type = "azure-native:compute/v20220103:GalleryImageVersion"},
                    new global::Pulumi.Alias { Type = "azure-native:compute/v20220303:GalleryImageVersion"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing GalleryImageVersion resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static GalleryImageVersion Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new GalleryImageVersion(name, id, options);
        }
    }

    public sealed class GalleryImageVersionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the gallery image definition in which the Image Version is to be created.
        /// </summary>
        [Input("galleryImageName", required: true)]
        public Input<string> GalleryImageName { get; set; } = null!;

        /// <summary>
        /// The name of the gallery image version to be created. Needs to follow semantic version name pattern: The allowed characters are digit and period. Digits must be within the range of a 32-bit integer. Format: &lt;MajorVersion&gt;.&lt;MinorVersion&gt;.&lt;Patch&gt;
        /// </summary>
        [Input("galleryImageVersionName")]
        public Input<string>? GalleryImageVersionName { get; set; }

        /// <summary>
        /// The name of the Shared Image Gallery in which the Image Definition resides.
        /// </summary>
        [Input("galleryName", required: true)]
        public Input<string> GalleryName { get; set; } = null!;

        /// <summary>
        /// Resource location
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The publishing profile of a gallery image Version.
        /// </summary>
        [Input("publishingProfile")]
        public Input<Inputs.GalleryImageVersionPublishingProfileArgs>? PublishingProfile { get; set; }

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// This is the safety profile of the Gallery Image Version.
        /// </summary>
        [Input("safetyProfile")]
        public Input<Inputs.GalleryImageVersionSafetyProfileArgs>? SafetyProfile { get; set; }

        /// <summary>
        /// This is the storage profile of a Gallery Image Version.
        /// </summary>
        [Input("storageProfile", required: true)]
        public Input<Inputs.GalleryImageVersionStorageProfileArgs> StorageProfile { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public GalleryImageVersionArgs()
        {
        }
        public static new GalleryImageVersionArgs Empty => new GalleryImageVersionArgs();
    }
}
