// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.Compute.V20210301
{
    /// <summary>
    /// Describes a Virtual Machine Scale Set.
    /// 
    /// ## Example Usage
    /// ### Create a custom-image scale set from an unmanaged generalized os image.
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var virtualMachineScaleSet = new AzureNative.Compute.V20210301.VirtualMachineScaleSet("virtualMachineScaleSet", new()
    ///     {
    ///         Location = "westus",
    ///         Overprovision = true,
    ///         ResourceGroupName = "myResourceGroup",
    ///         Sku = new AzureNative.Compute.V20210301.Inputs.SkuArgs
    ///         {
    ///             Capacity = 3,
    ///             Name = "Standard_D1_v2",
    ///             Tier = "Standard",
    ///         },
    ///         UpgradePolicy = new AzureNative.Compute.V20210301.Inputs.UpgradePolicyArgs
    ///         {
    ///             Mode = AzureNative.Compute.V20210301.UpgradeMode.Manual,
    ///         },
    ///         VirtualMachineProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetVMProfileArgs
    ///         {
    ///             NetworkProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetNetworkProfileArgs
    ///             {
    ///                 NetworkInterfaceConfigurations = new[]
    ///                 {
    ///                     new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetNetworkConfigurationArgs
    ///                     {
    ///                         EnableIPForwarding = true,
    ///                         IpConfigurations = new[]
    ///                         {
    ///                             new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetIPConfigurationArgs
    ///                             {
    ///                                 Name = "{vmss-name}",
    ///                                 Subnet = new AzureNative.Compute.V20210301.Inputs.ApiEntityReferenceArgs
    ///                                 {
    ///                                     Id = "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/{existing-virtual-network-name}/subnets/{existing-subnet-name}",
    ///                                 },
    ///                             },
    ///                         },
    ///                         Name = "{vmss-name}",
    ///                         Primary = true,
    ///                     },
    ///                 },
    ///             },
    ///             OsProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetOSProfileArgs
    ///             {
    ///                 AdminPassword = "{your-password}",
    ///                 AdminUsername = "{your-username}",
    ///                 ComputerNamePrefix = "{vmss-name}",
    ///             },
    ///             StorageProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetStorageProfileArgs
    ///             {
    ///                 OsDisk = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetOSDiskArgs
    ///                 {
    ///                     Caching = AzureNative.Compute.V20210301.CachingTypes.ReadWrite,
    ///                     CreateOption = "FromImage",
    ///                     Image = new AzureNative.Compute.V20210301.Inputs.VirtualHardDiskArgs
    ///                     {
    ///                         Uri = "http://{existing-storage-account-name}.blob.core.windows.net/{existing-container-name}/{existing-generalized-os-image-blob-name}.vhd",
    ///                     },
    ///                     Name = "osDisk",
    ///                 },
    ///             },
    ///         },
    ///         VmScaleSetName = "{vmss-name}",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Create a platform-image scale set with unmanaged os disks.
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var virtualMachineScaleSet = new AzureNative.Compute.V20210301.VirtualMachineScaleSet("virtualMachineScaleSet", new()
    ///     {
    ///         Location = "westus",
    ///         Overprovision = true,
    ///         ResourceGroupName = "myResourceGroup",
    ///         Sku = new AzureNative.Compute.V20210301.Inputs.SkuArgs
    ///         {
    ///             Capacity = 3,
    ///             Name = "Standard_D1_v2",
    ///             Tier = "Standard",
    ///         },
    ///         UpgradePolicy = new AzureNative.Compute.V20210301.Inputs.UpgradePolicyArgs
    ///         {
    ///             Mode = AzureNative.Compute.V20210301.UpgradeMode.Manual,
    ///         },
    ///         VirtualMachineProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetVMProfileArgs
    ///         {
    ///             NetworkProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetNetworkProfileArgs
    ///             {
    ///                 NetworkInterfaceConfigurations = new[]
    ///                 {
    ///                     new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetNetworkConfigurationArgs
    ///                     {
    ///                         EnableIPForwarding = true,
    ///                         IpConfigurations = new[]
    ///                         {
    ///                             new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetIPConfigurationArgs
    ///                             {
    ///                                 Name = "{vmss-name}",
    ///                                 Subnet = new AzureNative.Compute.V20210301.Inputs.ApiEntityReferenceArgs
    ///                                 {
    ///                                     Id = "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/{existing-virtual-network-name}/subnets/{existing-subnet-name}",
    ///                                 },
    ///                             },
    ///                         },
    ///                         Name = "{vmss-name}",
    ///                         Primary = true,
    ///                     },
    ///                 },
    ///             },
    ///             OsProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetOSProfileArgs
    ///             {
    ///                 AdminPassword = "{your-password}",
    ///                 AdminUsername = "{your-username}",
    ///                 ComputerNamePrefix = "{vmss-name}",
    ///             },
    ///             StorageProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetStorageProfileArgs
    ///             {
    ///                 ImageReference = new AzureNative.Compute.V20210301.Inputs.ImageReferenceArgs
    ///                 {
    ///                     Offer = "WindowsServer",
    ///                     Publisher = "MicrosoftWindowsServer",
    ///                     Sku = "2016-Datacenter",
    ///                     Version = "latest",
    ///                 },
    ///                 OsDisk = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetOSDiskArgs
    ///                 {
    ///                     Caching = AzureNative.Compute.V20210301.CachingTypes.ReadWrite,
    ///                     CreateOption = "FromImage",
    ///                     Name = "osDisk",
    ///                     VhdContainers = new[]
    ///                     {
    ///                         "http://{existing-storage-account-name-0}.blob.core.windows.net/vhdContainer",
    ///                         "http://{existing-storage-account-name-1}.blob.core.windows.net/vhdContainer",
    ///                         "http://{existing-storage-account-name-2}.blob.core.windows.net/vhdContainer",
    ///                         "http://{existing-storage-account-name-3}.blob.core.windows.net/vhdContainer",
    ///                         "http://{existing-storage-account-name-4}.blob.core.windows.net/vhdContainer",
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///         VmScaleSetName = "{vmss-name}",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Create a scale set from a custom image.
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var virtualMachineScaleSet = new AzureNative.Compute.V20210301.VirtualMachineScaleSet("virtualMachineScaleSet", new()
    ///     {
    ///         Location = "westus",
    ///         Overprovision = true,
    ///         ResourceGroupName = "myResourceGroup",
    ///         Sku = new AzureNative.Compute.V20210301.Inputs.SkuArgs
    ///         {
    ///             Capacity = 3,
    ///             Name = "Standard_D1_v2",
    ///             Tier = "Standard",
    ///         },
    ///         UpgradePolicy = new AzureNative.Compute.V20210301.Inputs.UpgradePolicyArgs
    ///         {
    ///             Mode = AzureNative.Compute.V20210301.UpgradeMode.Manual,
    ///         },
    ///         VirtualMachineProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetVMProfileArgs
    ///         {
    ///             NetworkProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetNetworkProfileArgs
    ///             {
    ///                 NetworkInterfaceConfigurations = new[]
    ///                 {
    ///                     new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetNetworkConfigurationArgs
    ///                     {
    ///                         EnableIPForwarding = true,
    ///                         IpConfigurations = new[]
    ///                         {
    ///                             new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetIPConfigurationArgs
    ///                             {
    ///                                 Name = "{vmss-name}",
    ///                                 Subnet = new AzureNative.Compute.V20210301.Inputs.ApiEntityReferenceArgs
    ///                                 {
    ///                                     Id = "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/{existing-virtual-network-name}/subnets/{existing-subnet-name}",
    ///                                 },
    ///                             },
    ///                         },
    ///                         Name = "{vmss-name}",
    ///                         Primary = true,
    ///                     },
    ///                 },
    ///             },
    ///             OsProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetOSProfileArgs
    ///             {
    ///                 AdminPassword = "{your-password}",
    ///                 AdminUsername = "{your-username}",
    ///                 ComputerNamePrefix = "{vmss-name}",
    ///             },
    ///             StorageProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetStorageProfileArgs
    ///             {
    ///                 ImageReference = new AzureNative.Compute.V20210301.Inputs.ImageReferenceArgs
    ///                 {
    ///                     Id = "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/images/{existing-custom-image-name}",
    ///                 },
    ///                 OsDisk = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetOSDiskArgs
    ///                 {
    ///                     Caching = AzureNative.Compute.V20210301.CachingTypes.ReadWrite,
    ///                     CreateOption = "FromImage",
    ///                     ManagedDisk = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetManagedDiskParametersArgs
    ///                     {
    ///                         StorageAccountType = "Standard_LRS",
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///         VmScaleSetName = "{vmss-name}",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Create a scale set from a generalized shared image.
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var virtualMachineScaleSet = new AzureNative.Compute.V20210301.VirtualMachineScaleSet("virtualMachineScaleSet", new()
    ///     {
    ///         Location = "westus",
    ///         Overprovision = true,
    ///         ResourceGroupName = "myResourceGroup",
    ///         Sku = new AzureNative.Compute.V20210301.Inputs.SkuArgs
    ///         {
    ///             Capacity = 3,
    ///             Name = "Standard_D1_v2",
    ///             Tier = "Standard",
    ///         },
    ///         UpgradePolicy = new AzureNative.Compute.V20210301.Inputs.UpgradePolicyArgs
    ///         {
    ///             Mode = AzureNative.Compute.V20210301.UpgradeMode.Manual,
    ///         },
    ///         VirtualMachineProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetVMProfileArgs
    ///         {
    ///             NetworkProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetNetworkProfileArgs
    ///             {
    ///                 NetworkInterfaceConfigurations = new[]
    ///                 {
    ///                     new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetNetworkConfigurationArgs
    ///                     {
    ///                         EnableIPForwarding = true,
    ///                         IpConfigurations = new[]
    ///                         {
    ///                             new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetIPConfigurationArgs
    ///                             {
    ///                                 Name = "{vmss-name}",
    ///                                 Subnet = new AzureNative.Compute.V20210301.Inputs.ApiEntityReferenceArgs
    ///                                 {
    ///                                     Id = "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/{existing-virtual-network-name}/subnets/{existing-subnet-name}",
    ///                                 },
    ///                             },
    ///                         },
    ///                         Name = "{vmss-name}",
    ///                         Primary = true,
    ///                     },
    ///                 },
    ///             },
    ///             OsProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetOSProfileArgs
    ///             {
    ///                 AdminPassword = "{your-password}",
    ///                 AdminUsername = "{your-username}",
    ///                 ComputerNamePrefix = "{vmss-name}",
    ///             },
    ///             StorageProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetStorageProfileArgs
    ///             {
    ///                 ImageReference = new AzureNative.Compute.V20210301.Inputs.ImageReferenceArgs
    ///                 {
    ///                     Id = "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/galleries/mySharedGallery/images/mySharedImage",
    ///                 },
    ///                 OsDisk = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetOSDiskArgs
    ///                 {
    ///                     Caching = AzureNative.Compute.V20210301.CachingTypes.ReadWrite,
    ///                     CreateOption = "FromImage",
    ///                     ManagedDisk = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetManagedDiskParametersArgs
    ///                     {
    ///                         StorageAccountType = "Standard_LRS",
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///         VmScaleSetName = "{vmss-name}",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Create a scale set from a specialized shared image.
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var virtualMachineScaleSet = new AzureNative.Compute.V20210301.VirtualMachineScaleSet("virtualMachineScaleSet", new()
    ///     {
    ///         Location = "westus",
    ///         Overprovision = true,
    ///         ResourceGroupName = "myResourceGroup",
    ///         Sku = new AzureNative.Compute.V20210301.Inputs.SkuArgs
    ///         {
    ///             Capacity = 3,
    ///             Name = "Standard_D1_v2",
    ///             Tier = "Standard",
    ///         },
    ///         UpgradePolicy = new AzureNative.Compute.V20210301.Inputs.UpgradePolicyArgs
    ///         {
    ///             Mode = AzureNative.Compute.V20210301.UpgradeMode.Manual,
    ///         },
    ///         VirtualMachineProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetVMProfileArgs
    ///         {
    ///             NetworkProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetNetworkProfileArgs
    ///             {
    ///                 NetworkInterfaceConfigurations = new[]
    ///                 {
    ///                     new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetNetworkConfigurationArgs
    ///                     {
    ///                         EnableIPForwarding = true,
    ///                         IpConfigurations = new[]
    ///                         {
    ///                             new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetIPConfigurationArgs
    ///                             {
    ///                                 Name = "{vmss-name}",
    ///                                 Subnet = new AzureNative.Compute.V20210301.Inputs.ApiEntityReferenceArgs
    ///                                 {
    ///                                     Id = "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/{existing-virtual-network-name}/subnets/{existing-subnet-name}",
    ///                                 },
    ///                             },
    ///                         },
    ///                         Name = "{vmss-name}",
    ///                         Primary = true,
    ///                     },
    ///                 },
    ///             },
    ///             StorageProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetStorageProfileArgs
    ///             {
    ///                 ImageReference = new AzureNative.Compute.V20210301.Inputs.ImageReferenceArgs
    ///                 {
    ///                     Id = "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/galleries/mySharedGallery/images/mySharedImage",
    ///                 },
    ///                 OsDisk = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetOSDiskArgs
    ///                 {
    ///                     Caching = AzureNative.Compute.V20210301.CachingTypes.ReadWrite,
    ///                     CreateOption = "FromImage",
    ///                     ManagedDisk = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetManagedDiskParametersArgs
    ///                     {
    ///                         StorageAccountType = "Standard_LRS",
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///         VmScaleSetName = "{vmss-name}",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Create a scale set with DiskEncryptionSet resource in os disk and data disk.
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var virtualMachineScaleSet = new AzureNative.Compute.V20210301.VirtualMachineScaleSet("virtualMachineScaleSet", new()
    ///     {
    ///         Location = "westus",
    ///         Overprovision = true,
    ///         ResourceGroupName = "myResourceGroup",
    ///         Sku = new AzureNative.Compute.V20210301.Inputs.SkuArgs
    ///         {
    ///             Capacity = 3,
    ///             Name = "Standard_DS1_v2",
    ///             Tier = "Standard",
    ///         },
    ///         UpgradePolicy = new AzureNative.Compute.V20210301.Inputs.UpgradePolicyArgs
    ///         {
    ///             Mode = AzureNative.Compute.V20210301.UpgradeMode.Manual,
    ///         },
    ///         VirtualMachineProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetVMProfileArgs
    ///         {
    ///             NetworkProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetNetworkProfileArgs
    ///             {
    ///                 NetworkInterfaceConfigurations = new[]
    ///                 {
    ///                     new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetNetworkConfigurationArgs
    ///                     {
    ///                         EnableIPForwarding = true,
    ///                         IpConfigurations = new[]
    ///                         {
    ///                             new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetIPConfigurationArgs
    ///                             {
    ///                                 Name = "{vmss-name}",
    ///                                 Subnet = new AzureNative.Compute.V20210301.Inputs.ApiEntityReferenceArgs
    ///                                 {
    ///                                     Id = "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/{existing-virtual-network-name}/subnets/{existing-subnet-name}",
    ///                                 },
    ///                             },
    ///                         },
    ///                         Name = "{vmss-name}",
    ///                         Primary = true,
    ///                     },
    ///                 },
    ///             },
    ///             OsProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetOSProfileArgs
    ///             {
    ///                 AdminPassword = "{your-password}",
    ///                 AdminUsername = "{your-username}",
    ///                 ComputerNamePrefix = "{vmss-name}",
    ///             },
    ///             StorageProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetStorageProfileArgs
    ///             {
    ///                 DataDisks = new[]
    ///                 {
    ///                     new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetDataDiskArgs
    ///                     {
    ///                         Caching = AzureNative.Compute.V20210301.CachingTypes.ReadWrite,
    ///                         CreateOption = "Empty",
    ///                         DiskSizeGB = 1023,
    ///                         Lun = 0,
    ///                         ManagedDisk = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetManagedDiskParametersArgs
    ///                         {
    ///                             DiskEncryptionSet = new AzureNative.Compute.V20210301.Inputs.DiskEncryptionSetParametersArgs
    ///                             {
    ///                                 Id = "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSets/{existing-diskEncryptionSet-name}",
    ///                             },
    ///                             StorageAccountType = "Standard_LRS",
    ///                         },
    ///                     },
    ///                 },
    ///                 ImageReference = new AzureNative.Compute.V20210301.Inputs.ImageReferenceArgs
    ///                 {
    ///                     Id = "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/images/{existing-custom-image-name}",
    ///                 },
    ///                 OsDisk = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetOSDiskArgs
    ///                 {
    ///                     Caching = AzureNative.Compute.V20210301.CachingTypes.ReadWrite,
    ///                     CreateOption = "FromImage",
    ///                     ManagedDisk = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetManagedDiskParametersArgs
    ///                     {
    ///                         DiskEncryptionSet = new AzureNative.Compute.V20210301.Inputs.DiskEncryptionSetParametersArgs
    ///                         {
    ///                             Id = "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSets/{existing-diskEncryptionSet-name}",
    ///                         },
    ///                         StorageAccountType = "Standard_LRS",
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///         VmScaleSetName = "{vmss-name}",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Create a scale set with Fpga Network Interfaces.
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var virtualMachineScaleSet = new AzureNative.Compute.V20210301.VirtualMachineScaleSet("virtualMachineScaleSet", new()
    ///     {
    ///         Location = "westus",
    ///         Overprovision = true,
    ///         ResourceGroupName = "myResourceGroup",
    ///         Sku = new AzureNative.Compute.V20210301.Inputs.SkuArgs
    ///         {
    ///             Capacity = 3,
    ///             Name = "Standard_D1_v2",
    ///             Tier = "Standard",
    ///         },
    ///         UpgradePolicy = new AzureNative.Compute.V20210301.Inputs.UpgradePolicyArgs
    ///         {
    ///             Mode = AzureNative.Compute.V20210301.UpgradeMode.Manual,
    ///         },
    ///         VirtualMachineProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetVMProfileArgs
    ///         {
    ///             NetworkProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetNetworkProfileArgs
    ///             {
    ///                 NetworkInterfaceConfigurations = new[]
    ///                 {
    ///                     new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetNetworkConfigurationArgs
    ///                     {
    ///                         EnableIPForwarding = true,
    ///                         IpConfigurations = new[]
    ///                         {
    ///                             new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetIPConfigurationArgs
    ///                             {
    ///                                 Name = "{vmss-name}",
    ///                                 Subnet = new AzureNative.Compute.V20210301.Inputs.ApiEntityReferenceArgs
    ///                                 {
    ///                                     Id = "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/{existing-virtual-network-name}/subnets/{existing-subnet-name}",
    ///                                 },
    ///                             },
    ///                         },
    ///                         Name = "{vmss-name}",
    ///                         Primary = true,
    ///                     },
    ///                     new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetNetworkConfigurationArgs
    ///                     {
    ///                         EnableAcceleratedNetworking = false,
    ///                         EnableFpga = true,
    ///                         EnableIPForwarding = false,
    ///                         IpConfigurations = new[]
    ///                         {
    ///                             new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetIPConfigurationArgs
    ///                             {
    ///                                 Name = "{fpgaNic-Name}",
    ///                                 Primary = true,
    ///                                 PrivateIPAddressVersion = "IPv4",
    ///                                 Subnet = new AzureNative.Compute.V20210301.Inputs.ApiEntityReferenceArgs
    ///                                 {
    ///                                     Id = "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/{existing-virtual-network-name}/subnets/{existing-fpga-subnet-name}",
    ///                                 },
    ///                             },
    ///                         },
    ///                         Name = "{fpgaNic-Name}",
    ///                         Primary = false,
    ///                     },
    ///                 },
    ///             },
    ///             OsProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetOSProfileArgs
    ///             {
    ///                 AdminPassword = "{your-password}",
    ///                 AdminUsername = "{your-username}",
    ///                 ComputerNamePrefix = "{vmss-name}",
    ///             },
    ///             StorageProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetStorageProfileArgs
    ///             {
    ///                 ImageReference = new AzureNative.Compute.V20210301.Inputs.ImageReferenceArgs
    ///                 {
    ///                     Id = "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/images/{existing-custom-image-name}",
    ///                 },
    ///                 OsDisk = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetOSDiskArgs
    ///                 {
    ///                     Caching = AzureNative.Compute.V20210301.CachingTypes.ReadWrite,
    ///                     CreateOption = "FromImage",
    ///                     ManagedDisk = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetManagedDiskParametersArgs
    ///                     {
    ///                         StorageAccountType = "Standard_LRS",
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///         VmScaleSetName = "{vmss-name}",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Create a scale set with Host Encryption using encryptionAtHost property.
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var virtualMachineScaleSet = new AzureNative.Compute.V20210301.VirtualMachineScaleSet("virtualMachineScaleSet", new()
    ///     {
    ///         Location = "westus",
    ///         Overprovision = true,
    ///         Plan = new AzureNative.Compute.V20210301.Inputs.PlanArgs
    ///         {
    ///             Name = "windows2016",
    ///             Product = "windows-data-science-vm",
    ///             Publisher = "microsoft-ads",
    ///         },
    ///         ResourceGroupName = "myResourceGroup",
    ///         Sku = new AzureNative.Compute.V20210301.Inputs.SkuArgs
    ///         {
    ///             Capacity = 3,
    ///             Name = "Standard_DS1_v2",
    ///             Tier = "Standard",
    ///         },
    ///         UpgradePolicy = new AzureNative.Compute.V20210301.Inputs.UpgradePolicyArgs
    ///         {
    ///             Mode = AzureNative.Compute.V20210301.UpgradeMode.Manual,
    ///         },
    ///         VirtualMachineProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetVMProfileArgs
    ///         {
    ///             NetworkProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetNetworkProfileArgs
    ///             {
    ///                 NetworkInterfaceConfigurations = new[]
    ///                 {
    ///                     new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetNetworkConfigurationArgs
    ///                     {
    ///                         EnableIPForwarding = true,
    ///                         IpConfigurations = new[]
    ///                         {
    ///                             new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetIPConfigurationArgs
    ///                             {
    ///                                 Name = "{vmss-name}",
    ///                                 Subnet = new AzureNative.Compute.V20210301.Inputs.ApiEntityReferenceArgs
    ///                                 {
    ///                                     Id = "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/{existing-virtual-network-name}/subnets/{existing-subnet-name}",
    ///                                 },
    ///                             },
    ///                         },
    ///                         Name = "{vmss-name}",
    ///                         Primary = true,
    ///                     },
    ///                 },
    ///             },
    ///             OsProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetOSProfileArgs
    ///             {
    ///                 AdminPassword = "{your-password}",
    ///                 AdminUsername = "{your-username}",
    ///                 ComputerNamePrefix = "{vmss-name}",
    ///             },
    ///             SecurityProfile = new AzureNative.Compute.V20210301.Inputs.SecurityProfileArgs
    ///             {
    ///                 EncryptionAtHost = true,
    ///             },
    ///             StorageProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetStorageProfileArgs
    ///             {
    ///                 ImageReference = new AzureNative.Compute.V20210301.Inputs.ImageReferenceArgs
    ///                 {
    ///                     Offer = "windows-data-science-vm",
    ///                     Publisher = "microsoft-ads",
    ///                     Sku = "windows2016",
    ///                     Version = "latest",
    ///                 },
    ///                 OsDisk = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetOSDiskArgs
    ///                 {
    ///                     Caching = AzureNative.Compute.V20210301.CachingTypes.ReadOnly,
    ///                     CreateOption = "FromImage",
    ///                     ManagedDisk = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetManagedDiskParametersArgs
    ///                     {
    ///                         StorageAccountType = "Standard_LRS",
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///         VmScaleSetName = "{vmss-name}",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Create a scale set with Uefi Settings of secureBoot and vTPM.
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var virtualMachineScaleSet = new AzureNative.Compute.V20210301.VirtualMachineScaleSet("virtualMachineScaleSet", new()
    ///     {
    ///         Location = "westus",
    ///         Overprovision = true,
    ///         ResourceGroupName = "myResourceGroup",
    ///         Sku = new AzureNative.Compute.V20210301.Inputs.SkuArgs
    ///         {
    ///             Capacity = 3,
    ///             Name = "Standard_D2s_v3",
    ///             Tier = "Standard",
    ///         },
    ///         UpgradePolicy = new AzureNative.Compute.V20210301.Inputs.UpgradePolicyArgs
    ///         {
    ///             Mode = AzureNative.Compute.V20210301.UpgradeMode.Manual,
    ///         },
    ///         VirtualMachineProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetVMProfileArgs
    ///         {
    ///             NetworkProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetNetworkProfileArgs
    ///             {
    ///                 NetworkInterfaceConfigurations = new[]
    ///                 {
    ///                     new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetNetworkConfigurationArgs
    ///                     {
    ///                         EnableIPForwarding = true,
    ///                         IpConfigurations = new[]
    ///                         {
    ///                             new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetIPConfigurationArgs
    ///                             {
    ///                                 Name = "{vmss-name}",
    ///                                 Subnet = new AzureNative.Compute.V20210301.Inputs.ApiEntityReferenceArgs
    ///                                 {
    ///                                     Id = "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/{existing-virtual-network-name}/subnets/{existing-subnet-name}",
    ///                                 },
    ///                             },
    ///                         },
    ///                         Name = "{vmss-name}",
    ///                         Primary = true,
    ///                     },
    ///                 },
    ///             },
    ///             OsProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetOSProfileArgs
    ///             {
    ///                 AdminPassword = "{your-password}",
    ///                 AdminUsername = "{your-username}",
    ///                 ComputerNamePrefix = "{vmss-name}",
    ///             },
    ///             SecurityProfile = new AzureNative.Compute.V20210301.Inputs.SecurityProfileArgs
    ///             {
    ///                 SecurityType = "TrustedLaunch",
    ///                 UefiSettings = new AzureNative.Compute.V20210301.Inputs.UefiSettingsArgs
    ///                 {
    ///                     SecureBootEnabled = true,
    ///                     VTpmEnabled = true,
    ///                 },
    ///             },
    ///             StorageProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetStorageProfileArgs
    ///             {
    ///                 ImageReference = new AzureNative.Compute.V20210301.Inputs.ImageReferenceArgs
    ///                 {
    ///                     Offer = "windowsserver-gen2preview-preview",
    ///                     Publisher = "MicrosoftWindowsServer",
    ///                     Sku = "windows10-tvm",
    ///                     Version = "18363.592.2001092016",
    ///                 },
    ///                 OsDisk = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetOSDiskArgs
    ///                 {
    ///                     Caching = AzureNative.Compute.V20210301.CachingTypes.ReadOnly,
    ///                     CreateOption = "FromImage",
    ///                     ManagedDisk = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetManagedDiskParametersArgs
    ///                     {
    ///                         StorageAccountType = "StandardSSD_LRS",
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///         VmScaleSetName = "{vmss-name}",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Create a scale set with a marketplace image plan.
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var virtualMachineScaleSet = new AzureNative.Compute.V20210301.VirtualMachineScaleSet("virtualMachineScaleSet", new()
    ///     {
    ///         Location = "westus",
    ///         Overprovision = true,
    ///         Plan = new AzureNative.Compute.V20210301.Inputs.PlanArgs
    ///         {
    ///             Name = "windows2016",
    ///             Product = "windows-data-science-vm",
    ///             Publisher = "microsoft-ads",
    ///         },
    ///         ResourceGroupName = "myResourceGroup",
    ///         Sku = new AzureNative.Compute.V20210301.Inputs.SkuArgs
    ///         {
    ///             Capacity = 3,
    ///             Name = "Standard_D1_v2",
    ///             Tier = "Standard",
    ///         },
    ///         UpgradePolicy = new AzureNative.Compute.V20210301.Inputs.UpgradePolicyArgs
    ///         {
    ///             Mode = AzureNative.Compute.V20210301.UpgradeMode.Manual,
    ///         },
    ///         VirtualMachineProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetVMProfileArgs
    ///         {
    ///             NetworkProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetNetworkProfileArgs
    ///             {
    ///                 NetworkInterfaceConfigurations = new[]
    ///                 {
    ///                     new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetNetworkConfigurationArgs
    ///                     {
    ///                         EnableIPForwarding = true,
    ///                         IpConfigurations = new[]
    ///                         {
    ///                             new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetIPConfigurationArgs
    ///                             {
    ///                                 Name = "{vmss-name}",
    ///                                 Subnet = new AzureNative.Compute.V20210301.Inputs.ApiEntityReferenceArgs
    ///                                 {
    ///                                     Id = "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/{existing-virtual-network-name}/subnets/{existing-subnet-name}",
    ///                                 },
    ///                             },
    ///                         },
    ///                         Name = "{vmss-name}",
    ///                         Primary = true,
    ///                     },
    ///                 },
    ///             },
    ///             OsProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetOSProfileArgs
    ///             {
    ///                 AdminPassword = "{your-password}",
    ///                 AdminUsername = "{your-username}",
    ///                 ComputerNamePrefix = "{vmss-name}",
    ///             },
    ///             StorageProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetStorageProfileArgs
    ///             {
    ///                 ImageReference = new AzureNative.Compute.V20210301.Inputs.ImageReferenceArgs
    ///                 {
    ///                     Offer = "windows-data-science-vm",
    ///                     Publisher = "microsoft-ads",
    ///                     Sku = "windows2016",
    ///                     Version = "latest",
    ///                 },
    ///                 OsDisk = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetOSDiskArgs
    ///                 {
    ///                     Caching = AzureNative.Compute.V20210301.CachingTypes.ReadWrite,
    ///                     CreateOption = "FromImage",
    ///                     ManagedDisk = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetManagedDiskParametersArgs
    ///                     {
    ///                         StorageAccountType = "Standard_LRS",
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///         VmScaleSetName = "{vmss-name}",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Create a scale set with an azure application gateway.
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var virtualMachineScaleSet = new AzureNative.Compute.V20210301.VirtualMachineScaleSet("virtualMachineScaleSet", new()
    ///     {
    ///         Location = "westus",
    ///         Overprovision = true,
    ///         ResourceGroupName = "myResourceGroup",
    ///         Sku = new AzureNative.Compute.V20210301.Inputs.SkuArgs
    ///         {
    ///             Capacity = 3,
    ///             Name = "Standard_D1_v2",
    ///             Tier = "Standard",
    ///         },
    ///         UpgradePolicy = new AzureNative.Compute.V20210301.Inputs.UpgradePolicyArgs
    ///         {
    ///             Mode = AzureNative.Compute.V20210301.UpgradeMode.Manual,
    ///         },
    ///         VirtualMachineProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetVMProfileArgs
    ///         {
    ///             NetworkProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetNetworkProfileArgs
    ///             {
    ///                 NetworkInterfaceConfigurations = new[]
    ///                 {
    ///                     new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetNetworkConfigurationArgs
    ///                     {
    ///                         EnableIPForwarding = true,
    ///                         IpConfigurations = new[]
    ///                         {
    ///                             new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetIPConfigurationArgs
    ///                             {
    ///                                 ApplicationGatewayBackendAddressPools = new[]
    ///                                 {
    ///                                     new AzureNative.Compute.V20210301.Inputs.SubResourceArgs
    ///                                     {
    ///                                         Id = "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/applicationGateways/{existing-application-gateway-name}/backendAddressPools/{existing-backend-address-pool-name}",
    ///                                     },
    ///                                 },
    ///                                 Name = "{vmss-name}",
    ///                                 Subnet = new AzureNative.Compute.V20210301.Inputs.ApiEntityReferenceArgs
    ///                                 {
    ///                                     Id = "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/{existing-virtual-network-name}/subnets/{existing-subnet-name}",
    ///                                 },
    ///                             },
    ///                         },
    ///                         Name = "{vmss-name}",
    ///                         Primary = true,
    ///                     },
    ///                 },
    ///             },
    ///             OsProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetOSProfileArgs
    ///             {
    ///                 AdminPassword = "{your-password}",
    ///                 AdminUsername = "{your-username}",
    ///                 ComputerNamePrefix = "{vmss-name}",
    ///             },
    ///             StorageProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetStorageProfileArgs
    ///             {
    ///                 ImageReference = new AzureNative.Compute.V20210301.Inputs.ImageReferenceArgs
    ///                 {
    ///                     Offer = "WindowsServer",
    ///                     Publisher = "MicrosoftWindowsServer",
    ///                     Sku = "2016-Datacenter",
    ///                     Version = "latest",
    ///                 },
    ///                 OsDisk = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetOSDiskArgs
    ///                 {
    ///                     Caching = AzureNative.Compute.V20210301.CachingTypes.ReadWrite,
    ///                     CreateOption = "FromImage",
    ///                     ManagedDisk = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetManagedDiskParametersArgs
    ///                     {
    ///                         StorageAccountType = "Standard_LRS",
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///         VmScaleSetName = "{vmss-name}",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Create a scale set with an azure load balancer.
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var virtualMachineScaleSet = new AzureNative.Compute.V20210301.VirtualMachineScaleSet("virtualMachineScaleSet", new()
    ///     {
    ///         Location = "westus",
    ///         Overprovision = true,
    ///         ResourceGroupName = "myResourceGroup",
    ///         Sku = new AzureNative.Compute.V20210301.Inputs.SkuArgs
    ///         {
    ///             Capacity = 3,
    ///             Name = "Standard_D1_v2",
    ///             Tier = "Standard",
    ///         },
    ///         UpgradePolicy = new AzureNative.Compute.V20210301.Inputs.UpgradePolicyArgs
    ///         {
    ///             Mode = AzureNative.Compute.V20210301.UpgradeMode.Manual,
    ///         },
    ///         VirtualMachineProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetVMProfileArgs
    ///         {
    ///             NetworkProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetNetworkProfileArgs
    ///             {
    ///                 NetworkInterfaceConfigurations = new[]
    ///                 {
    ///                     new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetNetworkConfigurationArgs
    ///                     {
    ///                         EnableIPForwarding = true,
    ///                         IpConfigurations = new[]
    ///                         {
    ///                             new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetIPConfigurationArgs
    ///                             {
    ///                                 LoadBalancerBackendAddressPools = new[]
    ///                                 {
    ///                                     new AzureNative.Compute.V20210301.Inputs.SubResourceArgs
    ///                                     {
    ///                                         Id = "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/loadBalancers/{existing-load-balancer-name}/backendAddressPools/{existing-backend-address-pool-name}",
    ///                                     },
    ///                                 },
    ///                                 LoadBalancerInboundNatPools = new[]
    ///                                 {
    ///                                     new AzureNative.Compute.V20210301.Inputs.SubResourceArgs
    ///                                     {
    ///                                         Id = "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/loadBalancers/{existing-load-balancer-name}/inboundNatPools/{existing-nat-pool-name}",
    ///                                     },
    ///                                 },
    ///                                 Name = "{vmss-name}",
    ///                                 PublicIPAddressConfiguration = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetPublicIPAddressConfigurationArgs
    ///                                 {
    ///                                     Name = "{vmss-name}",
    ///                                     PublicIPAddressVersion = "IPv4",
    ///                                 },
    ///                                 Subnet = new AzureNative.Compute.V20210301.Inputs.ApiEntityReferenceArgs
    ///                                 {
    ///                                     Id = "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/{existing-virtual-network-name}/subnets/{existing-subnet-name}",
    ///                                 },
    ///                             },
    ///                         },
    ///                         Name = "{vmss-name}",
    ///                         Primary = true,
    ///                     },
    ///                 },
    ///             },
    ///             OsProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetOSProfileArgs
    ///             {
    ///                 AdminPassword = "{your-password}",
    ///                 AdminUsername = "{your-username}",
    ///                 ComputerNamePrefix = "{vmss-name}",
    ///             },
    ///             StorageProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetStorageProfileArgs
    ///             {
    ///                 ImageReference = new AzureNative.Compute.V20210301.Inputs.ImageReferenceArgs
    ///                 {
    ///                     Offer = "WindowsServer",
    ///                     Publisher = "MicrosoftWindowsServer",
    ///                     Sku = "2016-Datacenter",
    ///                     Version = "latest",
    ///                 },
    ///                 OsDisk = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetOSDiskArgs
    ///                 {
    ///                     Caching = AzureNative.Compute.V20210301.CachingTypes.ReadWrite,
    ///                     CreateOption = "FromImage",
    ///                     ManagedDisk = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetManagedDiskParametersArgs
    ///                     {
    ///                         StorageAccountType = "Standard_LRS",
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///         VmScaleSetName = "{vmss-name}",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Create a scale set with automatic repairs enabled
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var virtualMachineScaleSet = new AzureNative.Compute.V20210301.VirtualMachineScaleSet("virtualMachineScaleSet", new()
    ///     {
    ///         AutomaticRepairsPolicy = new AzureNative.Compute.V20210301.Inputs.AutomaticRepairsPolicyArgs
    ///         {
    ///             Enabled = true,
    ///             GracePeriod = "PT30M",
    ///         },
    ///         Location = "westus",
    ///         Overprovision = true,
    ///         ResourceGroupName = "myResourceGroup",
    ///         Sku = new AzureNative.Compute.V20210301.Inputs.SkuArgs
    ///         {
    ///             Capacity = 3,
    ///             Name = "Standard_D1_v2",
    ///             Tier = "Standard",
    ///         },
    ///         UpgradePolicy = new AzureNative.Compute.V20210301.Inputs.UpgradePolicyArgs
    ///         {
    ///             Mode = AzureNative.Compute.V20210301.UpgradeMode.Manual,
    ///         },
    ///         VirtualMachineProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetVMProfileArgs
    ///         {
    ///             NetworkProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetNetworkProfileArgs
    ///             {
    ///                 NetworkInterfaceConfigurations = new[]
    ///                 {
    ///                     new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetNetworkConfigurationArgs
    ///                     {
    ///                         EnableIPForwarding = true,
    ///                         IpConfigurations = new[]
    ///                         {
    ///                             new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetIPConfigurationArgs
    ///                             {
    ///                                 Name = "{vmss-name}",
    ///                                 Subnet = new AzureNative.Compute.V20210301.Inputs.ApiEntityReferenceArgs
    ///                                 {
    ///                                     Id = "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/{existing-virtual-network-name}/subnets/{existing-subnet-name}",
    ///                                 },
    ///                             },
    ///                         },
    ///                         Name = "{vmss-name}",
    ///                         Primary = true,
    ///                     },
    ///                 },
    ///             },
    ///             OsProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetOSProfileArgs
    ///             {
    ///                 AdminPassword = "{your-password}",
    ///                 AdminUsername = "{your-username}",
    ///                 ComputerNamePrefix = "{vmss-name}",
    ///             },
    ///             StorageProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetStorageProfileArgs
    ///             {
    ///                 ImageReference = new AzureNative.Compute.V20210301.Inputs.ImageReferenceArgs
    ///                 {
    ///                     Offer = "WindowsServer",
    ///                     Publisher = "MicrosoftWindowsServer",
    ///                     Sku = "2016-Datacenter",
    ///                     Version = "latest",
    ///                 },
    ///                 OsDisk = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetOSDiskArgs
    ///                 {
    ///                     Caching = AzureNative.Compute.V20210301.CachingTypes.ReadWrite,
    ///                     CreateOption = "FromImage",
    ///                     ManagedDisk = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetManagedDiskParametersArgs
    ///                     {
    ///                         StorageAccountType = "Standard_LRS",
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///         VmScaleSetName = "{vmss-name}",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Create a scale set with boot diagnostics.
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var virtualMachineScaleSet = new AzureNative.Compute.V20210301.VirtualMachineScaleSet("virtualMachineScaleSet", new()
    ///     {
    ///         Location = "westus",
    ///         Overprovision = true,
    ///         ResourceGroupName = "myResourceGroup",
    ///         Sku = new AzureNative.Compute.V20210301.Inputs.SkuArgs
    ///         {
    ///             Capacity = 3,
    ///             Name = "Standard_D1_v2",
    ///             Tier = "Standard",
    ///         },
    ///         UpgradePolicy = new AzureNative.Compute.V20210301.Inputs.UpgradePolicyArgs
    ///         {
    ///             Mode = AzureNative.Compute.V20210301.UpgradeMode.Manual,
    ///         },
    ///         VirtualMachineProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetVMProfileArgs
    ///         {
    ///             DiagnosticsProfile = new AzureNative.Compute.V20210301.Inputs.DiagnosticsProfileArgs
    ///             {
    ///                 BootDiagnostics = new AzureNative.Compute.V20210301.Inputs.BootDiagnosticsArgs
    ///                 {
    ///                     Enabled = true,
    ///                     StorageUri = "http://{existing-storage-account-name}.blob.core.windows.net",
    ///                 },
    ///             },
    ///             NetworkProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetNetworkProfileArgs
    ///             {
    ///                 NetworkInterfaceConfigurations = new[]
    ///                 {
    ///                     new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetNetworkConfigurationArgs
    ///                     {
    ///                         EnableIPForwarding = true,
    ///                         IpConfigurations = new[]
    ///                         {
    ///                             new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetIPConfigurationArgs
    ///                             {
    ///                                 Name = "{vmss-name}",
    ///                                 Subnet = new AzureNative.Compute.V20210301.Inputs.ApiEntityReferenceArgs
    ///                                 {
    ///                                     Id = "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/{existing-virtual-network-name}/subnets/{existing-subnet-name}",
    ///                                 },
    ///                             },
    ///                         },
    ///                         Name = "{vmss-name}",
    ///                         Primary = true,
    ///                     },
    ///                 },
    ///             },
    ///             OsProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetOSProfileArgs
    ///             {
    ///                 AdminPassword = "{your-password}",
    ///                 AdminUsername = "{your-username}",
    ///                 ComputerNamePrefix = "{vmss-name}",
    ///             },
    ///             StorageProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetStorageProfileArgs
    ///             {
    ///                 ImageReference = new AzureNative.Compute.V20210301.Inputs.ImageReferenceArgs
    ///                 {
    ///                     Offer = "WindowsServer",
    ///                     Publisher = "MicrosoftWindowsServer",
    ///                     Sku = "2016-Datacenter",
    ///                     Version = "latest",
    ///                 },
    ///                 OsDisk = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetOSDiskArgs
    ///                 {
    ///                     Caching = AzureNative.Compute.V20210301.CachingTypes.ReadWrite,
    ///                     CreateOption = "FromImage",
    ///                     ManagedDisk = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetManagedDiskParametersArgs
    ///                     {
    ///                         StorageAccountType = "Standard_LRS",
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///         VmScaleSetName = "{vmss-name}",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Create a scale set with empty data disks on each vm.
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var virtualMachineScaleSet = new AzureNative.Compute.V20210301.VirtualMachineScaleSet("virtualMachineScaleSet", new()
    ///     {
    ///         Location = "westus",
    ///         Overprovision = true,
    ///         ResourceGroupName = "myResourceGroup",
    ///         Sku = new AzureNative.Compute.V20210301.Inputs.SkuArgs
    ///         {
    ///             Capacity = 3,
    ///             Name = "Standard_D2_v2",
    ///             Tier = "Standard",
    ///         },
    ///         UpgradePolicy = new AzureNative.Compute.V20210301.Inputs.UpgradePolicyArgs
    ///         {
    ///             Mode = AzureNative.Compute.V20210301.UpgradeMode.Manual,
    ///         },
    ///         VirtualMachineProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetVMProfileArgs
    ///         {
    ///             NetworkProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetNetworkProfileArgs
    ///             {
    ///                 NetworkInterfaceConfigurations = new[]
    ///                 {
    ///                     new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetNetworkConfigurationArgs
    ///                     {
    ///                         EnableIPForwarding = true,
    ///                         IpConfigurations = new[]
    ///                         {
    ///                             new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetIPConfigurationArgs
    ///                             {
    ///                                 Name = "{vmss-name}",
    ///                                 Subnet = new AzureNative.Compute.V20210301.Inputs.ApiEntityReferenceArgs
    ///                                 {
    ///                                     Id = "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/{existing-virtual-network-name}/subnets/{existing-subnet-name}",
    ///                                 },
    ///                             },
    ///                         },
    ///                         Name = "{vmss-name}",
    ///                         Primary = true,
    ///                     },
    ///                 },
    ///             },
    ///             OsProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetOSProfileArgs
    ///             {
    ///                 AdminPassword = "{your-password}",
    ///                 AdminUsername = "{your-username}",
    ///                 ComputerNamePrefix = "{vmss-name}",
    ///             },
    ///             StorageProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetStorageProfileArgs
    ///             {
    ///                 DataDisks = new[]
    ///                 {
    ///                     new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetDataDiskArgs
    ///                     {
    ///                         CreateOption = "Empty",
    ///                         DiskSizeGB = 1023,
    ///                         Lun = 0,
    ///                     },
    ///                     new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetDataDiskArgs
    ///                     {
    ///                         CreateOption = "Empty",
    ///                         DiskSizeGB = 1023,
    ///                         Lun = 1,
    ///                     },
    ///                 },
    ///                 ImageReference = new AzureNative.Compute.V20210301.Inputs.ImageReferenceArgs
    ///                 {
    ///                     Offer = "WindowsServer",
    ///                     Publisher = "MicrosoftWindowsServer",
    ///                     Sku = "2016-Datacenter",
    ///                     Version = "latest",
    ///                 },
    ///                 OsDisk = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetOSDiskArgs
    ///                 {
    ///                     Caching = AzureNative.Compute.V20210301.CachingTypes.ReadWrite,
    ///                     CreateOption = "FromImage",
    ///                     DiskSizeGB = 512,
    ///                     ManagedDisk = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetManagedDiskParametersArgs
    ///                     {
    ///                         StorageAccountType = "Standard_LRS",
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///         VmScaleSetName = "{vmss-name}",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Create a scale set with ephemeral os disks using placement property.
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var virtualMachineScaleSet = new AzureNative.Compute.V20210301.VirtualMachineScaleSet("virtualMachineScaleSet", new()
    ///     {
    ///         Location = "westus",
    ///         Overprovision = true,
    ///         Plan = new AzureNative.Compute.V20210301.Inputs.PlanArgs
    ///         {
    ///             Name = "windows2016",
    ///             Product = "windows-data-science-vm",
    ///             Publisher = "microsoft-ads",
    ///         },
    ///         ResourceGroupName = "myResourceGroup",
    ///         Sku = new AzureNative.Compute.V20210301.Inputs.SkuArgs
    ///         {
    ///             Capacity = 3,
    ///             Name = "Standard_DS1_v2",
    ///             Tier = "Standard",
    ///         },
    ///         UpgradePolicy = new AzureNative.Compute.V20210301.Inputs.UpgradePolicyArgs
    ///         {
    ///             Mode = AzureNative.Compute.V20210301.UpgradeMode.Manual,
    ///         },
    ///         VirtualMachineProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetVMProfileArgs
    ///         {
    ///             NetworkProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetNetworkProfileArgs
    ///             {
    ///                 NetworkInterfaceConfigurations = new[]
    ///                 {
    ///                     new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetNetworkConfigurationArgs
    ///                     {
    ///                         EnableIPForwarding = true,
    ///                         IpConfigurations = new[]
    ///                         {
    ///                             new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetIPConfigurationArgs
    ///                             {
    ///                                 Name = "{vmss-name}",
    ///                                 Subnet = new AzureNative.Compute.V20210301.Inputs.ApiEntityReferenceArgs
    ///                                 {
    ///                                     Id = "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/{existing-virtual-network-name}/subnets/{existing-subnet-name}",
    ///                                 },
    ///                             },
    ///                         },
    ///                         Name = "{vmss-name}",
    ///                         Primary = true,
    ///                     },
    ///                 },
    ///             },
    ///             OsProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetOSProfileArgs
    ///             {
    ///                 AdminPassword = "{your-password}",
    ///                 AdminUsername = "{your-username}",
    ///                 ComputerNamePrefix = "{vmss-name}",
    ///             },
    ///             StorageProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetStorageProfileArgs
    ///             {
    ///                 ImageReference = new AzureNative.Compute.V20210301.Inputs.ImageReferenceArgs
    ///                 {
    ///                     Offer = "windows-data-science-vm",
    ///                     Publisher = "microsoft-ads",
    ///                     Sku = "windows2016",
    ///                     Version = "latest",
    ///                 },
    ///                 OsDisk = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetOSDiskArgs
    ///                 {
    ///                     Caching = AzureNative.Compute.V20210301.CachingTypes.ReadOnly,
    ///                     CreateOption = "FromImage",
    ///                     DiffDiskSettings = new AzureNative.Compute.V20210301.Inputs.DiffDiskSettingsArgs
    ///                     {
    ///                         Option = "Local",
    ///                         Placement = "ResourceDisk",
    ///                     },
    ///                     ManagedDisk = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetManagedDiskParametersArgs
    ///                     {
    ///                         StorageAccountType = "Standard_LRS",
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///         VmScaleSetName = "{vmss-name}",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Create a scale set with ephemeral os disks.
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var virtualMachineScaleSet = new AzureNative.Compute.V20210301.VirtualMachineScaleSet("virtualMachineScaleSet", new()
    ///     {
    ///         Location = "westus",
    ///         Overprovision = true,
    ///         Plan = new AzureNative.Compute.V20210301.Inputs.PlanArgs
    ///         {
    ///             Name = "windows2016",
    ///             Product = "windows-data-science-vm",
    ///             Publisher = "microsoft-ads",
    ///         },
    ///         ResourceGroupName = "myResourceGroup",
    ///         Sku = new AzureNative.Compute.V20210301.Inputs.SkuArgs
    ///         {
    ///             Capacity = 3,
    ///             Name = "Standard_DS1_v2",
    ///             Tier = "Standard",
    ///         },
    ///         UpgradePolicy = new AzureNative.Compute.V20210301.Inputs.UpgradePolicyArgs
    ///         {
    ///             Mode = AzureNative.Compute.V20210301.UpgradeMode.Manual,
    ///         },
    ///         VirtualMachineProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetVMProfileArgs
    ///         {
    ///             NetworkProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetNetworkProfileArgs
    ///             {
    ///                 NetworkInterfaceConfigurations = new[]
    ///                 {
    ///                     new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetNetworkConfigurationArgs
    ///                     {
    ///                         EnableIPForwarding = true,
    ///                         IpConfigurations = new[]
    ///                         {
    ///                             new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetIPConfigurationArgs
    ///                             {
    ///                                 Name = "{vmss-name}",
    ///                                 Subnet = new AzureNative.Compute.V20210301.Inputs.ApiEntityReferenceArgs
    ///                                 {
    ///                                     Id = "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/{existing-virtual-network-name}/subnets/{existing-subnet-name}",
    ///                                 },
    ///                             },
    ///                         },
    ///                         Name = "{vmss-name}",
    ///                         Primary = true,
    ///                     },
    ///                 },
    ///             },
    ///             OsProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetOSProfileArgs
    ///             {
    ///                 AdminPassword = "{your-password}",
    ///                 AdminUsername = "{your-username}",
    ///                 ComputerNamePrefix = "{vmss-name}",
    ///             },
    ///             StorageProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetStorageProfileArgs
    ///             {
    ///                 ImageReference = new AzureNative.Compute.V20210301.Inputs.ImageReferenceArgs
    ///                 {
    ///                     Offer = "windows-data-science-vm",
    ///                     Publisher = "microsoft-ads",
    ///                     Sku = "windows2016",
    ///                     Version = "latest",
    ///                 },
    ///                 OsDisk = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetOSDiskArgs
    ///                 {
    ///                     Caching = AzureNative.Compute.V20210301.CachingTypes.ReadOnly,
    ///                     CreateOption = "FromImage",
    ///                     DiffDiskSettings = new AzureNative.Compute.V20210301.Inputs.DiffDiskSettingsArgs
    ///                     {
    ///                         Option = "Local",
    ///                     },
    ///                     ManagedDisk = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetManagedDiskParametersArgs
    ///                     {
    ///                         StorageAccountType = "Standard_LRS",
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///         VmScaleSetName = "{vmss-name}",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Create a scale set with extension time budget.
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var virtualMachineScaleSet = new AzureNative.Compute.V20210301.VirtualMachineScaleSet("virtualMachineScaleSet", new()
    ///     {
    ///         Location = "westus",
    ///         Overprovision = true,
    ///         ResourceGroupName = "myResourceGroup",
    ///         Sku = new AzureNative.Compute.V20210301.Inputs.SkuArgs
    ///         {
    ///             Capacity = 3,
    ///             Name = "Standard_D1_v2",
    ///             Tier = "Standard",
    ///         },
    ///         UpgradePolicy = new AzureNative.Compute.V20210301.Inputs.UpgradePolicyArgs
    ///         {
    ///             Mode = AzureNative.Compute.V20210301.UpgradeMode.Manual,
    ///         },
    ///         VirtualMachineProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetVMProfileArgs
    ///         {
    ///             DiagnosticsProfile = new AzureNative.Compute.V20210301.Inputs.DiagnosticsProfileArgs
    ///             {
    ///                 BootDiagnostics = new AzureNative.Compute.V20210301.Inputs.BootDiagnosticsArgs
    ///                 {
    ///                     Enabled = true,
    ///                     StorageUri = "http://{existing-storage-account-name}.blob.core.windows.net",
    ///                 },
    ///             },
    ///             ExtensionProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetExtensionProfileArgs
    ///             {
    ///                 Extensions = new[]
    ///                 {
    ///                     new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetExtensionArgs
    ///                     {
    ///                         AutoUpgradeMinorVersion = false,
    ///                         Name = "{extension-name}",
    ///                         Publisher = "{extension-Publisher}",
    ///                         Settings = null,
    ///                         Type = "{extension-Type}",
    ///                         TypeHandlerVersion = "{handler-version}",
    ///                     },
    ///                 },
    ///                 ExtensionsTimeBudget = "PT1H20M",
    ///             },
    ///             NetworkProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetNetworkProfileArgs
    ///             {
    ///                 NetworkInterfaceConfigurations = new[]
    ///                 {
    ///                     new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetNetworkConfigurationArgs
    ///                     {
    ///                         EnableIPForwarding = true,
    ///                         IpConfigurations = new[]
    ///                         {
    ///                             new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetIPConfigurationArgs
    ///                             {
    ///                                 Name = "{vmss-name}",
    ///                                 Subnet = new AzureNative.Compute.V20210301.Inputs.ApiEntityReferenceArgs
    ///                                 {
    ///                                     Id = "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/{existing-virtual-network-name}/subnets/{existing-subnet-name}",
    ///                                 },
    ///                             },
    ///                         },
    ///                         Name = "{vmss-name}",
    ///                         Primary = true,
    ///                     },
    ///                 },
    ///             },
    ///             OsProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetOSProfileArgs
    ///             {
    ///                 AdminPassword = "{your-password}",
    ///                 AdminUsername = "{your-username}",
    ///                 ComputerNamePrefix = "{vmss-name}",
    ///             },
    ///             StorageProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetStorageProfileArgs
    ///             {
    ///                 ImageReference = new AzureNative.Compute.V20210301.Inputs.ImageReferenceArgs
    ///                 {
    ///                     Offer = "WindowsServer",
    ///                     Publisher = "MicrosoftWindowsServer",
    ///                     Sku = "2016-Datacenter",
    ///                     Version = "latest",
    ///                 },
    ///                 OsDisk = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetOSDiskArgs
    ///                 {
    ///                     Caching = AzureNative.Compute.V20210301.CachingTypes.ReadWrite,
    ///                     CreateOption = "FromImage",
    ///                     ManagedDisk = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetManagedDiskParametersArgs
    ///                     {
    ///                         StorageAccountType = "Standard_LRS",
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///         VmScaleSetName = "{vmss-name}",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Create a scale set with managed boot diagnostics.
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var virtualMachineScaleSet = new AzureNative.Compute.V20210301.VirtualMachineScaleSet("virtualMachineScaleSet", new()
    ///     {
    ///         Location = "westus",
    ///         Overprovision = true,
    ///         ResourceGroupName = "myResourceGroup",
    ///         Sku = new AzureNative.Compute.V20210301.Inputs.SkuArgs
    ///         {
    ///             Capacity = 3,
    ///             Name = "Standard_D1_v2",
    ///             Tier = "Standard",
    ///         },
    ///         UpgradePolicy = new AzureNative.Compute.V20210301.Inputs.UpgradePolicyArgs
    ///         {
    ///             Mode = AzureNative.Compute.V20210301.UpgradeMode.Manual,
    ///         },
    ///         VirtualMachineProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetVMProfileArgs
    ///         {
    ///             DiagnosticsProfile = new AzureNative.Compute.V20210301.Inputs.DiagnosticsProfileArgs
    ///             {
    ///                 BootDiagnostics = new AzureNative.Compute.V20210301.Inputs.BootDiagnosticsArgs
    ///                 {
    ///                     Enabled = true,
    ///                 },
    ///             },
    ///             NetworkProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetNetworkProfileArgs
    ///             {
    ///                 NetworkInterfaceConfigurations = new[]
    ///                 {
    ///                     new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetNetworkConfigurationArgs
    ///                     {
    ///                         EnableIPForwarding = true,
    ///                         IpConfigurations = new[]
    ///                         {
    ///                             new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetIPConfigurationArgs
    ///                             {
    ///                                 Name = "{vmss-name}",
    ///                                 Subnet = new AzureNative.Compute.V20210301.Inputs.ApiEntityReferenceArgs
    ///                                 {
    ///                                     Id = "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/{existing-virtual-network-name}/subnets/{existing-subnet-name}",
    ///                                 },
    ///                             },
    ///                         },
    ///                         Name = "{vmss-name}",
    ///                         Primary = true,
    ///                     },
    ///                 },
    ///             },
    ///             OsProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetOSProfileArgs
    ///             {
    ///                 AdminPassword = "{your-password}",
    ///                 AdminUsername = "{your-username}",
    ///                 ComputerNamePrefix = "{vmss-name}",
    ///             },
    ///             StorageProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetStorageProfileArgs
    ///             {
    ///                 ImageReference = new AzureNative.Compute.V20210301.Inputs.ImageReferenceArgs
    ///                 {
    ///                     Offer = "WindowsServer",
    ///                     Publisher = "MicrosoftWindowsServer",
    ///                     Sku = "2016-Datacenter",
    ///                     Version = "latest",
    ///                 },
    ///                 OsDisk = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetOSDiskArgs
    ///                 {
    ///                     Caching = AzureNative.Compute.V20210301.CachingTypes.ReadWrite,
    ///                     CreateOption = "FromImage",
    ///                     ManagedDisk = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetManagedDiskParametersArgs
    ///                     {
    ///                         StorageAccountType = "Standard_LRS",
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///         VmScaleSetName = "{vmss-name}",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Create a scale set with password authentication.
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var virtualMachineScaleSet = new AzureNative.Compute.V20210301.VirtualMachineScaleSet("virtualMachineScaleSet", new()
    ///     {
    ///         Location = "westus",
    ///         Overprovision = true,
    ///         ResourceGroupName = "myResourceGroup",
    ///         Sku = new AzureNative.Compute.V20210301.Inputs.SkuArgs
    ///         {
    ///             Capacity = 3,
    ///             Name = "Standard_D1_v2",
    ///             Tier = "Standard",
    ///         },
    ///         UpgradePolicy = new AzureNative.Compute.V20210301.Inputs.UpgradePolicyArgs
    ///         {
    ///             Mode = AzureNative.Compute.V20210301.UpgradeMode.Manual,
    ///         },
    ///         VirtualMachineProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetVMProfileArgs
    ///         {
    ///             NetworkProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetNetworkProfileArgs
    ///             {
    ///                 NetworkInterfaceConfigurations = new[]
    ///                 {
    ///                     new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetNetworkConfigurationArgs
    ///                     {
    ///                         EnableIPForwarding = true,
    ///                         IpConfigurations = new[]
    ///                         {
    ///                             new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetIPConfigurationArgs
    ///                             {
    ///                                 Name = "{vmss-name}",
    ///                                 Subnet = new AzureNative.Compute.V20210301.Inputs.ApiEntityReferenceArgs
    ///                                 {
    ///                                     Id = "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/{existing-virtual-network-name}/subnets/{existing-subnet-name}",
    ///                                 },
    ///                             },
    ///                         },
    ///                         Name = "{vmss-name}",
    ///                         Primary = true,
    ///                     },
    ///                 },
    ///             },
    ///             OsProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetOSProfileArgs
    ///             {
    ///                 AdminPassword = "{your-password}",
    ///                 AdminUsername = "{your-username}",
    ///                 ComputerNamePrefix = "{vmss-name}",
    ///             },
    ///             StorageProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetStorageProfileArgs
    ///             {
    ///                 ImageReference = new AzureNative.Compute.V20210301.Inputs.ImageReferenceArgs
    ///                 {
    ///                     Offer = "WindowsServer",
    ///                     Publisher = "MicrosoftWindowsServer",
    ///                     Sku = "2016-Datacenter",
    ///                     Version = "latest",
    ///                 },
    ///                 OsDisk = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetOSDiskArgs
    ///                 {
    ///                     Caching = AzureNative.Compute.V20210301.CachingTypes.ReadWrite,
    ///                     CreateOption = "FromImage",
    ///                     ManagedDisk = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetManagedDiskParametersArgs
    ///                     {
    ///                         StorageAccountType = "Standard_LRS",
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///         VmScaleSetName = "{vmss-name}",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Create a scale set with premium storage.
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var virtualMachineScaleSet = new AzureNative.Compute.V20210301.VirtualMachineScaleSet("virtualMachineScaleSet", new()
    ///     {
    ///         Location = "westus",
    ///         Overprovision = true,
    ///         ResourceGroupName = "myResourceGroup",
    ///         Sku = new AzureNative.Compute.V20210301.Inputs.SkuArgs
    ///         {
    ///             Capacity = 3,
    ///             Name = "Standard_D1_v2",
    ///             Tier = "Standard",
    ///         },
    ///         UpgradePolicy = new AzureNative.Compute.V20210301.Inputs.UpgradePolicyArgs
    ///         {
    ///             Mode = AzureNative.Compute.V20210301.UpgradeMode.Manual,
    ///         },
    ///         VirtualMachineProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetVMProfileArgs
    ///         {
    ///             NetworkProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetNetworkProfileArgs
    ///             {
    ///                 NetworkInterfaceConfigurations = new[]
    ///                 {
    ///                     new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetNetworkConfigurationArgs
    ///                     {
    ///                         EnableIPForwarding = true,
    ///                         IpConfigurations = new[]
    ///                         {
    ///                             new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetIPConfigurationArgs
    ///                             {
    ///                                 Name = "{vmss-name}",
    ///                                 Subnet = new AzureNative.Compute.V20210301.Inputs.ApiEntityReferenceArgs
    ///                                 {
    ///                                     Id = "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/{existing-virtual-network-name}/subnets/{existing-subnet-name}",
    ///                                 },
    ///                             },
    ///                         },
    ///                         Name = "{vmss-name}",
    ///                         Primary = true,
    ///                     },
    ///                 },
    ///             },
    ///             OsProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetOSProfileArgs
    ///             {
    ///                 AdminPassword = "{your-password}",
    ///                 AdminUsername = "{your-username}",
    ///                 ComputerNamePrefix = "{vmss-name}",
    ///             },
    ///             StorageProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetStorageProfileArgs
    ///             {
    ///                 ImageReference = new AzureNative.Compute.V20210301.Inputs.ImageReferenceArgs
    ///                 {
    ///                     Offer = "WindowsServer",
    ///                     Publisher = "MicrosoftWindowsServer",
    ///                     Sku = "2016-Datacenter",
    ///                     Version = "latest",
    ///                 },
    ///                 OsDisk = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetOSDiskArgs
    ///                 {
    ///                     Caching = AzureNative.Compute.V20210301.CachingTypes.ReadWrite,
    ///                     CreateOption = "FromImage",
    ///                     ManagedDisk = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetManagedDiskParametersArgs
    ///                     {
    ///                         StorageAccountType = "Premium_LRS",
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///         VmScaleSetName = "{vmss-name}",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Create a scale set with ssh authentication.
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var virtualMachineScaleSet = new AzureNative.Compute.V20210301.VirtualMachineScaleSet("virtualMachineScaleSet", new()
    ///     {
    ///         Location = "westus",
    ///         Overprovision = true,
    ///         ResourceGroupName = "myResourceGroup",
    ///         Sku = new AzureNative.Compute.V20210301.Inputs.SkuArgs
    ///         {
    ///             Capacity = 3,
    ///             Name = "Standard_D1_v2",
    ///             Tier = "Standard",
    ///         },
    ///         UpgradePolicy = new AzureNative.Compute.V20210301.Inputs.UpgradePolicyArgs
    ///         {
    ///             Mode = AzureNative.Compute.V20210301.UpgradeMode.Manual,
    ///         },
    ///         VirtualMachineProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetVMProfileArgs
    ///         {
    ///             NetworkProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetNetworkProfileArgs
    ///             {
    ///                 NetworkInterfaceConfigurations = new[]
    ///                 {
    ///                     new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetNetworkConfigurationArgs
    ///                     {
    ///                         EnableIPForwarding = true,
    ///                         IpConfigurations = new[]
    ///                         {
    ///                             new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetIPConfigurationArgs
    ///                             {
    ///                                 Name = "{vmss-name}",
    ///                                 Subnet = new AzureNative.Compute.V20210301.Inputs.ApiEntityReferenceArgs
    ///                                 {
    ///                                     Id = "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/{existing-virtual-network-name}/subnets/{existing-subnet-name}",
    ///                                 },
    ///                             },
    ///                         },
    ///                         Name = "{vmss-name}",
    ///                         Primary = true,
    ///                     },
    ///                 },
    ///             },
    ///             OsProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetOSProfileArgs
    ///             {
    ///                 AdminUsername = "{your-username}",
    ///                 ComputerNamePrefix = "{vmss-name}",
    ///                 LinuxConfiguration = new AzureNative.Compute.V20210301.Inputs.LinuxConfigurationArgs
    ///                 {
    ///                     DisablePasswordAuthentication = true,
    ///                     Ssh = new AzureNative.Compute.V20210301.Inputs.SshConfigurationArgs
    ///                     {
    ///                         PublicKeys = new[]
    ///                         {
    ///                             new AzureNative.Compute.V20210301.Inputs.SshPublicKeyArgs
    ///                             {
    ///                                 KeyData = "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCeClRAk2ipUs/l5voIsDC5q9RI+YSRd1Bvd/O+axgY4WiBzG+4FwJWZm/mLLe5DoOdHQwmU2FrKXZSW4w2sYE70KeWnrFViCOX5MTVvJgPE8ClugNl8RWth/tU849DvM9sT7vFgfVSHcAS2yDRyDlueii+8nF2ym8XWAPltFVCyLHRsyBp5YPqK8JFYIa1eybKsY3hEAxRCA+/7bq8et+Gj3coOsuRmrehav7rE6N12Pb80I6ofa6SM5XNYq4Xk0iYNx7R3kdz0Jj9XgZYWjAHjJmT0gTRoOnt6upOuxK7xI/ykWrllgpXrCPu3Ymz+c+ujaqcxDopnAl2lmf69/J1",
    ///                                 Path = "/home/{your-username}/.ssh/authorized_keys",
    ///                             },
    ///                         },
    ///                     },
    ///                 },
    ///             },
    ///             StorageProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetStorageProfileArgs
    ///             {
    ///                 ImageReference = new AzureNative.Compute.V20210301.Inputs.ImageReferenceArgs
    ///                 {
    ///                     Offer = "WindowsServer",
    ///                     Publisher = "MicrosoftWindowsServer",
    ///                     Sku = "2016-Datacenter",
    ///                     Version = "latest",
    ///                 },
    ///                 OsDisk = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetOSDiskArgs
    ///                 {
    ///                     Caching = AzureNative.Compute.V20210301.CachingTypes.ReadWrite,
    ///                     CreateOption = "FromImage",
    ///                     ManagedDisk = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetManagedDiskParametersArgs
    ///                     {
    ///                         StorageAccountType = "Standard_LRS",
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///         VmScaleSetName = "{vmss-name}",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Create a scale set with terminate scheduled events enabled.
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var virtualMachineScaleSet = new AzureNative.Compute.V20210301.VirtualMachineScaleSet("virtualMachineScaleSet", new()
    ///     {
    ///         Location = "westus",
    ///         Overprovision = true,
    ///         ResourceGroupName = "myResourceGroup",
    ///         Sku = new AzureNative.Compute.V20210301.Inputs.SkuArgs
    ///         {
    ///             Capacity = 3,
    ///             Name = "Standard_D1_v2",
    ///             Tier = "Standard",
    ///         },
    ///         UpgradePolicy = new AzureNative.Compute.V20210301.Inputs.UpgradePolicyArgs
    ///         {
    ///             Mode = AzureNative.Compute.V20210301.UpgradeMode.Manual,
    ///         },
    ///         VirtualMachineProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetVMProfileArgs
    ///         {
    ///             NetworkProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetNetworkProfileArgs
    ///             {
    ///                 NetworkInterfaceConfigurations = new[]
    ///                 {
    ///                     new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetNetworkConfigurationArgs
    ///                     {
    ///                         EnableIPForwarding = true,
    ///                         IpConfigurations = new[]
    ///                         {
    ///                             new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetIPConfigurationArgs
    ///                             {
    ///                                 Name = "{vmss-name}",
    ///                                 Subnet = new AzureNative.Compute.V20210301.Inputs.ApiEntityReferenceArgs
    ///                                 {
    ///                                     Id = "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/{existing-virtual-network-name}/subnets/{existing-subnet-name}",
    ///                                 },
    ///                             },
    ///                         },
    ///                         Name = "{vmss-name}",
    ///                         Primary = true,
    ///                     },
    ///                 },
    ///             },
    ///             OsProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetOSProfileArgs
    ///             {
    ///                 AdminPassword = "{your-password}",
    ///                 AdminUsername = "{your-username}",
    ///                 ComputerNamePrefix = "{vmss-name}",
    ///             },
    ///             ScheduledEventsProfile = new AzureNative.Compute.V20210301.Inputs.ScheduledEventsProfileArgs
    ///             {
    ///                 TerminateNotificationProfile = new AzureNative.Compute.V20210301.Inputs.TerminateNotificationProfileArgs
    ///                 {
    ///                     Enable = true,
    ///                     NotBeforeTimeout = "PT5M",
    ///                 },
    ///             },
    ///             StorageProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetStorageProfileArgs
    ///             {
    ///                 ImageReference = new AzureNative.Compute.V20210301.Inputs.ImageReferenceArgs
    ///                 {
    ///                     Offer = "WindowsServer",
    ///                     Publisher = "MicrosoftWindowsServer",
    ///                     Sku = "2016-Datacenter",
    ///                     Version = "latest",
    ///                 },
    ///                 OsDisk = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetOSDiskArgs
    ///                 {
    ///                     Caching = AzureNative.Compute.V20210301.CachingTypes.ReadWrite,
    ///                     CreateOption = "FromImage",
    ///                     ManagedDisk = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetManagedDiskParametersArgs
    ///                     {
    ///                         StorageAccountType = "Standard_LRS",
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///         VmScaleSetName = "{vmss-name}",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Create a scale set with userData.
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var virtualMachineScaleSet = new AzureNative.Compute.V20210301.VirtualMachineScaleSet("virtualMachineScaleSet", new()
    ///     {
    ///         Location = "westus",
    ///         Overprovision = true,
    ///         ResourceGroupName = "myResourceGroup",
    ///         Sku = new AzureNative.Compute.V20210301.Inputs.SkuArgs
    ///         {
    ///             Capacity = 3,
    ///             Name = "Standard_D1_v2",
    ///             Tier = "Standard",
    ///         },
    ///         UpgradePolicy = new AzureNative.Compute.V20210301.Inputs.UpgradePolicyArgs
    ///         {
    ///             Mode = AzureNative.Compute.V20210301.UpgradeMode.Manual,
    ///         },
    ///         VirtualMachineProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetVMProfileArgs
    ///         {
    ///             NetworkProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetNetworkProfileArgs
    ///             {
    ///                 NetworkInterfaceConfigurations = new[]
    ///                 {
    ///                     new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetNetworkConfigurationArgs
    ///                     {
    ///                         EnableIPForwarding = true,
    ///                         IpConfigurations = new[]
    ///                         {
    ///                             new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetIPConfigurationArgs
    ///                             {
    ///                                 Name = "{vmss-name}",
    ///                                 Subnet = new AzureNative.Compute.V20210301.Inputs.ApiEntityReferenceArgs
    ///                                 {
    ///                                     Id = "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/{existing-virtual-network-name}/subnets/{existing-subnet-name}",
    ///                                 },
    ///                             },
    ///                         },
    ///                         Name = "{vmss-name}",
    ///                         Primary = true,
    ///                     },
    ///                 },
    ///             },
    ///             OsProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetOSProfileArgs
    ///             {
    ///                 AdminPassword = "{your-password}",
    ///                 AdminUsername = "{your-username}",
    ///                 ComputerNamePrefix = "{vmss-name}",
    ///             },
    ///             StorageProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetStorageProfileArgs
    ///             {
    ///                 ImageReference = new AzureNative.Compute.V20210301.Inputs.ImageReferenceArgs
    ///                 {
    ///                     Offer = "WindowsServer",
    ///                     Publisher = "MicrosoftWindowsServer",
    ///                     Sku = "2016-Datacenter",
    ///                     Version = "latest",
    ///                 },
    ///                 OsDisk = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetOSDiskArgs
    ///                 {
    ///                     Caching = AzureNative.Compute.V20210301.CachingTypes.ReadWrite,
    ///                     CreateOption = "FromImage",
    ///                     ManagedDisk = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetManagedDiskParametersArgs
    ///                     {
    ///                         StorageAccountType = "Standard_LRS",
    ///                     },
    ///                 },
    ///             },
    ///             UserData = "RXhhbXBsZSBVc2VyRGF0YQ==",
    ///         },
    ///         VmScaleSetName = "{vmss-name}",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Create a scale set with virtual machines in different zones.
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var virtualMachineScaleSet = new AzureNative.Compute.V20210301.VirtualMachineScaleSet("virtualMachineScaleSet", new()
    ///     {
    ///         Location = "centralus",
    ///         Overprovision = true,
    ///         ResourceGroupName = "myResourceGroup",
    ///         Sku = new AzureNative.Compute.V20210301.Inputs.SkuArgs
    ///         {
    ///             Capacity = 2,
    ///             Name = "Standard_A1_v2",
    ///             Tier = "Standard",
    ///         },
    ///         UpgradePolicy = new AzureNative.Compute.V20210301.Inputs.UpgradePolicyArgs
    ///         {
    ///             Mode = AzureNative.Compute.V20210301.UpgradeMode.Automatic,
    ///         },
    ///         VirtualMachineProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetVMProfileArgs
    ///         {
    ///             NetworkProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetNetworkProfileArgs
    ///             {
    ///                 NetworkInterfaceConfigurations = new[]
    ///                 {
    ///                     new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetNetworkConfigurationArgs
    ///                     {
    ///                         EnableIPForwarding = true,
    ///                         IpConfigurations = new[]
    ///                         {
    ///                             new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetIPConfigurationArgs
    ///                             {
    ///                                 Name = "{vmss-name}",
    ///                                 Subnet = new AzureNative.Compute.V20210301.Inputs.ApiEntityReferenceArgs
    ///                                 {
    ///                                     Id = "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/{existing-virtual-network-name}/subnets/{existing-subnet-name}",
    ///                                 },
    ///                             },
    ///                         },
    ///                         Name = "{vmss-name}",
    ///                         Primary = true,
    ///                     },
    ///                 },
    ///             },
    ///             OsProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetOSProfileArgs
    ///             {
    ///                 AdminPassword = "{your-password}",
    ///                 AdminUsername = "{your-username}",
    ///                 ComputerNamePrefix = "{vmss-name}",
    ///             },
    ///             StorageProfile = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetStorageProfileArgs
    ///             {
    ///                 DataDisks = new[]
    ///                 {
    ///                     new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetDataDiskArgs
    ///                     {
    ///                         CreateOption = "Empty",
    ///                         DiskSizeGB = 1023,
    ///                         Lun = 0,
    ///                     },
    ///                     new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetDataDiskArgs
    ///                     {
    ///                         CreateOption = "Empty",
    ///                         DiskSizeGB = 1023,
    ///                         Lun = 1,
    ///                     },
    ///                 },
    ///                 ImageReference = new AzureNative.Compute.V20210301.Inputs.ImageReferenceArgs
    ///                 {
    ///                     Offer = "WindowsServer",
    ///                     Publisher = "MicrosoftWindowsServer",
    ///                     Sku = "2016-Datacenter",
    ///                     Version = "latest",
    ///                 },
    ///                 OsDisk = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetOSDiskArgs
    ///                 {
    ///                     Caching = AzureNative.Compute.V20210301.CachingTypes.ReadWrite,
    ///                     CreateOption = "FromImage",
    ///                     DiskSizeGB = 512,
    ///                     ManagedDisk = new AzureNative.Compute.V20210301.Inputs.VirtualMachineScaleSetManagedDiskParametersArgs
    ///                     {
    ///                         StorageAccountType = "Standard_LRS",
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///         VmScaleSetName = "{vmss-name}",
    ///         Zones = new[]
    ///         {
    ///             "1",
    ///             "3",
    ///         },
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// 
    /// ## Import
    /// 
    /// An existing resource can be imported using its type token, name, and identifier, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure-native:compute/v20210301:VirtualMachineScaleSet {vmss-name} /subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachineScaleSets/{vmss-name} 
    /// ```
    /// </summary>
    [AzureNativeResourceType("azure-native:compute/v20210301:VirtualMachineScaleSet")]
    public partial class VirtualMachineScaleSet : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Specifies additional capabilities enabled or disabled on the Virtual Machines in the Virtual Machine Scale Set. For instance: whether the Virtual Machines have the capability to support attaching managed data disks with UltraSSD_LRS storage account type.
        /// </summary>
        [Output("additionalCapabilities")]
        public Output<Outputs.AdditionalCapabilitiesResponse?> AdditionalCapabilities { get; private set; } = null!;

        /// <summary>
        /// Policy for automatic repairs.
        /// </summary>
        [Output("automaticRepairsPolicy")]
        public Output<Outputs.AutomaticRepairsPolicyResponse?> AutomaticRepairsPolicy { get; private set; } = null!;

        /// <summary>
        /// When Overprovision is enabled, extensions are launched only on the requested number of VMs which are finally kept. This property will hence ensure that the extensions do not run on the extra overprovisioned VMs.
        /// </summary>
        [Output("doNotRunExtensionsOnOverprovisionedVMs")]
        public Output<bool?> DoNotRunExtensionsOnOverprovisionedVMs { get; private set; } = null!;

        /// <summary>
        /// The extended location of the Virtual Machine Scale Set.
        /// </summary>
        [Output("extendedLocation")]
        public Output<Outputs.ExtendedLocationResponse?> ExtendedLocation { get; private set; } = null!;

        /// <summary>
        /// Specifies information about the dedicated host group that the virtual machine scale set resides in. &lt;br&gt;&lt;br&gt;Minimum api-version: 2020-06-01.
        /// </summary>
        [Output("hostGroup")]
        public Output<Outputs.SubResourceResponse?> HostGroup { get; private set; } = null!;

        /// <summary>
        /// The identity of the virtual machine scale set, if configured.
        /// </summary>
        [Output("identity")]
        public Output<Outputs.VirtualMachineScaleSetIdentityResponse?> Identity { get; private set; } = null!;

        /// <summary>
        /// Resource location
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Resource name
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Specifies the orchestration mode for the virtual machine scale set.
        /// </summary>
        [Output("orchestrationMode")]
        public Output<string?> OrchestrationMode { get; private set; } = null!;

        /// <summary>
        /// Specifies whether the Virtual Machine Scale Set should be overprovisioned.
        /// </summary>
        [Output("overprovision")]
        public Output<bool?> Overprovision { get; private set; } = null!;

        /// <summary>
        /// Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use.  In the Azure portal, find the marketplace image that you want to use and then click **Want to deploy programmatically, Get Started -&gt;**. Enter any required information and then click **Save**.
        /// </summary>
        [Output("plan")]
        public Output<Outputs.PlanResponse?> Plan { get; private set; } = null!;

        /// <summary>
        /// Fault Domain count for each placement group.
        /// </summary>
        [Output("platformFaultDomainCount")]
        public Output<int?> PlatformFaultDomainCount { get; private set; } = null!;

        /// <summary>
        /// The provisioning state, which only appears in the response.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Specifies information about the proximity placement group that the virtual machine scale set should be assigned to. &lt;br&gt;&lt;br&gt;Minimum api-version: 2018-04-01.
        /// </summary>
        [Output("proximityPlacementGroup")]
        public Output<Outputs.SubResourceResponse?> ProximityPlacementGroup { get; private set; } = null!;

        /// <summary>
        /// Specifies the scale-in policy that decides which virtual machines are chosen for removal when a Virtual Machine Scale Set is scaled-in.
        /// </summary>
        [Output("scaleInPolicy")]
        public Output<Outputs.ScaleInPolicyResponse?> ScaleInPolicy { get; private set; } = null!;

        /// <summary>
        /// When true this limits the scale set to a single placement group, of max size 100 virtual machines. NOTE: If singlePlacementGroup is true, it may be modified to false. However, if singlePlacementGroup is false, it may not be modified to true.
        /// </summary>
        [Output("singlePlacementGroup")]
        public Output<bool?> SinglePlacementGroup { get; private set; } = null!;

        /// <summary>
        /// The virtual machine scale set sku.
        /// </summary>
        [Output("sku")]
        public Output<Outputs.SkuResponse?> Sku { get; private set; } = null!;

        /// <summary>
        /// Resource tags
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Resource type
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// Specifies the ID which uniquely identifies a Virtual Machine Scale Set.
        /// </summary>
        [Output("uniqueId")]
        public Output<string> UniqueId { get; private set; } = null!;

        /// <summary>
        /// The upgrade policy.
        /// </summary>
        [Output("upgradePolicy")]
        public Output<Outputs.UpgradePolicyResponse?> UpgradePolicy { get; private set; } = null!;

        /// <summary>
        /// The virtual machine profile.
        /// </summary>
        [Output("virtualMachineProfile")]
        public Output<Outputs.VirtualMachineScaleSetVMProfileResponse?> VirtualMachineProfile { get; private set; } = null!;

        /// <summary>
        /// Whether to force strictly even Virtual Machine distribution cross x-zones in case there is zone outage.
        /// </summary>
        [Output("zoneBalance")]
        public Output<bool?> ZoneBalance { get; private set; } = null!;

        /// <summary>
        /// The virtual machine scale set zones. NOTE: Availability zones can only be set when you create the scale set
        /// </summary>
        [Output("zones")]
        public Output<ImmutableArray<string>> Zones { get; private set; } = null!;


        /// <summary>
        /// Create a VirtualMachineScaleSet resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VirtualMachineScaleSet(string name, VirtualMachineScaleSetArgs args, CustomResourceOptions? options = null)
            : base("azure-native:compute/v20210301:VirtualMachineScaleSet", name, args ?? new VirtualMachineScaleSetArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VirtualMachineScaleSet(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:compute/v20210301:VirtualMachineScaleSet", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:compute:VirtualMachineScaleSet"},
                    new global::Pulumi.Alias { Type = "azure-native:compute/v20150615:VirtualMachineScaleSet"},
                    new global::Pulumi.Alias { Type = "azure-native:compute/v20160330:VirtualMachineScaleSet"},
                    new global::Pulumi.Alias { Type = "azure-native:compute/v20160430preview:VirtualMachineScaleSet"},
                    new global::Pulumi.Alias { Type = "azure-native:compute/v20170330:VirtualMachineScaleSet"},
                    new global::Pulumi.Alias { Type = "azure-native:compute/v20171201:VirtualMachineScaleSet"},
                    new global::Pulumi.Alias { Type = "azure-native:compute/v20180401:VirtualMachineScaleSet"},
                    new global::Pulumi.Alias { Type = "azure-native:compute/v20180601:VirtualMachineScaleSet"},
                    new global::Pulumi.Alias { Type = "azure-native:compute/v20181001:VirtualMachineScaleSet"},
                    new global::Pulumi.Alias { Type = "azure-native:compute/v20190301:VirtualMachineScaleSet"},
                    new global::Pulumi.Alias { Type = "azure-native:compute/v20190701:VirtualMachineScaleSet"},
                    new global::Pulumi.Alias { Type = "azure-native:compute/v20191201:VirtualMachineScaleSet"},
                    new global::Pulumi.Alias { Type = "azure-native:compute/v20200601:VirtualMachineScaleSet"},
                    new global::Pulumi.Alias { Type = "azure-native:compute/v20201201:VirtualMachineScaleSet"},
                    new global::Pulumi.Alias { Type = "azure-native:compute/v20210401:VirtualMachineScaleSet"},
                    new global::Pulumi.Alias { Type = "azure-native:compute/v20210701:VirtualMachineScaleSet"},
                    new global::Pulumi.Alias { Type = "azure-native:compute/v20211101:VirtualMachineScaleSet"},
                    new global::Pulumi.Alias { Type = "azure-native:compute/v20220301:VirtualMachineScaleSet"},
                    new global::Pulumi.Alias { Type = "azure-native:compute/v20220801:VirtualMachineScaleSet"},
                    new global::Pulumi.Alias { Type = "azure-native:compute/v20221101:VirtualMachineScaleSet"},
                    new global::Pulumi.Alias { Type = "azure-native:compute/v20230301:VirtualMachineScaleSet"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VirtualMachineScaleSet resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VirtualMachineScaleSet Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new VirtualMachineScaleSet(name, id, options);
        }
    }

    public sealed class VirtualMachineScaleSetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies additional capabilities enabled or disabled on the Virtual Machines in the Virtual Machine Scale Set. For instance: whether the Virtual Machines have the capability to support attaching managed data disks with UltraSSD_LRS storage account type.
        /// </summary>
        [Input("additionalCapabilities")]
        public Input<Inputs.AdditionalCapabilitiesArgs>? AdditionalCapabilities { get; set; }

        /// <summary>
        /// Policy for automatic repairs.
        /// </summary>
        [Input("automaticRepairsPolicy")]
        public Input<Inputs.AutomaticRepairsPolicyArgs>? AutomaticRepairsPolicy { get; set; }

        /// <summary>
        /// When Overprovision is enabled, extensions are launched only on the requested number of VMs which are finally kept. This property will hence ensure that the extensions do not run on the extra overprovisioned VMs.
        /// </summary>
        [Input("doNotRunExtensionsOnOverprovisionedVMs")]
        public Input<bool>? DoNotRunExtensionsOnOverprovisionedVMs { get; set; }

        /// <summary>
        /// The extended location of the Virtual Machine Scale Set.
        /// </summary>
        [Input("extendedLocation")]
        public Input<Inputs.ExtendedLocationArgs>? ExtendedLocation { get; set; }

        /// <summary>
        /// Specifies information about the dedicated host group that the virtual machine scale set resides in. &lt;br&gt;&lt;br&gt;Minimum api-version: 2020-06-01.
        /// </summary>
        [Input("hostGroup")]
        public Input<Inputs.SubResourceArgs>? HostGroup { get; set; }

        /// <summary>
        /// The identity of the virtual machine scale set, if configured.
        /// </summary>
        [Input("identity")]
        public Input<Inputs.VirtualMachineScaleSetIdentityArgs>? Identity { get; set; }

        /// <summary>
        /// Resource location
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Specifies the orchestration mode for the virtual machine scale set.
        /// </summary>
        [Input("orchestrationMode")]
        public InputUnion<string, Pulumi.AzureNative.Compute.V20210301.OrchestrationMode>? OrchestrationMode { get; set; }

        /// <summary>
        /// Specifies whether the Virtual Machine Scale Set should be overprovisioned.
        /// </summary>
        [Input("overprovision")]
        public Input<bool>? Overprovision { get; set; }

        /// <summary>
        /// Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use.  In the Azure portal, find the marketplace image that you want to use and then click **Want to deploy programmatically, Get Started -&gt;**. Enter any required information and then click **Save**.
        /// </summary>
        [Input("plan")]
        public Input<Inputs.PlanArgs>? Plan { get; set; }

        /// <summary>
        /// Fault Domain count for each placement group.
        /// </summary>
        [Input("platformFaultDomainCount")]
        public Input<int>? PlatformFaultDomainCount { get; set; }

        /// <summary>
        /// Specifies information about the proximity placement group that the virtual machine scale set should be assigned to. &lt;br&gt;&lt;br&gt;Minimum api-version: 2018-04-01.
        /// </summary>
        [Input("proximityPlacementGroup")]
        public Input<Inputs.SubResourceArgs>? ProximityPlacementGroup { get; set; }

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Specifies the scale-in policy that decides which virtual machines are chosen for removal when a Virtual Machine Scale Set is scaled-in.
        /// </summary>
        [Input("scaleInPolicy")]
        public Input<Inputs.ScaleInPolicyArgs>? ScaleInPolicy { get; set; }

        /// <summary>
        /// When true this limits the scale set to a single placement group, of max size 100 virtual machines. NOTE: If singlePlacementGroup is true, it may be modified to false. However, if singlePlacementGroup is false, it may not be modified to true.
        /// </summary>
        [Input("singlePlacementGroup")]
        public Input<bool>? SinglePlacementGroup { get; set; }

        /// <summary>
        /// The virtual machine scale set sku.
        /// </summary>
        [Input("sku")]
        public Input<Inputs.SkuArgs>? Sku { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The upgrade policy.
        /// </summary>
        [Input("upgradePolicy")]
        public Input<Inputs.UpgradePolicyArgs>? UpgradePolicy { get; set; }

        /// <summary>
        /// The virtual machine profile.
        /// </summary>
        [Input("virtualMachineProfile")]
        public Input<Inputs.VirtualMachineScaleSetVMProfileArgs>? VirtualMachineProfile { get; set; }

        /// <summary>
        /// The name of the VM scale set to create or update.
        /// </summary>
        [Input("vmScaleSetName")]
        public Input<string>? VmScaleSetName { get; set; }

        /// <summary>
        /// Whether to force strictly even Virtual Machine distribution cross x-zones in case there is zone outage.
        /// </summary>
        [Input("zoneBalance")]
        public Input<bool>? ZoneBalance { get; set; }

        [Input("zones")]
        private InputList<string>? _zones;

        /// <summary>
        /// The virtual machine scale set zones. NOTE: Availability zones can only be set when you create the scale set
        /// </summary>
        public InputList<string> Zones
        {
            get => _zones ?? (_zones = new InputList<string>());
            set => _zones = value;
        }

        public VirtualMachineScaleSetArgs()
        {
        }
        public static new VirtualMachineScaleSetArgs Empty => new VirtualMachineScaleSetArgs();
    }
}
