// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ProviderHub.V20210901Preview
{
    /// <summary>
    /// ## Example Usage
    /// ### ResourceTypeRegistrations_CreateOrUpdate
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var resourceTypeRegistration = new AzureNative.ProviderHub.V20210901Preview.ResourceTypeRegistration("resourceTypeRegistration", new()
    ///     {
    ///         Properties = new AzureNative.ProviderHub.V20210901Preview.Inputs.ResourceTypeRegistrationPropertiesArgs
    ///         {
    ///             Endpoints = new[]
    ///             {
    ///                 new AzureNative.ProviderHub.V20210901Preview.Inputs.ResourceTypeEndpointArgs
    ///                 {
    ///                     ApiVersions = new[]
    ///                     {
    ///                         "2020-06-01-preview",
    ///                     },
    ///                     Locations = new[]
    ///                     {
    ///                         "West US",
    ///                         "East US",
    ///                         "North Europe",
    ///                     },
    ///                     RequiredFeatures = new[]
    ///                     {
    ///                         "&lt;feature flag&gt;",
    ///                     },
    ///                 },
    ///             },
    ///             Management = new AzureNative.ProviderHub.V20210901Preview.Inputs.ResourceTypeRegistrationPropertiesManagementArgs
    ///             {
    ///                 IncidentContactEmail = "helpme@contoso.com",
    ///                 IncidentRoutingService = "",
    ///                 IncidentRoutingTeam = "",
    ///                 ManifestOwners = new[]
    ///                 {
    ///                     "SPARTA-PlatformServiceAdministrator",
    ///                 },
    ///                 ResourceAccessPolicy = "NotSpecified",
    ///                 ServiceTreeInfos = new[]
    ///                 {
    ///                     new AzureNative.ProviderHub.V20210901Preview.Inputs.ServiceTreeInfoArgs
    ///                     {
    ///                         ComponentId = "d1b7d8ba-05e2-48e6-90d6-d781b99c6e69",
    ///                         Readiness = "InDevelopment",
    ///                         ServiceId = "d1b7d8ba-05e2-48e6-90d6-d781b99c6e69",
    ///                     },
    ///                 },
    ///             },
    ///             OpenApiConfiguration = new AzureNative.ProviderHub.V20210901Preview.Inputs.OpenApiConfigurationArgs
    ///             {
    ///                 Validation = new AzureNative.ProviderHub.V20210901Preview.Inputs.OpenApiValidationArgs
    ///                 {
    ///                     AllowNoncompliantCollectionResponse = true,
    ///                 },
    ///             },
    ///             Regionality = "Regional",
    ///             ResourceConcurrencyControlOptions = 
    ///             {
    ///                 { "patch", new AzureNative.ProviderHub.V20210901Preview.Inputs.ResourceConcurrencyControlOptionArgs
    ///                 {
    ///                     Policy = "SynchronizeBeginExtension",
    ///                 } },
    ///                 { "post", new AzureNative.ProviderHub.V20210901Preview.Inputs.ResourceConcurrencyControlOptionArgs
    ///                 {
    ///                     Policy = "SynchronizeBeginExtension",
    ///                 } },
    ///                 { "put", new AzureNative.ProviderHub.V20210901Preview.Inputs.ResourceConcurrencyControlOptionArgs
    ///                 {
    ///                     Policy = "SynchronizeBeginExtension",
    ///                 } },
    ///             },
    ///             ResourceGraphConfiguration = new AzureNative.ProviderHub.V20210901Preview.Inputs.ResourceTypeRegistrationPropertiesResourceGraphConfigurationArgs
    ///             {
    ///                 ApiVersion = "2019-01-01",
    ///                 Enabled = true,
    ///             },
    ///             RoutingType = "Default",
    ///             SwaggerSpecifications = new[]
    ///             {
    ///                 new AzureNative.ProviderHub.V20210901Preview.Inputs.SwaggerSpecificationArgs
    ///                 {
    ///                     ApiVersions = new[]
    ///                     {
    ///                         "2020-06-01-preview",
    ///                     },
    ///                     SwaggerSpecFolderUri = "https://github.com/Azure/azure-rest-api-specs/blob/feature/azure/contoso/specification/contoso/resource-manager/Microsoft.SampleRP/",
    ///                 },
    ///             },
    ///         },
    ///         ProviderNamespace = "Microsoft.Contoso",
    ///         ResourceType = "employees",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// 
    /// ## Import
    /// 
    /// An existing resource can be imported using its type token, name, and identifier, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure-native:providerhub/v20210901preview:ResourceTypeRegistration employees /subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}/resourcetypeRegistrations/{resourceType} 
    /// ```
    /// </summary>
    [AzureNativeResourceType("azure-native:providerhub/v20210901preview:ResourceTypeRegistration")]
    public partial class ResourceTypeRegistration : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("properties")]
        public Output<Outputs.ResourceTypeRegistrationResponseProperties> Properties { get; private set; } = null!;

        /// <summary>
        /// Metadata pertaining to creation and last modification of the resource.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a ResourceTypeRegistration resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ResourceTypeRegistration(string name, ResourceTypeRegistrationArgs args, CustomResourceOptions? options = null)
            : base("azure-native:providerhub/v20210901preview:ResourceTypeRegistration", name, args ?? new ResourceTypeRegistrationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ResourceTypeRegistration(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:providerhub/v20210901preview:ResourceTypeRegistration", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:providerhub:ResourceTypeRegistration"},
                    new global::Pulumi.Alias { Type = "azure-native:providerhub/v20201120:ResourceTypeRegistration"},
                    new global::Pulumi.Alias { Type = "azure-native:providerhub/v20210501preview:ResourceTypeRegistration"},
                    new global::Pulumi.Alias { Type = "azure-native:providerhub/v20210601preview:ResourceTypeRegistration"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ResourceTypeRegistration resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ResourceTypeRegistration Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new ResourceTypeRegistration(name, id, options);
        }
    }

    public sealed class ResourceTypeRegistrationArgs : global::Pulumi.ResourceArgs
    {
        [Input("properties")]
        public Input<Inputs.ResourceTypeRegistrationPropertiesArgs>? Properties { get; set; }

        /// <summary>
        /// The name of the resource provider hosted within ProviderHub.
        /// </summary>
        [Input("providerNamespace", required: true)]
        public Input<string> ProviderNamespace { get; set; } = null!;

        /// <summary>
        /// The resource type.
        /// </summary>
        [Input("resourceType")]
        public Input<string>? ResourceType { get; set; }

        public ResourceTypeRegistrationArgs()
        {
        }
        public static new ResourceTypeRegistrationArgs Empty => new ResourceTypeRegistrationArgs();
    }
}
