// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureNative.ProviderHub.V20210901Preview
{
    /// <summary>
    /// ## Example Usage
    /// ### ProviderRegistrations_CreateOrUpdate
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using AzureNative = Pulumi.AzureNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var providerRegistration = new AzureNative.ProviderHub.V20210901Preview.ProviderRegistration("providerRegistration", new()
    ///     {
    ///         Properties = new AzureNative.ProviderHub.V20210901Preview.Inputs.ProviderRegistrationPropertiesArgs
    ///         {
    ///             Capabilities = new[]
    ///             {
    ///                 new AzureNative.ProviderHub.V20210901Preview.Inputs.ResourceProviderCapabilitiesArgs
    ///                 {
    ///                     Effect = "Allow",
    ///                     QuotaId = "CSP_2015-05-01",
    ///                 },
    ///                 new AzureNative.ProviderHub.V20210901Preview.Inputs.ResourceProviderCapabilitiesArgs
    ///                 {
    ///                     Effect = "Allow",
    ///                     QuotaId = "CSP_MG_2017-12-01",
    ///                 },
    ///             },
    ///             Management = new AzureNative.ProviderHub.V20210901Preview.Inputs.ResourceProviderManifestPropertiesManagementArgs
    ///             {
    ///                 IncidentContactEmail = "helpme@contoso.com",
    ///                 IncidentRoutingService = "Contoso Resource Provider",
    ///                 IncidentRoutingTeam = "Contoso Triage",
    ///                 ServiceTreeInfos = new[]
    ///                 {
    ///                     new AzureNative.ProviderHub.V20210901Preview.Inputs.ServiceTreeInfoArgs
    ///                     {
    ///                         ComponentId = "d1b7d8ba-05e2-48e6-90d6-d781b99c6e69",
    ///                         Readiness = "InDevelopment",
    ///                         ServiceId = "d1b7d8ba-05e2-48e6-90d6-d781b99c6e69",
    ///                     },
    ///                 },
    ///             },
    ///             ProviderType = "Internal",
    ///             ProviderVersion = "2.0",
    ///         },
    ///         ProviderNamespace = "Microsoft.Contoso",
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// 
    /// ## Import
    /// 
    /// An existing resource can be imported using its type token, name, and identifier, e.g.
    /// 
    /// ```sh
    /// $ pulumi import azure-native:providerhub/v20210901preview:ProviderRegistration myresource1 /subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace} 
    /// ```
    /// </summary>
    [AzureNativeResourceType("azure-native:providerhub/v20210901preview:ProviderRegistration")]
    public partial class ProviderRegistration : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The name of the resource
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("properties")]
        public Output<Outputs.ProviderRegistrationResponseProperties> Properties { get; private set; } = null!;

        /// <summary>
        /// Metadata pertaining to creation and last modification of the resource.
        /// </summary>
        [Output("systemData")]
        public Output<Outputs.SystemDataResponse> SystemData { get; private set; } = null!;

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a ProviderRegistration resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ProviderRegistration(string name, ProviderRegistrationArgs? args = null, CustomResourceOptions? options = null)
            : base("azure-native:providerhub/v20210901preview:ProviderRegistration", name, args ?? new ProviderRegistrationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ProviderRegistration(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azure-native:providerhub/v20210901preview:ProviderRegistration", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "azure-native:providerhub:ProviderRegistration"},
                    new global::Pulumi.Alias { Type = "azure-native:providerhub/v20201120:ProviderRegistration"},
                    new global::Pulumi.Alias { Type = "azure-native:providerhub/v20210501preview:ProviderRegistration"},
                    new global::Pulumi.Alias { Type = "azure-native:providerhub/v20210601preview:ProviderRegistration"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ProviderRegistration resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ProviderRegistration Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new ProviderRegistration(name, id, options);
        }
    }

    public sealed class ProviderRegistrationArgs : global::Pulumi.ResourceArgs
    {
        [Input("properties")]
        public Input<Inputs.ProviderRegistrationPropertiesArgs>? Properties { get; set; }

        /// <summary>
        /// The name of the resource provider hosted within ProviderHub.
        /// </summary>
        [Input("providerNamespace")]
        public Input<string>? ProviderNamespace { get; set; }

        public ProviderRegistrationArgs()
        {
        }
        public static new ProviderRegistrationArgs Empty => new ProviderRegistrationArgs();
    }
}
