# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Callable, Mapping, Optional, Sequence, Union, overload
from ... import _utilities

__all__ = [
    'AccountResourcePropertiesArgs',
]

@pulumi.input_type
class AccountResourcePropertiesArgs:
    def __init__(__self__, *,
                 app_id: pulumi.Input[str]):
        """
        Property bag from billing account
        :param pulumi.Input[str] app_id: Customer owned application ID
        """
        AccountResourcePropertiesArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            app_id=app_id,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             app_id: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions] = None,
             **kwargs):
        if app_id is None and 'appId' in kwargs:
            app_id = kwargs['appId']
        if app_id is None:
            raise TypeError("Missing 'app_id' argument")

        _setter("app_id", app_id)

    @property
    @pulumi.getter(name="appId")
    def app_id(self) -> pulumi.Input[str]:
        """
        Customer owned application ID
        """
        return pulumi.get(self, "app_id")

    @app_id.setter
    def app_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "app_id", value)


