# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from ... import _utilities
from . import outputs
from ._enums import *
from ._inputs import *

__all__ = ['CodelessApiPollingDataConnectorArgs', 'CodelessApiPollingDataConnector']

@pulumi.input_type
class CodelessApiPollingDataConnectorArgs:
    def __init__(__self__, *,
                 kind: pulumi.Input[str],
                 resource_group_name: pulumi.Input[str],
                 workspace_name: pulumi.Input[str],
                 connector_ui_config: Optional[pulumi.Input['CodelessUiConnectorConfigPropertiesArgs']] = None,
                 data_connector_id: Optional[pulumi.Input[str]] = None,
                 polling_config: Optional[pulumi.Input['CodelessConnectorPollingConfigPropertiesArgs']] = None):
        """
        The set of arguments for constructing a CodelessApiPollingDataConnector resource.
        :param pulumi.Input[str] kind: The kind of the data connector
               Expected value is 'APIPolling'.
        :param pulumi.Input[str] resource_group_name: The name of the resource group. The name is case insensitive.
        :param pulumi.Input[str] workspace_name: The name of the workspace.
        :param pulumi.Input['CodelessUiConnectorConfigPropertiesArgs'] connector_ui_config: Config to describe the instructions blade
        :param pulumi.Input[str] data_connector_id: Connector ID
        :param pulumi.Input['CodelessConnectorPollingConfigPropertiesArgs'] polling_config: Config to describe the polling instructions
        """
        pulumi.set(__self__, "kind", 'APIPolling')
        pulumi.set(__self__, "resource_group_name", resource_group_name)
        pulumi.set(__self__, "workspace_name", workspace_name)
        if connector_ui_config is not None:
            pulumi.set(__self__, "connector_ui_config", connector_ui_config)
        if data_connector_id is not None:
            pulumi.set(__self__, "data_connector_id", data_connector_id)
        if polling_config is not None:
            pulumi.set(__self__, "polling_config", polling_config)

    @property
    @pulumi.getter
    def kind(self) -> pulumi.Input[str]:
        """
        The kind of the data connector
        Expected value is 'APIPolling'.
        """
        return pulumi.get(self, "kind")

    @kind.setter
    def kind(self, value: pulumi.Input[str]):
        pulumi.set(self, "kind", value)

    @property
    @pulumi.getter(name="resourceGroupName")
    def resource_group_name(self) -> pulumi.Input[str]:
        """
        The name of the resource group. The name is case insensitive.
        """
        return pulumi.get(self, "resource_group_name")

    @resource_group_name.setter
    def resource_group_name(self, value: pulumi.Input[str]):
        pulumi.set(self, "resource_group_name", value)

    @property
    @pulumi.getter(name="workspaceName")
    def workspace_name(self) -> pulumi.Input[str]:
        """
        The name of the workspace.
        """
        return pulumi.get(self, "workspace_name")

    @workspace_name.setter
    def workspace_name(self, value: pulumi.Input[str]):
        pulumi.set(self, "workspace_name", value)

    @property
    @pulumi.getter(name="connectorUiConfig")
    def connector_ui_config(self) -> Optional[pulumi.Input['CodelessUiConnectorConfigPropertiesArgs']]:
        """
        Config to describe the instructions blade
        """
        return pulumi.get(self, "connector_ui_config")

    @connector_ui_config.setter
    def connector_ui_config(self, value: Optional[pulumi.Input['CodelessUiConnectorConfigPropertiesArgs']]):
        pulumi.set(self, "connector_ui_config", value)

    @property
    @pulumi.getter(name="dataConnectorId")
    def data_connector_id(self) -> Optional[pulumi.Input[str]]:
        """
        Connector ID
        """
        return pulumi.get(self, "data_connector_id")

    @data_connector_id.setter
    def data_connector_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "data_connector_id", value)

    @property
    @pulumi.getter(name="pollingConfig")
    def polling_config(self) -> Optional[pulumi.Input['CodelessConnectorPollingConfigPropertiesArgs']]:
        """
        Config to describe the polling instructions
        """
        return pulumi.get(self, "polling_config")

    @polling_config.setter
    def polling_config(self, value: Optional[pulumi.Input['CodelessConnectorPollingConfigPropertiesArgs']]):
        pulumi.set(self, "polling_config", value)


class CodelessApiPollingDataConnector(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 connector_ui_config: Optional[pulumi.Input[pulumi.InputType['CodelessUiConnectorConfigPropertiesArgs']]] = None,
                 data_connector_id: Optional[pulumi.Input[str]] = None,
                 kind: Optional[pulumi.Input[str]] = None,
                 polling_config: Optional[pulumi.Input[pulumi.InputType['CodelessConnectorPollingConfigPropertiesArgs']]] = None,
                 resource_group_name: Optional[pulumi.Input[str]] = None,
                 workspace_name: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Represents Codeless API Polling data connector.

        ## Example Usage
        ### Creates or updates a APIPolling data connector

        ```python
        import pulumi
        import pulumi_azure_native as azure_native

        codeless_api_polling_data_connector = azure_native.securityinsights.v20220801preview.CodelessApiPollingDataConnector("codelessApiPollingDataConnector",
            connector_ui_config=azure_native.securityinsights.v20220801preview.CodelessUiConnectorConfigPropertiesResponseArgs(
                availability=azure_native.securityinsights.v20220801preview.AvailabilityArgs(
                    is_preview=True,
                    status=1,
                ),
                connectivity_criteria=[azure_native.securityinsights.v20220801preview.CodelessUiConnectorConfigPropertiesConnectivityCriteriaArgs(
                    type="SentinelKindsV2",
                    value=[],
                )],
                data_types=[azure_native.securityinsights.v20220801preview.CodelessUiConnectorConfigPropertiesDataTypesArgs(
                    last_data_received_query=\"\"\"{{graphQueriesTableName}}
                    | summarize Time = max(TimeGenerated)
                    | where isnotempty(Time)\"\"\",
                    name="{{graphQueriesTableName}}",
                )],
                description_markdown="The GitHub audit log connector provides the capability to ingest GitHub logs into Azure Sentinel. By connecting GitHub audit logs into Azure Sentinel, you can view this data in workbooks, use it to create custom alerts, and improve your investigation process.",
                graph_queries=[azure_native.securityinsights.v20220801preview.CodelessUiConnectorConfigPropertiesGraphQueriesArgs(
                    base_query="{{graphQueriesTableName}}",
                    legend="GitHub audit log events",
                    metric_name="Total events received",
                )],
                graph_queries_table_name="GitHubAuditLogPolling_CL",
                instruction_steps=[{
                    "description": \"\"\"Enable GitHub audit Logs. 
         Follow [this](https://docs.github.com/en/github/authenticating-to-github/keeping-your-account-and-data-secure/creating-a-personal-access-token) to create or find your personal key\"\"\",
                    "instructions": [azure_native.securityinsights.v20220801preview.InstructionStepsInstructionsArgs(
                        parameters={
                            "enable": "true",
                            "userRequestPlaceHoldersInput": [{
                                "displayText": "Organization Name",
                                "placeHolderName": "{{placeHolder1}}",
                                "placeHolderValue": "",
                                "requestObjectKey": "apiEndpoint",
                            }],
                        },
                        type="APIKey",
                    )],
                    "title": "Connect GitHub Enterprise Audit Log to Azure Sentinel",
                }],
                permissions={
                    "customs": [azure_native.securityinsights.v20220801preview.PermissionsCustomsArgs(
                        description="You need access to GitHub personal token, the key should have 'admin:org' scope",
                        name="GitHub API personal token Key",
                    )],
                    "resourceProvider": [{
                        "permissionsDisplayText": "read and write permissions are required.",
                        "provider": "Microsoft.OperationalInsights/workspaces",
                        "providerDisplayName": "Workspace",
                        "requiredPermissions": azure_native.securityinsights.v20220801preview.RequiredPermissionsArgs(
                            delete=True,
                            read=True,
                            write=True,
                        ),
                        "scope": "Workspace",
                    }],
                },
                publisher="GitHub",
                sample_queries=[azure_native.securityinsights.v20220801preview.CodelessUiConnectorConfigPropertiesSampleQueriesArgs(
                    description="All logs",
                    query=\"\"\"{{graphQueriesTableName}}
         | take 10 <change>\"\"\",
                )],
                title="GitHub Enterprise Audit Log",
            ),
            data_connector_id="316ec55e-7138-4d63-ab18-90c8a60fd1c8",
            kind="APIPolling",
            polling_config=azure_native.securityinsights.v20220801preview.CodelessConnectorPollingConfigPropertiesResponseArgs(
                auth={
                    "apiKeyIdentifier": "token",
                    "apiKeyName": "Authorization",
                    "authType": "APIKey",
                },
                paging=azure_native.securityinsights.v20220801preview.CodelessConnectorPollingPagingPropertiesArgs(
                    page_size_para_name="per_page",
                    paging_type="LinkHeader",
                ),
                request={
                    "apiEndpoint": "https://api.github.com/organizations/{{placeHolder1}}/audit-log",
                    "headers": {
                        "Accept": "application/json",
                        "User-Agent": "Scuba",
                    },
                    "httpMethod": "Get",
                    "queryParameters": {
                        "phrase": "created:{_QueryWindowStartTime}..{_QueryWindowEndTime}",
                    },
                    "queryTimeFormat": "yyyy-MM-ddTHH:mm:ssZ",
                    "queryWindowInMin": 15,
                    "rateLimitQps": 50,
                    "retryCount": 2,
                    "timeoutInSeconds": 60,
                },
                response=azure_native.securityinsights.v20220801preview.CodelessConnectorPollingResponsePropertiesArgs(
                    events_json_paths=["$"],
                ),
            ),
            resource_group_name="myRg",
            workspace_name="myWorkspace")

        ```
        ### Creates or updates a Dynamics365 data connector.

        ```python
        import pulumi
        import pulumi_azure_native as azure_native

        codeless_api_polling_data_connector = azure_native.securityinsights.v20220801preview.CodelessApiPollingDataConnector("codelessApiPollingDataConnector",
            data_connector_id="c2541efb-c9a6-47fe-9501-87d1017d1512",
            resource_group_name="myRg",
            workspace_name="myWorkspace")

        ```
        ### Creates or updates a GenericUI data connector

        ```python
        import pulumi
        import pulumi_azure_native as azure_native

        codeless_api_polling_data_connector = azure_native.securityinsights.v20220801preview.CodelessApiPollingDataConnector("codelessApiPollingDataConnector",
            data_connector_id="316ec55e-7138-4d63-ab18-90c8a60fd1c8",
            resource_group_name="myRg",
            workspace_name="myWorkspace")

        ```
        ### Creates or updates a Threat Intelligence Taxii data connector.

        ```python
        import pulumi
        import pulumi_azure_native as azure_native

        codeless_api_polling_data_connector = azure_native.securityinsights.v20220801preview.CodelessApiPollingDataConnector("codelessApiPollingDataConnector",
            data_connector_id="73e01a99-5cd7-4139-a149-9f2736ff2ab5",
            resource_group_name="myRg",
            workspace_name="myWorkspace")

        ```
        ### Creates or updates an Office PowerBI data connector

        ```python
        import pulumi
        import pulumi_azure_native as azure_native

        codeless_api_polling_data_connector = azure_native.securityinsights.v20220801preview.CodelessApiPollingDataConnector("codelessApiPollingDataConnector",
            data_connector_id="73e01a99-5cd7-4139-a149-9f2736ff2ab5",
            resource_group_name="myRg",
            workspace_name="myWorkspace")

        ```
        ### Creates or updates an Office365 Project data connector

        ```python
        import pulumi
        import pulumi_azure_native as azure_native

        codeless_api_polling_data_connector = azure_native.securityinsights.v20220801preview.CodelessApiPollingDataConnector("codelessApiPollingDataConnector",
            data_connector_id="73e01a99-5cd7-4139-a149-9f2736ff2ab5",
            resource_group_name="myRg",
            workspace_name="myWorkspace")

        ```
        ### Creates or updates an Office365 data connector

        ```python
        import pulumi
        import pulumi_azure_native as azure_native

        codeless_api_polling_data_connector = azure_native.securityinsights.v20220801preview.CodelessApiPollingDataConnector("codelessApiPollingDataConnector",
            data_connector_id="73e01a99-5cd7-4139-a149-9f2736ff2ab5",
            resource_group_name="myRg",
            workspace_name="myWorkspace")

        ```
        ### Creates or updates an Threat Intelligence Platform data connector

        ```python
        import pulumi
        import pulumi_azure_native as azure_native

        codeless_api_polling_data_connector = azure_native.securityinsights.v20220801preview.CodelessApiPollingDataConnector("codelessApiPollingDataConnector",
            data_connector_id="73e01a99-5cd7-4139-a149-9f2736ff2ab5",
            resource_group_name="myRg",
            workspace_name="myWorkspace")

        ```

        ## Import

        An existing resource can be imported using its type token, name, and identifier, e.g.

        ```sh
        $ pulumi import azure-native:securityinsights/v20220801preview:CodelessApiPollingDataConnector 73e01a99-5cd7-4139-a149-9f2736ff2ab5 /subscriptions/d0cfe6b2-9ac0-4464-9919-dccaee2e48c0/resourceGroups/myRg/providers/Microsoft.OperationalInsights/workspaces/myWorkspace/providers/Microsoft.SecurityInsights/dataConnectors/73e01a99-5cd7-4139-a149-9f2736ff2ab5 
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[pulumi.InputType['CodelessUiConnectorConfigPropertiesArgs']] connector_ui_config: Config to describe the instructions blade
        :param pulumi.Input[str] data_connector_id: Connector ID
        :param pulumi.Input[str] kind: The kind of the data connector
               Expected value is 'APIPolling'.
        :param pulumi.Input[pulumi.InputType['CodelessConnectorPollingConfigPropertiesArgs']] polling_config: Config to describe the polling instructions
        :param pulumi.Input[str] resource_group_name: The name of the resource group. The name is case insensitive.
        :param pulumi.Input[str] workspace_name: The name of the workspace.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: CodelessApiPollingDataConnectorArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Represents Codeless API Polling data connector.

        ## Example Usage
        ### Creates or updates a APIPolling data connector

        ```python
        import pulumi
        import pulumi_azure_native as azure_native

        codeless_api_polling_data_connector = azure_native.securityinsights.v20220801preview.CodelessApiPollingDataConnector("codelessApiPollingDataConnector",
            connector_ui_config=azure_native.securityinsights.v20220801preview.CodelessUiConnectorConfigPropertiesResponseArgs(
                availability=azure_native.securityinsights.v20220801preview.AvailabilityArgs(
                    is_preview=True,
                    status=1,
                ),
                connectivity_criteria=[azure_native.securityinsights.v20220801preview.CodelessUiConnectorConfigPropertiesConnectivityCriteriaArgs(
                    type="SentinelKindsV2",
                    value=[],
                )],
                data_types=[azure_native.securityinsights.v20220801preview.CodelessUiConnectorConfigPropertiesDataTypesArgs(
                    last_data_received_query=\"\"\"{{graphQueriesTableName}}
                    | summarize Time = max(TimeGenerated)
                    | where isnotempty(Time)\"\"\",
                    name="{{graphQueriesTableName}}",
                )],
                description_markdown="The GitHub audit log connector provides the capability to ingest GitHub logs into Azure Sentinel. By connecting GitHub audit logs into Azure Sentinel, you can view this data in workbooks, use it to create custom alerts, and improve your investigation process.",
                graph_queries=[azure_native.securityinsights.v20220801preview.CodelessUiConnectorConfigPropertiesGraphQueriesArgs(
                    base_query="{{graphQueriesTableName}}",
                    legend="GitHub audit log events",
                    metric_name="Total events received",
                )],
                graph_queries_table_name="GitHubAuditLogPolling_CL",
                instruction_steps=[{
                    "description": \"\"\"Enable GitHub audit Logs. 
         Follow [this](https://docs.github.com/en/github/authenticating-to-github/keeping-your-account-and-data-secure/creating-a-personal-access-token) to create or find your personal key\"\"\",
                    "instructions": [azure_native.securityinsights.v20220801preview.InstructionStepsInstructionsArgs(
                        parameters={
                            "enable": "true",
                            "userRequestPlaceHoldersInput": [{
                                "displayText": "Organization Name",
                                "placeHolderName": "{{placeHolder1}}",
                                "placeHolderValue": "",
                                "requestObjectKey": "apiEndpoint",
                            }],
                        },
                        type="APIKey",
                    )],
                    "title": "Connect GitHub Enterprise Audit Log to Azure Sentinel",
                }],
                permissions={
                    "customs": [azure_native.securityinsights.v20220801preview.PermissionsCustomsArgs(
                        description="You need access to GitHub personal token, the key should have 'admin:org' scope",
                        name="GitHub API personal token Key",
                    )],
                    "resourceProvider": [{
                        "permissionsDisplayText": "read and write permissions are required.",
                        "provider": "Microsoft.OperationalInsights/workspaces",
                        "providerDisplayName": "Workspace",
                        "requiredPermissions": azure_native.securityinsights.v20220801preview.RequiredPermissionsArgs(
                            delete=True,
                            read=True,
                            write=True,
                        ),
                        "scope": "Workspace",
                    }],
                },
                publisher="GitHub",
                sample_queries=[azure_native.securityinsights.v20220801preview.CodelessUiConnectorConfigPropertiesSampleQueriesArgs(
                    description="All logs",
                    query=\"\"\"{{graphQueriesTableName}}
         | take 10 <change>\"\"\",
                )],
                title="GitHub Enterprise Audit Log",
            ),
            data_connector_id="316ec55e-7138-4d63-ab18-90c8a60fd1c8",
            kind="APIPolling",
            polling_config=azure_native.securityinsights.v20220801preview.CodelessConnectorPollingConfigPropertiesResponseArgs(
                auth={
                    "apiKeyIdentifier": "token",
                    "apiKeyName": "Authorization",
                    "authType": "APIKey",
                },
                paging=azure_native.securityinsights.v20220801preview.CodelessConnectorPollingPagingPropertiesArgs(
                    page_size_para_name="per_page",
                    paging_type="LinkHeader",
                ),
                request={
                    "apiEndpoint": "https://api.github.com/organizations/{{placeHolder1}}/audit-log",
                    "headers": {
                        "Accept": "application/json",
                        "User-Agent": "Scuba",
                    },
                    "httpMethod": "Get",
                    "queryParameters": {
                        "phrase": "created:{_QueryWindowStartTime}..{_QueryWindowEndTime}",
                    },
                    "queryTimeFormat": "yyyy-MM-ddTHH:mm:ssZ",
                    "queryWindowInMin": 15,
                    "rateLimitQps": 50,
                    "retryCount": 2,
                    "timeoutInSeconds": 60,
                },
                response=azure_native.securityinsights.v20220801preview.CodelessConnectorPollingResponsePropertiesArgs(
                    events_json_paths=["$"],
                ),
            ),
            resource_group_name="myRg",
            workspace_name="myWorkspace")

        ```
        ### Creates or updates a Dynamics365 data connector.

        ```python
        import pulumi
        import pulumi_azure_native as azure_native

        codeless_api_polling_data_connector = azure_native.securityinsights.v20220801preview.CodelessApiPollingDataConnector("codelessApiPollingDataConnector",
            data_connector_id="c2541efb-c9a6-47fe-9501-87d1017d1512",
            resource_group_name="myRg",
            workspace_name="myWorkspace")

        ```
        ### Creates or updates a GenericUI data connector

        ```python
        import pulumi
        import pulumi_azure_native as azure_native

        codeless_api_polling_data_connector = azure_native.securityinsights.v20220801preview.CodelessApiPollingDataConnector("codelessApiPollingDataConnector",
            data_connector_id="316ec55e-7138-4d63-ab18-90c8a60fd1c8",
            resource_group_name="myRg",
            workspace_name="myWorkspace")

        ```
        ### Creates or updates a Threat Intelligence Taxii data connector.

        ```python
        import pulumi
        import pulumi_azure_native as azure_native

        codeless_api_polling_data_connector = azure_native.securityinsights.v20220801preview.CodelessApiPollingDataConnector("codelessApiPollingDataConnector",
            data_connector_id="73e01a99-5cd7-4139-a149-9f2736ff2ab5",
            resource_group_name="myRg",
            workspace_name="myWorkspace")

        ```
        ### Creates or updates an Office PowerBI data connector

        ```python
        import pulumi
        import pulumi_azure_native as azure_native

        codeless_api_polling_data_connector = azure_native.securityinsights.v20220801preview.CodelessApiPollingDataConnector("codelessApiPollingDataConnector",
            data_connector_id="73e01a99-5cd7-4139-a149-9f2736ff2ab5",
            resource_group_name="myRg",
            workspace_name="myWorkspace")

        ```
        ### Creates or updates an Office365 Project data connector

        ```python
        import pulumi
        import pulumi_azure_native as azure_native

        codeless_api_polling_data_connector = azure_native.securityinsights.v20220801preview.CodelessApiPollingDataConnector("codelessApiPollingDataConnector",
            data_connector_id="73e01a99-5cd7-4139-a149-9f2736ff2ab5",
            resource_group_name="myRg",
            workspace_name="myWorkspace")

        ```
        ### Creates or updates an Office365 data connector

        ```python
        import pulumi
        import pulumi_azure_native as azure_native

        codeless_api_polling_data_connector = azure_native.securityinsights.v20220801preview.CodelessApiPollingDataConnector("codelessApiPollingDataConnector",
            data_connector_id="73e01a99-5cd7-4139-a149-9f2736ff2ab5",
            resource_group_name="myRg",
            workspace_name="myWorkspace")

        ```
        ### Creates or updates an Threat Intelligence Platform data connector

        ```python
        import pulumi
        import pulumi_azure_native as azure_native

        codeless_api_polling_data_connector = azure_native.securityinsights.v20220801preview.CodelessApiPollingDataConnector("codelessApiPollingDataConnector",
            data_connector_id="73e01a99-5cd7-4139-a149-9f2736ff2ab5",
            resource_group_name="myRg",
            workspace_name="myWorkspace")

        ```

        ## Import

        An existing resource can be imported using its type token, name, and identifier, e.g.

        ```sh
        $ pulumi import azure-native:securityinsights/v20220801preview:CodelessApiPollingDataConnector 73e01a99-5cd7-4139-a149-9f2736ff2ab5 /subscriptions/d0cfe6b2-9ac0-4464-9919-dccaee2e48c0/resourceGroups/myRg/providers/Microsoft.OperationalInsights/workspaces/myWorkspace/providers/Microsoft.SecurityInsights/dataConnectors/73e01a99-5cd7-4139-a149-9f2736ff2ab5 
        ```

        :param str resource_name: The name of the resource.
        :param CodelessApiPollingDataConnectorArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(CodelessApiPollingDataConnectorArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 connector_ui_config: Optional[pulumi.Input[pulumi.InputType['CodelessUiConnectorConfigPropertiesArgs']]] = None,
                 data_connector_id: Optional[pulumi.Input[str]] = None,
                 kind: Optional[pulumi.Input[str]] = None,
                 polling_config: Optional[pulumi.Input[pulumi.InputType['CodelessConnectorPollingConfigPropertiesArgs']]] = None,
                 resource_group_name: Optional[pulumi.Input[str]] = None,
                 workspace_name: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = CodelessApiPollingDataConnectorArgs.__new__(CodelessApiPollingDataConnectorArgs)

            __props__.__dict__["connector_ui_config"] = connector_ui_config
            __props__.__dict__["data_connector_id"] = data_connector_id
            if kind is None and not opts.urn:
                raise TypeError("Missing required property 'kind'")
            __props__.__dict__["kind"] = 'APIPolling'
            __props__.__dict__["polling_config"] = polling_config
            if resource_group_name is None and not opts.urn:
                raise TypeError("Missing required property 'resource_group_name'")
            __props__.__dict__["resource_group_name"] = resource_group_name
            if workspace_name is None and not opts.urn:
                raise TypeError("Missing required property 'workspace_name'")
            __props__.__dict__["workspace_name"] = workspace_name
            __props__.__dict__["etag"] = None
            __props__.__dict__["name"] = None
            __props__.__dict__["system_data"] = None
            __props__.__dict__["type"] = None
        alias_opts = pulumi.ResourceOptions(aliases=[pulumi.Alias(type_="azure-native:securityinsights:CodelessApiPollingDataConnector"), pulumi.Alias(type_="azure-native:securityinsights/v20190101preview:CodelessApiPollingDataConnector"), pulumi.Alias(type_="azure-native:securityinsights/v20200101:CodelessApiPollingDataConnector"), pulumi.Alias(type_="azure-native:securityinsights/v20210301preview:CodelessApiPollingDataConnector"), pulumi.Alias(type_="azure-native:securityinsights/v20210901preview:CodelessApiPollingDataConnector"), pulumi.Alias(type_="azure-native:securityinsights/v20211001:CodelessApiPollingDataConnector"), pulumi.Alias(type_="azure-native:securityinsights/v20211001preview:CodelessApiPollingDataConnector"), pulumi.Alias(type_="azure-native:securityinsights/v20220101preview:CodelessApiPollingDataConnector"), pulumi.Alias(type_="azure-native:securityinsights/v20220401preview:CodelessApiPollingDataConnector"), pulumi.Alias(type_="azure-native:securityinsights/v20220501preview:CodelessApiPollingDataConnector"), pulumi.Alias(type_="azure-native:securityinsights/v20220601preview:CodelessApiPollingDataConnector"), pulumi.Alias(type_="azure-native:securityinsights/v20220701preview:CodelessApiPollingDataConnector"), pulumi.Alias(type_="azure-native:securityinsights/v20220801:CodelessApiPollingDataConnector"), pulumi.Alias(type_="azure-native:securityinsights/v20220901preview:CodelessApiPollingDataConnector"), pulumi.Alias(type_="azure-native:securityinsights/v20221001preview:CodelessApiPollingDataConnector"), pulumi.Alias(type_="azure-native:securityinsights/v20221101:CodelessApiPollingDataConnector"), pulumi.Alias(type_="azure-native:securityinsights/v20221101preview:CodelessApiPollingDataConnector"), pulumi.Alias(type_="azure-native:securityinsights/v20221201preview:CodelessApiPollingDataConnector"), pulumi.Alias(type_="azure-native:securityinsights/v20230201:CodelessApiPollingDataConnector"), pulumi.Alias(type_="azure-native:securityinsights/v20230201preview:CodelessApiPollingDataConnector"), pulumi.Alias(type_="azure-native:securityinsights/v20230301preview:CodelessApiPollingDataConnector"), pulumi.Alias(type_="azure-native:securityinsights/v20230401preview:CodelessApiPollingDataConnector")])
        opts = pulumi.ResourceOptions.merge(opts, alias_opts)
        super(CodelessApiPollingDataConnector, __self__).__init__(
            'azure-native:securityinsights/v20220801preview:CodelessApiPollingDataConnector',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None) -> 'CodelessApiPollingDataConnector':
        """
        Get an existing CodelessApiPollingDataConnector resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = CodelessApiPollingDataConnectorArgs.__new__(CodelessApiPollingDataConnectorArgs)

        __props__.__dict__["connector_ui_config"] = None
        __props__.__dict__["etag"] = None
        __props__.__dict__["kind"] = None
        __props__.__dict__["name"] = None
        __props__.__dict__["polling_config"] = None
        __props__.__dict__["system_data"] = None
        __props__.__dict__["type"] = None
        return CodelessApiPollingDataConnector(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="connectorUiConfig")
    def connector_ui_config(self) -> pulumi.Output[Optional['outputs.CodelessUiConnectorConfigPropertiesResponse']]:
        """
        Config to describe the instructions blade
        """
        return pulumi.get(self, "connector_ui_config")

    @property
    @pulumi.getter
    def etag(self) -> pulumi.Output[Optional[str]]:
        """
        Etag of the azure resource
        """
        return pulumi.get(self, "etag")

    @property
    @pulumi.getter
    def kind(self) -> pulumi.Output[str]:
        """
        The kind of the data connector
        Expected value is 'APIPolling'.
        """
        return pulumi.get(self, "kind")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[str]:
        """
        The name of the resource
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="pollingConfig")
    def polling_config(self) -> pulumi.Output[Optional['outputs.CodelessConnectorPollingConfigPropertiesResponse']]:
        """
        Config to describe the polling instructions
        """
        return pulumi.get(self, "polling_config")

    @property
    @pulumi.getter(name="systemData")
    def system_data(self) -> pulumi.Output['outputs.SystemDataResponse']:
        """
        Azure Resource Manager metadata containing createdBy and modifiedBy information.
        """
        return pulumi.get(self, "system_data")

    @property
    @pulumi.getter
    def type(self) -> pulumi.Output[str]:
        """
        The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        """
        return pulumi.get(self, "type")

