# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from ... import _utilities
from . import outputs
from ._enums import *
from ._inputs import *

__all__ = ['ProtectionPolicyArgs', 'ProtectionPolicy']

@pulumi.input_type
class ProtectionPolicyArgs:
    def __init__(__self__, *,
                 resource_group_name: pulumi.Input[str],
                 vault_name: pulumi.Input[str],
                 e_tag: Optional[pulumi.Input[str]] = None,
                 location: Optional[pulumi.Input[str]] = None,
                 policy_name: Optional[pulumi.Input[str]] = None,
                 properties: Optional[pulumi.Input[Union['AzureFileShareProtectionPolicyArgs', 'AzureIaaSVMProtectionPolicyArgs', 'AzureSqlProtectionPolicyArgs', 'AzureVmWorkloadProtectionPolicyArgs', 'GenericProtectionPolicyArgs', 'MabProtectionPolicyArgs']]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None):
        """
        The set of arguments for constructing a ProtectionPolicy resource.
        :param pulumi.Input[str] resource_group_name: The name of the resource group where the recovery services vault is present.
        :param pulumi.Input[str] vault_name: The name of the recovery services vault.
        :param pulumi.Input[str] e_tag: Optional ETag.
        :param pulumi.Input[str] location: Resource location.
        :param pulumi.Input[str] policy_name: Backup policy to be created.
        :param pulumi.Input[Union['AzureFileShareProtectionPolicyArgs', 'AzureIaaSVMProtectionPolicyArgs', 'AzureSqlProtectionPolicyArgs', 'AzureVmWorkloadProtectionPolicyArgs', 'GenericProtectionPolicyArgs', 'MabProtectionPolicyArgs']] properties: ProtectionPolicyResource properties
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] tags: Resource tags.
        """
        pulumi.set(__self__, "resource_group_name", resource_group_name)
        pulumi.set(__self__, "vault_name", vault_name)
        if e_tag is not None:
            pulumi.set(__self__, "e_tag", e_tag)
        if location is not None:
            pulumi.set(__self__, "location", location)
        if policy_name is not None:
            pulumi.set(__self__, "policy_name", policy_name)
        if properties is not None:
            pulumi.set(__self__, "properties", properties)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)

    @property
    @pulumi.getter(name="resourceGroupName")
    def resource_group_name(self) -> pulumi.Input[str]:
        """
        The name of the resource group where the recovery services vault is present.
        """
        return pulumi.get(self, "resource_group_name")

    @resource_group_name.setter
    def resource_group_name(self, value: pulumi.Input[str]):
        pulumi.set(self, "resource_group_name", value)

    @property
    @pulumi.getter(name="vaultName")
    def vault_name(self) -> pulumi.Input[str]:
        """
        The name of the recovery services vault.
        """
        return pulumi.get(self, "vault_name")

    @vault_name.setter
    def vault_name(self, value: pulumi.Input[str]):
        pulumi.set(self, "vault_name", value)

    @property
    @pulumi.getter(name="eTag")
    def e_tag(self) -> Optional[pulumi.Input[str]]:
        """
        Optional ETag.
        """
        return pulumi.get(self, "e_tag")

    @e_tag.setter
    def e_tag(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "e_tag", value)

    @property
    @pulumi.getter
    def location(self) -> Optional[pulumi.Input[str]]:
        """
        Resource location.
        """
        return pulumi.get(self, "location")

    @location.setter
    def location(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "location", value)

    @property
    @pulumi.getter(name="policyName")
    def policy_name(self) -> Optional[pulumi.Input[str]]:
        """
        Backup policy to be created.
        """
        return pulumi.get(self, "policy_name")

    @policy_name.setter
    def policy_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "policy_name", value)

    @property
    @pulumi.getter
    def properties(self) -> Optional[pulumi.Input[Union['AzureFileShareProtectionPolicyArgs', 'AzureIaaSVMProtectionPolicyArgs', 'AzureSqlProtectionPolicyArgs', 'AzureVmWorkloadProtectionPolicyArgs', 'GenericProtectionPolicyArgs', 'MabProtectionPolicyArgs']]]:
        """
        ProtectionPolicyResource properties
        """
        return pulumi.get(self, "properties")

    @properties.setter
    def properties(self, value: Optional[pulumi.Input[Union['AzureFileShareProtectionPolicyArgs', 'AzureIaaSVMProtectionPolicyArgs', 'AzureSqlProtectionPolicyArgs', 'AzureVmWorkloadProtectionPolicyArgs', 'GenericProtectionPolicyArgs', 'MabProtectionPolicyArgs']]]):
        pulumi.set(self, "properties", value)

    @property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]:
        """
        Resource tags.
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]):
        pulumi.set(self, "tags", value)


class ProtectionPolicy(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 e_tag: Optional[pulumi.Input[str]] = None,
                 location: Optional[pulumi.Input[str]] = None,
                 policy_name: Optional[pulumi.Input[str]] = None,
                 properties: Optional[pulumi.Input[Union[pulumi.InputType['AzureFileShareProtectionPolicyArgs'], pulumi.InputType['AzureIaaSVMProtectionPolicyArgs'], pulumi.InputType['AzureSqlProtectionPolicyArgs'], pulumi.InputType['AzureVmWorkloadProtectionPolicyArgs'], pulumi.InputType['GenericProtectionPolicyArgs'], pulumi.InputType['MabProtectionPolicyArgs']]]] = None,
                 resource_group_name: Optional[pulumi.Input[str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 vault_name: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Base class for backup policy. Workload-specific backup policies are derived from this class.

        ## Example Usage
        ### Create or Update Daily Azure Storage Protection Policy

        ```python
        import pulumi
        import pulumi_azure_native as azure_native

        protection_policy = azure_native.recoveryservices.v20230201.ProtectionPolicy("protectionPolicy",
            policy_name="dailyPolicy2",
            properties=azure_native.recoveryservices.v20230201.AzureFileShareProtectionPolicyArgs(
                backup_management_type="AzureStorage",
                retention_policy=azure_native.recoveryservices.v20230201.LongTermRetentionPolicyArgs(
                    daily_schedule=azure_native.recoveryservices.v20230201.DailyRetentionScheduleArgs(
                        retention_duration=azure_native.recoveryservices.v20230201.RetentionDurationArgs(
                            count=5,
                            duration_type="Days",
                        ),
                        retention_times=["2021-09-29T08:00:00.000Z"],
                    ),
                    monthly_schedule=azure_native.recoveryservices.v20230201.MonthlyRetentionScheduleArgs(
                        retention_duration=azure_native.recoveryservices.v20230201.RetentionDurationArgs(
                            count=60,
                            duration_type="Months",
                        ),
                        retention_schedule_format_type="Weekly",
                        retention_schedule_weekly=azure_native.recoveryservices.v20230201.WeeklyRetentionFormatArgs(
                            days_of_the_week=[azure_native.recoveryservices/v20230201.DayOfWeek.SUNDAY],
                            weeks_of_the_month=[azure_native.recoveryservices/v20230201.WeekOfMonth.FIRST],
                        ),
                        retention_times=["2021-09-29T08:00:00.000Z"],
                    ),
                    retention_policy_type="LongTermRetentionPolicy",
                    weekly_schedule=azure_native.recoveryservices.v20230201.WeeklyRetentionScheduleArgs(
                        days_of_the_week=[azure_native.recoveryservices/v20230201.DayOfWeek.SUNDAY],
                        retention_duration=azure_native.recoveryservices.v20230201.RetentionDurationArgs(
                            count=12,
                            duration_type="Weeks",
                        ),
                        retention_times=["2021-09-29T08:00:00.000Z"],
                    ),
                    yearly_schedule=azure_native.recoveryservices.v20230201.YearlyRetentionScheduleArgs(
                        months_of_year=[azure_native.recoveryservices/v20230201.MonthOfYear.JANUARY],
                        retention_duration=azure_native.recoveryservices.v20230201.RetentionDurationArgs(
                            count=10,
                            duration_type="Years",
                        ),
                        retention_schedule_format_type="Weekly",
                        retention_schedule_weekly=azure_native.recoveryservices.v20230201.WeeklyRetentionFormatArgs(
                            days_of_the_week=[azure_native.recoveryservices/v20230201.DayOfWeek.SUNDAY],
                            weeks_of_the_month=[azure_native.recoveryservices/v20230201.WeekOfMonth.FIRST],
                        ),
                        retention_times=["2021-09-29T08:00:00.000Z"],
                    ),
                ),
                schedule_policy=azure_native.recoveryservices.v20230201.SimpleSchedulePolicyArgs(
                    schedule_policy_type="SimpleSchedulePolicy",
                    schedule_run_frequency="Daily",
                    schedule_run_times=["2021-09-29T08:00:00.000Z"],
                ),
                time_zone="UTC",
                work_load_type="AzureFileShare",
            ),
            resource_group_name="SwaggerTestRg",
            vault_name="swaggertestvault")

        ```
        ### Create or Update Enhanced Azure Vm Protection Policy with Hourly backup

        ```python
        import pulumi
        import pulumi_azure_native as azure_native

        protection_policy = azure_native.recoveryservices.v20230201.ProtectionPolicy("protectionPolicy",
            policy_name="v2-daily-sample",
            properties=azure_native.recoveryservices.v20230201.AzureIaaSVMProtectionPolicyArgs(
                backup_management_type="AzureIaasVM",
                instant_rp_retention_range_in_days=30,
                policy_type="V2",
                retention_policy=azure_native.recoveryservices.v20230201.LongTermRetentionPolicyArgs(
                    daily_schedule=azure_native.recoveryservices.v20230201.DailyRetentionScheduleArgs(
                        retention_duration=azure_native.recoveryservices.v20230201.RetentionDurationArgs(
                            count=180,
                            duration_type="Days",
                        ),
                        retention_times=["2021-12-17T08:00:00+00:00"],
                    ),
                    monthly_schedule=azure_native.recoveryservices.v20230201.MonthlyRetentionScheduleArgs(
                        retention_duration=azure_native.recoveryservices.v20230201.RetentionDurationArgs(
                            count=60,
                            duration_type="Months",
                        ),
                        retention_schedule_format_type="Weekly",
                        retention_schedule_weekly=azure_native.recoveryservices.v20230201.WeeklyRetentionFormatArgs(
                            days_of_the_week=[azure_native.recoveryservices/v20230201.DayOfWeek.SUNDAY],
                            weeks_of_the_month=[azure_native.recoveryservices/v20230201.WeekOfMonth.FIRST],
                        ),
                        retention_times=["2021-12-17T08:00:00+00:00"],
                    ),
                    retention_policy_type="LongTermRetentionPolicy",
                    weekly_schedule=azure_native.recoveryservices.v20230201.WeeklyRetentionScheduleArgs(
                        days_of_the_week=[azure_native.recoveryservices/v20230201.DayOfWeek.SUNDAY],
                        retention_duration=azure_native.recoveryservices.v20230201.RetentionDurationArgs(
                            count=12,
                            duration_type="Weeks",
                        ),
                        retention_times=["2021-12-17T08:00:00+00:00"],
                    ),
                    yearly_schedule=azure_native.recoveryservices.v20230201.YearlyRetentionScheduleArgs(
                        months_of_year=[azure_native.recoveryservices/v20230201.MonthOfYear.JANUARY],
                        retention_duration=azure_native.recoveryservices.v20230201.RetentionDurationArgs(
                            count=10,
                            duration_type="Years",
                        ),
                        retention_schedule_format_type="Weekly",
                        retention_schedule_weekly=azure_native.recoveryservices.v20230201.WeeklyRetentionFormatArgs(
                            days_of_the_week=[azure_native.recoveryservices/v20230201.DayOfWeek.SUNDAY],
                            weeks_of_the_month=[azure_native.recoveryservices/v20230201.WeekOfMonth.FIRST],
                        ),
                        retention_times=["2021-12-17T08:00:00+00:00"],
                    ),
                ),
                schedule_policy=azure_native.recoveryservices.v20230201.SimpleSchedulePolicyV2Args(
                    hourly_schedule=azure_native.recoveryservices.v20230201.HourlyScheduleArgs(
                        interval=4,
                        schedule_window_duration=16,
                        schedule_window_start_time="2021-12-17T08:00:00Z",
                    ),
                    schedule_policy_type="SimpleSchedulePolicyV2",
                    schedule_run_frequency="Hourly",
                ),
                time_zone="India Standard Time",
            ),
            resource_group_name="SwaggerTestRg",
            vault_name="NetSDKTestRsVault")

        ```
        ### Create or Update Enhanced Azure Vm Protection Policy with daily backup

        ```python
        import pulumi
        import pulumi_azure_native as azure_native

        protection_policy = azure_native.recoveryservices.v20230201.ProtectionPolicy("protectionPolicy",
            policy_name="v2-daily-sample",
            properties=azure_native.recoveryservices.v20230201.AzureIaaSVMProtectionPolicyArgs(
                backup_management_type="AzureIaasVM",
                instant_rp_retention_range_in_days=30,
                policy_type="V2",
                retention_policy=azure_native.recoveryservices.v20230201.LongTermRetentionPolicyArgs(
                    daily_schedule=azure_native.recoveryservices.v20230201.DailyRetentionScheduleArgs(
                        retention_duration=azure_native.recoveryservices.v20230201.RetentionDurationArgs(
                            count=180,
                            duration_type="Days",
                        ),
                        retention_times=["2021-12-17T08:00:00+00:00"],
                    ),
                    monthly_schedule=azure_native.recoveryservices.v20230201.MonthlyRetentionScheduleArgs(
                        retention_duration=azure_native.recoveryservices.v20230201.RetentionDurationArgs(
                            count=60,
                            duration_type="Months",
                        ),
                        retention_schedule_format_type="Weekly",
                        retention_schedule_weekly=azure_native.recoveryservices.v20230201.WeeklyRetentionFormatArgs(
                            days_of_the_week=[azure_native.recoveryservices/v20230201.DayOfWeek.SUNDAY],
                            weeks_of_the_month=[azure_native.recoveryservices/v20230201.WeekOfMonth.FIRST],
                        ),
                        retention_times=["2021-12-17T08:00:00+00:00"],
                    ),
                    retention_policy_type="LongTermRetentionPolicy",
                    weekly_schedule=azure_native.recoveryservices.v20230201.WeeklyRetentionScheduleArgs(
                        days_of_the_week=[azure_native.recoveryservices/v20230201.DayOfWeek.SUNDAY],
                        retention_duration=azure_native.recoveryservices.v20230201.RetentionDurationArgs(
                            count=12,
                            duration_type="Weeks",
                        ),
                        retention_times=["2021-12-17T08:00:00+00:00"],
                    ),
                    yearly_schedule=azure_native.recoveryservices.v20230201.YearlyRetentionScheduleArgs(
                        months_of_year=[azure_native.recoveryservices/v20230201.MonthOfYear.JANUARY],
                        retention_duration=azure_native.recoveryservices.v20230201.RetentionDurationArgs(
                            count=10,
                            duration_type="Years",
                        ),
                        retention_schedule_format_type="Weekly",
                        retention_schedule_weekly=azure_native.recoveryservices.v20230201.WeeklyRetentionFormatArgs(
                            days_of_the_week=[azure_native.recoveryservices/v20230201.DayOfWeek.SUNDAY],
                            weeks_of_the_month=[azure_native.recoveryservices/v20230201.WeekOfMonth.FIRST],
                        ),
                        retention_times=["2021-12-17T08:00:00+00:00"],
                    ),
                ),
                schedule_policy=azure_native.recoveryservices.v20230201.SimpleSchedulePolicyV2Args(
                    daily_schedule=azure_native.recoveryservices.v20230201.DailyScheduleArgs(
                        schedule_run_times=["2018-01-24T10:00:00Z"],
                    ),
                    schedule_policy_type="SimpleSchedulePolicyV2",
                    schedule_run_frequency="Daily",
                ),
                time_zone="India Standard Time",
            ),
            resource_group_name="SwaggerTestRg",
            vault_name="NetSDKTestRsVault")

        ```
        ### Create or Update Full Azure Vm Protection Policy

        ```python
        import pulumi
        import pulumi_azure_native as azure_native

        protection_policy = azure_native.recoveryservices.v20230201.ProtectionPolicy("protectionPolicy",
            policy_name="testPolicy1",
            properties=azure_native.recoveryservices.v20230201.AzureIaaSVMProtectionPolicyArgs(
                backup_management_type="AzureIaasVM",
                retention_policy=azure_native.recoveryservices.v20230201.LongTermRetentionPolicyArgs(
                    monthly_schedule=azure_native.recoveryservices.v20230201.MonthlyRetentionScheduleArgs(
                        retention_duration=azure_native.recoveryservices.v20230201.RetentionDurationArgs(
                            count=2,
                            duration_type="Months",
                        ),
                        retention_schedule_format_type="Weekly",
                        retention_schedule_weekly=azure_native.recoveryservices.v20230201.WeeklyRetentionFormatArgs(
                            days_of_the_week=[
                                azure_native.recoveryservices/v20230201.DayOfWeek.WEDNESDAY,
                                azure_native.recoveryservices/v20230201.DayOfWeek.THURSDAY,
                            ],
                            weeks_of_the_month=[
                                azure_native.recoveryservices/v20230201.WeekOfMonth.FIRST,
                                azure_native.recoveryservices/v20230201.WeekOfMonth.THIRD,
                            ],
                        ),
                        retention_times=["2018-01-24T10:00:00Z"],
                    ),
                    retention_policy_type="LongTermRetentionPolicy",
                    weekly_schedule=azure_native.recoveryservices.v20230201.WeeklyRetentionScheduleArgs(
                        days_of_the_week=[
                            azure_native.recoveryservices/v20230201.DayOfWeek.MONDAY,
                            azure_native.recoveryservices/v20230201.DayOfWeek.WEDNESDAY,
                            azure_native.recoveryservices/v20230201.DayOfWeek.THURSDAY,
                        ],
                        retention_duration=azure_native.recoveryservices.v20230201.RetentionDurationArgs(
                            count=1,
                            duration_type="Weeks",
                        ),
                        retention_times=["2018-01-24T10:00:00Z"],
                    ),
                    yearly_schedule=azure_native.recoveryservices.v20230201.YearlyRetentionScheduleArgs(
                        months_of_year=[
                            azure_native.recoveryservices/v20230201.MonthOfYear.FEBRUARY,
                            azure_native.recoveryservices/v20230201.MonthOfYear.NOVEMBER,
                        ],
                        retention_duration=azure_native.recoveryservices.v20230201.RetentionDurationArgs(
                            count=4,
                            duration_type="Years",
                        ),
                        retention_schedule_format_type="Weekly",
                        retention_schedule_weekly=azure_native.recoveryservices.v20230201.WeeklyRetentionFormatArgs(
                            days_of_the_week=[
                                azure_native.recoveryservices/v20230201.DayOfWeek.MONDAY,
                                azure_native.recoveryservices/v20230201.DayOfWeek.THURSDAY,
                            ],
                            weeks_of_the_month=[azure_native.recoveryservices/v20230201.WeekOfMonth.FOURTH],
                        ),
                        retention_times=["2018-01-24T10:00:00Z"],
                    ),
                ),
                schedule_policy=azure_native.recoveryservices.v20230201.SimpleSchedulePolicyArgs(
                    schedule_policy_type="SimpleSchedulePolicy",
                    schedule_run_days=[
                        azure_native.recoveryservices/v20230201.DayOfWeek.MONDAY,
                        azure_native.recoveryservices/v20230201.DayOfWeek.WEDNESDAY,
                        azure_native.recoveryservices/v20230201.DayOfWeek.THURSDAY,
                    ],
                    schedule_run_frequency="Weekly",
                    schedule_run_times=["2018-01-24T10:00:00Z"],
                ),
                time_zone="Pacific Standard Time",
            ),
            resource_group_name="SwaggerTestRg",
            vault_name="NetSDKTestRsVault")

        ```
        ### Create or Update Full Azure Workload Protection Policy

        ```python
        import pulumi
        import pulumi_azure_native as azure_native

        protection_policy = azure_native.recoveryservices.v20230201.ProtectionPolicy("protectionPolicy",
            policy_name="testPolicy1",
            properties=azure_native.recoveryservices.v20230201.AzureVmWorkloadProtectionPolicyArgs(
                backup_management_type="AzureWorkload",
                settings=azure_native.recoveryservices.v20230201.SettingsArgs(
                    issqlcompression=False,
                    time_zone="Pacific Standard Time",
                ),
                sub_protection_policy=[
                    azure_native.recoveryservices.v20230201.SubProtectionPolicyArgs(
                        policy_type="Full",
                        retention_policy=azure_native.recoveryservices.v20230201.LongTermRetentionPolicyArgs(
                            monthly_schedule=azure_native.recoveryservices.v20230201.MonthlyRetentionScheduleArgs(
                                retention_duration=azure_native.recoveryservices.v20230201.RetentionDurationArgs(
                                    count=1,
                                    duration_type="Months",
                                ),
                                retention_schedule_format_type="Weekly",
                                retention_schedule_weekly=azure_native.recoveryservices.v20230201.WeeklyRetentionFormatArgs(
                                    days_of_the_week=[azure_native.recoveryservices/v20230201.DayOfWeek.SUNDAY],
                                    weeks_of_the_month=[azure_native.recoveryservices/v20230201.WeekOfMonth.SECOND],
                                ),
                                retention_times=["2018-01-24T10:00:00Z"],
                            ),
                            retention_policy_type="LongTermRetentionPolicy",
                            weekly_schedule=azure_native.recoveryservices.v20230201.WeeklyRetentionScheduleArgs(
                                days_of_the_week=[
                                    azure_native.recoveryservices/v20230201.DayOfWeek.SUNDAY,
                                    azure_native.recoveryservices/v20230201.DayOfWeek.TUESDAY,
                                ],
                                retention_duration=azure_native.recoveryservices.v20230201.RetentionDurationArgs(
                                    count=2,
                                    duration_type="Weeks",
                                ),
                                retention_times=["2018-01-24T10:00:00Z"],
                            ),
                            yearly_schedule=azure_native.recoveryservices.v20230201.YearlyRetentionScheduleArgs(
                                months_of_year=[
                                    azure_native.recoveryservices/v20230201.MonthOfYear.JANUARY,
                                    azure_native.recoveryservices/v20230201.MonthOfYear.JUNE,
                                    azure_native.recoveryservices/v20230201.MonthOfYear.DECEMBER,
                                ],
                                retention_duration=azure_native.recoveryservices.v20230201.RetentionDurationArgs(
                                    count=1,
                                    duration_type="Years",
                                ),
                                retention_schedule_format_type="Weekly",
                                retention_schedule_weekly=azure_native.recoveryservices.v20230201.WeeklyRetentionFormatArgs(
                                    days_of_the_week=[azure_native.recoveryservices/v20230201.DayOfWeek.SUNDAY],
                                    weeks_of_the_month=[azure_native.recoveryservices/v20230201.WeekOfMonth.LAST],
                                ),
                                retention_times=["2018-01-24T10:00:00Z"],
                            ),
                        ),
                        schedule_policy=azure_native.recoveryservices.v20230201.SimpleSchedulePolicyArgs(
                            schedule_policy_type="SimpleSchedulePolicy",
                            schedule_run_days=[
                                azure_native.recoveryservices/v20230201.DayOfWeek.SUNDAY,
                                azure_native.recoveryservices/v20230201.DayOfWeek.TUESDAY,
                            ],
                            schedule_run_frequency="Weekly",
                            schedule_run_times=["2018-01-24T10:00:00Z"],
                        ),
                    ),
                    azure_native.recoveryservices.v20230201.SubProtectionPolicyArgs(
                        policy_type="Differential",
                        retention_policy=azure_native.recoveryservices.v20230201.SimpleRetentionPolicyArgs(
                            retention_duration=azure_native.recoveryservices.v20230201.RetentionDurationArgs(
                                count=8,
                                duration_type="Days",
                            ),
                            retention_policy_type="SimpleRetentionPolicy",
                        ),
                        schedule_policy=azure_native.recoveryservices.v20230201.SimpleSchedulePolicyArgs(
                            schedule_policy_type="SimpleSchedulePolicy",
                            schedule_run_days=[azure_native.recoveryservices/v20230201.DayOfWeek.FRIDAY],
                            schedule_run_frequency="Weekly",
                            schedule_run_times=["2018-01-24T10:00:00Z"],
                        ),
                    ),
                    azure_native.recoveryservices.v20230201.SubProtectionPolicyArgs(
                        policy_type="Log",
                        retention_policy=azure_native.recoveryservices.v20230201.SimpleRetentionPolicyArgs(
                            retention_duration=azure_native.recoveryservices.v20230201.RetentionDurationArgs(
                                count=7,
                                duration_type="Days",
                            ),
                            retention_policy_type="SimpleRetentionPolicy",
                        ),
                        schedule_policy=azure_native.recoveryservices.v20230201.LogSchedulePolicyArgs(
                            schedule_frequency_in_mins=60,
                            schedule_policy_type="LogSchedulePolicy",
                        ),
                    ),
                ],
                work_load_type="SQLDataBase",
            ),
            resource_group_name="SwaggerTestRg",
            vault_name="NetSDKTestRsVault")

        ```
        ### Create or Update Hourly Azure Storage Protection Policy

        ```python
        import pulumi
        import pulumi_azure_native as azure_native

        protection_policy = azure_native.recoveryservices.v20230201.ProtectionPolicy("protectionPolicy",
            policy_name="newPolicy2",
            properties=azure_native.recoveryservices.v20230201.AzureFileShareProtectionPolicyArgs(
                backup_management_type="AzureStorage",
                retention_policy=azure_native.recoveryservices.v20230201.LongTermRetentionPolicyArgs(
                    daily_schedule=azure_native.recoveryservices.v20230201.DailyRetentionScheduleArgs(
                        retention_duration=azure_native.recoveryservices.v20230201.RetentionDurationArgs(
                            count=5,
                            duration_type="Days",
                        ),
                    ),
                    monthly_schedule=azure_native.recoveryservices.v20230201.MonthlyRetentionScheduleArgs(
                        retention_duration=azure_native.recoveryservices.v20230201.RetentionDurationArgs(
                            count=60,
                            duration_type="Months",
                        ),
                        retention_schedule_format_type="Weekly",
                        retention_schedule_weekly=azure_native.recoveryservices.v20230201.WeeklyRetentionFormatArgs(
                            days_of_the_week=[azure_native.recoveryservices/v20230201.DayOfWeek.SUNDAY],
                            weeks_of_the_month=[azure_native.recoveryservices/v20230201.WeekOfMonth.FIRST],
                        ),
                    ),
                    retention_policy_type="LongTermRetentionPolicy",
                    weekly_schedule=azure_native.recoveryservices.v20230201.WeeklyRetentionScheduleArgs(
                        days_of_the_week=[azure_native.recoveryservices/v20230201.DayOfWeek.SUNDAY],
                        retention_duration=azure_native.recoveryservices.v20230201.RetentionDurationArgs(
                            count=12,
                            duration_type="Weeks",
                        ),
                    ),
                    yearly_schedule=azure_native.recoveryservices.v20230201.YearlyRetentionScheduleArgs(
                        months_of_year=[azure_native.recoveryservices/v20230201.MonthOfYear.JANUARY],
                        retention_duration=azure_native.recoveryservices.v20230201.RetentionDurationArgs(
                            count=10,
                            duration_type="Years",
                        ),
                        retention_schedule_format_type="Weekly",
                        retention_schedule_weekly=azure_native.recoveryservices.v20230201.WeeklyRetentionFormatArgs(
                            days_of_the_week=[azure_native.recoveryservices/v20230201.DayOfWeek.SUNDAY],
                            weeks_of_the_month=[azure_native.recoveryservices/v20230201.WeekOfMonth.FIRST],
                        ),
                    ),
                ),
                schedule_policy=azure_native.recoveryservices.v20230201.SimpleSchedulePolicyArgs(
                    hourly_schedule=azure_native.recoveryservices.v20230201.HourlyScheduleArgs(
                        interval=4,
                        schedule_window_duration=12,
                        schedule_window_start_time="2021-09-29T08:00:00.000Z",
                    ),
                    schedule_policy_type="SimpleSchedulePolicy",
                    schedule_run_frequency="Hourly",
                ),
                time_zone="UTC",
                work_load_type="AzureFileShare",
            ),
            resource_group_name="SwaggerTestRg",
            vault_name="swaggertestvault")

        ```
        ### Create or Update Simple Azure Vm Protection Policy

        ```python
        import pulumi
        import pulumi_azure_native as azure_native

        protection_policy = azure_native.recoveryservices.v20230201.ProtectionPolicy("protectionPolicy",
            policy_name="testPolicy1",
            properties=azure_native.recoveryservices.v20230201.AzureIaaSVMProtectionPolicyArgs(
                backup_management_type="AzureIaasVM",
                retention_policy=azure_native.recoveryservices.v20230201.LongTermRetentionPolicyArgs(
                    daily_schedule=azure_native.recoveryservices.v20230201.DailyRetentionScheduleArgs(
                        retention_duration=azure_native.recoveryservices.v20230201.RetentionDurationArgs(
                            count=1,
                            duration_type="Days",
                        ),
                        retention_times=["2018-01-24T02:00:00Z"],
                    ),
                    retention_policy_type="LongTermRetentionPolicy",
                ),
                schedule_policy=azure_native.recoveryservices.v20230201.SimpleSchedulePolicyArgs(
                    schedule_policy_type="SimpleSchedulePolicy",
                    schedule_run_frequency="Daily",
                    schedule_run_times=["2018-01-24T02:00:00Z"],
                ),
                time_zone="Pacific Standard Time",
            ),
            resource_group_name="SwaggerTestRg",
            vault_name="NetSDKTestRsVault")

        ```

        ## Import

        An existing resource can be imported using its type token, name, and identifier, e.g.

        ```sh
        $ pulumi import azure-native:recoveryservices/v20230201:ProtectionPolicy testPolicy1 /Subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/SwaggerTestRg/providers/Microsoft.RecoveryServices/vaults/NetSDKTestRsVault/backupPolicies/testPolicy1 
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] e_tag: Optional ETag.
        :param pulumi.Input[str] location: Resource location.
        :param pulumi.Input[str] policy_name: Backup policy to be created.
        :param pulumi.Input[Union[pulumi.InputType['AzureFileShareProtectionPolicyArgs'], pulumi.InputType['AzureIaaSVMProtectionPolicyArgs'], pulumi.InputType['AzureSqlProtectionPolicyArgs'], pulumi.InputType['AzureVmWorkloadProtectionPolicyArgs'], pulumi.InputType['GenericProtectionPolicyArgs'], pulumi.InputType['MabProtectionPolicyArgs']]] properties: ProtectionPolicyResource properties
        :param pulumi.Input[str] resource_group_name: The name of the resource group where the recovery services vault is present.
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] tags: Resource tags.
        :param pulumi.Input[str] vault_name: The name of the recovery services vault.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: ProtectionPolicyArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Base class for backup policy. Workload-specific backup policies are derived from this class.

        ## Example Usage
        ### Create or Update Daily Azure Storage Protection Policy

        ```python
        import pulumi
        import pulumi_azure_native as azure_native

        protection_policy = azure_native.recoveryservices.v20230201.ProtectionPolicy("protectionPolicy",
            policy_name="dailyPolicy2",
            properties=azure_native.recoveryservices.v20230201.AzureFileShareProtectionPolicyArgs(
                backup_management_type="AzureStorage",
                retention_policy=azure_native.recoveryservices.v20230201.LongTermRetentionPolicyArgs(
                    daily_schedule=azure_native.recoveryservices.v20230201.DailyRetentionScheduleArgs(
                        retention_duration=azure_native.recoveryservices.v20230201.RetentionDurationArgs(
                            count=5,
                            duration_type="Days",
                        ),
                        retention_times=["2021-09-29T08:00:00.000Z"],
                    ),
                    monthly_schedule=azure_native.recoveryservices.v20230201.MonthlyRetentionScheduleArgs(
                        retention_duration=azure_native.recoveryservices.v20230201.RetentionDurationArgs(
                            count=60,
                            duration_type="Months",
                        ),
                        retention_schedule_format_type="Weekly",
                        retention_schedule_weekly=azure_native.recoveryservices.v20230201.WeeklyRetentionFormatArgs(
                            days_of_the_week=[azure_native.recoveryservices/v20230201.DayOfWeek.SUNDAY],
                            weeks_of_the_month=[azure_native.recoveryservices/v20230201.WeekOfMonth.FIRST],
                        ),
                        retention_times=["2021-09-29T08:00:00.000Z"],
                    ),
                    retention_policy_type="LongTermRetentionPolicy",
                    weekly_schedule=azure_native.recoveryservices.v20230201.WeeklyRetentionScheduleArgs(
                        days_of_the_week=[azure_native.recoveryservices/v20230201.DayOfWeek.SUNDAY],
                        retention_duration=azure_native.recoveryservices.v20230201.RetentionDurationArgs(
                            count=12,
                            duration_type="Weeks",
                        ),
                        retention_times=["2021-09-29T08:00:00.000Z"],
                    ),
                    yearly_schedule=azure_native.recoveryservices.v20230201.YearlyRetentionScheduleArgs(
                        months_of_year=[azure_native.recoveryservices/v20230201.MonthOfYear.JANUARY],
                        retention_duration=azure_native.recoveryservices.v20230201.RetentionDurationArgs(
                            count=10,
                            duration_type="Years",
                        ),
                        retention_schedule_format_type="Weekly",
                        retention_schedule_weekly=azure_native.recoveryservices.v20230201.WeeklyRetentionFormatArgs(
                            days_of_the_week=[azure_native.recoveryservices/v20230201.DayOfWeek.SUNDAY],
                            weeks_of_the_month=[azure_native.recoveryservices/v20230201.WeekOfMonth.FIRST],
                        ),
                        retention_times=["2021-09-29T08:00:00.000Z"],
                    ),
                ),
                schedule_policy=azure_native.recoveryservices.v20230201.SimpleSchedulePolicyArgs(
                    schedule_policy_type="SimpleSchedulePolicy",
                    schedule_run_frequency="Daily",
                    schedule_run_times=["2021-09-29T08:00:00.000Z"],
                ),
                time_zone="UTC",
                work_load_type="AzureFileShare",
            ),
            resource_group_name="SwaggerTestRg",
            vault_name="swaggertestvault")

        ```
        ### Create or Update Enhanced Azure Vm Protection Policy with Hourly backup

        ```python
        import pulumi
        import pulumi_azure_native as azure_native

        protection_policy = azure_native.recoveryservices.v20230201.ProtectionPolicy("protectionPolicy",
            policy_name="v2-daily-sample",
            properties=azure_native.recoveryservices.v20230201.AzureIaaSVMProtectionPolicyArgs(
                backup_management_type="AzureIaasVM",
                instant_rp_retention_range_in_days=30,
                policy_type="V2",
                retention_policy=azure_native.recoveryservices.v20230201.LongTermRetentionPolicyArgs(
                    daily_schedule=azure_native.recoveryservices.v20230201.DailyRetentionScheduleArgs(
                        retention_duration=azure_native.recoveryservices.v20230201.RetentionDurationArgs(
                            count=180,
                            duration_type="Days",
                        ),
                        retention_times=["2021-12-17T08:00:00+00:00"],
                    ),
                    monthly_schedule=azure_native.recoveryservices.v20230201.MonthlyRetentionScheduleArgs(
                        retention_duration=azure_native.recoveryservices.v20230201.RetentionDurationArgs(
                            count=60,
                            duration_type="Months",
                        ),
                        retention_schedule_format_type="Weekly",
                        retention_schedule_weekly=azure_native.recoveryservices.v20230201.WeeklyRetentionFormatArgs(
                            days_of_the_week=[azure_native.recoveryservices/v20230201.DayOfWeek.SUNDAY],
                            weeks_of_the_month=[azure_native.recoveryservices/v20230201.WeekOfMonth.FIRST],
                        ),
                        retention_times=["2021-12-17T08:00:00+00:00"],
                    ),
                    retention_policy_type="LongTermRetentionPolicy",
                    weekly_schedule=azure_native.recoveryservices.v20230201.WeeklyRetentionScheduleArgs(
                        days_of_the_week=[azure_native.recoveryservices/v20230201.DayOfWeek.SUNDAY],
                        retention_duration=azure_native.recoveryservices.v20230201.RetentionDurationArgs(
                            count=12,
                            duration_type="Weeks",
                        ),
                        retention_times=["2021-12-17T08:00:00+00:00"],
                    ),
                    yearly_schedule=azure_native.recoveryservices.v20230201.YearlyRetentionScheduleArgs(
                        months_of_year=[azure_native.recoveryservices/v20230201.MonthOfYear.JANUARY],
                        retention_duration=azure_native.recoveryservices.v20230201.RetentionDurationArgs(
                            count=10,
                            duration_type="Years",
                        ),
                        retention_schedule_format_type="Weekly",
                        retention_schedule_weekly=azure_native.recoveryservices.v20230201.WeeklyRetentionFormatArgs(
                            days_of_the_week=[azure_native.recoveryservices/v20230201.DayOfWeek.SUNDAY],
                            weeks_of_the_month=[azure_native.recoveryservices/v20230201.WeekOfMonth.FIRST],
                        ),
                        retention_times=["2021-12-17T08:00:00+00:00"],
                    ),
                ),
                schedule_policy=azure_native.recoveryservices.v20230201.SimpleSchedulePolicyV2Args(
                    hourly_schedule=azure_native.recoveryservices.v20230201.HourlyScheduleArgs(
                        interval=4,
                        schedule_window_duration=16,
                        schedule_window_start_time="2021-12-17T08:00:00Z",
                    ),
                    schedule_policy_type="SimpleSchedulePolicyV2",
                    schedule_run_frequency="Hourly",
                ),
                time_zone="India Standard Time",
            ),
            resource_group_name="SwaggerTestRg",
            vault_name="NetSDKTestRsVault")

        ```
        ### Create or Update Enhanced Azure Vm Protection Policy with daily backup

        ```python
        import pulumi
        import pulumi_azure_native as azure_native

        protection_policy = azure_native.recoveryservices.v20230201.ProtectionPolicy("protectionPolicy",
            policy_name="v2-daily-sample",
            properties=azure_native.recoveryservices.v20230201.AzureIaaSVMProtectionPolicyArgs(
                backup_management_type="AzureIaasVM",
                instant_rp_retention_range_in_days=30,
                policy_type="V2",
                retention_policy=azure_native.recoveryservices.v20230201.LongTermRetentionPolicyArgs(
                    daily_schedule=azure_native.recoveryservices.v20230201.DailyRetentionScheduleArgs(
                        retention_duration=azure_native.recoveryservices.v20230201.RetentionDurationArgs(
                            count=180,
                            duration_type="Days",
                        ),
                        retention_times=["2021-12-17T08:00:00+00:00"],
                    ),
                    monthly_schedule=azure_native.recoveryservices.v20230201.MonthlyRetentionScheduleArgs(
                        retention_duration=azure_native.recoveryservices.v20230201.RetentionDurationArgs(
                            count=60,
                            duration_type="Months",
                        ),
                        retention_schedule_format_type="Weekly",
                        retention_schedule_weekly=azure_native.recoveryservices.v20230201.WeeklyRetentionFormatArgs(
                            days_of_the_week=[azure_native.recoveryservices/v20230201.DayOfWeek.SUNDAY],
                            weeks_of_the_month=[azure_native.recoveryservices/v20230201.WeekOfMonth.FIRST],
                        ),
                        retention_times=["2021-12-17T08:00:00+00:00"],
                    ),
                    retention_policy_type="LongTermRetentionPolicy",
                    weekly_schedule=azure_native.recoveryservices.v20230201.WeeklyRetentionScheduleArgs(
                        days_of_the_week=[azure_native.recoveryservices/v20230201.DayOfWeek.SUNDAY],
                        retention_duration=azure_native.recoveryservices.v20230201.RetentionDurationArgs(
                            count=12,
                            duration_type="Weeks",
                        ),
                        retention_times=["2021-12-17T08:00:00+00:00"],
                    ),
                    yearly_schedule=azure_native.recoveryservices.v20230201.YearlyRetentionScheduleArgs(
                        months_of_year=[azure_native.recoveryservices/v20230201.MonthOfYear.JANUARY],
                        retention_duration=azure_native.recoveryservices.v20230201.RetentionDurationArgs(
                            count=10,
                            duration_type="Years",
                        ),
                        retention_schedule_format_type="Weekly",
                        retention_schedule_weekly=azure_native.recoveryservices.v20230201.WeeklyRetentionFormatArgs(
                            days_of_the_week=[azure_native.recoveryservices/v20230201.DayOfWeek.SUNDAY],
                            weeks_of_the_month=[azure_native.recoveryservices/v20230201.WeekOfMonth.FIRST],
                        ),
                        retention_times=["2021-12-17T08:00:00+00:00"],
                    ),
                ),
                schedule_policy=azure_native.recoveryservices.v20230201.SimpleSchedulePolicyV2Args(
                    daily_schedule=azure_native.recoveryservices.v20230201.DailyScheduleArgs(
                        schedule_run_times=["2018-01-24T10:00:00Z"],
                    ),
                    schedule_policy_type="SimpleSchedulePolicyV2",
                    schedule_run_frequency="Daily",
                ),
                time_zone="India Standard Time",
            ),
            resource_group_name="SwaggerTestRg",
            vault_name="NetSDKTestRsVault")

        ```
        ### Create or Update Full Azure Vm Protection Policy

        ```python
        import pulumi
        import pulumi_azure_native as azure_native

        protection_policy = azure_native.recoveryservices.v20230201.ProtectionPolicy("protectionPolicy",
            policy_name="testPolicy1",
            properties=azure_native.recoveryservices.v20230201.AzureIaaSVMProtectionPolicyArgs(
                backup_management_type="AzureIaasVM",
                retention_policy=azure_native.recoveryservices.v20230201.LongTermRetentionPolicyArgs(
                    monthly_schedule=azure_native.recoveryservices.v20230201.MonthlyRetentionScheduleArgs(
                        retention_duration=azure_native.recoveryservices.v20230201.RetentionDurationArgs(
                            count=2,
                            duration_type="Months",
                        ),
                        retention_schedule_format_type="Weekly",
                        retention_schedule_weekly=azure_native.recoveryservices.v20230201.WeeklyRetentionFormatArgs(
                            days_of_the_week=[
                                azure_native.recoveryservices/v20230201.DayOfWeek.WEDNESDAY,
                                azure_native.recoveryservices/v20230201.DayOfWeek.THURSDAY,
                            ],
                            weeks_of_the_month=[
                                azure_native.recoveryservices/v20230201.WeekOfMonth.FIRST,
                                azure_native.recoveryservices/v20230201.WeekOfMonth.THIRD,
                            ],
                        ),
                        retention_times=["2018-01-24T10:00:00Z"],
                    ),
                    retention_policy_type="LongTermRetentionPolicy",
                    weekly_schedule=azure_native.recoveryservices.v20230201.WeeklyRetentionScheduleArgs(
                        days_of_the_week=[
                            azure_native.recoveryservices/v20230201.DayOfWeek.MONDAY,
                            azure_native.recoveryservices/v20230201.DayOfWeek.WEDNESDAY,
                            azure_native.recoveryservices/v20230201.DayOfWeek.THURSDAY,
                        ],
                        retention_duration=azure_native.recoveryservices.v20230201.RetentionDurationArgs(
                            count=1,
                            duration_type="Weeks",
                        ),
                        retention_times=["2018-01-24T10:00:00Z"],
                    ),
                    yearly_schedule=azure_native.recoveryservices.v20230201.YearlyRetentionScheduleArgs(
                        months_of_year=[
                            azure_native.recoveryservices/v20230201.MonthOfYear.FEBRUARY,
                            azure_native.recoveryservices/v20230201.MonthOfYear.NOVEMBER,
                        ],
                        retention_duration=azure_native.recoveryservices.v20230201.RetentionDurationArgs(
                            count=4,
                            duration_type="Years",
                        ),
                        retention_schedule_format_type="Weekly",
                        retention_schedule_weekly=azure_native.recoveryservices.v20230201.WeeklyRetentionFormatArgs(
                            days_of_the_week=[
                                azure_native.recoveryservices/v20230201.DayOfWeek.MONDAY,
                                azure_native.recoveryservices/v20230201.DayOfWeek.THURSDAY,
                            ],
                            weeks_of_the_month=[azure_native.recoveryservices/v20230201.WeekOfMonth.FOURTH],
                        ),
                        retention_times=["2018-01-24T10:00:00Z"],
                    ),
                ),
                schedule_policy=azure_native.recoveryservices.v20230201.SimpleSchedulePolicyArgs(
                    schedule_policy_type="SimpleSchedulePolicy",
                    schedule_run_days=[
                        azure_native.recoveryservices/v20230201.DayOfWeek.MONDAY,
                        azure_native.recoveryservices/v20230201.DayOfWeek.WEDNESDAY,
                        azure_native.recoveryservices/v20230201.DayOfWeek.THURSDAY,
                    ],
                    schedule_run_frequency="Weekly",
                    schedule_run_times=["2018-01-24T10:00:00Z"],
                ),
                time_zone="Pacific Standard Time",
            ),
            resource_group_name="SwaggerTestRg",
            vault_name="NetSDKTestRsVault")

        ```
        ### Create or Update Full Azure Workload Protection Policy

        ```python
        import pulumi
        import pulumi_azure_native as azure_native

        protection_policy = azure_native.recoveryservices.v20230201.ProtectionPolicy("protectionPolicy",
            policy_name="testPolicy1",
            properties=azure_native.recoveryservices.v20230201.AzureVmWorkloadProtectionPolicyArgs(
                backup_management_type="AzureWorkload",
                settings=azure_native.recoveryservices.v20230201.SettingsArgs(
                    issqlcompression=False,
                    time_zone="Pacific Standard Time",
                ),
                sub_protection_policy=[
                    azure_native.recoveryservices.v20230201.SubProtectionPolicyArgs(
                        policy_type="Full",
                        retention_policy=azure_native.recoveryservices.v20230201.LongTermRetentionPolicyArgs(
                            monthly_schedule=azure_native.recoveryservices.v20230201.MonthlyRetentionScheduleArgs(
                                retention_duration=azure_native.recoveryservices.v20230201.RetentionDurationArgs(
                                    count=1,
                                    duration_type="Months",
                                ),
                                retention_schedule_format_type="Weekly",
                                retention_schedule_weekly=azure_native.recoveryservices.v20230201.WeeklyRetentionFormatArgs(
                                    days_of_the_week=[azure_native.recoveryservices/v20230201.DayOfWeek.SUNDAY],
                                    weeks_of_the_month=[azure_native.recoveryservices/v20230201.WeekOfMonth.SECOND],
                                ),
                                retention_times=["2018-01-24T10:00:00Z"],
                            ),
                            retention_policy_type="LongTermRetentionPolicy",
                            weekly_schedule=azure_native.recoveryservices.v20230201.WeeklyRetentionScheduleArgs(
                                days_of_the_week=[
                                    azure_native.recoveryservices/v20230201.DayOfWeek.SUNDAY,
                                    azure_native.recoveryservices/v20230201.DayOfWeek.TUESDAY,
                                ],
                                retention_duration=azure_native.recoveryservices.v20230201.RetentionDurationArgs(
                                    count=2,
                                    duration_type="Weeks",
                                ),
                                retention_times=["2018-01-24T10:00:00Z"],
                            ),
                            yearly_schedule=azure_native.recoveryservices.v20230201.YearlyRetentionScheduleArgs(
                                months_of_year=[
                                    azure_native.recoveryservices/v20230201.MonthOfYear.JANUARY,
                                    azure_native.recoveryservices/v20230201.MonthOfYear.JUNE,
                                    azure_native.recoveryservices/v20230201.MonthOfYear.DECEMBER,
                                ],
                                retention_duration=azure_native.recoveryservices.v20230201.RetentionDurationArgs(
                                    count=1,
                                    duration_type="Years",
                                ),
                                retention_schedule_format_type="Weekly",
                                retention_schedule_weekly=azure_native.recoveryservices.v20230201.WeeklyRetentionFormatArgs(
                                    days_of_the_week=[azure_native.recoveryservices/v20230201.DayOfWeek.SUNDAY],
                                    weeks_of_the_month=[azure_native.recoveryservices/v20230201.WeekOfMonth.LAST],
                                ),
                                retention_times=["2018-01-24T10:00:00Z"],
                            ),
                        ),
                        schedule_policy=azure_native.recoveryservices.v20230201.SimpleSchedulePolicyArgs(
                            schedule_policy_type="SimpleSchedulePolicy",
                            schedule_run_days=[
                                azure_native.recoveryservices/v20230201.DayOfWeek.SUNDAY,
                                azure_native.recoveryservices/v20230201.DayOfWeek.TUESDAY,
                            ],
                            schedule_run_frequency="Weekly",
                            schedule_run_times=["2018-01-24T10:00:00Z"],
                        ),
                    ),
                    azure_native.recoveryservices.v20230201.SubProtectionPolicyArgs(
                        policy_type="Differential",
                        retention_policy=azure_native.recoveryservices.v20230201.SimpleRetentionPolicyArgs(
                            retention_duration=azure_native.recoveryservices.v20230201.RetentionDurationArgs(
                                count=8,
                                duration_type="Days",
                            ),
                            retention_policy_type="SimpleRetentionPolicy",
                        ),
                        schedule_policy=azure_native.recoveryservices.v20230201.SimpleSchedulePolicyArgs(
                            schedule_policy_type="SimpleSchedulePolicy",
                            schedule_run_days=[azure_native.recoveryservices/v20230201.DayOfWeek.FRIDAY],
                            schedule_run_frequency="Weekly",
                            schedule_run_times=["2018-01-24T10:00:00Z"],
                        ),
                    ),
                    azure_native.recoveryservices.v20230201.SubProtectionPolicyArgs(
                        policy_type="Log",
                        retention_policy=azure_native.recoveryservices.v20230201.SimpleRetentionPolicyArgs(
                            retention_duration=azure_native.recoveryservices.v20230201.RetentionDurationArgs(
                                count=7,
                                duration_type="Days",
                            ),
                            retention_policy_type="SimpleRetentionPolicy",
                        ),
                        schedule_policy=azure_native.recoveryservices.v20230201.LogSchedulePolicyArgs(
                            schedule_frequency_in_mins=60,
                            schedule_policy_type="LogSchedulePolicy",
                        ),
                    ),
                ],
                work_load_type="SQLDataBase",
            ),
            resource_group_name="SwaggerTestRg",
            vault_name="NetSDKTestRsVault")

        ```
        ### Create or Update Hourly Azure Storage Protection Policy

        ```python
        import pulumi
        import pulumi_azure_native as azure_native

        protection_policy = azure_native.recoveryservices.v20230201.ProtectionPolicy("protectionPolicy",
            policy_name="newPolicy2",
            properties=azure_native.recoveryservices.v20230201.AzureFileShareProtectionPolicyArgs(
                backup_management_type="AzureStorage",
                retention_policy=azure_native.recoveryservices.v20230201.LongTermRetentionPolicyArgs(
                    daily_schedule=azure_native.recoveryservices.v20230201.DailyRetentionScheduleArgs(
                        retention_duration=azure_native.recoveryservices.v20230201.RetentionDurationArgs(
                            count=5,
                            duration_type="Days",
                        ),
                    ),
                    monthly_schedule=azure_native.recoveryservices.v20230201.MonthlyRetentionScheduleArgs(
                        retention_duration=azure_native.recoveryservices.v20230201.RetentionDurationArgs(
                            count=60,
                            duration_type="Months",
                        ),
                        retention_schedule_format_type="Weekly",
                        retention_schedule_weekly=azure_native.recoveryservices.v20230201.WeeklyRetentionFormatArgs(
                            days_of_the_week=[azure_native.recoveryservices/v20230201.DayOfWeek.SUNDAY],
                            weeks_of_the_month=[azure_native.recoveryservices/v20230201.WeekOfMonth.FIRST],
                        ),
                    ),
                    retention_policy_type="LongTermRetentionPolicy",
                    weekly_schedule=azure_native.recoveryservices.v20230201.WeeklyRetentionScheduleArgs(
                        days_of_the_week=[azure_native.recoveryservices/v20230201.DayOfWeek.SUNDAY],
                        retention_duration=azure_native.recoveryservices.v20230201.RetentionDurationArgs(
                            count=12,
                            duration_type="Weeks",
                        ),
                    ),
                    yearly_schedule=azure_native.recoveryservices.v20230201.YearlyRetentionScheduleArgs(
                        months_of_year=[azure_native.recoveryservices/v20230201.MonthOfYear.JANUARY],
                        retention_duration=azure_native.recoveryservices.v20230201.RetentionDurationArgs(
                            count=10,
                            duration_type="Years",
                        ),
                        retention_schedule_format_type="Weekly",
                        retention_schedule_weekly=azure_native.recoveryservices.v20230201.WeeklyRetentionFormatArgs(
                            days_of_the_week=[azure_native.recoveryservices/v20230201.DayOfWeek.SUNDAY],
                            weeks_of_the_month=[azure_native.recoveryservices/v20230201.WeekOfMonth.FIRST],
                        ),
                    ),
                ),
                schedule_policy=azure_native.recoveryservices.v20230201.SimpleSchedulePolicyArgs(
                    hourly_schedule=azure_native.recoveryservices.v20230201.HourlyScheduleArgs(
                        interval=4,
                        schedule_window_duration=12,
                        schedule_window_start_time="2021-09-29T08:00:00.000Z",
                    ),
                    schedule_policy_type="SimpleSchedulePolicy",
                    schedule_run_frequency="Hourly",
                ),
                time_zone="UTC",
                work_load_type="AzureFileShare",
            ),
            resource_group_name="SwaggerTestRg",
            vault_name="swaggertestvault")

        ```
        ### Create or Update Simple Azure Vm Protection Policy

        ```python
        import pulumi
        import pulumi_azure_native as azure_native

        protection_policy = azure_native.recoveryservices.v20230201.ProtectionPolicy("protectionPolicy",
            policy_name="testPolicy1",
            properties=azure_native.recoveryservices.v20230201.AzureIaaSVMProtectionPolicyArgs(
                backup_management_type="AzureIaasVM",
                retention_policy=azure_native.recoveryservices.v20230201.LongTermRetentionPolicyArgs(
                    daily_schedule=azure_native.recoveryservices.v20230201.DailyRetentionScheduleArgs(
                        retention_duration=azure_native.recoveryservices.v20230201.RetentionDurationArgs(
                            count=1,
                            duration_type="Days",
                        ),
                        retention_times=["2018-01-24T02:00:00Z"],
                    ),
                    retention_policy_type="LongTermRetentionPolicy",
                ),
                schedule_policy=azure_native.recoveryservices.v20230201.SimpleSchedulePolicyArgs(
                    schedule_policy_type="SimpleSchedulePolicy",
                    schedule_run_frequency="Daily",
                    schedule_run_times=["2018-01-24T02:00:00Z"],
                ),
                time_zone="Pacific Standard Time",
            ),
            resource_group_name="SwaggerTestRg",
            vault_name="NetSDKTestRsVault")

        ```

        ## Import

        An existing resource can be imported using its type token, name, and identifier, e.g.

        ```sh
        $ pulumi import azure-native:recoveryservices/v20230201:ProtectionPolicy testPolicy1 /Subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/SwaggerTestRg/providers/Microsoft.RecoveryServices/vaults/NetSDKTestRsVault/backupPolicies/testPolicy1 
        ```

        :param str resource_name: The name of the resource.
        :param ProtectionPolicyArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(ProtectionPolicyArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 e_tag: Optional[pulumi.Input[str]] = None,
                 location: Optional[pulumi.Input[str]] = None,
                 policy_name: Optional[pulumi.Input[str]] = None,
                 properties: Optional[pulumi.Input[Union[pulumi.InputType['AzureFileShareProtectionPolicyArgs'], pulumi.InputType['AzureIaaSVMProtectionPolicyArgs'], pulumi.InputType['AzureSqlProtectionPolicyArgs'], pulumi.InputType['AzureVmWorkloadProtectionPolicyArgs'], pulumi.InputType['GenericProtectionPolicyArgs'], pulumi.InputType['MabProtectionPolicyArgs']]]] = None,
                 resource_group_name: Optional[pulumi.Input[str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 vault_name: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = ProtectionPolicyArgs.__new__(ProtectionPolicyArgs)

            __props__.__dict__["e_tag"] = e_tag
            __props__.__dict__["location"] = location
            __props__.__dict__["policy_name"] = policy_name
            __props__.__dict__["properties"] = properties
            if resource_group_name is None and not opts.urn:
                raise TypeError("Missing required property 'resource_group_name'")
            __props__.__dict__["resource_group_name"] = resource_group_name
            __props__.__dict__["tags"] = tags
            if vault_name is None and not opts.urn:
                raise TypeError("Missing required property 'vault_name'")
            __props__.__dict__["vault_name"] = vault_name
            __props__.__dict__["name"] = None
            __props__.__dict__["type"] = None
        alias_opts = pulumi.ResourceOptions(aliases=[pulumi.Alias(type_="azure-native:recoveryservices:ProtectionPolicy"), pulumi.Alias(type_="azure-native:recoveryservices/v20160601:ProtectionPolicy"), pulumi.Alias(type_="azure-native:recoveryservices/v20201001:ProtectionPolicy"), pulumi.Alias(type_="azure-native:recoveryservices/v20201201:ProtectionPolicy"), pulumi.Alias(type_="azure-native:recoveryservices/v20210101:ProtectionPolicy"), pulumi.Alias(type_="azure-native:recoveryservices/v20210201:ProtectionPolicy"), pulumi.Alias(type_="azure-native:recoveryservices/v20210201preview:ProtectionPolicy"), pulumi.Alias(type_="azure-native:recoveryservices/v20210210:ProtectionPolicy"), pulumi.Alias(type_="azure-native:recoveryservices/v20210301:ProtectionPolicy"), pulumi.Alias(type_="azure-native:recoveryservices/v20210401:ProtectionPolicy"), pulumi.Alias(type_="azure-native:recoveryservices/v20210601:ProtectionPolicy"), pulumi.Alias(type_="azure-native:recoveryservices/v20210701:ProtectionPolicy"), pulumi.Alias(type_="azure-native:recoveryservices/v20210801:ProtectionPolicy"), pulumi.Alias(type_="azure-native:recoveryservices/v20211001:ProtectionPolicy"), pulumi.Alias(type_="azure-native:recoveryservices/v20211201:ProtectionPolicy"), pulumi.Alias(type_="azure-native:recoveryservices/v20220101:ProtectionPolicy"), pulumi.Alias(type_="azure-native:recoveryservices/v20220201:ProtectionPolicy"), pulumi.Alias(type_="azure-native:recoveryservices/v20220301:ProtectionPolicy"), pulumi.Alias(type_="azure-native:recoveryservices/v20220401:ProtectionPolicy"), pulumi.Alias(type_="azure-native:recoveryservices/v20220601preview:ProtectionPolicy"), pulumi.Alias(type_="azure-native:recoveryservices/v20220901preview:ProtectionPolicy"), pulumi.Alias(type_="azure-native:recoveryservices/v20220930preview:ProtectionPolicy"), pulumi.Alias(type_="azure-native:recoveryservices/v20221001:ProtectionPolicy"), pulumi.Alias(type_="azure-native:recoveryservices/v20230101:ProtectionPolicy")])
        opts = pulumi.ResourceOptions.merge(opts, alias_opts)
        super(ProtectionPolicy, __self__).__init__(
            'azure-native:recoveryservices/v20230201:ProtectionPolicy',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None) -> 'ProtectionPolicy':
        """
        Get an existing ProtectionPolicy resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = ProtectionPolicyArgs.__new__(ProtectionPolicyArgs)

        __props__.__dict__["e_tag"] = None
        __props__.__dict__["location"] = None
        __props__.__dict__["name"] = None
        __props__.__dict__["properties"] = None
        __props__.__dict__["tags"] = None
        __props__.__dict__["type"] = None
        return ProtectionPolicy(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="eTag")
    def e_tag(self) -> pulumi.Output[Optional[str]]:
        """
        Optional ETag.
        """
        return pulumi.get(self, "e_tag")

    @property
    @pulumi.getter
    def location(self) -> pulumi.Output[Optional[str]]:
        """
        Resource location.
        """
        return pulumi.get(self, "location")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[str]:
        """
        Resource name associated with the resource.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def properties(self) -> pulumi.Output[Any]:
        """
        ProtectionPolicyResource properties
        """
        return pulumi.get(self, "properties")

    @property
    @pulumi.getter
    def tags(self) -> pulumi.Output[Optional[Mapping[str, str]]]:
        """
        Resource tags.
        """
        return pulumi.get(self, "tags")

    @property
    @pulumi.getter
    def type(self) -> pulumi.Output[str]:
        """
        Resource type represents the complete path of the form Namespace/ResourceType/ResourceType/...
        """
        return pulumi.get(self, "type")

