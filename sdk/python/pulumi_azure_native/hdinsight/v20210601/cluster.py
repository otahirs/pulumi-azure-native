# coding=utf-8
# *** WARNING: this file was generated by the Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from ... import _utilities
from . import outputs
from ._enums import *
from ._inputs import *

__all__ = ['ClusterArgs', 'Cluster']

@pulumi.input_type
class ClusterArgs:
    def __init__(__self__, *,
                 resource_group_name: pulumi.Input[str],
                 cluster_name: Optional[pulumi.Input[str]] = None,
                 identity: Optional[pulumi.Input['ClusterIdentityArgs']] = None,
                 location: Optional[pulumi.Input[str]] = None,
                 properties: Optional[pulumi.Input['ClusterCreatePropertiesArgs']] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 zones: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None):
        """
        The set of arguments for constructing a Cluster resource.
        :param pulumi.Input[str] resource_group_name: The name of the resource group.
        :param pulumi.Input[str] cluster_name: The name of the cluster.
        :param pulumi.Input['ClusterIdentityArgs'] identity: The identity of the cluster, if configured.
        :param pulumi.Input[str] location: The location of the cluster.
        :param pulumi.Input['ClusterCreatePropertiesArgs'] properties: The cluster create parameters.
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] tags: The resource tags.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] zones: The availability zones.
        """
        pulumi.set(__self__, "resource_group_name", resource_group_name)
        if cluster_name is not None:
            pulumi.set(__self__, "cluster_name", cluster_name)
        if identity is not None:
            pulumi.set(__self__, "identity", identity)
        if location is not None:
            pulumi.set(__self__, "location", location)
        if properties is not None:
            pulumi.set(__self__, "properties", properties)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)
        if zones is not None:
            pulumi.set(__self__, "zones", zones)

    @property
    @pulumi.getter(name="resourceGroupName")
    def resource_group_name(self) -> pulumi.Input[str]:
        """
        The name of the resource group.
        """
        return pulumi.get(self, "resource_group_name")

    @resource_group_name.setter
    def resource_group_name(self, value: pulumi.Input[str]):
        pulumi.set(self, "resource_group_name", value)

    @property
    @pulumi.getter(name="clusterName")
    def cluster_name(self) -> Optional[pulumi.Input[str]]:
        """
        The name of the cluster.
        """
        return pulumi.get(self, "cluster_name")

    @cluster_name.setter
    def cluster_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "cluster_name", value)

    @property
    @pulumi.getter
    def identity(self) -> Optional[pulumi.Input['ClusterIdentityArgs']]:
        """
        The identity of the cluster, if configured.
        """
        return pulumi.get(self, "identity")

    @identity.setter
    def identity(self, value: Optional[pulumi.Input['ClusterIdentityArgs']]):
        pulumi.set(self, "identity", value)

    @property
    @pulumi.getter
    def location(self) -> Optional[pulumi.Input[str]]:
        """
        The location of the cluster.
        """
        return pulumi.get(self, "location")

    @location.setter
    def location(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "location", value)

    @property
    @pulumi.getter
    def properties(self) -> Optional[pulumi.Input['ClusterCreatePropertiesArgs']]:
        """
        The cluster create parameters.
        """
        return pulumi.get(self, "properties")

    @properties.setter
    def properties(self, value: Optional[pulumi.Input['ClusterCreatePropertiesArgs']]):
        pulumi.set(self, "properties", value)

    @property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]:
        """
        The resource tags.
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]):
        pulumi.set(self, "tags", value)

    @property
    @pulumi.getter
    def zones(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        The availability zones.
        """
        return pulumi.get(self, "zones")

    @zones.setter
    def zones(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "zones", value)


class Cluster(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 cluster_name: Optional[pulumi.Input[str]] = None,
                 identity: Optional[pulumi.Input[pulumi.InputType['ClusterIdentityArgs']]] = None,
                 location: Optional[pulumi.Input[str]] = None,
                 properties: Optional[pulumi.Input[pulumi.InputType['ClusterCreatePropertiesArgs']]] = None,
                 resource_group_name: Optional[pulumi.Input[str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 zones: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 __props__=None):
        """
        The HDInsight cluster.

        ## Example Usage
        ### Create HDInsight cluster with Autoscale configuration

        ```python
        import pulumi
        import pulumi_azure_native as azure_native

        cluster = azure_native.hdinsight.v20210601.Cluster("cluster",
            cluster_name="cluster1",
            properties=azure_native.hdinsight.v20210601.ClusterGetPropertiesResponseArgs(
                cluster_definition=azure_native.hdinsight.v20210601.ClusterDefinitionArgs(
                    component_version={
                        "Hadoop": "2.7",
                    },
                    configurations={
                        "gateway": {
                            "restAuthCredential.isEnabled": True,
                            "restAuthCredential.password": "**********",
                            "restAuthCredential.username": "admin",
                        },
                    },
                    kind="hadoop",
                ),
                cluster_version="3.6",
                compute_profile={
                    "roles": [{
                        "autoscaleConfiguration": {
                            "recurrence": {
                                "schedule": [
                                    {
                                        "days": [
                                            "Monday",
                                            "Tuesday",
                                            "Wednesday",
                                            "Thursday",
                                            "Friday",
                                        ],
                                        "timeAndCapacity": azure_native.hdinsight.v20210601.AutoscaleTimeAndCapacityArgs(
                                            max_instance_count=3,
                                            min_instance_count=3,
                                            time="09:00",
                                        ),
                                    },
                                    {
                                        "days": [
                                            "Monday",
                                            "Tuesday",
                                            "Wednesday",
                                            "Thursday",
                                            "Friday",
                                        ],
                                        "timeAndCapacity": azure_native.hdinsight.v20210601.AutoscaleTimeAndCapacityArgs(
                                            max_instance_count=6,
                                            min_instance_count=6,
                                            time="18:00",
                                        ),
                                    },
                                    {
                                        "days": [
                                            "Saturday",
                                            "Sunday",
                                        ],
                                        "timeAndCapacity": azure_native.hdinsight.v20210601.AutoscaleTimeAndCapacityArgs(
                                            max_instance_count=2,
                                            min_instance_count=2,
                                            time="09:00",
                                        ),
                                    },
                                    {
                                        "days": [
                                            "Saturday",
                                            "Sunday",
                                        ],
                                        "timeAndCapacity": azure_native.hdinsight.v20210601.AutoscaleTimeAndCapacityArgs(
                                            max_instance_count=4,
                                            min_instance_count=4,
                                            time="18:00",
                                        ),
                                    },
                                ],
                                "timeZone": "China Standard Time",
                            },
                        },
                        "hardwareProfile": azure_native.hdinsight.v20210601.HardwareProfileArgs(
                            vm_size="Standard_D4_V2",
                        ),
                        "name": "workernode",
                        "osProfile": {
                            "linuxOperatingSystemProfile": azure_native.hdinsight.v20210601.LinuxOperatingSystemProfileArgs(
                                password="**********",
                                username="sshuser",
                            ),
                        },
                        "scriptActions": [],
                        "targetInstanceCount": 4,
                    }],
                },
                os_type="Linux",
                storage_profile={
                    "storageaccounts": [azure_native.hdinsight.v20210601.StorageAccountArgs(
                        container="hdinsight-autoscale-tes-2019-06-18t05-49-16-591z",
                        is_default=True,
                        key="storagekey",
                        name="mystorage.blob.core.windows.net",
                    )],
                },
                tier="Standard",
            ),
            resource_group_name="rg1")

        ```
        ### Create Hadoop cluster with Azure Data Lake Storage Gen 2

        ```python
        import pulumi
        import pulumi_azure_native as azure_native

        cluster = azure_native.hdinsight.v20210601.Cluster("cluster",
            cluster_name="cluster1",
            properties=azure_native.hdinsight.v20210601.ClusterGetPropertiesResponseArgs(
                cluster_definition=azure_native.hdinsight.v20210601.ClusterDefinitionArgs(
                    configurations={
                        "gateway": {
                            "restAuthCredential.isEnabled": "true",
                            "restAuthCredential.password": "**********",
                            "restAuthCredential.username": "admin",
                        },
                    },
                    kind="Hadoop",
                ),
                cluster_version="3.6",
                compute_profile={
                    "roles": [
                        {
                            "hardwareProfile": azure_native.hdinsight.v20210601.HardwareProfileArgs(
                                vm_size="Standard_D3_V2",
                            ),
                            "minInstanceCount": 1,
                            "name": "headnode",
                            "osProfile": {
                                "linuxOperatingSystemProfile": azure_native.hdinsight.v20210601.LinuxOperatingSystemProfileArgs(
                                    password="**********",
                                    username="sshuser",
                                ),
                            },
                            "targetInstanceCount": 2,
                        },
                        {
                            "hardwareProfile": azure_native.hdinsight.v20210601.HardwareProfileArgs(
                                vm_size="Standard_D3_V2",
                            ),
                            "minInstanceCount": 1,
                            "name": "workernode",
                            "osProfile": {
                                "linuxOperatingSystemProfile": azure_native.hdinsight.v20210601.LinuxOperatingSystemProfileArgs(
                                    password="**********",
                                    username="sshuser",
                                ),
                            },
                            "targetInstanceCount": 4,
                        },
                        {
                            "hardwareProfile": azure_native.hdinsight.v20210601.HardwareProfileArgs(
                                vm_size="Small",
                            ),
                            "minInstanceCount": 1,
                            "name": "zookeepernode",
                            "osProfile": {
                                "linuxOperatingSystemProfile": azure_native.hdinsight.v20210601.LinuxOperatingSystemProfileArgs(
                                    password="**********",
                                    username="sshuser",
                                ),
                            },
                            "targetInstanceCount": 3,
                        },
                    ],
                },
                os_type="Linux",
                storage_profile={
                    "storageaccounts": [azure_native.hdinsight.v20210601.StorageAccountArgs(
                        file_system="default",
                        is_default=True,
                        key="storagekey",
                        name="mystorage.dfs.core.windows.net",
                    )],
                },
                tier="Standard",
            ),
            resource_group_name="rg1",
            tags={
                "key1": "val1",
            })

        ```
        ### Create Hadoop on Linux cluster with SSH password

        ```python
        import pulumi
        import pulumi_azure_native as azure_native

        cluster = azure_native.hdinsight.v20210601.Cluster("cluster",
            cluster_name="cluster1",
            properties=azure_native.hdinsight.v20210601.ClusterGetPropertiesResponseArgs(
                cluster_definition=azure_native.hdinsight.v20210601.ClusterDefinitionArgs(
                    configurations={
                        "gateway": {
                            "restAuthCredential.isEnabled": "true",
                            "restAuthCredential.password": "**********",
                            "restAuthCredential.username": "admin",
                        },
                    },
                    kind="Hadoop",
                ),
                cluster_version="3.5",
                compute_profile={
                    "roles": [
                        {
                            "hardwareProfile": azure_native.hdinsight.v20210601.HardwareProfileArgs(
                                vm_size="Standard_D3_V2",
                            ),
                            "minInstanceCount": 1,
                            "name": "headnode",
                            "osProfile": {
                                "linuxOperatingSystemProfile": azure_native.hdinsight.v20210601.LinuxOperatingSystemProfileArgs(
                                    password="**********",
                                    username="sshuser",
                                ),
                            },
                            "targetInstanceCount": 2,
                        },
                        {
                            "hardwareProfile": azure_native.hdinsight.v20210601.HardwareProfileArgs(
                                vm_size="Standard_D3_V2",
                            ),
                            "minInstanceCount": 1,
                            "name": "workernode",
                            "osProfile": {
                                "linuxOperatingSystemProfile": azure_native.hdinsight.v20210601.LinuxOperatingSystemProfileArgs(
                                    password="**********",
                                    username="sshuser",
                                ),
                            },
                            "targetInstanceCount": 4,
                        },
                        {
                            "hardwareProfile": azure_native.hdinsight.v20210601.HardwareProfileArgs(
                                vm_size="Small",
                            ),
                            "minInstanceCount": 1,
                            "name": "zookeepernode",
                            "osProfile": {
                                "linuxOperatingSystemProfile": azure_native.hdinsight.v20210601.LinuxOperatingSystemProfileArgs(
                                    password="**********",
                                    username="sshuser",
                                ),
                            },
                            "targetInstanceCount": 3,
                        },
                    ],
                },
                os_type="Linux",
                storage_profile={
                    "storageaccounts": [azure_native.hdinsight.v20210601.StorageAccountArgs(
                        container="containername",
                        is_default=True,
                        key="storagekey",
                        name="mystorage.blob.core.windows.net",
                    )],
                },
                tier="Standard",
            ),
            resource_group_name="rg1",
            tags={
                "key1": "val1",
            })

        ```
        ### Create Hadoop on Linux cluster with SSH public key

        ```python
        import pulumi
        import pulumi_azure_native as azure_native

        cluster = azure_native.hdinsight.v20210601.Cluster("cluster",
            cluster_name="cluster1",
            properties=azure_native.hdinsight.v20210601.ClusterGetPropertiesResponseArgs(
                cluster_definition=azure_native.hdinsight.v20210601.ClusterDefinitionArgs(
                    configurations={
                        "gateway": {
                            "restAuthCredential.isEnabled": True,
                            "restAuthCredential.password": "**********",
                            "restAuthCredential.username": "admin",
                        },
                    },
                    kind="Hadoop",
                ),
                cluster_version="3.5",
                compute_profile={
                    "roles": [
                        {
                            "hardwareProfile": azure_native.hdinsight.v20210601.HardwareProfileArgs(
                                vm_size="Standard_D3_V2",
                            ),
                            "minInstanceCount": 1,
                            "name": "headnode",
                            "osProfile": {
                                "linuxOperatingSystemProfile": {
                                    "sshProfile": {
                                        "publicKeys": [azure_native.hdinsight.v20210601.SshPublicKeyArgs(
                                            certificate_data="**********",
                                        )],
                                    },
                                    "username": "sshuser",
                                },
                            },
                            "targetInstanceCount": 2,
                        },
                        {
                            "hardwareProfile": azure_native.hdinsight.v20210601.HardwareProfileArgs(
                                vm_size="Standard_D3_V2",
                            ),
                            "minInstanceCount": 1,
                            "name": "workernode",
                            "osProfile": {
                                "linuxOperatingSystemProfile": azure_native.hdinsight.v20210601.LinuxOperatingSystemProfileArgs(
                                    password="**********",
                                    username="sshuser",
                                ),
                            },
                            "targetInstanceCount": 4,
                        },
                        {
                            "hardwareProfile": azure_native.hdinsight.v20210601.HardwareProfileArgs(
                                vm_size="Small",
                            ),
                            "minInstanceCount": 1,
                            "name": "zookeepernode",
                            "osProfile": {
                                "linuxOperatingSystemProfile": azure_native.hdinsight.v20210601.LinuxOperatingSystemProfileArgs(
                                    password="**********",
                                    username="sshuser",
                                ),
                            },
                            "targetInstanceCount": 3,
                        },
                    ],
                },
                os_type="Linux",
                storage_profile={
                    "storageaccounts": [azure_native.hdinsight.v20210601.StorageAccountArgs(
                        container="containername",
                        is_default=True,
                        key="storagekey",
                        name="mystorage.blob.core.windows.net",
                    )],
                },
                tier="Standard",
            ),
            resource_group_name="rg1",
            tags={
                "key1": "val1",
            })

        ```
        ### Create Kafka cluster with Kafka Rest Proxy

        ```python
        import pulumi
        import pulumi_azure_native as azure_native

        cluster = azure_native.hdinsight.v20210601.Cluster("cluster",
            cluster_name="cluster1",
            properties=azure_native.hdinsight.v20210601.ClusterGetPropertiesResponseArgs(
                cluster_definition=azure_native.hdinsight.v20210601.ClusterDefinitionArgs(
                    component_version={
                        "Kafka": "2.1",
                    },
                    configurations={
                        "gateway": {
                            "restAuthCredential.isEnabled": True,
                            "restAuthCredential.password": "**********",
                            "restAuthCredential.username": "admin",
                        },
                    },
                    kind="kafka",
                ),
                cluster_version="4.0",
                compute_profile={
                    "roles": [
                        {
                            "hardwareProfile": azure_native.hdinsight.v20210601.HardwareProfileArgs(
                                vm_size="Large",
                            ),
                            "name": "headnode",
                            "osProfile": {
                                "linuxOperatingSystemProfile": azure_native.hdinsight.v20210601.LinuxOperatingSystemProfileArgs(
                                    password="**********",
                                    username="sshuser",
                                ),
                            },
                            "targetInstanceCount": 2,
                        },
                        {
                            "dataDisksGroups": [azure_native.hdinsight.v20210601.DataDisksGroupsArgs(
                                disks_per_node=8,
                            )],
                            "hardwareProfile": azure_native.hdinsight.v20210601.HardwareProfileArgs(
                                vm_size="Large",
                            ),
                            "name": "workernode",
                            "osProfile": {
                                "linuxOperatingSystemProfile": azure_native.hdinsight.v20210601.LinuxOperatingSystemProfileArgs(
                                    password="**********",
                                    username="sshuser",
                                ),
                            },
                            "targetInstanceCount": 3,
                        },
                        {
                            "hardwareProfile": azure_native.hdinsight.v20210601.HardwareProfileArgs(
                                vm_size="Small",
                            ),
                            "name": "zookeepernode",
                            "osProfile": {
                                "linuxOperatingSystemProfile": azure_native.hdinsight.v20210601.LinuxOperatingSystemProfileArgs(
                                    password="**********",
                                    username="sshuser",
                                ),
                            },
                            "targetInstanceCount": 3,
                        },
                        {
                            "hardwareProfile": azure_native.hdinsight.v20210601.HardwareProfileArgs(
                                vm_size="Standard_D4_v2",
                            ),
                            "name": "kafkamanagementnode",
                            "osProfile": {
                                "linuxOperatingSystemProfile": azure_native.hdinsight.v20210601.LinuxOperatingSystemProfileArgs(
                                    password="**********",
                                    username="kafkauser",
                                ),
                            },
                            "targetInstanceCount": 2,
                        },
                    ],
                },
                kafka_rest_properties={
                    "clientGroupInfo": azure_native.hdinsight.v20210601.ClientGroupInfoArgs(
                        group_id="00000000-0000-0000-0000-111111111111",
                        group_name="Kafka security group name",
                    ),
                },
                os_type="Linux",
                storage_profile={
                    "storageaccounts": [azure_native.hdinsight.v20210601.StorageAccountArgs(
                        container="containername",
                        is_default=True,
                        key="storagekey",
                        name="mystorage.blob.core.windows.net",
                    )],
                },
                tier="Standard",
            ),
            resource_group_name="rg1")

        ```
        ### Create Secure Hadoop cluster

        ```python
        import pulumi
        import pulumi_azure_native as azure_native

        cluster = azure_native.hdinsight.v20210601.Cluster("cluster",
            cluster_name="cluster1",
            properties=azure_native.hdinsight.v20210601.ClusterGetPropertiesResponseArgs(
                cluster_definition=azure_native.hdinsight.v20210601.ClusterDefinitionArgs(
                    configurations={
                        "gateway": {
                            "restAuthCredential.isEnabled": True,
                            "restAuthCredential.password": "**********",
                            "restAuthCredential.username": "admin",
                        },
                    },
                    kind="Hadoop",
                ),
                cluster_version="3.5",
                compute_profile={
                    "roles": [
                        {
                            "hardwareProfile": azure_native.hdinsight.v20210601.HardwareProfileArgs(
                                vm_size="Standard_D3_V2",
                            ),
                            "minInstanceCount": 1,
                            "name": "headnode",
                            "osProfile": {
                                "linuxOperatingSystemProfile": {
                                    "password": "**********",
                                    "sshProfile": {
                                        "publicKeys": [azure_native.hdinsight.v20210601.SshPublicKeyArgs(
                                            certificate_data="**********",
                                        )],
                                    },
                                    "username": "sshuser",
                                },
                            },
                            "scriptActions": [],
                            "targetInstanceCount": 2,
                            "virtualNetworkProfile": azure_native.hdinsight.v20210601.VirtualNetworkProfileArgs(
                                id="/subscriptions/subId/resourceGroups/rg/providers/Microsoft.Network/virtualNetworks/vnetname",
                                subnet="/subscriptions/subId/resourceGroups/rg/providers/Microsoft.Network/virtualNetworks/vnetname/subnets/vnetsubnet",
                            ),
                        },
                        {
                            "hardwareProfile": azure_native.hdinsight.v20210601.HardwareProfileArgs(
                                vm_size="Standard_D3_V2",
                            ),
                            "minInstanceCount": 1,
                            "name": "workernode",
                            "osProfile": {
                                "linuxOperatingSystemProfile": {
                                    "password": "**********",
                                    "sshProfile": {
                                        "publicKeys": [azure_native.hdinsight.v20210601.SshPublicKeyArgs(
                                            certificate_data="**********",
                                        )],
                                    },
                                    "username": "sshuser",
                                },
                            },
                            "scriptActions": [],
                            "targetInstanceCount": 4,
                            "virtualNetworkProfile": azure_native.hdinsight.v20210601.VirtualNetworkProfileArgs(
                                id="/subscriptions/subId/resourceGroups/rg/providers/Microsoft.Network/virtualNetworks/vnetname",
                                subnet="/subscriptions/subId/resourceGroups/rg/providers/Microsoft.Network/virtualNetworks/vnetname/subnets/vnetsubnet",
                            ),
                        },
                        {
                            "hardwareProfile": azure_native.hdinsight.v20210601.HardwareProfileArgs(
                                vm_size="Small",
                            ),
                            "minInstanceCount": 1,
                            "name": "zookeepernode",
                            "osProfile": {
                                "linuxOperatingSystemProfile": {
                                    "password": "**********",
                                    "sshProfile": {
                                        "publicKeys": [azure_native.hdinsight.v20210601.SshPublicKeyArgs(
                                            certificate_data="**********",
                                        )],
                                    },
                                    "username": "sshuser",
                                },
                            },
                            "scriptActions": [],
                            "targetInstanceCount": 3,
                            "virtualNetworkProfile": azure_native.hdinsight.v20210601.VirtualNetworkProfileArgs(
                                id="/subscriptions/subId/resourceGroups/rg/providers/Microsoft.Network/virtualNetworks/vnetname",
                                subnet="/subscriptions/subId/resourceGroups/rg/providers/Microsoft.Network/virtualNetworks/vnetname/subnets/vnetsubnet",
                            ),
                        },
                    ],
                },
                os_type="Linux",
                security_profile=azure_native.hdinsight.v20210601.SecurityProfileArgs(
                    cluster_users_group_dns=["hdiusers"],
                    directory_type="ActiveDirectory",
                    domain="DomainName",
                    domain_user_password="**********",
                    domain_username="DomainUsername",
                    ldaps_urls=["ldaps://10.10.0.4:636"],
                    organizational_unit_dn="OU=Hadoop,DC=hdinsight,DC=test",
                ),
                storage_profile={
                    "storageaccounts": [azure_native.hdinsight.v20210601.StorageAccountArgs(
                        container="containername",
                        is_default=True,
                        key="storage account key",
                        name="mystorage.blob.core.windows.net",
                    )],
                },
                tier="Premium",
            ),
            resource_group_name="rg1",
            tags={
                "key1": "val1",
            })

        ```
        ### Create Spark on Linux Cluster with SSH password

        ```python
        import pulumi
        import pulumi_azure_native as azure_native

        cluster = azure_native.hdinsight.v20210601.Cluster("cluster",
            cluster_name="cluster1",
            properties=azure_native.hdinsight.v20210601.ClusterGetPropertiesResponseArgs(
                cluster_definition=azure_native.hdinsight.v20210601.ClusterDefinitionArgs(
                    component_version={
                        "Spark": "2.0",
                    },
                    configurations={
                        "gateway": {
                            "restAuthCredential.isEnabled": True,
                            "restAuthCredential.password": "**********",
                            "restAuthCredential.username": "admin",
                        },
                    },
                    kind="Spark",
                ),
                cluster_version="3.5",
                compute_profile={
                    "roles": [
                        {
                            "hardwareProfile": azure_native.hdinsight.v20210601.HardwareProfileArgs(
                                vm_size="Standard_D12_V2",
                            ),
                            "minInstanceCount": 1,
                            "name": "headnode",
                            "osProfile": {
                                "linuxOperatingSystemProfile": azure_native.hdinsight.v20210601.LinuxOperatingSystemProfileArgs(
                                    password="**********",
                                    username="sshuser",
                                ),
                            },
                            "targetInstanceCount": 2,
                        },
                        {
                            "hardwareProfile": azure_native.hdinsight.v20210601.HardwareProfileArgs(
                                vm_size="Standard_D4_V2",
                            ),
                            "minInstanceCount": 1,
                            "name": "workernode",
                            "osProfile": {
                                "linuxOperatingSystemProfile": azure_native.hdinsight.v20210601.LinuxOperatingSystemProfileArgs(
                                    password="**********",
                                    username="sshuser",
                                ),
                            },
                            "targetInstanceCount": 4,
                        },
                    ],
                },
                os_type="Linux",
                storage_profile={
                    "storageaccounts": [azure_native.hdinsight.v20210601.StorageAccountArgs(
                        container="containername",
                        is_default=True,
                        key="storageapikey*",
                        name="mystorage.blob.core.windows.net",
                    )],
                },
                tier="Standard",
            ),
            resource_group_name="rg1",
            tags={
                "key1": "val1",
            })

        ```
        ### Create cluster with TLS 1.2

        ```python
        import pulumi
        import pulumi_azure_native as azure_native

        cluster = azure_native.hdinsight.v20210601.Cluster("cluster",
            cluster_name="cluster1",
            properties=azure_native.hdinsight.v20210601.ClusterGetPropertiesResponseArgs(
                cluster_definition=azure_native.hdinsight.v20210601.ClusterDefinitionArgs(
                    configurations={
                        "gateway": {
                            "restAuthCredential.isEnabled": True,
                            "restAuthCredential.password": "**********",
                            "restAuthCredential.username": "admin",
                        },
                    },
                    kind="Hadoop",
                ),
                cluster_version="3.6",
                compute_profile={
                    "roles": [
                        {
                            "hardwareProfile": azure_native.hdinsight.v20210601.HardwareProfileArgs(
                                vm_size="Large",
                            ),
                            "name": "headnode",
                            "osProfile": {
                                "linuxOperatingSystemProfile": azure_native.hdinsight.v20210601.LinuxOperatingSystemProfileArgs(
                                    password="**********",
                                    username="sshuser",
                                ),
                            },
                            "targetInstanceCount": 2,
                        },
                        {
                            "hardwareProfile": azure_native.hdinsight.v20210601.HardwareProfileArgs(
                                vm_size="Large",
                            ),
                            "name": "workernode",
                            "osProfile": {
                                "linuxOperatingSystemProfile": azure_native.hdinsight.v20210601.LinuxOperatingSystemProfileArgs(
                                    password="**********",
                                    username="sshuser",
                                ),
                            },
                            "targetInstanceCount": 3,
                        },
                        {
                            "hardwareProfile": azure_native.hdinsight.v20210601.HardwareProfileArgs(
                                vm_size="Small",
                            ),
                            "name": "zookeepernode",
                            "osProfile": {
                                "linuxOperatingSystemProfile": azure_native.hdinsight.v20210601.LinuxOperatingSystemProfileArgs(
                                    password="**********",
                                    username="sshuser",
                                ),
                            },
                            "targetInstanceCount": 3,
                        },
                    ],
                },
                min_supported_tls_version="1.2",
                os_type="Linux",
                storage_profile={
                    "storageaccounts": [azure_native.hdinsight.v20210601.StorageAccountArgs(
                        container="default8525",
                        is_default=True,
                        key="storagekey",
                        name="mystorage.blob.core.windows.net",
                    )],
                },
                tier="Standard",
            ),
            resource_group_name="rg1")

        ```
        ### Create cluster with availability zones

        ```python
        import pulumi
        import pulumi_azure_native as azure_native

        cluster = azure_native.hdinsight.v20210601.Cluster("cluster",
            cluster_name="cluster1",
            properties=azure_native.hdinsight.v20210601.ClusterGetPropertiesResponseArgs(
                cluster_definition=azure_native.hdinsight.v20210601.ClusterDefinitionArgs(
                    configurations={
                        "ambari-conf": {
                            "database-name": "{ambari database name}",
                            "database-server": "{sql server name}.database.windows.net",
                            "database-user-name": "**********",
                            "database-user-password": "**********",
                        },
                        "gateway": {
                            "restAuthCredential.isEnabled": True,
                            "restAuthCredential.password": "**********",
                            "restAuthCredential.username": "admin",
                        },
                        "hive-env": {
                            "hive_database": "Existing MSSQL Server database with SQL authentication",
                            "hive_database_name": "{hive metastore name}",
                            "hive_database_type": "mssql",
                            "hive_existing_mssql_server_database": "{hive metastore name}",
                            "hive_existing_mssql_server_host": "{sql server name}.database.windows.net",
                            "hive_hostname": "{sql server name}.database.windows.net",
                        },
                        "hive-site": {
                            "javax.jdo.option.ConnectionDriverName": "com.microsoft.sqlserver.jdbc.SQLServerDriver",
                            "javax.jdo.option.ConnectionPassword": "**********!",
                            "javax.jdo.option.ConnectionURL": "jdbc:sqlserver://{sql server name}.database.windows.net;database={hive metastore name};encrypt=true;trustServerCertificate=true;create=false;loginTimeout=300;sendStringParametersAsUnicode=true;prepareSQL=0",
                            "javax.jdo.option.ConnectionUserName": "**********",
                        },
                        "oozie-env": {
                            "oozie_database": "Existing MSSQL Server database with SQL authentication",
                            "oozie_database_name": "{oozie metastore name}",
                            "oozie_database_type": "mssql",
                            "oozie_existing_mssql_server_database": "{oozie metastore name}",
                            "oozie_existing_mssql_server_host": "{sql server name}.database.windows.net",
                            "oozie_hostname": "{sql server name}.database.windows.net",
                        },
                        "oozie-site": {
                            "oozie.db.schema.name": "oozie",
                            "oozie.service.JPAService.jdbc.driver": "com.microsoft.sqlserver.jdbc.SQLServerDriver",
                            "oozie.service.JPAService.jdbc.password": "**********",
                            "oozie.service.JPAService.jdbc.url": "jdbc:sqlserver://{sql server name}.database.windows.net;database={oozie metastore name};encrypt=true;trustServerCertificate=true;create=false;loginTimeout=300;sendStringParametersAsUnicode=true;prepareSQL=0",
                            "oozie.service.JPAService.jdbc.username": "**********",
                        },
                    },
                    kind="hadoop",
                ),
                cluster_version="3.6",
                compute_profile={
                    "roles": [
                        {
                            "hardwareProfile": azure_native.hdinsight.v20210601.HardwareProfileArgs(
                                vm_size="standard_d3",
                            ),
                            "name": "headnode",
                            "osProfile": {
                                "linuxOperatingSystemProfile": {
                                    "password": "**********",
                                    "sshProfile": {
                                        "publicKeys": [azure_native.hdinsight.v20210601.SshPublicKeyArgs(
                                            certificate_data="**********",
                                        )],
                                    },
                                    "username": "sshuser",
                                },
                            },
                            "targetInstanceCount": 2,
                            "virtualNetworkProfile": azure_native.hdinsight.v20210601.VirtualNetworkProfileArgs(
                                id="/subscriptions/subId/resourceGroups/rg/providers/Microsoft.Network/virtualNetworks/vnetname",
                                subnet="/subscriptions/subId/resourceGroups/rg/providers/Microsoft.Network/virtualNetworks/vnetname/subnets/vnetsubnet",
                            ),
                        },
                        {
                            "hardwareProfile": azure_native.hdinsight.v20210601.HardwareProfileArgs(
                                vm_size="standard_d3",
                            ),
                            "name": "workernode",
                            "osProfile": {
                                "linuxOperatingSystemProfile": {
                                    "password": "**********",
                                    "sshProfile": {
                                        "publicKeys": [azure_native.hdinsight.v20210601.SshPublicKeyArgs(
                                            certificate_data="**********",
                                        )],
                                    },
                                    "username": "sshuser",
                                },
                            },
                            "targetInstanceCount": 2,
                            "virtualNetworkProfile": azure_native.hdinsight.v20210601.VirtualNetworkProfileArgs(
                                id="/subscriptions/subId/resourceGroups/rg/providers/Microsoft.Network/virtualNetworks/vnetname",
                                subnet="/subscriptions/subId/resourceGroups/rg/providers/Microsoft.Network/virtualNetworks/vnetname/subnets/vnetsubnet",
                            ),
                        },
                    ],
                },
                os_type="Linux",
                storage_profile={
                    "storageaccounts": [azure_native.hdinsight.v20210601.StorageAccountArgs(
                        container="containername",
                        is_default=True,
                        key="storage account key",
                        name="mystorage",
                    )],
                },
            ),
            resource_group_name="rg1",
            zones=["1"])

        ```
        ### Create cluster with compute isolation properties

        ```python
        import pulumi
        import pulumi_azure_native as azure_native

        cluster = azure_native.hdinsight.v20210601.Cluster("cluster",
            cluster_name="cluster1",
            properties=azure_native.hdinsight.v20210601.ClusterGetPropertiesResponseArgs(
                cluster_definition=azure_native.hdinsight.v20210601.ClusterDefinitionArgs(
                    configurations={
                        "gateway": {
                            "restAuthCredential.isEnabled": True,
                            "restAuthCredential.password": "**********",
                            "restAuthCredential.username": "admin",
                        },
                    },
                    kind="hadoop",
                ),
                cluster_version="3.6",
                compute_isolation_properties=azure_native.hdinsight.v20210601.ComputeIsolationPropertiesArgs(
                    enable_compute_isolation=True,
                ),
                compute_profile={
                    "roles": [
                        {
                            "hardwareProfile": azure_native.hdinsight.v20210601.HardwareProfileArgs(
                                vm_size="standard_d3",
                            ),
                            "name": "headnode",
                            "osProfile": {
                                "linuxOperatingSystemProfile": {
                                    "password": "**********",
                                    "sshProfile": {
                                        "publicKeys": [azure_native.hdinsight.v20210601.SshPublicKeyArgs(
                                            certificate_data="**********",
                                        )],
                                    },
                                    "username": "sshuser",
                                },
                            },
                            "targetInstanceCount": 2,
                        },
                        {
                            "hardwareProfile": azure_native.hdinsight.v20210601.HardwareProfileArgs(
                                vm_size="standard_d3",
                            ),
                            "name": "workernode",
                            "osProfile": {
                                "linuxOperatingSystemProfile": {
                                    "password": "**********",
                                    "sshProfile": {
                                        "publicKeys": [azure_native.hdinsight.v20210601.SshPublicKeyArgs(
                                            certificate_data="**********",
                                        )],
                                    },
                                    "username": "sshuser",
                                },
                            },
                            "targetInstanceCount": 2,
                        },
                    ],
                },
                os_type="Linux",
                storage_profile={
                    "storageaccounts": [azure_native.hdinsight.v20210601.StorageAccountArgs(
                        container="containername",
                        is_default=True,
                        key="storage account key",
                        name="mystorage",
                    )],
                },
            ),
            resource_group_name="rg1")

        ```
        ### Create cluster with encryption at host

        ```python
        import pulumi
        import pulumi_azure_native as azure_native

        cluster = azure_native.hdinsight.v20210601.Cluster("cluster",
            cluster_name="cluster1",
            properties=azure_native.hdinsight.v20210601.ClusterGetPropertiesResponseArgs(
                cluster_definition=azure_native.hdinsight.v20210601.ClusterDefinitionArgs(
                    configurations={
                        "gateway": {
                            "restAuthCredential.isEnabled": True,
                            "restAuthCredential.password": "**********",
                            "restAuthCredential.username": "admin",
                        },
                    },
                    kind="Hadoop",
                ),
                cluster_version="3.6",
                compute_profile={
                    "roles": [
                        {
                            "hardwareProfile": azure_native.hdinsight.v20210601.HardwareProfileArgs(
                                vm_size="Standard_DS14_v2",
                            ),
                            "name": "headnode",
                            "osProfile": {
                                "linuxOperatingSystemProfile": azure_native.hdinsight.v20210601.LinuxOperatingSystemProfileArgs(
                                    password="**********",
                                    username="sshuser",
                                ),
                            },
                            "targetInstanceCount": 2,
                        },
                        {
                            "hardwareProfile": azure_native.hdinsight.v20210601.HardwareProfileArgs(
                                vm_size="Standard_DS14_v2",
                            ),
                            "name": "workernode",
                            "osProfile": {
                                "linuxOperatingSystemProfile": azure_native.hdinsight.v20210601.LinuxOperatingSystemProfileArgs(
                                    password="**********",
                                    username="sshuser",
                                ),
                            },
                            "targetInstanceCount": 3,
                        },
                        {
                            "hardwareProfile": azure_native.hdinsight.v20210601.HardwareProfileArgs(
                                vm_size="Standard_DS14_v2",
                            ),
                            "name": "zookeepernode",
                            "osProfile": {
                                "linuxOperatingSystemProfile": azure_native.hdinsight.v20210601.LinuxOperatingSystemProfileArgs(
                                    password="**********",
                                    username="sshuser",
                                ),
                            },
                            "targetInstanceCount": 3,
                        },
                    ],
                },
                disk_encryption_properties=azure_native.hdinsight.v20210601.DiskEncryptionPropertiesArgs(
                    encryption_at_host=True,
                ),
                os_type="Linux",
                storage_profile={
                    "storageaccounts": [azure_native.hdinsight.v20210601.StorageAccountArgs(
                        container="default8525",
                        is_default=True,
                        key="storagekey",
                        name="mystorage.blob.core.windows.net",
                    )],
                },
                tier="Standard",
            ),
            resource_group_name="rg1")

        ```
        ### Create cluster with encryption in transit

        ```python
        import pulumi
        import pulumi_azure_native as azure_native

        cluster = azure_native.hdinsight.v20210601.Cluster("cluster",
            cluster_name="cluster1",
            properties=azure_native.hdinsight.v20210601.ClusterGetPropertiesResponseArgs(
                cluster_definition=azure_native.hdinsight.v20210601.ClusterDefinitionArgs(
                    configurations={
                        "gateway": {
                            "restAuthCredential.isEnabled": True,
                            "restAuthCredential.password": "**********",
                            "restAuthCredential.username": "admin",
                        },
                    },
                    kind="Hadoop",
                ),
                cluster_version="3.6",
                compute_profile={
                    "roles": [
                        {
                            "hardwareProfile": azure_native.hdinsight.v20210601.HardwareProfileArgs(
                                vm_size="Large",
                            ),
                            "name": "headnode",
                            "osProfile": {
                                "linuxOperatingSystemProfile": azure_native.hdinsight.v20210601.LinuxOperatingSystemProfileArgs(
                                    password="**********",
                                    username="sshuser",
                                ),
                            },
                            "targetInstanceCount": 2,
                        },
                        {
                            "hardwareProfile": azure_native.hdinsight.v20210601.HardwareProfileArgs(
                                vm_size="Large",
                            ),
                            "name": "workernode",
                            "osProfile": {
                                "linuxOperatingSystemProfile": azure_native.hdinsight.v20210601.LinuxOperatingSystemProfileArgs(
                                    password="**********",
                                    username="sshuser",
                                ),
                            },
                            "targetInstanceCount": 3,
                        },
                        {
                            "hardwareProfile": azure_native.hdinsight.v20210601.HardwareProfileArgs(
                                vm_size="Small",
                            ),
                            "name": "zookeepernode",
                            "osProfile": {
                                "linuxOperatingSystemProfile": azure_native.hdinsight.v20210601.LinuxOperatingSystemProfileArgs(
                                    password="**********",
                                    username="sshuser",
                                ),
                            },
                            "targetInstanceCount": 3,
                        },
                    ],
                },
                encryption_in_transit_properties=azure_native.hdinsight.v20210601.EncryptionInTransitPropertiesArgs(
                    is_encryption_in_transit_enabled=True,
                ),
                os_type="Linux",
                storage_profile={
                    "storageaccounts": [azure_native.hdinsight.v20210601.StorageAccountArgs(
                        container="default8525",
                        is_default=True,
                        key="storagekey",
                        name="mystorage.blob.core.windows.net",
                    )],
                },
                tier="Standard",
            ),
            resource_group_name="rg1")

        ```
        ### Create cluster with network properties

        ```python
        import pulumi
        import pulumi_azure_native as azure_native

        cluster = azure_native.hdinsight.v20210601.Cluster("cluster",
            cluster_name="cluster1",
            properties=azure_native.hdinsight.v20210601.ClusterGetPropertiesResponseArgs(
                cluster_definition=azure_native.hdinsight.v20210601.ClusterDefinitionArgs(
                    configurations={
                        "gateway": {
                            "restAuthCredential.isEnabled": True,
                            "restAuthCredential.password": "**********",
                            "restAuthCredential.username": "admin",
                        },
                    },
                    kind="hadoop",
                ),
                cluster_version="3.6",
                compute_profile={
                    "roles": [
                        {
                            "hardwareProfile": azure_native.hdinsight.v20210601.HardwareProfileArgs(
                                vm_size="standard_d3",
                            ),
                            "name": "headnode",
                            "osProfile": {
                                "linuxOperatingSystemProfile": {
                                    "password": "**********",
                                    "sshProfile": {
                                        "publicKeys": [azure_native.hdinsight.v20210601.SshPublicKeyArgs(
                                            certificate_data="**********",
                                        )],
                                    },
                                    "username": "sshuser",
                                },
                            },
                            "targetInstanceCount": 2,
                            "virtualNetworkProfile": azure_native.hdinsight.v20210601.VirtualNetworkProfileArgs(
                                id="/subscriptions/subId/resourceGroups/rg/providers/Microsoft.Network/virtualNetworks/vnetname",
                                subnet="/subscriptions/subId/resourceGroups/rg/providers/Microsoft.Network/virtualNetworks/vnetname/subnets/vnetsubnet",
                            ),
                        },
                        {
                            "hardwareProfile": azure_native.hdinsight.v20210601.HardwareProfileArgs(
                                vm_size="standard_d3",
                            ),
                            "name": "workernode",
                            "osProfile": {
                                "linuxOperatingSystemProfile": {
                                    "password": "**********",
                                    "sshProfile": {
                                        "publicKeys": [azure_native.hdinsight.v20210601.SshPublicKeyArgs(
                                            certificate_data="**********",
                                        )],
                                    },
                                    "username": "sshuser",
                                },
                            },
                            "targetInstanceCount": 2,
                            "virtualNetworkProfile": azure_native.hdinsight.v20210601.VirtualNetworkProfileArgs(
                                id="/subscriptions/subId/resourceGroups/rg/providers/Microsoft.Network/virtualNetworks/vnetname",
                                subnet="/subscriptions/subId/resourceGroups/rg/providers/Microsoft.Network/virtualNetworks/vnetname/subnets/vnetsubnet",
                            ),
                        },
                    ],
                },
                network_properties=azure_native.hdinsight.v20210601.NetworkPropertiesArgs(
                    private_link="Enabled",
                    resource_provider_connection="Outbound",
                ),
                os_type="Linux",
                storage_profile={
                    "storageaccounts": [azure_native.hdinsight.v20210601.StorageAccountArgs(
                        container="containername",
                        is_default=True,
                        key="storage account key",
                        name="mystorage",
                    )],
                },
            ),
            resource_group_name="rg1")

        ```

        ## Import

        An existing resource can be imported using its type token, name, and identifier, e.g.

        ```sh
        $ pulumi import azure-native:hdinsight/v20210601:Cluster cluster1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.HDInsight/clusters/cluster1 
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] cluster_name: The name of the cluster.
        :param pulumi.Input[pulumi.InputType['ClusterIdentityArgs']] identity: The identity of the cluster, if configured.
        :param pulumi.Input[str] location: The location of the cluster.
        :param pulumi.Input[pulumi.InputType['ClusterCreatePropertiesArgs']] properties: The cluster create parameters.
        :param pulumi.Input[str] resource_group_name: The name of the resource group.
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] tags: The resource tags.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] zones: The availability zones.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: ClusterArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        The HDInsight cluster.

        ## Example Usage
        ### Create HDInsight cluster with Autoscale configuration

        ```python
        import pulumi
        import pulumi_azure_native as azure_native

        cluster = azure_native.hdinsight.v20210601.Cluster("cluster",
            cluster_name="cluster1",
            properties=azure_native.hdinsight.v20210601.ClusterGetPropertiesResponseArgs(
                cluster_definition=azure_native.hdinsight.v20210601.ClusterDefinitionArgs(
                    component_version={
                        "Hadoop": "2.7",
                    },
                    configurations={
                        "gateway": {
                            "restAuthCredential.isEnabled": True,
                            "restAuthCredential.password": "**********",
                            "restAuthCredential.username": "admin",
                        },
                    },
                    kind="hadoop",
                ),
                cluster_version="3.6",
                compute_profile={
                    "roles": [{
                        "autoscaleConfiguration": {
                            "recurrence": {
                                "schedule": [
                                    {
                                        "days": [
                                            "Monday",
                                            "Tuesday",
                                            "Wednesday",
                                            "Thursday",
                                            "Friday",
                                        ],
                                        "timeAndCapacity": azure_native.hdinsight.v20210601.AutoscaleTimeAndCapacityArgs(
                                            max_instance_count=3,
                                            min_instance_count=3,
                                            time="09:00",
                                        ),
                                    },
                                    {
                                        "days": [
                                            "Monday",
                                            "Tuesday",
                                            "Wednesday",
                                            "Thursday",
                                            "Friday",
                                        ],
                                        "timeAndCapacity": azure_native.hdinsight.v20210601.AutoscaleTimeAndCapacityArgs(
                                            max_instance_count=6,
                                            min_instance_count=6,
                                            time="18:00",
                                        ),
                                    },
                                    {
                                        "days": [
                                            "Saturday",
                                            "Sunday",
                                        ],
                                        "timeAndCapacity": azure_native.hdinsight.v20210601.AutoscaleTimeAndCapacityArgs(
                                            max_instance_count=2,
                                            min_instance_count=2,
                                            time="09:00",
                                        ),
                                    },
                                    {
                                        "days": [
                                            "Saturday",
                                            "Sunday",
                                        ],
                                        "timeAndCapacity": azure_native.hdinsight.v20210601.AutoscaleTimeAndCapacityArgs(
                                            max_instance_count=4,
                                            min_instance_count=4,
                                            time="18:00",
                                        ),
                                    },
                                ],
                                "timeZone": "China Standard Time",
                            },
                        },
                        "hardwareProfile": azure_native.hdinsight.v20210601.HardwareProfileArgs(
                            vm_size="Standard_D4_V2",
                        ),
                        "name": "workernode",
                        "osProfile": {
                            "linuxOperatingSystemProfile": azure_native.hdinsight.v20210601.LinuxOperatingSystemProfileArgs(
                                password="**********",
                                username="sshuser",
                            ),
                        },
                        "scriptActions": [],
                        "targetInstanceCount": 4,
                    }],
                },
                os_type="Linux",
                storage_profile={
                    "storageaccounts": [azure_native.hdinsight.v20210601.StorageAccountArgs(
                        container="hdinsight-autoscale-tes-2019-06-18t05-49-16-591z",
                        is_default=True,
                        key="storagekey",
                        name="mystorage.blob.core.windows.net",
                    )],
                },
                tier="Standard",
            ),
            resource_group_name="rg1")

        ```
        ### Create Hadoop cluster with Azure Data Lake Storage Gen 2

        ```python
        import pulumi
        import pulumi_azure_native as azure_native

        cluster = azure_native.hdinsight.v20210601.Cluster("cluster",
            cluster_name="cluster1",
            properties=azure_native.hdinsight.v20210601.ClusterGetPropertiesResponseArgs(
                cluster_definition=azure_native.hdinsight.v20210601.ClusterDefinitionArgs(
                    configurations={
                        "gateway": {
                            "restAuthCredential.isEnabled": "true",
                            "restAuthCredential.password": "**********",
                            "restAuthCredential.username": "admin",
                        },
                    },
                    kind="Hadoop",
                ),
                cluster_version="3.6",
                compute_profile={
                    "roles": [
                        {
                            "hardwareProfile": azure_native.hdinsight.v20210601.HardwareProfileArgs(
                                vm_size="Standard_D3_V2",
                            ),
                            "minInstanceCount": 1,
                            "name": "headnode",
                            "osProfile": {
                                "linuxOperatingSystemProfile": azure_native.hdinsight.v20210601.LinuxOperatingSystemProfileArgs(
                                    password="**********",
                                    username="sshuser",
                                ),
                            },
                            "targetInstanceCount": 2,
                        },
                        {
                            "hardwareProfile": azure_native.hdinsight.v20210601.HardwareProfileArgs(
                                vm_size="Standard_D3_V2",
                            ),
                            "minInstanceCount": 1,
                            "name": "workernode",
                            "osProfile": {
                                "linuxOperatingSystemProfile": azure_native.hdinsight.v20210601.LinuxOperatingSystemProfileArgs(
                                    password="**********",
                                    username="sshuser",
                                ),
                            },
                            "targetInstanceCount": 4,
                        },
                        {
                            "hardwareProfile": azure_native.hdinsight.v20210601.HardwareProfileArgs(
                                vm_size="Small",
                            ),
                            "minInstanceCount": 1,
                            "name": "zookeepernode",
                            "osProfile": {
                                "linuxOperatingSystemProfile": azure_native.hdinsight.v20210601.LinuxOperatingSystemProfileArgs(
                                    password="**********",
                                    username="sshuser",
                                ),
                            },
                            "targetInstanceCount": 3,
                        },
                    ],
                },
                os_type="Linux",
                storage_profile={
                    "storageaccounts": [azure_native.hdinsight.v20210601.StorageAccountArgs(
                        file_system="default",
                        is_default=True,
                        key="storagekey",
                        name="mystorage.dfs.core.windows.net",
                    )],
                },
                tier="Standard",
            ),
            resource_group_name="rg1",
            tags={
                "key1": "val1",
            })

        ```
        ### Create Hadoop on Linux cluster with SSH password

        ```python
        import pulumi
        import pulumi_azure_native as azure_native

        cluster = azure_native.hdinsight.v20210601.Cluster("cluster",
            cluster_name="cluster1",
            properties=azure_native.hdinsight.v20210601.ClusterGetPropertiesResponseArgs(
                cluster_definition=azure_native.hdinsight.v20210601.ClusterDefinitionArgs(
                    configurations={
                        "gateway": {
                            "restAuthCredential.isEnabled": "true",
                            "restAuthCredential.password": "**********",
                            "restAuthCredential.username": "admin",
                        },
                    },
                    kind="Hadoop",
                ),
                cluster_version="3.5",
                compute_profile={
                    "roles": [
                        {
                            "hardwareProfile": azure_native.hdinsight.v20210601.HardwareProfileArgs(
                                vm_size="Standard_D3_V2",
                            ),
                            "minInstanceCount": 1,
                            "name": "headnode",
                            "osProfile": {
                                "linuxOperatingSystemProfile": azure_native.hdinsight.v20210601.LinuxOperatingSystemProfileArgs(
                                    password="**********",
                                    username="sshuser",
                                ),
                            },
                            "targetInstanceCount": 2,
                        },
                        {
                            "hardwareProfile": azure_native.hdinsight.v20210601.HardwareProfileArgs(
                                vm_size="Standard_D3_V2",
                            ),
                            "minInstanceCount": 1,
                            "name": "workernode",
                            "osProfile": {
                                "linuxOperatingSystemProfile": azure_native.hdinsight.v20210601.LinuxOperatingSystemProfileArgs(
                                    password="**********",
                                    username="sshuser",
                                ),
                            },
                            "targetInstanceCount": 4,
                        },
                        {
                            "hardwareProfile": azure_native.hdinsight.v20210601.HardwareProfileArgs(
                                vm_size="Small",
                            ),
                            "minInstanceCount": 1,
                            "name": "zookeepernode",
                            "osProfile": {
                                "linuxOperatingSystemProfile": azure_native.hdinsight.v20210601.LinuxOperatingSystemProfileArgs(
                                    password="**********",
                                    username="sshuser",
                                ),
                            },
                            "targetInstanceCount": 3,
                        },
                    ],
                },
                os_type="Linux",
                storage_profile={
                    "storageaccounts": [azure_native.hdinsight.v20210601.StorageAccountArgs(
                        container="containername",
                        is_default=True,
                        key="storagekey",
                        name="mystorage.blob.core.windows.net",
                    )],
                },
                tier="Standard",
            ),
            resource_group_name="rg1",
            tags={
                "key1": "val1",
            })

        ```
        ### Create Hadoop on Linux cluster with SSH public key

        ```python
        import pulumi
        import pulumi_azure_native as azure_native

        cluster = azure_native.hdinsight.v20210601.Cluster("cluster",
            cluster_name="cluster1",
            properties=azure_native.hdinsight.v20210601.ClusterGetPropertiesResponseArgs(
                cluster_definition=azure_native.hdinsight.v20210601.ClusterDefinitionArgs(
                    configurations={
                        "gateway": {
                            "restAuthCredential.isEnabled": True,
                            "restAuthCredential.password": "**********",
                            "restAuthCredential.username": "admin",
                        },
                    },
                    kind="Hadoop",
                ),
                cluster_version="3.5",
                compute_profile={
                    "roles": [
                        {
                            "hardwareProfile": azure_native.hdinsight.v20210601.HardwareProfileArgs(
                                vm_size="Standard_D3_V2",
                            ),
                            "minInstanceCount": 1,
                            "name": "headnode",
                            "osProfile": {
                                "linuxOperatingSystemProfile": {
                                    "sshProfile": {
                                        "publicKeys": [azure_native.hdinsight.v20210601.SshPublicKeyArgs(
                                            certificate_data="**********",
                                        )],
                                    },
                                    "username": "sshuser",
                                },
                            },
                            "targetInstanceCount": 2,
                        },
                        {
                            "hardwareProfile": azure_native.hdinsight.v20210601.HardwareProfileArgs(
                                vm_size="Standard_D3_V2",
                            ),
                            "minInstanceCount": 1,
                            "name": "workernode",
                            "osProfile": {
                                "linuxOperatingSystemProfile": azure_native.hdinsight.v20210601.LinuxOperatingSystemProfileArgs(
                                    password="**********",
                                    username="sshuser",
                                ),
                            },
                            "targetInstanceCount": 4,
                        },
                        {
                            "hardwareProfile": azure_native.hdinsight.v20210601.HardwareProfileArgs(
                                vm_size="Small",
                            ),
                            "minInstanceCount": 1,
                            "name": "zookeepernode",
                            "osProfile": {
                                "linuxOperatingSystemProfile": azure_native.hdinsight.v20210601.LinuxOperatingSystemProfileArgs(
                                    password="**********",
                                    username="sshuser",
                                ),
                            },
                            "targetInstanceCount": 3,
                        },
                    ],
                },
                os_type="Linux",
                storage_profile={
                    "storageaccounts": [azure_native.hdinsight.v20210601.StorageAccountArgs(
                        container="containername",
                        is_default=True,
                        key="storagekey",
                        name="mystorage.blob.core.windows.net",
                    )],
                },
                tier="Standard",
            ),
            resource_group_name="rg1",
            tags={
                "key1": "val1",
            })

        ```
        ### Create Kafka cluster with Kafka Rest Proxy

        ```python
        import pulumi
        import pulumi_azure_native as azure_native

        cluster = azure_native.hdinsight.v20210601.Cluster("cluster",
            cluster_name="cluster1",
            properties=azure_native.hdinsight.v20210601.ClusterGetPropertiesResponseArgs(
                cluster_definition=azure_native.hdinsight.v20210601.ClusterDefinitionArgs(
                    component_version={
                        "Kafka": "2.1",
                    },
                    configurations={
                        "gateway": {
                            "restAuthCredential.isEnabled": True,
                            "restAuthCredential.password": "**********",
                            "restAuthCredential.username": "admin",
                        },
                    },
                    kind="kafka",
                ),
                cluster_version="4.0",
                compute_profile={
                    "roles": [
                        {
                            "hardwareProfile": azure_native.hdinsight.v20210601.HardwareProfileArgs(
                                vm_size="Large",
                            ),
                            "name": "headnode",
                            "osProfile": {
                                "linuxOperatingSystemProfile": azure_native.hdinsight.v20210601.LinuxOperatingSystemProfileArgs(
                                    password="**********",
                                    username="sshuser",
                                ),
                            },
                            "targetInstanceCount": 2,
                        },
                        {
                            "dataDisksGroups": [azure_native.hdinsight.v20210601.DataDisksGroupsArgs(
                                disks_per_node=8,
                            )],
                            "hardwareProfile": azure_native.hdinsight.v20210601.HardwareProfileArgs(
                                vm_size="Large",
                            ),
                            "name": "workernode",
                            "osProfile": {
                                "linuxOperatingSystemProfile": azure_native.hdinsight.v20210601.LinuxOperatingSystemProfileArgs(
                                    password="**********",
                                    username="sshuser",
                                ),
                            },
                            "targetInstanceCount": 3,
                        },
                        {
                            "hardwareProfile": azure_native.hdinsight.v20210601.HardwareProfileArgs(
                                vm_size="Small",
                            ),
                            "name": "zookeepernode",
                            "osProfile": {
                                "linuxOperatingSystemProfile": azure_native.hdinsight.v20210601.LinuxOperatingSystemProfileArgs(
                                    password="**********",
                                    username="sshuser",
                                ),
                            },
                            "targetInstanceCount": 3,
                        },
                        {
                            "hardwareProfile": azure_native.hdinsight.v20210601.HardwareProfileArgs(
                                vm_size="Standard_D4_v2",
                            ),
                            "name": "kafkamanagementnode",
                            "osProfile": {
                                "linuxOperatingSystemProfile": azure_native.hdinsight.v20210601.LinuxOperatingSystemProfileArgs(
                                    password="**********",
                                    username="kafkauser",
                                ),
                            },
                            "targetInstanceCount": 2,
                        },
                    ],
                },
                kafka_rest_properties={
                    "clientGroupInfo": azure_native.hdinsight.v20210601.ClientGroupInfoArgs(
                        group_id="00000000-0000-0000-0000-111111111111",
                        group_name="Kafka security group name",
                    ),
                },
                os_type="Linux",
                storage_profile={
                    "storageaccounts": [azure_native.hdinsight.v20210601.StorageAccountArgs(
                        container="containername",
                        is_default=True,
                        key="storagekey",
                        name="mystorage.blob.core.windows.net",
                    )],
                },
                tier="Standard",
            ),
            resource_group_name="rg1")

        ```
        ### Create Secure Hadoop cluster

        ```python
        import pulumi
        import pulumi_azure_native as azure_native

        cluster = azure_native.hdinsight.v20210601.Cluster("cluster",
            cluster_name="cluster1",
            properties=azure_native.hdinsight.v20210601.ClusterGetPropertiesResponseArgs(
                cluster_definition=azure_native.hdinsight.v20210601.ClusterDefinitionArgs(
                    configurations={
                        "gateway": {
                            "restAuthCredential.isEnabled": True,
                            "restAuthCredential.password": "**********",
                            "restAuthCredential.username": "admin",
                        },
                    },
                    kind="Hadoop",
                ),
                cluster_version="3.5",
                compute_profile={
                    "roles": [
                        {
                            "hardwareProfile": azure_native.hdinsight.v20210601.HardwareProfileArgs(
                                vm_size="Standard_D3_V2",
                            ),
                            "minInstanceCount": 1,
                            "name": "headnode",
                            "osProfile": {
                                "linuxOperatingSystemProfile": {
                                    "password": "**********",
                                    "sshProfile": {
                                        "publicKeys": [azure_native.hdinsight.v20210601.SshPublicKeyArgs(
                                            certificate_data="**********",
                                        )],
                                    },
                                    "username": "sshuser",
                                },
                            },
                            "scriptActions": [],
                            "targetInstanceCount": 2,
                            "virtualNetworkProfile": azure_native.hdinsight.v20210601.VirtualNetworkProfileArgs(
                                id="/subscriptions/subId/resourceGroups/rg/providers/Microsoft.Network/virtualNetworks/vnetname",
                                subnet="/subscriptions/subId/resourceGroups/rg/providers/Microsoft.Network/virtualNetworks/vnetname/subnets/vnetsubnet",
                            ),
                        },
                        {
                            "hardwareProfile": azure_native.hdinsight.v20210601.HardwareProfileArgs(
                                vm_size="Standard_D3_V2",
                            ),
                            "minInstanceCount": 1,
                            "name": "workernode",
                            "osProfile": {
                                "linuxOperatingSystemProfile": {
                                    "password": "**********",
                                    "sshProfile": {
                                        "publicKeys": [azure_native.hdinsight.v20210601.SshPublicKeyArgs(
                                            certificate_data="**********",
                                        )],
                                    },
                                    "username": "sshuser",
                                },
                            },
                            "scriptActions": [],
                            "targetInstanceCount": 4,
                            "virtualNetworkProfile": azure_native.hdinsight.v20210601.VirtualNetworkProfileArgs(
                                id="/subscriptions/subId/resourceGroups/rg/providers/Microsoft.Network/virtualNetworks/vnetname",
                                subnet="/subscriptions/subId/resourceGroups/rg/providers/Microsoft.Network/virtualNetworks/vnetname/subnets/vnetsubnet",
                            ),
                        },
                        {
                            "hardwareProfile": azure_native.hdinsight.v20210601.HardwareProfileArgs(
                                vm_size="Small",
                            ),
                            "minInstanceCount": 1,
                            "name": "zookeepernode",
                            "osProfile": {
                                "linuxOperatingSystemProfile": {
                                    "password": "**********",
                                    "sshProfile": {
                                        "publicKeys": [azure_native.hdinsight.v20210601.SshPublicKeyArgs(
                                            certificate_data="**********",
                                        )],
                                    },
                                    "username": "sshuser",
                                },
                            },
                            "scriptActions": [],
                            "targetInstanceCount": 3,
                            "virtualNetworkProfile": azure_native.hdinsight.v20210601.VirtualNetworkProfileArgs(
                                id="/subscriptions/subId/resourceGroups/rg/providers/Microsoft.Network/virtualNetworks/vnetname",
                                subnet="/subscriptions/subId/resourceGroups/rg/providers/Microsoft.Network/virtualNetworks/vnetname/subnets/vnetsubnet",
                            ),
                        },
                    ],
                },
                os_type="Linux",
                security_profile=azure_native.hdinsight.v20210601.SecurityProfileArgs(
                    cluster_users_group_dns=["hdiusers"],
                    directory_type="ActiveDirectory",
                    domain="DomainName",
                    domain_user_password="**********",
                    domain_username="DomainUsername",
                    ldaps_urls=["ldaps://10.10.0.4:636"],
                    organizational_unit_dn="OU=Hadoop,DC=hdinsight,DC=test",
                ),
                storage_profile={
                    "storageaccounts": [azure_native.hdinsight.v20210601.StorageAccountArgs(
                        container="containername",
                        is_default=True,
                        key="storage account key",
                        name="mystorage.blob.core.windows.net",
                    )],
                },
                tier="Premium",
            ),
            resource_group_name="rg1",
            tags={
                "key1": "val1",
            })

        ```
        ### Create Spark on Linux Cluster with SSH password

        ```python
        import pulumi
        import pulumi_azure_native as azure_native

        cluster = azure_native.hdinsight.v20210601.Cluster("cluster",
            cluster_name="cluster1",
            properties=azure_native.hdinsight.v20210601.ClusterGetPropertiesResponseArgs(
                cluster_definition=azure_native.hdinsight.v20210601.ClusterDefinitionArgs(
                    component_version={
                        "Spark": "2.0",
                    },
                    configurations={
                        "gateway": {
                            "restAuthCredential.isEnabled": True,
                            "restAuthCredential.password": "**********",
                            "restAuthCredential.username": "admin",
                        },
                    },
                    kind="Spark",
                ),
                cluster_version="3.5",
                compute_profile={
                    "roles": [
                        {
                            "hardwareProfile": azure_native.hdinsight.v20210601.HardwareProfileArgs(
                                vm_size="Standard_D12_V2",
                            ),
                            "minInstanceCount": 1,
                            "name": "headnode",
                            "osProfile": {
                                "linuxOperatingSystemProfile": azure_native.hdinsight.v20210601.LinuxOperatingSystemProfileArgs(
                                    password="**********",
                                    username="sshuser",
                                ),
                            },
                            "targetInstanceCount": 2,
                        },
                        {
                            "hardwareProfile": azure_native.hdinsight.v20210601.HardwareProfileArgs(
                                vm_size="Standard_D4_V2",
                            ),
                            "minInstanceCount": 1,
                            "name": "workernode",
                            "osProfile": {
                                "linuxOperatingSystemProfile": azure_native.hdinsight.v20210601.LinuxOperatingSystemProfileArgs(
                                    password="**********",
                                    username="sshuser",
                                ),
                            },
                            "targetInstanceCount": 4,
                        },
                    ],
                },
                os_type="Linux",
                storage_profile={
                    "storageaccounts": [azure_native.hdinsight.v20210601.StorageAccountArgs(
                        container="containername",
                        is_default=True,
                        key="storageapikey*",
                        name="mystorage.blob.core.windows.net",
                    )],
                },
                tier="Standard",
            ),
            resource_group_name="rg1",
            tags={
                "key1": "val1",
            })

        ```
        ### Create cluster with TLS 1.2

        ```python
        import pulumi
        import pulumi_azure_native as azure_native

        cluster = azure_native.hdinsight.v20210601.Cluster("cluster",
            cluster_name="cluster1",
            properties=azure_native.hdinsight.v20210601.ClusterGetPropertiesResponseArgs(
                cluster_definition=azure_native.hdinsight.v20210601.ClusterDefinitionArgs(
                    configurations={
                        "gateway": {
                            "restAuthCredential.isEnabled": True,
                            "restAuthCredential.password": "**********",
                            "restAuthCredential.username": "admin",
                        },
                    },
                    kind="Hadoop",
                ),
                cluster_version="3.6",
                compute_profile={
                    "roles": [
                        {
                            "hardwareProfile": azure_native.hdinsight.v20210601.HardwareProfileArgs(
                                vm_size="Large",
                            ),
                            "name": "headnode",
                            "osProfile": {
                                "linuxOperatingSystemProfile": azure_native.hdinsight.v20210601.LinuxOperatingSystemProfileArgs(
                                    password="**********",
                                    username="sshuser",
                                ),
                            },
                            "targetInstanceCount": 2,
                        },
                        {
                            "hardwareProfile": azure_native.hdinsight.v20210601.HardwareProfileArgs(
                                vm_size="Large",
                            ),
                            "name": "workernode",
                            "osProfile": {
                                "linuxOperatingSystemProfile": azure_native.hdinsight.v20210601.LinuxOperatingSystemProfileArgs(
                                    password="**********",
                                    username="sshuser",
                                ),
                            },
                            "targetInstanceCount": 3,
                        },
                        {
                            "hardwareProfile": azure_native.hdinsight.v20210601.HardwareProfileArgs(
                                vm_size="Small",
                            ),
                            "name": "zookeepernode",
                            "osProfile": {
                                "linuxOperatingSystemProfile": azure_native.hdinsight.v20210601.LinuxOperatingSystemProfileArgs(
                                    password="**********",
                                    username="sshuser",
                                ),
                            },
                            "targetInstanceCount": 3,
                        },
                    ],
                },
                min_supported_tls_version="1.2",
                os_type="Linux",
                storage_profile={
                    "storageaccounts": [azure_native.hdinsight.v20210601.StorageAccountArgs(
                        container="default8525",
                        is_default=True,
                        key="storagekey",
                        name="mystorage.blob.core.windows.net",
                    )],
                },
                tier="Standard",
            ),
            resource_group_name="rg1")

        ```
        ### Create cluster with availability zones

        ```python
        import pulumi
        import pulumi_azure_native as azure_native

        cluster = azure_native.hdinsight.v20210601.Cluster("cluster",
            cluster_name="cluster1",
            properties=azure_native.hdinsight.v20210601.ClusterGetPropertiesResponseArgs(
                cluster_definition=azure_native.hdinsight.v20210601.ClusterDefinitionArgs(
                    configurations={
                        "ambari-conf": {
                            "database-name": "{ambari database name}",
                            "database-server": "{sql server name}.database.windows.net",
                            "database-user-name": "**********",
                            "database-user-password": "**********",
                        },
                        "gateway": {
                            "restAuthCredential.isEnabled": True,
                            "restAuthCredential.password": "**********",
                            "restAuthCredential.username": "admin",
                        },
                        "hive-env": {
                            "hive_database": "Existing MSSQL Server database with SQL authentication",
                            "hive_database_name": "{hive metastore name}",
                            "hive_database_type": "mssql",
                            "hive_existing_mssql_server_database": "{hive metastore name}",
                            "hive_existing_mssql_server_host": "{sql server name}.database.windows.net",
                            "hive_hostname": "{sql server name}.database.windows.net",
                        },
                        "hive-site": {
                            "javax.jdo.option.ConnectionDriverName": "com.microsoft.sqlserver.jdbc.SQLServerDriver",
                            "javax.jdo.option.ConnectionPassword": "**********!",
                            "javax.jdo.option.ConnectionURL": "jdbc:sqlserver://{sql server name}.database.windows.net;database={hive metastore name};encrypt=true;trustServerCertificate=true;create=false;loginTimeout=300;sendStringParametersAsUnicode=true;prepareSQL=0",
                            "javax.jdo.option.ConnectionUserName": "**********",
                        },
                        "oozie-env": {
                            "oozie_database": "Existing MSSQL Server database with SQL authentication",
                            "oozie_database_name": "{oozie metastore name}",
                            "oozie_database_type": "mssql",
                            "oozie_existing_mssql_server_database": "{oozie metastore name}",
                            "oozie_existing_mssql_server_host": "{sql server name}.database.windows.net",
                            "oozie_hostname": "{sql server name}.database.windows.net",
                        },
                        "oozie-site": {
                            "oozie.db.schema.name": "oozie",
                            "oozie.service.JPAService.jdbc.driver": "com.microsoft.sqlserver.jdbc.SQLServerDriver",
                            "oozie.service.JPAService.jdbc.password": "**********",
                            "oozie.service.JPAService.jdbc.url": "jdbc:sqlserver://{sql server name}.database.windows.net;database={oozie metastore name};encrypt=true;trustServerCertificate=true;create=false;loginTimeout=300;sendStringParametersAsUnicode=true;prepareSQL=0",
                            "oozie.service.JPAService.jdbc.username": "**********",
                        },
                    },
                    kind="hadoop",
                ),
                cluster_version="3.6",
                compute_profile={
                    "roles": [
                        {
                            "hardwareProfile": azure_native.hdinsight.v20210601.HardwareProfileArgs(
                                vm_size="standard_d3",
                            ),
                            "name": "headnode",
                            "osProfile": {
                                "linuxOperatingSystemProfile": {
                                    "password": "**********",
                                    "sshProfile": {
                                        "publicKeys": [azure_native.hdinsight.v20210601.SshPublicKeyArgs(
                                            certificate_data="**********",
                                        )],
                                    },
                                    "username": "sshuser",
                                },
                            },
                            "targetInstanceCount": 2,
                            "virtualNetworkProfile": azure_native.hdinsight.v20210601.VirtualNetworkProfileArgs(
                                id="/subscriptions/subId/resourceGroups/rg/providers/Microsoft.Network/virtualNetworks/vnetname",
                                subnet="/subscriptions/subId/resourceGroups/rg/providers/Microsoft.Network/virtualNetworks/vnetname/subnets/vnetsubnet",
                            ),
                        },
                        {
                            "hardwareProfile": azure_native.hdinsight.v20210601.HardwareProfileArgs(
                                vm_size="standard_d3",
                            ),
                            "name": "workernode",
                            "osProfile": {
                                "linuxOperatingSystemProfile": {
                                    "password": "**********",
                                    "sshProfile": {
                                        "publicKeys": [azure_native.hdinsight.v20210601.SshPublicKeyArgs(
                                            certificate_data="**********",
                                        )],
                                    },
                                    "username": "sshuser",
                                },
                            },
                            "targetInstanceCount": 2,
                            "virtualNetworkProfile": azure_native.hdinsight.v20210601.VirtualNetworkProfileArgs(
                                id="/subscriptions/subId/resourceGroups/rg/providers/Microsoft.Network/virtualNetworks/vnetname",
                                subnet="/subscriptions/subId/resourceGroups/rg/providers/Microsoft.Network/virtualNetworks/vnetname/subnets/vnetsubnet",
                            ),
                        },
                    ],
                },
                os_type="Linux",
                storage_profile={
                    "storageaccounts": [azure_native.hdinsight.v20210601.StorageAccountArgs(
                        container="containername",
                        is_default=True,
                        key="storage account key",
                        name="mystorage",
                    )],
                },
            ),
            resource_group_name="rg1",
            zones=["1"])

        ```
        ### Create cluster with compute isolation properties

        ```python
        import pulumi
        import pulumi_azure_native as azure_native

        cluster = azure_native.hdinsight.v20210601.Cluster("cluster",
            cluster_name="cluster1",
            properties=azure_native.hdinsight.v20210601.ClusterGetPropertiesResponseArgs(
                cluster_definition=azure_native.hdinsight.v20210601.ClusterDefinitionArgs(
                    configurations={
                        "gateway": {
                            "restAuthCredential.isEnabled": True,
                            "restAuthCredential.password": "**********",
                            "restAuthCredential.username": "admin",
                        },
                    },
                    kind="hadoop",
                ),
                cluster_version="3.6",
                compute_isolation_properties=azure_native.hdinsight.v20210601.ComputeIsolationPropertiesArgs(
                    enable_compute_isolation=True,
                ),
                compute_profile={
                    "roles": [
                        {
                            "hardwareProfile": azure_native.hdinsight.v20210601.HardwareProfileArgs(
                                vm_size="standard_d3",
                            ),
                            "name": "headnode",
                            "osProfile": {
                                "linuxOperatingSystemProfile": {
                                    "password": "**********",
                                    "sshProfile": {
                                        "publicKeys": [azure_native.hdinsight.v20210601.SshPublicKeyArgs(
                                            certificate_data="**********",
                                        )],
                                    },
                                    "username": "sshuser",
                                },
                            },
                            "targetInstanceCount": 2,
                        },
                        {
                            "hardwareProfile": azure_native.hdinsight.v20210601.HardwareProfileArgs(
                                vm_size="standard_d3",
                            ),
                            "name": "workernode",
                            "osProfile": {
                                "linuxOperatingSystemProfile": {
                                    "password": "**********",
                                    "sshProfile": {
                                        "publicKeys": [azure_native.hdinsight.v20210601.SshPublicKeyArgs(
                                            certificate_data="**********",
                                        )],
                                    },
                                    "username": "sshuser",
                                },
                            },
                            "targetInstanceCount": 2,
                        },
                    ],
                },
                os_type="Linux",
                storage_profile={
                    "storageaccounts": [azure_native.hdinsight.v20210601.StorageAccountArgs(
                        container="containername",
                        is_default=True,
                        key="storage account key",
                        name="mystorage",
                    )],
                },
            ),
            resource_group_name="rg1")

        ```
        ### Create cluster with encryption at host

        ```python
        import pulumi
        import pulumi_azure_native as azure_native

        cluster = azure_native.hdinsight.v20210601.Cluster("cluster",
            cluster_name="cluster1",
            properties=azure_native.hdinsight.v20210601.ClusterGetPropertiesResponseArgs(
                cluster_definition=azure_native.hdinsight.v20210601.ClusterDefinitionArgs(
                    configurations={
                        "gateway": {
                            "restAuthCredential.isEnabled": True,
                            "restAuthCredential.password": "**********",
                            "restAuthCredential.username": "admin",
                        },
                    },
                    kind="Hadoop",
                ),
                cluster_version="3.6",
                compute_profile={
                    "roles": [
                        {
                            "hardwareProfile": azure_native.hdinsight.v20210601.HardwareProfileArgs(
                                vm_size="Standard_DS14_v2",
                            ),
                            "name": "headnode",
                            "osProfile": {
                                "linuxOperatingSystemProfile": azure_native.hdinsight.v20210601.LinuxOperatingSystemProfileArgs(
                                    password="**********",
                                    username="sshuser",
                                ),
                            },
                            "targetInstanceCount": 2,
                        },
                        {
                            "hardwareProfile": azure_native.hdinsight.v20210601.HardwareProfileArgs(
                                vm_size="Standard_DS14_v2",
                            ),
                            "name": "workernode",
                            "osProfile": {
                                "linuxOperatingSystemProfile": azure_native.hdinsight.v20210601.LinuxOperatingSystemProfileArgs(
                                    password="**********",
                                    username="sshuser",
                                ),
                            },
                            "targetInstanceCount": 3,
                        },
                        {
                            "hardwareProfile": azure_native.hdinsight.v20210601.HardwareProfileArgs(
                                vm_size="Standard_DS14_v2",
                            ),
                            "name": "zookeepernode",
                            "osProfile": {
                                "linuxOperatingSystemProfile": azure_native.hdinsight.v20210601.LinuxOperatingSystemProfileArgs(
                                    password="**********",
                                    username="sshuser",
                                ),
                            },
                            "targetInstanceCount": 3,
                        },
                    ],
                },
                disk_encryption_properties=azure_native.hdinsight.v20210601.DiskEncryptionPropertiesArgs(
                    encryption_at_host=True,
                ),
                os_type="Linux",
                storage_profile={
                    "storageaccounts": [azure_native.hdinsight.v20210601.StorageAccountArgs(
                        container="default8525",
                        is_default=True,
                        key="storagekey",
                        name="mystorage.blob.core.windows.net",
                    )],
                },
                tier="Standard",
            ),
            resource_group_name="rg1")

        ```
        ### Create cluster with encryption in transit

        ```python
        import pulumi
        import pulumi_azure_native as azure_native

        cluster = azure_native.hdinsight.v20210601.Cluster("cluster",
            cluster_name="cluster1",
            properties=azure_native.hdinsight.v20210601.ClusterGetPropertiesResponseArgs(
                cluster_definition=azure_native.hdinsight.v20210601.ClusterDefinitionArgs(
                    configurations={
                        "gateway": {
                            "restAuthCredential.isEnabled": True,
                            "restAuthCredential.password": "**********",
                            "restAuthCredential.username": "admin",
                        },
                    },
                    kind="Hadoop",
                ),
                cluster_version="3.6",
                compute_profile={
                    "roles": [
                        {
                            "hardwareProfile": azure_native.hdinsight.v20210601.HardwareProfileArgs(
                                vm_size="Large",
                            ),
                            "name": "headnode",
                            "osProfile": {
                                "linuxOperatingSystemProfile": azure_native.hdinsight.v20210601.LinuxOperatingSystemProfileArgs(
                                    password="**********",
                                    username="sshuser",
                                ),
                            },
                            "targetInstanceCount": 2,
                        },
                        {
                            "hardwareProfile": azure_native.hdinsight.v20210601.HardwareProfileArgs(
                                vm_size="Large",
                            ),
                            "name": "workernode",
                            "osProfile": {
                                "linuxOperatingSystemProfile": azure_native.hdinsight.v20210601.LinuxOperatingSystemProfileArgs(
                                    password="**********",
                                    username="sshuser",
                                ),
                            },
                            "targetInstanceCount": 3,
                        },
                        {
                            "hardwareProfile": azure_native.hdinsight.v20210601.HardwareProfileArgs(
                                vm_size="Small",
                            ),
                            "name": "zookeepernode",
                            "osProfile": {
                                "linuxOperatingSystemProfile": azure_native.hdinsight.v20210601.LinuxOperatingSystemProfileArgs(
                                    password="**********",
                                    username="sshuser",
                                ),
                            },
                            "targetInstanceCount": 3,
                        },
                    ],
                },
                encryption_in_transit_properties=azure_native.hdinsight.v20210601.EncryptionInTransitPropertiesArgs(
                    is_encryption_in_transit_enabled=True,
                ),
                os_type="Linux",
                storage_profile={
                    "storageaccounts": [azure_native.hdinsight.v20210601.StorageAccountArgs(
                        container="default8525",
                        is_default=True,
                        key="storagekey",
                        name="mystorage.blob.core.windows.net",
                    )],
                },
                tier="Standard",
            ),
            resource_group_name="rg1")

        ```
        ### Create cluster with network properties

        ```python
        import pulumi
        import pulumi_azure_native as azure_native

        cluster = azure_native.hdinsight.v20210601.Cluster("cluster",
            cluster_name="cluster1",
            properties=azure_native.hdinsight.v20210601.ClusterGetPropertiesResponseArgs(
                cluster_definition=azure_native.hdinsight.v20210601.ClusterDefinitionArgs(
                    configurations={
                        "gateway": {
                            "restAuthCredential.isEnabled": True,
                            "restAuthCredential.password": "**********",
                            "restAuthCredential.username": "admin",
                        },
                    },
                    kind="hadoop",
                ),
                cluster_version="3.6",
                compute_profile={
                    "roles": [
                        {
                            "hardwareProfile": azure_native.hdinsight.v20210601.HardwareProfileArgs(
                                vm_size="standard_d3",
                            ),
                            "name": "headnode",
                            "osProfile": {
                                "linuxOperatingSystemProfile": {
                                    "password": "**********",
                                    "sshProfile": {
                                        "publicKeys": [azure_native.hdinsight.v20210601.SshPublicKeyArgs(
                                            certificate_data="**********",
                                        )],
                                    },
                                    "username": "sshuser",
                                },
                            },
                            "targetInstanceCount": 2,
                            "virtualNetworkProfile": azure_native.hdinsight.v20210601.VirtualNetworkProfileArgs(
                                id="/subscriptions/subId/resourceGroups/rg/providers/Microsoft.Network/virtualNetworks/vnetname",
                                subnet="/subscriptions/subId/resourceGroups/rg/providers/Microsoft.Network/virtualNetworks/vnetname/subnets/vnetsubnet",
                            ),
                        },
                        {
                            "hardwareProfile": azure_native.hdinsight.v20210601.HardwareProfileArgs(
                                vm_size="standard_d3",
                            ),
                            "name": "workernode",
                            "osProfile": {
                                "linuxOperatingSystemProfile": {
                                    "password": "**********",
                                    "sshProfile": {
                                        "publicKeys": [azure_native.hdinsight.v20210601.SshPublicKeyArgs(
                                            certificate_data="**********",
                                        )],
                                    },
                                    "username": "sshuser",
                                },
                            },
                            "targetInstanceCount": 2,
                            "virtualNetworkProfile": azure_native.hdinsight.v20210601.VirtualNetworkProfileArgs(
                                id="/subscriptions/subId/resourceGroups/rg/providers/Microsoft.Network/virtualNetworks/vnetname",
                                subnet="/subscriptions/subId/resourceGroups/rg/providers/Microsoft.Network/virtualNetworks/vnetname/subnets/vnetsubnet",
                            ),
                        },
                    ],
                },
                network_properties=azure_native.hdinsight.v20210601.NetworkPropertiesArgs(
                    private_link="Enabled",
                    resource_provider_connection="Outbound",
                ),
                os_type="Linux",
                storage_profile={
                    "storageaccounts": [azure_native.hdinsight.v20210601.StorageAccountArgs(
                        container="containername",
                        is_default=True,
                        key="storage account key",
                        name="mystorage",
                    )],
                },
            ),
            resource_group_name="rg1")

        ```

        ## Import

        An existing resource can be imported using its type token, name, and identifier, e.g.

        ```sh
        $ pulumi import azure-native:hdinsight/v20210601:Cluster cluster1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.HDInsight/clusters/cluster1 
        ```

        :param str resource_name: The name of the resource.
        :param ClusterArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(ClusterArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 cluster_name: Optional[pulumi.Input[str]] = None,
                 identity: Optional[pulumi.Input[pulumi.InputType['ClusterIdentityArgs']]] = None,
                 location: Optional[pulumi.Input[str]] = None,
                 properties: Optional[pulumi.Input[pulumi.InputType['ClusterCreatePropertiesArgs']]] = None,
                 resource_group_name: Optional[pulumi.Input[str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 zones: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = ClusterArgs.__new__(ClusterArgs)

            __props__.__dict__["cluster_name"] = cluster_name
            __props__.__dict__["identity"] = identity
            __props__.__dict__["location"] = location
            __props__.__dict__["properties"] = properties
            if resource_group_name is None and not opts.urn:
                raise TypeError("Missing required property 'resource_group_name'")
            __props__.__dict__["resource_group_name"] = resource_group_name
            __props__.__dict__["tags"] = tags
            __props__.__dict__["zones"] = zones
            __props__.__dict__["etag"] = None
            __props__.__dict__["name"] = None
            __props__.__dict__["system_data"] = None
            __props__.__dict__["type"] = None
        alias_opts = pulumi.ResourceOptions(aliases=[pulumi.Alias(type_="azure-native:hdinsight:Cluster"), pulumi.Alias(type_="azure-native:hdinsight/v20150301preview:Cluster"), pulumi.Alias(type_="azure-native:hdinsight/v20180601preview:Cluster")])
        opts = pulumi.ResourceOptions.merge(opts, alias_opts)
        super(Cluster, __self__).__init__(
            'azure-native:hdinsight/v20210601:Cluster',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None) -> 'Cluster':
        """
        Get an existing Cluster resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = ClusterArgs.__new__(ClusterArgs)

        __props__.__dict__["etag"] = None
        __props__.__dict__["identity"] = None
        __props__.__dict__["location"] = None
        __props__.__dict__["name"] = None
        __props__.__dict__["properties"] = None
        __props__.__dict__["system_data"] = None
        __props__.__dict__["tags"] = None
        __props__.__dict__["type"] = None
        __props__.__dict__["zones"] = None
        return Cluster(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter
    def etag(self) -> pulumi.Output[Optional[str]]:
        """
        The ETag for the resource
        """
        return pulumi.get(self, "etag")

    @property
    @pulumi.getter
    def identity(self) -> pulumi.Output[Optional['outputs.ClusterIdentityResponse']]:
        """
        The identity of the cluster, if configured.
        """
        return pulumi.get(self, "identity")

    @property
    @pulumi.getter
    def location(self) -> pulumi.Output[str]:
        """
        The geo-location where the resource lives
        """
        return pulumi.get(self, "location")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[str]:
        """
        The name of the resource
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def properties(self) -> pulumi.Output['outputs.ClusterGetPropertiesResponse']:
        """
        The properties of the cluster.
        """
        return pulumi.get(self, "properties")

    @property
    @pulumi.getter(name="systemData")
    def system_data(self) -> pulumi.Output['outputs.SystemDataResponse']:
        """
        Metadata pertaining to creation and last modification of the resource.
        """
        return pulumi.get(self, "system_data")

    @property
    @pulumi.getter
    def tags(self) -> pulumi.Output[Optional[Mapping[str, str]]]:
        """
        Resource tags.
        """
        return pulumi.get(self, "tags")

    @property
    @pulumi.getter
    def type(self) -> pulumi.Output[str]:
        """
        The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        """
        return pulumi.get(self, "type")

    @property
    @pulumi.getter
    def zones(self) -> pulumi.Output[Optional[Sequence[str]]]:
        """
        The availability zones.
        """
        return pulumi.get(self, "zones")

