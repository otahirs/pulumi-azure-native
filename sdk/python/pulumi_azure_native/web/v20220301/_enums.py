# coding=utf-8
# *** WARNING: this file was generated by pulumi. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

from enum import Enum

__all__ = [
    'AutoHealActionType',
    'AzureStorageType',
    'ClientCertMode',
    'ConnectionStringType',
    'FtpsState',
    'HostType',
    'IpFilterTag',
    'LoadBalancingMode',
    'ManagedPipelineMode',
    'ManagedServiceIdentityType',
    'RedundancyMode',
    'ScmType',
    'SiteLoadBalancing',
    'SslState',
    'SupportedTlsVersions',
    'UpgradePreference',
]


class AutoHealActionType(str, Enum):
    """
    Predefined action to be taken.
    """
    RECYCLE = "Recycle"
    LOG_EVENT = "LogEvent"
    CUSTOM_ACTION = "CustomAction"


class AzureStorageType(str, Enum):
    """
    Type of storage.
    """
    AZURE_FILES = "AzureFiles"
    AZURE_BLOB = "AzureBlob"


class ClientCertMode(str, Enum):
    """
    This composes with ClientCertEnabled setting.
    - ClientCertEnabled: false means ClientCert is ignored.
    - ClientCertEnabled: true and ClientCertMode: Required means ClientCert is required.
    - ClientCertEnabled: true and ClientCertMode: Optional means ClientCert is optional or accepted.
    """
    REQUIRED = "Required"
    OPTIONAL = "Optional"
    OPTIONAL_INTERACTIVE_USER = "OptionalInteractiveUser"


class ConnectionStringType(str, Enum):
    """
    Type of database.
    """
    MY_SQL = "MySql"
    SQL_SERVER = "SQLServer"
    SQL_AZURE = "SQLAzure"
    CUSTOM = "Custom"
    NOTIFICATION_HUB = "NotificationHub"
    SERVICE_BUS = "ServiceBus"
    EVENT_HUB = "EventHub"
    API_HUB = "ApiHub"
    DOC_DB = "DocDb"
    REDIS_CACHE = "RedisCache"
    POSTGRE_SQL = "PostgreSQL"


class FtpsState(str, Enum):
    """
    State of FTP / FTPS service
    """
    ALL_ALLOWED = "AllAllowed"
    FTPS_ONLY = "FtpsOnly"
    DISABLED = "Disabled"


class HostType(str, Enum):
    """
    Indicates whether the hostname is a standard or repository hostname.
    """
    STANDARD = "Standard"
    REPOSITORY = "Repository"


class IpFilterTag(str, Enum):
    """
    Defines what this IP filter will be used for. This is to support IP filtering on proxies.
    """
    DEFAULT = "Default"
    XFF_PROXY = "XffProxy"
    SERVICE_TAG = "ServiceTag"


class LoadBalancingMode(str, Enum):
    """
    Specifies which endpoints to serve internally in the Virtual Network for the App Service Environment.
    """
    NONE = "None"
    WEB = "Web"
    PUBLISHING = "Publishing"
    WEB_PUBLISHING = "Web, Publishing"


class ManagedPipelineMode(str, Enum):
    """
    Managed pipeline mode.
    """
    INTEGRATED = "Integrated"
    CLASSIC = "Classic"


class ManagedServiceIdentityType(str, Enum):
    """
    Type of managed service identity.
    """
    SYSTEM_ASSIGNED = "SystemAssigned"
    USER_ASSIGNED = "UserAssigned"
    SYSTEM_ASSIGNED_USER_ASSIGNED = "SystemAssigned, UserAssigned"
    NONE = "None"


class RedundancyMode(str, Enum):
    """
    Site redundancy mode
    """
    NONE = "None"
    MANUAL = "Manual"
    FAILOVER = "Failover"
    ACTIVE_ACTIVE = "ActiveActive"
    GEO_REDUNDANT = "GeoRedundant"


class ScmType(str, Enum):
    """
    SCM type.
    """
    NONE = "None"
    DROPBOX = "Dropbox"
    TFS = "Tfs"
    LOCAL_GIT = "LocalGit"
    GIT_HUB = "GitHub"
    CODE_PLEX_GIT = "CodePlexGit"
    CODE_PLEX_HG = "CodePlexHg"
    BITBUCKET_GIT = "BitbucketGit"
    BITBUCKET_HG = "BitbucketHg"
    EXTERNAL_GIT = "ExternalGit"
    EXTERNAL_HG = "ExternalHg"
    ONE_DRIVE = "OneDrive"
    VSO = "VSO"
    VSTSRM = "VSTSRM"


class SiteLoadBalancing(str, Enum):
    """
    Site load balancing.
    """
    WEIGHTED_ROUND_ROBIN = "WeightedRoundRobin"
    LEAST_REQUESTS = "LeastRequests"
    LEAST_RESPONSE_TIME = "LeastResponseTime"
    WEIGHTED_TOTAL_TRAFFIC = "WeightedTotalTraffic"
    REQUEST_HASH = "RequestHash"
    PER_SITE_ROUND_ROBIN = "PerSiteRoundRobin"


class SslState(str, Enum):
    """
    SSL type.
    """
    DISABLED = "Disabled"
    SNI_ENABLED = "SniEnabled"
    IP_BASED_ENABLED = "IpBasedEnabled"


class SupportedTlsVersions(str, Enum):
    """
    ScmMinTlsVersion: configures the minimum version of TLS required for SSL requests for SCM site
    """
    SUPPORTED_TLS_VERSIONS_1_0 = "1.0"
    SUPPORTED_TLS_VERSIONS_1_1 = "1.1"
    SUPPORTED_TLS_VERSIONS_1_2 = "1.2"


class UpgradePreference(str, Enum):
    """
    Upgrade Preference
    """
    NONE = "None"
    """
    No preference on when this App Service Environment will be upgraded
    """
    EARLY = "Early"
    """
    This App Service Environment will be upgraded before others in the same region that have Upgrade Preference 'Late'
    """
    LATE = "Late"
    """
    This App Service Environment will be upgraded after others in the same region that have Upgrade Preference 'Early'
    """
    MANUAL = "Manual"
    """
    ASEv3 only. Once an upgrade is available, this App Service Environment will wait 10 days for the upgrade to be manually initiated. After 10 days the upgrade will begin automatically
    """
