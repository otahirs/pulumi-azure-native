name: run-acceptance-tests
on:
  repository_dispatch:
    types:
      - run-acceptance-tests-command
  pull_request:
    branches:
      - master
      - main
    paths-ignore:
      - CHANGELOG.md
  workflow_dispatch: {}
env:
  GITHUB_TOKEN: ${{ secrets.PULUMI_BOT_TOKEN }}
  PROVIDER: azure-native
  PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
  PULUMI_LOCAL_NUGET: ${{ github.workspace }}/nuget
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  NUGET_PUBLISH_KEY: ${{ secrets.NUGET_PUBLISH_KEY }}
  PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
  TRAVIS_OS_NAME: linux
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  PULUMI_GO_DEP_ROOT: ${{ github.workspace }}/..
  PUBLISH_REPO_USERNAME: ${{ secrets.OSSRH_USERNAME }}
  PUBLISH_REPO_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
  SIGNING_KEY_ID: ${{ secrets.JAVA_SIGNING_KEY_ID }}
  SIGNING_KEY: ${{ secrets.JAVA_SIGNING_KEY }}
  SIGNING_PASSWORD: ${{ secrets.JAVA_SIGNING_PASSWORD }}
  ARM_CLIENT_ID: 30e520fa-12b4-4e21-b473-9426c5ac2e1e
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_ENVIRONMENT: public
  ARM_LOCATION: westus2
  ARM_SUBSCRIPTION_ID: 0282681f-7a9e-424b-80b2-96babd57a8a1
  ARM_TENANT_ID: 706143bc-e1d4-4593-aee2-c9dc60ab9be7
  GO111MODULE: on
  PULUMI_API: https://api.pulumi-staging.io
  PR_COMMIT_SHA: ${{ github.event.client_payload.pull_request.head.sha }}
  GOVERSION: 1.19.x
  NODEVERSION: 16.x
  PYTHONVERSION: "3.7"
  DOTNETVERSION: 6.x
  JAVAVERSION: "11"
jobs:
  comment-notification:
    runs-on: ubuntu-latest
    name: comment-notification
    if: github.event_name == 'repository_dispatch'
    steps:
      - name: Create URL to the run output
        id: vars
        run: echo ::set-output
          name=run-url::https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID
      - name: Update with Result
        uses: peter-evans/create-or-update-comment@v1
        with:
          token: ${{ secrets.PULUMI_BOT_TOKEN }}
          repository: ${{ github.event.client_payload.github.payload.repository.full_name }}
          issue-number: ${{ github.event.client_payload.github.payload.issue.number }}
          body: "Please view the PR build: ${{ steps.vars.outputs.run-url }}"

  # External changes:
  # 1. Schema-explode to quickly re-create full schema
  # 2. X-Plat provider binaries from make

  # Pending improvements:
  # 1. Test workflow reuse
  # 2. New version number calculation

  build:
    runs-on: ubuntu-latest
    name: Build codegen, schema & provider
    if: github.event_name == 'repository_dispatch' ||
      github.event.pull_request.head.repo.full_name == github.repository
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          ref: ${{ env.PR_COMMIT_SHA }}
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GOVERSION }}
      # If we had the schema committed, we could run these in separate jobs
      - name: Skip re-generating versions
        run: make --touch versions
      - run: make codegen
      - run: make generate_schema
      - run: make provider
      # Can we auto-cache bin/ and .make/?
      - name: Upload codegen
        uses: actions/upload-artifact@v2
        with:
          name: pulumi-gen-azure-native
          path: bin/pulumi-gen-azure-native
      - name: Upload schema
        uses: actions/upload-artifact@v2
        with:
          name: schema-full.json
          path: provider/cmd/pulumi-resource-azure-native/schema-full.json
      - name: Upload provider
        uses: actions/upload-artifact@v2
        with:
          name: pulumi-resource-azure-native
          path: bin/pulumi-resource-azure-native
      # TODO: Check working tree clean?

  check_versions:
    runs-on: ubuntu-latest
    name: Check schema
    if: github.event_name == 'repository_dispatch' ||
      github.event.pull_request.head.repo.full_name == github.repository
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          ref: ${{ env.PR_COMMIT_SHA }}
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GOVERSION }}
      - run: make versions
      # TODO: Check working tree clean

  check_schema:
    runs-on: ubuntu-latest
    name: Check schema
    if: github.event_name == 'repository_dispatch' ||
      github.event.pull_request.head.repo.full_name == github.repository
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          ref: ${{ env.PR_COMMIT_SHA }}
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GOVERSION }}
      - name: Install Schema Tools
        uses: jaxxstorm/action-install-gh-release@v1.5.0
        with:
          repo: pulumi/schema-tools
      # TODO: Should we be checking the full schema instead?
      - if: github.event_name == 'pull_request'
        name: Check Schema is Valid
        run: |
          echo 'SCHEMA_CHANGES<<EOF' >> $GITHUB_ENV
          schema-tools compare azure-native master --local-path=provider/cmd/pulumi-resource-azure-native/schema.json >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
      - if: github.event_name == 'pull_request'
        name: Comment on PR with Details of Schema Check
        uses: thollander/actions-comment-pull-request@v1
        with:
          message: |
            ### Does the PR have any schema changes?

            ${{ env.SCHEMA_CHANGES }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - if:
          contains(env.SCHEMA_CHANGES, 'Looking good! No breaking changes found.') &&
          github.actor == 'pulumi-bot'
        name: Add label if no breaking changes
        uses: actions-ecosystem/action-add-labels@v1.1.0
        with:
          labels: impact/no-changelog-required
          number: ${{ github.event.issue.number }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

  test_provider:
    runs-on: ubuntu-latest
    name: Test Provider
    if: github.event_name == 'repository_dispatch' ||
      github.event.pull_request.head.repo.full_name == github.repository
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          ref: ${{ env.PR_COMMIT_SHA }}
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GOVERSION }}
      # Provider tests are standalone - don't require the provider binary or the schema
      - run: make test_provider
      - run: make lint_provider

  regenerate_sdks:
    runs-on: ubuntu-latest
    name: Regenerate SDKs
    if: github.event_name == 'repository_dispatch' ||
      github.event.pull_request.head.repo.full_name == github.repository
    strategy:
      fail-fast: false
      matrix:
        language:
          - nodejs
          - python
          - dotnet
          - java
          # - go - skipped because it's not committed
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          ref: ${{ env.PR_COMMIT_SHA }}
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GOVERSION }}
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODEVERSION }}
          registry-url: https://registry.npmjs.org
      - name: Setup DotNet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNETVERSION }}
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHONVERSION }}
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVAVERSION }}
          distribution: temurin
          cache: gradle
      - name: Download gen binary
        uses: actions/download-artifact@v2
        with:
          name: pulumi-gen-azure-native
          path: bin/pulumi-gen-azure-native
      - run: make --touch codegen
      - run: make generate_${{ matrix.language }}
      # TODO: Check working tree clean

  test_sdks:
    name: Build & Test SDKs
    needs: build
    runs-on: ${{ matrix.language == 'dotnet' && 'macos-11' || 'ubuntu-latest' }}
    strategy:
      fail-fast: true
      matrix:
        language:
          - nodejs
          - python
          - dotnet
          - go
          - java
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          ref: ${{ env.PR_COMMIT_SHA }}
      - name: Checkout Scripts Repo
        uses: actions/checkout@v2
        with:
          path: ci-scripts
          repository: pulumi/scripts
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GOVERSION }}
      - name: Install Pulumi CLI
        uses: pulumi/action-install-pulumi-cli@v2
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODEVERSION }}
          registry-url: https://registry.npmjs.org
      - name: Setup DotNet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNETVERSION }}
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHONVERSION }}
      - name: Install Python deps
        run: |-
          pip3 install virtualenv==20.0.23
          pip3 install pipenv
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVAVERSION }}
          distribution: temurin
          cache: gradle
      - name: Install gotestfmt
        uses: jaxxstorm/action-install-gh-release@v1.7.1
        with:
          tag: v2.4.0
          repo: GoTestTools/gotestfmt
      - name: Download schema
        uses: actions/download-artifact@v2
        with:
          name: schema-full.json
          path: provider/cmd/pulumi-resource-azure-native/schema-full.json
      - name: Download provider binary
        if: ${{ matrix.language != 'dotnet' }}
        uses: actions/download-artifact@v2
        with:
          name: pulumi-resource-azure-native
          path: bin/pulumi-resource-azure-native
      - name: Restore Binary Permissions
        if: ${{ matrix.language != 'dotnet' }}
        run: |
          chmod +x bin/pulumi-resource-azure-native
          make --touch provider
      - name: Build SDK
        run: make build_${{ matrix.language }}
      - name: Update path
        run: echo "${{ github.workspace }}/bin" >> $GITHUB_PATH
      - name: Install dependencies
        run: make install_${{ matrix.language}}_sdk
      - name: Run tests
        run: |
          set -euo pipefail
          cd examples && go test -v -json -count=1 -cover -timeout 2h -tags=${{ matrix.language }} -parallel 4 . 2>&1 | tee /tmp/gotest.log | gotestfmt
      - name: Tar SDK folder
        run: tar -zcf sdk/${{ matrix.language }}.tar.gz -C sdk/${{ matrix.language }} .
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.language  }}-sdk.tar.gz
          path: ${{ github.workspace}}/sdk/${{ matrix.language }}.tar.gz
      - name: Tar split Go SDK folder
        if: ${{ matrix.language == 'go' }}
        run: tar -zcf sdk/pulumi-azure-native-sdk.tar.gz -C sdk/pulumi-azure-native-sdk .
      - name: Upload split Go artifacts
        uses: actions/upload-artifact@v2
        if: ${{ matrix.language == 'go' }}
        with:
          name: pulumi-azure-native-sdk.tar.gz
          path: ${{ github.workspace}}/sdk/pulumi-azure-native-sdk.tar.gz
      - name: Check worktree clean
        run: ./ci-scripts/ci/check-worktree-is-clean
      - run: git status --porcelain
      - if: failure() && github.event_name == 'push'
        name: Notify Slack
        uses: 8398a7/action-slack@v3
        with:
          author_name: Failure while building SDKs
          fields: repo,commit,author,action
          status: ${{ job.status }}
    if: github.event_name == 'repository_dispatch' ||
      github.event.pull_request.head.repo.full_name == github.repository
