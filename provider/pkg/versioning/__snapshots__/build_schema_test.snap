
[TestNetwork_2020_02_01 - 1]
schema.PackageSpec{
    Name:                "azure-native",
    DisplayName:         "Azure Native",
    Version:             "",
    Description:         "A native Pulumi package for creating and managing Azure resources.",
    Keywords:            {"pulumi", "azure", "azure-native", "category/cloud", "kind/native"},
    Homepage:            "https://pulumi.com",
    License:             "Apache-2.0",
    Attribution:         "",
    Repository:          "https://github.com/pulumi/pulumi-azure-native",
    LogoURL:             "",
    PluginDownloadURL:   "",
    Publisher:           "Pulumi",
    Meta:                (*schema.MetadataSpec)(nil),
    AllowedPackageNames: nil,
    Language:            {
        "csharp": {0x7b, 0x22, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x22, 0x3a, 0x7b, 0x22, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x2d, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x22, 0x3a, 0x22, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x22, 0x7d, 0x2c, 0x22, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x22, 0x3a, 0x7b, 0x22, 0x50, 0x75, 0x6c, 0x75, 0x6d, 0x69, 0x22, 0x3a, 0x22, 0x33, 0x2e, 0x2a, 0x22, 0x2c, 0x22, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x49, 0x6d, 0x6d, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x3a, 0x22, 0x35, 0x2e, 0x30, 0x2e, 0x30, 0x22, 0x7d, 0x7d},
        "go":     {0x7b, 0x22, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x3a, 0x74, 0x72, 0x75, 0x65, 0x2c, 0x22, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x73, 0x22, 0x3a, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x2c, 0x22, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x61, 0x73, 0x65, 0x50, 0x61, 0x74, 0x68, 0x22, 0x3a, 0x22, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x75, 0x6c, 0x75, 0x6d, 0x69, 0x2f, 0x70, 0x75, 0x6c, 0x75, 0x6d, 0x69, 0x2d, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x2d, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x76, 0x32, 0x22, 0x2c, 0x22, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x3a, 0x22, 0x75, 0x74, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0x2c, 0x22, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x65, 0x73, 0x22, 0x3a, 0x7b, 0x7d, 0x2c, 0x22, 0x72, 0x6f, 0x6f, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x3a, 0x22, 0x70, 0x75, 0x6c, 0x75, 0x6d, 0x69, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x73, 0x64, 0x6b, 0x22, 0x7d},
        "java":   {0x7b, 0x22, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x22, 0x3a, 0x7b, 0x22, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x2d, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x22, 0x3a, 0x22, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x22, 0x7d, 0x7d},
        "nodejs": {0x7b, 0x22, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x22, 0x3a, 0x7b, 0x22, 0x40, 0x70, 0x75, 0x6c, 0x75, 0x6d, 0x69, 0x2f, 0x70, 0x75, 0x6c, 0x75, 0x6d, 0x69, 0x22, 0x3a, 0x22, 0x5e, 0x33, 0x2e, 0x30, 0x2e, 0x30, 0x22, 0x7d, 0x2c, 0x22, 0x72, 0x65, 0x61, 0x64, 0x6d, 0x65, 0x22, 0x3a, 0x22, 0x54, 0x68, 0x65, 0x20, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x20, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x20, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x20, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x20, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x73, 0x20, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x61, 0x6c, 0x6c, 0x20, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x20, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x20, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x20, 0x28, 0x41, 0x52, 0x4d, 0x29, 0x5c, 0x6e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x74, 0x68, 0x65, 0x69, 0x72, 0x20, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x20, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x20, 0x61, 0x72, 0x65, 0x20, 0x65, 0x78, 0x70, 0x6f, 0x73, 0x65, 0x64, 0x20, 0x61, 0x73, 0x20, 0x74, 0x79, 0x70, 0x65, 0x73, 0x20, 0x66, 0x72, 0x6f, 0x6d, 0x20, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x20, 0x62, 0x61, 0x73, 0x65, 0x64, 0x20, 0x6f, 0x6e, 0x20, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x20, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5c, 0x6e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x20, 0x73, 0x75, 0x63, 0x68, 0x20, 0x61, 0x73, 0x20, 0x27, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x27, 0x2c, 0x20, 0x27, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x27, 0x2c, 0x20, 0x27, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x27, 0x2c, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x27, 0x77, 0x65, 0x62, 0x27, 0x2c, 0x20, 0x61, 0x6d, 0x6f, 0x6e, 0x67, 0x20, 0x6d, 0x61, 0x6e, 0x79, 0x20, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x73, 0x2e, 0x20, 0x55, 0x73, 0x69, 0x6e, 0x67, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5c, 0x6e, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x73, 0x20, 0x79, 0x6f, 0x75, 0x20, 0x74, 0x6f, 0x20, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x6d, 0x61, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x6c, 0x79, 0x20, 0x64, 0x65, 0x63, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x20, 0x6f, 0x66, 0x20, 0x61, 0x6e, 0x79, 0x20, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x20, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x61, 0x6e, 0x79, 0x20, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x20, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5c, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x20, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x20, 0x61, 0x73, 0x20, 0x63, 0x6f, 0x64, 0x65, 0x2c, 0x20, 0x77, 0x68, 0x69, 0x63, 0x68, 0x20, 0x50, 0x75, 0x6c, 0x75, 0x6d, 0x69, 0x20, 0x74, 0x68, 0x65, 0x6e, 0x20, 0x75, 0x73, 0x65, 0x73, 0x20, 0x74, 0x6f, 0x20, 0x64, 0x72, 0x69, 0x76, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x41, 0x52, 0x4d, 0x20, 0x41, 0x50, 0x49, 0x2e, 0x22, 0x7d},
        "python": {0x7b, 0x22, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x73, 0x22, 0x3a, 0x7b, 0x7d, 0x2c, 0x22, 0x72, 0x65, 0x61, 0x64, 0x6d, 0x65, 0x22, 0x3a, 0x22, 0x54, 0x68, 0x65, 0x20, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x20, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x20, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x20, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x20, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x73, 0x20, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x61, 0x6c, 0x6c, 0x20, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x20, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x20, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x20, 0x28, 0x41, 0x52, 0x4d, 0x29, 0x5c, 0x6e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x74, 0x68, 0x65, 0x69, 0x72, 0x20, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x20, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x20, 0x61, 0x72, 0x65, 0x20, 0x65, 0x78, 0x70, 0x6f, 0x73, 0x65, 0x64, 0x20, 0x61, 0x73, 0x20, 0x74, 0x79, 0x70, 0x65, 0x73, 0x20, 0x66, 0x72, 0x6f, 0x6d, 0x20, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x20, 0x62, 0x61, 0x73, 0x65, 0x64, 0x20, 0x6f, 0x6e, 0x20, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x20, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5c, 0x6e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x20, 0x73, 0x75, 0x63, 0x68, 0x20, 0x61, 0x73, 0x20, 0x27, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x27, 0x2c, 0x20, 0x27, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x27, 0x2c, 0x20, 0x27, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x27, 0x2c, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x27, 0x77, 0x65, 0x62, 0x27, 0x2c, 0x20, 0x61, 0x6d, 0x6f, 0x6e, 0x67, 0x20, 0x6d, 0x61, 0x6e, 0x79, 0x20, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x73, 0x2e, 0x20, 0x55, 0x73, 0x69, 0x6e, 0x67, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5c, 0x6e, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x73, 0x20, 0x79, 0x6f, 0x75, 0x20, 0x74, 0x6f, 0x20, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x6d, 0x61, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x6c, 0x79, 0x20, 0x64, 0x65, 0x63, 0x6c, 0x61, 0x72, 0x65, 0x20, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x20, 0x6f, 0x66, 0x20, 0x61, 0x6e, 0x79, 0x20, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x20, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x61, 0x6e, 0x79, 0x20, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x20, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5c, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x20, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x20, 0x61, 0x73, 0x20, 0x63, 0x6f, 0x64, 0x65, 0x2c, 0x20, 0x77, 0x68, 0x69, 0x63, 0x68, 0x20, 0x50, 0x75, 0x6c, 0x75, 0x6d, 0x69, 0x20, 0x74, 0x68, 0x65, 0x6e, 0x20, 0x75, 0x73, 0x65, 0x73, 0x20, 0x74, 0x6f, 0x20, 0x64, 0x72, 0x69, 0x76, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x41, 0x52, 0x4d, 0x20, 0x41, 0x50, 0x49, 0x2e, 0x22, 0x2c, 0x22, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x73, 0x22, 0x3a, 0x7b, 0x22, 0x70, 0x75, 0x6c, 0x75, 0x6d, 0x69, 0x22, 0x3a, 0x22, 0x5c, 0x75, 0x30, 0x30, 0x33, 0x65, 0x3d, 0x33, 0x2e, 0x33, 0x35, 0x2e, 0x30, 0x2c, 0x5c, 0x75, 0x30, 0x30, 0x33, 0x63, 0x34, 0x2e, 0x30, 0x2e, 0x30, 0x22, 0x7d, 0x2c, 0x22, 0x75, 0x73, 0x65, 0x73, 0x49, 0x4f, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x73, 0x22, 0x3a, 0x74, 0x72, 0x75, 0x65, 0x7d},
    },
    Config: schema.ConfigSpec{
        Variables: {
            "auxiliaryTenantIds": {
                TypeSpec: schema.TypeSpec{
                    Type:                 "array",
                    Ref:                  "",
                    AdditionalProperties: (*schema.TypeSpec)(nil),
                    Items:                &schema.TypeSpec{
                        Type:                 "string",
                        Ref:                  "",
                        AdditionalProperties: (*schema.TypeSpec)(nil),
                        Items:                (*schema.TypeSpec)(nil),
                        OneOf:                nil,
                        Discriminator:        (*schema.DiscriminatorSpec)(nil),
                        Plain:                false,
                    },
                    OneOf:         nil,
                    Discriminator: (*schema.DiscriminatorSpec)(nil),
                    Plain:         false,
                },
                Description:          "",
                Const:                nil,
                Default:              nil,
                DefaultInfo:          (*schema.DefaultSpec)(nil),
                DeprecationMessage:   "",
                Language:             {},
                Secret:               false,
                ReplaceOnChanges:     false,
                WillReplaceOnChanges: false,
            },
            "clientCertificatePassword": {
                TypeSpec: schema.TypeSpec{
                    Type:                 "string",
                    Ref:                  "",
                    AdditionalProperties: (*schema.TypeSpec)(nil),
                    Items:                (*schema.TypeSpec)(nil),
                    OneOf:                nil,
                    Discriminator:        (*schema.DiscriminatorSpec)(nil),
                    Plain:                false,
                },
                Description:          "The password associated with the Client Certificate. For use when authenticating as a Service Principal using a Client Certificate",
                Const:                nil,
                Default:              nil,
                DefaultInfo:          (*schema.DefaultSpec)(nil),
                DeprecationMessage:   "",
                Language:             {},
                Secret:               true,
                ReplaceOnChanges:     false,
                WillReplaceOnChanges: false,
            },
            "clientCertificatePath": {
                TypeSpec: schema.TypeSpec{
                    Type:                 "string",
                    Ref:                  "",
                    AdditionalProperties: (*schema.TypeSpec)(nil),
                    Items:                (*schema.TypeSpec)(nil),
                    OneOf:                nil,
                    Discriminator:        (*schema.DiscriminatorSpec)(nil),
                    Plain:                false,
                },
                Description:          "The path to the Client Certificate associated with the Service Principal for use when authenticating as a Service Principal using a Client Certificate.",
                Const:                nil,
                Default:              nil,
                DefaultInfo:          (*schema.DefaultSpec)(nil),
                DeprecationMessage:   "",
                Language:             {},
                Secret:               false,
                ReplaceOnChanges:     false,
                WillReplaceOnChanges: false,
            },
            "clientId": {
                TypeSpec: schema.TypeSpec{
                    Type:                 "string",
                    Ref:                  "",
                    AdditionalProperties: (*schema.TypeSpec)(nil),
                    Items:                (*schema.TypeSpec)(nil),
                    OneOf:                nil,
                    Discriminator:        (*schema.DiscriminatorSpec)(nil),
                    Plain:                false,
                },
                Description:          "The Client ID which should be used.",
                Const:                nil,
                Default:              nil,
                DefaultInfo:          (*schema.DefaultSpec)(nil),
                DeprecationMessage:   "",
                Language:             {},
                Secret:               true,
                ReplaceOnChanges:     false,
                WillReplaceOnChanges: false,
            },
            "clientSecret": {
                TypeSpec: schema.TypeSpec{
                    Type:                 "string",
                    Ref:                  "",
                    AdditionalProperties: (*schema.TypeSpec)(nil),
                    Items:                (*schema.TypeSpec)(nil),
                    OneOf:                nil,
                    Discriminator:        (*schema.DiscriminatorSpec)(nil),
                    Plain:                false,
                },
                Description:          "The Client Secret which should be used. For use When authenticating as a Service Principal using a Client Secret.",
                Const:                nil,
                Default:              nil,
                DefaultInfo:          (*schema.DefaultSpec)(nil),
                DeprecationMessage:   "",
                Language:             {},
                Secret:               true,
                ReplaceOnChanges:     false,
                WillReplaceOnChanges: false,
            },
            "disablePulumiPartnerId": {
                TypeSpec: schema.TypeSpec{
                    Type:                 "boolean",
                    Ref:                  "",
                    AdditionalProperties: (*schema.TypeSpec)(nil),
                    Items:                (*schema.TypeSpec)(nil),
                    OneOf:                nil,
                    Discriminator:        (*schema.DiscriminatorSpec)(nil),
                    Plain:                false,
                },
                Description:          "This will disable the Pulumi Partner ID which is used if a custom `partnerId` isn't specified.",
                Const:                nil,
                Default:              nil,
                DefaultInfo:          (*schema.DefaultSpec)(nil),
                DeprecationMessage:   "",
                Language:             {},
                Secret:               false,
                ReplaceOnChanges:     false,
                WillReplaceOnChanges: false,
            },
            "environment": {
                TypeSpec: schema.TypeSpec{
                    Type:                 "string",
                    Ref:                  "",
                    AdditionalProperties: (*schema.TypeSpec)(nil),
                    Items:                (*schema.TypeSpec)(nil),
                    OneOf:                nil,
                    Discriminator:        (*schema.DiscriminatorSpec)(nil),
                    Plain:                false,
                },
                Description:          "The Cloud Environment which should be used. Possible values are public, usgovernment, german, and china. Defaults to public.",
                Const:                nil,
                Default:              nil,
                DefaultInfo:          (*schema.DefaultSpec)(nil),
                DeprecationMessage:   "",
                Language:             {},
                Secret:               false,
                ReplaceOnChanges:     false,
                WillReplaceOnChanges: false,
            },
            "msiEndpoint": {
                TypeSpec: schema.TypeSpec{
                    Type:                 "string",
                    Ref:                  "",
                    AdditionalProperties: (*schema.TypeSpec)(nil),
                    Items:                (*schema.TypeSpec)(nil),
                    OneOf:                nil,
                    Discriminator:        (*schema.DiscriminatorSpec)(nil),
                    Plain:                false,
                },
                Description:          "The path to a custom endpoint for Managed Service Identity - in most circumstances this should be detected automatically. ",
                Const:                nil,
                Default:              nil,
                DefaultInfo:          (*schema.DefaultSpec)(nil),
                DeprecationMessage:   "",
                Language:             {},
                Secret:               false,
                ReplaceOnChanges:     false,
                WillReplaceOnChanges: false,
            },
            "partnerId": {
                TypeSpec: schema.TypeSpec{
                    Type:                 "string",
                    Ref:                  "",
                    AdditionalProperties: (*schema.TypeSpec)(nil),
                    Items:                (*schema.TypeSpec)(nil),
                    OneOf:                nil,
                    Discriminator:        (*schema.DiscriminatorSpec)(nil),
                    Plain:                false,
                },
                Description:          "A GUID/UUID that is registered with Microsoft to facilitate partner resource usage attribution.",
                Const:                nil,
                Default:              nil,
                DefaultInfo:          (*schema.DefaultSpec)(nil),
                DeprecationMessage:   "",
                Language:             {},
                Secret:               false,
                ReplaceOnChanges:     false,
                WillReplaceOnChanges: false,
            },
            "subscriptionId": {
                TypeSpec: schema.TypeSpec{
                    Type:                 "string",
                    Ref:                  "",
                    AdditionalProperties: (*schema.TypeSpec)(nil),
                    Items:                (*schema.TypeSpec)(nil),
                    OneOf:                nil,
                    Discriminator:        (*schema.DiscriminatorSpec)(nil),
                    Plain:                false,
                },
                Description:          "The Subscription ID which should be used.",
                Const:                nil,
                Default:              nil,
                DefaultInfo:          (*schema.DefaultSpec)(nil),
                DeprecationMessage:   "",
                Language:             {},
                Secret:               false,
                ReplaceOnChanges:     false,
                WillReplaceOnChanges: false,
            },
            "tenantId": {
                TypeSpec: schema.TypeSpec{
                    Type:                 "string",
                    Ref:                  "",
                    AdditionalProperties: (*schema.TypeSpec)(nil),
                    Items:                (*schema.TypeSpec)(nil),
                    OneOf:                nil,
                    Discriminator:        (*schema.DiscriminatorSpec)(nil),
                    Plain:                false,
                },
                Description:          "The Tenant ID which should be used.",
                Const:                nil,
                Default:              nil,
                DefaultInfo:          (*schema.DefaultSpec)(nil),
                DeprecationMessage:   "",
                Language:             {},
                Secret:               false,
                ReplaceOnChanges:     false,
                WillReplaceOnChanges: false,
            },
            "useMsi": {
                TypeSpec: schema.TypeSpec{
                    Type:                 "boolean",
                    Ref:                  "",
                    AdditionalProperties: (*schema.TypeSpec)(nil),
                    Items:                (*schema.TypeSpec)(nil),
                    OneOf:                nil,
                    Discriminator:        (*schema.DiscriminatorSpec)(nil),
                    Plain:                false,
                },
                Description:          "Allowed Managed Service Identity be used for Authentication.",
                Const:                nil,
                Default:              bool(false),
                DefaultInfo:          (*schema.DefaultSpec)(nil),
                DeprecationMessage:   "",
                Language:             {},
                Secret:               false,
                ReplaceOnChanges:     false,
                WillReplaceOnChanges: false,
            },
        },
        Required: nil,
    },
    Types: {
        "azure-native:storage:BlobAccessTier": {
            ObjectTypeSpec: schema.ObjectTypeSpec{
                Description: "The access tier of a storage blob.",
                Properties:  {},
                Type:        "string",
                Required:    nil,
                Plain:       nil,
                Language:    {},
                IsOverlay:   false,
            },
            Enum: {
                {
                    Name:               "",
                    Description:        "Optimized for storing data that is accessed frequently.",
                    Value:              "Hot",
                    DeprecationMessage: "",
                },
                {
                    Name:               "",
                    Description:        "Optimized for storing data that is infrequently accessed and stored for at least 30 days.",
                    Value:              "Cool",
                    DeprecationMessage: "",
                },
                {
                    Name:               "",
                    Description:        "Optimized for storing data that is rarely accessed and stored for at least 180 days with flexible latency requirements, on the order of hours.",
                    Value:              "Archive",
                    DeprecationMessage: "",
                },
            },
        },
        "azure-native:storage:BlobType": {
            ObjectTypeSpec: schema.ObjectTypeSpec{
                Description: "The type of a storage blob to be created.",
                Properties:  {},
                Type:        "string",
                Required:    nil,
                Plain:       nil,
                Language:    {},
                IsOverlay:   false,
            },
            Enum: {
                {
                    Name:               "",
                    Description:        "Block blobs store text and binary data. Block blobs are made up of blocks of data that can be managed individually.",
                    Value:              "Block",
                    DeprecationMessage: "",
                },
                {
                    Name:               "",
                    Description:        "Append blobs are made up of blocks like block blobs, but are optimized for append operations.",
                    Value:              "Append",
                    DeprecationMessage: "",
                },
            },
        },
    },
    Provider: schema.ResourceSpec{
        ObjectTypeSpec: schema.ObjectTypeSpec{
            Description: "The provider type for the native Azure package.",
            Properties:  {},
            Type:        "object",
            Required:    nil,
            Plain:       nil,
            Language:    {},
            IsOverlay:   false,
        },
        InputProperties: {
            "auxiliaryTenantIds": {
                TypeSpec: schema.TypeSpec{
                    Type:                 "array",
                    Ref:                  "",
                    AdditionalProperties: (*schema.TypeSpec)(nil),
                    Items:                &schema.TypeSpec{
                        Type:                 "string",
                        Ref:                  "",
                        AdditionalProperties: (*schema.TypeSpec)(nil),
                        Items:                (*schema.TypeSpec)(nil),
                        OneOf:                nil,
                        Discriminator:        (*schema.DiscriminatorSpec)(nil),
                        Plain:                false,
                    },
                    OneOf:         nil,
                    Discriminator: (*schema.DiscriminatorSpec)(nil),
                    Plain:         false,
                },
                Description:          "Any additional Tenant IDs which should be used for authentication.",
                Const:                nil,
                Default:              nil,
                DefaultInfo:          (*schema.DefaultSpec)(nil),
                DeprecationMessage:   "",
                Language:             {},
                Secret:               false,
                ReplaceOnChanges:     false,
                WillReplaceOnChanges: false,
            },
            "clientCertificatePassword": {
                TypeSpec: schema.TypeSpec{
                    Type:                 "string",
                    Ref:                  "",
                    AdditionalProperties: (*schema.TypeSpec)(nil),
                    Items:                (*schema.TypeSpec)(nil),
                    OneOf:                nil,
                    Discriminator:        (*schema.DiscriminatorSpec)(nil),
                    Plain:                false,
                },
                Description:          "The password associated with the Client Certificate. For use when authenticating as a Service Principal using a Client Certificate",
                Const:                nil,
                Default:              nil,
                DefaultInfo:          (*schema.DefaultSpec)(nil),
                DeprecationMessage:   "",
                Language:             {},
                Secret:               true,
                ReplaceOnChanges:     false,
                WillReplaceOnChanges: false,
            },
            "clientCertificatePath": {
                TypeSpec: schema.TypeSpec{
                    Type:                 "string",
                    Ref:                  "",
                    AdditionalProperties: (*schema.TypeSpec)(nil),
                    Items:                (*schema.TypeSpec)(nil),
                    OneOf:                nil,
                    Discriminator:        (*schema.DiscriminatorSpec)(nil),
                    Plain:                false,
                },
                Description:          "The path to the Client Certificate associated with the Service Principal for use when authenticating as a Service Principal using a Client Certificate.",
                Const:                nil,
                Default:              nil,
                DefaultInfo:          (*schema.DefaultSpec)(nil),
                DeprecationMessage:   "",
                Language:             {},
                Secret:               false,
                ReplaceOnChanges:     false,
                WillReplaceOnChanges: false,
            },
            "clientId": {
                TypeSpec: schema.TypeSpec{
                    Type:                 "string",
                    Ref:                  "",
                    AdditionalProperties: (*schema.TypeSpec)(nil),
                    Items:                (*schema.TypeSpec)(nil),
                    OneOf:                nil,
                    Discriminator:        (*schema.DiscriminatorSpec)(nil),
                    Plain:                false,
                },
                Description:          "The Client ID which should be used.",
                Const:                nil,
                Default:              nil,
                DefaultInfo:          (*schema.DefaultSpec)(nil),
                DeprecationMessage:   "",
                Language:             {},
                Secret:               true,
                ReplaceOnChanges:     false,
                WillReplaceOnChanges: false,
            },
            "clientSecret": {
                TypeSpec: schema.TypeSpec{
                    Type:                 "string",
                    Ref:                  "",
                    AdditionalProperties: (*schema.TypeSpec)(nil),
                    Items:                (*schema.TypeSpec)(nil),
                    OneOf:                nil,
                    Discriminator:        (*schema.DiscriminatorSpec)(nil),
                    Plain:                false,
                },
                Description:          "The Client Secret which should be used. For use When authenticating as a Service Principal using a Client Secret.",
                Const:                nil,
                Default:              nil,
                DefaultInfo:          (*schema.DefaultSpec)(nil),
                DeprecationMessage:   "",
                Language:             {},
                Secret:               true,
                ReplaceOnChanges:     false,
                WillReplaceOnChanges: false,
            },
            "disablePulumiPartnerId": {
                TypeSpec: schema.TypeSpec{
                    Type:                 "boolean",
                    Ref:                  "",
                    AdditionalProperties: (*schema.TypeSpec)(nil),
                    Items:                (*schema.TypeSpec)(nil),
                    OneOf:                nil,
                    Discriminator:        (*schema.DiscriminatorSpec)(nil),
                    Plain:                false,
                },
                Description:          "This will disable the Pulumi Partner ID which is used if a custom `partnerId` isn't specified.",
                Const:                nil,
                Default:              nil,
                DefaultInfo:          (*schema.DefaultSpec)(nil),
                DeprecationMessage:   "",
                Language:             {},
                Secret:               false,
                ReplaceOnChanges:     false,
                WillReplaceOnChanges: false,
            },
            "environment": {
                TypeSpec: schema.TypeSpec{
                    Type:                 "string",
                    Ref:                  "",
                    AdditionalProperties: (*schema.TypeSpec)(nil),
                    Items:                (*schema.TypeSpec)(nil),
                    OneOf:                nil,
                    Discriminator:        (*schema.DiscriminatorSpec)(nil),
                    Plain:                false,
                },
                Description:          "The Cloud Environment which should be used. Possible values are public, usgovernment, german, and china. Defaults to public.",
                Const:                nil,
                Default:              "public",
                DefaultInfo:          (*schema.DefaultSpec)(nil),
                DeprecationMessage:   "",
                Language:             {},
                Secret:               false,
                ReplaceOnChanges:     false,
                WillReplaceOnChanges: false,
            },
            "msiEndpoint": {
                TypeSpec: schema.TypeSpec{
                    Type:                 "string",
                    Ref:                  "",
                    AdditionalProperties: (*schema.TypeSpec)(nil),
                    Items:                (*schema.TypeSpec)(nil),
                    OneOf:                nil,
                    Discriminator:        (*schema.DiscriminatorSpec)(nil),
                    Plain:                false,
                },
                Description:          "The path to a custom endpoint for Managed Service Identity - in most circumstances this should be detected automatically. ",
                Const:                nil,
                Default:              nil,
                DefaultInfo:          (*schema.DefaultSpec)(nil),
                DeprecationMessage:   "",
                Language:             {},
                Secret:               false,
                ReplaceOnChanges:     false,
                WillReplaceOnChanges: false,
            },
            "partnerId": {
                TypeSpec: schema.TypeSpec{
                    Type:                 "string",
                    Ref:                  "",
                    AdditionalProperties: (*schema.TypeSpec)(nil),
                    Items:                (*schema.TypeSpec)(nil),
                    OneOf:                nil,
                    Discriminator:        (*schema.DiscriminatorSpec)(nil),
                    Plain:                false,
                },
                Description:          "A GUID/UUID that is registered with Microsoft to facilitate partner resource usage attribution.",
                Const:                nil,
                Default:              nil,
                DefaultInfo:          (*schema.DefaultSpec)(nil),
                DeprecationMessage:   "",
                Language:             {},
                Secret:               false,
                ReplaceOnChanges:     false,
                WillReplaceOnChanges: false,
            },
            "subscriptionId": {
                TypeSpec: schema.TypeSpec{
                    Type:                 "string",
                    Ref:                  "",
                    AdditionalProperties: (*schema.TypeSpec)(nil),
                    Items:                (*schema.TypeSpec)(nil),
                    OneOf:                nil,
                    Discriminator:        (*schema.DiscriminatorSpec)(nil),
                    Plain:                false,
                },
                Description:          "The Subscription ID which should be used.",
                Const:                nil,
                Default:              nil,
                DefaultInfo:          (*schema.DefaultSpec)(nil),
                DeprecationMessage:   "",
                Language:             {},
                Secret:               false,
                ReplaceOnChanges:     false,
                WillReplaceOnChanges: false,
            },
            "tenantId": {
                TypeSpec: schema.TypeSpec{
                    Type:                 "string",
                    Ref:                  "",
                    AdditionalProperties: (*schema.TypeSpec)(nil),
                    Items:                (*schema.TypeSpec)(nil),
                    OneOf:                nil,
                    Discriminator:        (*schema.DiscriminatorSpec)(nil),
                    Plain:                false,
                },
                Description:          "The Tenant ID which should be used.",
                Const:                nil,
                Default:              nil,
                DefaultInfo:          (*schema.DefaultSpec)(nil),
                DeprecationMessage:   "",
                Language:             {},
                Secret:               false,
                ReplaceOnChanges:     false,
                WillReplaceOnChanges: false,
            },
            "useMsi": {
                TypeSpec: schema.TypeSpec{
                    Type:                 "boolean",
                    Ref:                  "",
                    AdditionalProperties: (*schema.TypeSpec)(nil),
                    Items:                (*schema.TypeSpec)(nil),
                    OneOf:                nil,
                    Discriminator:        (*schema.DiscriminatorSpec)(nil),
                    Plain:                false,
                },
                Description:          "Allowed Managed Service Identity be used for Authentication.",
                Const:                nil,
                Default:              bool(false),
                DefaultInfo:          (*schema.DefaultSpec)(nil),
                DeprecationMessage:   "",
                Language:             {},
                Secret:               false,
                ReplaceOnChanges:     false,
                WillReplaceOnChanges: false,
            },
        },
        RequiredInputs:     nil,
        PlainInputs:        nil,
        StateInputs:        (*schema.ObjectTypeSpec)(nil),
        Aliases:            nil,
        DeprecationMessage: "",
        IsComponent:        false,
        Methods:            {},
    },
    Resources: {
        "azure-native:storage:Blob": {
            ObjectTypeSpec: schema.ObjectTypeSpec{
                Description: "Manages a Blob within a Storage Container.",
                Properties:  {
                    "accessTier": {
                        TypeSpec: schema.TypeSpec{
                            Type:                 "",
                            Ref:                  "#/types/azure-native:storage:BlobAccessTier",
                            AdditionalProperties: (*schema.TypeSpec)(nil),
                            Items:                (*schema.TypeSpec)(nil),
                            OneOf:                nil,
                            Discriminator:        (*schema.DiscriminatorSpec)(nil),
                            Plain:                false,
                        },
                        Description:          "The access tier of the storage blob.",
                        Const:                nil,
                        Default:              nil,
                        DefaultInfo:          (*schema.DefaultSpec)(nil),
                        DeprecationMessage:   "",
                        Language:             {},
                        Secret:               false,
                        ReplaceOnChanges:     false,
                        WillReplaceOnChanges: false,
                    },
                    "contentMd5": {
                        TypeSpec: schema.TypeSpec{
                            Type:                 "string",
                            Ref:                  "",
                            AdditionalProperties: (*schema.TypeSpec)(nil),
                            Items:                (*schema.TypeSpec)(nil),
                            OneOf:                nil,
                            Discriminator:        (*schema.DiscriminatorSpec)(nil),
                            Plain:                false,
                        },
                        Description:          "The MD5 sum of the blob contents.",
                        Const:                nil,
                        Default:              nil,
                        DefaultInfo:          (*schema.DefaultSpec)(nil),
                        DeprecationMessage:   "",
                        Language:             {},
                        Secret:               false,
                        ReplaceOnChanges:     false,
                        WillReplaceOnChanges: false,
                    },
                    "contentType": {
                        TypeSpec: schema.TypeSpec{
                            Type:                 "string",
                            Ref:                  "",
                            AdditionalProperties: (*schema.TypeSpec)(nil),
                            Items:                (*schema.TypeSpec)(nil),
                            OneOf:                nil,
                            Discriminator:        (*schema.DiscriminatorSpec)(nil),
                            Plain:                false,
                        },
                        Description:          "The content type of the storage blob.",
                        Const:                nil,
                        Default:              nil,
                        DefaultInfo:          (*schema.DefaultSpec)(nil),
                        DeprecationMessage:   "",
                        Language:             {},
                        Secret:               false,
                        ReplaceOnChanges:     false,
                        WillReplaceOnChanges: false,
                    },
                    "metadata": {
                        TypeSpec: schema.TypeSpec{
                            Type:                 "object",
                            Ref:                  "",
                            AdditionalProperties: &schema.TypeSpec{
                                Type:                 "string",
                                Ref:                  "",
                                AdditionalProperties: (*schema.TypeSpec)(nil),
                                Items:                (*schema.TypeSpec)(nil),
                                OneOf:                nil,
                                Discriminator:        (*schema.DiscriminatorSpec)(nil),
                                Plain:                false,
                            },
                            Items:         (*schema.TypeSpec)(nil),
                            OneOf:         nil,
                            Discriminator: (*schema.DiscriminatorSpec)(nil),
                            Plain:         false,
                        },
                        Description:          "A map of custom blob metadata.",
                        Const:                nil,
                        Default:              nil,
                        DefaultInfo:          (*schema.DefaultSpec)(nil),
                        DeprecationMessage:   "",
                        Language:             {},
                        Secret:               false,
                        ReplaceOnChanges:     false,
                        WillReplaceOnChanges: false,
                    },
                    "name": {
                        TypeSpec: schema.TypeSpec{
                            Type:                 "string",
                            Ref:                  "",
                            AdditionalProperties: (*schema.TypeSpec)(nil),
                            Items:                (*schema.TypeSpec)(nil),
                            OneOf:                nil,
                            Discriminator:        (*schema.DiscriminatorSpec)(nil),
                            Plain:                false,
                        },
                        Description:          "The name of the storage blob.",
                        Const:                nil,
                        Default:              nil,
                        DefaultInfo:          (*schema.DefaultSpec)(nil),
                        DeprecationMessage:   "",
                        Language:             {},
                        Secret:               false,
                        ReplaceOnChanges:     false,
                        WillReplaceOnChanges: false,
                    },
                    "type": {
                        TypeSpec: schema.TypeSpec{
                            Type:                 "",
                            Ref:                  "#/types/azure-native:storage:BlobType",
                            AdditionalProperties: (*schema.TypeSpec)(nil),
                            Items:                (*schema.TypeSpec)(nil),
                            OneOf:                nil,
                            Discriminator:        (*schema.DiscriminatorSpec)(nil),
                            Plain:                false,
                        },
                        Description:          "The type of the storage blob to be created.",
                        Const:                nil,
                        Default:              nil,
                        DefaultInfo:          (*schema.DefaultSpec)(nil),
                        DeprecationMessage:   "",
                        Language:             {},
                        Secret:               false,
                        ReplaceOnChanges:     false,
                        WillReplaceOnChanges: false,
                    },
                    "url": {
                        TypeSpec: schema.TypeSpec{
                            Type:                 "string",
                            Ref:                  "",
                            AdditionalProperties: (*schema.TypeSpec)(nil),
                            Items:                (*schema.TypeSpec)(nil),
                            OneOf:                nil,
                            Discriminator:        (*schema.DiscriminatorSpec)(nil),
                            Plain:                false,
                        },
                        Description:          "The URL of the blob.",
                        Const:                nil,
                        Default:              nil,
                        DefaultInfo:          (*schema.DefaultSpec)(nil),
                        DeprecationMessage:   "",
                        Language:             {},
                        Secret:               false,
                        ReplaceOnChanges:     false,
                        WillReplaceOnChanges: false,
                    },
                },
                Type:      "object",
                Required:  {"accessTier", "metadata", "name", "type", "url"},
                Plain:     nil,
                Language:  {},
                IsOverlay: false,
            },
            InputProperties: {
                "accessTier": {
                    TypeSpec: schema.TypeSpec{
                        Type:                 "",
                        Ref:                  "#/types/azure-native:storage:BlobAccessTier",
                        AdditionalProperties: (*schema.TypeSpec)(nil),
                        Items:                (*schema.TypeSpec)(nil),
                        OneOf:                nil,
                        Discriminator:        (*schema.DiscriminatorSpec)(nil),
                        Plain:                false,
                    },
                    Description:          "The access tier of the storage blob.",
                    Const:                nil,
                    Default:              nil,
                    DefaultInfo:          (*schema.DefaultSpec)(nil),
                    DeprecationMessage:   "",
                    Language:             {},
                    Secret:               false,
                    ReplaceOnChanges:     false,
                    WillReplaceOnChanges: false,
                },
                "accountName": {
                    TypeSpec: schema.TypeSpec{
                        Type:                 "string",
                        Ref:                  "",
                        AdditionalProperties: (*schema.TypeSpec)(nil),
                        Items:                (*schema.TypeSpec)(nil),
                        OneOf:                nil,
                        Discriminator:        (*schema.DiscriminatorSpec)(nil),
                        Plain:                false,
                    },
                    Description:          "Specifies the storage account in which to create the storage container.",
                    Const:                nil,
                    Default:              nil,
                    DefaultInfo:          (*schema.DefaultSpec)(nil),
                    DeprecationMessage:   "",
                    Language:             {},
                    Secret:               false,
                    ReplaceOnChanges:     false,
                    WillReplaceOnChanges: false,
                },
                "blobName": {
                    TypeSpec: schema.TypeSpec{
                        Type:                 "string",
                        Ref:                  "",
                        AdditionalProperties: (*schema.TypeSpec)(nil),
                        Items:                (*schema.TypeSpec)(nil),
                        OneOf:                nil,
                        Discriminator:        (*schema.DiscriminatorSpec)(nil),
                        Plain:                false,
                    },
                    Description:          "The name of the storage blob. Must be unique within the storage container the blob is located.",
                    Const:                nil,
                    Default:              nil,
                    DefaultInfo:          (*schema.DefaultSpec)(nil),
                    DeprecationMessage:   "",
                    Language:             {},
                    Secret:               false,
                    ReplaceOnChanges:     false,
                    WillReplaceOnChanges: false,
                },
                "containerName": {
                    TypeSpec: schema.TypeSpec{
                        Type:                 "string",
                        Ref:                  "",
                        AdditionalProperties: (*schema.TypeSpec)(nil),
                        Items:                (*schema.TypeSpec)(nil),
                        OneOf:                nil,
                        Discriminator:        (*schema.DiscriminatorSpec)(nil),
                        Plain:                false,
                    },
                    Description:          "The name of the storage container in which this blob should be created.",
                    Const:                nil,
                    Default:              nil,
                    DefaultInfo:          (*schema.DefaultSpec)(nil),
                    DeprecationMessage:   "",
                    Language:             {},
                    Secret:               false,
                    ReplaceOnChanges:     false,
                    WillReplaceOnChanges: false,
                },
                "contentMd5": {
                    TypeSpec: schema.TypeSpec{
                        Type:                 "string",
                        Ref:                  "",
                        AdditionalProperties: (*schema.TypeSpec)(nil),
                        Items:                (*schema.TypeSpec)(nil),
                        OneOf:                nil,
                        Discriminator:        (*schema.DiscriminatorSpec)(nil),
                        Plain:                false,
                    },
                    Description:          "The MD5 sum of the blob contents. Cannot be defined if blob type is Append.",
                    Const:                nil,
                    Default:              nil,
                    DefaultInfo:          (*schema.DefaultSpec)(nil),
                    DeprecationMessage:   "",
                    Language:             {},
                    Secret:               false,
                    ReplaceOnChanges:     false,
                    WillReplaceOnChanges: false,
                },
                "contentType": {
                    TypeSpec: schema.TypeSpec{
                        Type:                 "string",
                        Ref:                  "",
                        AdditionalProperties: (*schema.TypeSpec)(nil),
                        Items:                (*schema.TypeSpec)(nil),
                        OneOf:                nil,
                        Discriminator:        (*schema.DiscriminatorSpec)(nil),
                        Plain:                false,
                    },
                    Description:          "The content type of the storage blob. Defaults to `application/octet-stream`.",
                    Const:                nil,
                    Default:              nil,
                    DefaultInfo:          (*schema.DefaultSpec)(nil),
                    DeprecationMessage:   "",
                    Language:             {},
                    Secret:               false,
                    ReplaceOnChanges:     false,
                    WillReplaceOnChanges: false,
                },
                "metadata": {
                    TypeSpec: schema.TypeSpec{
                        Type:                 "object",
                        Ref:                  "",
                        AdditionalProperties: &schema.TypeSpec{
                            Type:                 "string",
                            Ref:                  "",
                            AdditionalProperties: (*schema.TypeSpec)(nil),
                            Items:                (*schema.TypeSpec)(nil),
                            OneOf:                nil,
                            Discriminator:        (*schema.DiscriminatorSpec)(nil),
                            Plain:                false,
                        },
                        Items:         (*schema.TypeSpec)(nil),
                        OneOf:         nil,
                        Discriminator: (*schema.DiscriminatorSpec)(nil),
                        Plain:         false,
                    },
                    Description:          "A map of custom blob metadata.",
                    Const:                nil,
                    Default:              nil,
                    DefaultInfo:          (*schema.DefaultSpec)(nil),
                    DeprecationMessage:   "",
                    Language:             {},
                    Secret:               false,
                    ReplaceOnChanges:     false,
                    WillReplaceOnChanges: false,
                },
                "resourceGroupName": {
                    TypeSpec: schema.TypeSpec{
                        Type:                 "string",
                        Ref:                  "",
                        AdditionalProperties: (*schema.TypeSpec)(nil),
                        Items:                (*schema.TypeSpec)(nil),
                        OneOf:                nil,
                        Discriminator:        (*schema.DiscriminatorSpec)(nil),
                        Plain:                false,
                    },
                    Description:          "The name of the resource group within the user's subscription.",
                    Const:                nil,
                    Default:              nil,
                    DefaultInfo:          (*schema.DefaultSpec)(nil),
                    DeprecationMessage:   "",
                    Language:             {},
                    Secret:               false,
                    ReplaceOnChanges:     false,
                    WillReplaceOnChanges: false,
                },
                "source": {
                    TypeSpec: schema.TypeSpec{
                        Type:                 "",
                        Ref:                  "pulumi.json#/Asset",
                        AdditionalProperties: (*schema.TypeSpec)(nil),
                        Items:                (*schema.TypeSpec)(nil),
                        OneOf:                nil,
                        Discriminator:        (*schema.DiscriminatorSpec)(nil),
                        Plain:                false,
                    },
                    Description:          "An asset to copy to the blob contents. This field cannot be specified for Append blobs.",
                    Const:                nil,
                    Default:              nil,
                    DefaultInfo:          (*schema.DefaultSpec)(nil),
                    DeprecationMessage:   "",
                    Language:             {},
                    Secret:               false,
                    ReplaceOnChanges:     false,
                    WillReplaceOnChanges: false,
                },
                "type": {
                    TypeSpec: schema.TypeSpec{
                        Type:                 "",
                        Ref:                  "#/types/azure-native:storage:BlobType",
                        AdditionalProperties: (*schema.TypeSpec)(nil),
                        Items:                (*schema.TypeSpec)(nil),
                        OneOf:                nil,
                        Discriminator:        (*schema.DiscriminatorSpec)(nil),
                        Plain:                false,
                    },
                    Description:          "The type of the storage blob to be created. Defaults to 'Block'.",
                    Const:                nil,
                    Default:              "Block",
                    DefaultInfo:          (*schema.DefaultSpec)(nil),
                    DeprecationMessage:   "",
                    Language:             {},
                    Secret:               false,
                    ReplaceOnChanges:     false,
                    WillReplaceOnChanges: false,
                },
            },
            RequiredInputs:     {"resourceGroupName", "accountName", "containerName"},
            PlainInputs:        nil,
            StateInputs:        (*schema.ObjectTypeSpec)(nil),
            Aliases:            nil,
            DeprecationMessage: "",
            IsComponent:        false,
            Methods:            {},
        },
        "azure-native:storage:StorageAccountStaticWebsite": {
            ObjectTypeSpec: schema.ObjectTypeSpec{
                Description: "Enables the static website feature of a storage account.",
                Properties:  {
                    "containerName": {
                        TypeSpec: schema.TypeSpec{
                            Type:                 "string",
                            Ref:                  "",
                            AdditionalProperties: (*schema.TypeSpec)(nil),
                            Items:                (*schema.TypeSpec)(nil),
                            OneOf:                nil,
                            Discriminator:        (*schema.DiscriminatorSpec)(nil),
                            Plain:                false,
                        },
                        Description:          "The name of the container to upload blobs to.",
                        Const:                nil,
                        Default:              nil,
                        DefaultInfo:          (*schema.DefaultSpec)(nil),
                        DeprecationMessage:   "",
                        Language:             {},
                        Secret:               false,
                        ReplaceOnChanges:     false,
                        WillReplaceOnChanges: false,
                    },
                    "error404Document": {
                        TypeSpec: schema.TypeSpec{
                            Type:                 "string",
                            Ref:                  "",
                            AdditionalProperties: (*schema.TypeSpec)(nil),
                            Items:                (*schema.TypeSpec)(nil),
                            OneOf:                nil,
                            Discriminator:        (*schema.DiscriminatorSpec)(nil),
                            Plain:                false,
                        },
                        Description:          "The absolute path to a custom webpage that should be used when a request is made which does not correspond to an existing file.",
                        Const:                nil,
                        Default:              nil,
                        DefaultInfo:          (*schema.DefaultSpec)(nil),
                        DeprecationMessage:   "",
                        Language:             {},
                        Secret:               false,
                        ReplaceOnChanges:     false,
                        WillReplaceOnChanges: false,
                    },
                    "indexDocument": {
                        TypeSpec: schema.TypeSpec{
                            Type:                 "string",
                            Ref:                  "",
                            AdditionalProperties: (*schema.TypeSpec)(nil),
                            Items:                (*schema.TypeSpec)(nil),
                            OneOf:                nil,
                            Discriminator:        (*schema.DiscriminatorSpec)(nil),
                            Plain:                false,
                        },
                        Description:          "The webpage that Azure Storage serves for requests to the root of a website or any sub-folder. For example, 'index.html'. The value is case-sensitive.",
                        Const:                nil,
                        Default:              nil,
                        DefaultInfo:          (*schema.DefaultSpec)(nil),
                        DeprecationMessage:   "",
                        Language:             {},
                        Secret:               false,
                        ReplaceOnChanges:     false,
                        WillReplaceOnChanges: false,
                    },
                },
                Type:      "object",
                Required:  {"containerName"},
                Plain:     nil,
                Language:  {},
                IsOverlay: false,
            },
            InputProperties: {
                "accountName": {
                    TypeSpec: schema.TypeSpec{
                        Type:                 "string",
                        Ref:                  "",
                        AdditionalProperties: (*schema.TypeSpec)(nil),
                        Items:                (*schema.TypeSpec)(nil),
                        OneOf:                nil,
                        Discriminator:        (*schema.DiscriminatorSpec)(nil),
                        Plain:                false,
                    },
                    Description:          "The name of the storage account within the specified resource group.",
                    Const:                nil,
                    Default:              nil,
                    DefaultInfo:          (*schema.DefaultSpec)(nil),
                    DeprecationMessage:   "",
                    Language:             {},
                    Secret:               false,
                    ReplaceOnChanges:     false,
                    WillReplaceOnChanges: false,
                },
                "error404Document": {
                    TypeSpec: schema.TypeSpec{
                        Type:                 "string",
                        Ref:                  "",
                        AdditionalProperties: (*schema.TypeSpec)(nil),
                        Items:                (*schema.TypeSpec)(nil),
                        OneOf:                nil,
                        Discriminator:        (*schema.DiscriminatorSpec)(nil),
                        Plain:                false,
                    },
                    Description:          "The absolute path to a custom webpage that should be used when a request is made which does not correspond to an existing file.",
                    Const:                nil,
                    Default:              nil,
                    DefaultInfo:          (*schema.DefaultSpec)(nil),
                    DeprecationMessage:   "",
                    Language:             {},
                    Secret:               false,
                    ReplaceOnChanges:     false,
                    WillReplaceOnChanges: false,
                },
                "indexDocument": {
                    TypeSpec: schema.TypeSpec{
                        Type:                 "string",
                        Ref:                  "",
                        AdditionalProperties: (*schema.TypeSpec)(nil),
                        Items:                (*schema.TypeSpec)(nil),
                        OneOf:                nil,
                        Discriminator:        (*schema.DiscriminatorSpec)(nil),
                        Plain:                false,
                    },
                    Description:          "The webpage that Azure Storage serves for requests to the root of a website or any sub-folder. For example, 'index.html'. The value is case-sensitive.",
                    Const:                nil,
                    Default:              nil,
                    DefaultInfo:          (*schema.DefaultSpec)(nil),
                    DeprecationMessage:   "",
                    Language:             {},
                    Secret:               false,
                    ReplaceOnChanges:     false,
                    WillReplaceOnChanges: false,
                },
                "resourceGroupName": {
                    TypeSpec: schema.TypeSpec{
                        Type:                 "string",
                        Ref:                  "",
                        AdditionalProperties: (*schema.TypeSpec)(nil),
                        Items:                (*schema.TypeSpec)(nil),
                        OneOf:                nil,
                        Discriminator:        (*schema.DiscriminatorSpec)(nil),
                        Plain:                false,
                    },
                    Description:          "The name of the resource group within the user's subscription. The name is case insensitive.",
                    Const:                nil,
                    Default:              nil,
                    DefaultInfo:          (*schema.DefaultSpec)(nil),
                    DeprecationMessage:   "",
                    Language:             {},
                    Secret:               false,
                    ReplaceOnChanges:     false,
                    WillReplaceOnChanges: false,
                },
            },
            RequiredInputs:     {"resourceGroupName", "accountName"},
            PlainInputs:        nil,
            StateInputs:        (*schema.ObjectTypeSpec)(nil),
            Aliases:            nil,
            DeprecationMessage: "",
            IsComponent:        false,
            Methods:            {},
        },
        "azure-native:synapse:WorkspaceSqlAadAdmin": {
            ObjectTypeSpec: schema.ObjectTypeSpec{
                Description: "\n\nNote: SQL AAD Admin is configured automatically during workspace creation and assigned to the current user. One can't add more admins with this resource unless you manually delete the current SQL AAD Admin.",
                Properties:  {},
                Type:        "",
                Required:    nil,
                Plain:       nil,
                Language:    {},
                IsOverlay:   false,
            },
            InputProperties:    {},
            RequiredInputs:     nil,
            PlainInputs:        nil,
            StateInputs:        (*schema.ObjectTypeSpec)(nil),
            Aliases:            nil,
            DeprecationMessage: "",
            IsComponent:        false,
            Methods:            {},
        },
    },
    Functions: {
        "azure-native:authorization:getClientConfig": {
            Description:         "Use this function to access the current configuration of the native Azure provider.",
            Inputs:              (*schema.ObjectTypeSpec)(nil),
            MultiArgumentInputs: nil,
            Outputs:             &schema.ObjectTypeSpec{
                Description: "Configuration values returned by getClientConfig.",
                Properties:  {
                    "clientId": {
                        TypeSpec: schema.TypeSpec{
                            Type:                 "string",
                            Ref:                  "",
                            AdditionalProperties: (*schema.TypeSpec)(nil),
                            Items:                (*schema.TypeSpec)(nil),
                            OneOf:                nil,
                            Discriminator:        (*schema.DiscriminatorSpec)(nil),
                            Plain:                false,
                        },
                        Description:          "Azure Client ID (Application Object ID).",
                        Const:                nil,
                        Default:              nil,
                        DefaultInfo:          (*schema.DefaultSpec)(nil),
                        DeprecationMessage:   "",
                        Language:             {},
                        Secret:               false,
                        ReplaceOnChanges:     false,
                        WillReplaceOnChanges: false,
                    },
                    "objectId": {
                        TypeSpec: schema.TypeSpec{
                            Type:                 "string",
                            Ref:                  "",
                            AdditionalProperties: (*schema.TypeSpec)(nil),
                            Items:                (*schema.TypeSpec)(nil),
                            OneOf:                nil,
                            Discriminator:        (*schema.DiscriminatorSpec)(nil),
                            Plain:                false,
                        },
                        Description:          "Azure Object ID of the current user or service principal.",
                        Const:                nil,
                        Default:              nil,
                        DefaultInfo:          (*schema.DefaultSpec)(nil),
                        DeprecationMessage:   "",
                        Language:             {},
                        Secret:               false,
                        ReplaceOnChanges:     false,
                        WillReplaceOnChanges: false,
                    },
                    "subscriptionId": {
                        TypeSpec: schema.TypeSpec{
                            Type:                 "string",
                            Ref:                  "",
                            AdditionalProperties: (*schema.TypeSpec)(nil),
                            Items:                (*schema.TypeSpec)(nil),
                            OneOf:                nil,
                            Discriminator:        (*schema.DiscriminatorSpec)(nil),
                            Plain:                false,
                        },
                        Description:          "Azure Subscription ID",
                        Const:                nil,
                        Default:              nil,
                        DefaultInfo:          (*schema.DefaultSpec)(nil),
                        DeprecationMessage:   "",
                        Language:             {},
                        Secret:               false,
                        ReplaceOnChanges:     false,
                        WillReplaceOnChanges: false,
                    },
                    "tenantId": {
                        TypeSpec: schema.TypeSpec{
                            Type:                 "string",
                            Ref:                  "",
                            AdditionalProperties: (*schema.TypeSpec)(nil),
                            Items:                (*schema.TypeSpec)(nil),
                            OneOf:                nil,
                            Discriminator:        (*schema.DiscriminatorSpec)(nil),
                            Plain:                false,
                        },
                        Description:          "Azure Tenant ID",
                        Const:                nil,
                        Default:              nil,
                        DefaultInfo:          (*schema.DefaultSpec)(nil),
                        DeprecationMessage:   "",
                        Language:             {},
                        Secret:               false,
                        ReplaceOnChanges:     false,
                        WillReplaceOnChanges: false,
                    },
                },
                Type:      "object",
                Required:  {"clientId", "objectId", "subscriptionId", "tenantId"},
                Plain:     nil,
                Language:  {},
                IsOverlay: false,
            },
            ReturnType:         (*schema.ReturnTypeSpec)(nil),
            DeprecationMessage: "",
            Language:           {},
            IsOverlay:          false,
        },
        "azure-native:authorization:getClientToken": {
            Description: "Use this function to get an Azure authentication token for the current login context.",
            Inputs:      &schema.ObjectTypeSpec{
                Description: "",
                Properties:  {
                    "endpoint": {
                        TypeSpec: schema.TypeSpec{
                            Type:                 "string",
                            Ref:                  "",
                            AdditionalProperties: (*schema.TypeSpec)(nil),
                            Items:                (*schema.TypeSpec)(nil),
                            OneOf:                nil,
                            Discriminator:        (*schema.DiscriminatorSpec)(nil),
                            Plain:                false,
                        },
                        Description:          "Optional authentication endpoint. Defaults to the endpoint of Azure Resource Manager.",
                        Const:                nil,
                        Default:              nil,
                        DefaultInfo:          (*schema.DefaultSpec)(nil),
                        DeprecationMessage:   "",
                        Language:             {},
                        Secret:               false,
                        ReplaceOnChanges:     false,
                        WillReplaceOnChanges: false,
                    },
                },
                Type:      "object",
                Required:  nil,
                Plain:     nil,
                Language:  {},
                IsOverlay: false,
            },
            MultiArgumentInputs: nil,
            Outputs:             &schema.ObjectTypeSpec{
                Description: "Configuration values returned by getClientToken.",
                Properties:  {
                    "token": {
                        TypeSpec: schema.TypeSpec{
                            Type:                 "string",
                            Ref:                  "",
                            AdditionalProperties: (*schema.TypeSpec)(nil),
                            Items:                (*schema.TypeSpec)(nil),
                            OneOf:                nil,
                            Discriminator:        (*schema.DiscriminatorSpec)(nil),
                            Plain:                false,
                        },
                        Description:          "OAuth token for Azure Management API and SDK authentication.",
                        Const:                nil,
                        Default:              nil,
                        DefaultInfo:          (*schema.DefaultSpec)(nil),
                        DeprecationMessage:   "",
                        Language:             {},
                        Secret:               false,
                        ReplaceOnChanges:     false,
                        WillReplaceOnChanges: false,
                    },
                },
                Type:      "object",
                Required:  {"token"},
                Plain:     nil,
                Language:  {},
                IsOverlay: false,
            },
            ReturnType:         (*schema.ReturnTypeSpec)(nil),
            DeprecationMessage: "",
            Language:           {},
            IsOverlay:          false,
        },
    },
}
---

[TestNetwork_2020_02_01 - 2]
resources.AzureAPIMetadata{
    Types: {
    },
    Resources: {
        "azure-native:storage:Blob": {
            APIVersion:    "",
            Path:          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/blobs/{blobName}",
            UpdateMethod:  "",
            PutParameters: {
                {
                    Name:       "subscriptionId",
                    Location:   "path",
                    IsRequired: true,
                    Value:      &resources.AzureAPIProperty{
                        Type:                 "string",
                        Items:                (*resources.AzureAPIProperty)(nil),
                        AdditionalProperties: (*resources.AzureAPIProperty)(nil),
                        OneOf:                nil,
                        Ref:                  "",
                        Const:                nil,
                        Minimum:              (*float64)(nil),
                        Maximum:              (*float64)(nil),
                        MinLength:            (*int64)(nil),
                        MaxLength:            (*int64)(nil),
                        Pattern:              "",
                        SdkName:              "",
                        Containers:           nil,
                        ForceNew:             false,
                        AutoName:             "",
                        IsStringSet:          false,
                        Default:              nil,
                    },
                    Body: (*resources.AzureAPIType)(nil),
                },
                {
                    Name:       "resourceGroupName",
                    Location:   "path",
                    IsRequired: true,
                    Value:      &resources.AzureAPIProperty{
                        Type:                 "string",
                        Items:                (*resources.AzureAPIProperty)(nil),
                        AdditionalProperties: (*resources.AzureAPIProperty)(nil),
                        OneOf:                nil,
                        Ref:                  "",
                        Const:                nil,
                        Minimum:              (*float64)(nil),
                        Maximum:              (*float64)(nil),
                        MinLength:            (*int64)(nil),
                        MaxLength:            (*int64)(nil),
                        Pattern:              "",
                        SdkName:              "",
                        Containers:           nil,
                        ForceNew:             false,
                        AutoName:             "",
                        IsStringSet:          false,
                        Default:              nil,
                    },
                    Body: (*resources.AzureAPIType)(nil),
                },
                {
                    Name:       "accountName",
                    Location:   "path",
                    IsRequired: true,
                    Value:      &resources.AzureAPIProperty{
                        Type:                 "string",
                        Items:                (*resources.AzureAPIProperty)(nil),
                        AdditionalProperties: (*resources.AzureAPIProperty)(nil),
                        OneOf:                nil,
                        Ref:                  "",
                        Const:                nil,
                        Minimum:              (*float64)(nil),
                        Maximum:              (*float64)(nil),
                        MinLength:            (*int64)(nil),
                        MaxLength:            (*int64)(nil),
                        Pattern:              "",
                        SdkName:              "",
                        Containers:           nil,
                        ForceNew:             false,
                        AutoName:             "",
                        IsStringSet:          false,
                        Default:              nil,
                    },
                    Body: (*resources.AzureAPIType)(nil),
                },
                {
                    Name:       "containerName",
                    Location:   "path",
                    IsRequired: true,
                    Value:      &resources.AzureAPIProperty{
                        Type:                 "string",
                        Items:                (*resources.AzureAPIProperty)(nil),
                        AdditionalProperties: (*resources.AzureAPIProperty)(nil),
                        OneOf:                nil,
                        Ref:                  "",
                        Const:                nil,
                        Minimum:              (*float64)(nil),
                        Maximum:              (*float64)(nil),
                        MinLength:            (*int64)(nil),
                        MaxLength:            (*int64)(nil),
                        Pattern:              "",
                        SdkName:              "",
                        Containers:           nil,
                        ForceNew:             false,
                        AutoName:             "",
                        IsStringSet:          false,
                        Default:              nil,
                    },
                    Body: (*resources.AzureAPIType)(nil),
                },
                {
                    Name:       "blobName",
                    Location:   "path",
                    IsRequired: true,
                    Value:      &resources.AzureAPIProperty{
                        Type:                 "string",
                        Items:                (*resources.AzureAPIProperty)(nil),
                        AdditionalProperties: (*resources.AzureAPIProperty)(nil),
                        OneOf:                nil,
                        Ref:                  "",
                        Const:                nil,
                        Minimum:              (*float64)(nil),
                        Maximum:              (*float64)(nil),
                        MinLength:            (*int64)(nil),
                        MaxLength:            (*int64)(nil),
                        Pattern:              "",
                        SdkName:              "",
                        Containers:           nil,
                        ForceNew:             false,
                        AutoName:             "copy",
                        IsStringSet:          false,
                        Default:              nil,
                    },
                    Body: (*resources.AzureAPIType)(nil),
                },
                {
                    Name:       "properties",
                    Location:   "body",
                    IsRequired: false,
                    Value:      (*resources.AzureAPIProperty)(nil),
                    Body:       &resources.AzureAPIType{
                        Properties: {
                            "accessTier": {
                                Type:                 "string",
                                Items:                (*resources.AzureAPIProperty)(nil),
                                AdditionalProperties: (*resources.AzureAPIProperty)(nil),
                                OneOf:                nil,
                                Ref:                  "",
                                Const:                nil,
                                Minimum:              (*float64)(nil),
                                Maximum:              (*float64)(nil),
                                MinLength:            (*int64)(nil),
                                MaxLength:            (*int64)(nil),
                                Pattern:              "",
                                SdkName:              "",
                                Containers:           nil,
                                ForceNew:             false,
                                AutoName:             "",
                                IsStringSet:          false,
                                Default:              nil,
                            },
                            "contentMd5": {
                                Type:                 "string",
                                Items:                (*resources.AzureAPIProperty)(nil),
                                AdditionalProperties: (*resources.AzureAPIProperty)(nil),
                                OneOf:                nil,
                                Ref:                  "",
                                Const:                nil,
                                Minimum:              (*float64)(nil),
                                Maximum:              (*float64)(nil),
                                MinLength:            (*int64)(nil),
                                MaxLength:            (*int64)(nil),
                                Pattern:              "",
                                SdkName:              "",
                                Containers:           nil,
                                ForceNew:             true,
                                AutoName:             "",
                                IsStringSet:          false,
                                Default:              nil,
                            },
                            "contentType": {
                                Type:                 "string",
                                Items:                (*resources.AzureAPIProperty)(nil),
                                AdditionalProperties: (*resources.AzureAPIProperty)(nil),
                                OneOf:                nil,
                                Ref:                  "",
                                Const:                nil,
                                Minimum:              (*float64)(nil),
                                Maximum:              (*float64)(nil),
                                MinLength:            (*int64)(nil),
                                MaxLength:            (*int64)(nil),
                                Pattern:              "",
                                SdkName:              "",
                                Containers:           nil,
                                ForceNew:             false,
                                AutoName:             "",
                                IsStringSet:          false,
                                Default:              nil,
                            },
                            "metadata": {
                                Type:                 "object",
                                Items:                (*resources.AzureAPIProperty)(nil),
                                AdditionalProperties: &resources.AzureAPIProperty{
                                    Type:                 "string",
                                    Items:                (*resources.AzureAPIProperty)(nil),
                                    AdditionalProperties: (*resources.AzureAPIProperty)(nil),
                                    OneOf:                nil,
                                    Ref:                  "",
                                    Const:                nil,
                                    Minimum:              (*float64)(nil),
                                    Maximum:              (*float64)(nil),
                                    MinLength:            (*int64)(nil),
                                    MaxLength:            (*int64)(nil),
                                    Pattern:              "",
                                    SdkName:              "",
                                    Containers:           nil,
                                    ForceNew:             false,
                                    AutoName:             "",
                                    IsStringSet:          false,
                                    Default:              nil,
                                },
                                OneOf:       nil,
                                Ref:         "",
                                Const:       nil,
                                Minimum:     (*float64)(nil),
                                Maximum:     (*float64)(nil),
                                MinLength:   (*int64)(nil),
                                MaxLength:   (*int64)(nil),
                                Pattern:     "",
                                SdkName:     "",
                                Containers:  nil,
                                ForceNew:    false,
                                AutoName:    "",
                                IsStringSet: false,
                                Default:     nil,
                            },
                            "source": {
                                Type:                 "",
                                Items:                (*resources.AzureAPIProperty)(nil),
                                AdditionalProperties: (*resources.AzureAPIProperty)(nil),
                                OneOf:                nil,
                                Ref:                  "pulumi.json#/Asset",
                                Const:                nil,
                                Minimum:              (*float64)(nil),
                                Maximum:              (*float64)(nil),
                                MinLength:            (*int64)(nil),
                                MaxLength:            (*int64)(nil),
                                Pattern:              "",
                                SdkName:              "",
                                Containers:           nil,
                                ForceNew:             true,
                                AutoName:             "",
                                IsStringSet:          false,
                                Default:              nil,
                            },
                            "type": {
                                Type:                 "string",
                                Items:                (*resources.AzureAPIProperty)(nil),
                                AdditionalProperties: (*resources.AzureAPIProperty)(nil),
                                OneOf:                nil,
                                Ref:                  "",
                                Const:                nil,
                                Minimum:              (*float64)(nil),
                                Maximum:              (*float64)(nil),
                                MinLength:            (*int64)(nil),
                                MaxLength:            (*int64)(nil),
                                Pattern:              "",
                                SdkName:              "",
                                Containers:           nil,
                                ForceNew:             true,
                                AutoName:             "",
                                IsStringSet:          false,
                                Default:              nil,
                            },
                        },
                        RequiredProperties: {"resourceGroupName", "accountName", "containerName", "blobName", "type"},
                    },
                },
            },
            Response:             {},
            Singleton:            false,
            DefaultBody:          {},
            PutAsyncStyle:        "",
            DeleteAsyncStyle:     "",
            ReadMethod:           "",
            ReadPath:             "",
            AutoLocationDisabled: false,
        },
        "azure-native:storage:StorageAccountStaticWebsite": {
            APIVersion:    "",
            Path:          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/staticWebsite",
            UpdateMethod:  "",
            PutParameters: {
                {
                    Name:       "subscriptionId",
                    Location:   "path",
                    IsRequired: true,
                    Value:      &resources.AzureAPIProperty{
                        Type:                 "string",
                        Items:                (*resources.AzureAPIProperty)(nil),
                        AdditionalProperties: (*resources.AzureAPIProperty)(nil),
                        OneOf:                nil,
                        Ref:                  "",
                        Const:                nil,
                        Minimum:              (*float64)(nil),
                        Maximum:              (*float64)(nil),
                        MinLength:            (*int64)(nil),
                        MaxLength:            (*int64)(nil),
                        Pattern:              "",
                        SdkName:              "",
                        Containers:           nil,
                        ForceNew:             false,
                        AutoName:             "",
                        IsStringSet:          false,
                        Default:              nil,
                    },
                    Body: (*resources.AzureAPIType)(nil),
                },
                {
                    Name:       "resourceGroupName",
                    Location:   "path",
                    IsRequired: true,
                    Value:      &resources.AzureAPIProperty{
                        Type:                 "string",
                        Items:                (*resources.AzureAPIProperty)(nil),
                        AdditionalProperties: (*resources.AzureAPIProperty)(nil),
                        OneOf:                nil,
                        Ref:                  "",
                        Const:                nil,
                        Minimum:              (*float64)(nil),
                        Maximum:              (*float64)(nil),
                        MinLength:            (*int64)(nil),
                        MaxLength:            (*int64)(nil),
                        Pattern:              "",
                        SdkName:              "",
                        Containers:           nil,
                        ForceNew:             false,
                        AutoName:             "",
                        IsStringSet:          false,
                        Default:              nil,
                    },
                    Body: (*resources.AzureAPIType)(nil),
                },
                {
                    Name:       "accountName",
                    Location:   "path",
                    IsRequired: true,
                    Value:      &resources.AzureAPIProperty{
                        Type:                 "string",
                        Items:                (*resources.AzureAPIProperty)(nil),
                        AdditionalProperties: (*resources.AzureAPIProperty)(nil),
                        OneOf:                nil,
                        Ref:                  "",
                        Const:                nil,
                        Minimum:              (*float64)(nil),
                        Maximum:              (*float64)(nil),
                        MinLength:            (*int64)(nil),
                        MaxLength:            (*int64)(nil),
                        Pattern:              "",
                        SdkName:              "",
                        Containers:           nil,
                        ForceNew:             false,
                        AutoName:             "",
                        IsStringSet:          false,
                        Default:              nil,
                    },
                    Body: (*resources.AzureAPIType)(nil),
                },
                {
                    Name:       "properties",
                    Location:   "body",
                    IsRequired: false,
                    Value:      (*resources.AzureAPIProperty)(nil),
                    Body:       &resources.AzureAPIType{
                        Properties: {
                            "error404Document": {
                                Type:                 "string",
                                Items:                (*resources.AzureAPIProperty)(nil),
                                AdditionalProperties: (*resources.AzureAPIProperty)(nil),
                                OneOf:                nil,
                                Ref:                  "",
                                Const:                nil,
                                Minimum:              (*float64)(nil),
                                Maximum:              (*float64)(nil),
                                MinLength:            (*int64)(nil),
                                MaxLength:            (*int64)(nil),
                                Pattern:              "",
                                SdkName:              "",
                                Containers:           nil,
                                ForceNew:             false,
                                AutoName:             "",
                                IsStringSet:          false,
                                Default:              nil,
                            },
                            "indexDocument": {
                                Type:                 "string",
                                Items:                (*resources.AzureAPIProperty)(nil),
                                AdditionalProperties: (*resources.AzureAPIProperty)(nil),
                                OneOf:                nil,
                                Ref:                  "",
                                Const:                nil,
                                Minimum:              (*float64)(nil),
                                Maximum:              (*float64)(nil),
                                MinLength:            (*int64)(nil),
                                MaxLength:            (*int64)(nil),
                                Pattern:              "",
                                SdkName:              "",
                                Containers:           nil,
                                ForceNew:             false,
                                AutoName:             "",
                                IsStringSet:          false,
                                Default:              nil,
                            },
                        },
                        RequiredProperties: nil,
                    },
                },
            },
            Response:             {},
            Singleton:            false,
            DefaultBody:          {},
            PutAsyncStyle:        "",
            DeleteAsyncStyle:     "",
            ReadMethod:           "",
            ReadPath:             "",
            AutoLocationDisabled: false,
        },
    },
    Invokes: {
    },
}
---
